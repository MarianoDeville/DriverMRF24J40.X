

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Mar 25 14:28:09 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 13/12/2024 GMT
    36                           ; 
    37                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F46K20 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000FE0                     bsr             equ	4064
    70   000FE9                     fsr0            equ	4073
    71   000FEA                     fsr0h           equ	4074
    72   000FE9                     fsr0l           equ	4073
    73   000FE1                     fsr1            equ	4065
    74   000FE2                     fsr1h           equ	4066
    75   000FE1                     fsr1l           equ	4065
    76   000FD9                     fsr2            equ	4057
    77   000FDA                     fsr2h           equ	4058
    78   000FD9                     fsr2l           equ	4057
    79   000FEF                     indf0           equ	4079
    80   000FE7                     indf1           equ	4071
    81   000FDF                     indf2           equ	4063
    82   000FF2                     intcon          equ	4082
    83   000000                     nvmcon          equ	0
    84   000FF9                     pcl             equ	4089
    85   000FFA                     pclath          equ	4090
    86   000FFB                     pclatu          equ	4091
    87   000FEB                     plusw0          equ	4075
    88   000FE3                     plusw1          equ	4067
    89   000FDB                     plusw2          equ	4059
    90   000FED                     postdec0        equ	4077
    91   000FE5                     postdec1        equ	4069
    92   000FDD                     postdec2        equ	4061
    93   000FEE                     postinc0        equ	4078
    94   000FE6                     postinc1        equ	4070
    95   000FDE                     postinc2        equ	4062
    96   000FEC                     preinc0         equ	4076
    97   000FE4                     preinc1         equ	4068
    98   000FDC                     preinc2         equ	4060
    99   000FF3                     prod            equ	4083
   100   000FF4                     prodh           equ	4084
   101   000FF3                     prodl           equ	4083
   102   000FD8                     status          equ	4056
   103   000FF5                     tablat          equ	4085
   104   000FF6                     tblptr          equ	4086
   105   000FF7                     tblptrh         equ	4087
   106   000FF6                     tblptrl         equ	4086
   107   000FF8                     tblptru         equ	4088
   108   000FFD                     tosl            equ	4093
   109   000FE8                     wreg            equ	4072
   110   000F77                     SSPMSK          equ	3959	;# 
   111   000F78                     SLRCON          equ	3960	;# 
   112   000F79                     CM2CON1         equ	3961	;# 
   113   000F7A                     CM2CON0         equ	3962	;# 
   114   000F7B                     CM1CON0         equ	3963	;# 
   115   000F7C                     WPUB            equ	3964	;# 
   116   000F7D                     IOCB            equ	3965	;# 
   117   000F7E                     ANSEL           equ	3966	;# 
   118   000F7F                     ANSELH          equ	3967	;# 
   119   000F80                     PORTA           equ	3968	;# 
   120   000F81                     PORTB           equ	3969	;# 
   121   000F82                     PORTC           equ	3970	;# 
   122   000F83                     PORTD           equ	3971	;# 
   123   000F84                     PORTE           equ	3972	;# 
   124   000F89                     LATA            equ	3977	;# 
   125   000F8A                     LATB            equ	3978	;# 
   126   000F8B                     LATC            equ	3979	;# 
   127   000F8C                     LATD            equ	3980	;# 
   128   000F8D                     LATE            equ	3981	;# 
   129   000F92                     TRISA           equ	3986	;# 
   130   000F92                     DDRA            equ	3986	;# 
   131   000F93                     TRISB           equ	3987	;# 
   132   000F93                     DDRB            equ	3987	;# 
   133   000F94                     TRISC           equ	3988	;# 
   134   000F94                     DDRC            equ	3988	;# 
   135   000F95                     TRISD           equ	3989	;# 
   136   000F95                     DDRD            equ	3989	;# 
   137   000F96                     TRISE           equ	3990	;# 
   138   000F96                     DDRE            equ	3990	;# 
   139   000F9B                     OSCTUNE         equ	3995	;# 
   140   000F9D                     PIE1            equ	3997	;# 
   141   000F9E                     PIR1            equ	3998	;# 
   142   000F9F                     IPR1            equ	3999	;# 
   143   000FA0                     PIE2            equ	4000	;# 
   144   000FA1                     PIR2            equ	4001	;# 
   145   000FA2                     IPR2            equ	4002	;# 
   146   000FA6                     EECON1          equ	4006	;# 
   147   000FA7                     EECON2          equ	4007	;# 
   148   000FA8                     EEDATA          equ	4008	;# 
   149   000FA9                     EEADR           equ	4009	;# 
   150   000FAA                     EEADRH          equ	4010	;# 
   151   000FAB                     RCSTA           equ	4011	;# 
   152   000FAB                     RCSTA1          equ	4011	;# 
   153   000FAC                     TXSTA           equ	4012	;# 
   154   000FAC                     TXSTA1          equ	4012	;# 
   155   000FAD                     TXREG           equ	4013	;# 
   156   000FAD                     TXREG1          equ	4013	;# 
   157   000FAE                     RCREG           equ	4014	;# 
   158   000FAE                     RCREG1          equ	4014	;# 
   159   000FAF                     SPBRG           equ	4015	;# 
   160   000FAF                     SPBRG1          equ	4015	;# 
   161   000FB0                     SPBRGH          equ	4016	;# 
   162   000FB1                     T3CON           equ	4017	;# 
   163   000FB2                     TMR3            equ	4018	;# 
   164   000FB2                     TMR3L           equ	4018	;# 
   165   000FB3                     TMR3H           equ	4019	;# 
   166   000FB4                     CVRCON2         equ	4020	;# 
   167   000FB5                     CVRCON          equ	4021	;# 
   168   000FB6                     ECCP1AS         equ	4022	;# 
   169   000FB7                     PWM1CON         equ	4023	;# 
   170   000FB8                     BAUDCON         equ	4024	;# 
   171   000FB8                     BAUDCTL         equ	4024	;# 
   172   000FB9                     PSTRCON         equ	4025	;# 
   173   000FBA                     CCP2CON         equ	4026	;# 
   174   000FBB                     CCPR2           equ	4027	;# 
   175   000FBB                     CCPR2L          equ	4027	;# 
   176   000FBC                     CCPR2H          equ	4028	;# 
   177   000FBD                     CCP1CON         equ	4029	;# 
   178   000FBE                     CCPR1           equ	4030	;# 
   179   000FBE                     CCPR1L          equ	4030	;# 
   180   000FBF                     CCPR1H          equ	4031	;# 
   181   000FC0                     ADCON2          equ	4032	;# 
   182   000FC1                     ADCON1          equ	4033	;# 
   183   000FC2                     ADCON0          equ	4034	;# 
   184   000FC3                     ADRES           equ	4035	;# 
   185   000FC3                     ADRESL          equ	4035	;# 
   186   000FC4                     ADRESH          equ	4036	;# 
   187   000FC5                     SSPCON2         equ	4037	;# 
   188   000FC6                     SSPCON1         equ	4038	;# 
   189   000FC7                     SSPSTAT         equ	4039	;# 
   190   000FC8                     SSPADD          equ	4040	;# 
   191   000FC9                     SSPBUF          equ	4041	;# 
   192   000FCA                     T2CON           equ	4042	;# 
   193   000FCB                     PR2             equ	4043	;# 
   194   000FCB                     MEMCON          equ	4043	;# 
   195   000FCC                     TMR2            equ	4044	;# 
   196   000FCD                     T1CON           equ	4045	;# 
   197   000FCE                     TMR1            equ	4046	;# 
   198   000FCE                     TMR1L           equ	4046	;# 
   199   000FCF                     TMR1H           equ	4047	;# 
   200   000FD0                     RCON            equ	4048	;# 
   201   000FD1                     WDTCON          equ	4049	;# 
   202   000FD2                     HLVDCON         equ	4050	;# 
   203   000FD2                     LVDCON          equ	4050	;# 
   204   000FD3                     OSCCON          equ	4051	;# 
   205   000FD5                     T0CON           equ	4053	;# 
   206   000FD6                     TMR0            equ	4054	;# 
   207   000FD6                     TMR0L           equ	4054	;# 
   208   000FD7                     TMR0H           equ	4055	;# 
   209   000FD8                     STATUS          equ	4056	;# 
   210   000FD9                     FSR2            equ	4057	;# 
   211   000FD9                     FSR2L           equ	4057	;# 
   212   000FDA                     FSR2H           equ	4058	;# 
   213   000FDB                     PLUSW2          equ	4059	;# 
   214   000FDC                     PREINC2         equ	4060	;# 
   215   000FDD                     POSTDEC2        equ	4061	;# 
   216   000FDE                     POSTINC2        equ	4062	;# 
   217   000FDF                     INDF2           equ	4063	;# 
   218   000FE0                     BSR             equ	4064	;# 
   219   000FE1                     FSR1            equ	4065	;# 
   220   000FE1                     FSR1L           equ	4065	;# 
   221   000FE2                     FSR1H           equ	4066	;# 
   222   000FE3                     PLUSW1          equ	4067	;# 
   223   000FE4                     PREINC1         equ	4068	;# 
   224   000FE5                     POSTDEC1        equ	4069	;# 
   225   000FE6                     POSTINC1        equ	4070	;# 
   226   000FE7                     INDF1           equ	4071	;# 
   227   000FE8                     WREG            equ	4072	;# 
   228   000FE9                     FSR0            equ	4073	;# 
   229   000FE9                     FSR0L           equ	4073	;# 
   230   000FEA                     FSR0H           equ	4074	;# 
   231   000FEB                     PLUSW0          equ	4075	;# 
   232   000FEC                     PREINC0         equ	4076	;# 
   233   000FED                     POSTDEC0        equ	4077	;# 
   234   000FEE                     POSTINC0        equ	4078	;# 
   235   000FEF                     INDF0           equ	4079	;# 
   236   000FF0                     INTCON3         equ	4080	;# 
   237   000FF1                     INTCON2         equ	4081	;# 
   238   000FF2                     INTCON          equ	4082	;# 
   239   000FF3                     PROD            equ	4083	;# 
   240   000FF3                     PRODL           equ	4083	;# 
   241   000FF4                     PRODH           equ	4084	;# 
   242   000FF5                     TABLAT          equ	4085	;# 
   243   000FF6                     TBLPTR          equ	4086	;# 
   244   000FF6                     TBLPTRL         equ	4086	;# 
   245   000FF7                     TBLPTRH         equ	4087	;# 
   246   000FF8                     TBLPTRU         equ	4088	;# 
   247   000FF9                     PCLAT           equ	4089	;# 
   248   000FF9                     PC              equ	4089	;# 
   249   000FF9                     PCL             equ	4089	;# 
   250   000FFA                     PCLATH          equ	4090	;# 
   251   000FFB                     PCLATU          equ	4091	;# 
   252   000FFC                     STKPTR          equ	4092	;# 
   253   000FFD                     TOS             equ	4093	;# 
   254   000FFD                     TOSL            equ	4093	;# 
   255   000FFE                     TOSH            equ	4094	;# 
   256   000FFF                     TOSU            equ	4095	;# 
   257   000F77                     SSPMSK          equ	3959	;# 
   258   000F78                     SLRCON          equ	3960	;# 
   259   000F79                     CM2CON1         equ	3961	;# 
   260   000F7A                     CM2CON0         equ	3962	;# 
   261   000F7B                     CM1CON0         equ	3963	;# 
   262   000F7C                     WPUB            equ	3964	;# 
   263   000F7D                     IOCB            equ	3965	;# 
   264   000F7E                     ANSEL           equ	3966	;# 
   265   000F7F                     ANSELH          equ	3967	;# 
   266   000F80                     PORTA           equ	3968	;# 
   267   000F81                     PORTB           equ	3969	;# 
   268   000F82                     PORTC           equ	3970	;# 
   269   000F83                     PORTD           equ	3971	;# 
   270   000F84                     PORTE           equ	3972	;# 
   271   000F89                     LATA            equ	3977	;# 
   272   000F8A                     LATB            equ	3978	;# 
   273   000F8B                     LATC            equ	3979	;# 
   274   000F8C                     LATD            equ	3980	;# 
   275   000F8D                     LATE            equ	3981	;# 
   276   000F92                     TRISA           equ	3986	;# 
   277   000F92                     DDRA            equ	3986	;# 
   278   000F93                     TRISB           equ	3987	;# 
   279   000F93                     DDRB            equ	3987	;# 
   280   000F94                     TRISC           equ	3988	;# 
   281   000F94                     DDRC            equ	3988	;# 
   282   000F95                     TRISD           equ	3989	;# 
   283   000F95                     DDRD            equ	3989	;# 
   284   000F96                     TRISE           equ	3990	;# 
   285   000F96                     DDRE            equ	3990	;# 
   286   000F9B                     OSCTUNE         equ	3995	;# 
   287   000F9D                     PIE1            equ	3997	;# 
   288   000F9E                     PIR1            equ	3998	;# 
   289   000F9F                     IPR1            equ	3999	;# 
   290   000FA0                     PIE2            equ	4000	;# 
   291   000FA1                     PIR2            equ	4001	;# 
   292   000FA2                     IPR2            equ	4002	;# 
   293   000FA6                     EECON1          equ	4006	;# 
   294   000FA7                     EECON2          equ	4007	;# 
   295   000FA8                     EEDATA          equ	4008	;# 
   296   000FA9                     EEADR           equ	4009	;# 
   297   000FAA                     EEADRH          equ	4010	;# 
   298   000FAB                     RCSTA           equ	4011	;# 
   299   000FAB                     RCSTA1          equ	4011	;# 
   300   000FAC                     TXSTA           equ	4012	;# 
   301   000FAC                     TXSTA1          equ	4012	;# 
   302   000FAD                     TXREG           equ	4013	;# 
   303   000FAD                     TXREG1          equ	4013	;# 
   304   000FAE                     RCREG           equ	4014	;# 
   305   000FAE                     RCREG1          equ	4014	;# 
   306   000FAF                     SPBRG           equ	4015	;# 
   307   000FAF                     SPBRG1          equ	4015	;# 
   308   000FB0                     SPBRGH          equ	4016	;# 
   309   000FB1                     T3CON           equ	4017	;# 
   310   000FB2                     TMR3            equ	4018	;# 
   311   000FB2                     TMR3L           equ	4018	;# 
   312   000FB3                     TMR3H           equ	4019	;# 
   313   000FB4                     CVRCON2         equ	4020	;# 
   314   000FB5                     CVRCON          equ	4021	;# 
   315   000FB6                     ECCP1AS         equ	4022	;# 
   316   000FB7                     PWM1CON         equ	4023	;# 
   317   000FB8                     BAUDCON         equ	4024	;# 
   318   000FB8                     BAUDCTL         equ	4024	;# 
   319   000FB9                     PSTRCON         equ	4025	;# 
   320   000FBA                     CCP2CON         equ	4026	;# 
   321   000FBB                     CCPR2           equ	4027	;# 
   322   000FBB                     CCPR2L          equ	4027	;# 
   323   000FBC                     CCPR2H          equ	4028	;# 
   324   000FBD                     CCP1CON         equ	4029	;# 
   325   000FBE                     CCPR1           equ	4030	;# 
   326   000FBE                     CCPR1L          equ	4030	;# 
   327   000FBF                     CCPR1H          equ	4031	;# 
   328   000FC0                     ADCON2          equ	4032	;# 
   329   000FC1                     ADCON1          equ	4033	;# 
   330   000FC2                     ADCON0          equ	4034	;# 
   331   000FC3                     ADRES           equ	4035	;# 
   332   000FC3                     ADRESL          equ	4035	;# 
   333   000FC4                     ADRESH          equ	4036	;# 
   334   000FC5                     SSPCON2         equ	4037	;# 
   335   000FC6                     SSPCON1         equ	4038	;# 
   336   000FC7                     SSPSTAT         equ	4039	;# 
   337   000FC8                     SSPADD          equ	4040	;# 
   338   000FC9                     SSPBUF          equ	4041	;# 
   339   000FCA                     T2CON           equ	4042	;# 
   340   000FCB                     PR2             equ	4043	;# 
   341   000FCB                     MEMCON          equ	4043	;# 
   342   000FCC                     TMR2            equ	4044	;# 
   343   000FCD                     T1CON           equ	4045	;# 
   344   000FCE                     TMR1            equ	4046	;# 
   345   000FCE                     TMR1L           equ	4046	;# 
   346   000FCF                     TMR1H           equ	4047	;# 
   347   000FD0                     RCON            equ	4048	;# 
   348   000FD1                     WDTCON          equ	4049	;# 
   349   000FD2                     HLVDCON         equ	4050	;# 
   350   000FD2                     LVDCON          equ	4050	;# 
   351   000FD3                     OSCCON          equ	4051	;# 
   352   000FD5                     T0CON           equ	4053	;# 
   353   000FD6                     TMR0            equ	4054	;# 
   354   000FD6                     TMR0L           equ	4054	;# 
   355   000FD7                     TMR0H           equ	4055	;# 
   356   000FD8                     STATUS          equ	4056	;# 
   357   000FD9                     FSR2            equ	4057	;# 
   358   000FD9                     FSR2L           equ	4057	;# 
   359   000FDA                     FSR2H           equ	4058	;# 
   360   000FDB                     PLUSW2          equ	4059	;# 
   361   000FDC                     PREINC2         equ	4060	;# 
   362   000FDD                     POSTDEC2        equ	4061	;# 
   363   000FDE                     POSTINC2        equ	4062	;# 
   364   000FDF                     INDF2           equ	4063	;# 
   365   000FE0                     BSR             equ	4064	;# 
   366   000FE1                     FSR1            equ	4065	;# 
   367   000FE1                     FSR1L           equ	4065	;# 
   368   000FE2                     FSR1H           equ	4066	;# 
   369   000FE3                     PLUSW1          equ	4067	;# 
   370   000FE4                     PREINC1         equ	4068	;# 
   371   000FE5                     POSTDEC1        equ	4069	;# 
   372   000FE6                     POSTINC1        equ	4070	;# 
   373   000FE7                     INDF1           equ	4071	;# 
   374   000FE8                     WREG            equ	4072	;# 
   375   000FE9                     FSR0            equ	4073	;# 
   376   000FE9                     FSR0L           equ	4073	;# 
   377   000FEA                     FSR0H           equ	4074	;# 
   378   000FEB                     PLUSW0          equ	4075	;# 
   379   000FEC                     PREINC0         equ	4076	;# 
   380   000FED                     POSTDEC0        equ	4077	;# 
   381   000FEE                     POSTINC0        equ	4078	;# 
   382   000FEF                     INDF0           equ	4079	;# 
   383   000FF0                     INTCON3         equ	4080	;# 
   384   000FF1                     INTCON2         equ	4081	;# 
   385   000FF2                     INTCON          equ	4082	;# 
   386   000FF3                     PROD            equ	4083	;# 
   387   000FF3                     PRODL           equ	4083	;# 
   388   000FF4                     PRODH           equ	4084	;# 
   389   000FF5                     TABLAT          equ	4085	;# 
   390   000FF6                     TBLPTR          equ	4086	;# 
   391   000FF6                     TBLPTRL         equ	4086	;# 
   392   000FF7                     TBLPTRH         equ	4087	;# 
   393   000FF8                     TBLPTRU         equ	4088	;# 
   394   000FF9                     PCLAT           equ	4089	;# 
   395   000FF9                     PC              equ	4089	;# 
   396   000FF9                     PCL             equ	4089	;# 
   397   000FFA                     PCLATH          equ	4090	;# 
   398   000FFB                     PCLATU          equ	4091	;# 
   399   000FFC                     STKPTR          equ	4092	;# 
   400   000FFD                     TOS             equ	4093	;# 
   401   000FFD                     TOSL            equ	4093	;# 
   402   000FFE                     TOSH            equ	4094	;# 
   403   000FFF                     TOSU            equ	4095	;# 
   404   000F77                     SSPMSK          equ	3959	;# 
   405   000F78                     SLRCON          equ	3960	;# 
   406   000F79                     CM2CON1         equ	3961	;# 
   407   000F7A                     CM2CON0         equ	3962	;# 
   408   000F7B                     CM1CON0         equ	3963	;# 
   409   000F7C                     WPUB            equ	3964	;# 
   410   000F7D                     IOCB            equ	3965	;# 
   411   000F7E                     ANSEL           equ	3966	;# 
   412   000F7F                     ANSELH          equ	3967	;# 
   413   000F80                     PORTA           equ	3968	;# 
   414   000F81                     PORTB           equ	3969	;# 
   415   000F82                     PORTC           equ	3970	;# 
   416   000F83                     PORTD           equ	3971	;# 
   417   000F84                     PORTE           equ	3972	;# 
   418   000F89                     LATA            equ	3977	;# 
   419   000F8A                     LATB            equ	3978	;# 
   420   000F8B                     LATC            equ	3979	;# 
   421   000F8C                     LATD            equ	3980	;# 
   422   000F8D                     LATE            equ	3981	;# 
   423   000F92                     TRISA           equ	3986	;# 
   424   000F92                     DDRA            equ	3986	;# 
   425   000F93                     TRISB           equ	3987	;# 
   426   000F93                     DDRB            equ	3987	;# 
   427   000F94                     TRISC           equ	3988	;# 
   428   000F94                     DDRC            equ	3988	;# 
   429   000F95                     TRISD           equ	3989	;# 
   430   000F95                     DDRD            equ	3989	;# 
   431   000F96                     TRISE           equ	3990	;# 
   432   000F96                     DDRE            equ	3990	;# 
   433   000F9B                     OSCTUNE         equ	3995	;# 
   434   000F9D                     PIE1            equ	3997	;# 
   435   000F9E                     PIR1            equ	3998	;# 
   436   000F9F                     IPR1            equ	3999	;# 
   437   000FA0                     PIE2            equ	4000	;# 
   438   000FA1                     PIR2            equ	4001	;# 
   439   000FA2                     IPR2            equ	4002	;# 
   440   000FA6                     EECON1          equ	4006	;# 
   441   000FA7                     EECON2          equ	4007	;# 
   442   000FA8                     EEDATA          equ	4008	;# 
   443   000FA9                     EEADR           equ	4009	;# 
   444   000FAA                     EEADRH          equ	4010	;# 
   445   000FAB                     RCSTA           equ	4011	;# 
   446   000FAB                     RCSTA1          equ	4011	;# 
   447   000FAC                     TXSTA           equ	4012	;# 
   448   000FAC                     TXSTA1          equ	4012	;# 
   449   000FAD                     TXREG           equ	4013	;# 
   450   000FAD                     TXREG1          equ	4013	;# 
   451   000FAE                     RCREG           equ	4014	;# 
   452   000FAE                     RCREG1          equ	4014	;# 
   453   000FAF                     SPBRG           equ	4015	;# 
   454   000FAF                     SPBRG1          equ	4015	;# 
   455   000FB0                     SPBRGH          equ	4016	;# 
   456   000FB1                     T3CON           equ	4017	;# 
   457   000FB2                     TMR3            equ	4018	;# 
   458   000FB2                     TMR3L           equ	4018	;# 
   459   000FB3                     TMR3H           equ	4019	;# 
   460   000FB4                     CVRCON2         equ	4020	;# 
   461   000FB5                     CVRCON          equ	4021	;# 
   462   000FB6                     ECCP1AS         equ	4022	;# 
   463   000FB7                     PWM1CON         equ	4023	;# 
   464   000FB8                     BAUDCON         equ	4024	;# 
   465   000FB8                     BAUDCTL         equ	4024	;# 
   466   000FB9                     PSTRCON         equ	4025	;# 
   467   000FBA                     CCP2CON         equ	4026	;# 
   468   000FBB                     CCPR2           equ	4027	;# 
   469   000FBB                     CCPR2L          equ	4027	;# 
   470   000FBC                     CCPR2H          equ	4028	;# 
   471   000FBD                     CCP1CON         equ	4029	;# 
   472   000FBE                     CCPR1           equ	4030	;# 
   473   000FBE                     CCPR1L          equ	4030	;# 
   474   000FBF                     CCPR1H          equ	4031	;# 
   475   000FC0                     ADCON2          equ	4032	;# 
   476   000FC1                     ADCON1          equ	4033	;# 
   477   000FC2                     ADCON0          equ	4034	;# 
   478   000FC3                     ADRES           equ	4035	;# 
   479   000FC3                     ADRESL          equ	4035	;# 
   480   000FC4                     ADRESH          equ	4036	;# 
   481   000FC5                     SSPCON2         equ	4037	;# 
   482   000FC6                     SSPCON1         equ	4038	;# 
   483   000FC7                     SSPSTAT         equ	4039	;# 
   484   000FC8                     SSPADD          equ	4040	;# 
   485   000FC9                     SSPBUF          equ	4041	;# 
   486   000FCA                     T2CON           equ	4042	;# 
   487   000FCB                     PR2             equ	4043	;# 
   488   000FCB                     MEMCON          equ	4043	;# 
   489   000FCC                     TMR2            equ	4044	;# 
   490   000FCD                     T1CON           equ	4045	;# 
   491   000FCE                     TMR1            equ	4046	;# 
   492   000FCE                     TMR1L           equ	4046	;# 
   493   000FCF                     TMR1H           equ	4047	;# 
   494   000FD0                     RCON            equ	4048	;# 
   495   000FD1                     WDTCON          equ	4049	;# 
   496   000FD2                     HLVDCON         equ	4050	;# 
   497   000FD2                     LVDCON          equ	4050	;# 
   498   000FD3                     OSCCON          equ	4051	;# 
   499   000FD5                     T0CON           equ	4053	;# 
   500   000FD6                     TMR0            equ	4054	;# 
   501   000FD6                     TMR0L           equ	4054	;# 
   502   000FD7                     TMR0H           equ	4055	;# 
   503   000FD8                     STATUS          equ	4056	;# 
   504   000FD9                     FSR2            equ	4057	;# 
   505   000FD9                     FSR2L           equ	4057	;# 
   506   000FDA                     FSR2H           equ	4058	;# 
   507   000FDB                     PLUSW2          equ	4059	;# 
   508   000FDC                     PREINC2         equ	4060	;# 
   509   000FDD                     POSTDEC2        equ	4061	;# 
   510   000FDE                     POSTINC2        equ	4062	;# 
   511   000FDF                     INDF2           equ	4063	;# 
   512   000FE0                     BSR             equ	4064	;# 
   513   000FE1                     FSR1            equ	4065	;# 
   514   000FE1                     FSR1L           equ	4065	;# 
   515   000FE2                     FSR1H           equ	4066	;# 
   516   000FE3                     PLUSW1          equ	4067	;# 
   517   000FE4                     PREINC1         equ	4068	;# 
   518   000FE5                     POSTDEC1        equ	4069	;# 
   519   000FE6                     POSTINC1        equ	4070	;# 
   520   000FE7                     INDF1           equ	4071	;# 
   521   000FE8                     WREG            equ	4072	;# 
   522   000FE9                     FSR0            equ	4073	;# 
   523   000FE9                     FSR0L           equ	4073	;# 
   524   000FEA                     FSR0H           equ	4074	;# 
   525   000FEB                     PLUSW0          equ	4075	;# 
   526   000FEC                     PREINC0         equ	4076	;# 
   527   000FED                     POSTDEC0        equ	4077	;# 
   528   000FEE                     POSTINC0        equ	4078	;# 
   529   000FEF                     INDF0           equ	4079	;# 
   530   000FF0                     INTCON3         equ	4080	;# 
   531   000FF1                     INTCON2         equ	4081	;# 
   532   000FF2                     INTCON          equ	4082	;# 
   533   000FF3                     PROD            equ	4083	;# 
   534   000FF3                     PRODL           equ	4083	;# 
   535   000FF4                     PRODH           equ	4084	;# 
   536   000FF5                     TABLAT          equ	4085	;# 
   537   000FF6                     TBLPTR          equ	4086	;# 
   538   000FF6                     TBLPTRL         equ	4086	;# 
   539   000FF7                     TBLPTRH         equ	4087	;# 
   540   000FF8                     TBLPTRU         equ	4088	;# 
   541   000FF9                     PCLAT           equ	4089	;# 
   542   000FF9                     PC              equ	4089	;# 
   543   000FF9                     PCL             equ	4089	;# 
   544   000FFA                     PCLATH          equ	4090	;# 
   545   000FFB                     PCLATU          equ	4091	;# 
   546   000FFC                     STKPTR          equ	4092	;# 
   547   000FFD                     TOS             equ	4093	;# 
   548   000FFD                     TOSL            equ	4093	;# 
   549   000FFE                     TOSH            equ	4094	;# 
   550   000FFF                     TOSU            equ	4095	;# 
   551   000F77                     SSPMSK          equ	3959	;# 
   552   000F78                     SLRCON          equ	3960	;# 
   553   000F79                     CM2CON1         equ	3961	;# 
   554   000F7A                     CM2CON0         equ	3962	;# 
   555   000F7B                     CM1CON0         equ	3963	;# 
   556   000F7C                     WPUB            equ	3964	;# 
   557   000F7D                     IOCB            equ	3965	;# 
   558   000F7E                     ANSEL           equ	3966	;# 
   559   000F7F                     ANSELH          equ	3967	;# 
   560   000F80                     PORTA           equ	3968	;# 
   561   000F81                     PORTB           equ	3969	;# 
   562   000F82                     PORTC           equ	3970	;# 
   563   000F83                     PORTD           equ	3971	;# 
   564   000F84                     PORTE           equ	3972	;# 
   565   000F89                     LATA            equ	3977	;# 
   566   000F8A                     LATB            equ	3978	;# 
   567   000F8B                     LATC            equ	3979	;# 
   568   000F8C                     LATD            equ	3980	;# 
   569   000F8D                     LATE            equ	3981	;# 
   570   000F92                     TRISA           equ	3986	;# 
   571   000F92                     DDRA            equ	3986	;# 
   572   000F93                     TRISB           equ	3987	;# 
   573   000F93                     DDRB            equ	3987	;# 
   574   000F94                     TRISC           equ	3988	;# 
   575   000F94                     DDRC            equ	3988	;# 
   576   000F95                     TRISD           equ	3989	;# 
   577   000F95                     DDRD            equ	3989	;# 
   578   000F96                     TRISE           equ	3990	;# 
   579   000F96                     DDRE            equ	3990	;# 
   580   000F9B                     OSCTUNE         equ	3995	;# 
   581   000F9D                     PIE1            equ	3997	;# 
   582   000F9E                     PIR1            equ	3998	;# 
   583   000F9F                     IPR1            equ	3999	;# 
   584   000FA0                     PIE2            equ	4000	;# 
   585   000FA1                     PIR2            equ	4001	;# 
   586   000FA2                     IPR2            equ	4002	;# 
   587   000FA6                     EECON1          equ	4006	;# 
   588   000FA7                     EECON2          equ	4007	;# 
   589   000FA8                     EEDATA          equ	4008	;# 
   590   000FA9                     EEADR           equ	4009	;# 
   591   000FAA                     EEADRH          equ	4010	;# 
   592   000FAB                     RCSTA           equ	4011	;# 
   593   000FAB                     RCSTA1          equ	4011	;# 
   594   000FAC                     TXSTA           equ	4012	;# 
   595   000FAC                     TXSTA1          equ	4012	;# 
   596   000FAD                     TXREG           equ	4013	;# 
   597   000FAD                     TXREG1          equ	4013	;# 
   598   000FAE                     RCREG           equ	4014	;# 
   599   000FAE                     RCREG1          equ	4014	;# 
   600   000FAF                     SPBRG           equ	4015	;# 
   601   000FAF                     SPBRG1          equ	4015	;# 
   602   000FB0                     SPBRGH          equ	4016	;# 
   603   000FB1                     T3CON           equ	4017	;# 
   604   000FB2                     TMR3            equ	4018	;# 
   605   000FB2                     TMR3L           equ	4018	;# 
   606   000FB3                     TMR3H           equ	4019	;# 
   607   000FB4                     CVRCON2         equ	4020	;# 
   608   000FB5                     CVRCON          equ	4021	;# 
   609   000FB6                     ECCP1AS         equ	4022	;# 
   610   000FB7                     PWM1CON         equ	4023	;# 
   611   000FB8                     BAUDCON         equ	4024	;# 
   612   000FB8                     BAUDCTL         equ	4024	;# 
   613   000FB9                     PSTRCON         equ	4025	;# 
   614   000FBA                     CCP2CON         equ	4026	;# 
   615   000FBB                     CCPR2           equ	4027	;# 
   616   000FBB                     CCPR2L          equ	4027	;# 
   617   000FBC                     CCPR2H          equ	4028	;# 
   618   000FBD                     CCP1CON         equ	4029	;# 
   619   000FBE                     CCPR1           equ	4030	;# 
   620   000FBE                     CCPR1L          equ	4030	;# 
   621   000FBF                     CCPR1H          equ	4031	;# 
   622   000FC0                     ADCON2          equ	4032	;# 
   623   000FC1                     ADCON1          equ	4033	;# 
   624   000FC2                     ADCON0          equ	4034	;# 
   625   000FC3                     ADRES           equ	4035	;# 
   626   000FC3                     ADRESL          equ	4035	;# 
   627   000FC4                     ADRESH          equ	4036	;# 
   628   000FC5                     SSPCON2         equ	4037	;# 
   629   000FC6                     SSPCON1         equ	4038	;# 
   630   000FC7                     SSPSTAT         equ	4039	;# 
   631   000FC8                     SSPADD          equ	4040	;# 
   632   000FC9                     SSPBUF          equ	4041	;# 
   633   000FCA                     T2CON           equ	4042	;# 
   634   000FCB                     PR2             equ	4043	;# 
   635   000FCB                     MEMCON          equ	4043	;# 
   636   000FCC                     TMR2            equ	4044	;# 
   637   000FCD                     T1CON           equ	4045	;# 
   638   000FCE                     TMR1            equ	4046	;# 
   639   000FCE                     TMR1L           equ	4046	;# 
   640   000FCF                     TMR1H           equ	4047	;# 
   641   000FD0                     RCON            equ	4048	;# 
   642   000FD1                     WDTCON          equ	4049	;# 
   643   000FD2                     HLVDCON         equ	4050	;# 
   644   000FD2                     LVDCON          equ	4050	;# 
   645   000FD3                     OSCCON          equ	4051	;# 
   646   000FD5                     T0CON           equ	4053	;# 
   647   000FD6                     TMR0            equ	4054	;# 
   648   000FD6                     TMR0L           equ	4054	;# 
   649   000FD7                     TMR0H           equ	4055	;# 
   650   000FD8                     STATUS          equ	4056	;# 
   651   000FD9                     FSR2            equ	4057	;# 
   652   000FD9                     FSR2L           equ	4057	;# 
   653   000FDA                     FSR2H           equ	4058	;# 
   654   000FDB                     PLUSW2          equ	4059	;# 
   655   000FDC                     PREINC2         equ	4060	;# 
   656   000FDD                     POSTDEC2        equ	4061	;# 
   657   000FDE                     POSTINC2        equ	4062	;# 
   658   000FDF                     INDF2           equ	4063	;# 
   659   000FE0                     BSR             equ	4064	;# 
   660   000FE1                     FSR1            equ	4065	;# 
   661   000FE1                     FSR1L           equ	4065	;# 
   662   000FE2                     FSR1H           equ	4066	;# 
   663   000FE3                     PLUSW1          equ	4067	;# 
   664   000FE4                     PREINC1         equ	4068	;# 
   665   000FE5                     POSTDEC1        equ	4069	;# 
   666   000FE6                     POSTINC1        equ	4070	;# 
   667   000FE7                     INDF1           equ	4071	;# 
   668   000FE8                     WREG            equ	4072	;# 
   669   000FE9                     FSR0            equ	4073	;# 
   670   000FE9                     FSR0L           equ	4073	;# 
   671   000FEA                     FSR0H           equ	4074	;# 
   672   000FEB                     PLUSW0          equ	4075	;# 
   673   000FEC                     PREINC0         equ	4076	;# 
   674   000FED                     POSTDEC0        equ	4077	;# 
   675   000FEE                     POSTINC0        equ	4078	;# 
   676   000FEF                     INDF0           equ	4079	;# 
   677   000FF0                     INTCON3         equ	4080	;# 
   678   000FF1                     INTCON2         equ	4081	;# 
   679   000FF2                     INTCON          equ	4082	;# 
   680   000FF3                     PROD            equ	4083	;# 
   681   000FF3                     PRODL           equ	4083	;# 
   682   000FF4                     PRODH           equ	4084	;# 
   683   000FF5                     TABLAT          equ	4085	;# 
   684   000FF6                     TBLPTR          equ	4086	;# 
   685   000FF6                     TBLPTRL         equ	4086	;# 
   686   000FF7                     TBLPTRH         equ	4087	;# 
   687   000FF8                     TBLPTRU         equ	4088	;# 
   688   000FF9                     PCLAT           equ	4089	;# 
   689   000FF9                     PC              equ	4089	;# 
   690   000FF9                     PCL             equ	4089	;# 
   691   000FFA                     PCLATH          equ	4090	;# 
   692   000FFB                     PCLATU          equ	4091	;# 
   693   000FFC                     STKPTR          equ	4092	;# 
   694   000FFD                     TOS             equ	4093	;# 
   695   000FFD                     TOSL            equ	4093	;# 
   696   000FFE                     TOSH            equ	4094	;# 
   697   000FFF                     TOSU            equ	4095	;# 
   698   000F77                     SSPMSK          equ	3959	;# 
   699   000F78                     SLRCON          equ	3960	;# 
   700   000F79                     CM2CON1         equ	3961	;# 
   701   000F7A                     CM2CON0         equ	3962	;# 
   702   000F7B                     CM1CON0         equ	3963	;# 
   703   000F7C                     WPUB            equ	3964	;# 
   704   000F7D                     IOCB            equ	3965	;# 
   705   000F7E                     ANSEL           equ	3966	;# 
   706   000F7F                     ANSELH          equ	3967	;# 
   707   000F80                     PORTA           equ	3968	;# 
   708   000F81                     PORTB           equ	3969	;# 
   709   000F82                     PORTC           equ	3970	;# 
   710   000F83                     PORTD           equ	3971	;# 
   711   000F84                     PORTE           equ	3972	;# 
   712   000F89                     LATA            equ	3977	;# 
   713   000F8A                     LATB            equ	3978	;# 
   714   000F8B                     LATC            equ	3979	;# 
   715   000F8C                     LATD            equ	3980	;# 
   716   000F8D                     LATE            equ	3981	;# 
   717   000F92                     TRISA           equ	3986	;# 
   718   000F92                     DDRA            equ	3986	;# 
   719   000F93                     TRISB           equ	3987	;# 
   720   000F93                     DDRB            equ	3987	;# 
   721   000F94                     TRISC           equ	3988	;# 
   722   000F94                     DDRC            equ	3988	;# 
   723   000F95                     TRISD           equ	3989	;# 
   724   000F95                     DDRD            equ	3989	;# 
   725   000F96                     TRISE           equ	3990	;# 
   726   000F96                     DDRE            equ	3990	;# 
   727   000F9B                     OSCTUNE         equ	3995	;# 
   728   000F9D                     PIE1            equ	3997	;# 
   729   000F9E                     PIR1            equ	3998	;# 
   730   000F9F                     IPR1            equ	3999	;# 
   731   000FA0                     PIE2            equ	4000	;# 
   732   000FA1                     PIR2            equ	4001	;# 
   733   000FA2                     IPR2            equ	4002	;# 
   734   000FA6                     EECON1          equ	4006	;# 
   735   000FA7                     EECON2          equ	4007	;# 
   736   000FA8                     EEDATA          equ	4008	;# 
   737   000FA9                     EEADR           equ	4009	;# 
   738   000FAA                     EEADRH          equ	4010	;# 
   739   000FAB                     RCSTA           equ	4011	;# 
   740   000FAB                     RCSTA1          equ	4011	;# 
   741   000FAC                     TXSTA           equ	4012	;# 
   742   000FAC                     TXSTA1          equ	4012	;# 
   743   000FAD                     TXREG           equ	4013	;# 
   744   000FAD                     TXREG1          equ	4013	;# 
   745   000FAE                     RCREG           equ	4014	;# 
   746   000FAE                     RCREG1          equ	4014	;# 
   747   000FAF                     SPBRG           equ	4015	;# 
   748   000FAF                     SPBRG1          equ	4015	;# 
   749   000FB0                     SPBRGH          equ	4016	;# 
   750   000FB1                     T3CON           equ	4017	;# 
   751   000FB2                     TMR3            equ	4018	;# 
   752   000FB2                     TMR3L           equ	4018	;# 
   753   000FB3                     TMR3H           equ	4019	;# 
   754   000FB4                     CVRCON2         equ	4020	;# 
   755   000FB5                     CVRCON          equ	4021	;# 
   756   000FB6                     ECCP1AS         equ	4022	;# 
   757   000FB7                     PWM1CON         equ	4023	;# 
   758   000FB8                     BAUDCON         equ	4024	;# 
   759   000FB8                     BAUDCTL         equ	4024	;# 
   760   000FB9                     PSTRCON         equ	4025	;# 
   761   000FBA                     CCP2CON         equ	4026	;# 
   762   000FBB                     CCPR2           equ	4027	;# 
   763   000FBB                     CCPR2L          equ	4027	;# 
   764   000FBC                     CCPR2H          equ	4028	;# 
   765   000FBD                     CCP1CON         equ	4029	;# 
   766   000FBE                     CCPR1           equ	4030	;# 
   767   000FBE                     CCPR1L          equ	4030	;# 
   768   000FBF                     CCPR1H          equ	4031	;# 
   769   000FC0                     ADCON2          equ	4032	;# 
   770   000FC1                     ADCON1          equ	4033	;# 
   771   000FC2                     ADCON0          equ	4034	;# 
   772   000FC3                     ADRES           equ	4035	;# 
   773   000FC3                     ADRESL          equ	4035	;# 
   774   000FC4                     ADRESH          equ	4036	;# 
   775   000FC5                     SSPCON2         equ	4037	;# 
   776   000FC6                     SSPCON1         equ	4038	;# 
   777   000FC7                     SSPSTAT         equ	4039	;# 
   778   000FC8                     SSPADD          equ	4040	;# 
   779   000FC9                     SSPBUF          equ	4041	;# 
   780   000FCA                     T2CON           equ	4042	;# 
   781   000FCB                     PR2             equ	4043	;# 
   782   000FCB                     MEMCON          equ	4043	;# 
   783   000FCC                     TMR2            equ	4044	;# 
   784   000FCD                     T1CON           equ	4045	;# 
   785   000FCE                     TMR1            equ	4046	;# 
   786   000FCE                     TMR1L           equ	4046	;# 
   787   000FCF                     TMR1H           equ	4047	;# 
   788   000FD0                     RCON            equ	4048	;# 
   789   000FD1                     WDTCON          equ	4049	;# 
   790   000FD2                     HLVDCON         equ	4050	;# 
   791   000FD2                     LVDCON          equ	4050	;# 
   792   000FD3                     OSCCON          equ	4051	;# 
   793   000FD5                     T0CON           equ	4053	;# 
   794   000FD6                     TMR0            equ	4054	;# 
   795   000FD6                     TMR0L           equ	4054	;# 
   796   000FD7                     TMR0H           equ	4055	;# 
   797   000FD8                     STATUS          equ	4056	;# 
   798   000FD9                     FSR2            equ	4057	;# 
   799   000FD9                     FSR2L           equ	4057	;# 
   800   000FDA                     FSR2H           equ	4058	;# 
   801   000FDB                     PLUSW2          equ	4059	;# 
   802   000FDC                     PREINC2         equ	4060	;# 
   803   000FDD                     POSTDEC2        equ	4061	;# 
   804   000FDE                     POSTINC2        equ	4062	;# 
   805   000FDF                     INDF2           equ	4063	;# 
   806   000FE0                     BSR             equ	4064	;# 
   807   000FE1                     FSR1            equ	4065	;# 
   808   000FE1                     FSR1L           equ	4065	;# 
   809   000FE2                     FSR1H           equ	4066	;# 
   810   000FE3                     PLUSW1          equ	4067	;# 
   811   000FE4                     PREINC1         equ	4068	;# 
   812   000FE5                     POSTDEC1        equ	4069	;# 
   813   000FE6                     POSTINC1        equ	4070	;# 
   814   000FE7                     INDF1           equ	4071	;# 
   815   000FE8                     WREG            equ	4072	;# 
   816   000FE9                     FSR0            equ	4073	;# 
   817   000FE9                     FSR0L           equ	4073	;# 
   818   000FEA                     FSR0H           equ	4074	;# 
   819   000FEB                     PLUSW0          equ	4075	;# 
   820   000FEC                     PREINC0         equ	4076	;# 
   821   000FED                     POSTDEC0        equ	4077	;# 
   822   000FEE                     POSTINC0        equ	4078	;# 
   823   000FEF                     INDF0           equ	4079	;# 
   824   000FF0                     INTCON3         equ	4080	;# 
   825   000FF1                     INTCON2         equ	4081	;# 
   826   000FF2                     INTCON          equ	4082	;# 
   827   000FF3                     PROD            equ	4083	;# 
   828   000FF3                     PRODL           equ	4083	;# 
   829   000FF4                     PRODH           equ	4084	;# 
   830   000FF5                     TABLAT          equ	4085	;# 
   831   000FF6                     TBLPTR          equ	4086	;# 
   832   000FF6                     TBLPTRL         equ	4086	;# 
   833   000FF7                     TBLPTRH         equ	4087	;# 
   834   000FF8                     TBLPTRU         equ	4088	;# 
   835   000FF9                     PCLAT           equ	4089	;# 
   836   000FF9                     PC              equ	4089	;# 
   837   000FF9                     PCL             equ	4089	;# 
   838   000FFA                     PCLATH          equ	4090	;# 
   839   000FFB                     PCLATU          equ	4091	;# 
   840   000FFC                     STKPTR          equ	4092	;# 
   841   000FFD                     TOS             equ	4093	;# 
   842   000FFD                     TOSL            equ	4093	;# 
   843   000FFE                     TOSH            equ	4094	;# 
   844   000FFF                     TOSU            equ	4095	;# 
   845                           
   846                           	psect	smallconst
   847   001000                     __psmallconst:
   848                           	callstack 0
   849   001000  00                 	db	0
   850   001001                     _default_security_key:
   851                           	callstack 0
   852   001001  00                 	db	0
   853   001002  10                 	db	16
   854   001003  25                 	db	37
   855   001004  37                 	db	55
   856   001005  04                 	db	4
   857   001006  55                 	db	85
   858   001007  06                 	db	6
   859   001008  79                 	db	121
   860   001009  08                 	db	8
   861   00100A  09                 	db	9
   862   00100B  10                 	db	16
   863   00100C  11                 	db	17
   864   00100D  12                 	db	18
   865   00100E  13                 	db	19
   866   00100F  14                 	db	20
   867   001010  15                 	db	21
   868   001011                     __end_of_default_security_key:
   869                           	callstack 0
   870   001011                     _default_mac_address:
   871                           	callstack 0
   872   001011  11                 	db	17
   873   001012  28                 	db	40
   874   001013  35                 	db	53
   875   001014  44                 	db	68
   876   001015  56                 	db	86
   877   001016  66                 	db	102
   878   001017  77                 	db	119
   879   001018  01                 	db	1
   880   001019                     __end_of_default_mac_address:
   881                           	callstack 0
   882   007CED                     _RCIE           set	31981
   883   007CEE                     _ADIE           set	31982
   884   007D03                     _BCLIE          set	32003
   885   007CEB                     _SSPIE          set	31979
   886   007D04                     _EEIE           set	32004
   887   007D00                     _CCP2IE         set	32000
   888   007CEA                     _CCP1IE         set	31978
   889   007CE9                     _TMR2IE         set	31977
   890   007CE8                     _TMR1IE         set	31976
   891   007F95                     _T0IE           set	32661
   892   007F93                     _RBIE           set	32659
   893   007F96                     _PEIE           set	32662
   894   007F97                     _GIE            set	32663
   895   000FC9                     _SSPBUF         set	4041
   896   000F9E                     _PIR1bits       set	3998
   897   000FC6                     _SSPCON1bits    set	4038
   898   000FC7                     _SSPSTATbits    set	4039
   899   000F8C                     _LATDbits       set	3980
   900   000F8B                     _LATCbits       set	3979
   901   000F95                     _TRISDbits      set	3989
   902   000F94                     _TRISCbits      set	3988
   903   000F9B                     _OSCTUNE        set	3995
   904   000FD3                     _OSCCON         set	4051
   905   000F93                     _TRISBbits      set	3987
   906   000F96                     _TRISEbits      set	3990
   907   000F84                     _PORTE          set	3972
   908   000F83                     _PORTD          set	3971
   909   000F82                     _PORTC          set	3970
   910   000F81                     _PORTB          set	3969
   911   000F80                     _PORTA          set	3968
   912   000F8D                     _LATEbits       set	3981
   913   001019  00                 	db	0	; dummy byte at the end
   914   000001                     __activetblptr  equ	1
   915                           
   916                           ; #config settings
   917                           
   918                           	psect	cinit
   919   00153C                     __pcinit:
   920                           	callstack 0
   921   00153C                     start_initialization:
   922                           	callstack 0
   923   00153C                     __initialization:
   924                           	callstack 0
   925                           
   926                           ; Clear objects allocated to BANK0 (84 bytes)
   927   00153C  EE00  F060         	lfsr	0,__pbssBANK0
   928   001540  0E54               	movlw	84
   929   001542                     clear_0:
   930   001542  6AEE               	clrf	postinc0,c
   931   001544  06E8               	decf	wreg,f,c
   932   001546  E1FD               	bnz	clear_0
   933                           
   934                           ; Clear objects allocated to COMRAM (7 bytes)
   935   001548  EE00  F00D         	lfsr	0,__pbssCOMRAM
   936   00154C  0E07               	movlw	7
   937   00154E                     clear_1:
   938   00154E  6AEE               	clrf	postinc0,c
   939   001550  06E8               	decf	wreg,f,c
   940   001552  E1FD               	bnz	clear_1
   941   001554                     end_of_initialization:
   942                           	callstack 0
   943   001554                     __end_of__initialization:
   944                           	callstack 0
   945   001554  0E00               	movlw	low (__Lsmallconst shr (0+16))
   946   001556  6EF8               	movwf	tblptru,c
   947   001558  0E10               	movlw	high __Lsmallconst
   948   00155A  6EF7               	movwf	tblptrh,c
   949   00155C  0100               	movlb	0
   950   00155E  EF22  F009         	goto	_main	;jump to C main() function
   951                           
   952                           	psect	bssCOMRAM
   953   00000D                     __pbssCOMRAM:
   954                           	callstack 0
   955   00000D                     _mrf24_data_out:
   956                           	callstack 0
   957   00000D                     	ds	7
   958                           
   959                           	psect	bssBANK0
   960   000060                     __pbssBANK0:
   961                           	callstack 0
   962   000060                     _mrf24_data_config:
   963                           	callstack 0
   964   000060                     	ds	84
   965                           
   966                           	psect	cstackCOMRAM
   967   000001                     __pcstackCOMRAM:
   968                           	callstack 0
   969   000001                     SetCSPin@estado:
   970                           	callstack 0
   971   000001                     SetWakePin@estado:
   972                           	callstack 0
   973   000001                     SetResetPin@estado:
   974                           	callstack 0
   975   000001                     SPI_write@dato:
   976                           	callstack 0
   977   000001                     ??_InicializoVariables:
   978   000001                     
   979                           ; 1 bytes @ 0x0
   980   000001                     	ds	1
   981   000002                     WriteByteSPIPort@dato:
   982                           	callstack 0
   983   000002                     InicializoVariables@i:
   984                           	callstack 0
   985   000002                     
   986                           ; 1 bytes @ 0x1
   987   000002                     	ds	1
   988   000003                     SetShortAddr@value:
   989                           	callstack 0
   990   000003                     SetLongAddr@reg_address:
   991                           	callstack 0
   992   000003                     GetLongAddr@reg_address:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x2
   996   000003                     	ds	1
   997   000004                     SetShortAddr@reg_address:
   998                           	callstack 0
   999   000004                     
  1000                           ; 1 bytes @ 0x3
  1001   000004                     	ds	1
  1002   000005                     SetLongAddr@value:
  1003                           	callstack 0
  1004   000005                     ??_GetLongAddr:
  1005                           
  1006                           ; 1 bytes @ 0x4
  1007   000005                     	ds	1
  1008   000006                     ??_SetLongAddr:
  1009                           
  1010                           ; 1 bytes @ 0x5
  1011   000006                     	ds	1
  1012   000007                     GetLongAddr@toReturn:
  1013                           	callstack 0
  1014                           
  1015                           ; 1 bytes @ 0x6
  1016   000007                     	ds	1
  1017   000008                     SetChannel@aux:
  1018                           	callstack 0
  1019   000008                     EnviarDato@i:
  1020                           	callstack 0
  1021   000008                     
  1022                           ; 1 bytes @ 0x7
  1023   000008                     	ds	1
  1024   000009                     EnviarDato@pos:
  1025                           	callstack 0
  1026   000009                     ??_MRF24J40Init:
  1027                           
  1028                           ; 1 bytes @ 0x8
  1029   000009                     	ds	2
  1030   00000B                     ??_main:
  1031                           
  1032                           ; 1 bytes @ 0xA
  1033   00000B                     	ds	2
  1034                           
  1035 ;;
  1036 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1037 ;;
  1038 ;; *************** function _main *****************
  1039 ;; Defined at:
  1040 ;;		line 23 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1058 ;;Total ram usage:        2 bytes
  1059 ;; Hardware stack levels required when called: 5
  1060 ;; This function calls:
  1061 ;;		_EnviarDato
  1062 ;;		_MRF24J40Init
  1063 ;;		_board_init
  1064 ;; This function is called by:
  1065 ;;		Startup code after reset
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           	psect	text0
  1070   001244                     __ptext0:
  1071                           	callstack 0
  1072   001244                     _main:
  1073                           	callstack 26
  1074   001244                     
  1075                           ;main.c: 25:     board_init();
  1076   001244  EC68  F00A         	call	_board_init	;wreg free
  1077   001248                     
  1078                           ;main.c: 26:     MRF24J40Init();
  1079   001248  EC0D  F008         	call	_MRF24J40Init	;wreg free
  1080   00124C                     l15:
  1081   00124C  0004               	clrwdt		;# 
  1082   00124E                     
  1083                           ;main.c: 31:         LATEbits.LATE2 = !LATEbits.LATE2;
  1084   00124E  A48D               	btfss	141,2,c	;volatile
  1085   001250  EF2C  F009         	goto	u351
  1086   001254  EF30  F009         	goto	u350
  1087   001258                     u351:
  1088   001258  6A0B               	clrf	??_main^0,c
  1089   00125A  2A0B               	incf	??_main^0,f,c
  1090   00125C  EF31  F009         	goto	u368
  1091   001260                     u350:
  1092   001260  6A0B               	clrf	??_main^0,c
  1093   001262                     u368:
  1094   001262  460B               	rlncf	??_main^0,f,c
  1095   001264  460B               	rlncf	??_main^0,f,c
  1096   001266  508D               	movf	141,w,c	;volatile
  1097   001268  180B               	xorwf	??_main^0,w,c
  1098   00126A  0BFB               	andlw	-5
  1099   00126C  180B               	xorwf	??_main^0,w,c
  1100   00126E  6E8D               	movwf	141,c	;volatile
  1101   001270                     
  1102                           ;main.c: 32:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1103   001270  0E06               	movlw	6
  1104   001272  6E0C               	movwf	(??_main+1)^0,c
  1105   001274  0E13               	movlw	19
  1106   001276  6E0B               	movwf	??_main^0,c
  1107   001278  0EAE               	movlw	174
  1108   00127A                     u477:
  1109   00127A  2EE8               	decfsz	wreg,f,c
  1110   00127C  D7FE               	bra	u477
  1111   00127E  2E0B               	decfsz	??_main^0,f,c
  1112   001280  D7FC               	bra	u477
  1113   001282  2E0C               	decfsz	(??_main+1)^0,f,c
  1114   001284  D7FA               	bra	u477
  1115   001286                     
  1116                           ;main.c: 33:         LATEbits.LATE1 = !LATEbits.LATE1;
  1117   001286  A28D               	btfss	141,1,c	;volatile
  1118   001288  EF48  F009         	goto	u371
  1119   00128C  EF4C  F009         	goto	u370
  1120   001290                     u371:
  1121   001290  6A0B               	clrf	??_main^0,c
  1122   001292  2A0B               	incf	??_main^0,f,c
  1123   001294  EF4D  F009         	goto	u388
  1124   001298                     u370:
  1125   001298  6A0B               	clrf	??_main^0,c
  1126   00129A                     u388:
  1127   00129A  460B               	rlncf	??_main^0,f,c
  1128   00129C  508D               	movf	141,w,c	;volatile
  1129   00129E  180B               	xorwf	??_main^0,w,c
  1130   0012A0  0BFD               	andlw	-3
  1131   0012A2  180B               	xorwf	??_main^0,w,c
  1132   0012A4  6E8D               	movwf	141,c	;volatile
  1133   0012A6                     
  1134                           ;main.c: 34:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1135   0012A6  0E06               	movlw	6
  1136   0012A8  6E0C               	movwf	(??_main+1)^0,c
  1137   0012AA  0E13               	movlw	19
  1138   0012AC  6E0B               	movwf	??_main^0,c
  1139   0012AE  0EAE               	movlw	174
  1140   0012B0                     u487:
  1141   0012B0  2EE8               	decfsz	wreg,f,c
  1142   0012B2  D7FE               	bra	u487
  1143   0012B4  2E0B               	decfsz	??_main^0,f,c
  1144   0012B6  D7FC               	bra	u487
  1145   0012B8  2E0C               	decfsz	(??_main+1)^0,f,c
  1146   0012BA  D7FA               	bra	u487
  1147   0012BC                     
  1148                           ;main.c: 35:         LATEbits.LATE0 = !LATEbits.LATE0;
  1149   0012BC  A08D               	btfss	141,0,c	;volatile
  1150   0012BE  EF63  F009         	goto	u391
  1151   0012C2  EF67  F009         	goto	u390
  1152   0012C6                     u391:
  1153   0012C6  6A0B               	clrf	??_main^0,c
  1154   0012C8  2A0B               	incf	??_main^0,f,c
  1155   0012CA  EF68  F009         	goto	u408
  1156   0012CE                     u390:
  1157   0012CE  6A0B               	clrf	??_main^0,c
  1158   0012D0                     u408:
  1159   0012D0  508D               	movf	141,w,c	;volatile
  1160   0012D2  180B               	xorwf	??_main^0,w,c
  1161   0012D4  0BFE               	andlw	-2
  1162   0012D6  180B               	xorwf	??_main^0,w,c
  1163   0012D8  6E8D               	movwf	141,c	;volatile
  1164   0012DA                     
  1165                           ;main.c: 36:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1166   0012DA  0E06               	movlw	6
  1167   0012DC  6E0C               	movwf	(??_main+1)^0,c
  1168   0012DE  0E13               	movlw	19
  1169   0012E0  6E0B               	movwf	??_main^0,c
  1170   0012E2  0EAE               	movlw	174
  1171   0012E4                     u497:
  1172   0012E4  2EE8               	decfsz	wreg,f,c
  1173   0012E6  D7FE               	bra	u497
  1174   0012E8  2E0B               	decfsz	??_main^0,f,c
  1175   0012EA  D7FC               	bra	u497
  1176   0012EC  2E0C               	decfsz	(??_main+1)^0,f,c
  1177   0012EE  D7FA               	bra	u497
  1178   0012F0                     
  1179                           ;main.c: 38:         EnviarDato();
  1180   0012F0  EC9D  F008         	call	_EnviarDato	;wreg free
  1181   0012F4  EF26  F009         	goto	l15
  1182   0012F8  EF00  F000         	goto	start
  1183   0012FC                     __end_of_main:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function _board_init *****************
  1187 ;; Defined at:
  1188 ;;		line 21 in file "hardware_config.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;		None
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1206 ;;Total ram usage:        0 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 1
  1209 ;; This function calls:
  1210 ;;		_spi_init
  1211 ;; This function is called by:
  1212 ;;		_main
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text1
  1217   0014D0                     __ptext1:
  1218                           	callstack 0
  1219   0014D0                     _board_init:
  1220                           	callstack 29
  1221   0014D0                     
  1222                           ;hardware_config.c: 23:     PORTA = 0;
  1223   0014D0  6A80               	clrf	128,c	;volatile
  1224                           
  1225                           ;hardware_config.c: 24:     PORTB = 0;
  1226   0014D2  6A81               	clrf	129,c	;volatile
  1227                           
  1228                           ;hardware_config.c: 25:     PORTC = 0;
  1229   0014D4  6A82               	clrf	130,c	;volatile
  1230                           
  1231                           ;hardware_config.c: 26:     PORTD = 0;
  1232   0014D6  6A83               	clrf	131,c	;volatile
  1233                           
  1234                           ;hardware_config.c: 27:     PORTE = 0;
  1235   0014D8  6A84               	clrf	132,c	;volatile
  1236                           
  1237                           ;hardware_config.c: 30:     TRISEbits.TRISE2 = 0;
  1238   0014DA  9496               	bcf	150,2,c	;volatile
  1239                           
  1240                           ;hardware_config.c: 31:     TRISEbits.TRISE0 = 0;
  1241   0014DC  9096               	bcf	150,0,c	;volatile
  1242                           
  1243                           ;hardware_config.c: 32:     TRISEbits.TRISE1 = 0;
  1244   0014DE  9296               	bcf	150,1,c	;volatile
  1245                           
  1246                           ;hardware_config.c: 33:     TRISBbits.TRISB6 = 1;
  1247   0014E0  8C93               	bsf	147,6,c	;volatile
  1248                           
  1249                           ;hardware_config.c: 34:     TRISBbits.TRISB7 = 1;
  1250   0014E2  8E93               	bsf	147,7,c	;volatile
  1251                           
  1252                           ;hardware_config.c: 37:  GIE=0;
  1253   0014E4  9EF2               	bcf	4082,7,c	;volatile
  1254                           
  1255                           ;hardware_config.c: 38:  PEIE=0;
  1256   0014E6  9CF2               	bcf	4082,6,c	;volatile
  1257                           
  1258                           ;hardware_config.c: 39:  RBIE=0;
  1259   0014E8  96F2               	bcf	4082,3,c	;volatile
  1260                           
  1261                           ;hardware_config.c: 40:  T0IE=0;
  1262   0014EA  9AF2               	bcf	4082,5,c	;volatile
  1263                           
  1264                           ;hardware_config.c: 41:  TMR1IE=0;
  1265   0014EC  909D               	bcf	3997,0,c	;volatile
  1266                           
  1267                           ;hardware_config.c: 42:  TMR2IE=0;
  1268   0014EE  929D               	bcf	3997,1,c	;volatile
  1269                           
  1270                           ;hardware_config.c: 43:  CCP1IE=0;
  1271   0014F0  949D               	bcf	3997,2,c	;volatile
  1272                           
  1273                           ;hardware_config.c: 44:  CCP2IE=0;
  1274   0014F2  90A0               	bcf	4000,0,c	;volatile
  1275                           
  1276                           ;hardware_config.c: 45:  EEIE=0;
  1277   0014F4  98A0               	bcf	4000,4,c	;volatile
  1278                           
  1279                           ;hardware_config.c: 46:  SSPIE=0;
  1280   0014F6  969D               	bcf	3997,3,c	;volatile
  1281                           
  1282                           ;hardware_config.c: 47:  BCLIE=0;
  1283   0014F8  96A0               	bcf	4000,3,c	;volatile
  1284                           
  1285                           ;hardware_config.c: 48:  ADIE=0;
  1286   0014FA  9C9D               	bcf	3997,6,c	;volatile
  1287                           
  1288                           ;hardware_config.c: 49:  RBIE=0;
  1289   0014FC  96F2               	bcf	4082,3,c	;volatile
  1290                           
  1291                           ;hardware_config.c: 50:  RCIE=0;
  1292   0014FE  9A9D               	bcf	3997,5,c	;volatile
  1293   001500                     
  1294                           ;hardware_config.c: 51:     OSCCON=0b01110010;
  1295   001500  0E72               	movlw	114
  1296   001502  6ED3               	movwf	211,c	;volatile
  1297                           
  1298                           ;hardware_config.c: 52:     OSCTUNE=0b11011111;
  1299   001504  0EDF               	movlw	223
  1300   001506  6E9B               	movwf	155,c	;volatile
  1301   001508                     
  1302                           ;hardware_config.c: 55:     spi_init();
  1303   001508  ECC1  F00A         	call	_spi_init	;wreg free
  1304   00150C  0012               	return		;funcret
  1305   00150E                     __end_of_board_init:
  1306                           	callstack 0
  1307                           
  1308 ;; *************** function _spi_init *****************
  1309 ;; Defined at:
  1310 ;;		line 30 in file "drivers/scr/drv_mspi_port.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;		None
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;		None
  1315 ;; Return value:  Size  Location     Type
  1316 ;;                  1    wreg      void 
  1317 ;; Registers used:
  1318 ;;		None
  1319 ;; Tracked objects:
  1320 ;;		On entry : 0/0
  1321 ;;		On exit  : 0/0
  1322 ;;		Unchanged: 0/0
  1323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;Total ram usage:        0 bytes
  1329 ;; Hardware stack levels used: 1
  1330 ;; This function calls:
  1331 ;;		Nothing
  1332 ;; This function is called by:
  1333 ;;		_board_init
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text2
  1338   001582                     __ptext2:
  1339                           	callstack 0
  1340   001582                     _spi_init:
  1341                           	callstack 29
  1342   001582                     
  1343                           ;drivers/scr/drv_mspi_port.c: 32:     TRISCbits.TRISC3 = 0;
  1344   001582  9694               	bcf	148,3,c	;volatile
  1345                           
  1346                           ;drivers/scr/drv_mspi_port.c: 33:     TRISCbits.TRISC5 = 0;
  1347   001584  9A94               	bcf	148,5,c	;volatile
  1348                           
  1349                           ;drivers/scr/drv_mspi_port.c: 34:     TRISCbits.TRISC4 = 1;
  1350   001586  8894               	bsf	148,4,c	;volatile
  1351                           
  1352                           ;drivers/scr/drv_mspi_port.c: 35:  SSPSTATbits.CKE = 1;
  1353   001588  8CC7               	bsf	199,6,c	;volatile
  1354                           
  1355                           ;drivers/scr/drv_mspi_port.c: 36:  SSPCON1bits.WCOL = 1;
  1356   00158A  8EC6               	bsf	198,7,c	;volatile
  1357                           
  1358                           ;drivers/scr/drv_mspi_port.c: 37:  SSPCON1bits.SSPOV = 0;
  1359   00158C  9CC6               	bcf	198,6,c	;volatile
  1360                           
  1361                           ;drivers/scr/drv_mspi_port.c: 38:  SSPCON1bits.SSPEN = 1;
  1362   00158E  8AC6               	bsf	198,5,c	;volatile
  1363                           
  1364                           ;drivers/scr/drv_mspi_port.c: 39:  SSPCON1bits.CKP = 0;
  1365   001590  98C6               	bcf	198,4,c	;volatile
  1366                           
  1367                           ;drivers/scr/drv_mspi_port.c: 40:  SSPSTATbits.SMP = 1;
  1368   001592  8EC7               	bsf	199,7,c	;volatile
  1369                           
  1370                           ;drivers/scr/drv_mspi_port.c: 41:  SSPCON1bits.SSPM3 = 0;
  1371   001594  96C6               	bcf	198,3,c	;volatile
  1372                           
  1373                           ;drivers/scr/drv_mspi_port.c: 42:  SSPCON1bits.SSPM2 = 0;
  1374   001596  94C6               	bcf	198,2,c	;volatile
  1375                           
  1376                           ;drivers/scr/drv_mspi_port.c: 43:  SSPCON1bits.SSPM1 = 0;
  1377   001598  92C6               	bcf	198,1,c	;volatile
  1378                           
  1379                           ;drivers/scr/drv_mspi_port.c: 44:  SSPCON1bits.SSPM0 = 1;
  1380   00159A  80C6               	bsf	198,0,c	;volatile
  1381   00159C  0012               	return		;funcret
  1382   00159E                     __end_of_spi_init:
  1383                           	callstack 0
  1384                           
  1385 ;; *************** function _MRF24J40Init *****************
  1386 ;; Defined at:
  1387 ;;		line 263 in file "drivers/scr/drv_mrf24j40.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;Total ram usage:        2 bytes
  1406 ;; Hardware stack levels used: 1
  1407 ;; Hardware stack levels required when called: 4
  1408 ;; This function calls:
  1409 ;;		_InicializoPines
  1410 ;;		_InicializoVariables
  1411 ;;		_SetChannel
  1412 ;;		_SetDeviceAddress
  1413 ;;		_SetDeviceMACAddress
  1414 ;;		_SetLongAddr
  1415 ;;		_SetResetPin
  1416 ;;		_SetShortAddr
  1417 ;; This function is called by:
  1418 ;;		_main
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text3
  1423   00101A                     __ptext3:
  1424                           	callstack 0
  1425   00101A                     _MRF24J40Init:
  1426                           	callstack 26
  1427   00101A                     
  1428                           ;drivers/scr/drv_mrf24j40.c: 265:     InicializoVariables();
  1429   00101A  EC7E  F009         	call	_InicializoVariables	;wreg free
  1430   00101E                     
  1431                           ;drivers/scr/drv_mrf24j40.c: 266:     InicializoPines();
  1432   00101E  ECCF  F00A         	call	_InicializoPines	;wreg free
  1433   001022                     
  1434                           ;drivers/scr/drv_mrf24j40.c: 267:   _delay((unsigned long)((50)*(16000000/4000.0)));;
  1435   001022  0E02               	movlw	2
  1436   001024  6E0A               	movwf	(??_MRF24J40Init+1)^0,c
  1437   001026  0E04               	movlw	4
  1438   001028  6E09               	movwf	??_MRF24J40Init^0,c
  1439   00102A  0EBA               	movlw	186
  1440   00102C                     u507:
  1441   00102C  2EE8               	decfsz	wreg,f,c
  1442   00102E  D7FE               	bra	u507
  1443   001030  2E09               	decfsz	??_MRF24J40Init^0,f,c
  1444   001032  D7FC               	bra	u507
  1445   001034  2E0A               	decfsz	(??_MRF24J40Init+1)^0,f,c
  1446   001036  D7FA               	bra	u507
  1447   001038  F000 F000          	nop2	
  1448   00103C                     
  1449                           ;drivers/scr/drv_mrf24j40.c: 268:     SetResetPin(1);
  1450   00103C  0E01               	movlw	1
  1451   00103E  ECFB  F00A         	call	_SetResetPin
  1452   001042                     
  1453                           ;drivers/scr/drv_mrf24j40.c: 269:  _delay((unsigned long)((500)*(16000000/4000.0)));;
  1454   001042  0E0B               	movlw	11
  1455   001044  6E0A               	movwf	(??_MRF24J40Init+1)^0,c
  1456   001046  0E26               	movlw	38
  1457   001048  6E09               	movwf	??_MRF24J40Init^0,c
  1458   00104A  0E5E               	movlw	94
  1459   00104C                     u517:
  1460   00104C  2EE8               	decfsz	wreg,f,c
  1461   00104E  D7FE               	bra	u517
  1462   001050  2E09               	decfsz	??_MRF24J40Init^0,f,c
  1463   001052  D7FC               	bra	u517
  1464   001054  2E0A               	decfsz	(??_MRF24J40Init+1)^0,f,c
  1465   001056  D7FA               	bra	u517
  1466   001058                     
  1467                           ;drivers/scr/drv_mrf24j40.c: 270:     SetShortAddr((0x18), 0x98);
  1468   001058  0E98               	movlw	152
  1469   00105A  6E03               	movwf	SetShortAddr@value^0,c
  1470   00105C  0E18               	movlw	24
  1471   00105E  ECB1  F00A         	call	_SetShortAddr
  1472   001062                     
  1473                           ;drivers/scr/drv_mrf24j40.c: 271:     SetShortAddr((0x2E), 0x95);
  1474   001062  0E95               	movlw	149
  1475   001064  6E03               	movwf	SetShortAddr@value^0,c
  1476   001066  0E2E               	movlw	46
  1477   001068  ECB1  F00A         	call	_SetShortAddr
  1478   00106C                     
  1479                           ;drivers/scr/drv_mrf24j40.c: 272:     SetLongAddr((0x200), 0x03);
  1480   00106C  0E02               	movlw	2
  1481   00106E  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  1482   001070  0E00               	movlw	0
  1483   001072  6E03               	movwf	SetLongAddr@reg_address^0,c
  1484   001074  0E03               	movlw	3
  1485   001076  6E05               	movwf	SetLongAddr@value^0,c
  1486   001078  EC47  F00A         	call	_SetLongAddr	;wreg free
  1487   00107C                     
  1488                           ;drivers/scr/drv_mrf24j40.c: 273:  SetLongAddr((0x201), 0x01);
  1489   00107C  0E02               	movlw	2
  1490   00107E  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  1491   001080  0E01               	movlw	1
  1492   001082  6E03               	movwf	SetLongAddr@reg_address^0,c
  1493   001084  0E01               	movlw	1
  1494   001086  6E05               	movwf	SetLongAddr@value^0,c
  1495   001088  EC47  F00A         	call	_SetLongAddr	;wreg free
  1496   00108C                     
  1497                           ;drivers/scr/drv_mrf24j40.c: 274:  SetLongAddr((0x202), 0x80);
  1498   00108C  0E02               	movlw	2
  1499   00108E  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  1500   001090  0E02               	movlw	2
  1501   001092  6E03               	movwf	SetLongAddr@reg_address^0,c
  1502   001094  0E80               	movlw	128
  1503   001096  6E05               	movwf	SetLongAddr@value^0,c
  1504   001098  EC47  F00A         	call	_SetLongAddr	;wreg free
  1505   00109C                     
  1506                           ;drivers/scr/drv_mrf24j40.c: 275:  SetLongAddr((0x206), 0x90);
  1507   00109C  0E02               	movlw	2
  1508   00109E  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  1509   0010A0  0E06               	movlw	6
  1510   0010A2  6E03               	movwf	SetLongAddr@reg_address^0,c
  1511   0010A4  0E90               	movlw	144
  1512   0010A6  6E05               	movwf	SetLongAddr@value^0,c
  1513   0010A8  EC47  F00A         	call	_SetLongAddr	;wreg free
  1514   0010AC                     
  1515                           ;drivers/scr/drv_mrf24j40.c: 276:  SetLongAddr((0x207), 0x80);
  1516   0010AC  0E02               	movlw	2
  1517   0010AE  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  1518   0010B0  0E07               	movlw	7
  1519   0010B2  6E03               	movwf	SetLongAddr@reg_address^0,c
  1520   0010B4  0E80               	movlw	128
  1521   0010B6  6E05               	movwf	SetLongAddr@value^0,c
  1522   0010B8  EC47  F00A         	call	_SetLongAddr	;wreg free
  1523   0010BC                     
  1524                           ;drivers/scr/drv_mrf24j40.c: 277:  SetLongAddr((0x208), 0x10);
  1525   0010BC  0E02               	movlw	2
  1526   0010BE  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  1527   0010C0  0E08               	movlw	8
  1528   0010C2  6E03               	movwf	SetLongAddr@reg_address^0,c
  1529   0010C4  0E10               	movlw	16
  1530   0010C6  6E05               	movwf	SetLongAddr@value^0,c
  1531   0010C8  EC47  F00A         	call	_SetLongAddr	;wreg free
  1532   0010CC                     
  1533                           ;drivers/scr/drv_mrf24j40.c: 278:  SetLongAddr((0x220), 0x21);
  1534   0010CC  0E02               	movlw	2
  1535   0010CE  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  1536   0010D0  0E20               	movlw	32
  1537   0010D2  6E03               	movwf	SetLongAddr@reg_address^0,c
  1538   0010D4  0E21               	movlw	33
  1539   0010D6  6E05               	movwf	SetLongAddr@value^0,c
  1540   0010D8  EC47  F00A         	call	_SetLongAddr	;wreg free
  1541   0010DC                     
  1542                           ;drivers/scr/drv_mrf24j40.c: 279:     SetShortAddr((0x3A), 0x80);
  1543   0010DC  0E80               	movlw	128
  1544   0010DE  6E03               	movwf	SetShortAddr@value^0,c
  1545   0010E0  0E3A               	movlw	58
  1546   0010E2  ECB1  F00A         	call	_SetShortAddr
  1547   0010E6                     
  1548                           ;drivers/scr/drv_mrf24j40.c: 280:     SetShortAddr((0x3F), 0x60);
  1549   0010E6  0E60               	movlw	96
  1550   0010E8  6E03               	movwf	SetShortAddr@value^0,c
  1551   0010EA  0E3F               	movlw	63
  1552   0010EC  ECB1  F00A         	call	_SetShortAddr
  1553   0010F0                     
  1554                           ;drivers/scr/drv_mrf24j40.c: 281:     SetShortAddr((0x3E), 0x40);
  1555   0010F0  0E40               	movlw	64
  1556   0010F2  6E03               	movwf	SetShortAddr@value^0,c
  1557   0010F4  0E3E               	movlw	62
  1558   0010F6  ECB1  F00A         	call	_SetShortAddr
  1559   0010FA                     
  1560                           ;drivers/scr/drv_mrf24j40.c: 282:     SetShortAddr((0x32), 0xF6);
  1561   0010FA  0EF6               	movlw	246
  1562   0010FC  6E03               	movwf	SetShortAddr@value^0,c
  1563   0010FE  0E32               	movlw	50
  1564   001100  ECB1  F00A         	call	_SetShortAddr
  1565   001104                     
  1566                           ;drivers/scr/drv_mrf24j40.c: 283:     SetChannel();
  1567   001104  ECCD  F009         	call	_SetChannel	;wreg free
  1568   001108                     
  1569                           ;drivers/scr/drv_mrf24j40.c: 284:  SetShortAddr((0x0D), 0x01);
  1570   001108  0E01               	movlw	1
  1571   00110A  6E03               	movwf	SetShortAddr@value^0,c
  1572   00110C  0E0D               	movlw	13
  1573   00110E  ECB1  F00A         	call	_SetShortAddr
  1574   001112                     
  1575                           ;drivers/scr/drv_mrf24j40.c: 285:  SetDeviceAddress();
  1576   001112  EC87  F00A         	call	_SetDeviceAddress	;wreg free
  1577   001116                     
  1578                           ;drivers/scr/drv_mrf24j40.c: 286:     SetDeviceMACAddress();
  1579   001116  ECFC  F009         	call	_SetDeviceMACAddress	;wreg free
  1580   00111A                     
  1581                           ;drivers/scr/drv_mrf24j40.c: 287:  SetShortAddr((0x2E), 0x95);
  1582   00111A  0E95               	movlw	149
  1583   00111C  6E03               	movwf	SetShortAddr@value^0,c
  1584   00111E  0E2E               	movlw	46
  1585   001120  ECB1  F00A         	call	_SetShortAddr
  1586   001124                     
  1587                           ;drivers/scr/drv_mrf24j40.c: 288:  SetShortAddr((0x12), 0xB9);
  1588   001124  0EB9               	movlw	185
  1589   001126  6E03               	movwf	SetShortAddr@value^0,c
  1590   001128  0E12               	movlw	18
  1591   00112A  ECB1  F00A         	call	_SetShortAddr
  1592   00112E                     
  1593                           ;drivers/scr/drv_mrf24j40.c: 297:  SetShortAddr((0x00),0x00);
  1594   00112E  0E00               	movlw	0
  1595   001130  6E03               	movwf	SetShortAddr@value^0,c
  1596   001132  0E00               	movlw	0
  1597   001134  ECB1  F00A         	call	_SetShortAddr
  1598   001138  0012               	return		;funcret
  1599   00113A                     __end_of_MRF24J40Init:
  1600                           	callstack 0
  1601                           
  1602 ;; *************** function _SetDeviceMACAddress *****************
  1603 ;; Defined at:
  1604 ;;		line 433 in file "drivers/scr/drv_mrf24j40.c"
  1605 ;; Parameters:    Size  Location     Type
  1606 ;;		None
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;		None
  1609 ;; Return value:  Size  Location     Type
  1610 ;;                  1    wreg      void 
  1611 ;; Registers used:
  1612 ;;		wreg, status,2, status,0, cstack
  1613 ;; Tracked objects:
  1614 ;;		On entry : 0/0
  1615 ;;		On exit  : 0/0
  1616 ;;		Unchanged: 0/0
  1617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;Total ram usage:        0 bytes
  1623 ;; Hardware stack levels used: 1
  1624 ;; Hardware stack levels required when called: 3
  1625 ;; This function calls:
  1626 ;;		_SetShortAddr
  1627 ;; This function is called by:
  1628 ;;		_MRF24J40Init
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text4
  1633   0013F8                     __ptext4:
  1634                           	callstack 0
  1635   0013F8                     _SetDeviceMACAddress:
  1636                           	callstack 26
  1637   0013F8                     
  1638                           ;drivers/scr/drv_mrf24j40.c: 435:  SetShortAddr((0x05), mrf24_data_config.my_mac[0]);
  1639   0013F8  C074  F003         	movff	_mrf24_data_config+20,SetShortAddr@value
  1640   0013FC  0E05               	movlw	5
  1641   0013FE  ECB1  F00A         	call	_SetShortAddr
  1642                           
  1643                           ;drivers/scr/drv_mrf24j40.c: 436:  SetShortAddr((0x06), mrf24_data_config.my_mac[1]);
  1644   001402  C075  F003         	movff	_mrf24_data_config+21,SetShortAddr@value
  1645   001406  0E06               	movlw	6
  1646   001408  ECB1  F00A         	call	_SetShortAddr
  1647                           
  1648                           ;drivers/scr/drv_mrf24j40.c: 437:  SetShortAddr((0x07), mrf24_data_config.my_mac[2]);
  1649   00140C  C076  F003         	movff	_mrf24_data_config+22,SetShortAddr@value
  1650   001410  0E07               	movlw	7
  1651   001412  ECB1  F00A         	call	_SetShortAddr
  1652                           
  1653                           ;drivers/scr/drv_mrf24j40.c: 438:  SetShortAddr((0x08), mrf24_data_config.my_mac[3]);
  1654   001416  C077  F003         	movff	_mrf24_data_config+23,SetShortAddr@value
  1655   00141A  0E08               	movlw	8
  1656   00141C  ECB1  F00A         	call	_SetShortAddr
  1657                           
  1658                           ;drivers/scr/drv_mrf24j40.c: 439:  SetShortAddr((0x09), mrf24_data_config.my_mac[4]);
  1659   001420  C078  F003         	movff	_mrf24_data_config+24,SetShortAddr@value
  1660   001424  0E09               	movlw	9
  1661   001426  ECB1  F00A         	call	_SetShortAddr
  1662                           
  1663                           ;drivers/scr/drv_mrf24j40.c: 440:  SetShortAddr((0x0A), mrf24_data_config.my_mac[5]);
  1664   00142A  C079  F003         	movff	_mrf24_data_config+25,SetShortAddr@value
  1665   00142E  0E0A               	movlw	10
  1666   001430  ECB1  F00A         	call	_SetShortAddr
  1667                           
  1668                           ;drivers/scr/drv_mrf24j40.c: 441:  SetShortAddr((0x0B), mrf24_data_config.my_mac[6]);
  1669   001434  C07A  F003         	movff	_mrf24_data_config+26,SetShortAddr@value
  1670   001438  0E0B               	movlw	11
  1671   00143A  ECB1  F00A         	call	_SetShortAddr
  1672                           
  1673                           ;drivers/scr/drv_mrf24j40.c: 442:  SetShortAddr((0x0C), mrf24_data_config.my_mac[7]);
  1674   00143E  C07B  F003         	movff	_mrf24_data_config+27,SetShortAddr@value
  1675   001442  0E0C               	movlw	12
  1676   001444  ECB1  F00A         	call	_SetShortAddr
  1677   001448  0012               	return		;funcret
  1678   00144A                     __end_of_SetDeviceMACAddress:
  1679                           	callstack 0
  1680                           
  1681 ;; *************** function _SetDeviceAddress *****************
  1682 ;; Defined at:
  1683 ;;		line 419 in file "drivers/scr/drv_mrf24j40.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      void 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0, cstack
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;Total ram usage:        0 bytes
  1702 ;; Hardware stack levels used: 1
  1703 ;; Hardware stack levels required when called: 3
  1704 ;; This function calls:
  1705 ;;		_SetShortAddr
  1706 ;; This function is called by:
  1707 ;;		_MRF24J40Init
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text5
  1712   00150E                     __ptext5:
  1713                           	callstack 0
  1714   00150E                     _SetDeviceAddress:
  1715                           	callstack 26
  1716   00150E                     
  1717                           ;drivers/scr/drv_mrf24j40.c: 421:  SetShortAddr((0x04), (u_int_8) (mrf24_data_config.my_
      +                          address >> 8));
  1718   00150E  0100               	movlb	0	; () banked
  1719   001510  517F               	movf	(_mrf24_data_config+31)& (0+255),w,b
  1720   001512  6E03               	movwf	SetShortAddr@value^0,c
  1721   001514  0E04               	movlw	4
  1722   001516  ECB1  F00A         	call	_SetShortAddr
  1723                           
  1724                           ;drivers/scr/drv_mrf24j40.c: 422:  SetShortAddr((0x03), (u_int_8) (mrf24_data_config.my_
      +                          address));
  1725   00151A  C07E  F003         	movff	_mrf24_data_config+30,SetShortAddr@value
  1726   00151E  0E03               	movlw	3
  1727   001520  ECB1  F00A         	call	_SetShortAddr
  1728                           
  1729                           ;drivers/scr/drv_mrf24j40.c: 423:  SetShortAddr((0x02), (u_int_8) (mrf24_data_config.my_
      +                          panid >> 8));
  1730   001524  0100               	movlb	0	; () banked
  1731   001526  517D               	movf	(_mrf24_data_config+29)& (0+255),w,b
  1732   001528  6E03               	movwf	SetShortAddr@value^0,c
  1733   00152A  0E02               	movlw	2
  1734   00152C  ECB1  F00A         	call	_SetShortAddr
  1735                           
  1736                           ;drivers/scr/drv_mrf24j40.c: 424:  SetShortAddr((0x01), (u_int_8) (mrf24_data_config.my_
      +                          panid));
  1737   001530  C07C  F003         	movff	_mrf24_data_config+28,SetShortAddr@value
  1738   001534  0E01               	movlw	1
  1739   001536  ECB1  F00A         	call	_SetShortAddr
  1740   00153A  0012               	return		;funcret
  1741   00153C                     __end_of_SetDeviceAddress:
  1742                           	callstack 0
  1743                           
  1744 ;; *************** function _SetChannel *****************
  1745 ;; Defined at:
  1746 ;;		line 398 in file "drivers/scr/drv_mrf24j40.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;		None
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  aux             1    7[COMRAM] unsigned char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, status,2, status,0, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1763 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1764 ;;Total ram usage:        1 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 3
  1767 ;; This function calls:
  1768 ;;		_GetLongAddr
  1769 ;;		_SetLongAddr
  1770 ;;		_SetShortAddr
  1771 ;; This function is called by:
  1772 ;;		_MRF24J40Init
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text6
  1777   00139A                     __ptext6:
  1778                           	callstack 0
  1779   00139A                     _SetChannel:
  1780                           	callstack 26
  1781   00139A                     
  1782                           ;drivers/scr/drv_mrf24j40.c: 401:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  1783   00139A  0E02               	movlw	2
  1784   00139C  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  1785   00139E  0E00               	movlw	0
  1786   0013A0  6E03               	movwf	SetLongAddr@reg_address^0,c
  1787   0013A2  C063  F005         	movff	_mrf24_data_config+3,SetLongAddr@value
  1788   0013A6  EC47  F00A         	call	_SetLongAddr	;wreg free
  1789                           
  1790                           ;drivers/scr/drv_mrf24j40.c: 402:     SetLongAddr((0x203), (0XC0) | (0X38));
  1791   0013AA  0E02               	movlw	2
  1792   0013AC  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  1793   0013AE  0E03               	movlw	3
  1794   0013B0  6E03               	movwf	SetLongAddr@reg_address^0,c
  1795   0013B2  0EF8               	movlw	248
  1796   0013B4  6E05               	movwf	SetLongAddr@value^0,c
  1797   0013B6  EC47  F00A         	call	_SetLongAddr	;wreg free
  1798                           
  1799                           ;drivers/scr/drv_mrf24j40.c: 403:  SetShortAddr((0x36), 0x04);
  1800   0013BA  0E04               	movlw	4
  1801   0013BC  6E03               	movwf	SetShortAddr@value^0,c
  1802   0013BE  0E36               	movlw	54
  1803   0013C0  ECB1  F00A         	call	_SetShortAddr
  1804                           
  1805                           ;drivers/scr/drv_mrf24j40.c: 404:  SetShortAddr((0x36), 0x00);
  1806   0013C4  0E00               	movlw	0
  1807   0013C6  6E03               	movwf	SetShortAddr@value^0,c
  1808   0013C8  0E36               	movlw	54
  1809   0013CA  ECB1  F00A         	call	_SetShortAddr
  1810   0013CE                     
  1811                           ;drivers/scr/drv_mrf24j40.c: 405:  _delay((unsigned long)((192)*(16000000/4000000.0)));;
  1812   0013CE  0E00               	movlw	0
  1813   0013D0                     u527:
  1814   0013D0  2EE8               	decfsz	wreg,f,c
  1815   0013D2  D7FE               	bra	u527
  1816   0013D4                     l1466:
  1817                           
  1818                           ;drivers/scr/drv_mrf24j40.c: 409:   aux = GetLongAddr((0x20f));
  1819   0013D4  0E02               	movlw	2
  1820   0013D6  6E04               	movwf	(GetLongAddr@reg_address+1)^0,c
  1821   0013D8  0E0F               	movlw	15
  1822   0013DA  6E03               	movwf	GetLongAddr@reg_address^0,c
  1823   0013DC  EC25  F00A         	call	_GetLongAddr	;wreg free
  1824   0013E0  6E08               	movwf	SetChannel@aux^0,c
  1825   0013E2                     
  1826                           ;drivers/scr/drv_mrf24j40.c: 410:  }while((aux & 0xA0) != 0xA0);
  1827   0013E2  5008               	movf	SetChannel@aux^0,w,c
  1828   0013E4  0BA0               	andlw	160
  1829   0013E6  0AA0               	xorlw	160
  1830   0013E8  A4D8               	btfss	status,2,c
  1831   0013EA  EFF9  F009         	goto	u321
  1832   0013EE  EFFB  F009         	goto	u320
  1833   0013F2                     u321:
  1834   0013F2  EFEA  F009         	goto	l1466
  1835   0013F6                     u320:
  1836   0013F6  0012               	return		;funcret
  1837   0013F8                     __end_of_SetChannel:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _GetLongAddr *****************
  1841 ;; Defined at:
  1842 ;;		line 380 in file "drivers/scr/drv_mrf24j40.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;  reg_address     2    2[COMRAM] unsigned int 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  toReturn        1    6[COMRAM] unsigned char 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      unsigned char 
  1849 ;; Registers used:
  1850 ;;		wreg, status,2, status,0, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1856 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;Total ram usage:        5 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 2
  1863 ;; This function calls:
  1864 ;;		_ReadByteSPIPort
  1865 ;;		_SetCSPin
  1866 ;;		_WriteByteSPIPort
  1867 ;; This function is called by:
  1868 ;;		_SetChannel
  1869 ;;		_ReciboPaquete
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text7
  1874   00144A                     __ptext7:
  1875                           	callstack 0
  1876   00144A                     _GetLongAddr:
  1877                           	callstack 26
  1878   00144A                     
  1879                           ;drivers/scr/drv_mrf24j40.c: 382:  u_int_8 toReturn;;drivers/scr/drv_mrf24j40.c: 383:   
      +                            reg_address = (reg_address << 5) | 0x8000;
  1880   00144A  C003  F005         	movff	GetLongAddr@reg_address,??_GetLongAddr
  1881   00144E  C004  F006         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  1882   001452  0E05               	movlw	5
  1883   001454                     u295:
  1884   001454  90D8               	bcf	status,0,c
  1885   001456  3605               	rlcf	??_GetLongAddr^0,f,c
  1886   001458  3606               	rlcf	(??_GetLongAddr+1)^0,f,c
  1887   00145A  2EE8               	decfsz	wreg,f,c
  1888   00145C  EF2A  F00A         	goto	u295
  1889   001460  0E00               	movlw	0
  1890   001462  1005               	iorwf	??_GetLongAddr^0,w,c
  1891   001464  6E03               	movwf	GetLongAddr@reg_address^0,c
  1892   001466  0E80               	movlw	128
  1893   001468  1006               	iorwf	(??_GetLongAddr+1)^0,w,c
  1894   00146A  6E04               	movwf	(GetLongAddr@reg_address+1)^0,c
  1895   00146C                     
  1896                           ;drivers/scr/drv_mrf24j40.c: 384:     SetCSPin(0);
  1897   00146C  0E00               	movlw	0
  1898   00146E  EC02  F00B         	call	_SetCSPin
  1899   001472                     
  1900                           ;drivers/scr/drv_mrf24j40.c: 385:     WriteByteSPIPort((u_int_8) (reg_address >> 8));
  1901   001472  5004               	movf	(GetLongAddr@reg_address+1)^0,w,c
  1902   001474  EC09  F00B         	call	_WriteByteSPIPort
  1903   001478                     
  1904                           ;drivers/scr/drv_mrf24j40.c: 386:  WriteByteSPIPort((u_int_8) reg_address );
  1905   001478  5003               	movf	GetLongAddr@reg_address^0,w,c
  1906   00147A  EC09  F00B         	call	_WriteByteSPIPort
  1907   00147E                     
  1908                           ;drivers/scr/drv_mrf24j40.c: 388:  toReturn = ReadByteSPIPort();
  1909   00147E  EC0E  F00B         	call	_ReadByteSPIPort	;wreg free
  1910   001482  6E07               	movwf	GetLongAddr@toReturn^0,c
  1911   001484                     
  1912                           ;drivers/scr/drv_mrf24j40.c: 389:     SetCSPin(1);
  1913   001484  0E01               	movlw	1
  1914   001486  EC02  F00B         	call	_SetCSPin
  1915   00148A                     
  1916                           ;drivers/scr/drv_mrf24j40.c: 390:  return toReturn;
  1917   00148A  5007               	movf	GetLongAddr@toReturn^0,w,c
  1918   00148C  0012               	return		;funcret
  1919   00148E                     __end_of_GetLongAddr:
  1920                           	callstack 0
  1921                           
  1922 ;; *************** function _ReadByteSPIPort *****************
  1923 ;; Defined at:
  1924 ;;		line 44 in file "drivers/scr/drv_mrf24j40_port.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      unsigned char 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1942 ;;Total ram usage:        0 bytes
  1943 ;; Hardware stack levels used: 1
  1944 ;; Hardware stack levels required when called: 1
  1945 ;; This function calls:
  1946 ;;		_SPI_read
  1947 ;; This function is called by:
  1948 ;;		_GetLongAddr
  1949 ;;		_GetShortAddr
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           	psect	text8
  1954   00161C                     __ptext8:
  1955                           	callstack 0
  1956   00161C                     _ReadByteSPIPort:
  1957                           	callstack 26
  1958   00161C                     
  1959                           ;drivers/scr/drv_mrf24j40_port.c: 46:     return SPI_read();
  1960   00161C  ECE9  F00A         	call	_SPI_read	;wreg free
  1961   001620  0012               	return		;funcret
  1962   001622                     __end_of_ReadByteSPIPort:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _SPI_read *****************
  1966 ;; Defined at:
  1967 ;;		line 66 in file "drivers/scr/drv_mspi_port.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;		None
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;		None
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      unsigned char 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used: 1
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_ReadByteSPIPort
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text9
  1995   0015D2                     __ptext9:
  1996                           	callstack 0
  1997   0015D2                     _SPI_read:
  1998                           	callstack 26
  1999   0015D2                     
  2000                           ;drivers/scr/drv_mspi_port.c: 68:     SSPCON1bits.WCOL = 0;
  2001   0015D2  9EC6               	bcf	198,7,c	;volatile
  2002                           
  2003                           ;drivers/scr/drv_mspi_port.c: 69:     SSPBUF = 0x00;
  2004   0015D4  6AC9               	clrf	201,c	;volatile
  2005   0015D6                     l225:
  2006   0015D6  A0C7               	btfss	199,0,c	;volatile
  2007   0015D8  EFF0  F00A         	goto	u261
  2008   0015DC  EFF2  F00A         	goto	u260
  2009   0015E0                     u261:
  2010   0015E0  EFEB  F00A         	goto	l225
  2011   0015E4                     u260:
  2012   0015E4                     
  2013                           ;drivers/scr/drv_mspi_port.c: 71:     return SSPBUF;
  2014   0015E4  50C9               	movf	201,w,c	;volatile
  2015   0015E6  0012               	return		;funcret
  2016   0015E8                     __end_of_SPI_read:
  2017                           	callstack 0
  2018                           
  2019 ;; *************** function _InicializoVariables *****************
  2020 ;; Defined at:
  2021 ;;		line 307 in file "drivers/scr/drv_mrf24j40.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  i               2    1[COMRAM] int 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2038 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2039 ;;Total ram usage:        3 bytes
  2040 ;; Hardware stack levels used: 1
  2041 ;; This function calls:
  2042 ;;		Nothing
  2043 ;; This function is called by:
  2044 ;;		_MRF24J40Init
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text10
  2049   0012FC                     __ptext10:
  2050                           	callstack 0
  2051   0012FC                     _InicializoVariables:
  2052                           	callstack 29
  2053   0012FC                     
  2054                           ;drivers/scr/drv_mrf24j40.c: 309:     for(int i = 0; i < 16; i++){
  2055   0012FC  0E00               	movlw	0
  2056   0012FE  6E03               	movwf	(InicializoVariables@i+1)^0,c
  2057   001300  0E00               	movlw	0
  2058   001302  6E02               	movwf	InicializoVariables@i^0,c
  2059   001304                     l1436:
  2060                           
  2061                           ;drivers/scr/drv_mrf24j40.c: 311:         if(i < 8)
  2062   001304  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  2063   001306  EF90  F009         	goto	u300
  2064   00130A  5003               	movf	(InicializoVariables@i+1)^0,w,c
  2065   00130C  E107               	bnz	u301
  2066   00130E  0E08               	movlw	8
  2067   001310  5C02               	subwf	InicializoVariables@i^0,w,c
  2068   001312  B0D8               	btfsc	status,0,c
  2069   001314  EF8E  F009         	goto	u301
  2070   001318  EF90  F009         	goto	u300
  2071   00131C                     u301:
  2072   00131C  EF9C  F009         	goto	l107
  2073   001320                     u300:
  2074   001320                     
  2075                           ;drivers/scr/drv_mrf24j40.c: 312:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  2076   001320  5002               	movf	InicializoVariables@i^0,w,c
  2077   001322  0F11               	addlw	low _default_mac_address
  2078   001324  6E01               	movwf	??_InicializoVariables^0,c
  2079   001326  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  2080   00132A                     	if	0	;There is only one active tblptr byte
  2081   00132A                     	endif
  2082   00132A                     	if	0	;tblptru may be non-zero
  2083   00132A                     	endif
  2084   00132A                     	if	0	;tblptru may be non-zero
  2085   00132A                     	endif
  2086   00132A  5002               	movf	InicializoVariables@i^0,w,c
  2087   00132C  0F74               	addlw	low (_mrf24_data_config+20)
  2088   00132E  6ED9               	movwf	fsr2l,c
  2089   001330  6ADA               	clrf	fsr2h,c
  2090   001332  0008               	tblrd		*
  2091   001334  CFF5 FFDF          	movff	tablat,indf2
  2092   001338                     l107:
  2093                           
  2094                           ;drivers/scr/drv_mrf24j40.c: 313:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  2095   001338  5002               	movf	InicializoVariables@i^0,w,c
  2096   00133A  0F01               	addlw	low _default_security_key
  2097   00133C  6E01               	movwf	??_InicializoVariables^0,c
  2098   00133E  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  2099   001342                     	if	0	;There is only one active tblptr byte
  2100   001342                     	endif
  2101   001342                     	if	0	;tblptru may be non-zero
  2102   001342                     	endif
  2103   001342                     	if	0	;tblptru may be non-zero
  2104   001342                     	endif
  2105   001342  5002               	movf	InicializoVariables@i^0,w,c
  2106   001344  0F64               	addlw	low (_mrf24_data_config+4)
  2107   001346  6ED9               	movwf	fsr2l,c
  2108   001348  6ADA               	clrf	fsr2h,c
  2109   00134A  0008               	tblrd		*
  2110   00134C  CFF5 FFDF          	movff	tablat,indf2
  2111   001350                     
  2112                           ;drivers/scr/drv_mrf24j40.c: 314:     }
  2113   001350  4A02               	infsnz	InicializoVariables@i^0,f,c
  2114   001352  2A03               	incf	(InicializoVariables@i+1)^0,f,c
  2115   001354  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  2116   001356  EFB6  F009         	goto	u311
  2117   00135A  5003               	movf	(InicializoVariables@i+1)^0,w,c
  2118   00135C  E109               	bnz	u310
  2119   00135E  0E10               	movlw	16
  2120   001360  5C02               	subwf	InicializoVariables@i^0,w,c
  2121   001362  A0D8               	btfss	status,0,c
  2122   001364  EFB6  F009         	goto	u311
  2123   001368  EFB8  F009         	goto	u310
  2124   00136C                     u311:
  2125   00136C  EF82  F009         	goto	l1436
  2126   001370                     u310:
  2127   001370                     
  2128                           ;drivers/scr/drv_mrf24j40.c: 315:     mrf24_data_config.sequence_number = 0x68;
  2129   001370  0E68               	movlw	104
  2130   001372  0100               	movlb	0	; () banked
  2131   001374  6F62               	movwf	(_mrf24_data_config+2)& (0+255),b
  2132                           
  2133                           ;drivers/scr/drv_mrf24j40.c: 316:     mrf24_data_config.my_channel = CH_11;
  2134   001376  0E03               	movlw	3
  2135   001378  6F63               	movwf	(_mrf24_data_config+3)& (0+255),b
  2136   00137A                     
  2137                           ; BSR set to: 0
  2138                           ;drivers/scr/drv_mrf24j40.c: 317:     mrf24_data_config.get_new_msg = 0;
  2139   00137A  6B60               	clrf	_mrf24_data_config& (0+255),b
  2140   00137C                     
  2141                           ; BSR set to: 0
  2142                           ;drivers/scr/drv_mrf24j40.c: 318:     mrf24_data_config.put_new_msg = 0;
  2143   00137C  6B61               	clrf	(_mrf24_data_config+1)& (0+255),b
  2144                           
  2145                           ;drivers/scr/drv_mrf24j40.c: 319:     mrf24_data_config.my_panid = 0x1234;
  2146   00137E  0E12               	movlw	18
  2147   001380  6F7D               	movwf	(_mrf24_data_config+29)& (0+255),b
  2148   001382  0E34               	movlw	52
  2149   001384  6F7C               	movwf	(_mrf24_data_config+28)& (0+255),b
  2150                           
  2151                           ;drivers/scr/drv_mrf24j40.c: 320:     mrf24_data_config.my_address = 0x0001;
  2152   001386  0E00               	movlw	0
  2153   001388  6F7F               	movwf	(_mrf24_data_config+31)& (0+255),b
  2154   00138A  0E01               	movlw	1
  2155   00138C  6F7E               	movwf	(_mrf24_data_config+30)& (0+255),b
  2156                           
  2157                           ;drivers/scr/drv_mrf24j40.c: 321:     mrf24_data_config.intervalo = 0x2222;
  2158   00138E  0E22               	movlw	34
  2159   001390  6F81               	movwf	(_mrf24_data_config+33)& (0+255),b
  2160   001392  0E22               	movlw	34
  2161   001394  6F80               	movwf	(_mrf24_data_config+32)& (0+255),b
  2162   001396                     
  2163                           ; BSR set to: 0
  2164                           ;drivers/scr/drv_mrf24j40.c: 322:     mrf24_data_config.buffer_entrada[0] = 0;
  2165   001396  6B82               	clrf	(_mrf24_data_config+34)& (0+255),b
  2166   001398                     
  2167                           ; BSR set to: 0
  2168   001398  0012               	return		;funcret
  2169   00139A                     __end_of_InicializoVariables:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _InicializoPines *****************
  2173 ;; Defined at:
  2174 ;;		line 8 in file "drivers/scr/drv_mrf24j40_port.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;                  1    wreg      void 
  2181 ;; Registers used:
  2182 ;;		wreg, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used: 1
  2194 ;; Hardware stack levels required when called: 1
  2195 ;; This function calls:
  2196 ;;		_SetCSPin
  2197 ;;		_SetResetPin
  2198 ;;		_SetWakePin
  2199 ;; This function is called by:
  2200 ;;		_MRF24J40Init
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           	psect	text11
  2205   00159E                     __ptext11:
  2206                           	callstack 0
  2207   00159E                     _InicializoPines:
  2208                           	callstack 28
  2209   00159E                     
  2210                           ;drivers/scr/drv_mrf24j40_port.c: 10:     TRISBbits.TRISB0 = 1;
  2211   00159E  8093               	bsf	147,0,c	;volatile
  2212                           
  2213                           ;drivers/scr/drv_mrf24j40_port.c: 11:     TRISCbits.TRISC6 = 0;
  2214   0015A0  9C94               	bcf	148,6,c	;volatile
  2215                           
  2216                           ;drivers/scr/drv_mrf24j40_port.c: 12:     TRISCbits.TRISC7 = 0;
  2217   0015A2  9E94               	bcf	148,7,c	;volatile
  2218                           
  2219                           ;drivers/scr/drv_mrf24j40_port.c: 13:     TRISDbits.TRISD4 = 0;
  2220   0015A4  9895               	bcf	149,4,c	;volatile
  2221   0015A6                     
  2222                           ;drivers/scr/drv_mrf24j40_port.c: 14:     SetCSPin(1);
  2223   0015A6  0E01               	movlw	1
  2224   0015A8  EC02  F00B         	call	_SetCSPin
  2225                           
  2226                           ;drivers/scr/drv_mrf24j40_port.c: 15:     SetWakePin(1);
  2227   0015AC  0E01               	movlw	1
  2228   0015AE  ECF4  F00A         	call	_SetWakePin
  2229                           
  2230                           ;drivers/scr/drv_mrf24j40_port.c: 16:     SetResetPin(0);
  2231   0015B2  0E00               	movlw	0
  2232   0015B4  ECFB  F00A         	call	_SetResetPin
  2233   0015B8  0012               	return		;funcret
  2234   0015BA                     __end_of_InicializoPines:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function _SetWakePin *****************
  2238 ;; Defined at:
  2239 ;;		line 26 in file "drivers/scr/drv_mrf24j40_port.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  estado          1    wreg     _Bool 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  estado          1    0[COMRAM] _Bool 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      void 
  2246 ;; Registers used:
  2247 ;;		wreg
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;Total ram usage:        1 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; This function calls:
  2260 ;;		Nothing
  2261 ;; This function is called by:
  2262 ;;		_InicializoPines
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text12
  2267   0015E8                     __ptext12:
  2268                           	callstack 0
  2269   0015E8                     _SetWakePin:
  2270                           	callstack 28
  2271                           
  2272                           ;incstack = 0
  2273                           ;SetWakePin@estado stored from wreg
  2274   0015E8  6E01               	movwf	SetWakePin@estado^0,c
  2275   0015EA                     
  2276                           ;drivers/scr/drv_mrf24j40_port.c: 28:     LATCbits.LATC7 = estado;
  2277   0015EA  B001               	btfsc	SetWakePin@estado^0,0,c
  2278   0015EC  D002               	bra	u75
  2279   0015EE  9E8B               	bcf	139,7,c	;volatile
  2280   0015F0  D001               	bra	u76
  2281   0015F2                     u75:
  2282   0015F2  8E8B               	bsf	139,7,c	;volatile
  2283   0015F4                     u76:
  2284   0015F4  0012               	return		;funcret
  2285   0015F6                     __end_of_SetWakePin:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _SetResetPin *****************
  2289 ;; Defined at:
  2290 ;;		line 32 in file "drivers/scr/drv_mrf24j40_port.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  estado          1    wreg     _Bool 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  estado          1    0[COMRAM] _Bool 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  1    wreg      void 
  2297 ;; Registers used:
  2298 ;;		wreg
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;Total ram usage:        1 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; This function calls:
  2311 ;;		Nothing
  2312 ;; This function is called by:
  2313 ;;		_MRF24J40Init
  2314 ;;		_InicializoPines
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text13
  2319   0015F6                     __ptext13:
  2320                           	callstack 0
  2321   0015F6                     _SetResetPin:
  2322                           	callstack 29
  2323                           
  2324                           ;incstack = 0
  2325                           ;SetResetPin@estado stored from wreg
  2326   0015F6  6E01               	movwf	SetResetPin@estado^0,c
  2327   0015F8                     
  2328                           ;drivers/scr/drv_mrf24j40_port.c: 34:     LATDbits.LATD4 = estado;
  2329   0015F8  B001               	btfsc	SetResetPin@estado^0,0,c
  2330   0015FA  D002               	bra	u45
  2331   0015FC  988C               	bcf	140,4,c	;volatile
  2332   0015FE  D001               	bra	u46
  2333   001600                     u45:
  2334   001600  888C               	bsf	140,4,c	;volatile
  2335   001602                     u46:
  2336   001602  0012               	return		;funcret
  2337   001604                     __end_of_SetResetPin:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _EnviarDato *****************
  2341 ;; Defined at:
  2342 ;;		line 499 in file "drivers/scr/drv_mrf24j40.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  pos             1    8[COMRAM] unsigned char 
  2347 ;;  i               1    7[COMRAM] unsigned char 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  1    wreg      void 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;Total ram usage:        2 bytes
  2362 ;; Hardware stack levels used: 1
  2363 ;; Hardware stack levels required when called: 3
  2364 ;; This function calls:
  2365 ;;		_SetLongAddr
  2366 ;;		_SetShortAddr
  2367 ;; This function is called by:
  2368 ;;		_main
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372                           	psect	text14
  2373   00113A                     __ptext14:
  2374                           	callstack 0
  2375   00113A                     _EnviarDato:
  2376                           	callstack 27
  2377   00113A                     
  2378                           ;drivers/scr/drv_mrf24j40.c: 504:  u_int_8 pos = 0;
  2379   00113A  6A09               	clrf	EnviarDato@pos^0,c
  2380   00113C                     
  2381                           ;drivers/scr/drv_mrf24j40.c: 507:  SetLongAddr(pos++, i);
  2382   00113C  0E00               	movlw	0
  2383   00113E  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  2384   001140  0E00               	movlw	0
  2385   001142  6E03               	movwf	SetLongAddr@reg_address^0,c
  2386   001144  0E0F               	movlw	15
  2387   001146  6E05               	movwf	SetLongAddr@value^0,c
  2388   001148  EC47  F00A         	call	_SetLongAddr	;wreg free
  2389   00114C  2A09               	incf	EnviarDato@pos^0,f,c
  2390   00114E                     
  2391                           ;drivers/scr/drv_mrf24j40.c: 508:  SetLongAddr(pos++, mrf24_data_out.tamano_mensaje + i)
      +                          ;
  2392   00114E  C009  F003         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2393   001152  6A04               	clrf	(SetLongAddr@reg_address+1)^0,c
  2394   001154  5011               	movf	(_mrf24_data_out+4)^0,w,c
  2395   001156  0F0F               	addlw	15
  2396   001158  6E05               	movwf	SetLongAddr@value^0,c
  2397   00115A  EC47  F00A         	call	_SetLongAddr	;wreg free
  2398   00115E  2A09               	incf	EnviarDato@pos^0,f,c
  2399   001160                     
  2400                           ;drivers/scr/drv_mrf24j40.c: 509:  SetLongAddr(pos++, (0X01)|(0X20)|(0X40));
  2401   001160  C009  F003         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2402   001164  6A04               	clrf	(SetLongAddr@reg_address+1)^0,c
  2403   001166  0E61               	movlw	97
  2404   001168  6E05               	movwf	SetLongAddr@value^0,c
  2405   00116A  EC47  F00A         	call	_SetLongAddr	;wreg free
  2406   00116E  2A09               	incf	EnviarDato@pos^0,f,c
  2407   001170                     
  2408                           ;drivers/scr/drv_mrf24j40.c: 510:  SetLongAddr(pos++, (0XC0)|(0X08));
  2409   001170  C009  F003         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2410   001174  6A04               	clrf	(SetLongAddr@reg_address+1)^0,c
  2411   001176  0EC8               	movlw	200
  2412   001178  6E05               	movwf	SetLongAddr@value^0,c
  2413   00117A  EC47  F00A         	call	_SetLongAddr	;wreg free
  2414   00117E  2A09               	incf	EnviarDato@pos^0,f,c
  2415   001180                     
  2416                           ;drivers/scr/drv_mrf24j40.c: 511:  SetLongAddr(pos++, mrf24_data_config.sequence_number+
      +                          +);
  2417   001180  C009  F003         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2418   001184  6A04               	clrf	(SetLongAddr@reg_address+1)^0,c
  2419   001186  EE20  F062         	lfsr	2,_mrf24_data_config+2
  2420   00118A  50DF               	movf	indf2,w,c
  2421   00118C  2ADF               	incf	indf2,f,c
  2422   00118E  6E05               	movwf	SetLongAddr@value^0,c
  2423   001190  EC47  F00A         	call	_SetLongAddr	;wreg free
  2424   001194  2A09               	incf	EnviarDato@pos^0,f,c
  2425   001196                     
  2426                           ;drivers/scr/drv_mrf24j40.c: 512:  SetLongAddr(pos++, (u_int_8) mrf24_data_out.destinity
      +                          _panid);
  2427   001196  C009  F003         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2428   00119A  6A04               	clrf	(SetLongAddr@reg_address+1)^0,c
  2429   00119C  C00D  F005         	movff	_mrf24_data_out,SetLongAddr@value
  2430   0011A0  EC47  F00A         	call	_SetLongAddr	;wreg free
  2431   0011A4  2A09               	incf	EnviarDato@pos^0,f,c
  2432   0011A6                     
  2433                           ;drivers/scr/drv_mrf24j40.c: 513:  SetLongAddr(pos++, (u_int_8) (mrf24_data_out.destinit
      +                          y_panid >> 8));
  2434   0011A6  C009  F003         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2435   0011AA  6A04               	clrf	(SetLongAddr@reg_address+1)^0,c
  2436   0011AC  500E               	movf	(_mrf24_data_out+1)^0,w,c
  2437   0011AE  6E05               	movwf	SetLongAddr@value^0,c
  2438   0011B0  EC47  F00A         	call	_SetLongAddr	;wreg free
  2439   0011B4  2A09               	incf	EnviarDato@pos^0,f,c
  2440   0011B6                     
  2441                           ;drivers/scr/drv_mrf24j40.c: 514:  SetLongAddr(pos++, (u_int_8) mrf24_data_out.destinity
      +                          _address);
  2442   0011B6  C009  F003         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2443   0011BA  6A04               	clrf	(SetLongAddr@reg_address+1)^0,c
  2444   0011BC  C00F  F005         	movff	_mrf24_data_out+2,SetLongAddr@value
  2445   0011C0  EC47  F00A         	call	_SetLongAddr	;wreg free
  2446   0011C4  2A09               	incf	EnviarDato@pos^0,f,c
  2447   0011C6                     
  2448                           ;drivers/scr/drv_mrf24j40.c: 515:  SetLongAddr(pos++, (u_int_8) (mrf24_data_out.destinit
      +                          y_address >> 8));
  2449   0011C6  C009  F003         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2450   0011CA  6A04               	clrf	(SetLongAddr@reg_address+1)^0,c
  2451   0011CC  5010               	movf	(_mrf24_data_out+3)^0,w,c
  2452   0011CE  6E05               	movwf	SetLongAddr@value^0,c
  2453   0011D0  EC47  F00A         	call	_SetLongAddr	;wreg free
  2454   0011D4  2A09               	incf	EnviarDato@pos^0,f,c
  2455   0011D6                     
  2456                           ;drivers/scr/drv_mrf24j40.c: 516:  for(i = 0; i < 8; i++)
  2457   0011D6  6A08               	clrf	EnviarDato@i^0,c
  2458   0011D8                     l1576:
  2459                           
  2460                           ;drivers/scr/drv_mrf24j40.c: 517:  {;drivers/scr/drv_mrf24j40.c: 518:   SetLongAddr(pos+
      +                          +, mrf24_data_config.my_mac[i]);
  2461   0011D8  C009  F003         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2462   0011DC  6A04               	clrf	(SetLongAddr@reg_address+1)^0,c
  2463   0011DE  5008               	movf	EnviarDato@i^0,w,c
  2464   0011E0  0F74               	addlw	low (_mrf24_data_config+20)
  2465   0011E2  6ED9               	movwf	fsr2l,c
  2466   0011E4  6ADA               	clrf	fsr2h,c
  2467   0011E6  50DF               	movf	indf2,w,c
  2468   0011E8  6E05               	movwf	SetLongAddr@value^0,c
  2469   0011EA  EC47  F00A         	call	_SetLongAddr	;wreg free
  2470   0011EE  2A09               	incf	EnviarDato@pos^0,f,c
  2471   0011F0                     
  2472                           ;drivers/scr/drv_mrf24j40.c: 519:  }
  2473   0011F0  2A08               	incf	EnviarDato@i^0,f,c
  2474   0011F2  0E07               	movlw	7
  2475   0011F4  6408               	cpfsgt	EnviarDato@i^0,c
  2476   0011F6  EFFF  F008         	goto	u331
  2477   0011FA  EF01  F009         	goto	u330
  2478   0011FE                     u331:
  2479   0011FE  EFEC  F008         	goto	l1576
  2480   001202                     u330:
  2481   001202                     
  2482                           ;drivers/scr/drv_mrf24j40.c: 520:  for(i = 0; i < mrf24_data_out.tamano_mensaje; i++)
  2483   001202  6A08               	clrf	EnviarDato@i^0,c
  2484   001204  EF13  F009         	goto	l1590
  2485   001208                     l1584:
  2486                           
  2487                           ;drivers/scr/drv_mrf24j40.c: 521:  {;drivers/scr/drv_mrf24j40.c: 522:   SetLongAddr(pos+
      +                          +, mrf24_data_out.buffer_salida[i]);
  2488   001208  C009  F003         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2489   00120C  6A04               	clrf	(SetLongAddr@reg_address+1)^0,c
  2490   00120E  5008               	movf	EnviarDato@i^0,w,c
  2491   001210  2412               	addwf	(_mrf24_data_out+5)^0,w,c
  2492   001212  6ED9               	movwf	fsr2l,c
  2493   001214  0E00               	movlw	0
  2494   001216  2013               	addwfc	(_mrf24_data_out+6)^0,w,c
  2495   001218  6EDA               	movwf	fsr2h,c
  2496   00121A  50DF               	movf	indf2,w,c
  2497   00121C  6E05               	movwf	SetLongAddr@value^0,c
  2498   00121E  EC47  F00A         	call	_SetLongAddr	;wreg free
  2499   001222  2A09               	incf	EnviarDato@pos^0,f,c
  2500   001224                     
  2501                           ;drivers/scr/drv_mrf24j40.c: 523:  }
  2502   001224  2A08               	incf	EnviarDato@i^0,f,c
  2503   001226                     l1590:
  2504   001226  5011               	movf	(_mrf24_data_out+4)^0,w,c
  2505   001228  5C08               	subwf	EnviarDato@i^0,w,c
  2506   00122A  A0D8               	btfss	status,0,c
  2507   00122C  EF1A  F009         	goto	u341
  2508   001230  EF1C  F009         	goto	u340
  2509   001234                     u341:
  2510   001234  EF04  F009         	goto	l1584
  2511   001238                     u340:
  2512   001238                     
  2513                           ;drivers/scr/drv_mrf24j40.c: 524:  SetShortAddr((0x1B), 1 | (0X04));
  2514   001238  0E05               	movlw	5
  2515   00123A  6E03               	movwf	SetShortAddr@value^0,c
  2516   00123C  0E1B               	movlw	27
  2517   00123E  ECB1  F00A         	call	_SetShortAddr
  2518   001242  0012               	return		;funcret
  2519   001244                     __end_of_EnviarDato:
  2520                           	callstack 0
  2521                           
  2522 ;; *************** function _SetShortAddr *****************
  2523 ;; Defined at:
  2524 ;;		line 332 in file "drivers/scr/drv_mrf24j40.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  reg_address     1    wreg     unsigned char 
  2527 ;;  value           1    2[COMRAM] unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  reg_address     1    3[COMRAM] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2, status,0, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2539 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;Total ram usage:        2 bytes
  2544 ;; Hardware stack levels used: 1
  2545 ;; Hardware stack levels required when called: 2
  2546 ;; This function calls:
  2547 ;;		_SetCSPin
  2548 ;;		_WriteByteSPIPort
  2549 ;; This function is called by:
  2550 ;;		_MRF24J40Init
  2551 ;;		_SetChannel
  2552 ;;		_SetDeviceAddress
  2553 ;;		_SetDeviceMACAddress
  2554 ;;		_EnviarDato
  2555 ;;		_EnviarDatoEncriptado
  2556 ;;		_EnviarComando
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text15
  2561   001562                     __ptext15:
  2562                           	callstack 0
  2563   001562                     _SetShortAddr:
  2564                           	callstack 27
  2565                           
  2566                           ;incstack = 0
  2567                           ;SetShortAddr@reg_address stored from wreg
  2568   001562  6E04               	movwf	SetShortAddr@reg_address^0,c
  2569   001564                     
  2570                           ;drivers/scr/drv_mrf24j40.c: 334:     reg_address = (u_int_8) (reg_address << 1) | 0x01;
  2571   001564  80D8               	bsf	status,0,c
  2572   001566  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  2573   001568                     
  2574                           ;drivers/scr/drv_mrf24j40.c: 335:     SetCSPin(0);
  2575   001568  0E00               	movlw	0
  2576   00156A  EC02  F00B         	call	_SetCSPin
  2577   00156E                     
  2578                           ;drivers/scr/drv_mrf24j40.c: 336:  WriteByteSPIPort(reg_address);
  2579   00156E  5004               	movf	SetShortAddr@reg_address^0,w,c
  2580   001570  EC09  F00B         	call	_WriteByteSPIPort
  2581   001574                     
  2582                           ;drivers/scr/drv_mrf24j40.c: 337:  WriteByteSPIPort(value);
  2583   001574  5003               	movf	SetShortAddr@value^0,w,c
  2584   001576  EC09  F00B         	call	_WriteByteSPIPort
  2585   00157A                     
  2586                           ;drivers/scr/drv_mrf24j40.c: 338:     SetCSPin(1);
  2587   00157A  0E01               	movlw	1
  2588   00157C  EC02  F00B         	call	_SetCSPin
  2589   001580  0012               	return		;funcret
  2590   001582                     __end_of_SetShortAddr:
  2591                           	callstack 0
  2592                           
  2593 ;; *************** function _SetLongAddr *****************
  2594 ;; Defined at:
  2595 ;;		line 363 in file "drivers/scr/drv_mrf24j40.c"
  2596 ;; Parameters:    Size  Location     Type
  2597 ;;  reg_address     2    2[COMRAM] unsigned int 
  2598 ;;  value           1    4[COMRAM] unsigned char 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2610 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2612 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2613 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2614 ;;Total ram usage:        5 bytes
  2615 ;; Hardware stack levels used: 1
  2616 ;; Hardware stack levels required when called: 2
  2617 ;; This function calls:
  2618 ;;		_SetCSPin
  2619 ;;		_WriteByteSPIPort
  2620 ;; This function is called by:
  2621 ;;		_MRF24J40Init
  2622 ;;		_SetChannel
  2623 ;;		_EnviarDato
  2624 ;;		_EnviarDatoEncriptado
  2625 ;;		_EnviarComando
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           	psect	text16
  2630   00148E                     __ptext16:
  2631                           	callstack 0
  2632   00148E                     _SetLongAddr:
  2633                           	callstack 27
  2634   00148E                     
  2635                           ;drivers/scr/drv_mrf24j40.c: 365:     reg_address = (reg_address << 5) | 0x8010;
  2636   00148E  C003  F006         	movff	SetLongAddr@reg_address,??_SetLongAddr
  2637   001492  C004  F007         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  2638   001496  0E05               	movlw	5
  2639   001498                     u285:
  2640   001498  90D8               	bcf	status,0,c
  2641   00149A  3606               	rlcf	??_SetLongAddr^0,f,c
  2642   00149C  3607               	rlcf	(??_SetLongAddr+1)^0,f,c
  2643   00149E  2EE8               	decfsz	wreg,f,c
  2644   0014A0  EF4C  F00A         	goto	u285
  2645   0014A4  0E10               	movlw	16
  2646   0014A6  1006               	iorwf	??_SetLongAddr^0,w,c
  2647   0014A8  6E03               	movwf	SetLongAddr@reg_address^0,c
  2648   0014AA  0E80               	movlw	128
  2649   0014AC  1007               	iorwf	(??_SetLongAddr+1)^0,w,c
  2650   0014AE  6E04               	movwf	(SetLongAddr@reg_address+1)^0,c
  2651   0014B0                     
  2652                           ;drivers/scr/drv_mrf24j40.c: 366:     SetCSPin(0);
  2653   0014B0  0E00               	movlw	0
  2654   0014B2  EC02  F00B         	call	_SetCSPin
  2655   0014B6                     
  2656                           ;drivers/scr/drv_mrf24j40.c: 367:  WriteByteSPIPort((u_int_8) (reg_address >> 8));
  2657   0014B6  5004               	movf	(SetLongAddr@reg_address+1)^0,w,c
  2658   0014B8  EC09  F00B         	call	_WriteByteSPIPort
  2659   0014BC                     
  2660                           ;drivers/scr/drv_mrf24j40.c: 368:  WriteByteSPIPort((u_int_8) reg_address );
  2661   0014BC  5003               	movf	SetLongAddr@reg_address^0,w,c
  2662   0014BE  EC09  F00B         	call	_WriteByteSPIPort
  2663   0014C2                     
  2664                           ;drivers/scr/drv_mrf24j40.c: 370:  WriteByteSPIPort(value);
  2665   0014C2  5005               	movf	SetLongAddr@value^0,w,c
  2666   0014C4  EC09  F00B         	call	_WriteByteSPIPort
  2667   0014C8                     
  2668                           ;drivers/scr/drv_mrf24j40.c: 371:     SetCSPin(1);
  2669   0014C8  0E01               	movlw	1
  2670   0014CA  EC02  F00B         	call	_SetCSPin
  2671   0014CE  0012               	return		;funcret
  2672   0014D0                     __end_of_SetLongAddr:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _WriteByteSPIPort *****************
  2676 ;; Defined at:
  2677 ;;		line 38 in file "drivers/scr/drv_mrf24j40_port.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  dato            1    wreg     unsigned char 
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;  dato            1    1[COMRAM] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;Total ram usage:        1 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 1
  2698 ;; This function calls:
  2699 ;;		_SPI_write
  2700 ;; This function is called by:
  2701 ;;		_SetShortAddr
  2702 ;;		_SetLongAddr
  2703 ;;		_GetLongAddr
  2704 ;;		_GetShortAddr
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text17
  2709   001612                     __ptext17:
  2710                           	callstack 0
  2711   001612                     _WriteByteSPIPort:
  2712                           	callstack 27
  2713                           
  2714                           ;incstack = 0
  2715                           ;WriteByteSPIPort@dato stored from wreg
  2716   001612  6E02               	movwf	WriteByteSPIPort@dato^0,c
  2717   001614                     
  2718                           ;drivers/scr/drv_mrf24j40_port.c: 40:     SPI_write(dato);
  2719   001614  5002               	movf	WriteByteSPIPort@dato^0,w,c
  2720   001616  ECDD  F00A         	call	_SPI_write
  2721   00161A  0012               	return		;funcret
  2722   00161C                     __end_of_WriteByteSPIPort:
  2723                           	callstack 0
  2724                           
  2725 ;; *************** function _SPI_write *****************
  2726 ;; Defined at:
  2727 ;;		line 53 in file "drivers/scr/drv_mspi_port.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  dato            1    wreg     unsigned char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  dato            1    0[COMRAM] unsigned char 
  2732 ;; Return value:  Size  Location     Type
  2733 ;;                  1    wreg      void 
  2734 ;; Registers used:
  2735 ;;		wreg
  2736 ;; Tracked objects:
  2737 ;;		On entry : 0/0
  2738 ;;		On exit  : 0/0
  2739 ;;		Unchanged: 0/0
  2740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;Total ram usage:        1 bytes
  2746 ;; Hardware stack levels used: 1
  2747 ;; This function calls:
  2748 ;;		Nothing
  2749 ;; This function is called by:
  2750 ;;		_WriteByteSPIPort
  2751 ;; This function uses a non-reentrant model
  2752 ;;
  2753                           
  2754                           	psect	text18
  2755   0015BA                     __ptext18:
  2756                           	callstack 0
  2757   0015BA                     _SPI_write:
  2758                           	callstack 27
  2759                           
  2760                           ;incstack = 0
  2761                           ;SPI_write@dato stored from wreg
  2762   0015BA  6E01               	movwf	SPI_write@dato^0,c
  2763   0015BC                     
  2764                           ;drivers/scr/drv_mspi_port.c: 55:     PIR1bits.SSPIF = 0;
  2765   0015BC  969E               	bcf	158,3,c	;volatile
  2766   0015BE                     
  2767                           ;drivers/scr/drv_mspi_port.c: 56:     SSPBUF = dato;
  2768   0015BE  C001  FFC9         	movff	SPI_write@dato,4041	;volatile
  2769   0015C2                     l219:
  2770   0015C2  A69E               	btfss	158,3,c	;volatile
  2771   0015C4  EFE6  F00A         	goto	u251
  2772   0015C8  EFE8  F00A         	goto	u250
  2773   0015CC                     u251:
  2774   0015CC  EFE1  F00A         	goto	l219
  2775   0015D0                     u250:
  2776   0015D0  0012               	return		;funcret
  2777   0015D2                     __end_of_SPI_write:
  2778                           	callstack 0
  2779                           
  2780 ;; *************** function _SetCSPin *****************
  2781 ;; Defined at:
  2782 ;;		line 20 in file "drivers/scr/drv_mrf24j40_port.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  estado          1    wreg     _Bool 
  2785 ;; Auto vars:     Size  Location     Type
  2786 ;;  estado          1    0[COMRAM] _Bool 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  1    wreg      void 
  2789 ;; Registers used:
  2790 ;;		wreg
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;Total ram usage:        1 bytes
  2801 ;; Hardware stack levels used: 1
  2802 ;; This function calls:
  2803 ;;		Nothing
  2804 ;; This function is called by:
  2805 ;;		_SetShortAddr
  2806 ;;		_SetLongAddr
  2807 ;;		_GetLongAddr
  2808 ;;		_InicializoPines
  2809 ;;		_GetShortAddr
  2810 ;; This function uses a non-reentrant model
  2811 ;;
  2812                           
  2813                           	psect	text19
  2814   001604                     __ptext19:
  2815                           	callstack 0
  2816   001604                     _SetCSPin:
  2817                           	callstack 28
  2818                           
  2819                           ;incstack = 0
  2820                           ;SetCSPin@estado stored from wreg
  2821   001604  6E01               	movwf	SetCSPin@estado^0,c
  2822   001606                     
  2823                           ;drivers/scr/drv_mrf24j40_port.c: 22:     LATCbits.LATC6 = estado;
  2824   001606  B001               	btfsc	SetCSPin@estado^0,0,c
  2825   001608  D002               	bra	u275
  2826   00160A  9C8B               	bcf	139,6,c	;volatile
  2827   00160C  D001               	bra	u276
  2828   00160E                     u275:
  2829   00160E  8C8B               	bsf	139,6,c	;volatile
  2830   001610                     u276:
  2831   001610  0012               	return		;funcret
  2832   001612                     __end_of_SetCSPin:
  2833                           	callstack 0
  2834                           
  2835                           	psect	rparam
  2836   000001                     ___rparam_used  equ	1
  2837   000000                     ___param_bank   equ	0
  2838   000000                     __Lparam        equ	__Lrparam
  2839   000000                     __Hparam        equ	__Hrparam
  2840                           
  2841                           	psect	idloc
  2842                           
  2843                           ;Config register IDLOC0 @ 0x200000
  2844                           ;	unspecified, using default values
  2845   200000                     	org	2097152
  2846   200000  FF                 	db	255
  2847                           
  2848                           ;Config register IDLOC1 @ 0x200001
  2849                           ;	unspecified, using default values
  2850   200001                     	org	2097153
  2851   200001  FF                 	db	255
  2852                           
  2853                           ;Config register IDLOC2 @ 0x200002
  2854                           ;	unspecified, using default values
  2855   200002                     	org	2097154
  2856   200002  FF                 	db	255
  2857                           
  2858                           ;Config register IDLOC3 @ 0x200003
  2859                           ;	unspecified, using default values
  2860   200003                     	org	2097155
  2861   200003  FF                 	db	255
  2862                           
  2863                           ;Config register IDLOC4 @ 0x200004
  2864                           ;	unspecified, using default values
  2865   200004                     	org	2097156
  2866   200004  FF                 	db	255
  2867                           
  2868                           ;Config register IDLOC5 @ 0x200005
  2869                           ;	unspecified, using default values
  2870   200005                     	org	2097157
  2871   200005  FF                 	db	255
  2872                           
  2873                           ;Config register IDLOC6 @ 0x200006
  2874                           ;	unspecified, using default values
  2875   200006                     	org	2097158
  2876   200006  FF                 	db	255
  2877                           
  2878                           ;Config register IDLOC7 @ 0x200007
  2879                           ;	unspecified, using default values
  2880   200007                     	org	2097159
  2881   200007  FF                 	db	255
  2882                           
  2883                           	psect	config
  2884                           
  2885                           ; Padding undefined space
  2886   300000                     	org	3145728
  2887   300000  FF                 	db	255
  2888                           
  2889                           ;Config register CONFIG1H @ 0x300001
  2890                           ;	Oscillator Selection bits
  2891                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2892                           ;	Fail-Safe Clock Monitor Enable bit
  2893                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2894                           ;	Internal/External Oscillator Switchover bit
  2895                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2896   300001                     	org	3145729
  2897   300001  08                 	db	8
  2898                           
  2899                           ;Config register CONFIG2L @ 0x300002
  2900                           ;	Power-up Timer Enable bit
  2901                           ;	PWRTEN = OFF, PWRT disabled
  2902                           ;	Brown-out Reset Enable bits
  2903                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2904                           ;	Brown Out Reset Voltage bits
  2905                           ;	BORV = 22, VBOR set to 2.2 V nominal
  2906   300002                     	org	3145730
  2907   300002  11                 	db	17
  2908                           
  2909                           ;Config register CONFIG2H @ 0x300003
  2910                           ;	Watchdog Timer Enable bit
  2911                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2912                           ;	Watchdog Timer Postscale Select bits
  2913                           ;	WDTPS = 8192, 1:8192
  2914   300003                     	org	3145731
  2915   300003  1A                 	db	26
  2916                           
  2917                           ; Padding undefined space
  2918   300004                     	org	3145732
  2919   300004  FF                 	db	255
  2920                           
  2921                           ;Config register CONFIG3H @ 0x300005
  2922                           ;	CCP2 MUX bit
  2923                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2924                           ;	PORTB A/D Enable bit
  2925                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2926                           ;	Low-Power Timer1 Oscillator Enable bit
  2927                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2928                           ;	HFINTOSC Fast Start-up
  2929                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  2930                           ;	MCLR Pin Enable bit
  2931                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2932   300005                     	org	3145733
  2933   300005  81                 	db	129
  2934                           
  2935                           ;Config register CONFIG4L @ 0x300006
  2936                           ;	Stack Full/Underflow Reset Enable bit
  2937                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2938                           ;	Single-Supply ICSP Enable bit
  2939                           ;	LVP = OFF, Single-Supply ICSP disabled
  2940                           ;	Extended Instruction Set Enable bit
  2941                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2942                           ;	Background Debugger Enable bit
  2943                           ;	DEBUG = ON, Background debugger enabled, RB6 and RB7 are dedicated to In-Circuit Debug
  2944   300006                     	org	3145734
  2945   300006  00                 	db	0
  2946                           
  2947                           ; Padding undefined space
  2948   300007                     	org	3145735
  2949   300007  FF                 	db	255
  2950                           
  2951                           ;Config register CONFIG5L @ 0x300008
  2952                           ;	Code Protection Block 0
  2953                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2954                           ;	Code Protection Block 1
  2955                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2956                           ;	Code Protection Block 2
  2957                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2958                           ;	Code Protection Block 3
  2959                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2960   300008                     	org	3145736
  2961   300008  0F                 	db	15
  2962                           
  2963                           ;Config register CONFIG5H @ 0x300009
  2964                           ;	Boot Block Code Protection bit
  2965                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2966                           ;	Data EEPROM Code Protection bit
  2967                           ;	CPD = OFF, Data EEPROM not code-protected
  2968   300009                     	org	3145737
  2969   300009  C0                 	db	192
  2970                           
  2971                           ;Config register CONFIG6L @ 0x30000A
  2972                           ;	Write Protection Block 0
  2973                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2974                           ;	Write Protection Block 1
  2975                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2976                           ;	Write Protection Block 2
  2977                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2978                           ;	Write Protection Block 3
  2979                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  2980   30000A                     	org	3145738
  2981   30000A  0F                 	db	15
  2982                           
  2983                           ;Config register CONFIG6H @ 0x30000B
  2984                           ;	Configuration Register Write Protection bit
  2985                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2986                           ;	Boot Block Write Protection bit
  2987                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  2988                           ;	Data EEPROM Write Protection bit
  2989                           ;	WRTD = OFF, Data EEPROM not write-protected
  2990   30000B                     	org	3145739
  2991   30000B  E0                 	db	224
  2992                           
  2993                           ;Config register CONFIG7L @ 0x30000C
  2994                           ;	unspecified, using default values
  2995                           ;	Table Read Protection Block 0
  2996                           ;	EBTR0 = 0x1, unprogrammed default
  2997                           ;	Table Read Protection Block 1
  2998                           ;	EBTR1 = 0x1, unprogrammed default
  2999                           ;	Table Read Protection Block 2
  3000                           ;	EBTR2 = 0x1, unprogrammed default
  3001                           ;	Table Read Protection Block 3
  3002                           ;	EBTR3 = 0x1, unprogrammed default
  3003   30000C                     	org	3145740
  3004   30000C  0F                 	db	15
  3005                           
  3006                           ;Config register CONFIG7H @ 0x30000D
  3007                           ;	Boot Block Table Read Protection bit
  3008                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3009   30000D                     	org	3145741
  3010   30000D  40                 	db	64
  3011                           tosu	equ	0xFFF
  3012                           tosh	equ	0xFFE
  3013                           tosl	equ	0xFFD
  3014                           stkptr	equ	0xFFC
  3015                           pclatu	equ	0xFFB
  3016                           pclath	equ	0xFFA
  3017                           pcl	equ	0xFF9
  3018                           tblptru	equ	0xFF8
  3019                           tblptrh	equ	0xFF7
  3020                           tblptrl	equ	0xFF6
  3021                           tablat	equ	0xFF5
  3022                           prodh	equ	0xFF4
  3023                           prodl	equ	0xFF3
  3024                           indf0	equ	0xFEF
  3025                           postinc0	equ	0xFEE
  3026                           postdec0	equ	0xFED
  3027                           preinc0	equ	0xFEC
  3028                           plusw0	equ	0xFEB
  3029                           fsr0h	equ	0xFEA
  3030                           fsr0l	equ	0xFE9
  3031                           wreg	equ	0xFE8
  3032                           indf1	equ	0xFE7
  3033                           postinc1	equ	0xFE6
  3034                           postdec1	equ	0xFE5
  3035                           preinc1	equ	0xFE4
  3036                           plusw1	equ	0xFE3
  3037                           fsr1h	equ	0xFE2
  3038                           fsr1l	equ	0xFE1
  3039                           bsr	equ	0xFE0
  3040                           indf2	equ	0xFDF
  3041                           postinc2	equ	0xFDE
  3042                           postdec2	equ	0xFDD
  3043                           preinc2	equ	0xFDC
  3044                           plusw2	equ	0xFDB
  3045                           fsr2h	equ	0xFDA
  3046                           fsr2l	equ	0xFD9
  3047                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    24
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      19
    BANK0           160      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(2) Largest target is 0

    S192$buffer_salida	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _MRF24J40Init->_SetChannel
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_GetLongAddr
    _SetChannel->_SetLongAddr
    _GetLongAddr->_WriteByteSPIPort
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _EnviarDato->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPI_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2662
                                             10 COMRAM     2     2      0
                         _EnviarDato
                       _MRF24J40Init
                         _board_init
 ---------------------------------------------------------------------------------
 (1) _board_init                                           0     0      0       0
                           _spi_init
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         2     2      0    1775
                                              8 COMRAM     2     2      0
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  0     0      0     196
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     196
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           1     1      0     679
                                              7 COMRAM     1     1      0
                        _GetLongAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _GetLongAddr                                          5     3      2     181
                                              2 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (4) _ReadByteSPIPort                                      0     0      0       0
                           _SPI_read
 ---------------------------------------------------------------------------------
 (5) _SPI_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnviarDato                                           2     2      0     887
                                              7 COMRAM     2     2      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     196
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     278
                                              2 COMRAM     5     2      3
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                          _SPI_write
 ---------------------------------------------------------------------------------
 (4) _SPI_write                                            1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EnviarDato
     _SetLongAddr
       _SetCSPin
       _WriteByteSPIPort
         _SPI_write
     _SetShortAddr
       _SetCSPin
       _WriteByteSPIPort
   _MRF24J40Init
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _GetLongAddr
         _ReadByteSPIPort
           _SPI_read
         _SetCSPin
         _WriteByteSPIPort
       _SetLongAddr
       _SetShortAddr
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr
   _board_init
     _spi_init

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      84     52.5%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     12      19     20.0%
BITBIGSFRlll        32      0       0      0.0%
BITBIGSFRlh         16      0       0      0.0%
BITBIGSFRllh        11      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     103      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Mar 25 14:28:09 2025

                 _SSPSTATbits 0FC7                            l15 124C                            l67 150C  
                          u45 1600                            u46 1602                            u75 15F2  
                          u76 15F4                 ?_MRF24J40Init 0001                           l102 1138  
                         l111 1580                           l200 161A                           l120 148C  
                         l107 1338                           l203 1620                           l131 1448  
                         l108 1398                           l117 14CE                           l125 13F6  
                         l222 15D0                           l151 1242                           l128 153A  
                         l216 159C                           l225 15D6                           l219 15C2  
                         l147 1202                           l228 15E6                           l191 1610  
                         l194 15F4                           l188 15B8                           l197 1602  
                         l926 15F8                           l972 15EA                           l976 1582  
                         _GIE 7F97                           u300 1320                           u301 131C  
                         u310 1370                           u311 136C                           u320 13F6  
                         u321 13F2                           u250 15D0                           u330 1202  
                         u251 15CC                           u331 11FE                           u340 1238  
                         u260 15E4                           u341 1234                           u261 15E0  
                         u350 1260                           u351 1258                           u408 12D0  
                         u370 1298                           u275 160E                           u507 102C  
                         u371 1290                           u276 1610                           u285 1498  
                         u517 104C                           u390 12CE                           u295 1454  
                         u527 13D0                           u391 12C6                           u368 1262  
                         u388 129A                           u477 127A                           u487 12B0  
                         u497 12E4                           wreg 0FE8           __end_of_GetLongAddr 148E  
                        l1030 1508                          l1026 14D0                          l1028 1500  
                        l1400 148E                          l1410 14C8                          l1402 14B0  
                        l1404 14B6                          l1420 1478                          l1500 10AC  
                        l1406 14BC                          l1430 12FC                          l1422 147E  
                        l1414 144A                          l1510 10F0                          l1502 10BC  
                        l1408 14C2                          l1440 1350                          l1424 1484  
                        l1416 146C                          l1520 1116                          l1512 10FA  
                        l1504 10CC                          l1600 124E                          l1530 113A  
                        l1450 1396                          l1442 1354                          l1370 15D2  
                        l1426 148A                          l1418 1472                          l1522 111A  
                        l1514 1104                          l1506 10DC                          l1610 12DA  
                        l1602 1270                          l1380 1614                          l1540 115E  
                        l1532 113C                          l1444 1370                          l1436 1304  
                        l1372 15E4                          l1460 139A                          l1524 1124  
                        l1516 1108                          l1508 10E6                          l1612 12F0  
                        l1604 1286                          l1366 15BC                          l1390 1568  
                        l1550 1180                          l1542 1160                          l1534 113C  
                        l1454 159E                          l1446 137A                          l1438 1320  
                        l1462 139A                          l1470 150E                          l1526 112E  
                        l1518 1112                          l1606 12A6                          l1376 1606  
                        l1368 15BE                          l1392 156E                          l1560 11B4  
                        l1552 1194                          l1544 116E                          l1536 114C  
                        l1456 15A6                          l1448 137C                          l1384 161C  
                        l1464 13CE                          l1480 101E                          l1608 12BC  
                        l1394 1574                          l1570 11D6                          l1562 11B6  
                        l1554 1196                          l1546 1170                          l1538 114E  
                        l1466 13D4                          l1474 13F8                          l1490 1062  
                        l1482 1022                          l1396 157A                          l1388 1564  
                        l1580 11F0                          l1564 11C4                          l1556 11A4  
                        l1548 117E                          l1468 13E2                          l1492 106C  
                        l1484 103C                          l1590 1226                          l1582 11F2  
                        l1566 11C6                          l1558 11A6                          l1494 107C  
                        l1486 1042                          l1478 101A                          l1592 1238  
                        l1584 1208                          l1576 11D8                          l1568 11D4  
                        l1496 108C                          l1488 1058                          l1586 1222  
                        l1578 11EE                          l1498 109C                          l1588 1224  
                        l1596 1244                          l1598 1248                          _ADIE 7CEE  
                        _EEIE 7D04                          _T0IE 7F95                          _PEIE 7F96  
                        _RBIE 7F93                          _RCIE 7CED                          _main 1244  
                        fsr2h 0FDA                          indf2 0FDF                          fsr2l 0FD9  
                 EnviarDato@i 0008                          start 0000                  ___param_bank 0000  
           ??_ReadByteSPIPort 0001                ??_MRF24J40Init 0009   __end_of_InicializoVariables 139A  
                       ?_main 0001                         _BCLIE 7D03                         _PORTA 0F80  
                       _PORTB 0F81                         _PORTC 0F82                         _PORTD 0F83  
                       _PORTE 0F84                         _SSPIE 7CEB               _InicializoPines 159E  
     SetShortAddr@reg_address 0004                         tablat 0FF5              __end_of_SPI_read 15E8  
                       status 0FD8                    _EnviarDato 113A           _SetDeviceMACAddress 13F8  
             __initialization 153C                  __end_of_main 12FC              __end_of_SetCSPin 1612  
                 _GetLongAddr 144A                 ??_SetLongAddr 0006                        ??_main 000B  
               __activetblptr 0001                 ??_SetResetPin 0001          ?_SetDeviceMACAddress 0001  
                  _SetChannel 139A             ?_SetDeviceAddress 0001                        _CCP1IE 7CEA  
                      _CCP2IE 7D00            ??_SetDeviceAddress 0005                    _SetWakePin 15E8  
                      _OSCCON 0FD3                        _TMR1IE 7CE8                        _TMR2IE 7CE9  
__end_of_default_security_key 1011                        _SSPBUF 0FC9                        clear_0 1542  
                      clear_1 154E                        isa$std 0001                SetCSPin@estado 0001  
     __end_of_InicializoPines 15BA         ??_SetDeviceMACAddress 0005          InicializoVariables@i 0002  
               EnviarDato@pos 0009                  __mediumconst 0000             _mrf24_data_config 0060  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
            __end_of_spi_init 159E             __end_of_SPI_write 15D2           __end_of_SetLongAddr 14D0  
         __end_of_SetResetPin 1604          __end_of_MRF24J40Init 113A                    __accesstop 0060  
     __end_of__initialization 1554                   ?_EnviarDato 0001                 ___rparam_used 0001  
            SetWakePin@estado 0001                 ?_SetShortAddr 0003                __pcstackCOMRAM 0001  
                   ?_SPI_read 0001                   ?_SetChannel 0001                    __pbssBANK0 0060  
                 ?_SetWakePin 0001                     ?_SetCSPin 0001               _ReadByteSPIPort 161C  
              ??_SetShortAddr 0004                    _board_init 14D0                   _SetLongAddr 148E  
                  ??_SPI_read 0001              ?_InicializoPines 0001          _default_security_key 1001  
                 _SetResetPin 15F6                       _OSCTUNE 0F9B                    ??_SetCSPin 0001  
           SetShortAddr@value 0003                       __Hparam 0000                       __Lparam 0000  
                   ?_spi_init 0001                  __psmallconst 1000                       __pcinit 153C  
                ?_GetLongAddr 0003                       __ramtop 1000                       __ptext0 1244  
                     __ptext1 14D0                       __ptext2 1582                       __ptext3 101A  
                     __ptext4 13F8                       __ptext5 150E                       __ptext6 139A  
                     __ptext7 144A                       __ptext8 161C                       __ptext9 15D2  
            _WriteByteSPIPort 1612       __end_of_ReadByteSPIPort 1622          end_of_initialization 1554  
         _default_mac_address 1011                   ?_board_init 0001                    ??_spi_init 0001  
                     postinc0 0FEE                  _MRF24J40Init 101A          WriteByteSPIPort@dato 0002  
                   _TRISBbits 0F93                     _TRISCbits 0F94                     _TRISDbits 0F95  
                   _TRISEbits 0F96          __end_of_SetShortAddr 1582                     _SPI_write 15BA  
                ??_EnviarDato 0008   __end_of_SetDeviceMACAddress 144A                  ??_SetChannel 0008  
         start_initialization 153C            __end_of_EnviarDato 1244              ?_ReadByteSPIPort 0001  
                  ?_SPI_write 0001                  ??_SetWakePin 0001            __end_of_SetChannel 13F8  
                ?_SetLongAddr 0003            __end_of_SetWakePin 15F6                  ?_SetResetPin 0001  
                 __pbssCOMRAM 000D              _SetDeviceAddress 150E           _InicializoVariables 12FC  
               SPI_write@dato 0001      __end_of_WriteByteSPIPort 161C             SetResetPin@estado 0001  
                 __smallconst 1000          ?_InicializoVariables 0001                   ??_SPI_write 0001  
            SetLongAddr@value 0005                      _LATCbits 0F8B                      _LATDbits 0F8C  
                    _LATEbits 0F8D                      _PIR1bits 0F9E                  _SetShortAddr 1562  
                ??_board_init 0001           GetLongAddr@toReturn 0007                      _SPI_read 15D2  
       ??_InicializoVariables 0001                _mrf24_data_out 000D            __end_of_board_init 150E  
                    _SetCSPin 1604                      __Hrparam 0000                      __Lrparam 0000  
                __Lsmallconst 1000                      __ptext10 12FC                      __ptext11 159E  
                    __ptext12 15E8                      __ptext13 15F6                      __ptext14 113A  
                    __ptext15 1562                      __ptext16 148E                      __ptext17 1612  
                    __ptext18 15BA                      __ptext19 1604             ??_InicializoPines 0002  
                    isa$xinst 0000                      _spi_init 1582                 SetChannel@aux 0008  
 __end_of_default_mac_address 1019      __end_of_SetDeviceAddress 153C             ?_WriteByteSPIPort 0001  
               ??_GetLongAddr 0005            ??_WriteByteSPIPort 0002        GetLongAddr@reg_address 0003  
                 _SSPCON1bits 0FC6        SetLongAddr@reg_address 0003  
