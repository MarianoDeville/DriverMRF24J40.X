

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Aug 16 20:45:16 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK2,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK3,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK8,global,class=BANK8,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=2
    37                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    70                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72   000000                     
    73                           ; Version 2.20
    74                           ; Generated 05/05/2020 GMT
    75                           ; 
    76                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F46K20 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000FE0                     bsr             equ	4064
   108   000FE9                     fsr0            equ	4073
   109   000FEA                     fsr0h           equ	4074
   110   000FE9                     fsr0l           equ	4073
   111   000FE1                     fsr1            equ	4065
   112   000FE2                     fsr1h           equ	4066
   113   000FE1                     fsr1l           equ	4065
   114   000FD9                     fsr2            equ	4057
   115   000FDA                     fsr2h           equ	4058
   116   000FD9                     fsr2l           equ	4057
   117   000FEF                     indf0           equ	4079
   118   000FE7                     indf1           equ	4071
   119   000FDF                     indf2           equ	4063
   120   000FF2                     intcon          equ	4082
   121   000000                     nvmcon          equ	0
   122   000FF9                     pcl             equ	4089
   123   000FFA                     pclath          equ	4090
   124   000FFB                     pclatu          equ	4091
   125   000FEB                     plusw0          equ	4075
   126   000FE3                     plusw1          equ	4067
   127   000FDB                     plusw2          equ	4059
   128   000FED                     postdec0        equ	4077
   129   000FE5                     postdec1        equ	4069
   130   000FDD                     postdec2        equ	4061
   131   000FEE                     postinc0        equ	4078
   132   000FE6                     postinc1        equ	4070
   133   000FDE                     postinc2        equ	4062
   134   000FEC                     preinc0         equ	4076
   135   000FE4                     preinc1         equ	4068
   136   000FDC                     preinc2         equ	4060
   137   000FF3                     prod            equ	4083
   138   000FF4                     prodh           equ	4084
   139   000FF3                     prodl           equ	4083
   140   000FD8                     status          equ	4056
   141   000FF5                     tablat          equ	4085
   142   000FF6                     tblptr          equ	4086
   143   000FF7                     tblptrh         equ	4087
   144   000FF6                     tblptrl         equ	4086
   145   000FF8                     tblptru         equ	4088
   146   000FFD                     tosl            equ	4093
   147   000FE8                     wreg            equ	4072
   148   000F77                     SSPMSK          equ	3959	;# 
   149   000F78                     SLRCON          equ	3960	;# 
   150   000F79                     CM2CON1         equ	3961	;# 
   151   000F7A                     CM2CON0         equ	3962	;# 
   152   000F7B                     CM1CON0         equ	3963	;# 
   153   000F7C                     WPUB            equ	3964	;# 
   154   000F7D                     IOCB            equ	3965	;# 
   155   000F7E                     ANSEL           equ	3966	;# 
   156   000F7F                     ANSELH          equ	3967	;# 
   157   000F80                     PORTA           equ	3968	;# 
   158   000F81                     PORTB           equ	3969	;# 
   159   000F82                     PORTC           equ	3970	;# 
   160   000F83                     PORTD           equ	3971	;# 
   161   000F84                     PORTE           equ	3972	;# 
   162   000F89                     LATA            equ	3977	;# 
   163   000F8A                     LATB            equ	3978	;# 
   164   000F8B                     LATC            equ	3979	;# 
   165   000F8C                     LATD            equ	3980	;# 
   166   000F8D                     LATE            equ	3981	;# 
   167   000F92                     TRISA           equ	3986	;# 
   168   000F92                     DDRA            equ	3986	;# 
   169   000F93                     TRISB           equ	3987	;# 
   170   000F93                     DDRB            equ	3987	;# 
   171   000F94                     TRISC           equ	3988	;# 
   172   000F94                     DDRC            equ	3988	;# 
   173   000F95                     TRISD           equ	3989	;# 
   174   000F95                     DDRD            equ	3989	;# 
   175   000F96                     TRISE           equ	3990	;# 
   176   000F96                     DDRE            equ	3990	;# 
   177   000F9B                     OSCTUNE         equ	3995	;# 
   178   000F9D                     PIE1            equ	3997	;# 
   179   000F9E                     PIR1            equ	3998	;# 
   180   000F9F                     IPR1            equ	3999	;# 
   181   000FA0                     PIE2            equ	4000	;# 
   182   000FA1                     PIR2            equ	4001	;# 
   183   000FA2                     IPR2            equ	4002	;# 
   184   000FA6                     EECON1          equ	4006	;# 
   185   000FA7                     EECON2          equ	4007	;# 
   186   000FA8                     EEDATA          equ	4008	;# 
   187   000FA9                     EEADR           equ	4009	;# 
   188   000FAA                     EEADRH          equ	4010	;# 
   189   000FAB                     RCSTA           equ	4011	;# 
   190   000FAB                     RCSTA1          equ	4011	;# 
   191   000FAC                     TXSTA           equ	4012	;# 
   192   000FAC                     TXSTA1          equ	4012	;# 
   193   000FAD                     TXREG           equ	4013	;# 
   194   000FAD                     TXREG1          equ	4013	;# 
   195   000FAE                     RCREG           equ	4014	;# 
   196   000FAE                     RCREG1          equ	4014	;# 
   197   000FAF                     SPBRG           equ	4015	;# 
   198   000FAF                     SPBRG1          equ	4015	;# 
   199   000FB0                     SPBRGH          equ	4016	;# 
   200   000FB1                     T3CON           equ	4017	;# 
   201   000FB2                     TMR3            equ	4018	;# 
   202   000FB2                     TMR3L           equ	4018	;# 
   203   000FB3                     TMR3H           equ	4019	;# 
   204   000FB4                     CVRCON2         equ	4020	;# 
   205   000FB5                     CVRCON          equ	4021	;# 
   206   000FB6                     ECCP1AS         equ	4022	;# 
   207   000FB7                     PWM1CON         equ	4023	;# 
   208   000FB8                     BAUDCON         equ	4024	;# 
   209   000FB8                     BAUDCTL         equ	4024	;# 
   210   000FB9                     PSTRCON         equ	4025	;# 
   211   000FBA                     CCP2CON         equ	4026	;# 
   212   000FBB                     CCPR2           equ	4027	;# 
   213   000FBB                     CCPR2L          equ	4027	;# 
   214   000FBC                     CCPR2H          equ	4028	;# 
   215   000FBD                     CCP1CON         equ	4029	;# 
   216   000FBE                     CCPR1           equ	4030	;# 
   217   000FBE                     CCPR1L          equ	4030	;# 
   218   000FBF                     CCPR1H          equ	4031	;# 
   219   000FC0                     ADCON2          equ	4032	;# 
   220   000FC1                     ADCON1          equ	4033	;# 
   221   000FC2                     ADCON0          equ	4034	;# 
   222   000FC3                     ADRES           equ	4035	;# 
   223   000FC3                     ADRESL          equ	4035	;# 
   224   000FC4                     ADRESH          equ	4036	;# 
   225   000FC5                     SSPCON2         equ	4037	;# 
   226   000FC6                     SSPCON1         equ	4038	;# 
   227   000FC7                     SSPSTAT         equ	4039	;# 
   228   000FC8                     SSPADD          equ	4040	;# 
   229   000FC9                     SSPBUF          equ	4041	;# 
   230   000FCA                     T2CON           equ	4042	;# 
   231   000FCB                     PR2             equ	4043	;# 
   232   000FCB                     MEMCON          equ	4043	;# 
   233   000FCC                     TMR2            equ	4044	;# 
   234   000FCD                     T1CON           equ	4045	;# 
   235   000FCE                     TMR1            equ	4046	;# 
   236   000FCE                     TMR1L           equ	4046	;# 
   237   000FCF                     TMR1H           equ	4047	;# 
   238   000FD0                     RCON            equ	4048	;# 
   239   000FD1                     WDTCON          equ	4049	;# 
   240   000FD2                     HLVDCON         equ	4050	;# 
   241   000FD2                     LVDCON          equ	4050	;# 
   242   000FD3                     OSCCON          equ	4051	;# 
   243   000FD5                     T0CON           equ	4053	;# 
   244   000FD6                     TMR0            equ	4054	;# 
   245   000FD6                     TMR0L           equ	4054	;# 
   246   000FD7                     TMR0H           equ	4055	;# 
   247   000FD8                     STATUS          equ	4056	;# 
   248   000FD9                     FSR2            equ	4057	;# 
   249   000FD9                     FSR2L           equ	4057	;# 
   250   000FDA                     FSR2H           equ	4058	;# 
   251   000FDB                     PLUSW2          equ	4059	;# 
   252   000FDC                     PREINC2         equ	4060	;# 
   253   000FDD                     POSTDEC2        equ	4061	;# 
   254   000FDE                     POSTINC2        equ	4062	;# 
   255   000FDF                     INDF2           equ	4063	;# 
   256   000FE0                     BSR             equ	4064	;# 
   257   000FE1                     FSR1            equ	4065	;# 
   258   000FE1                     FSR1L           equ	4065	;# 
   259   000FE2                     FSR1H           equ	4066	;# 
   260   000FE3                     PLUSW1          equ	4067	;# 
   261   000FE4                     PREINC1         equ	4068	;# 
   262   000FE5                     POSTDEC1        equ	4069	;# 
   263   000FE6                     POSTINC1        equ	4070	;# 
   264   000FE7                     INDF1           equ	4071	;# 
   265   000FE8                     WREG            equ	4072	;# 
   266   000FE9                     FSR0            equ	4073	;# 
   267   000FE9                     FSR0L           equ	4073	;# 
   268   000FEA                     FSR0H           equ	4074	;# 
   269   000FEB                     PLUSW0          equ	4075	;# 
   270   000FEC                     PREINC0         equ	4076	;# 
   271   000FED                     POSTDEC0        equ	4077	;# 
   272   000FEE                     POSTINC0        equ	4078	;# 
   273   000FEF                     INDF0           equ	4079	;# 
   274   000FF0                     INTCON3         equ	4080	;# 
   275   000FF1                     INTCON2         equ	4081	;# 
   276   000FF2                     INTCON          equ	4082	;# 
   277   000FF3                     PROD            equ	4083	;# 
   278   000FF3                     PRODL           equ	4083	;# 
   279   000FF4                     PRODH           equ	4084	;# 
   280   000FF5                     TABLAT          equ	4085	;# 
   281   000FF6                     TBLPTR          equ	4086	;# 
   282   000FF6                     TBLPTRL         equ	4086	;# 
   283   000FF7                     TBLPTRH         equ	4087	;# 
   284   000FF8                     TBLPTRU         equ	4088	;# 
   285   000FF9                     PCLAT           equ	4089	;# 
   286   000FF9                     PC              equ	4089	;# 
   287   000FF9                     PCL             equ	4089	;# 
   288   000FFA                     PCLATH          equ	4090	;# 
   289   000FFB                     PCLATU          equ	4091	;# 
   290   000FFC                     STKPTR          equ	4092	;# 
   291   000FFD                     TOS             equ	4093	;# 
   292   000FFD                     TOSL            equ	4093	;# 
   293   000FFE                     TOSH            equ	4094	;# 
   294   000FFF                     TOSU            equ	4095	;# 
   295   000F77                     SSPMSK          equ	3959	;# 
   296   000F78                     SLRCON          equ	3960	;# 
   297   000F79                     CM2CON1         equ	3961	;# 
   298   000F7A                     CM2CON0         equ	3962	;# 
   299   000F7B                     CM1CON0         equ	3963	;# 
   300   000F7C                     WPUB            equ	3964	;# 
   301   000F7D                     IOCB            equ	3965	;# 
   302   000F7E                     ANSEL           equ	3966	;# 
   303   000F7F                     ANSELH          equ	3967	;# 
   304   000F80                     PORTA           equ	3968	;# 
   305   000F81                     PORTB           equ	3969	;# 
   306   000F82                     PORTC           equ	3970	;# 
   307   000F83                     PORTD           equ	3971	;# 
   308   000F84                     PORTE           equ	3972	;# 
   309   000F89                     LATA            equ	3977	;# 
   310   000F8A                     LATB            equ	3978	;# 
   311   000F8B                     LATC            equ	3979	;# 
   312   000F8C                     LATD            equ	3980	;# 
   313   000F8D                     LATE            equ	3981	;# 
   314   000F92                     TRISA           equ	3986	;# 
   315   000F92                     DDRA            equ	3986	;# 
   316   000F93                     TRISB           equ	3987	;# 
   317   000F93                     DDRB            equ	3987	;# 
   318   000F94                     TRISC           equ	3988	;# 
   319   000F94                     DDRC            equ	3988	;# 
   320   000F95                     TRISD           equ	3989	;# 
   321   000F95                     DDRD            equ	3989	;# 
   322   000F96                     TRISE           equ	3990	;# 
   323   000F96                     DDRE            equ	3990	;# 
   324   000F9B                     OSCTUNE         equ	3995	;# 
   325   000F9D                     PIE1            equ	3997	;# 
   326   000F9E                     PIR1            equ	3998	;# 
   327   000F9F                     IPR1            equ	3999	;# 
   328   000FA0                     PIE2            equ	4000	;# 
   329   000FA1                     PIR2            equ	4001	;# 
   330   000FA2                     IPR2            equ	4002	;# 
   331   000FA6                     EECON1          equ	4006	;# 
   332   000FA7                     EECON2          equ	4007	;# 
   333   000FA8                     EEDATA          equ	4008	;# 
   334   000FA9                     EEADR           equ	4009	;# 
   335   000FAA                     EEADRH          equ	4010	;# 
   336   000FAB                     RCSTA           equ	4011	;# 
   337   000FAB                     RCSTA1          equ	4011	;# 
   338   000FAC                     TXSTA           equ	4012	;# 
   339   000FAC                     TXSTA1          equ	4012	;# 
   340   000FAD                     TXREG           equ	4013	;# 
   341   000FAD                     TXREG1          equ	4013	;# 
   342   000FAE                     RCREG           equ	4014	;# 
   343   000FAE                     RCREG1          equ	4014	;# 
   344   000FAF                     SPBRG           equ	4015	;# 
   345   000FAF                     SPBRG1          equ	4015	;# 
   346   000FB0                     SPBRGH          equ	4016	;# 
   347   000FB1                     T3CON           equ	4017	;# 
   348   000FB2                     TMR3            equ	4018	;# 
   349   000FB2                     TMR3L           equ	4018	;# 
   350   000FB3                     TMR3H           equ	4019	;# 
   351   000FB4                     CVRCON2         equ	4020	;# 
   352   000FB5                     CVRCON          equ	4021	;# 
   353   000FB6                     ECCP1AS         equ	4022	;# 
   354   000FB7                     PWM1CON         equ	4023	;# 
   355   000FB8                     BAUDCON         equ	4024	;# 
   356   000FB8                     BAUDCTL         equ	4024	;# 
   357   000FB9                     PSTRCON         equ	4025	;# 
   358   000FBA                     CCP2CON         equ	4026	;# 
   359   000FBB                     CCPR2           equ	4027	;# 
   360   000FBB                     CCPR2L          equ	4027	;# 
   361   000FBC                     CCPR2H          equ	4028	;# 
   362   000FBD                     CCP1CON         equ	4029	;# 
   363   000FBE                     CCPR1           equ	4030	;# 
   364   000FBE                     CCPR1L          equ	4030	;# 
   365   000FBF                     CCPR1H          equ	4031	;# 
   366   000FC0                     ADCON2          equ	4032	;# 
   367   000FC1                     ADCON1          equ	4033	;# 
   368   000FC2                     ADCON0          equ	4034	;# 
   369   000FC3                     ADRES           equ	4035	;# 
   370   000FC3                     ADRESL          equ	4035	;# 
   371   000FC4                     ADRESH          equ	4036	;# 
   372   000FC5                     SSPCON2         equ	4037	;# 
   373   000FC6                     SSPCON1         equ	4038	;# 
   374   000FC7                     SSPSTAT         equ	4039	;# 
   375   000FC8                     SSPADD          equ	4040	;# 
   376   000FC9                     SSPBUF          equ	4041	;# 
   377   000FCA                     T2CON           equ	4042	;# 
   378   000FCB                     PR2             equ	4043	;# 
   379   000FCB                     MEMCON          equ	4043	;# 
   380   000FCC                     TMR2            equ	4044	;# 
   381   000FCD                     T1CON           equ	4045	;# 
   382   000FCE                     TMR1            equ	4046	;# 
   383   000FCE                     TMR1L           equ	4046	;# 
   384   000FCF                     TMR1H           equ	4047	;# 
   385   000FD0                     RCON            equ	4048	;# 
   386   000FD1                     WDTCON          equ	4049	;# 
   387   000FD2                     HLVDCON         equ	4050	;# 
   388   000FD2                     LVDCON          equ	4050	;# 
   389   000FD3                     OSCCON          equ	4051	;# 
   390   000FD5                     T0CON           equ	4053	;# 
   391   000FD6                     TMR0            equ	4054	;# 
   392   000FD6                     TMR0L           equ	4054	;# 
   393   000FD7                     TMR0H           equ	4055	;# 
   394   000FD8                     STATUS          equ	4056	;# 
   395   000FD9                     FSR2            equ	4057	;# 
   396   000FD9                     FSR2L           equ	4057	;# 
   397   000FDA                     FSR2H           equ	4058	;# 
   398   000FDB                     PLUSW2          equ	4059	;# 
   399   000FDC                     PREINC2         equ	4060	;# 
   400   000FDD                     POSTDEC2        equ	4061	;# 
   401   000FDE                     POSTINC2        equ	4062	;# 
   402   000FDF                     INDF2           equ	4063	;# 
   403   000FE0                     BSR             equ	4064	;# 
   404   000FE1                     FSR1            equ	4065	;# 
   405   000FE1                     FSR1L           equ	4065	;# 
   406   000FE2                     FSR1H           equ	4066	;# 
   407   000FE3                     PLUSW1          equ	4067	;# 
   408   000FE4                     PREINC1         equ	4068	;# 
   409   000FE5                     POSTDEC1        equ	4069	;# 
   410   000FE6                     POSTINC1        equ	4070	;# 
   411   000FE7                     INDF1           equ	4071	;# 
   412   000FE8                     WREG            equ	4072	;# 
   413   000FE9                     FSR0            equ	4073	;# 
   414   000FE9                     FSR0L           equ	4073	;# 
   415   000FEA                     FSR0H           equ	4074	;# 
   416   000FEB                     PLUSW0          equ	4075	;# 
   417   000FEC                     PREINC0         equ	4076	;# 
   418   000FED                     POSTDEC0        equ	4077	;# 
   419   000FEE                     POSTINC0        equ	4078	;# 
   420   000FEF                     INDF0           equ	4079	;# 
   421   000FF0                     INTCON3         equ	4080	;# 
   422   000FF1                     INTCON2         equ	4081	;# 
   423   000FF2                     INTCON          equ	4082	;# 
   424   000FF3                     PROD            equ	4083	;# 
   425   000FF3                     PRODL           equ	4083	;# 
   426   000FF4                     PRODH           equ	4084	;# 
   427   000FF5                     TABLAT          equ	4085	;# 
   428   000FF6                     TBLPTR          equ	4086	;# 
   429   000FF6                     TBLPTRL         equ	4086	;# 
   430   000FF7                     TBLPTRH         equ	4087	;# 
   431   000FF8                     TBLPTRU         equ	4088	;# 
   432   000FF9                     PCLAT           equ	4089	;# 
   433   000FF9                     PC              equ	4089	;# 
   434   000FF9                     PCL             equ	4089	;# 
   435   000FFA                     PCLATH          equ	4090	;# 
   436   000FFB                     PCLATU          equ	4091	;# 
   437   000FFC                     STKPTR          equ	4092	;# 
   438   000FFD                     TOS             equ	4093	;# 
   439   000FFD                     TOSL            equ	4093	;# 
   440   000FFE                     TOSH            equ	4094	;# 
   441   000FFF                     TOSU            equ	4095	;# 
   442   000F77                     SSPMSK          equ	3959	;# 
   443   000F78                     SLRCON          equ	3960	;# 
   444   000F79                     CM2CON1         equ	3961	;# 
   445   000F7A                     CM2CON0         equ	3962	;# 
   446   000F7B                     CM1CON0         equ	3963	;# 
   447   000F7C                     WPUB            equ	3964	;# 
   448   000F7D                     IOCB            equ	3965	;# 
   449   000F7E                     ANSEL           equ	3966	;# 
   450   000F7F                     ANSELH          equ	3967	;# 
   451   000F80                     PORTA           equ	3968	;# 
   452   000F81                     PORTB           equ	3969	;# 
   453   000F82                     PORTC           equ	3970	;# 
   454   000F83                     PORTD           equ	3971	;# 
   455   000F84                     PORTE           equ	3972	;# 
   456   000F89                     LATA            equ	3977	;# 
   457   000F8A                     LATB            equ	3978	;# 
   458   000F8B                     LATC            equ	3979	;# 
   459   000F8C                     LATD            equ	3980	;# 
   460   000F8D                     LATE            equ	3981	;# 
   461   000F92                     TRISA           equ	3986	;# 
   462   000F92                     DDRA            equ	3986	;# 
   463   000F93                     TRISB           equ	3987	;# 
   464   000F93                     DDRB            equ	3987	;# 
   465   000F94                     TRISC           equ	3988	;# 
   466   000F94                     DDRC            equ	3988	;# 
   467   000F95                     TRISD           equ	3989	;# 
   468   000F95                     DDRD            equ	3989	;# 
   469   000F96                     TRISE           equ	3990	;# 
   470   000F96                     DDRE            equ	3990	;# 
   471   000F9B                     OSCTUNE         equ	3995	;# 
   472   000F9D                     PIE1            equ	3997	;# 
   473   000F9E                     PIR1            equ	3998	;# 
   474   000F9F                     IPR1            equ	3999	;# 
   475   000FA0                     PIE2            equ	4000	;# 
   476   000FA1                     PIR2            equ	4001	;# 
   477   000FA2                     IPR2            equ	4002	;# 
   478   000FA6                     EECON1          equ	4006	;# 
   479   000FA7                     EECON2          equ	4007	;# 
   480   000FA8                     EEDATA          equ	4008	;# 
   481   000FA9                     EEADR           equ	4009	;# 
   482   000FAA                     EEADRH          equ	4010	;# 
   483   000FAB                     RCSTA           equ	4011	;# 
   484   000FAB                     RCSTA1          equ	4011	;# 
   485   000FAC                     TXSTA           equ	4012	;# 
   486   000FAC                     TXSTA1          equ	4012	;# 
   487   000FAD                     TXREG           equ	4013	;# 
   488   000FAD                     TXREG1          equ	4013	;# 
   489   000FAE                     RCREG           equ	4014	;# 
   490   000FAE                     RCREG1          equ	4014	;# 
   491   000FAF                     SPBRG           equ	4015	;# 
   492   000FAF                     SPBRG1          equ	4015	;# 
   493   000FB0                     SPBRGH          equ	4016	;# 
   494   000FB1                     T3CON           equ	4017	;# 
   495   000FB2                     TMR3            equ	4018	;# 
   496   000FB2                     TMR3L           equ	4018	;# 
   497   000FB3                     TMR3H           equ	4019	;# 
   498   000FB4                     CVRCON2         equ	4020	;# 
   499   000FB5                     CVRCON          equ	4021	;# 
   500   000FB6                     ECCP1AS         equ	4022	;# 
   501   000FB7                     PWM1CON         equ	4023	;# 
   502   000FB8                     BAUDCON         equ	4024	;# 
   503   000FB8                     BAUDCTL         equ	4024	;# 
   504   000FB9                     PSTRCON         equ	4025	;# 
   505   000FBA                     CCP2CON         equ	4026	;# 
   506   000FBB                     CCPR2           equ	4027	;# 
   507   000FBB                     CCPR2L          equ	4027	;# 
   508   000FBC                     CCPR2H          equ	4028	;# 
   509   000FBD                     CCP1CON         equ	4029	;# 
   510   000FBE                     CCPR1           equ	4030	;# 
   511   000FBE                     CCPR1L          equ	4030	;# 
   512   000FBF                     CCPR1H          equ	4031	;# 
   513   000FC0                     ADCON2          equ	4032	;# 
   514   000FC1                     ADCON1          equ	4033	;# 
   515   000FC2                     ADCON0          equ	4034	;# 
   516   000FC3                     ADRES           equ	4035	;# 
   517   000FC3                     ADRESL          equ	4035	;# 
   518   000FC4                     ADRESH          equ	4036	;# 
   519   000FC5                     SSPCON2         equ	4037	;# 
   520   000FC6                     SSPCON1         equ	4038	;# 
   521   000FC7                     SSPSTAT         equ	4039	;# 
   522   000FC8                     SSPADD          equ	4040	;# 
   523   000FC9                     SSPBUF          equ	4041	;# 
   524   000FCA                     T2CON           equ	4042	;# 
   525   000FCB                     PR2             equ	4043	;# 
   526   000FCB                     MEMCON          equ	4043	;# 
   527   000FCC                     TMR2            equ	4044	;# 
   528   000FCD                     T1CON           equ	4045	;# 
   529   000FCE                     TMR1            equ	4046	;# 
   530   000FCE                     TMR1L           equ	4046	;# 
   531   000FCF                     TMR1H           equ	4047	;# 
   532   000FD0                     RCON            equ	4048	;# 
   533   000FD1                     WDTCON          equ	4049	;# 
   534   000FD2                     HLVDCON         equ	4050	;# 
   535   000FD2                     LVDCON          equ	4050	;# 
   536   000FD3                     OSCCON          equ	4051	;# 
   537   000FD5                     T0CON           equ	4053	;# 
   538   000FD6                     TMR0            equ	4054	;# 
   539   000FD6                     TMR0L           equ	4054	;# 
   540   000FD7                     TMR0H           equ	4055	;# 
   541   000FD8                     STATUS          equ	4056	;# 
   542   000FD9                     FSR2            equ	4057	;# 
   543   000FD9                     FSR2L           equ	4057	;# 
   544   000FDA                     FSR2H           equ	4058	;# 
   545   000FDB                     PLUSW2          equ	4059	;# 
   546   000FDC                     PREINC2         equ	4060	;# 
   547   000FDD                     POSTDEC2        equ	4061	;# 
   548   000FDE                     POSTINC2        equ	4062	;# 
   549   000FDF                     INDF2           equ	4063	;# 
   550   000FE0                     BSR             equ	4064	;# 
   551   000FE1                     FSR1            equ	4065	;# 
   552   000FE1                     FSR1L           equ	4065	;# 
   553   000FE2                     FSR1H           equ	4066	;# 
   554   000FE3                     PLUSW1          equ	4067	;# 
   555   000FE4                     PREINC1         equ	4068	;# 
   556   000FE5                     POSTDEC1        equ	4069	;# 
   557   000FE6                     POSTINC1        equ	4070	;# 
   558   000FE7                     INDF1           equ	4071	;# 
   559   000FE8                     WREG            equ	4072	;# 
   560   000FE9                     FSR0            equ	4073	;# 
   561   000FE9                     FSR0L           equ	4073	;# 
   562   000FEA                     FSR0H           equ	4074	;# 
   563   000FEB                     PLUSW0          equ	4075	;# 
   564   000FEC                     PREINC0         equ	4076	;# 
   565   000FED                     POSTDEC0        equ	4077	;# 
   566   000FEE                     POSTINC0        equ	4078	;# 
   567   000FEF                     INDF0           equ	4079	;# 
   568   000FF0                     INTCON3         equ	4080	;# 
   569   000FF1                     INTCON2         equ	4081	;# 
   570   000FF2                     INTCON          equ	4082	;# 
   571   000FF3                     PROD            equ	4083	;# 
   572   000FF3                     PRODL           equ	4083	;# 
   573   000FF4                     PRODH           equ	4084	;# 
   574   000FF5                     TABLAT          equ	4085	;# 
   575   000FF6                     TBLPTR          equ	4086	;# 
   576   000FF6                     TBLPTRL         equ	4086	;# 
   577   000FF7                     TBLPTRH         equ	4087	;# 
   578   000FF8                     TBLPTRU         equ	4088	;# 
   579   000FF9                     PCLAT           equ	4089	;# 
   580   000FF9                     PC              equ	4089	;# 
   581   000FF9                     PCL             equ	4089	;# 
   582   000FFA                     PCLATH          equ	4090	;# 
   583   000FFB                     PCLATU          equ	4091	;# 
   584   000FFC                     STKPTR          equ	4092	;# 
   585   000FFD                     TOS             equ	4093	;# 
   586   000FFD                     TOSL            equ	4093	;# 
   587   000FFE                     TOSH            equ	4094	;# 
   588   000FFF                     TOSU            equ	4095	;# 
   589   000F77                     SSPMSK          equ	3959	;# 
   590   000F78                     SLRCON          equ	3960	;# 
   591   000F79                     CM2CON1         equ	3961	;# 
   592   000F7A                     CM2CON0         equ	3962	;# 
   593   000F7B                     CM1CON0         equ	3963	;# 
   594   000F7C                     WPUB            equ	3964	;# 
   595   000F7D                     IOCB            equ	3965	;# 
   596   000F7E                     ANSEL           equ	3966	;# 
   597   000F7F                     ANSELH          equ	3967	;# 
   598   000F80                     PORTA           equ	3968	;# 
   599   000F81                     PORTB           equ	3969	;# 
   600   000F82                     PORTC           equ	3970	;# 
   601   000F83                     PORTD           equ	3971	;# 
   602   000F84                     PORTE           equ	3972	;# 
   603   000F89                     LATA            equ	3977	;# 
   604   000F8A                     LATB            equ	3978	;# 
   605   000F8B                     LATC            equ	3979	;# 
   606   000F8C                     LATD            equ	3980	;# 
   607   000F8D                     LATE            equ	3981	;# 
   608   000F92                     TRISA           equ	3986	;# 
   609   000F92                     DDRA            equ	3986	;# 
   610   000F93                     TRISB           equ	3987	;# 
   611   000F93                     DDRB            equ	3987	;# 
   612   000F94                     TRISC           equ	3988	;# 
   613   000F94                     DDRC            equ	3988	;# 
   614   000F95                     TRISD           equ	3989	;# 
   615   000F95                     DDRD            equ	3989	;# 
   616   000F96                     TRISE           equ	3990	;# 
   617   000F96                     DDRE            equ	3990	;# 
   618   000F9B                     OSCTUNE         equ	3995	;# 
   619   000F9D                     PIE1            equ	3997	;# 
   620   000F9E                     PIR1            equ	3998	;# 
   621   000F9F                     IPR1            equ	3999	;# 
   622   000FA0                     PIE2            equ	4000	;# 
   623   000FA1                     PIR2            equ	4001	;# 
   624   000FA2                     IPR2            equ	4002	;# 
   625   000FA6                     EECON1          equ	4006	;# 
   626   000FA7                     EECON2          equ	4007	;# 
   627   000FA8                     EEDATA          equ	4008	;# 
   628   000FA9                     EEADR           equ	4009	;# 
   629   000FAA                     EEADRH          equ	4010	;# 
   630   000FAB                     RCSTA           equ	4011	;# 
   631   000FAB                     RCSTA1          equ	4011	;# 
   632   000FAC                     TXSTA           equ	4012	;# 
   633   000FAC                     TXSTA1          equ	4012	;# 
   634   000FAD                     TXREG           equ	4013	;# 
   635   000FAD                     TXREG1          equ	4013	;# 
   636   000FAE                     RCREG           equ	4014	;# 
   637   000FAE                     RCREG1          equ	4014	;# 
   638   000FAF                     SPBRG           equ	4015	;# 
   639   000FAF                     SPBRG1          equ	4015	;# 
   640   000FB0                     SPBRGH          equ	4016	;# 
   641   000FB1                     T3CON           equ	4017	;# 
   642   000FB2                     TMR3            equ	4018	;# 
   643   000FB2                     TMR3L           equ	4018	;# 
   644   000FB3                     TMR3H           equ	4019	;# 
   645   000FB4                     CVRCON2         equ	4020	;# 
   646   000FB5                     CVRCON          equ	4021	;# 
   647   000FB6                     ECCP1AS         equ	4022	;# 
   648   000FB7                     PWM1CON         equ	4023	;# 
   649   000FB8                     BAUDCON         equ	4024	;# 
   650   000FB8                     BAUDCTL         equ	4024	;# 
   651   000FB9                     PSTRCON         equ	4025	;# 
   652   000FBA                     CCP2CON         equ	4026	;# 
   653   000FBB                     CCPR2           equ	4027	;# 
   654   000FBB                     CCPR2L          equ	4027	;# 
   655   000FBC                     CCPR2H          equ	4028	;# 
   656   000FBD                     CCP1CON         equ	4029	;# 
   657   000FBE                     CCPR1           equ	4030	;# 
   658   000FBE                     CCPR1L          equ	4030	;# 
   659   000FBF                     CCPR1H          equ	4031	;# 
   660   000FC0                     ADCON2          equ	4032	;# 
   661   000FC1                     ADCON1          equ	4033	;# 
   662   000FC2                     ADCON0          equ	4034	;# 
   663   000FC3                     ADRES           equ	4035	;# 
   664   000FC3                     ADRESL          equ	4035	;# 
   665   000FC4                     ADRESH          equ	4036	;# 
   666   000FC5                     SSPCON2         equ	4037	;# 
   667   000FC6                     SSPCON1         equ	4038	;# 
   668   000FC7                     SSPSTAT         equ	4039	;# 
   669   000FC8                     SSPADD          equ	4040	;# 
   670   000FC9                     SSPBUF          equ	4041	;# 
   671   000FCA                     T2CON           equ	4042	;# 
   672   000FCB                     PR2             equ	4043	;# 
   673   000FCB                     MEMCON          equ	4043	;# 
   674   000FCC                     TMR2            equ	4044	;# 
   675   000FCD                     T1CON           equ	4045	;# 
   676   000FCE                     TMR1            equ	4046	;# 
   677   000FCE                     TMR1L           equ	4046	;# 
   678   000FCF                     TMR1H           equ	4047	;# 
   679   000FD0                     RCON            equ	4048	;# 
   680   000FD1                     WDTCON          equ	4049	;# 
   681   000FD2                     HLVDCON         equ	4050	;# 
   682   000FD2                     LVDCON          equ	4050	;# 
   683   000FD3                     OSCCON          equ	4051	;# 
   684   000FD5                     T0CON           equ	4053	;# 
   685   000FD6                     TMR0            equ	4054	;# 
   686   000FD6                     TMR0L           equ	4054	;# 
   687   000FD7                     TMR0H           equ	4055	;# 
   688   000FD8                     STATUS          equ	4056	;# 
   689   000FD9                     FSR2            equ	4057	;# 
   690   000FD9                     FSR2L           equ	4057	;# 
   691   000FDA                     FSR2H           equ	4058	;# 
   692   000FDB                     PLUSW2          equ	4059	;# 
   693   000FDC                     PREINC2         equ	4060	;# 
   694   000FDD                     POSTDEC2        equ	4061	;# 
   695   000FDE                     POSTINC2        equ	4062	;# 
   696   000FDF                     INDF2           equ	4063	;# 
   697   000FE0                     BSR             equ	4064	;# 
   698   000FE1                     FSR1            equ	4065	;# 
   699   000FE1                     FSR1L           equ	4065	;# 
   700   000FE2                     FSR1H           equ	4066	;# 
   701   000FE3                     PLUSW1          equ	4067	;# 
   702   000FE4                     PREINC1         equ	4068	;# 
   703   000FE5                     POSTDEC1        equ	4069	;# 
   704   000FE6                     POSTINC1        equ	4070	;# 
   705   000FE7                     INDF1           equ	4071	;# 
   706   000FE8                     WREG            equ	4072	;# 
   707   000FE9                     FSR0            equ	4073	;# 
   708   000FE9                     FSR0L           equ	4073	;# 
   709   000FEA                     FSR0H           equ	4074	;# 
   710   000FEB                     PLUSW0          equ	4075	;# 
   711   000FEC                     PREINC0         equ	4076	;# 
   712   000FED                     POSTDEC0        equ	4077	;# 
   713   000FEE                     POSTINC0        equ	4078	;# 
   714   000FEF                     INDF0           equ	4079	;# 
   715   000FF0                     INTCON3         equ	4080	;# 
   716   000FF1                     INTCON2         equ	4081	;# 
   717   000FF2                     INTCON          equ	4082	;# 
   718   000FF3                     PROD            equ	4083	;# 
   719   000FF3                     PRODL           equ	4083	;# 
   720   000FF4                     PRODH           equ	4084	;# 
   721   000FF5                     TABLAT          equ	4085	;# 
   722   000FF6                     TBLPTR          equ	4086	;# 
   723   000FF6                     TBLPTRL         equ	4086	;# 
   724   000FF7                     TBLPTRH         equ	4087	;# 
   725   000FF8                     TBLPTRU         equ	4088	;# 
   726   000FF9                     PCLAT           equ	4089	;# 
   727   000FF9                     PC              equ	4089	;# 
   728   000FF9                     PCL             equ	4089	;# 
   729   000FFA                     PCLATH          equ	4090	;# 
   730   000FFB                     PCLATU          equ	4091	;# 
   731   000FFC                     STKPTR          equ	4092	;# 
   732   000FFD                     TOS             equ	4093	;# 
   733   000FFD                     TOSL            equ	4093	;# 
   734   000FFE                     TOSH            equ	4094	;# 
   735   000FFF                     TOSU            equ	4095	;# 
   736   000F77                     SSPMSK          equ	3959	;# 
   737   000F78                     SLRCON          equ	3960	;# 
   738   000F79                     CM2CON1         equ	3961	;# 
   739   000F7A                     CM2CON0         equ	3962	;# 
   740   000F7B                     CM1CON0         equ	3963	;# 
   741   000F7C                     WPUB            equ	3964	;# 
   742   000F7D                     IOCB            equ	3965	;# 
   743   000F7E                     ANSEL           equ	3966	;# 
   744   000F7F                     ANSELH          equ	3967	;# 
   745   000F80                     PORTA           equ	3968	;# 
   746   000F81                     PORTB           equ	3969	;# 
   747   000F82                     PORTC           equ	3970	;# 
   748   000F83                     PORTD           equ	3971	;# 
   749   000F84                     PORTE           equ	3972	;# 
   750   000F89                     LATA            equ	3977	;# 
   751   000F8A                     LATB            equ	3978	;# 
   752   000F8B                     LATC            equ	3979	;# 
   753   000F8C                     LATD            equ	3980	;# 
   754   000F8D                     LATE            equ	3981	;# 
   755   000F92                     TRISA           equ	3986	;# 
   756   000F92                     DDRA            equ	3986	;# 
   757   000F93                     TRISB           equ	3987	;# 
   758   000F93                     DDRB            equ	3987	;# 
   759   000F94                     TRISC           equ	3988	;# 
   760   000F94                     DDRC            equ	3988	;# 
   761   000F95                     TRISD           equ	3989	;# 
   762   000F95                     DDRD            equ	3989	;# 
   763   000F96                     TRISE           equ	3990	;# 
   764   000F96                     DDRE            equ	3990	;# 
   765   000F9B                     OSCTUNE         equ	3995	;# 
   766   000F9D                     PIE1            equ	3997	;# 
   767   000F9E                     PIR1            equ	3998	;# 
   768   000F9F                     IPR1            equ	3999	;# 
   769   000FA0                     PIE2            equ	4000	;# 
   770   000FA1                     PIR2            equ	4001	;# 
   771   000FA2                     IPR2            equ	4002	;# 
   772   000FA6                     EECON1          equ	4006	;# 
   773   000FA7                     EECON2          equ	4007	;# 
   774   000FA8                     EEDATA          equ	4008	;# 
   775   000FA9                     EEADR           equ	4009	;# 
   776   000FAA                     EEADRH          equ	4010	;# 
   777   000FAB                     RCSTA           equ	4011	;# 
   778   000FAB                     RCSTA1          equ	4011	;# 
   779   000FAC                     TXSTA           equ	4012	;# 
   780   000FAC                     TXSTA1          equ	4012	;# 
   781   000FAD                     TXREG           equ	4013	;# 
   782   000FAD                     TXREG1          equ	4013	;# 
   783   000FAE                     RCREG           equ	4014	;# 
   784   000FAE                     RCREG1          equ	4014	;# 
   785   000FAF                     SPBRG           equ	4015	;# 
   786   000FAF                     SPBRG1          equ	4015	;# 
   787   000FB0                     SPBRGH          equ	4016	;# 
   788   000FB1                     T3CON           equ	4017	;# 
   789   000FB2                     TMR3            equ	4018	;# 
   790   000FB2                     TMR3L           equ	4018	;# 
   791   000FB3                     TMR3H           equ	4019	;# 
   792   000FB4                     CVRCON2         equ	4020	;# 
   793   000FB5                     CVRCON          equ	4021	;# 
   794   000FB6                     ECCP1AS         equ	4022	;# 
   795   000FB7                     PWM1CON         equ	4023	;# 
   796   000FB8                     BAUDCON         equ	4024	;# 
   797   000FB8                     BAUDCTL         equ	4024	;# 
   798   000FB9                     PSTRCON         equ	4025	;# 
   799   000FBA                     CCP2CON         equ	4026	;# 
   800   000FBB                     CCPR2           equ	4027	;# 
   801   000FBB                     CCPR2L          equ	4027	;# 
   802   000FBC                     CCPR2H          equ	4028	;# 
   803   000FBD                     CCP1CON         equ	4029	;# 
   804   000FBE                     CCPR1           equ	4030	;# 
   805   000FBE                     CCPR1L          equ	4030	;# 
   806   000FBF                     CCPR1H          equ	4031	;# 
   807   000FC0                     ADCON2          equ	4032	;# 
   808   000FC1                     ADCON1          equ	4033	;# 
   809   000FC2                     ADCON0          equ	4034	;# 
   810   000FC3                     ADRES           equ	4035	;# 
   811   000FC3                     ADRESL          equ	4035	;# 
   812   000FC4                     ADRESH          equ	4036	;# 
   813   000FC5                     SSPCON2         equ	4037	;# 
   814   000FC6                     SSPCON1         equ	4038	;# 
   815   000FC7                     SSPSTAT         equ	4039	;# 
   816   000FC8                     SSPADD          equ	4040	;# 
   817   000FC9                     SSPBUF          equ	4041	;# 
   818   000FCA                     T2CON           equ	4042	;# 
   819   000FCB                     PR2             equ	4043	;# 
   820   000FCB                     MEMCON          equ	4043	;# 
   821   000FCC                     TMR2            equ	4044	;# 
   822   000FCD                     T1CON           equ	4045	;# 
   823   000FCE                     TMR1            equ	4046	;# 
   824   000FCE                     TMR1L           equ	4046	;# 
   825   000FCF                     TMR1H           equ	4047	;# 
   826   000FD0                     RCON            equ	4048	;# 
   827   000FD1                     WDTCON          equ	4049	;# 
   828   000FD2                     HLVDCON         equ	4050	;# 
   829   000FD2                     LVDCON          equ	4050	;# 
   830   000FD3                     OSCCON          equ	4051	;# 
   831   000FD5                     T0CON           equ	4053	;# 
   832   000FD6                     TMR0            equ	4054	;# 
   833   000FD6                     TMR0L           equ	4054	;# 
   834   000FD7                     TMR0H           equ	4055	;# 
   835   000FD8                     STATUS          equ	4056	;# 
   836   000FD9                     FSR2            equ	4057	;# 
   837   000FD9                     FSR2L           equ	4057	;# 
   838   000FDA                     FSR2H           equ	4058	;# 
   839   000FDB                     PLUSW2          equ	4059	;# 
   840   000FDC                     PREINC2         equ	4060	;# 
   841   000FDD                     POSTDEC2        equ	4061	;# 
   842   000FDE                     POSTINC2        equ	4062	;# 
   843   000FDF                     INDF2           equ	4063	;# 
   844   000FE0                     BSR             equ	4064	;# 
   845   000FE1                     FSR1            equ	4065	;# 
   846   000FE1                     FSR1L           equ	4065	;# 
   847   000FE2                     FSR1H           equ	4066	;# 
   848   000FE3                     PLUSW1          equ	4067	;# 
   849   000FE4                     PREINC1         equ	4068	;# 
   850   000FE5                     POSTDEC1        equ	4069	;# 
   851   000FE6                     POSTINC1        equ	4070	;# 
   852   000FE7                     INDF1           equ	4071	;# 
   853   000FE8                     WREG            equ	4072	;# 
   854   000FE9                     FSR0            equ	4073	;# 
   855   000FE9                     FSR0L           equ	4073	;# 
   856   000FEA                     FSR0H           equ	4074	;# 
   857   000FEB                     PLUSW0          equ	4075	;# 
   858   000FEC                     PREINC0         equ	4076	;# 
   859   000FED                     POSTDEC0        equ	4077	;# 
   860   000FEE                     POSTINC0        equ	4078	;# 
   861   000FEF                     INDF0           equ	4079	;# 
   862   000FF0                     INTCON3         equ	4080	;# 
   863   000FF1                     INTCON2         equ	4081	;# 
   864   000FF2                     INTCON          equ	4082	;# 
   865   000FF3                     PROD            equ	4083	;# 
   866   000FF3                     PRODL           equ	4083	;# 
   867   000FF4                     PRODH           equ	4084	;# 
   868   000FF5                     TABLAT          equ	4085	;# 
   869   000FF6                     TBLPTR          equ	4086	;# 
   870   000FF6                     TBLPTRL         equ	4086	;# 
   871   000FF7                     TBLPTRH         equ	4087	;# 
   872   000FF8                     TBLPTRU         equ	4088	;# 
   873   000FF9                     PCLAT           equ	4089	;# 
   874   000FF9                     PC              equ	4089	;# 
   875   000FF9                     PCL             equ	4089	;# 
   876   000FFA                     PCLATH          equ	4090	;# 
   877   000FFB                     PCLATU          equ	4091	;# 
   878   000FFC                     STKPTR          equ	4092	;# 
   879   000FFD                     TOS             equ	4093	;# 
   880   000FFD                     TOSL            equ	4093	;# 
   881   000FFE                     TOSH            equ	4094	;# 
   882   000FFF                     TOSU            equ	4095	;# 
   883   000F77                     SSPMSK          equ	3959	;# 
   884   000F78                     SLRCON          equ	3960	;# 
   885   000F79                     CM2CON1         equ	3961	;# 
   886   000F7A                     CM2CON0         equ	3962	;# 
   887   000F7B                     CM1CON0         equ	3963	;# 
   888   000F7C                     WPUB            equ	3964	;# 
   889   000F7D                     IOCB            equ	3965	;# 
   890   000F7E                     ANSEL           equ	3966	;# 
   891   000F7F                     ANSELH          equ	3967	;# 
   892   000F80                     PORTA           equ	3968	;# 
   893   000F81                     PORTB           equ	3969	;# 
   894   000F82                     PORTC           equ	3970	;# 
   895   000F83                     PORTD           equ	3971	;# 
   896   000F84                     PORTE           equ	3972	;# 
   897   000F89                     LATA            equ	3977	;# 
   898   000F8A                     LATB            equ	3978	;# 
   899   000F8B                     LATC            equ	3979	;# 
   900   000F8C                     LATD            equ	3980	;# 
   901   000F8D                     LATE            equ	3981	;# 
   902   000F92                     TRISA           equ	3986	;# 
   903   000F92                     DDRA            equ	3986	;# 
   904   000F93                     TRISB           equ	3987	;# 
   905   000F93                     DDRB            equ	3987	;# 
   906   000F94                     TRISC           equ	3988	;# 
   907   000F94                     DDRC            equ	3988	;# 
   908   000F95                     TRISD           equ	3989	;# 
   909   000F95                     DDRD            equ	3989	;# 
   910   000F96                     TRISE           equ	3990	;# 
   911   000F96                     DDRE            equ	3990	;# 
   912   000F9B                     OSCTUNE         equ	3995	;# 
   913   000F9D                     PIE1            equ	3997	;# 
   914   000F9E                     PIR1            equ	3998	;# 
   915   000F9F                     IPR1            equ	3999	;# 
   916   000FA0                     PIE2            equ	4000	;# 
   917   000FA1                     PIR2            equ	4001	;# 
   918   000FA2                     IPR2            equ	4002	;# 
   919   000FA6                     EECON1          equ	4006	;# 
   920   000FA7                     EECON2          equ	4007	;# 
   921   000FA8                     EEDATA          equ	4008	;# 
   922   000FA9                     EEADR           equ	4009	;# 
   923   000FAA                     EEADRH          equ	4010	;# 
   924   000FAB                     RCSTA           equ	4011	;# 
   925   000FAB                     RCSTA1          equ	4011	;# 
   926   000FAC                     TXSTA           equ	4012	;# 
   927   000FAC                     TXSTA1          equ	4012	;# 
   928   000FAD                     TXREG           equ	4013	;# 
   929   000FAD                     TXREG1          equ	4013	;# 
   930   000FAE                     RCREG           equ	4014	;# 
   931   000FAE                     RCREG1          equ	4014	;# 
   932   000FAF                     SPBRG           equ	4015	;# 
   933   000FAF                     SPBRG1          equ	4015	;# 
   934   000FB0                     SPBRGH          equ	4016	;# 
   935   000FB1                     T3CON           equ	4017	;# 
   936   000FB2                     TMR3            equ	4018	;# 
   937   000FB2                     TMR3L           equ	4018	;# 
   938   000FB3                     TMR3H           equ	4019	;# 
   939   000FB4                     CVRCON2         equ	4020	;# 
   940   000FB5                     CVRCON          equ	4021	;# 
   941   000FB6                     ECCP1AS         equ	4022	;# 
   942   000FB7                     PWM1CON         equ	4023	;# 
   943   000FB8                     BAUDCON         equ	4024	;# 
   944   000FB8                     BAUDCTL         equ	4024	;# 
   945   000FB9                     PSTRCON         equ	4025	;# 
   946   000FBA                     CCP2CON         equ	4026	;# 
   947   000FBB                     CCPR2           equ	4027	;# 
   948   000FBB                     CCPR2L          equ	4027	;# 
   949   000FBC                     CCPR2H          equ	4028	;# 
   950   000FBD                     CCP1CON         equ	4029	;# 
   951   000FBE                     CCPR1           equ	4030	;# 
   952   000FBE                     CCPR1L          equ	4030	;# 
   953   000FBF                     CCPR1H          equ	4031	;# 
   954   000FC0                     ADCON2          equ	4032	;# 
   955   000FC1                     ADCON1          equ	4033	;# 
   956   000FC2                     ADCON0          equ	4034	;# 
   957   000FC3                     ADRES           equ	4035	;# 
   958   000FC3                     ADRESL          equ	4035	;# 
   959   000FC4                     ADRESH          equ	4036	;# 
   960   000FC5                     SSPCON2         equ	4037	;# 
   961   000FC6                     SSPCON1         equ	4038	;# 
   962   000FC7                     SSPSTAT         equ	4039	;# 
   963   000FC8                     SSPADD          equ	4040	;# 
   964   000FC9                     SSPBUF          equ	4041	;# 
   965   000FCA                     T2CON           equ	4042	;# 
   966   000FCB                     PR2             equ	4043	;# 
   967   000FCB                     MEMCON          equ	4043	;# 
   968   000FCC                     TMR2            equ	4044	;# 
   969   000FCD                     T1CON           equ	4045	;# 
   970   000FCE                     TMR1            equ	4046	;# 
   971   000FCE                     TMR1L           equ	4046	;# 
   972   000FCF                     TMR1H           equ	4047	;# 
   973   000FD0                     RCON            equ	4048	;# 
   974   000FD1                     WDTCON          equ	4049	;# 
   975   000FD2                     HLVDCON         equ	4050	;# 
   976   000FD2                     LVDCON          equ	4050	;# 
   977   000FD3                     OSCCON          equ	4051	;# 
   978   000FD5                     T0CON           equ	4053	;# 
   979   000FD6                     TMR0            equ	4054	;# 
   980   000FD6                     TMR0L           equ	4054	;# 
   981   000FD7                     TMR0H           equ	4055	;# 
   982   000FD8                     STATUS          equ	4056	;# 
   983   000FD9                     FSR2            equ	4057	;# 
   984   000FD9                     FSR2L           equ	4057	;# 
   985   000FDA                     FSR2H           equ	4058	;# 
   986   000FDB                     PLUSW2          equ	4059	;# 
   987   000FDC                     PREINC2         equ	4060	;# 
   988   000FDD                     POSTDEC2        equ	4061	;# 
   989   000FDE                     POSTINC2        equ	4062	;# 
   990   000FDF                     INDF2           equ	4063	;# 
   991   000FE0                     BSR             equ	4064	;# 
   992   000FE1                     FSR1            equ	4065	;# 
   993   000FE1                     FSR1L           equ	4065	;# 
   994   000FE2                     FSR1H           equ	4066	;# 
   995   000FE3                     PLUSW1          equ	4067	;# 
   996   000FE4                     PREINC1         equ	4068	;# 
   997   000FE5                     POSTDEC1        equ	4069	;# 
   998   000FE6                     POSTINC1        equ	4070	;# 
   999   000FE7                     INDF1           equ	4071	;# 
  1000   000FE8                     WREG            equ	4072	;# 
  1001   000FE9                     FSR0            equ	4073	;# 
  1002   000FE9                     FSR0L           equ	4073	;# 
  1003   000FEA                     FSR0H           equ	4074	;# 
  1004   000FEB                     PLUSW0          equ	4075	;# 
  1005   000FEC                     PREINC0         equ	4076	;# 
  1006   000FED                     POSTDEC0        equ	4077	;# 
  1007   000FEE                     POSTINC0        equ	4078	;# 
  1008   000FEF                     INDF0           equ	4079	;# 
  1009   000FF0                     INTCON3         equ	4080	;# 
  1010   000FF1                     INTCON2         equ	4081	;# 
  1011   000FF2                     INTCON          equ	4082	;# 
  1012   000FF3                     PROD            equ	4083	;# 
  1013   000FF3                     PRODL           equ	4083	;# 
  1014   000FF4                     PRODH           equ	4084	;# 
  1015   000FF5                     TABLAT          equ	4085	;# 
  1016   000FF6                     TBLPTR          equ	4086	;# 
  1017   000FF6                     TBLPTRL         equ	4086	;# 
  1018   000FF7                     TBLPTRH         equ	4087	;# 
  1019   000FF8                     TBLPTRU         equ	4088	;# 
  1020   000FF9                     PCLAT           equ	4089	;# 
  1021   000FF9                     PC              equ	4089	;# 
  1022   000FF9                     PCL             equ	4089	;# 
  1023   000FFA                     PCLATH          equ	4090	;# 
  1024   000FFB                     PCLATU          equ	4091	;# 
  1025   000FFC                     STKPTR          equ	4092	;# 
  1026   000FFD                     TOS             equ	4093	;# 
  1027   000FFD                     TOSL            equ	4093	;# 
  1028   000FFE                     TOSH            equ	4094	;# 
  1029   000FFF                     TOSU            equ	4095	;# 
  1030   000F77                     SSPMSK          equ	3959	;# 
  1031   000F78                     SLRCON          equ	3960	;# 
  1032   000F79                     CM2CON1         equ	3961	;# 
  1033   000F7A                     CM2CON0         equ	3962	;# 
  1034   000F7B                     CM1CON0         equ	3963	;# 
  1035   000F7C                     WPUB            equ	3964	;# 
  1036   000F7D                     IOCB            equ	3965	;# 
  1037   000F7E                     ANSEL           equ	3966	;# 
  1038   000F7F                     ANSELH          equ	3967	;# 
  1039   000F80                     PORTA           equ	3968	;# 
  1040   000F81                     PORTB           equ	3969	;# 
  1041   000F82                     PORTC           equ	3970	;# 
  1042   000F83                     PORTD           equ	3971	;# 
  1043   000F84                     PORTE           equ	3972	;# 
  1044   000F89                     LATA            equ	3977	;# 
  1045   000F8A                     LATB            equ	3978	;# 
  1046   000F8B                     LATC            equ	3979	;# 
  1047   000F8C                     LATD            equ	3980	;# 
  1048   000F8D                     LATE            equ	3981	;# 
  1049   000F92                     TRISA           equ	3986	;# 
  1050   000F92                     DDRA            equ	3986	;# 
  1051   000F93                     TRISB           equ	3987	;# 
  1052   000F93                     DDRB            equ	3987	;# 
  1053   000F94                     TRISC           equ	3988	;# 
  1054   000F94                     DDRC            equ	3988	;# 
  1055   000F95                     TRISD           equ	3989	;# 
  1056   000F95                     DDRD            equ	3989	;# 
  1057   000F96                     TRISE           equ	3990	;# 
  1058   000F96                     DDRE            equ	3990	;# 
  1059   000F9B                     OSCTUNE         equ	3995	;# 
  1060   000F9D                     PIE1            equ	3997	;# 
  1061   000F9E                     PIR1            equ	3998	;# 
  1062   000F9F                     IPR1            equ	3999	;# 
  1063   000FA0                     PIE2            equ	4000	;# 
  1064   000FA1                     PIR2            equ	4001	;# 
  1065   000FA2                     IPR2            equ	4002	;# 
  1066   000FA6                     EECON1          equ	4006	;# 
  1067   000FA7                     EECON2          equ	4007	;# 
  1068   000FA8                     EEDATA          equ	4008	;# 
  1069   000FA9                     EEADR           equ	4009	;# 
  1070   000FAA                     EEADRH          equ	4010	;# 
  1071   000FAB                     RCSTA           equ	4011	;# 
  1072   000FAB                     RCSTA1          equ	4011	;# 
  1073   000FAC                     TXSTA           equ	4012	;# 
  1074   000FAC                     TXSTA1          equ	4012	;# 
  1075   000FAD                     TXREG           equ	4013	;# 
  1076   000FAD                     TXREG1          equ	4013	;# 
  1077   000FAE                     RCREG           equ	4014	;# 
  1078   000FAE                     RCREG1          equ	4014	;# 
  1079   000FAF                     SPBRG           equ	4015	;# 
  1080   000FAF                     SPBRG1          equ	4015	;# 
  1081   000FB0                     SPBRGH          equ	4016	;# 
  1082   000FB1                     T3CON           equ	4017	;# 
  1083   000FB2                     TMR3            equ	4018	;# 
  1084   000FB2                     TMR3L           equ	4018	;# 
  1085   000FB3                     TMR3H           equ	4019	;# 
  1086   000FB4                     CVRCON2         equ	4020	;# 
  1087   000FB5                     CVRCON          equ	4021	;# 
  1088   000FB6                     ECCP1AS         equ	4022	;# 
  1089   000FB7                     PWM1CON         equ	4023	;# 
  1090   000FB8                     BAUDCON         equ	4024	;# 
  1091   000FB8                     BAUDCTL         equ	4024	;# 
  1092   000FB9                     PSTRCON         equ	4025	;# 
  1093   000FBA                     CCP2CON         equ	4026	;# 
  1094   000FBB                     CCPR2           equ	4027	;# 
  1095   000FBB                     CCPR2L          equ	4027	;# 
  1096   000FBC                     CCPR2H          equ	4028	;# 
  1097   000FBD                     CCP1CON         equ	4029	;# 
  1098   000FBE                     CCPR1           equ	4030	;# 
  1099   000FBE                     CCPR1L          equ	4030	;# 
  1100   000FBF                     CCPR1H          equ	4031	;# 
  1101   000FC0                     ADCON2          equ	4032	;# 
  1102   000FC1                     ADCON1          equ	4033	;# 
  1103   000FC2                     ADCON0          equ	4034	;# 
  1104   000FC3                     ADRES           equ	4035	;# 
  1105   000FC3                     ADRESL          equ	4035	;# 
  1106   000FC4                     ADRESH          equ	4036	;# 
  1107   000FC5                     SSPCON2         equ	4037	;# 
  1108   000FC6                     SSPCON1         equ	4038	;# 
  1109   000FC7                     SSPSTAT         equ	4039	;# 
  1110   000FC8                     SSPADD          equ	4040	;# 
  1111   000FC9                     SSPBUF          equ	4041	;# 
  1112   000FCA                     T2CON           equ	4042	;# 
  1113   000FCB                     PR2             equ	4043	;# 
  1114   000FCB                     MEMCON          equ	4043	;# 
  1115   000FCC                     TMR2            equ	4044	;# 
  1116   000FCD                     T1CON           equ	4045	;# 
  1117   000FCE                     TMR1            equ	4046	;# 
  1118   000FCE                     TMR1L           equ	4046	;# 
  1119   000FCF                     TMR1H           equ	4047	;# 
  1120   000FD0                     RCON            equ	4048	;# 
  1121   000FD1                     WDTCON          equ	4049	;# 
  1122   000FD2                     HLVDCON         equ	4050	;# 
  1123   000FD2                     LVDCON          equ	4050	;# 
  1124   000FD3                     OSCCON          equ	4051	;# 
  1125   000FD5                     T0CON           equ	4053	;# 
  1126   000FD6                     TMR0            equ	4054	;# 
  1127   000FD6                     TMR0L           equ	4054	;# 
  1128   000FD7                     TMR0H           equ	4055	;# 
  1129   000FD8                     STATUS          equ	4056	;# 
  1130   000FD9                     FSR2            equ	4057	;# 
  1131   000FD9                     FSR2L           equ	4057	;# 
  1132   000FDA                     FSR2H           equ	4058	;# 
  1133   000FDB                     PLUSW2          equ	4059	;# 
  1134   000FDC                     PREINC2         equ	4060	;# 
  1135   000FDD                     POSTDEC2        equ	4061	;# 
  1136   000FDE                     POSTINC2        equ	4062	;# 
  1137   000FDF                     INDF2           equ	4063	;# 
  1138   000FE0                     BSR             equ	4064	;# 
  1139   000FE1                     FSR1            equ	4065	;# 
  1140   000FE1                     FSR1L           equ	4065	;# 
  1141   000FE2                     FSR1H           equ	4066	;# 
  1142   000FE3                     PLUSW1          equ	4067	;# 
  1143   000FE4                     PREINC1         equ	4068	;# 
  1144   000FE5                     POSTDEC1        equ	4069	;# 
  1145   000FE6                     POSTINC1        equ	4070	;# 
  1146   000FE7                     INDF1           equ	4071	;# 
  1147   000FE8                     WREG            equ	4072	;# 
  1148   000FE9                     FSR0            equ	4073	;# 
  1149   000FE9                     FSR0L           equ	4073	;# 
  1150   000FEA                     FSR0H           equ	4074	;# 
  1151   000FEB                     PLUSW0          equ	4075	;# 
  1152   000FEC                     PREINC0         equ	4076	;# 
  1153   000FED                     POSTDEC0        equ	4077	;# 
  1154   000FEE                     POSTINC0        equ	4078	;# 
  1155   000FEF                     INDF0           equ	4079	;# 
  1156   000FF0                     INTCON3         equ	4080	;# 
  1157   000FF1                     INTCON2         equ	4081	;# 
  1158   000FF2                     INTCON          equ	4082	;# 
  1159   000FF3                     PROD            equ	4083	;# 
  1160   000FF3                     PRODL           equ	4083	;# 
  1161   000FF4                     PRODH           equ	4084	;# 
  1162   000FF5                     TABLAT          equ	4085	;# 
  1163   000FF6                     TBLPTR          equ	4086	;# 
  1164   000FF6                     TBLPTRL         equ	4086	;# 
  1165   000FF7                     TBLPTRH         equ	4087	;# 
  1166   000FF8                     TBLPTRU         equ	4088	;# 
  1167   000FF9                     PCLAT           equ	4089	;# 
  1168   000FF9                     PC              equ	4089	;# 
  1169   000FF9                     PCL             equ	4089	;# 
  1170   000FFA                     PCLATH          equ	4090	;# 
  1171   000FFB                     PCLATU          equ	4091	;# 
  1172   000FFC                     STKPTR          equ	4092	;# 
  1173   000FFD                     TOS             equ	4093	;# 
  1174   000FFD                     TOSL            equ	4093	;# 
  1175   000FFE                     TOSH            equ	4094	;# 
  1176   000FFF                     TOSU            equ	4095	;# 
  1177   000F77                     SSPMSK          equ	3959	;# 
  1178   000F78                     SLRCON          equ	3960	;# 
  1179   000F79                     CM2CON1         equ	3961	;# 
  1180   000F7A                     CM2CON0         equ	3962	;# 
  1181   000F7B                     CM1CON0         equ	3963	;# 
  1182   000F7C                     WPUB            equ	3964	;# 
  1183   000F7D                     IOCB            equ	3965	;# 
  1184   000F7E                     ANSEL           equ	3966	;# 
  1185   000F7F                     ANSELH          equ	3967	;# 
  1186   000F80                     PORTA           equ	3968	;# 
  1187   000F81                     PORTB           equ	3969	;# 
  1188   000F82                     PORTC           equ	3970	;# 
  1189   000F83                     PORTD           equ	3971	;# 
  1190   000F84                     PORTE           equ	3972	;# 
  1191   000F89                     LATA            equ	3977	;# 
  1192   000F8A                     LATB            equ	3978	;# 
  1193   000F8B                     LATC            equ	3979	;# 
  1194   000F8C                     LATD            equ	3980	;# 
  1195   000F8D                     LATE            equ	3981	;# 
  1196   000F92                     TRISA           equ	3986	;# 
  1197   000F92                     DDRA            equ	3986	;# 
  1198   000F93                     TRISB           equ	3987	;# 
  1199   000F93                     DDRB            equ	3987	;# 
  1200   000F94                     TRISC           equ	3988	;# 
  1201   000F94                     DDRC            equ	3988	;# 
  1202   000F95                     TRISD           equ	3989	;# 
  1203   000F95                     DDRD            equ	3989	;# 
  1204   000F96                     TRISE           equ	3990	;# 
  1205   000F96                     DDRE            equ	3990	;# 
  1206   000F9B                     OSCTUNE         equ	3995	;# 
  1207   000F9D                     PIE1            equ	3997	;# 
  1208   000F9E                     PIR1            equ	3998	;# 
  1209   000F9F                     IPR1            equ	3999	;# 
  1210   000FA0                     PIE2            equ	4000	;# 
  1211   000FA1                     PIR2            equ	4001	;# 
  1212   000FA2                     IPR2            equ	4002	;# 
  1213   000FA6                     EECON1          equ	4006	;# 
  1214   000FA7                     EECON2          equ	4007	;# 
  1215   000FA8                     EEDATA          equ	4008	;# 
  1216   000FA9                     EEADR           equ	4009	;# 
  1217   000FAA                     EEADRH          equ	4010	;# 
  1218   000FAB                     RCSTA           equ	4011	;# 
  1219   000FAB                     RCSTA1          equ	4011	;# 
  1220   000FAC                     TXSTA           equ	4012	;# 
  1221   000FAC                     TXSTA1          equ	4012	;# 
  1222   000FAD                     TXREG           equ	4013	;# 
  1223   000FAD                     TXREG1          equ	4013	;# 
  1224   000FAE                     RCREG           equ	4014	;# 
  1225   000FAE                     RCREG1          equ	4014	;# 
  1226   000FAF                     SPBRG           equ	4015	;# 
  1227   000FAF                     SPBRG1          equ	4015	;# 
  1228   000FB0                     SPBRGH          equ	4016	;# 
  1229   000FB1                     T3CON           equ	4017	;# 
  1230   000FB2                     TMR3            equ	4018	;# 
  1231   000FB2                     TMR3L           equ	4018	;# 
  1232   000FB3                     TMR3H           equ	4019	;# 
  1233   000FB4                     CVRCON2         equ	4020	;# 
  1234   000FB5                     CVRCON          equ	4021	;# 
  1235   000FB6                     ECCP1AS         equ	4022	;# 
  1236   000FB7                     PWM1CON         equ	4023	;# 
  1237   000FB8                     BAUDCON         equ	4024	;# 
  1238   000FB8                     BAUDCTL         equ	4024	;# 
  1239   000FB9                     PSTRCON         equ	4025	;# 
  1240   000FBA                     CCP2CON         equ	4026	;# 
  1241   000FBB                     CCPR2           equ	4027	;# 
  1242   000FBB                     CCPR2L          equ	4027	;# 
  1243   000FBC                     CCPR2H          equ	4028	;# 
  1244   000FBD                     CCP1CON         equ	4029	;# 
  1245   000FBE                     CCPR1           equ	4030	;# 
  1246   000FBE                     CCPR1L          equ	4030	;# 
  1247   000FBF                     CCPR1H          equ	4031	;# 
  1248   000FC0                     ADCON2          equ	4032	;# 
  1249   000FC1                     ADCON1          equ	4033	;# 
  1250   000FC2                     ADCON0          equ	4034	;# 
  1251   000FC3                     ADRES           equ	4035	;# 
  1252   000FC3                     ADRESL          equ	4035	;# 
  1253   000FC4                     ADRESH          equ	4036	;# 
  1254   000FC5                     SSPCON2         equ	4037	;# 
  1255   000FC6                     SSPCON1         equ	4038	;# 
  1256   000FC7                     SSPSTAT         equ	4039	;# 
  1257   000FC8                     SSPADD          equ	4040	;# 
  1258   000FC9                     SSPBUF          equ	4041	;# 
  1259   000FCA                     T2CON           equ	4042	;# 
  1260   000FCB                     PR2             equ	4043	;# 
  1261   000FCB                     MEMCON          equ	4043	;# 
  1262   000FCC                     TMR2            equ	4044	;# 
  1263   000FCD                     T1CON           equ	4045	;# 
  1264   000FCE                     TMR1            equ	4046	;# 
  1265   000FCE                     TMR1L           equ	4046	;# 
  1266   000FCF                     TMR1H           equ	4047	;# 
  1267   000FD0                     RCON            equ	4048	;# 
  1268   000FD1                     WDTCON          equ	4049	;# 
  1269   000FD2                     HLVDCON         equ	4050	;# 
  1270   000FD2                     LVDCON          equ	4050	;# 
  1271   000FD3                     OSCCON          equ	4051	;# 
  1272   000FD5                     T0CON           equ	4053	;# 
  1273   000FD6                     TMR0            equ	4054	;# 
  1274   000FD6                     TMR0L           equ	4054	;# 
  1275   000FD7                     TMR0H           equ	4055	;# 
  1276   000FD8                     STATUS          equ	4056	;# 
  1277   000FD9                     FSR2            equ	4057	;# 
  1278   000FD9                     FSR2L           equ	4057	;# 
  1279   000FDA                     FSR2H           equ	4058	;# 
  1280   000FDB                     PLUSW2          equ	4059	;# 
  1281   000FDC                     PREINC2         equ	4060	;# 
  1282   000FDD                     POSTDEC2        equ	4061	;# 
  1283   000FDE                     POSTINC2        equ	4062	;# 
  1284   000FDF                     INDF2           equ	4063	;# 
  1285   000FE0                     BSR             equ	4064	;# 
  1286   000FE1                     FSR1            equ	4065	;# 
  1287   000FE1                     FSR1L           equ	4065	;# 
  1288   000FE2                     FSR1H           equ	4066	;# 
  1289   000FE3                     PLUSW1          equ	4067	;# 
  1290   000FE4                     PREINC1         equ	4068	;# 
  1291   000FE5                     POSTDEC1        equ	4069	;# 
  1292   000FE6                     POSTINC1        equ	4070	;# 
  1293   000FE7                     INDF1           equ	4071	;# 
  1294   000FE8                     WREG            equ	4072	;# 
  1295   000FE9                     FSR0            equ	4073	;# 
  1296   000FE9                     FSR0L           equ	4073	;# 
  1297   000FEA                     FSR0H           equ	4074	;# 
  1298   000FEB                     PLUSW0          equ	4075	;# 
  1299   000FEC                     PREINC0         equ	4076	;# 
  1300   000FED                     POSTDEC0        equ	4077	;# 
  1301   000FEE                     POSTINC0        equ	4078	;# 
  1302   000FEF                     INDF0           equ	4079	;# 
  1303   000FF0                     INTCON3         equ	4080	;# 
  1304   000FF1                     INTCON2         equ	4081	;# 
  1305   000FF2                     INTCON          equ	4082	;# 
  1306   000FF3                     PROD            equ	4083	;# 
  1307   000FF3                     PRODL           equ	4083	;# 
  1308   000FF4                     PRODH           equ	4084	;# 
  1309   000FF5                     TABLAT          equ	4085	;# 
  1310   000FF6                     TBLPTR          equ	4086	;# 
  1311   000FF6                     TBLPTRL         equ	4086	;# 
  1312   000FF7                     TBLPTRH         equ	4087	;# 
  1313   000FF8                     TBLPTRU         equ	4088	;# 
  1314   000FF9                     PCLAT           equ	4089	;# 
  1315   000FF9                     PC              equ	4089	;# 
  1316   000FF9                     PCL             equ	4089	;# 
  1317   000FFA                     PCLATH          equ	4090	;# 
  1318   000FFB                     PCLATU          equ	4091	;# 
  1319   000FFC                     STKPTR          equ	4092	;# 
  1320   000FFD                     TOS             equ	4093	;# 
  1321   000FFD                     TOSL            equ	4093	;# 
  1322   000FFE                     TOSH            equ	4094	;# 
  1323   000FFF                     TOSU            equ	4095	;# 
  1324                           
  1325                           	psect	idataBANK2
  1326   002046                     __pidataBANK2:
  1327                           	callstack 0
  1328                           
  1329                           ;initializer for configuro_mrf@F3372
  1330   002046  4D                 	db	77
  1331   002047  52                 	db	82
  1332   002048  46                 	db	70
  1333   002049  43                 	db	67
  1334   00204A  4E                 	db	78
  1335   00204B  46                 	db	70
  1336   00204C  3A                 	db	58
  1337   00204D  00                 	db	0
  1338   00204E  00                 	db	0
  1339   00204F  00                 	db	0
  1340   002050  00                 	db	0
  1341   002051  00                 	db	0
  1342   002052  00                 	db	0
  1343   002053  00                 	db	0
  1344   002054  00                 	db	0
  1345   002055  00                 	db	0
  1346   002056  00                 	db	0
  1347   002057  00                 	db	0
  1348   002058  00                 	db	0
  1349   002059  00                 	db	0
  1350   00205A  00                 	db	0
  1351   00205B  00                 	db	0
  1352   00205C  00                 	db	0
  1353   00205D  00                 	db	0
  1354   00205E  00                 	db	0
  1355   00205F  00                 	db	0
  1356   002060  00                 	db	0
  1357   002061  00                 	db	0
  1358   002062  00                 	db	0
  1359   002063  00                 	db	0
  1360   002064  00                 	db	0
  1361   002065  00                 	db	0
  1362   002066  00                 	db	0
  1363   002067  00                 	db	0
  1364   002068  00                 	db	0
  1365   002069  00                 	db	0
  1366   00206A  00                 	db	0
  1367   00206B  00                 	db	0
  1368   00206C  00                 	db	0
  1369   00206D  00                 	db	0
  1370   00206E  00                 	db	0
  1371   00206F  00                 	db	0
  1372   002070  00                 	db	0
  1373                           
  1374                           	psect	idataBANK3
  1375   001DA6                     __pidataBANK3:
  1376                           	callstack 0
  1377                           
  1378                           ;initializer for configuro_sistema@F3380
  1379   001DA6  53                 	db	83
  1380   001DA7  59                 	db	89
  1381   001DA8  53                 	db	83
  1382   001DA9  43                 	db	67
  1383   001DAA  4E                 	db	78
  1384   001DAB  46                 	db	70
  1385   001DAC  3A                 	db	58
  1386   001DAD  00                 	db	0
  1387   001DAE  00                 	db	0
  1388   001DAF  00                 	db	0
  1389   001DB0  00                 	db	0
  1390   001DB1  00                 	db	0
  1391   001DB2  00                 	db	0
  1392   001DB3  00                 	db	0
  1393   001DB4  00                 	db	0
  1394   001DB5  00                 	db	0
  1395   001DB6  00                 	db	0
  1396   001DB7  00                 	db	0
  1397   001DB8  00                 	db	0
  1398   001DB9  00                 	db	0
  1399   001DBA  00                 	db	0
  1400   001DBB  00                 	db	0
  1401   001DBC  00                 	db	0
  1402   001DBD  00                 	db	0
  1403   001DBE  00                 	db	0
  1404   001DBF  00                 	db	0
  1405   001DC0  00                 	db	0
  1406   001DC1  00                 	db	0
  1407   001DC2  00                 	db	0
  1408   001DC3  00                 	db	0
  1409   001DC4  00                 	db	0
  1410   001DC5  00                 	db	0
  1411   001DC6  00                 	db	0
  1412   001DC7  00                 	db	0
  1413   001DC8  00                 	db	0
  1414   001DC9  00                 	db	0
  1415   001DCA  00                 	db	0
  1416   001DCB  00                 	db	0
  1417   001DCC  00                 	db	0
  1418   001DCD  00                 	db	0
  1419   001DCE  00                 	db	0
  1420   001DCF  00                 	db	0
  1421   001DD0  00                 	db	0
  1422   001DD1  00                 	db	0
  1423   001DD2  00                 	db	0
  1424   001DD3  00                 	db	0
  1425   001DD4  00                 	db	0
  1426   001DD5  00                 	db	0
  1427   001DD6  00                 	db	0
  1428   001DD7  00                 	db	0
  1429   001DD8  00                 	db	0
  1430   001DD9  00                 	db	0
  1431   001DDA  00                 	db	0
  1432   001DDB  00                 	db	0
  1433   001DDC  00                 	db	0
  1434   001DDD  00                 	db	0
  1435   001DDE  00                 	db	0
  1436   001DDF  00                 	db	0
  1437   001DE0  00                 	db	0
  1438   001DE1  00                 	db	0
  1439   001DE2  00                 	db	0
  1440   001DE3  00                 	db	0
  1441   001DE4  00                 	db	0
  1442   001DE5  00                 	db	0
  1443   001DE6  00                 	db	0
  1444   001DE7  00                 	db	0
  1445   001DE8  00                 	db	0
  1446   001DE9  00                 	db	0
  1447   001DEA  00                 	db	0
  1448   001DEB  00                 	db	0
  1449                           
  1450                           	psect	smallconst
  1451   001000                     __psmallconst:
  1452                           	callstack 0
  1453   001000  00                 	db	0
  1454   001001                     _default_security_key:
  1455                           	callstack 0
  1456   001001  00                 	db	0
  1457   001002  10                 	db	16
  1458   001003  25                 	db	37
  1459   001004  37                 	db	55
  1460   001005  04                 	db	4
  1461   001006  55                 	db	85
  1462   001007  06                 	db	6
  1463   001008  79                 	db	121
  1464   001009  08                 	db	8
  1465   00100A  09                 	db	9
  1466   00100B  10                 	db	16
  1467   00100C  11                 	db	17
  1468   00100D  12                 	db	18
  1469   00100E  13                 	db	19
  1470   00100F  14                 	db	20
  1471   001010  15                 	db	21
  1472   001011                     __end_of_default_security_key:
  1473                           	callstack 0
  1474   001011                     _default_mac_address:
  1475                           	callstack 0
  1476   001011  11                 	db	17
  1477   001012  28                 	db	40
  1478   001013  35                 	db	53
  1479   001014  44                 	db	68
  1480   001015  56                 	db	86
  1481   001016  66                 	db	102
  1482   001017  77                 	db	119
  1483   001018  01                 	db	1
  1484   001019                     __end_of_default_mac_address:
  1485                           	callstack 0
  1486   007CF0                     _TMR1IF         set	31984
  1487   007E68                     _TMR1ON         set	32360
  1488   007E69                     _TMR1CS         set	32361
  1489   007E6B                     _T1OSCEN        set	32363
  1490   007E6A                     _T1SYNC         set	32362
  1491   007E6D                     _T1CKPS1        set	32365
  1492   007E6C                     _T1CKPS0        set	32364
  1493   007E6F                     _T1RD16         set	32367
  1494   007F8F                     _RBPU           set	32655
  1495   007CED                     _RCIE           set	31981
  1496   007CEE                     _ADIE           set	31982
  1497   007D03                     _BCLIE          set	32003
  1498   007CEB                     _SSPIE          set	31979
  1499   007D04                     _EEIE           set	32004
  1500   007D00                     _CCP2IE         set	32000
  1501   007CEA                     _CCP1IE         set	31978
  1502   007CE9                     _TMR2IE         set	31977
  1503   007CE8                     _TMR1IE         set	31976
  1504   007F95                     _T0IE           set	32661
  1505   007F93                     _RBIE           set	32659
  1506   007F94                     _INT0E          set	32660
  1507   007F96                     _PEIE           set	32662
  1508   007F97                     _GIE            set	32663
  1509   007E87                     _IPEN           set	32391
  1510   000FCF                     _TMR1H          set	4047
  1511   000FCE                     _TMR1L          set	4046
  1512   000F9B                     _OSCTUNE        set	3995
  1513   000FD3                     _OSCCON         set	4051
  1514   000F95                     _TRISDbits      set	3989
  1515   000F96                     _TRISEbits      set	3990
  1516   000F93                     _TRISBbits      set	3987
  1517   000F84                     _PORTE          set	3972
  1518   000F83                     _PORTD          set	3971
  1519   000F82                     _PORTC          set	3970
  1520   000F81                     _PORTB          set	3969
  1521   000F80                     _PORTA          set	3968
  1522   000F8D                     _LATEbits       set	3981
  1523   000F82                     _PORTCbits      set	3970
  1524   000FC9                     _SSPBUF         set	4041
  1525   000F9E                     _PIR1bits       set	3998
  1526   000FC6                     _SSPCON1bits    set	4038
  1527   000FC6                     _SSPCON1        set	4038
  1528   000FC7                     _SSPSTATbits    set	4039
  1529   000F94                     _TRISCbits      set	3988
  1530   000F81                     _PORTBbits      set	3969
  1531   000F8C                     _LATDbits       set	3980
  1532   000F8B                     _LATCbits       set	3979
  1533   001019                     STR_5:
  1534   001019  61                 	db	97	;'a'
  1535   00101A  75                 	db	117	;'u'
  1536   00101B  6E                 	db	110	;'n'
  1537   00101C  20                 	db	32
  1538   00101D  6E                 	db	110	;'n'
  1539   00101E  6F                 	db	111	;'o'
  1540   00101F  20                 	db	32
  1541   001020  73                 	db	115	;'s'
  1542   001021  65                 	db	101	;'e'
  1543   001022  00                 	db	0
  1544   001023                     STR_8:
  1545   001023  45                 	db	69	;'E'
  1546   001024  4E                 	db	78	;'N'
  1547   001025  44                 	db	68	;'D'
  1548   001026  43                 	db	67	;'C'
  1549   001027  4E                 	db	78	;'N'
  1550   001028  46                 	db	70	;'F'
  1551   001029  3A                 	db	58	;':'
  1552   00102A  00                 	db	0
  1553   00102B                     STR_7:
  1554   00102B  6E                 	db	110	;'n'
  1555   00102C  61                 	db	97	;'a'
  1556   00102D  72                 	db	114	;'r'
  1557   00102E  61                 	db	97	;'a'
  1558   00102F  6E                 	db	110	;'n'
  1559   001030  6A                 	db	106	;'j'
  1560   001031  61                 	db	97	;'a'
  1561   001032  00                 	db	0
  1562   001033                     STR_3:
  1563   001033  35                 	db	53	;'5'
  1564   001034  38                 	db	56	;'8'
  1565   001035  32                 	db	50	;'2'
  1566   001036  6D                 	db	109	;'m'
  1567   001037  20                 	db	32
  1568   001038  20                 	db	32
  1569   001039  00                 	db	0
  1570   00103A                     STR_1:
  1571   00103A  30                 	db	48	;'0'
  1572   00103B  30                 	db	48	;'0'
  1573   00103C  31                 	db	49	;'1'
  1574   00103D  34                 	db	52	;'4'
  1575   00103E  37                 	db	55	;'7'
  1576   00103F  00                 	db	0
  1577   001040                     STR_6:
  1578   001040  31                 	db	49	;'1'
  1579   001041  32                 	db	50	;'2'
  1580   001042  00                 	db	0
  1581   001023                     STR_9           equ	STR_8
  1582   00103A                     STR_2           equ	STR_1
  1583   001033                     STR_4           equ	STR_3
  1584   001043  00                 	db	0	; dummy byte at the end
  1585   000002                     __activetblptr  equ	2
  1586                           
  1587                           ; #config settings
  1588                           
  1589                           	psect	cinit
  1590   001A32                     __pcinit:
  1591                           	callstack 0
  1592   001A32                     start_initialization:
  1593                           	callstack 0
  1594   001A32                     __initialization:
  1595                           	callstack 0
  1596                           
  1597                           ; Initialize objects allocated to BANK3 (70 bytes)
  1598                           ; load TBLPTR registers with __pidataBANK3
  1599   001A32  0EA6               	movlw	low __pidataBANK3
  1600   001A34  6EF6               	movwf	tblptrl,c
  1601   001A36  0E1D               	movlw	high __pidataBANK3
  1602   001A38  6EF7               	movwf	tblptrh,c
  1603   001A3A  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1604   001A3C  6EF8               	movwf	tblptru,c
  1605   001A3E  EE03  F078         	lfsr	0,__pdataBANK3
  1606   001A42  EE10 F046          	lfsr	1,70
  1607   001A46                     copy_data0:
  1608   001A46  0009               	tblrd		*+
  1609   001A48  CFF5 FFEE          	movff	tablat,postinc0
  1610   001A4C  50E5               	movf	postdec1,w,c
  1611   001A4E  50E1               	movf	fsr1l,w,c
  1612   001A50  E1FA               	bnz	copy_data0
  1613                           
  1614                           ; Initialize objects allocated to BANK2 (43 bytes)
  1615                           ; load TBLPTR registers with __pidataBANK2
  1616   001A52  0E46               	movlw	low __pidataBANK2
  1617   001A54  6EF6               	movwf	tblptrl,c
  1618   001A56  0E20               	movlw	high __pidataBANK2
  1619   001A58  6EF7               	movwf	tblptrh,c
  1620   001A5A  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1621   001A5C  6EF8               	movwf	tblptru,c
  1622   001A5E  EE02  F09B         	lfsr	0,__pdataBANK2
  1623   001A62  EE10 F02B          	lfsr	1,43
  1624   001A66                     copy_data1:
  1625   001A66  0009               	tblrd		*+
  1626   001A68  CFF5 FFEE          	movff	tablat,postinc0
  1627   001A6C  50E5               	movf	postdec1,w,c
  1628   001A6E  50E1               	movf	fsr1l,w,c
  1629   001A70  E1FA               	bnz	copy_data1
  1630                           
  1631                           ; Clear objects allocated to BANK8 (135 bytes)
  1632   001A72  EE08  F000         	lfsr	0,__pbssBANK8
  1633   001A76  0E87               	movlw	135
  1634   001A78                     clear_0:
  1635   001A78  6AEE               	clrf	postinc0,c
  1636   001A7A  06E8               	decf	wreg,f,c
  1637   001A7C  E1FD               	bnz	clear_0
  1638                           
  1639                           ; Clear objects allocated to BANK7 (135 bytes)
  1640   001A7E  EE07  F000         	lfsr	0,__pbssBANK7
  1641   001A82  0E87               	movlw	135
  1642   001A84                     clear_1:
  1643   001A84  6AEE               	clrf	postinc0,c
  1644   001A86  06E8               	decf	wreg,f,c
  1645   001A88  E1FD               	bnz	clear_1
  1646                           
  1647                           ; Clear objects allocated to BANK6 (135 bytes)
  1648   001A8A  EE06  F000         	lfsr	0,__pbssBANK6
  1649   001A8E  0E87               	movlw	135
  1650   001A90                     clear_2:
  1651   001A90  6AEE               	clrf	postinc0,c
  1652   001A92  06E8               	decf	wreg,f,c
  1653   001A94  E1FD               	bnz	clear_2
  1654                           
  1655                           ; Clear objects allocated to BANK5 (135 bytes)
  1656   001A96  EE05  F000         	lfsr	0,__pbssBANK5
  1657   001A9A  0E87               	movlw	135
  1658   001A9C                     clear_3:
  1659   001A9C  6AEE               	clrf	postinc0,c
  1660   001A9E  06E8               	decf	wreg,f,c
  1661   001AA0  E1FD               	bnz	clear_3
  1662                           
  1663                           ; Clear objects allocated to BANK4 (134 bytes)
  1664   001AA2  EE04  F000         	lfsr	0,__pbssBANK4
  1665   001AA6  0E86               	movlw	134
  1666   001AA8                     clear_4:
  1667   001AA8  6AEE               	clrf	postinc0,c
  1668   001AAA  06E8               	decf	wreg,f,c
  1669   001AAC  E1FD               	bnz	clear_4
  1670                           
  1671                           ; Clear objects allocated to BANK3 (120 bytes)
  1672   001AAE  EE03  F000         	lfsr	0,__pbssBANK3
  1673   001AB2  0E78               	movlw	120
  1674   001AB4                     clear_5:
  1675   001AB4  6AEE               	clrf	postinc0,c
  1676   001AB6  06E8               	decf	wreg,f,c
  1677   001AB8  E1FD               	bnz	clear_5
  1678                           
  1679                           ; Clear objects allocated to BANK2 (32 bytes)
  1680   001ABA  EE02  F0C6         	lfsr	0,__pbssBANK2
  1681   001ABE  0E20               	movlw	32
  1682   001AC0                     clear_6:
  1683   001AC0  6AEE               	clrf	postinc0,c
  1684   001AC2  06E8               	decf	wreg,f,c
  1685   001AC4  E1FD               	bnz	clear_6
  1686                           
  1687                           ; Clear objects allocated to BANK1 (32 bytes)
  1688   001AC6  EE01  F0D3         	lfsr	0,__pbssBANK1
  1689   001ACA  0E20               	movlw	32
  1690   001ACC                     clear_7:
  1691   001ACC  6AEE               	clrf	postinc0,c
  1692   001ACE  06E8               	decf	wreg,f,c
  1693   001AD0  E1FD               	bnz	clear_7
  1694                           
  1695                           ; Clear objects allocated to BANK0 (4 bytes)
  1696   001AD2  0100               	movlb	0
  1697   001AD4  6BED               	clrf	(__pbssBANK0+3)& (0+255),b
  1698   001AD6  6BEC               	clrf	(__pbssBANK0+2)& (0+255),b
  1699   001AD8  6BEB               	clrf	(__pbssBANK0+1)& (0+255),b
  1700   001ADA  6BEA               	clrf	__pbssBANK0& (0+255),b
  1701                           
  1702                           ; Clear objects allocated to COMRAM (2 bytes)
  1703   001ADC  6A5E               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1704   001ADE  6A5D               	clrf	__pbssCOMRAM& (0+255),c
  1705   001AE0                     end_of_initialization:
  1706                           	callstack 0
  1707   001AE0                     __end_of__initialization:
  1708                           	callstack 0
  1709   001AE0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1710   001AE2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1711   001AE4  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1712   001AE6  6EF8               	movwf	tblptru,c
  1713   001AE8  0100               	movlb	0
  1714   001AEA  EF29  F00C         	goto	_main	;jump to C main() function
  1715                           
  1716                           	psect	bssCOMRAM
  1717   00005D                     __pbssCOMRAM:
  1718                           	callstack 0
  1719   00005D                     _estadoActual:
  1720                           	callstack 0
  1721   00005D                     	ds	1
  1722   00005E                     _long_mac_address_e:
  1723                           	callstack 0
  1724   00005E                     	ds	1
  1725                           
  1726                           	psect	bssBANK0
  1727   0000EA                     __pbssBANK0:
  1728                           	callstack 0
  1729   0000EA                     _timeStamp:
  1730                           	callstack 0
  1731   0000EA                     	ds	4
  1732                           
  1733                           	psect	bssBANK1
  1734   0001D3                     __pbssBANK1:
  1735                           	callstack 0
  1736   0001D3                     _data_config_s:
  1737                           	callstack 0
  1738   0001D3                     	ds	32
  1739                           
  1740                           	psect	bssBANK2
  1741   0002C6                     __pbssBANK2:
  1742                           	callstack 0
  1743   0002C6                     configuro_mrf@F3370:
  1744                           	callstack 0
  1745   0002C6                     	ds	32
  1746                           
  1747                           	psect	dataBANK2
  1748   00029B                     __pdataBANK2:
  1749                           	callstack 0
  1750   00029B                     configuro_mrf@F3372:
  1751                           	callstack 0
  1752   00029B                     	ds	43
  1753                           
  1754                           	psect	bssBANK3
  1755   000300                     __pbssBANK3:
  1756                           	callstack 0
  1757   000300                     cierro_configuracion@F3386:
  1758                           	callstack 0
  1759   000300                     	ds	60
  1760   00033C                     configuro_sistema@F3378:
  1761                           	callstack 0
  1762   00033C                     	ds	60
  1763                           
  1764                           	psect	dataBANK3
  1765   000378                     __pdataBANK3:
  1766                           	callstack 0
  1767   000378                     configuro_sistema@F3380:
  1768                           	callstack 0
  1769   000378                     	ds	70
  1770                           
  1771                           	psect	bssBANK4
  1772   000400                     __pbssBANK4:
  1773                           	callstack 0
  1774   000400                     _data_in_s:
  1775                           	callstack 0
  1776   000400                     	ds	134
  1777                           
  1778                           	psect	bssBANK5
  1779   000500                     __pbssBANK5:
  1780                           	callstack 0
  1781   000500                     _data_out_s:
  1782                           	callstack 0
  1783   000500                     	ds	135
  1784                           
  1785                           	psect	bssBANK6
  1786   000600                     __pbssBANK6:
  1787                           	callstack 0
  1788   000600                     configuro_mrf@F3368:
  1789                           	callstack 0
  1790   000600                     	ds	135
  1791                           
  1792                           	psect	bssBANK7
  1793   000700                     __pbssBANK7:
  1794                           	callstack 0
  1795   000700                     configuro_sistema@F3376:
  1796                           	callstack 0
  1797   000700                     	ds	135
  1798                           
  1799                           	psect	bssBANK8
  1800   000800                     __pbssBANK8:
  1801                           	callstack 0
  1802   000800                     cierro_configuracion@F3384:
  1803                           	callstack 0
  1804   000800                     	ds	135
  1805                           
  1806                           	psect	cstackBANK2
  1807   000200                     __pcstackBANK2:
  1808                           	callstack 0
  1809   000200                     main@data_out_s:
  1810                           	callstack 0
  1811                           
  1812                           ; 135 bytes @ 0x0
  1813   000200                     	ds	135
  1814   000287                     main@delay_parpadeo:
  1815                           	callstack 0
  1816                           
  1817                           ; 9 bytes @ 0x87
  1818   000287                     	ds	9
  1819   000290                     main@boton1:
  1820                           	callstack 0
  1821                           
  1822                           ; 11 bytes @ 0x90
  1823   000290                     	ds	11
  1824                           
  1825                           	psect	cstackBANK1
  1826   000100                     __pcstackBANK1:
  1827                           	callstack 0
  1828   000100                     configuro_mrf@buuf:
  1829                           	callstack 0
  1830   000100                     configuro_sistema@data_out_s:
  1831                           	callstack 0
  1832                           
  1833                           ; 135 bytes @ 0x0
  1834   000100                     	ds	43
  1835   00012B                     configuro_mrf@size:
  1836                           	callstack 0
  1837                           
  1838                           ; 1 bytes @ 0x2B
  1839   00012B                     	ds	1
  1840   00012C                     configuro_mrf@data_config_s:
  1841                           	callstack 0
  1842                           
  1843                           ; 32 bytes @ 0x2C
  1844   00012C                     	ds	32
  1845   00014C                     configuro_mrf@data_out_s:
  1846                           	callstack 0
  1847                           
  1848                           ; 135 bytes @ 0x4C
  1849   00014C                     	ds	135
  1850                           
  1851                           	psect	cstackBANK0
  1852   000060                     __pcstackBANK0:
  1853                           	callstack 0
  1854   000060                     configuro_sistema@size:
  1855                           	callstack 0
  1856   000060                     cierro_configuracion@size:
  1857                           	callstack 0
  1858                           
  1859                           ; 1 bytes @ 0x0
  1860   000060                     	ds	1
  1861   000061                     configuro_sistema@config_sistema:
  1862                           	callstack 0
  1863   000061                     cierro_configuracion@data_out_s:
  1864                           	callstack 0
  1865                           
  1866                           ; 135 bytes @ 0x1
  1867   000061                     	ds	135
  1868   0000E8                     ??_main:
  1869                           
  1870                           ; 1 bytes @ 0x88
  1871   0000E8                     	ds	2
  1872                           
  1873                           	psect	cstackCOMRAM
  1874   000001                     __pcstackCOMRAM:
  1875                           	callstack 0
  1876   000001                     ?_MRF24GetDataIn:
  1877                           	callstack 0
  1878   000001                     ?_strlen:
  1879                           	callstack 0
  1880   000001                     SetCSPin@estado:
  1881                           	callstack 0
  1882   000001                     SetWakePin@estado:
  1883                           	callstack 0
  1884   000001                     SetResetPin@estado:
  1885                           	callstack 0
  1886   000001                     SPIWriteByte@dato:
  1887                           	callstack 0
  1888   000001                     DelayReset@delay:
  1889                           	callstack 0
  1890   000001                     strcpy@dest:
  1891                           	callstack 0
  1892   000001                     DelayInit@delay:
  1893                           	callstack 0
  1894   000001                     DelayIsRunning@delay:
  1895                           	callstack 0
  1896   000001                     strlen@s:
  1897                           	callstack 0
  1898   000001                     
  1899                           ; 1 bytes @ 0x0
  1900   000001                     	ds	1
  1901   000002                     WriteByteSPIPort@dato:
  1902                           	callstack 0
  1903   000002                     strcpy@src:
  1904                           	callstack 0
  1905   000002                     SPIWrite2Byte@dato:
  1906                           	callstack 0
  1907   000002                     
  1908                           ; 1 bytes @ 0x1
  1909   000002                     	ds	1
  1910   000003                     SetShortAddr@valor:
  1911                           	callstack 0
  1912   000003                     GetShortAddr@leido_spi:
  1913                           	callstack 0
  1914   000003                     DelayRead@delay:
  1915                           	callstack 0
  1916   000003                     strlen@a:
  1917                           	callstack 0
  1918   000003                     DelayInit@duration:
  1919                           	callstack 0
  1920   000003                     ??_strcpy:
  1921                           
  1922                           ; 1 bytes @ 0x2
  1923   000003                     	ds	1
  1924   000004                     SetShortAddr@reg_address:
  1925                           	callstack 0
  1926   000004                     GetShortAddr@reg_address:
  1927                           	callstack 0
  1928   000004                     strcpy@d:
  1929                           	callstack 0
  1930   000004                     Write2ByteSPIPort@dato:
  1931                           	callstack 0
  1932   000004                     
  1933                           ; 1 bytes @ 0x3
  1934   000004                     	ds	1
  1935   000005                     SetDeviceMACAddress@i:
  1936                           	callstack 0
  1937   000005                     memcpy@d1:
  1938                           	callstack 0
  1939   000005                     ??_DelayRead:
  1940   000005                     
  1941                           ; 1 bytes @ 0x4
  1942   000005                     	ds	1
  1943   000006                     SetLongAddr@reg_address:
  1944                           	callstack 0
  1945   000006                     GetLongAddr@reg_address:
  1946                           	callstack 0
  1947   000006                     
  1948                           ; 1 bytes @ 0x5
  1949   000006                     	ds	1
  1950   000007                     DebounceFSMInit@antirrebote_boton_n:
  1951                           	callstack 0
  1952   000007                     memcpy@s1:
  1953                           	callstack 0
  1954   000007                     
  1955                           ; 1 bytes @ 0x6
  1956   000007                     	ds	1
  1957   000008                     SetLongAddr@valor:
  1958                           	callstack 0
  1959   000008                     ??_GetLongAddr:
  1960                           
  1961                           ; 1 bytes @ 0x7
  1962   000008                     	ds	1
  1963   000009                     memcpy@n:
  1964                           	callstack 0
  1965   000009                     ??_SetLongAddr:
  1966   000009                     
  1967                           ; 1 bytes @ 0x8
  1968   000009                     	ds	1
  1969   00000A                     GetLongAddr@respuesta:
  1970                           	callstack 0
  1971                           
  1972                           ; 1 bytes @ 0x9
  1973   00000A                     	ds	1
  1974   00000B                     MRF24TransmitirDato@p_info_out_s:
  1975                           	callstack 0
  1976   00000B                     memcpy@d:
  1977                           	callstack 0
  1978   00000B                     ??_SetChannel:
  1979   00000B                     ??_MRF24ReciboPaquete:
  1980                           
  1981                           ; 1 bytes @ 0xA
  1982   00000B                     	ds	2
  1983   00000D                     memcpy@s:
  1984                           	callstack 0
  1985   00000D                     ??_MRF24TransmitirDato:
  1986                           
  1987                           ; 1 bytes @ 0xC
  1988   00000D                     	ds	2
  1989   00000F                     memcpy@tmp:
  1990                           	callstack 0
  1991                           
  1992                           ; 1 bytes @ 0xE
  1993   00000F                     	ds	1
  1994   000010                     MRF24ReciboPaquete@add:
  1995                           	callstack 0
  1996   000010                     
  1997                           ; 1 bytes @ 0xF
  1998   000010                     	ds	1
  1999   000011                     DebounceFSMUpdate@antirrebote_boton_n:
  2000                           	callstack 0
  2001   000011                     ??_InicializoMRF24:
  2002                           
  2003                           ; 1 bytes @ 0x10
  2004   000011                     	ds	1
  2005   000012                     MRF24TransmitirDato@i:
  2006                           	callstack 0
  2007   000012                     MRF24ReciboPaquete@i:
  2008                           	callstack 0
  2009                           
  2010                           ; 1 bytes @ 0x11
  2011   000012                     	ds	1
  2012   000013                     InicializoMRF24@lectura:
  2013                           	callstack 0
  2014   000013                     MRF24TransmitirDato@pos_mem:
  2015                           	callstack 0
  2016   000013                     DebounceFSMUpdate@estado_pin:
  2017                           	callstack 0
  2018                           
  2019                           ; 1 bytes @ 0x12
  2020   000013                     	ds	1
  2021   000014                     InicializoMRF24@delay_time_out:
  2022                           	callstack 0
  2023   000014                     ??_configuro_mrf:
  2024   000014                     ??_configuro_sistema:
  2025   000014                     ??_DebounceFSMUpdate:
  2026                           
  2027                           ; 1 bytes @ 0x13
  2028   000014                     	ds	1
  2029   000015                     configuro_sistema@buuf:
  2030                           	callstack 0
  2031                           
  2032                           ; 70 bytes @ 0x14
  2033   000015                     	ds	8
  2034   00001D                     ??_MRF24J40Init:
  2035                           
  2036                           ; 1 bytes @ 0x1C
  2037   00001D                     	ds	62
  2038   00005B                     ??_envio:
  2039                           
  2040                           ; 1 bytes @ 0x5A
  2041   00005B                     	ds	2
  2042                           
  2043 ;;
  2044 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2045 ;;
  2046 ;; *************** function _main *****************
  2047 ;; Defined at:
  2048 ;;		line 44 in file "main.c"
  2049 ;; Parameters:    Size  Location     Type
  2050 ;;		None
  2051 ;; Auto vars:     Size  Location     Type
  2052 ;;  mrf24_data_i    2    0        PTR struct .
  2053 ;;		 -> data_in_s(134), 
  2054 ;;  data_out_s    135    0[BANK2 ] struct .
  2055 ;;  boton1         11  144[BANK2 ] struct .
  2056 ;;  delay_parpad    9  135[BANK2 ] struct .
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Locals:         0       0       0     155       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Totals:         0       2       0     155       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;Total ram usage:      157 bytes
  2071 ;; Hardware stack levels required when called: 8
  2072 ;; This function calls:
  2073 ;;		_BoardInit
  2074 ;;		_DebounceFSMInit
  2075 ;;		_DebounceFSMUpdate
  2076 ;;		_DelayInit
  2077 ;;		_DelayRead
  2078 ;;		_MRF24GetDataIn
  2079 ;;		_MRF24IsNewMsg
  2080 ;;		_MRF24J40Init
  2081 ;;		_MRF24ReciboPaquete
  2082 ;;		_envio
  2083 ;; This function is called by:
  2084 ;;		Startup code after reset
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text0
  2089   001852                     __ptext0:
  2090                           	callstack 0
  2091   001852                     _main:
  2092                           	callstack 23
  2093   001852                     
  2094                           ;main.c: 46:     delayNoBloqueanteData_t delay_parpadeo;;main.c: 47:     debounceData_t 
      +                          boton1;;main.c: 48:  DebounceFSMInit(&boton1);
  2095   001852  0E90               	movlw	low main@boton1
  2096   001854  6E07               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  2097   001856  0E02               	movlw	high main@boton1
  2098   001858  6E08               	movwf	(DebounceFSMInit@antirrebote_boton_n+1)^0,c
  2099   00185A  EC73  F00F         	call	_DebounceFSMInit	;wreg free
  2100   00185E                     
  2101                           ;main.c: 49:     BoardInit();
  2102   00185E  EC7A  F00E         	call	_BoardInit	;wreg free
  2103   001862                     
  2104                           ;main.c: 50:     MRF24J40Init();
  2105   001862  EC56  F00F         	call	_MRF24J40Init	;wreg free
  2106   001866                     
  2107                           ;main.c: 51:     DelayInit(&delay_parpadeo, 1000);
  2108   001866  0E87               	movlw	low main@delay_parpadeo
  2109   001868  6E01               	movwf	DelayInit@delay^0,c
  2110   00186A  0E02               	movlw	high main@delay_parpadeo
  2111   00186C  6E02               	movwf	(DelayInit@delay+1)^0,c
  2112   00186E  0EE8               	movlw	232
  2113   001870  6E03               	movwf	DelayInit@duration^0,c
  2114   001872  0E03               	movlw	3
  2115   001874  6E04               	movwf	(DelayInit@duration+1)^0,c
  2116   001876  0E00               	movlw	0
  2117   001878  6E05               	movwf	(DelayInit@duration+2)^0,c
  2118   00187A  0E00               	movlw	0
  2119   00187C  6E06               	movwf	(DelayInit@duration+3)^0,c
  2120   00187E  EC0D  F010         	call	_DelayInit	;wreg free
  2121   001882                     
  2122                           ;main.c: 53:     mrf24_data_out_t data_out_s;;main.c: 54:  data_out_s.dest_address = (0x
      +                          1111);
  2123   001882  0E11               	movlw	17
  2124   001884  0102               	movlb	2	; () banked
  2125   001886  6F03               	movwf	(main@data_out_s+3)& (0+255),b
  2126   001888  0E11               	movlw	17
  2127   00188A  6F02               	movwf	(main@data_out_s+2)& (0+255),b
  2128   00188C                     
  2129                           ; BSR set to: 2
  2130                           ;main.c: 55:  data_out_s.dest_panid = 0x1234;
  2131   00188C  0E12               	movlw	18
  2132   00188E  6F01               	movwf	(main@data_out_s+1)& (0+255),b
  2133   001890  0E34               	movlw	52
  2134   001892  6F00               	movwf	main@data_out_s& (0+255),b
  2135   001894                     
  2136                           ; BSR set to: 2
  2137                           ;main.c: 56:  data_out_s.origin_address = 0x4567;
  2138   001894  0E45               	movlw	69
  2139   001896  6F05               	movwf	(main@data_out_s+5)& (0+255),b
  2140   001898  0E67               	movlw	103
  2141   00189A  6F04               	movwf	(main@data_out_s+4)& (0+255),b
  2142   00189C                     l317:
  2143   00189C  0004               	clrwdt		;# 
  2144                           
  2145                           ;main.c: 61:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  2146   00189E  EF55  F00C         	goto	l2709
  2147   0018A2                     l2705:
  2148                           
  2149                           ; BSR set to: 0
  2150                           ;main.c: 64:                 envio();
  2151   0018A2  EC39  F00F         	call	_envio	;wreg free
  2152                           
  2153                           ;main.c: 66:     break;
  2154   0018A6  EF76  F00C         	goto	l2711
  2155   0018AA                     l2709:
  2156   0018AA  0E90               	movlw	low main@boton1
  2157   0018AC  6E11               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  2158   0018AE  0E02               	movlw	high main@boton1
  2159   0018B0  6E12               	movwf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,c
  2160   0018B2  B482               	btfsc	130,2,c	;volatile
  2161   0018B4  EF5E  F00C         	goto	u1391
  2162   0018B8  EF61  F00C         	goto	u1390
  2163   0018BC                     u1391:
  2164   0018BC  0E01               	movlw	1
  2165   0018BE  EF62  F00C         	goto	u1396
  2166   0018C2                     u1390:
  2167   0018C2  0E00               	movlw	0
  2168   0018C4                     u1396:
  2169   0018C4  6E13               	movwf	DebounceFSMUpdate@estado_pin^0,c
  2170   0018C6  ECF8  F00A         	call	_DebounceFSMUpdate	;wreg free
  2171   0018CA  0100               	movlb	0	; () banked
  2172   0018CC  6FE8               	movwf	??_main& (0+255),b
  2173   0018CE  6BE9               	clrf	(??_main+1)& (0+255),b
  2174                           
  2175                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2176                           ; Switch size 1, requested type "simple"
  2177                           ; Number of cases is 1, Range of values is 0 to 0
  2178                           ; switch strategies available:
  2179                           ; Name         Instructions Cycles
  2180                           ; simple_byte            4     3 (average)
  2181                           ;	Chosen strategy is simple_byte
  2182   0018D0  51E9               	movf	(??_main+1)& (0+255),w,b
  2183   0018D2  0A00               	xorlw	0	; case 0
  2184   0018D4  B4D8               	btfsc	status,2,c
  2185   0018D6  EF6F  F00C         	goto	l2765
  2186   0018DA  EF76  F00C         	goto	l2711
  2187   0018DE                     l2765:
  2188                           
  2189                           ; BSR set to: 0
  2190                           ; Switch size 1, requested type "simple"
  2191                           ; Number of cases is 1, Range of values is 1 to 1
  2192                           ; switch strategies available:
  2193                           ; Name         Instructions Cycles
  2194                           ; simple_byte            4     3 (average)
  2195                           ;	Chosen strategy is simple_byte
  2196   0018DE  51E8               	movf	??_main& (0+255),w,b
  2197   0018E0  0A01               	xorlw	1	; case 1
  2198   0018E2  B4D8               	btfsc	status,2,c
  2199   0018E4  EF51  F00C         	goto	l2705
  2200   0018E8  EF76  F00C         	goto	l2711
  2201   0018EC                     l2711:
  2202                           
  2203                           ;main.c: 72:         if(MRF24IsNewMsg() == MSG_PRESENT) {
  2204   0018EC  ECAC  F00F         	call	_MRF24IsNewMsg	;wreg free
  2205   0018F0  0A04               	xorlw	4
  2206   0018F2  A4D8               	btfss	status,2,c
  2207   0018F4  EF7E  F00C         	goto	u1401
  2208   0018F8  EF80  F00C         	goto	u1400
  2209   0018FC                     u1401:
  2210   0018FC  EF84  F00C         	goto	l2717
  2211   001900                     u1400:
  2212   001900  ECD6  F010         	call	_MRF24GetDataIn	;wreg free
  2213   001904                     
  2214                           ;main.c: 75:             MRF24ReciboPaquete();
  2215   001904  ECA7  F00C         	call	_MRF24ReciboPaquete	;wreg free
  2216   001908                     l2717:
  2217                           
  2218                           ;main.c: 100:         if(DelayRead(&delay_parpadeo)) {
  2219   001908  0E87               	movlw	low main@delay_parpadeo
  2220   00190A  6E03               	movwf	DelayRead@delay^0,c
  2221   00190C  0E02               	movlw	high main@delay_parpadeo
  2222   00190E  6E04               	movwf	(DelayRead@delay+1)^0,c
  2223   001910  EC77  F00D         	call	_DelayRead	;wreg free
  2224   001914  0900               	iorlw	0
  2225   001916  B4D8               	btfsc	status,2,c
  2226   001918  EF90  F00C         	goto	u1411
  2227   00191C  EF92  F00C         	goto	u1410
  2228   001920                     u1411:
  2229   001920  EF4E  F00C         	goto	l317
  2230   001924                     u1410:
  2231   001924                     
  2232                           ;main.c: 101:             LATEbits.LATE0 = !LATEbits.LATE0;
  2233   001924  A08D               	btfss	141,0,c	;volatile
  2234   001926  EF97  F00C         	goto	u1421
  2235   00192A  EF9C  F00C         	goto	u1420
  2236   00192E                     u1421:
  2237   00192E  0100               	movlb	0	; () banked
  2238   001930  6BE8               	clrf	??_main& (0+255),b
  2239   001932  2BE8               	incf	??_main& (0+255),f,b
  2240   001934  EF9E  F00C         	goto	u1438
  2241   001938                     u1420:
  2242   001938  0100               	movlb	0	; () banked
  2243   00193A  6BE8               	clrf	??_main& (0+255),b
  2244   00193C                     u1438:
  2245   00193C  508D               	movf	141,w,c	;volatile
  2246   00193E  19E8               	xorwf	??_main& (0+255),w,b
  2247   001940  0BFE               	andlw	-2
  2248   001942  19E8               	xorwf	??_main& (0+255),w,b
  2249   001944  6E8D               	movwf	141,c	;volatile
  2250   001946  EF4E  F00C         	goto	l317
  2251   00194A  EF21  F000         	goto	start
  2252   00194E                     __end_of_main:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _envio *****************
  2256 ;; Defined at:
  2257 ;;		line 106 in file "main.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;Total ram usage:        2 bytes
  2276 ;; Hardware stack levels used: 1
  2277 ;; Hardware stack levels required when called: 7
  2278 ;; This function calls:
  2279 ;;		_cierro_configuracion
  2280 ;;		_configuro_mrf
  2281 ;;		_configuro_sistema
  2282 ;; This function is called by:
  2283 ;;		_main
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text1
  2288   001E72                     __ptext1:
  2289                           	callstack 0
  2290   001E72                     _envio:
  2291                           	callstack 23
  2292   001E72                     
  2293                           ;main.c: 108:     configuro_mrf();
  2294   001E72  EC42  F00A         	call	_configuro_mrf	;wreg free
  2295   001E76                     
  2296                           ;main.c: 109:     _delay((unsigned long)((500)*(16000000/4000.0)));;
  2297   001E76  0E0B               	movlw	11
  2298   001E78  6E5C               	movwf	(??_envio+1)^0,c
  2299   001E7A  0E26               	movlw	38
  2300   001E7C  6E5B               	movwf	??_envio^0,c
  2301   001E7E  0E5E               	movlw	94
  2302   001E80                     u1447:
  2303   001E80  2EE8               	decfsz	wreg,f,c
  2304   001E82  D7FE               	bra	u1447
  2305   001E84  2E5B               	decfsz	??_envio^0,f,c
  2306   001E86  D7FC               	bra	u1447
  2307   001E88  2E5C               	decfsz	(??_envio+1)^0,f,c
  2308   001E8A  D7FA               	bra	u1447
  2309   001E8C                     
  2310                           ;main.c: 110:     configuro_sistema();
  2311   001E8C  ECA5  F00B         	call	_configuro_sistema	;wreg free
  2312                           
  2313                           ;main.c: 111:     _delay((unsigned long)((500)*(16000000/4000.0)));;
  2314   001E90  0E0B               	movlw	11
  2315   001E92  6E5C               	movwf	(??_envio+1)^0,c
  2316   001E94  0E26               	movlw	38
  2317   001E96  6E5B               	movwf	??_envio^0,c
  2318   001E98  0E5E               	movlw	94
  2319   001E9A                     u1457:
  2320   001E9A  2EE8               	decfsz	wreg,f,c
  2321   001E9C  D7FE               	bra	u1457
  2322   001E9E  2E5B               	decfsz	??_envio^0,f,c
  2323   001EA0  D7FC               	bra	u1457
  2324   001EA2  2E5C               	decfsz	(??_envio+1)^0,f,c
  2325   001EA4  D7FA               	bra	u1457
  2326   001EA6                     
  2327                           ;main.c: 112:     cierro_configuracion();
  2328   001EA6  ECD5  F00D         	call	_cierro_configuracion	;wreg free
  2329   001EAA  0012               	return		;funcret
  2330   001EAC                     __end_of_envio:
  2331                           	callstack 0
  2332                           
  2333 ;; *************** function _configuro_sistema *****************
  2334 ;; Defined at:
  2335 ;;		line 146 in file "main.c"
  2336 ;; Parameters:    Size  Location     Type
  2337 ;;		None
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  data_out_s    135    0[BANK1 ] struct .
  2340 ;;  buuf           70   20[COMRAM] unsigned char [70]
  2341 ;;  config_siste   60    1[BANK0 ] struct .
  2342 ;;  size            1    0[BANK0 ] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2353 ;;      Locals:        70      61     135       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Totals:        71      61     135       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;Total ram usage:      267 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 6
  2359 ;; This function calls:
  2360 ;;		_MRF24TransmitirDato
  2361 ;;		_memcpy
  2362 ;;		_strcpy
  2363 ;;		_strlen
  2364 ;; This function is called by:
  2365 ;;		_envio
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text2
  2370   00174A                     __ptext2:
  2371                           	callstack 0
  2372   00174A                     _configuro_sistema:
  2373                           	callstack 23
  2374   00174A                     
  2375                           ;main.c: 148:     mrf24_data_out_t data_out_s = {0};
  2376   00174A  EE27  F000         	lfsr	2,configuro_sistema@F3376
  2377   00174E  EE11  F000         	lfsr	1,configuro_sistema@data_out_s
  2378   001752  0E86               	movlw	134
  2379   001754                     u1041:
  2380   001754  CFDE FFE6          	movff	postinc2,postinc1
  2381   001758  06E8               	decf	wreg,f,c
  2382   00175A  E2FC               	bc	u1041
  2383   00175C  0E87               	movlw	135
  2384   00175E  5ED9               	subwf	fsr2l,f,c
  2385   001760  5EE1               	subwf	fsr1l,f,c
  2386                           
  2387                           ;main.c: 149:     system_config_t config_sistema = {0};
  2388   001762  EE23  F03C         	lfsr	2,configuro_sistema@F3378
  2389   001766  EE10  F061         	lfsr	1,configuro_sistema@config_sistema
  2390   00176A  0E3B               	movlw	59
  2391   00176C                     u1051:
  2392   00176C  CFDB FFE3          	movff	plusw2,plusw1
  2393   001770  06E8               	decf	wreg,f,c
  2394   001772  E2FC               	bc	u1051
  2395   001774                     
  2396                           ;main.c: 151:     data_out_s.dest_address = 0xFFFE;
  2397   001774  0EFF               	movlw	255
  2398   001776  0101               	movlb	1	; () banked
  2399   001778  6F03               	movwf	(configuro_sistema@data_out_s+3)& (0+255),b
  2400   00177A  0EFE               	movlw	254
  2401   00177C  6F02               	movwf	(configuro_sistema@data_out_s+2)& (0+255),b
  2402   00177E                     
  2403                           ; BSR set to: 1
  2404                           ;main.c: 152:  data_out_s.dest_panid = 0x9999;
  2405   00177E  0E99               	movlw	153
  2406   001780  6F01               	movwf	(configuro_sistema@data_out_s+1)& (0+255),b
  2407   001782  0E99               	movlw	153
  2408   001784  6F00               	movwf	configuro_sistema@data_out_s& (0+255),b
  2409   001786                     
  2410                           ; BSR set to: 1
  2411                           ;main.c: 153:  data_out_s.origin_address = 0x4567;
  2412   001786  0E45               	movlw	69
  2413   001788  6F05               	movwf	(configuro_sistema@data_out_s+5)& (0+255),b
  2414   00178A  0E67               	movlw	103
  2415   00178C  6F04               	movwf	(configuro_sistema@data_out_s+4)& (0+255),b
  2416   00178E                     
  2417                           ; BSR set to: 1
  2418                           ;main.c: 155:     strcpy(config_sistema.playa, "aun no se");
  2419   00178E  0E61               	movlw	low configuro_sistema@config_sistema
  2420   001790  6E01               	movwf	strcpy@dest^0,c
  2421   001792  0E19               	movlw	low STR_5
  2422   001794  6E02               	movwf	strcpy@src^0,c
  2423   001796  ECC6  F00F         	call	_strcpy	;wreg free
  2424   00179A                     
  2425                           ;main.c: 156:     strcpy(config_sistema.box, "12");
  2426   00179A  0E89               	movlw	low (configuro_sistema@config_sistema+40)
  2427   00179C  6E01               	movwf	strcpy@dest^0,c
  2428   00179E  0E40               	movlw	low STR_6
  2429   0017A0  6E02               	movwf	strcpy@src^0,c
  2430   0017A2  ECC6  F00F         	call	_strcpy	;wreg free
  2431   0017A6                     
  2432                           ;main.c: 157:     strcpy(config_sistema.sector, "naranja");
  2433   0017A6  0E75               	movlw	low (configuro_sistema@config_sistema+20)
  2434   0017A8  6E01               	movwf	strcpy@dest^0,c
  2435   0017AA  0E2B               	movlw	low STR_7
  2436   0017AC  6E02               	movwf	strcpy@src^0,c
  2437   0017AE  ECC6  F00F         	call	_strcpy	;wreg free
  2438   0017B2                     
  2439                           ;main.c: 159:     char buuf[sizeof(system_config_t) + 10] = {"SYSCNF:"};
  2440   0017B2  EE23  F078         	lfsr	2,configuro_sistema@F3380
  2441   0017B6  EE10  F015         	lfsr	1,configuro_sistema@buuf
  2442   0017BA  0E45               	movlw	69
  2443   0017BC                     u1061:
  2444   0017BC  CFDB FFE3          	movff	plusw2,plusw1
  2445   0017C0  06E8               	decf	wreg,f,c
  2446   0017C2  E2FC               	bc	u1061
  2447   0017C4                     
  2448                           ;main.c: 160:     uint8_t size = (uint8_t)strlen(buuf);
  2449   0017C4  0E15               	movlw	low configuro_sistema@buuf
  2450   0017C6  6E01               	movwf	strlen@s^0,c
  2451   0017C8  6A02               	clrf	(strlen@s+1)^0,c
  2452   0017CA  ECAB  F00E         	call	_strlen	;wreg free
  2453   0017CE  5001               	movf	?_strlen^0,w,c
  2454   0017D0  0100               	movlb	0	; () banked
  2455   0017D2  6F60               	movwf	configuro_sistema@size& (0+255),b
  2456   0017D4                     
  2457                           ; BSR set to: 0
  2458                           ;main.c: 161:     memcpy(buuf + size, &config_sistema, sizeof(system_config_t));
  2459   0017D4  5160               	movf	configuro_sistema@size& (0+255),w,b
  2460   0017D6  0F15               	addlw	low configuro_sistema@buuf
  2461   0017D8  6E14               	movwf	??_configuro_sistema^0,c
  2462   0017DA  C014  F005         	movff	??_configuro_sistema,memcpy@d1
  2463   0017DE  6A06               	clrf	(memcpy@d1+1)^0,c
  2464   0017E0  0E61               	movlw	low configuro_sistema@config_sistema
  2465   0017E2  6E07               	movwf	memcpy@s1^0,c
  2466   0017E4  6A08               	clrf	(memcpy@s1+1)^0,c
  2467   0017E6  0E00               	movlw	0
  2468   0017E8  6E0A               	movwf	(memcpy@n+1)^0,c
  2469   0017EA  0E3C               	movlw	60
  2470   0017EC  6E09               	movwf	memcpy@n^0,c
  2471   0017EE  EC46  F00E         	call	_memcpy	;wreg free
  2472   0017F2                     
  2473                           ;main.c: 162:     size += sizeof(system_config_t);
  2474   0017F2  0E3C               	movlw	60
  2475   0017F4  0100               	movlb	0	; () banked
  2476   0017F6  2760               	addwf	configuro_sistema@size& (0+255),f,b
  2477   0017F8                     
  2478                           ; BSR set to: 0
  2479                           ;main.c: 164:     memcpy(data_out_s.buffer, buuf, size);
  2480   0017F8  0E06               	movlw	low (configuro_sistema@data_out_s+6)
  2481   0017FA  6E05               	movwf	memcpy@d1^0,c
  2482   0017FC  0E01               	movlw	high (configuro_sistema@data_out_s+6)
  2483   0017FE  6E06               	movwf	(memcpy@d1+1)^0,c
  2484   001800  0E15               	movlw	low configuro_sistema@buuf
  2485   001802  6E07               	movwf	memcpy@s1^0,c
  2486   001804  6A08               	clrf	(memcpy@s1+1)^0,c
  2487   001806  C060  F009         	movff	configuro_sistema@size,memcpy@n
  2488   00180A  6A0A               	clrf	(memcpy@n+1)^0,c
  2489   00180C  EC46  F00E         	call	_memcpy	;wreg free
  2490   001810                     
  2491                           ;main.c: 165:     data_out_s.buffer_size = size;
  2492   001810  C060  F186         	movff	configuro_sistema@size,configuro_sistema@data_out_s+134
  2493   001814                     
  2494                           ;main.c: 167:     if(MRF24TransmitirDato(&data_out_s) != TRANSMISSION_COMPLETED)
  2495   001814  0E00               	movlw	low configuro_sistema@data_out_s
  2496   001816  6E0B               	movwf	MRF24TransmitirDato@p_info_out_s^0,c
  2497   001818  0E01               	movlw	high configuro_sistema@data_out_s
  2498   00181A  6E0C               	movwf	(MRF24TransmitirDato@p_info_out_s+1)^0,c
  2499   00181C  EC22  F008         	call	_MRF24TransmitirDato	;wreg free
  2500   001820  0A02               	xorlw	2
  2501   001822  B4D8               	btfsc	status,2,c
  2502   001824  EF16  F00C         	goto	u1071
  2503   001828  EF18  F00C         	goto	u1070
  2504   00182C                     u1071:
  2505   00182C  EF28  F00C         	goto	l349
  2506   001830                     u1070:
  2507   001830                     
  2508                           ;main.c: 168:         LATEbits.LATE1 = !LATEbits.LATE1;
  2509   001830  A28D               	btfss	141,1,c	;volatile
  2510   001832  EF1D  F00C         	goto	u1081
  2511   001836  EF21  F00C         	goto	u1080
  2512   00183A                     u1081:
  2513   00183A  6A14               	clrf	??_configuro_sistema^0,c
  2514   00183C  2A14               	incf	??_configuro_sistema^0,f,c
  2515   00183E  EF22  F00C         	goto	u1098
  2516   001842                     u1080:
  2517   001842  6A14               	clrf	??_configuro_sistema^0,c
  2518   001844                     u1098:
  2519   001844  4614               	rlncf	??_configuro_sistema^0,f,c
  2520   001846  508D               	movf	141,w,c	;volatile
  2521   001848  1814               	xorwf	??_configuro_sistema^0,w,c
  2522   00184A  0BFD               	andlw	-3
  2523   00184C  1814               	xorwf	??_configuro_sistema^0,w,c
  2524   00184E  6E8D               	movwf	141,c	;volatile
  2525   001850                     l349:
  2526   001850  0012               	return		;funcret
  2527   001852                     __end_of_configuro_sistema:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _strcpy *****************
  2531 ;; Defined at:
  2532 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  dest            1    0[COMRAM] PTR unsigned char 
  2535 ;;		 -> configuro_sistema@config_sistema(60), 
  2536 ;;  src             1    1[COMRAM] PTR const unsigned char 
  2537 ;;		 -> STR_7(8), STR_6(3), STR_5(10), 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  d               1    3[COMRAM] PTR unsigned char 
  2540 ;;		 -> configuro_sistema@config_sistema(60), 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    0[COMRAM] PTR unsigned char 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;Total ram usage:        4 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 1
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_configuro_sistema
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text3
  2565   001F8C                     __ptext3:
  2566                           	callstack 0
  2567   001F8C                     _strcpy:
  2568                           	callstack 27
  2569   001F8C  C001  F004         	movff	strcpy@dest,strcpy@d
  2570   001F90                     l2185:
  2571   001F90  2A02               	incf	strcpy@src^0,f,c
  2572   001F92  0402               	decf	strcpy@src^0,w,c
  2573   001F94  6E03               	movwf	??_strcpy^0,c
  2574   001F96  C003  FFF6         	movff	??_strcpy,tblptrl
  2575   001F9A                     	if	1	;There is more than 1 active tblptr byte
  2576   001F9A  0E10               	movlw	high __smallconst
  2577   001F9C  6EF7               	movwf	tblptrh,c
  2578   001F9E                     	endif
  2579   001F9E                     	if	0	;tblptru may be non-zero
  2580   001F9E                     	endif
  2581   001F9E                     	if	0	;tblptru may be non-zero
  2582   001F9E                     	endif
  2583   001F9E  2A04               	incf	strcpy@d^0,f,c
  2584   001FA0  0404               	decf	strcpy@d^0,w,c
  2585   001FA2  6ED9               	movwf	fsr2l,c
  2586   001FA4  6ADA               	clrf	fsr2h,c
  2587   001FA6  0008               	tblrd		*
  2588   001FA8  CFF5 FFDF          	movff	tablat,indf2
  2589   001FAC  50DF               	movf	indf2,w,c
  2590   001FAE  A4D8               	btfss	status,2,c
  2591   001FB0  EFDC  F00F         	goto	u911
  2592   001FB4  EFDE  F00F         	goto	u910
  2593   001FB8                     u911:
  2594   001FB8  EFC8  F00F         	goto	l2185
  2595   001FBC                     u910:
  2596   001FBC  0012               	return		;funcret
  2597   001FBE                     __end_of_strcpy:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _configuro_mrf *****************
  2601 ;; Defined at:
  2602 ;;		line 116 in file "main.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  data_out_s    135   76[BANK1 ] struct .
  2607 ;;  buuf           43    0[BANK1 ] unsigned char [43]
  2608 ;;  data_config_   32   44[BANK1 ] struct .
  2609 ;;  size            1   43[BANK1 ] unsigned char 
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Locals:         0       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Totals:         1       0     211       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;Total ram usage:      212 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 6
  2626 ;; This function calls:
  2627 ;;		_MRF24TransmitirDato
  2628 ;;		_memcpy
  2629 ;;		_strlen
  2630 ;; This function is called by:
  2631 ;;		_envio
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text4
  2636   001484                     __ptext4:
  2637                           	callstack 0
  2638   001484                     _configuro_mrf:
  2639                           	callstack 23
  2640   001484                     
  2641                           ;main.c: 118:     mrf24_data_out_t data_out_s = {0};
  2642   001484  EE26  F000         	lfsr	2,configuro_mrf@F3368
  2643   001488  EE11  F04C         	lfsr	1,configuro_mrf@data_out_s
  2644   00148C  0E86               	movlw	134
  2645   00148E                     u981:
  2646   00148E  CFDE FFE6          	movff	postinc2,postinc1
  2647   001492  06E8               	decf	wreg,f,c
  2648   001494  E2FC               	bc	u981
  2649   001496  0E87               	movlw	135
  2650   001498  5ED9               	subwf	fsr2l,f,c
  2651   00149A  5EE1               	subwf	fsr1l,f,c
  2652                           
  2653                           ;main.c: 119:     mrf24_data_config_t data_config_s = {0};
  2654   00149C  EE22  F0C6         	lfsr	2,configuro_mrf@F3370
  2655   0014A0  EE11  F02C         	lfsr	1,configuro_mrf@data_config_s
  2656   0014A4  0E1F               	movlw	31
  2657   0014A6                     u991:
  2658   0014A6  CFDB FFE3          	movff	plusw2,plusw1
  2659   0014AA  06E8               	decf	wreg,f,c
  2660   0014AC  E2FC               	bc	u991
  2661   0014AE                     
  2662                           ;main.c: 121:     data_out_s.dest_address = 0xFFFE;
  2663   0014AE  0EFF               	movlw	255
  2664   0014B0  0101               	movlb	1	; () banked
  2665   0014B2  6F4F               	movwf	(configuro_mrf@data_out_s+3)& (0+255),b
  2666   0014B4  0EFE               	movlw	254
  2667   0014B6  6F4E               	movwf	(configuro_mrf@data_out_s+2)& (0+255),b
  2668   0014B8                     
  2669                           ; BSR set to: 1
  2670                           ;main.c: 122:  data_out_s.dest_panid = 0x9999;
  2671   0014B8  0E99               	movlw	153
  2672   0014BA  6F4D               	movwf	(configuro_mrf@data_out_s+1)& (0+255),b
  2673   0014BC  0E99               	movlw	153
  2674   0014BE  6F4C               	movwf	configuro_mrf@data_out_s& (0+255),b
  2675   0014C0                     
  2676                           ; BSR set to: 1
  2677                           ;main.c: 123:  data_out_s.origin_address = 0x4567;
  2678   0014C0  0E45               	movlw	69
  2679   0014C2  6F51               	movwf	(configuro_mrf@data_out_s+5)& (0+255),b
  2680   0014C4  0E67               	movlw	103
  2681   0014C6  6F50               	movwf	(configuro_mrf@data_out_s+4)& (0+255),b
  2682   0014C8                     
  2683                           ; BSR set to: 1
  2684                           ;main.c: 125:     data_config_s.channel = CH_11;
  2685   0014C8  0E03               	movlw	3
  2686   0014CA  6F2C               	movwf	configuro_mrf@data_config_s& (0+255),b
  2687   0014CC                     
  2688                           ; BSR set to: 1
  2689                           ;main.c: 126:     data_config_s.panid = 0x1234;
  2690   0014CC  0E12               	movlw	18
  2691   0014CE  6F2F               	movwf	(configuro_mrf@data_config_s+3)& (0+255),b
  2692   0014D0  0E34               	movlw	52
  2693   0014D2  6F2E               	movwf	(configuro_mrf@data_config_s+2)& (0+255),b
  2694   0014D4                     
  2695                           ; BSR set to: 1
  2696                           ;main.c: 127:     data_config_s.address = (0x1111);
  2697   0014D4  0E11               	movlw	17
  2698   0014D6  6F31               	movwf	(configuro_mrf@data_config_s+5)& (0+255),b
  2699   0014D8  0E11               	movlw	17
  2700   0014DA  6F30               	movwf	(configuro_mrf@data_config_s+4)& (0+255),b
  2701   0014DC                     
  2702                           ; BSR set to: 1
  2703                           ;main.c: 128:     data_config_s.intervalo = 0x58f7;
  2704   0014DC  0E58               	movlw	88
  2705   0014DE  6F33               	movwf	(configuro_mrf@data_config_s+7)& (0+255),b
  2706   0014E0  0EF7               	movlw	247
  2707   0014E2  6F32               	movwf	(configuro_mrf@data_config_s+6)& (0+255),b
  2708   0014E4                     
  2709                           ; BSR set to: 1
  2710                           ;main.c: 129:     data_config_s.sequence_number = 99;
  2711   0014E4  0E63               	movlw	99
  2712   0014E6  6F2D               	movwf	(configuro_mrf@data_config_s+1)& (0+255),b
  2713   0014E8                     
  2714                           ; BSR set to: 1
  2715                           ;main.c: 131:     memcpy(data_config_s.mac, "00147", strlen("00147"));
  2716   0014E8  0E34               	movlw	low (configuro_mrf@data_config_s+8)
  2717   0014EA  6E05               	movwf	memcpy@d1^0,c
  2718   0014EC  0E01               	movlw	high (configuro_mrf@data_config_s+8)
  2719   0014EE  6E06               	movwf	(memcpy@d1+1)^0,c
  2720   0014F0  0E3A               	movlw	low STR_1
  2721   0014F2  6E07               	movwf	memcpy@s1^0,c
  2722   0014F4  5007               	movf	memcpy@s1^0,w,c
  2723   0014F6  A4D8               	btfss	status,2,c
  2724   0014F8  0E10               	movlw	high __smallconst
  2725   0014FA  6E08               	movwf	(memcpy@s1+1)^0,c
  2726   0014FC  0E3A               	movlw	low STR_1
  2727   0014FE  6E01               	movwf	strlen@s^0,c
  2728   001500  5001               	movf	strlen@s^0,w,c
  2729   001502  A4D8               	btfss	status,2,c
  2730   001504  0E10               	movlw	high __smallconst
  2731   001506  6E02               	movwf	(strlen@s+1)^0,c
  2732   001508  ECAB  F00E         	call	_strlen	;wreg free
  2733   00150C  C001  F009         	movff	?_strlen,memcpy@n
  2734   001510  C002  F00A         	movff	?_strlen+1,memcpy@n+1
  2735   001514  EC46  F00E         	call	_memcpy	;wreg free
  2736   001518                     
  2737                           ;main.c: 132:     memcpy(data_config_s.security_key, "582m  ", strlen("582m  "));
  2738   001518  0E3C               	movlw	low (configuro_mrf@data_config_s+16)
  2739   00151A  6E05               	movwf	memcpy@d1^0,c
  2740   00151C  0E01               	movlw	high (configuro_mrf@data_config_s+16)
  2741   00151E  6E06               	movwf	(memcpy@d1+1)^0,c
  2742   001520  0E33               	movlw	low STR_3
  2743   001522  6E07               	movwf	memcpy@s1^0,c
  2744   001524  5007               	movf	memcpy@s1^0,w,c
  2745   001526  A4D8               	btfss	status,2,c
  2746   001528  0E10               	movlw	high __smallconst
  2747   00152A  6E08               	movwf	(memcpy@s1+1)^0,c
  2748   00152C  0E33               	movlw	low STR_3
  2749   00152E  6E01               	movwf	strlen@s^0,c
  2750   001530  5001               	movf	strlen@s^0,w,c
  2751   001532  A4D8               	btfss	status,2,c
  2752   001534  0E10               	movlw	high __smallconst
  2753   001536  6E02               	movwf	(strlen@s+1)^0,c
  2754   001538  ECAB  F00E         	call	_strlen	;wreg free
  2755   00153C  C001  F009         	movff	?_strlen,memcpy@n
  2756   001540  C002  F00A         	movff	?_strlen+1,memcpy@n+1
  2757   001544  EC46  F00E         	call	_memcpy	;wreg free
  2758                           
  2759                           ;main.c: 134:     char buuf[sizeof(data_config_s) + 10] = {"MRFCNF:"};
  2760   001548  EE22  F09B         	lfsr	2,configuro_mrf@F3372
  2761   00154C  EE11  F000         	lfsr	1,configuro_mrf@buuf
  2762   001550  0E2A               	movlw	42
  2763   001552                     u1001:
  2764   001552  CFDB FFE3          	movff	plusw2,plusw1
  2765   001556  06E8               	decf	wreg,f,c
  2766   001558  E2FC               	bc	u1001
  2767   00155A                     
  2768                           ;main.c: 135:     uint8_t size = (uint8_t)strlen(buuf);
  2769   00155A  0E00               	movlw	low configuro_mrf@buuf
  2770   00155C  6E01               	movwf	strlen@s^0,c
  2771   00155E  0E01               	movlw	high configuro_mrf@buuf
  2772   001560  6E02               	movwf	(strlen@s+1)^0,c
  2773   001562  ECAB  F00E         	call	_strlen	;wreg free
  2774   001566  5001               	movf	?_strlen^0,w,c
  2775   001568  0101               	movlb	1	; () banked
  2776   00156A  6F2B               	movwf	configuro_mrf@size& (0+255),b
  2777   00156C                     
  2778                           ; BSR set to: 1
  2779                           ;main.c: 136:     memcpy(buuf + size, &data_config_s, sizeof(data_config_s));
  2780   00156C  0E00               	movlw	low configuro_mrf@buuf
  2781   00156E  252B               	addwf	configuro_mrf@size& (0+255),w,b
  2782   001570  6E05               	movwf	memcpy@d1^0,c
  2783   001572  6A06               	clrf	(memcpy@d1+1)^0,c
  2784   001574  0E01               	movlw	high configuro_mrf@buuf
  2785   001576  2206               	addwfc	(memcpy@d1+1)^0,f,c
  2786   001578  0E2C               	movlw	low configuro_mrf@data_config_s
  2787   00157A  6E07               	movwf	memcpy@s1^0,c
  2788   00157C  0E01               	movlw	high configuro_mrf@data_config_s
  2789   00157E  6E08               	movwf	(memcpy@s1+1)^0,c
  2790   001580  0E00               	movlw	0
  2791   001582  6E0A               	movwf	(memcpy@n+1)^0,c
  2792   001584  0E20               	movlw	32
  2793   001586  6E09               	movwf	memcpy@n^0,c
  2794   001588  EC46  F00E         	call	_memcpy	;wreg free
  2795   00158C                     
  2796                           ;main.c: 137:     size += sizeof(data_config_s);
  2797   00158C  0E20               	movlw	32
  2798   00158E  0101               	movlb	1	; () banked
  2799   001590  272B               	addwf	configuro_mrf@size& (0+255),f,b
  2800   001592                     
  2801                           ; BSR set to: 1
  2802                           ;main.c: 139:     memcpy(data_out_s.buffer, buuf, size);
  2803   001592  0E52               	movlw	low (configuro_mrf@data_out_s+6)
  2804   001594  6E05               	movwf	memcpy@d1^0,c
  2805   001596  0E01               	movlw	high (configuro_mrf@data_out_s+6)
  2806   001598  6E06               	movwf	(memcpy@d1+1)^0,c
  2807   00159A  0E00               	movlw	low configuro_mrf@buuf
  2808   00159C  6E07               	movwf	memcpy@s1^0,c
  2809   00159E  0E01               	movlw	high configuro_mrf@buuf
  2810   0015A0  6E08               	movwf	(memcpy@s1+1)^0,c
  2811   0015A2  C12B  F009         	movff	configuro_mrf@size,memcpy@n
  2812   0015A6  6A0A               	clrf	(memcpy@n+1)^0,c
  2813   0015A8  EC46  F00E         	call	_memcpy	;wreg free
  2814   0015AC                     
  2815                           ;main.c: 140:     data_out_s.buffer_size = size;
  2816   0015AC  C12B  F1D2         	movff	configuro_mrf@size,configuro_mrf@data_out_s+134
  2817   0015B0                     
  2818                           ;main.c: 142:     if(MRF24TransmitirDato(&data_out_s) != TRANSMISSION_COMPLETED)
  2819   0015B0  0E4C               	movlw	low configuro_mrf@data_out_s
  2820   0015B2  6E0B               	movwf	MRF24TransmitirDato@p_info_out_s^0,c
  2821   0015B4  0E01               	movlw	high configuro_mrf@data_out_s
  2822   0015B6  6E0C               	movwf	(MRF24TransmitirDato@p_info_out_s+1)^0,c
  2823   0015B8  EC22  F008         	call	_MRF24TransmitirDato	;wreg free
  2824   0015BC  0A02               	xorlw	2
  2825   0015BE  B4D8               	btfsc	status,2,c
  2826   0015C0  EFE4  F00A         	goto	u1011
  2827   0015C4  EFE6  F00A         	goto	u1010
  2828   0015C8                     u1011:
  2829   0015C8  EFF7  F00A         	goto	l339
  2830   0015CC                     u1010:
  2831   0015CC                     
  2832                           ;main.c: 143:         LATEbits.LATE2 = !LATEbits.LATE2;
  2833   0015CC  A48D               	btfss	141,2,c	;volatile
  2834   0015CE  EFEB  F00A         	goto	u1021
  2835   0015D2  EFEF  F00A         	goto	u1020
  2836   0015D6                     u1021:
  2837   0015D6  6A14               	clrf	??_configuro_mrf^0,c
  2838   0015D8  2A14               	incf	??_configuro_mrf^0,f,c
  2839   0015DA  EFF0  F00A         	goto	u1038
  2840   0015DE                     u1020:
  2841   0015DE  6A14               	clrf	??_configuro_mrf^0,c
  2842   0015E0                     u1038:
  2843   0015E0  4614               	rlncf	??_configuro_mrf^0,f,c
  2844   0015E2  4614               	rlncf	??_configuro_mrf^0,f,c
  2845   0015E4  508D               	movf	141,w,c	;volatile
  2846   0015E6  1814               	xorwf	??_configuro_mrf^0,w,c
  2847   0015E8  0BFB               	andlw	-5
  2848   0015EA  1814               	xorwf	??_configuro_mrf^0,w,c
  2849   0015EC  6E8D               	movwf	141,c	;volatile
  2850   0015EE                     l339:
  2851   0015EE  0012               	return		;funcret
  2852   0015F0                     __end_of_configuro_mrf:
  2853                           	callstack 0
  2854                           
  2855 ;; *************** function _cierro_configuracion *****************
  2856 ;; Defined at:
  2857 ;;		line 171 in file "main.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;		None
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  data_out_s    135    1[BANK0 ] struct .
  2862 ;;  config_siste   60    0        struct .
  2863 ;;  size            1    0[BANK0 ] unsigned char 
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Locals:         0     136       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Totals:         0     136       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;Total ram usage:      136 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 6
  2880 ;; This function calls:
  2881 ;;		_MRF24TransmitirDato
  2882 ;;		_memcpy
  2883 ;;		_strlen
  2884 ;; This function is called by:
  2885 ;;		_envio
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text5
  2890   001BAA                     __ptext5:
  2891                           	callstack 0
  2892   001BAA                     _cierro_configuracion:
  2893                           	callstack 23
  2894   001BAA                     
  2895                           ;main.c: 173:     mrf24_data_out_t data_out_s = {0};
  2896   001BAA  EE28  F000         	lfsr	2,cierro_configuracion@F3384
  2897   001BAE  EE10  F061         	lfsr	1,cierro_configuracion@data_out_s
  2898   001BB2  0E86               	movlw	134
  2899   001BB4                     u1101:
  2900   001BB4  CFDE FFE6          	movff	postinc2,postinc1
  2901   001BB8  06E8               	decf	wreg,f,c
  2902   001BBA  E2FC               	bc	u1101
  2903   001BBC  0E87               	movlw	135
  2904   001BBE  5ED9               	subwf	fsr2l,f,c
  2905   001BC0  5EE1               	subwf	fsr1l,f,c
  2906   001BC2                     
  2907                           ;main.c: 176:     data_out_s.dest_address = 0xFFFE;
  2908   001BC2  0EFF               	movlw	255
  2909   001BC4  0100               	movlb	0	; () banked
  2910   001BC6  6F64               	movwf	(cierro_configuracion@data_out_s+3)& (0+255),b
  2911   001BC8  0EFE               	movlw	254
  2912   001BCA  6F63               	movwf	(cierro_configuracion@data_out_s+2)& (0+255),b
  2913   001BCC                     
  2914                           ; BSR set to: 0
  2915                           ;main.c: 177:  data_out_s.dest_panid = 0x9999;
  2916   001BCC  0E99               	movlw	153
  2917   001BCE  6F62               	movwf	(cierro_configuracion@data_out_s+1)& (0+255),b
  2918   001BD0  0E99               	movlw	153
  2919   001BD2  6F61               	movwf	cierro_configuracion@data_out_s& (0+255),b
  2920   001BD4                     
  2921                           ; BSR set to: 0
  2922                           ;main.c: 178:  data_out_s.origin_address = 0x4567;
  2923   001BD4  0E45               	movlw	69
  2924   001BD6  6F66               	movwf	(cierro_configuracion@data_out_s+5)& (0+255),b
  2925   001BD8  0E67               	movlw	103
  2926   001BDA  6F65               	movwf	(cierro_configuracion@data_out_s+4)& (0+255),b
  2927   001BDC                     
  2928                           ; BSR set to: 0
  2929                           ;main.c: 180:     uint8_t size = strlen("ENDCNF:");
  2930   001BDC  0E23               	movlw	low STR_8
  2931   001BDE  6E01               	movwf	strlen@s^0,c
  2932   001BE0  5001               	movf	strlen@s^0,w,c
  2933   001BE2  A4D8               	btfss	status,2,c
  2934   001BE4  0E10               	movlw	high __smallconst
  2935   001BE6  6E02               	movwf	(strlen@s+1)^0,c
  2936   001BE8  ECAB  F00E         	call	_strlen	;wreg free
  2937   001BEC  5001               	movf	?_strlen^0,w,c
  2938   001BEE  0100               	movlb	0	; () banked
  2939   001BF0  6F60               	movwf	cierro_configuracion@size& (0+255),b
  2940   001BF2                     
  2941                           ; BSR set to: 0
  2942                           ;main.c: 181:     memcpy(data_out_s.buffer, "ENDCNF:", size);
  2943   001BF2  0E67               	movlw	low (cierro_configuracion@data_out_s+6)
  2944   001BF4  6E05               	movwf	memcpy@d1^0,c
  2945   001BF6  6A06               	clrf	(memcpy@d1+1)^0,c
  2946   001BF8  0E23               	movlw	low STR_8
  2947   001BFA  6E07               	movwf	memcpy@s1^0,c
  2948   001BFC  5007               	movf	memcpy@s1^0,w,c
  2949   001BFE  A4D8               	btfss	status,2,c
  2950   001C00  0E10               	movlw	high __smallconst
  2951   001C02  6E08               	movwf	(memcpy@s1+1)^0,c
  2952   001C04  C060  F009         	movff	cierro_configuracion@size,memcpy@n
  2953   001C08  6A0A               	clrf	(memcpy@n+1)^0,c
  2954   001C0A  EC46  F00E         	call	_memcpy	;wreg free
  2955   001C0E                     
  2956                           ;main.c: 182:     data_out_s.buffer_size = size;
  2957   001C0E  C060  F0E7         	movff	cierro_configuracion@size,cierro_configuracion@data_out_s+134
  2958   001C12                     
  2959                           ;main.c: 184:     MRF24TransmitirDato(&data_out_s);
  2960   001C12  0E61               	movlw	low cierro_configuracion@data_out_s
  2961   001C14  6E0B               	movwf	MRF24TransmitirDato@p_info_out_s^0,c
  2962   001C16  6A0C               	clrf	(MRF24TransmitirDato@p_info_out_s+1)^0,c
  2963   001C18  EC22  F008         	call	_MRF24TransmitirDato	;wreg free
  2964   001C1C  0012               	return		;funcret
  2965   001C1E                     __end_of_cierro_configuracion:
  2966                           	callstack 0
  2967                           
  2968 ;; *************** function _strlen *****************
  2969 ;; Defined at:
  2970 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2971 ;; Parameters:    Size  Location     Type
  2972 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2973 ;;		 -> STR_8(8), configuro_sistema@buuf(70), configuro_mrf@buuf(43), STR_4(7), 
  2974 ;;		 -> STR_2(6), 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2977 ;;		 -> STR_8(8), configuro_sistema@buuf(70), configuro_mrf@buuf(43), STR_4(7), 
  2978 ;;		 -> STR_2(6), 
  2979 ;; Return value:  Size  Location     Type
  2980 ;;                  2    0[COMRAM] unsigned int 
  2981 ;; Registers used:
  2982 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  2983 ;; Tracked objects:
  2984 ;;		On entry : 0/0
  2985 ;;		On exit  : 0/0
  2986 ;;		Unchanged: 0/0
  2987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;Total ram usage:        4 bytes
  2993 ;; Hardware stack levels used: 1
  2994 ;; Hardware stack levels required when called: 1
  2995 ;; This function calls:
  2996 ;;		Nothing
  2997 ;; This function is called by:
  2998 ;;		_configuro_mrf
  2999 ;;		_configuro_sistema
  3000 ;;		_cierro_configuracion
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text6
  3005   001D56                     __ptext6:
  3006                           	callstack 0
  3007   001D56                     _strlen:
  3008                           	callstack 27
  3009   001D56  C001  F003         	movff	strlen@s,strlen@a
  3010   001D5A  C002  F004         	movff	strlen@s+1,strlen@a+1
  3011   001D5E  EFB3  F00E         	goto	l2177
  3012   001D62                     l2175:
  3013   001D62  4A01               	infsnz	strlen@s^0,f,c
  3014   001D64  2A02               	incf	(strlen@s+1)^0,f,c
  3015   001D66                     l2177:
  3016   001D66  C001  FFF6         	movff	strlen@s,tblptrl
  3017   001D6A  C002  FFF7         	movff	strlen@s+1,tblptrh
  3018   001D6E  0E00               	movlw	low (__smallconst shr (0+16))
  3019   001D70  6EF8               	movwf	tblptru,c
  3020   001D72  0E0F               	movlw	(high __ramtop+-1)
  3021   001D74  64F7               	cpfsgt	tblptrh,c
  3022   001D76  D003               	bra	u897
  3023   001D78  0008               	tblrd		*
  3024   001D7A  50F5               	movf	tablat,w,c
  3025   001D7C  D005               	bra	u890
  3026   001D7E                     u897:
  3027   001D7E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3028   001D82  CFF7 FFE2          	movff	tblptrh,fsr1h
  3029   001D86  50E7               	movf	indf1,w,c
  3030   001D88                     u890:
  3031   001D88  0900               	iorlw	0
  3032   001D8A  A4D8               	btfss	status,2,c
  3033   001D8C  EFCA  F00E         	goto	u901
  3034   001D90  EFCC  F00E         	goto	u900
  3035   001D94                     u901:
  3036   001D94  EFB1  F00E         	goto	l2175
  3037   001D98                     u900:
  3038   001D98  5003               	movf	strlen@a^0,w,c
  3039   001D9A  5C01               	subwf	strlen@s^0,w,c
  3040   001D9C  6E01               	movwf	?_strlen^0,c
  3041   001D9E  5004               	movf	(strlen@a+1)^0,w,c
  3042   001DA0  5802               	subwfb	(strlen@s+1)^0,w,c
  3043   001DA2  6E02               	movwf	(?_strlen+1)^0,c
  3044   001DA4  0012               	return		;funcret
  3045   001DA6                     __end_of_strlen:
  3046                           	callstack 0
  3047                           
  3048 ;; *************** function _MRF24TransmitirDato *****************
  3049 ;; Defined at:
  3050 ;;		line 404 in file "drivers/scr/API_MRF24J40.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  p_info_out_s    2   10[COMRAM] PTR struct .
  3053 ;;		 -> cierro_configuracion@data_out_s(135), configuro_sistema@data_out_s(135), configuro_mrf@data_out_s(135), 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  i               1   17[COMRAM] char 
  3056 ;;  pos_mem         1   18[COMRAM] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      enum E3263
  3059 ;; Registers used:
  3060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;Total ram usage:        9 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; Hardware stack levels required when called: 5
  3073 ;; This function calls:
  3074 ;;		_SetLongAddr
  3075 ;;		_SetShortAddr
  3076 ;; This function is called by:
  3077 ;;		_configuro_mrf
  3078 ;;		_configuro_sistema
  3079 ;;		_cierro_configuracion
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text7
  3084   001044                     __ptext7:
  3085                           	callstack 0
  3086   001044                     _MRF24TransmitirDato:
  3087                           	callstack 23
  3088   001044                     
  3089                           ;drivers/scr/API_MRF24J40.c: 406:  if(INITIALIZATION_OK != estadoActual)
  3090   001044  045D               	decf	_estadoActual^0,w,c
  3091   001046  B4D8               	btfsc	status,2,c
  3092   001048  EF28  F008         	goto	u821
  3093   00104C  EF2A  F008         	goto	u820
  3094   001050                     u821:
  3095   001050  EF2D  F008         	goto	l2083
  3096   001054                     u820:
  3097   001054                     
  3098                           ;drivers/scr/API_MRF24J40.c: 407:   return OPERATION_FAIL;
  3099   001054  0E09               	movlw	9
  3100   001056  EF6B  F009         	goto	l168
  3101   00105A                     l2083:
  3102                           
  3103                           ;drivers/scr/API_MRF24J40.c: 409:  if((0X00) == p_info_out_s->dest_address)
  3104   00105A  EE20 F002          	lfsr	2,2
  3105   00105E  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3106   001060  26D9               	addwf	fsr2l,f,c
  3107   001062  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3108   001064  22DA               	addwfc	fsr2h,f,c
  3109   001066  50DE               	movf	postinc2,w,c
  3110   001068  10DE               	iorwf	postinc2,w,c
  3111   00106A  A4D8               	btfss	status,2,c
  3112   00106C  EF3A  F008         	goto	u831
  3113   001070  EF3C  F008         	goto	u830
  3114   001074                     u831:
  3115   001074  EF3F  F008         	goto	l2089
  3116   001078                     u830:
  3117   001078                     
  3118                           ;drivers/scr/API_MRF24J40.c: 410:   return DIRECTION_EMPTY;
  3119   001078  0E03               	movlw	3
  3120   00107A  EF6B  F009         	goto	l168
  3121   00107E                     l2089:
  3122                           
  3123                           ;drivers/scr/API_MRF24J40.c: 412:  if((0X00) == p_info_out_s->buffer_size)
  3124   00107E  EE20 F086          	lfsr	2,134
  3125   001082  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3126   001084  26D9               	addwf	fsr2l,f,c
  3127   001086  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3128   001088  22DA               	addwfc	fsr2h,f,c
  3129   00108A  50DF               	movf	indf2,w,c
  3130   00108C  A4D8               	btfss	status,2,c
  3131   00108E  EF4B  F008         	goto	u841
  3132   001092  EF4D  F008         	goto	u840
  3133   001096                     u841:
  3134   001096  EF50  F008         	goto	l2095
  3135   00109A                     u840:
  3136   00109A                     
  3137                           ;drivers/scr/API_MRF24J40.c: 413:   return BUFFER_EMPTY;
  3138   00109A  0E07               	movlw	7
  3139   00109C  EF6B  F009         	goto	l168
  3140   0010A0                     l2095:
  3141                           
  3142                           ;drivers/scr/API_MRF24J40.c: 415:  if(128 < p_info_out_s->buffer_size)
  3143   0010A0  EE20 F086          	lfsr	2,134
  3144   0010A4  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3145   0010A6  26D9               	addwf	fsr2l,f,c
  3146   0010A8  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3147   0010AA  22DA               	addwfc	fsr2h,f,c
  3148   0010AC  0E80               	movlw	128
  3149   0010AE  64DF               	cpfsgt	indf2,c
  3150   0010B0  EF5C  F008         	goto	u851
  3151   0010B4  EF5E  F008         	goto	u850
  3152   0010B8                     u851:
  3153   0010B8  EF61  F008         	goto	l171
  3154   0010BC                     u850:
  3155   0010BC                     
  3156                           ;drivers/scr/API_MRF24J40.c: 416:   return TO_LONG_MSG;
  3157   0010BC  0E06               	movlw	6
  3158   0010BE  EF6B  F009         	goto	l168
  3159   0010C2                     l171:
  3160                           
  3161                           ;drivers/scr/API_MRF24J40.c: 417:  uint8_t pos_mem = 0;
  3162   0010C2  6A13               	clrf	MRF24TransmitirDato@pos_mem^0,c
  3163   0010C4                     
  3164                           ;drivers/scr/API_MRF24J40.c: 418:  SetLongAddr(pos_mem++, (0X0B));
  3165   0010C4  0E00               	movlw	0
  3166   0010C6  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3167   0010C8  0E00               	movlw	0
  3168   0010CA  6E06               	movwf	SetLongAddr@reg_address^0,c
  3169   0010CC  0E0B               	movlw	11
  3170   0010CE  6E08               	movwf	SetLongAddr@valor^0,c
  3171   0010D0  EC18  F00F         	call	_SetLongAddr	;wreg free
  3172   0010D4  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3173   0010D6                     
  3174                           ;drivers/scr/API_MRF24J40.c: 419:  SetLongAddr(pos_mem++, p_info_out_s->buffer_size + (0
      +                          X0B));
  3175   0010D6  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3176   0010DA  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3177   0010DC  EE20 F086          	lfsr	2,134
  3178   0010E0  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3179   0010E2  26D9               	addwf	fsr2l,f,c
  3180   0010E4  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3181   0010E6  22DA               	addwfc	fsr2h,f,c
  3182   0010E8  50DF               	movf	indf2,w,c
  3183   0010EA  0F0B               	addlw	11
  3184   0010EC  6E08               	movwf	SetLongAddr@valor^0,c
  3185   0010EE  EC18  F00F         	call	_SetLongAddr	;wreg free
  3186   0010F2  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3187   0010F4                     
  3188                           ;drivers/scr/API_MRF24J40.c: 420:  SetLongAddr(pos_mem++, (0X01) | (0X20) | (0X40));
  3189   0010F4  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3190   0010F8  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3191   0010FA  0E61               	movlw	97
  3192   0010FC  6E08               	movwf	SetLongAddr@valor^0,c
  3193   0010FE  EC18  F00F         	call	_SetLongAddr	;wreg free
  3194   001102  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3195   001104                     
  3196                           ;drivers/scr/API_MRF24J40.c: 421:  SetLongAddr(pos_mem++, (0X80) | (0X08));
  3197   001104  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3198   001108  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3199   00110A  0E88               	movlw	136
  3200   00110C  6E08               	movwf	SetLongAddr@valor^0,c
  3201   00110E  EC18  F00F         	call	_SetLongAddr	;wreg free
  3202   001112  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3203   001114                     
  3204                           ;drivers/scr/API_MRF24J40.c: 422:  SetLongAddr(pos_mem++, data_config_s.sequence_number+
      +                          +);
  3205   001114  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3206   001118  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3207   00111A  EE21  F0D4         	lfsr	2,_data_config_s+1
  3208   00111E  50DF               	movf	indf2,w,c
  3209   001120  2ADF               	incf	indf2,f,c
  3210   001122  6E08               	movwf	SetLongAddr@valor^0,c
  3211   001124  EC18  F00F         	call	_SetLongAddr	;wreg free
  3212   001128  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3213   00112A                     
  3214                           ;drivers/scr/API_MRF24J40.c: 424:  if((0X00) == p_info_out_s->dest_panid)
  3215   00112A  C00B  FFD9         	movff	MRF24TransmitirDato@p_info_out_s,fsr2l
  3216   00112E  C00C  FFDA         	movff	MRF24TransmitirDato@p_info_out_s+1,fsr2h
  3217   001132  50DE               	movf	postinc2,w,c
  3218   001134  10DE               	iorwf	postinc2,w,c
  3219   001136  A4D8               	btfss	status,2,c
  3220   001138  EFA0  F008         	goto	u861
  3221   00113C  EFA2  F008         	goto	u860
  3222   001140                     u861:
  3223   001140  EFAA  F008         	goto	l2125
  3224   001144                     u860:
  3225   001144                     
  3226                           ;drivers/scr/API_MRF24J40.c: 425:   p_info_out_s->dest_panid = data_config_s.panid;
  3227   001144  C00B  FFD9         	movff	MRF24TransmitirDato@p_info_out_s,fsr2l
  3228   001148  C00C  FFDA         	movff	MRF24TransmitirDato@p_info_out_s+1,fsr2h
  3229   00114C  C1D5  FFDE         	movff	_data_config_s+2,postinc2
  3230   001150  C1D6  FFDD         	movff	_data_config_s+3,postdec2
  3231   001154                     l2125:
  3232                           
  3233                           ;drivers/scr/API_MRF24J40.c: 426:  SetLongAddr(pos_mem++, (uint8_t) p_info_out_s->dest_p
      +                          anid);
  3234   001154  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3235   001158  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3236   00115A  C00B  FFD9         	movff	MRF24TransmitirDato@p_info_out_s,fsr2l
  3237   00115E  C00C  FFDA         	movff	MRF24TransmitirDato@p_info_out_s+1,fsr2h
  3238   001162  50DF               	movf	indf2,w,c
  3239   001164  6E08               	movwf	SetLongAddr@valor^0,c
  3240   001166  EC18  F00F         	call	_SetLongAddr	;wreg free
  3241   00116A  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3242   00116C                     
  3243                           ;drivers/scr/API_MRF24J40.c: 427:  SetLongAddr(pos_mem++, (uint8_t) (p_info_out_s->dest_
      +                          panid >> (0X08)));
  3244   00116C  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3245   001170  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3246   001172  C00B  FFD9         	movff	MRF24TransmitirDato@p_info_out_s,fsr2l
  3247   001176  C00C  FFDA         	movff	MRF24TransmitirDato@p_info_out_s+1,fsr2h
  3248   00117A  CFDE F00D          	movff	postinc2,??_MRF24TransmitirDato
  3249   00117E  CFDD F00E          	movff	postdec2,??_MRF24TransmitirDato+1
  3250   001182  C00E  F00D         	movff	??_MRF24TransmitirDato+1,??_MRF24TransmitirDato
  3251   001186  6A0E               	clrf	(??_MRF24TransmitirDato+1)^0,c
  3252   001188  500D               	movf	??_MRF24TransmitirDato^0,w,c
  3253   00118A  6E08               	movwf	SetLongAddr@valor^0,c
  3254   00118C  EC18  F00F         	call	_SetLongAddr	;wreg free
  3255   001190  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3256   001192                     
  3257                           ;drivers/scr/API_MRF24J40.c: 428:  SetLongAddr(pos_mem++, (uint8_t) p_info_out_s->dest_a
      +                          ddress);
  3258   001192  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3259   001196  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3260   001198  EE20 F002          	lfsr	2,2
  3261   00119C  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3262   00119E  26D9               	addwf	fsr2l,f,c
  3263   0011A0  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3264   0011A2  22DA               	addwfc	fsr2h,f,c
  3265   0011A4  50DF               	movf	indf2,w,c
  3266   0011A6  6E08               	movwf	SetLongAddr@valor^0,c
  3267   0011A8  EC18  F00F         	call	_SetLongAddr	;wreg free
  3268   0011AC  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3269   0011AE                     
  3270                           ;drivers/scr/API_MRF24J40.c: 429:  SetLongAddr(pos_mem++, (uint8_t) (p_info_out_s->dest_
      +                          address >> (0X08)));
  3271   0011AE  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3272   0011B2  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3273   0011B4  EE20 F002          	lfsr	2,2
  3274   0011B8  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3275   0011BA  26D9               	addwf	fsr2l,f,c
  3276   0011BC  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3277   0011BE  22DA               	addwfc	fsr2h,f,c
  3278   0011C0  CFDE F00D          	movff	postinc2,??_MRF24TransmitirDato
  3279   0011C4  CFDD F00E          	movff	postdec2,??_MRF24TransmitirDato+1
  3280   0011C8  C00E  F00D         	movff	??_MRF24TransmitirDato+1,??_MRF24TransmitirDato
  3281   0011CC  6A0E               	clrf	(??_MRF24TransmitirDato+1)^0,c
  3282   0011CE  500D               	movf	??_MRF24TransmitirDato^0,w,c
  3283   0011D0  6E08               	movwf	SetLongAddr@valor^0,c
  3284   0011D2  EC18  F00F         	call	_SetLongAddr	;wreg free
  3285   0011D6  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3286   0011D8                     
  3287                           ;drivers/scr/API_MRF24J40.c: 431:  if((0X00) == p_info_out_s->origin_address)
  3288   0011D8  EE20 F004          	lfsr	2,4
  3289   0011DC  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3290   0011DE  26D9               	addwf	fsr2l,f,c
  3291   0011E0  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3292   0011E2  22DA               	addwfc	fsr2h,f,c
  3293   0011E4  50DE               	movf	postinc2,w,c
  3294   0011E6  10DE               	iorwf	postinc2,w,c
  3295   0011E8  A4D8               	btfss	status,2,c
  3296   0011EA  EFF9  F008         	goto	u871
  3297   0011EE  EFFB  F008         	goto	u870
  3298   0011F2                     u871:
  3299   0011F2  EF05  F009         	goto	l2145
  3300   0011F6                     u870:
  3301   0011F6                     
  3302                           ;drivers/scr/API_MRF24J40.c: 432:   p_info_out_s->origin_address = data_config_s.address
      +                          ;
  3303   0011F6  EE20 F004          	lfsr	2,4
  3304   0011FA  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3305   0011FC  26D9               	addwf	fsr2l,f,c
  3306   0011FE  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3307   001200  22DA               	addwfc	fsr2h,f,c
  3308   001202  C1D7  FFDE         	movff	_data_config_s+4,postinc2
  3309   001206  C1D8  FFDD         	movff	_data_config_s+5,postdec2
  3310   00120A                     l2145:
  3311                           
  3312                           ;drivers/scr/API_MRF24J40.c: 433:  SetLongAddr(pos_mem++, (uint8_t) p_info_out_s->origin
      +                          _address);
  3313   00120A  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3314   00120E  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3315   001210  EE20 F004          	lfsr	2,4
  3316   001214  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3317   001216  26D9               	addwf	fsr2l,f,c
  3318   001218  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3319   00121A  22DA               	addwfc	fsr2h,f,c
  3320   00121C  50DF               	movf	indf2,w,c
  3321   00121E  6E08               	movwf	SetLongAddr@valor^0,c
  3322   001220  EC18  F00F         	call	_SetLongAddr	;wreg free
  3323   001224  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3324   001226                     
  3325                           ;drivers/scr/API_MRF24J40.c: 434:  SetLongAddr(pos_mem++, (uint8_t) (p_info_out_s->origi
      +                          n_address >> (0X08)));
  3326   001226  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3327   00122A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3328   00122C  EE20 F004          	lfsr	2,4
  3329   001230  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3330   001232  26D9               	addwf	fsr2l,f,c
  3331   001234  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3332   001236  22DA               	addwfc	fsr2h,f,c
  3333   001238  CFDE F00D          	movff	postinc2,??_MRF24TransmitirDato
  3334   00123C  CFDD F00E          	movff	postdec2,??_MRF24TransmitirDato+1
  3335   001240  C00E  F00D         	movff	??_MRF24TransmitirDato+1,??_MRF24TransmitirDato
  3336   001244  6A0E               	clrf	(??_MRF24TransmitirDato+1)^0,c
  3337   001246  500D               	movf	??_MRF24TransmitirDato^0,w,c
  3338   001248  6E08               	movwf	SetLongAddr@valor^0,c
  3339   00124A  EC18  F00F         	call	_SetLongAddr	;wreg free
  3340   00124E  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3341   001250                     
  3342                           ;drivers/scr/API_MRF24J40.c: 436:  for(int8_t i = 0; i < p_info_out_s->buffer_size; i++)
      +                           {
  3343   001250  6A12               	clrf	MRF24TransmitirDato@i^0,c
  3344   001252  EF40  F009         	goto	l2161
  3345   001256                     l2155:
  3346                           
  3347                           ;drivers/scr/API_MRF24J40.c: 438:   SetLongAddr(pos_mem++, p_info_out_s->buffer[i]);
  3348   001256  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3349   00125A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3350   00125C  5012               	movf	MRF24TransmitirDato@i^0,w,c
  3351   00125E  240B               	addwf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3352   001260  6E0D               	movwf	??_MRF24TransmitirDato^0,c
  3353   001262  0E00               	movlw	0
  3354   001264  200C               	addwfc	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3355   001266  6E0E               	movwf	(??_MRF24TransmitirDato+1)^0,c
  3356   001268  0E06               	movlw	6
  3357   00126A  240D               	addwf	??_MRF24TransmitirDato^0,w,c
  3358   00126C  6ED9               	movwf	fsr2l,c
  3359   00126E  0E00               	movlw	0
  3360   001270  200E               	addwfc	(??_MRF24TransmitirDato+1)^0,w,c
  3361   001272  6EDA               	movwf	fsr2h,c
  3362   001274  50DF               	movf	indf2,w,c
  3363   001276  6E08               	movwf	SetLongAddr@valor^0,c
  3364   001278  EC18  F00F         	call	_SetLongAddr	;wreg free
  3365   00127C  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3366   00127E                     
  3367                           ;drivers/scr/API_MRF24J40.c: 439:  }
  3368   00127E  2A12               	incf	MRF24TransmitirDato@i^0,f,c
  3369   001280                     l2161:
  3370   001280  EE20 F086          	lfsr	2,134
  3371   001284  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  3372   001286  26D9               	addwf	fsr2l,f,c
  3373   001288  500C               	movf	(MRF24TransmitirDato@p_info_out_s+1)^0,w,c
  3374   00128A  22DA               	addwfc	fsr2h,f,c
  3375   00128C  50DF               	movf	indf2,w,c
  3376   00128E  6E0D               	movwf	??_MRF24TransmitirDato^0,c
  3377   001290  6A0E               	clrf	(??_MRF24TransmitirDato+1)^0,c
  3378   001292  C012  F00F         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato+2
  3379   001296  6A10               	clrf	(??_MRF24TransmitirDato+3)^0,c
  3380   001298  BE0F               	btfsc	(??_MRF24TransmitirDato+2)^0,7,c
  3381   00129A  0610               	decf	(??_MRF24TransmitirDato+3)^0,f,c
  3382   00129C  500D               	movf	??_MRF24TransmitirDato^0,w,c
  3383   00129E  5C0F               	subwf	(??_MRF24TransmitirDato+2)^0,w,c
  3384   0012A0  5010               	movf	(??_MRF24TransmitirDato+3)^0,w,c
  3385   0012A2  0A80               	xorlw	128
  3386   0012A4  6E11               	movwf	(??_MRF24TransmitirDato+4)^0,c
  3387   0012A6  500E               	movf	(??_MRF24TransmitirDato+1)^0,w,c
  3388   0012A8  0A80               	xorlw	128
  3389   0012AA  5811               	subwfb	(??_MRF24TransmitirDato+4)^0,w,c
  3390   0012AC  A0D8               	btfss	status,0,c
  3391   0012AE  EF5B  F009         	goto	u881
  3392   0012B2  EF5D  F009         	goto	u880
  3393   0012B6                     u881:
  3394   0012B6  EF2B  F009         	goto	l2155
  3395   0012BA                     u880:
  3396   0012BA                     
  3397                           ;drivers/scr/API_MRF24J40.c: 440:  SetLongAddr(pos_mem++, (0X00));
  3398   0012BA  C013  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  3399   0012BE  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3400   0012C0  0E00               	movlw	0
  3401   0012C2  6E08               	movwf	SetLongAddr@valor^0,c
  3402   0012C4  EC18  F00F         	call	_SetLongAddr	;wreg free
  3403   0012C8  2A13               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  3404   0012CA                     
  3405                           ;drivers/scr/API_MRF24J40.c: 441:  SetShortAddr((0x1B), (0X04) | (0X01));
  3406   0012CA  0E05               	movlw	5
  3407   0012CC  6E03               	movwf	SetShortAddr@valor^0,c
  3408   0012CE  0E1B               	movlw	27
  3409   0012D0  EC5F  F010         	call	_SetShortAddr
  3410   0012D4                     
  3411                           ;drivers/scr/API_MRF24J40.c: 442:  return TRANSMISSION_COMPLETED;
  3412   0012D4  0E02               	movlw	2
  3413   0012D6                     l168:
  3414   0012D6  0012               	return		;funcret
  3415   0012D8                     __end_of_MRF24TransmitirDato:
  3416                           	callstack 0
  3417                           
  3418 ;; *************** function _MRF24ReciboPaquete *****************
  3419 ;; Defined at:
  3420 ;;		line 467 in file "drivers/scr/API_MRF24J40.c"
  3421 ;; Parameters:    Size  Location     Type
  3422 ;;		None
  3423 ;; Auto vars:     Size  Location     Type
  3424 ;;  i               1   17[COMRAM] unsigned char 
  3425 ;;  add             2   15[COMRAM] unsigned short 
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      enum E3263
  3428 ;; Registers used:
  3429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3436 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3437 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3438 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3439 ;;Total ram usage:        8 bytes
  3440 ;; Hardware stack levels used: 1
  3441 ;; Hardware stack levels required when called: 5
  3442 ;; This function calls:
  3443 ;;		_GetLongAddr
  3444 ;;		_GetShortAddr
  3445 ;;		_SetLongAddr
  3446 ;;		_SetShortAddr
  3447 ;; This function is called by:
  3448 ;;		_main
  3449 ;; This function uses a non-reentrant model
  3450 ;;
  3451                           
  3452                           	psect	text8
  3453   00194E                     __ptext8:
  3454                           	callstack 0
  3455   00194E                     _MRF24ReciboPaquete:
  3456                           	callstack 25
  3457   00194E                     
  3458                           ;drivers/scr/API_MRF24J40.c: 480:  if(INITIALIZATION_OK != estadoActual)
  3459   00194E  045D               	decf	_estadoActual^0,w,c
  3460   001950  B4D8               	btfsc	status,2,c
  3461   001952  EFAD  F00C         	goto	u1131
  3462   001956  EFAF  F00C         	goto	u1130
  3463   00195A                     u1131:
  3464   00195A  EFB1  F00C         	goto	l2409
  3465   00195E                     u1130:
  3466   00195E  EF18  F00D         	goto	l185
  3467   001962                     l2409:
  3468                           
  3469                           ;drivers/scr/API_MRF24J40.c: 482:  SetLongAddr((0x39), (0X04));
  3470   001962  0E00               	movlw	0
  3471   001964  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3472   001966  0E39               	movlw	57
  3473   001968  6E06               	movwf	SetLongAddr@reg_address^0,c
  3474   00196A  0E04               	movlw	4
  3475   00196C  6E08               	movwf	SetLongAddr@valor^0,c
  3476   00196E  EC18  F00F         	call	_SetLongAddr	;wreg free
  3477                           
  3478                           ;drivers/scr/API_MRF24J40.c: 483:  SetShortAddr((0x0D), (0X04));
  3479   001972  0E04               	movlw	4
  3480   001974  6E03               	movwf	SetShortAddr@valor^0,c
  3481   001976  0E0D               	movlw	13
  3482   001978  EC5F  F010         	call	_SetShortAddr
  3483                           
  3484                           ;drivers/scr/API_MRF24J40.c: 484:  data_in_s.buffer_size = GetLongAddr((0x300));
  3485   00197C  0E03               	movlw	3
  3486   00197E  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3487   001980  0E00               	movlw	0
  3488   001982  6E06               	movwf	GetLongAddr@reg_address^0,c
  3489   001984  ECF6  F00E         	call	_GetLongAddr	;wreg free
  3490   001988  0104               	movlb	4	; () banked
  3491   00198A  6F85               	movwf	(_data_in_s+133)& (0+255),b
  3492                           
  3493                           ;drivers/scr/API_MRF24J40.c: 485:  uint16_t add = GetLongAddr((0x300) + 9);
  3494   00198C  0E03               	movlw	3
  3495   00198E  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3496   001990  0E09               	movlw	9
  3497   001992  6E06               	movwf	GetLongAddr@reg_address^0,c
  3498   001994  ECF6  F00E         	call	_GetLongAddr	;wreg free
  3499   001998  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  3500   00199A  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  3501   00199C  6E10               	movwf	MRF24ReciboPaquete@add^0,c
  3502   00199E  6A11               	clrf	(MRF24ReciboPaquete@add+1)^0,c
  3503                           
  3504                           ;drivers/scr/API_MRF24J40.c: 486:  add = (add << (0X08)) | GetLongAddr((0x300) + 8);
  3505   0019A0  0E03               	movlw	3
  3506   0019A2  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3507   0019A4  0E08               	movlw	8
  3508   0019A6  6E06               	movwf	GetLongAddr@reg_address^0,c
  3509   0019A8  ECF6  F00E         	call	_GetLongAddr	;wreg free
  3510   0019AC  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  3511   0019AE  5010               	movf	MRF24ReciboPaquete@add^0,w,c
  3512   0019B0  6E0C               	movwf	(??_MRF24ReciboPaquete+1)^0,c
  3513   0019B2  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  3514   0019B4  6E10               	movwf	MRF24ReciboPaquete@add^0,c
  3515   0019B6  C00C  F011         	movff	??_MRF24ReciboPaquete+1,MRF24ReciboPaquete@add+1
  3516   0019BA                     
  3517                           ;drivers/scr/API_MRF24J40.c: 487:  data_in_s.address = add;
  3518   0019BA  C010  F402         	movff	MRF24ReciboPaquete@add,_data_in_s+2
  3519   0019BE  C011  F403         	movff	MRF24ReciboPaquete@add+1,_data_in_s+3
  3520   0019C2                     
  3521                           ;drivers/scr/API_MRF24J40.c: 489:  for(uint8_t i = 0; i < data_in_s.buffer_size - (0x04)
      +                          ; i++) {
  3522   0019C2  6A12               	clrf	MRF24ReciboPaquete@i^0,c
  3523   0019C4  EFF4  F00C         	goto	l2419
  3524   0019C8                     l2415:
  3525                           
  3526                           ; BSR set to: 4
  3527                           ;drivers/scr/API_MRF24J40.c: 491:   data_in_s.buffer[i] = GetLongAddr((0x300) + (0X0B) +
      +                           i - 1);
  3528   0019C8  0E05               	movlw	low (_data_in_s+5)
  3529   0019CA  2412               	addwf	MRF24ReciboPaquete@i^0,w,c
  3530   0019CC  6ED9               	movwf	fsr2l,c
  3531   0019CE  6ADA               	clrf	fsr2h,c
  3532   0019D0  0E04               	movlw	high (_data_in_s+5)
  3533   0019D2  22DA               	addwfc	fsr2h,f,c
  3534   0019D4  0E0A               	movlw	10
  3535   0019D6  2412               	addwf	MRF24ReciboPaquete@i^0,w,c
  3536   0019D8  6E06               	movwf	GetLongAddr@reg_address^0,c
  3537   0019DA  6A07               	clrf	(GetLongAddr@reg_address+1)^0,c
  3538   0019DC  0E03               	movlw	3
  3539   0019DE  2207               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  3540   0019E0  ECF6  F00E         	call	_GetLongAddr	;wreg free
  3541   0019E4  6EDF               	movwf	indf2,c
  3542   0019E6                     
  3543                           ;drivers/scr/API_MRF24J40.c: 492:  }
  3544   0019E6  2A12               	incf	MRF24ReciboPaquete@i^0,f,c
  3545   0019E8                     l2419:
  3546   0019E8  0EFC               	movlw	252
  3547   0019EA  0104               	movlb	4	; () banked
  3548   0019EC  2585               	addwf	(_data_in_s+133)& (0+255),w,b
  3549   0019EE  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  3550   0019F0  6A0C               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  3551   0019F2  0EFF               	movlw	255
  3552   0019F4  220C               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  3553   0019F6  5012               	movf	MRF24ReciboPaquete@i^0,w,c
  3554   0019F8  6E0D               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  3555   0019FA  6A0E               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  3556   0019FC  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  3557   0019FE  5C0D               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  3558   001A00  500E               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  3559   001A02  0A80               	xorlw	128
  3560   001A04  6E0F               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  3561   001A06  500C               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  3562   001A08  0A80               	xorlw	128
  3563   001A0A  580F               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  3564   001A0C  A0D8               	btfss	status,0,c
  3565   001A0E  EF0B  F00D         	goto	u1141
  3566   001A12  EF0D  F00D         	goto	u1140
  3567   001A16                     u1141:
  3568   001A16  EFE4  F00C         	goto	l2415
  3569   001A1A                     u1140:
  3570   001A1A                     
  3571                           ; BSR set to: 4
  3572                           ;drivers/scr/API_MRF24J40.c: 493:  SetLongAddr((0x39), (0X00));
  3573   001A1A  0E00               	movlw	0
  3574   001A1C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3575   001A1E  0E39               	movlw	57
  3576   001A20  6E06               	movwf	SetLongAddr@reg_address^0,c
  3577   001A22  0E00               	movlw	0
  3578   001A24  6E08               	movwf	SetLongAddr@valor^0,c
  3579   001A26  EC18  F00F         	call	_SetLongAddr	;wreg free
  3580                           
  3581                           ;drivers/scr/API_MRF24J40.c: 494:  (void)GetShortAddr((0x31));
  3582   001A2A  0E31               	movlw	49
  3583   001A2C  EC39  F010         	call	_GetShortAddr
  3584   001A30                     l185:
  3585   001A30  0012               	return		;funcret
  3586   001A32                     __end_of_MRF24ReciboPaquete:
  3587                           	callstack 0
  3588                           
  3589 ;; *************** function _MRF24J40Init *****************
  3590 ;; Defined at:
  3591 ;;		line 284 in file "drivers/scr/API_MRF24J40.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;		None
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;		None
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      enum E3263
  3598 ;; Registers used:
  3599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;Total ram usage:        1 bytes
  3610 ;; Hardware stack levels used: 1
  3611 ;; Hardware stack levels required when called: 7
  3612 ;; This function calls:
  3613 ;;		_InicializoMRF24
  3614 ;;		_InicializoPines
  3615 ;;		_InicializoVariables
  3616 ;;		_SetResetPin
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text9
  3623   001EAC                     __ptext9:
  3624                           	callstack 0
  3625   001EAC                     _MRF24J40Init:
  3626                           	callstack 23
  3627   001EAC                     
  3628                           ;drivers/scr/API_MRF24J40.c: 286:  InicializoVariables();
  3629   001EAC  EC0F  F00E         	call	_InicializoVariables	;wreg free
  3630   001EB0                     
  3631                           ;drivers/scr/API_MRF24J40.c: 287:  InicializoPines();
  3632   001EB0  EC92  F010         	call	_InicializoPines	;wreg free
  3633   001EB4                     
  3634                           ;drivers/scr/API_MRF24J40.c: 288:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3635   001EB4  0E06               	movlw	6
  3636   001EB6  6E1D               	movwf	??_MRF24J40Init^0,c
  3637   001EB8  0E30               	movlw	48
  3638   001EBA                     u1467:
  3639   001EBA  2EE8               	decfsz	wreg,f,c
  3640   001EBC  D7FE               	bra	u1467
  3641   001EBE  2E1D               	decfsz	??_MRF24J40Init^0,f,c
  3642   001EC0  D7FC               	bra	u1467
  3643   001EC2  F000 F000          	nop2	
  3644   001EC6                     
  3645                           ;drivers/scr/API_MRF24J40.c: 289:  SetResetPin(1);
  3646   001EC6  0E01               	movlw	1
  3647   001EC8  ECB5  F010         	call	_SetResetPin
  3648   001ECC                     
  3649                           ;drivers/scr/API_MRF24J40.c: 290:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3650   001ECC  0E06               	movlw	6
  3651   001ECE  6E1D               	movwf	??_MRF24J40Init^0,c
  3652   001ED0  0E30               	movlw	48
  3653   001ED2                     u1477:
  3654   001ED2  2EE8               	decfsz	wreg,f,c
  3655   001ED4  D7FE               	bra	u1477
  3656   001ED6  2E1D               	decfsz	??_MRF24J40Init^0,f,c
  3657   001ED8  D7FC               	bra	u1477
  3658   001EDA  F000 F000          	nop2	
  3659   001EDE                     
  3660                           ;drivers/scr/API_MRF24J40.c: 291:  estadoActual = InicializoMRF24();
  3661   001EDE  EC6C  F009         	call	_InicializoMRF24	;wreg free
  3662   001EE2  6E5D               	movwf	_estadoActual^0,c
  3663   001EE4  0012               	return		;funcret
  3664   001EE6                     __end_of_MRF24J40Init:
  3665                           	callstack 0
  3666                           
  3667 ;; *************** function _InicializoVariables *****************
  3668 ;; Defined at:
  3669 ;;		line 90 in file "drivers/scr/API_MRF24J40.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;Total ram usage:        0 bytes
  3688 ;; Hardware stack levels used: 1
  3689 ;; Hardware stack levels required when called: 2
  3690 ;; This function calls:
  3691 ;;		_memcpy
  3692 ;; This function is called by:
  3693 ;;		_MRF24J40Init
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text10
  3698   001C1E                     __ptext10:
  3699                           	callstack 0
  3700   001C1E                     _InicializoVariables:
  3701                           	callstack 27
  3702   001C1E                     
  3703                           ;drivers/scr/API_MRF24J40.c: 92:  if((0X00) == data_config_s.channel) {
  3704   001C1E  0101               	movlb	1	; () banked
  3705   001C20  51D3               	movf	_data_config_s& (0+255),w,b
  3706   001C22  A4D8               	btfss	status,2,c
  3707   001C24  EF16  F00E         	goto	u931
  3708   001C28  EF18  F00E         	goto	u930
  3709   001C2C                     u931:
  3710   001C2C  EF45  F00E         	goto	l98
  3711   001C30                     u930:
  3712   001C30                     
  3713                           ; BSR set to: 1
  3714                           ;drivers/scr/API_MRF24J40.c: 94:   memcpy(data_config_s.security_key, default_security_k
      +                          ey, 16);
  3715   001C30  0EE3               	movlw	low (_data_config_s+16)
  3716   001C32  6E05               	movwf	memcpy@d1^0,c
  3717   001C34  0E01               	movlw	high (_data_config_s+16)
  3718   001C36  6E06               	movwf	(memcpy@d1+1)^0,c
  3719   001C38  0E01               	movlw	low _default_security_key
  3720   001C3A  6E07               	movwf	memcpy@s1^0,c
  3721   001C3C  5007               	movf	memcpy@s1^0,w,c
  3722   001C3E  A4D8               	btfss	status,2,c
  3723   001C40  0E10               	movlw	high __smallconst
  3724   001C42  6E08               	movwf	(memcpy@s1+1)^0,c
  3725   001C44  0E00               	movlw	0
  3726   001C46  6E0A               	movwf	(memcpy@n+1)^0,c
  3727   001C48  0E10               	movlw	16
  3728   001C4A  6E09               	movwf	memcpy@n^0,c
  3729   001C4C  EC46  F00E         	call	_memcpy	;wreg free
  3730                           
  3731                           ;drivers/scr/API_MRF24J40.c: 95:   memcpy(data_config_s.mac, default_mac_address, 8);
  3732   001C50  0EDB               	movlw	low (_data_config_s+8)
  3733   001C52  6E05               	movwf	memcpy@d1^0,c
  3734   001C54  0E01               	movlw	high (_data_config_s+8)
  3735   001C56  6E06               	movwf	(memcpy@d1+1)^0,c
  3736   001C58  0E11               	movlw	low _default_mac_address
  3737   001C5A  6E07               	movwf	memcpy@s1^0,c
  3738   001C5C  5007               	movf	memcpy@s1^0,w,c
  3739   001C5E  A4D8               	btfss	status,2,c
  3740   001C60  0E10               	movlw	high __smallconst
  3741   001C62  6E08               	movwf	(memcpy@s1+1)^0,c
  3742   001C64  0E00               	movlw	0
  3743   001C66  6E0A               	movwf	(memcpy@n+1)^0,c
  3744   001C68  0E08               	movlw	8
  3745   001C6A  6E09               	movwf	memcpy@n^0,c
  3746   001C6C  EC46  F00E         	call	_memcpy	;wreg free
  3747   001C70                     
  3748                           ;drivers/scr/API_MRF24J40.c: 96:   data_config_s.sequence_number = (0X01);
  3749   001C70  0E01               	movlw	1
  3750   001C72  0101               	movlb	1	; () banked
  3751   001C74  6FD4               	movwf	(_data_config_s+1)& (0+255),b
  3752   001C76                     
  3753                           ; BSR set to: 1
  3754                           ;drivers/scr/API_MRF24J40.c: 97:   data_config_s.channel = CH_11;
  3755   001C76  0E03               	movlw	3
  3756   001C78  6FD3               	movwf	_data_config_s& (0+255),b
  3757   001C7A                     
  3758                           ; BSR set to: 1
  3759                           ;drivers/scr/API_MRF24J40.c: 98:   data_config_s.panid = (0x9999);
  3760   001C7A  0E99               	movlw	153
  3761   001C7C  6FD6               	movwf	(_data_config_s+3)& (0+255),b
  3762   001C7E  0E99               	movlw	153
  3763   001C80  6FD5               	movwf	(_data_config_s+2)& (0+255),b
  3764   001C82                     
  3765                           ; BSR set to: 1
  3766                           ;drivers/scr/API_MRF24J40.c: 99:   data_config_s.address = (0x1112);
  3767   001C82  0E11               	movlw	17
  3768   001C84  6FD8               	movwf	(_data_config_s+5)& (0+255),b
  3769   001C86  0E12               	movlw	18
  3770   001C88  6FD7               	movwf	(_data_config_s+4)& (0+255),b
  3771   001C8A                     l98:
  3772                           
  3773                           ; BSR set to: 1
  3774   001C8A  0012               	return		;funcret
  3775   001C8C                     __end_of_InicializoVariables:
  3776                           	callstack 0
  3777                           
  3778 ;; *************** function _memcpy *****************
  3779 ;; Defined at:
  3780 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
  3781 ;; Parameters:    Size  Location     Type
  3782 ;;  d1              2    4[COMRAM] PTR void 
  3783 ;;		 -> cierro_configuracion@data_out_s(135), configuro_sistema@buuf(70), configuro_sistema@data_out_s(135), configuro_m
      +rf@buuf(43), 
  3784 ;;		 -> configuro_mrf@data_config_s(32), configuro_mrf@data_out_s(135), data_config_s(32), 
  3785 ;;  s1              2    6[COMRAM] PTR const void 
  3786 ;;		 -> STR_9(8), configuro_sistema@buuf(70), configuro_sistema@config_sistema(60), configuro_mrf@buuf(43), 
  3787 ;;		 -> STR_3(7), STR_1(6), configuro_mrf@data_config_s(32), default_mac_address(8), 
  3788 ;;		 -> default_security_key(16), 
  3789 ;;  n               2    8[COMRAM] unsigned int 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  s               2   12[COMRAM] PTR const unsigned char 
  3792 ;;		 -> STR_9(8), configuro_sistema@buuf(70), configuro_sistema@config_sistema(60), configuro_mrf@buuf(43), 
  3793 ;;		 -> STR_3(7), STR_1(6), configuro_mrf@data_config_s(32), default_mac_address(8), 
  3794 ;;		 -> default_security_key(16), 
  3795 ;;  d               2   10[COMRAM] PTR unsigned char 
  3796 ;;		 -> cierro_configuracion@data_out_s(135), configuro_sistema@buuf(70), configuro_sistema@data_out_s(135), configuro_m
      +rf@buuf(43), 
  3797 ;;		 -> configuro_mrf@data_config_s(32), configuro_mrf@data_out_s(135), data_config_s(32), 
  3798 ;;  tmp             1   14[COMRAM] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  2    4[COMRAM] PTR void 
  3801 ;; Registers used:
  3802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3808 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;Total ram usage:       11 bytes
  3813 ;; Hardware stack levels used: 1
  3814 ;; Hardware stack levels required when called: 1
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_InicializoVariables
  3819 ;;		_configuro_mrf
  3820 ;;		_configuro_sistema
  3821 ;;		_cierro_configuracion
  3822 ;;		_MRF24SetMAC
  3823 ;;		_MRF24SetSecurityKey
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text11
  3828   001C8C                     __ptext11:
  3829                           	callstack 0
  3830   001C8C                     _memcpy:
  3831                           	callstack 27
  3832   001C8C  C007  F00D         	movff	memcpy@s1,memcpy@s
  3833   001C90  C008  F00E         	movff	memcpy@s1+1,memcpy@s+1
  3834   001C94  C005  F00B         	movff	memcpy@d1,memcpy@d
  3835   001C98  C006  F00C         	movff	memcpy@d1+1,memcpy@d+1
  3836   001C9C  EF6C  F00E         	goto	l1995
  3837   001CA0                     l1987:
  3838   001CA0  C00D  FFF6         	movff	memcpy@s,tblptrl
  3839   001CA4  C00E  FFF7         	movff	memcpy@s+1,tblptrh
  3840   001CA8  0E00               	movlw	low (__smallconst shr (0+16))
  3841   001CAA  6EF8               	movwf	tblptru,c
  3842   001CAC  0E0F               	movlw	(high __ramtop+-1)
  3843   001CAE  64F7               	cpfsgt	tblptrh,c
  3844   001CB0  D003               	bra	u767
  3845   001CB2  0008               	tblrd		*
  3846   001CB4  50F5               	movf	tablat,w,c
  3847   001CB6  D005               	bra	u760
  3848   001CB8                     u767:
  3849   001CB8  CFF6 FFE1          	movff	tblptrl,fsr1l
  3850   001CBC  CFF7 FFE2          	movff	tblptrh,fsr1h
  3851   001CC0  50E7               	movf	indf1,w,c
  3852   001CC2                     u760:
  3853   001CC2  6E0F               	movwf	memcpy@tmp^0,c
  3854   001CC4  4A0D               	infsnz	memcpy@s^0,f,c
  3855   001CC6  2A0E               	incf	(memcpy@s+1)^0,f,c
  3856   001CC8  C00B  FFD9         	movff	memcpy@d,fsr2l
  3857   001CCC  C00C  FFDA         	movff	memcpy@d+1,fsr2h
  3858   001CD0  C00F  FFDF         	movff	memcpy@tmp,indf2
  3859   001CD4  4A0B               	infsnz	memcpy@d^0,f,c
  3860   001CD6  2A0C               	incf	(memcpy@d+1)^0,f,c
  3861   001CD8                     l1995:
  3862   001CD8  0609               	decf	memcpy@n^0,f,c
  3863   001CDA  A0D8               	btfss	status,0,c
  3864   001CDC  060A               	decf	(memcpy@n+1)^0,f,c
  3865   001CDE  2809               	incf	memcpy@n^0,w,c
  3866   001CE0  E106               	bnz	u771
  3867   001CE2  280A               	incf	(memcpy@n+1)^0,w,c
  3868   001CE4  A4D8               	btfss	status,2,c
  3869   001CE6  EF77  F00E         	goto	u771
  3870   001CEA  EF79  F00E         	goto	u770
  3871   001CEE                     u771:
  3872   001CEE  EF50  F00E         	goto	l1987
  3873   001CF2                     u770:
  3874   001CF2  0012               	return		;funcret
  3875   001CF4                     __end_of_memcpy:
  3876                           	callstack 0
  3877                           
  3878 ;; *************** function _InicializoPines *****************
  3879 ;; Defined at:
  3880 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  3881 ;; Parameters:    Size  Location     Type
  3882 ;;		None
  3883 ;; Auto vars:     Size  Location     Type
  3884 ;;		None
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;Total ram usage:        0 bytes
  3899 ;; Hardware stack levels used: 1
  3900 ;; Hardware stack levels required when called: 2
  3901 ;; This function calls:
  3902 ;;		_SetCSPin
  3903 ;;		_SetResetPin
  3904 ;;		_SetWakePin
  3905 ;; This function is called by:
  3906 ;;		_MRF24J40Init
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           
  3910                           	psect	text12
  3911   002124                     __ptext12:
  3912                           	callstack 0
  3913   002124                     _InicializoPines:
  3914                           	callstack 27
  3915   002124                     
  3916                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  3917   002124  0E01               	movlw	1
  3918   002126  ECCA  F010         	call	_SetCSPin
  3919                           
  3920                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  3921   00212A  0E01               	movlw	1
  3922   00212C  ECAE  F010         	call	_SetWakePin
  3923                           
  3924                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  3925   002130  0E00               	movlw	0
  3926   002132  ECB5  F010         	call	_SetResetPin
  3927   002136  0012               	return		;funcret
  3928   002138                     __end_of_InicializoPines:
  3929                           	callstack 0
  3930                           
  3931 ;; *************** function _SetWakePin *****************
  3932 ;; Defined at:
  3933 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  3934 ;; Parameters:    Size  Location     Type
  3935 ;;  estado          1    wreg     _Bool 
  3936 ;; Auto vars:     Size  Location     Type
  3937 ;;  estado          1    0[COMRAM] _Bool 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;Total ram usage:        1 bytes
  3952 ;; Hardware stack levels used: 1
  3953 ;; Hardware stack levels required when called: 1
  3954 ;; This function calls:
  3955 ;;		Nothing
  3956 ;; This function is called by:
  3957 ;;		_InicializoPines
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           	psect	text13
  3962   00215C                     __ptext13:
  3963                           	callstack 0
  3964   00215C                     _SetWakePin:
  3965                           	callstack 27
  3966                           
  3967                           ;incstack = 0
  3968                           ;SetWakePin@estado stored from wreg
  3969   00215C  6E01               	movwf	SetWakePin@estado^0,c
  3970   00215E                     
  3971                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  3972   00215E  B001               	btfsc	SetWakePin@estado^0,0,c
  3973   002160  D002               	bra	u745
  3974   002162  9E8B               	bcf	139,7,c	;volatile
  3975   002164  D001               	bra	u746
  3976   002166                     u745:
  3977   002166  8E8B               	bsf	139,7,c	;volatile
  3978   002168                     u746:
  3979   002168  0012               	return		;funcret
  3980   00216A                     __end_of_SetWakePin:
  3981                           	callstack 0
  3982                           
  3983 ;; *************** function _SetResetPin *****************
  3984 ;; Defined at:
  3985 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;  estado          1    wreg     _Bool 
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  estado          1    0[COMRAM] _Bool 
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4003 ;;Total ram usage:        1 bytes
  4004 ;; Hardware stack levels used: 1
  4005 ;; Hardware stack levels required when called: 1
  4006 ;; This function calls:
  4007 ;;		Nothing
  4008 ;; This function is called by:
  4009 ;;		_InicializoPines
  4010 ;;		_MRF24J40Init
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text14
  4015   00216A                     __ptext14:
  4016                           	callstack 0
  4017   00216A                     _SetResetPin:
  4018                           	callstack 28
  4019                           
  4020                           ;incstack = 0
  4021                           ;SetResetPin@estado stored from wreg
  4022   00216A  6E01               	movwf	SetResetPin@estado^0,c
  4023   00216C                     
  4024                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  4025   00216C  B001               	btfsc	SetResetPin@estado^0,0,c
  4026   00216E  D002               	bra	u755
  4027   002170  988C               	bcf	140,4,c	;volatile
  4028   002172  D001               	bra	u756
  4029   002174                     u755:
  4030   002174  888C               	bsf	140,4,c	;volatile
  4031   002176                     u756:
  4032   002176  0012               	return		;funcret
  4033   002178                     __end_of_SetResetPin:
  4034                           	callstack 0
  4035                           
  4036 ;; *************** function _InicializoMRF24 *****************
  4037 ;; Defined at:
  4038 ;;		line 109 in file "drivers/scr/API_MRF24J40.c"
  4039 ;; Parameters:    Size  Location     Type
  4040 ;;		None
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;  delay_time_o    9   19[COMRAM] struct .
  4043 ;;  lectura         1   18[COMRAM] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      enum E3263
  4046 ;; Registers used:
  4047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;Total ram usage:       12 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; Hardware stack levels required when called: 6
  4060 ;; This function calls:
  4061 ;;		_DelayInit
  4062 ;;		_DelayRead
  4063 ;;		_DelayReset
  4064 ;;		_GetLongAddr
  4065 ;;		_GetShortAddr
  4066 ;;		_SetChannel
  4067 ;;		_SetDeviceAddress
  4068 ;;		_SetDeviceMACAddress
  4069 ;;		_SetLongAddr
  4070 ;;		_SetShortAddr
  4071 ;; This function is called by:
  4072 ;;		_MRF24J40Init
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text15
  4077   0012D8                     __ptext15:
  4078                           	callstack 0
  4079   0012D8                     _InicializoMRF24:
  4080                           	callstack 23
  4081   0012D8                     
  4082                           ;drivers/scr/API_MRF24J40.c: 111:  uint8_t lectura;;drivers/scr/API_MRF24J40.c: 112:  de
      +                          layNoBloqueanteData_t delay_time_out;;drivers/scr/API_MRF24J40.c: 113:  DelayInit(&delay
      +                          _time_out, 200);
  4083   0012D8  0E14               	movlw	low InicializoMRF24@delay_time_out
  4084   0012DA  6E01               	movwf	DelayInit@delay^0,c
  4085   0012DC  6A02               	clrf	(DelayInit@delay+1)^0,c
  4086   0012DE  0EC8               	movlw	200
  4087   0012E0  6E03               	movwf	DelayInit@duration^0,c
  4088   0012E2  0E00               	movlw	0
  4089   0012E4  6E04               	movwf	(DelayInit@duration+1)^0,c
  4090   0012E6  0E00               	movlw	0
  4091   0012E8  6E05               	movwf	(DelayInit@duration+2)^0,c
  4092   0012EA  0E00               	movlw	0
  4093   0012EC  6E06               	movwf	(DelayInit@duration+3)^0,c
  4094   0012EE  EC0D  F010         	call	_DelayInit	;wreg free
  4095   0012F2                     
  4096                           ;drivers/scr/API_MRF24J40.c: 114:  SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  4097   0012F2  0E07               	movlw	7
  4098   0012F4  6E03               	movwf	SetShortAddr@valor^0,c
  4099   0012F6  0E2A               	movlw	42
  4100   0012F8  EC5F  F010         	call	_SetShortAddr
  4101   0012FC                     
  4102                           ;drivers/scr/API_MRF24J40.c: 115:  DelayReset(&delay_time_out);
  4103   0012FC  0E14               	movlw	low InicializoMRF24@delay_time_out
  4104   0012FE  6E01               	movwf	DelayReset@delay^0,c
  4105   001300  EC4C  F010         	call	_DelayReset	;wreg free
  4106   001304                     l101:
  4107                           
  4108                           ;drivers/scr/API_MRF24J40.c: 119:   lectura = GetShortAddr((0x2A));
  4109   001304  0E2A               	movlw	42
  4110   001306  EC39  F010         	call	_GetShortAddr
  4111   00130A  6E13               	movwf	InicializoMRF24@lectura^0,c
  4112   00130C                     
  4113                           ;drivers/scr/API_MRF24J40.c: 120:   if(DelayRead(&delay_time_out))
  4114   00130C  0E14               	movlw	low InicializoMRF24@delay_time_out
  4115   00130E  6E03               	movwf	DelayRead@delay^0,c
  4116   001310  6A04               	clrf	(DelayRead@delay+1)^0,c
  4117   001312  EC77  F00D         	call	_DelayRead	;wreg free
  4118   001316  0900               	iorlw	0
  4119   001318  B4D8               	btfsc	status,2,c
  4120   00131A  EF91  F009         	goto	u941
  4121   00131E  EF93  F009         	goto	u940
  4122   001322                     u941:
  4123   001322  EF96  F009         	goto	l2221
  4124   001326                     u940:
  4125   001326                     l2217:
  4126                           
  4127                           ;drivers/scr/API_MRF24J40.c: 121:    return TIME_OUT_OCURRED;
  4128   001326  0E08               	movlw	8
  4129   001328  EF41  F00A         	goto	l103
  4130   00132C                     l2221:
  4131                           
  4132                           ;drivers/scr/API_MRF24J40.c: 122:  }while((0X00) != (lectura & ((0X04) | (0X02) | (0X01)
      +                          )));
  4133   00132C  C013  F011         	movff	InicializoMRF24@lectura,??_InicializoMRF24
  4134   001330  0E07               	movlw	7
  4135   001332  1611               	andwf	??_InicializoMRF24^0,f,c
  4136   001334  A4D8               	btfss	status,2,c
  4137   001336  EF9F  F009         	goto	u951
  4138   00133A  EFA1  F009         	goto	u950
  4139   00133E                     u951:
  4140   00133E  EF82  F009         	goto	l101
  4141   001342                     u950:
  4142   001342                     
  4143                           ;drivers/scr/API_MRF24J40.c: 123:  _delay((unsigned long)((50)*(16000000/4000.0)));;
  4144   001342  0E02               	movlw	2
  4145   001344  6E12               	movwf	(??_InicializoMRF24+1)^0,c
  4146   001346  0E04               	movlw	4
  4147   001348  6E11               	movwf	??_InicializoMRF24^0,c
  4148   00134A  0EBA               	movlw	186
  4149   00134C                     u1487:
  4150   00134C  2EE8               	decfsz	wreg,f,c
  4151   00134E  D7FE               	bra	u1487
  4152   001350  2E11               	decfsz	??_InicializoMRF24^0,f,c
  4153   001352  D7FC               	bra	u1487
  4154   001354  2E12               	decfsz	(??_InicializoMRF24+1)^0,f,c
  4155   001356  D7FA               	bra	u1487
  4156   001358  F000 F000          	nop2	
  4157   00135C                     
  4158                           ;drivers/scr/API_MRF24J40.c: 124:  SetShortAddr((0x0D), (0X01));
  4159   00135C  0E01               	movlw	1
  4160   00135E  6E03               	movwf	SetShortAddr@valor^0,c
  4161   001360  0E0D               	movlw	13
  4162   001362  EC5F  F010         	call	_SetShortAddr
  4163   001366                     
  4164                           ;drivers/scr/API_MRF24J40.c: 125:  SetDeviceAddress();
  4165   001366  ECF6  F00F         	call	_SetDeviceAddress	;wreg free
  4166   00136A                     
  4167                           ;drivers/scr/API_MRF24J40.c: 126:  SetDeviceMACAddress();
  4168   00136A  ECDF  F00F         	call	_SetDeviceMACAddress	;wreg free
  4169   00136E                     
  4170                           ;drivers/scr/API_MRF24J40.c: 127:  SetLongAddr((0x201), (0X02) | (0X01));
  4171   00136E  0E02               	movlw	2
  4172   001370  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4173   001372  0E01               	movlw	1
  4174   001374  6E06               	movwf	SetLongAddr@reg_address^0,c
  4175   001376  0E03               	movlw	3
  4176   001378  6E08               	movwf	SetLongAddr@valor^0,c
  4177   00137A  EC18  F00F         	call	_SetLongAddr	;wreg free
  4178   00137E                     
  4179                           ;drivers/scr/API_MRF24J40.c: 128:  SetLongAddr((0x202), (0X80));
  4180   00137E  0E02               	movlw	2
  4181   001380  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4182   001382  0E02               	movlw	2
  4183   001384  6E06               	movwf	SetLongAddr@reg_address^0,c
  4184   001386  0E80               	movlw	128
  4185   001388  6E08               	movwf	SetLongAddr@valor^0,c
  4186   00138A  EC18  F00F         	call	_SetLongAddr	;wreg free
  4187   00138E                     
  4188                           ;drivers/scr/API_MRF24J40.c: 129:  SetLongAddr((0x203), (0X80) | (0X00));
  4189   00138E  0E02               	movlw	2
  4190   001390  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4191   001392  0E03               	movlw	3
  4192   001394  6E06               	movwf	SetLongAddr@reg_address^0,c
  4193   001396  0E80               	movlw	128
  4194   001398  6E08               	movwf	SetLongAddr@valor^0,c
  4195   00139A  EC18  F00F         	call	_SetLongAddr	;wreg free
  4196   00139E                     
  4197                           ;drivers/scr/API_MRF24J40.c: 130:  SetLongAddr((0x206), (0X80) | (0X10));
  4198   00139E  0E02               	movlw	2
  4199   0013A0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4200   0013A2  0E06               	movlw	6
  4201   0013A4  6E06               	movwf	SetLongAddr@reg_address^0,c
  4202   0013A6  0E90               	movlw	144
  4203   0013A8  6E08               	movwf	SetLongAddr@valor^0,c
  4204   0013AA  EC18  F00F         	call	_SetLongAddr	;wreg free
  4205   0013AE                     
  4206                           ;drivers/scr/API_MRF24J40.c: 131:  SetLongAddr((0x207), (0X80));
  4207   0013AE  0E02               	movlw	2
  4208   0013B0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4209   0013B2  0E07               	movlw	7
  4210   0013B4  6E06               	movwf	SetLongAddr@reg_address^0,c
  4211   0013B6  0E80               	movlw	128
  4212   0013B8  6E08               	movwf	SetLongAddr@valor^0,c
  4213   0013BA  EC18  F00F         	call	_SetLongAddr	;wreg free
  4214   0013BE                     
  4215                           ;drivers/scr/API_MRF24J40.c: 132:  SetLongAddr((0x208), (0X10));
  4216   0013BE  0E02               	movlw	2
  4217   0013C0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4218   0013C2  0E08               	movlw	8
  4219   0013C4  6E06               	movwf	SetLongAddr@reg_address^0,c
  4220   0013C6  0E10               	movlw	16
  4221   0013C8  6E08               	movwf	SetLongAddr@valor^0,c
  4222   0013CA  EC18  F00F         	call	_SetLongAddr	;wreg free
  4223   0013CE                     
  4224                           ;drivers/scr/API_MRF24J40.c: 133:  SetLongAddr((0x220), (0X20) | (0X01));
  4225   0013CE  0E02               	movlw	2
  4226   0013D0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4227   0013D2  0E20               	movlw	32
  4228   0013D4  6E06               	movwf	SetLongAddr@reg_address^0,c
  4229   0013D6  0E21               	movlw	33
  4230   0013D8  6E08               	movwf	SetLongAddr@valor^0,c
  4231   0013DA  EC18  F00F         	call	_SetLongAddr	;wreg free
  4232   0013DE                     
  4233                           ;drivers/scr/API_MRF24J40.c: 134:  SetShortAddr((0x3A), (0X80));
  4234   0013DE  0E80               	movlw	128
  4235   0013E0  6E03               	movwf	SetShortAddr@valor^0,c
  4236   0013E2  0E3A               	movlw	58
  4237   0013E4  EC5F  F010         	call	_SetShortAddr
  4238   0013E8                     
  4239                           ;drivers/scr/API_MRF24J40.c: 135:  SetShortAddr((0x3E), (0X40));
  4240   0013E8  0E40               	movlw	64
  4241   0013EA  6E03               	movwf	SetShortAddr@valor^0,c
  4242   0013EC  0E3E               	movlw	62
  4243   0013EE  EC5F  F010         	call	_SetShortAddr
  4244   0013F2                     
  4245                           ;drivers/scr/API_MRF24J40.c: 136:  SetShortAddr((0x3F), (0X04) | (0X02));
  4246   0013F2  0E06               	movlw	6
  4247   0013F4  6E03               	movwf	SetShortAddr@valor^0,c
  4248   0013F6  0E3F               	movlw	63
  4249   0013F8  EC5F  F010         	call	_SetShortAddr
  4250   0013FC                     
  4251                           ;drivers/scr/API_MRF24J40.c: 137:  SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  4252   0013FC  0E98               	movlw	152
  4253   0013FE  6E03               	movwf	SetShortAddr@valor^0,c
  4254   001400  0E18               	movlw	24
  4255   001402  EC5F  F010         	call	_SetShortAddr
  4256   001406                     
  4257                           ;drivers/scr/API_MRF24J40.c: 138:  SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0X01
      +                          ));
  4258   001406  0E95               	movlw	149
  4259   001408  6E03               	movwf	SetShortAddr@valor^0,c
  4260   00140A  0E2E               	movlw	46
  4261   00140C  EC5F  F010         	call	_SetShortAddr
  4262   001410                     
  4263                           ;drivers/scr/API_MRF24J40.c: 139:  DelayReset(&delay_time_out);
  4264   001410  0E14               	movlw	low InicializoMRF24@delay_time_out
  4265   001412  6E01               	movwf	DelayReset@delay^0,c
  4266   001414  EC4C  F010         	call	_DelayReset	;wreg free
  4267   001418                     l2257:
  4268                           
  4269                           ;drivers/scr/API_MRF24J40.c: 143:   lectura = GetLongAddr((0x20f)) & (0XA0);
  4270   001418  0E02               	movlw	2
  4271   00141A  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  4272   00141C  0E0F               	movlw	15
  4273   00141E  6E06               	movwf	GetLongAddr@reg_address^0,c
  4274   001420  ECF6  F00E         	call	_GetLongAddr	;wreg free
  4275   001424  0BA0               	andlw	160
  4276   001426  6E13               	movwf	InicializoMRF24@lectura^0,c
  4277   001428                     
  4278                           ;drivers/scr/API_MRF24J40.c: 144:   if(DelayRead(&delay_time_out))
  4279   001428  0E14               	movlw	low InicializoMRF24@delay_time_out
  4280   00142A  6E03               	movwf	DelayRead@delay^0,c
  4281   00142C  6A04               	clrf	(DelayRead@delay+1)^0,c
  4282   00142E  EC77  F00D         	call	_DelayRead	;wreg free
  4283   001432  0900               	iorlw	0
  4284   001434  B4D8               	btfsc	status,2,c
  4285   001436  EF1F  F00A         	goto	u961
  4286   00143A  EF21  F00A         	goto	u960
  4287   00143E                     u961:
  4288   00143E  EF23  F00A         	goto	l2265
  4289   001442                     u960:
  4290   001442  EF93  F009         	goto	l2217
  4291   001446                     l2265:
  4292                           
  4293                           ;drivers/scr/API_MRF24J40.c: 146:  }while((0XA0) != lectura);
  4294   001446  0EA0               	movlw	160
  4295   001448  1813               	xorwf	InicializoMRF24@lectura^0,w,c
  4296   00144A  A4D8               	btfss	status,2,c
  4297   00144C  EF2A  F00A         	goto	u971
  4298   001450  EF2C  F00A         	goto	u970
  4299   001454                     u971:
  4300   001454  EF0C  F00A         	goto	l2257
  4301   001458                     u970:
  4302   001458                     
  4303                           ;drivers/scr/API_MRF24J40.c: 147:  SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0X10
      +                          )
  4304   001458  0EF5               	movlw	245
  4305   00145A  6E03               	movwf	SetShortAddr@valor^0,c
  4306   00145C  0E32               	movlw	50
  4307   00145E  EC5F  F010         	call	_SetShortAddr
  4308                           
  4309                           ;drivers/scr/API_MRF24J40.c: 149:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  4310   001462  0EB9               	movlw	185
  4311   001464  6E03               	movwf	SetShortAddr@valor^0,c
  4312   001466  0E12               	movlw	18
  4313   001468  EC5F  F010         	call	_SetShortAddr
  4314                           
  4315                           ;drivers/scr/API_MRF24J40.c: 150:  SetChannel();
  4316   00146C  EC90  F00F         	call	_SetChannel	;wreg free
  4317                           
  4318                           ;drivers/scr/API_MRF24J40.c: 151:  SetShortAddr((0x00), (0X00));
  4319   001470  0E00               	movlw	0
  4320   001472  6E03               	movwf	SetShortAddr@valor^0,c
  4321   001474  0E00               	movlw	0
  4322   001476  EC5F  F010         	call	_SetShortAddr
  4323                           
  4324                           ;drivers/scr/API_MRF24J40.c: 152:  (void)GetShortAddr((0x31));
  4325   00147A  0E31               	movlw	49
  4326   00147C  EC39  F010         	call	_GetShortAddr
  4327   001480                     
  4328                           ;drivers/scr/API_MRF24J40.c: 153:  return INITIALIZATION_OK;
  4329   001480  0E01               	movlw	1
  4330   001482                     l103:
  4331   001482  0012               	return		;funcret
  4332   001484                     __end_of_InicializoMRF24:
  4333                           	callstack 0
  4334                           
  4335 ;; *************** function _SetDeviceMACAddress *****************
  4336 ;; Defined at:
  4337 ;;		line 269 in file "drivers/scr/API_MRF24J40.c"
  4338 ;; Parameters:    Size  Location     Type
  4339 ;;		None
  4340 ;; Auto vars:     Size  Location     Type
  4341 ;;  i               1    4[COMRAM] unsigned char 
  4342 ;; Return value:  Size  Location     Type
  4343 ;;                  1    wreg      void 
  4344 ;; Registers used:
  4345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4346 ;; Tracked objects:
  4347 ;;		On entry : 0/0
  4348 ;;		On exit  : 0/0
  4349 ;;		Unchanged: 0/0
  4350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;Total ram usage:        1 bytes
  4356 ;; Hardware stack levels used: 1
  4357 ;; Hardware stack levels required when called: 4
  4358 ;; This function calls:
  4359 ;;		_SetShortAddr
  4360 ;; This function is called by:
  4361 ;;		_InicializoMRF24
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text16
  4366   001FBE                     __ptext16:
  4367                           	callstack 0
  4368   001FBE                     _SetDeviceMACAddress:
  4369                           	callstack 24
  4370   001FBE                     
  4371                           ;drivers/scr/API_MRF24J40.c: 271:  for(uint8_t i = 0; i < 8; i++) {
  4372   001FBE  6A05               	clrf	SetDeviceMACAddress@i^0,c
  4373   001FC0                     l2051:
  4374                           
  4375                           ;drivers/scr/API_MRF24J40.c: 273:   SetShortAddr(EADR0 + i, data_config_s.mac[i]);
  4376   001FC0  0EDB               	movlw	low (_data_config_s+8)
  4377   001FC2  2405               	addwf	SetDeviceMACAddress@i^0,w,c
  4378   001FC4  6ED9               	movwf	fsr2l,c
  4379   001FC6  6ADA               	clrf	fsr2h,c
  4380   001FC8  0E01               	movlw	high (_data_config_s+8)
  4381   001FCA  22DA               	addwfc	fsr2h,f,c
  4382   001FCC  50DF               	movf	indf2,w,c
  4383   001FCE  6E03               	movwf	SetShortAddr@valor^0,c
  4384   001FD0  5005               	movf	SetDeviceMACAddress@i^0,w,c
  4385   001FD2  0F05               	addlw	5
  4386   001FD4  EC5F  F010         	call	_SetShortAddr
  4387   001FD8                     
  4388                           ;drivers/scr/API_MRF24J40.c: 274:  }
  4389   001FD8  2A05               	incf	SetDeviceMACAddress@i^0,f,c
  4390   001FDA  0E07               	movlw	7
  4391   001FDC  6405               	cpfsgt	SetDeviceMACAddress@i^0,c
  4392   001FDE  EFF3  F00F         	goto	u801
  4393   001FE2  EFF5  F00F         	goto	u800
  4394   001FE6                     u801:
  4395   001FE6  EFE0  F00F         	goto	l2051
  4396   001FEA                     u800:
  4397   001FEA  0012               	return		;funcret
  4398   001FEC                     __end_of_SetDeviceMACAddress:
  4399                           	callstack 0
  4400                           
  4401 ;; *************** function _SetDeviceAddress *****************
  4402 ;; Defined at:
  4403 ;;		line 255 in file "drivers/scr/API_MRF24J40.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;Total ram usage:        0 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; Hardware stack levels required when called: 4
  4424 ;; This function calls:
  4425 ;;		_SetShortAddr
  4426 ;; This function is called by:
  4427 ;;		_InicializoMRF24
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text17
  4432   001FEC                     __ptext17:
  4433                           	callstack 0
  4434   001FEC                     _SetDeviceAddress:
  4435                           	callstack 24
  4436   001FEC                     
  4437                           ;drivers/scr/API_MRF24J40.c: 257:  SetShortAddr((0x04), (uint8_t) (data_config_s.address
      +                           >> (0X08)));
  4438   001FEC  0101               	movlb	1	; () banked
  4439   001FEE  51D8               	movf	(_data_config_s+5)& (0+255),w,b
  4440   001FF0  6E03               	movwf	SetShortAddr@valor^0,c
  4441   001FF2  0E04               	movlw	4
  4442   001FF4  EC5F  F010         	call	_SetShortAddr
  4443                           
  4444                           ;drivers/scr/API_MRF24J40.c: 258:  SetShortAddr((0x03), (uint8_t) (data_config_s.address
      +                          ));
  4445   001FF8  C1D7  F003         	movff	_data_config_s+4,SetShortAddr@valor
  4446   001FFC  0E03               	movlw	3
  4447   001FFE  EC5F  F010         	call	_SetShortAddr
  4448                           
  4449                           ;drivers/scr/API_MRF24J40.c: 259:  SetShortAddr((0x02), (uint8_t) (data_config_s.panid >
      +                          > (0X08)));
  4450   002002  0101               	movlb	1	; () banked
  4451   002004  51D6               	movf	(_data_config_s+3)& (0+255),w,b
  4452   002006  6E03               	movwf	SetShortAddr@valor^0,c
  4453   002008  0E02               	movlw	2
  4454   00200A  EC5F  F010         	call	_SetShortAddr
  4455                           
  4456                           ;drivers/scr/API_MRF24J40.c: 260:  SetShortAddr((0x01), (uint8_t) (data_config_s.panid))
      +                          ;
  4457   00200E  C1D5  F003         	movff	_data_config_s+2,SetShortAddr@valor
  4458   002012  0E01               	movlw	1
  4459   002014  EC5F  F010         	call	_SetShortAddr
  4460   002018  0012               	return		;funcret
  4461   00201A                     __end_of_SetDeviceAddress:
  4462                           	callstack 0
  4463                           
  4464 ;; *************** function _SetChannel *****************
  4465 ;; Defined at:
  4466 ;;		line 241 in file "drivers/scr/API_MRF24J40.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;Total ram usage:        1 bytes
  4485 ;; Hardware stack levels used: 1
  4486 ;; Hardware stack levels required when called: 5
  4487 ;; This function calls:
  4488 ;;		_SetLongAddr
  4489 ;;		_SetShortAddr
  4490 ;; This function is called by:
  4491 ;;		_InicializoMRF24
  4492 ;; This function uses a non-reentrant model
  4493 ;;
  4494                           
  4495                           	psect	text18
  4496   001F20                     __ptext18:
  4497                           	callstack 0
  4498   001F20                     _SetChannel:
  4499                           	callstack 23
  4500   001F20                     
  4501                           ;drivers/scr/API_MRF24J40.c: 243:  SetLongAddr((0x200), data_config_s.channel);
  4502   001F20  0E02               	movlw	2
  4503   001F22  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4504   001F24  0E00               	movlw	0
  4505   001F26  6E06               	movwf	SetLongAddr@reg_address^0,c
  4506   001F28  C1D3  F008         	movff	_data_config_s,SetLongAddr@valor
  4507   001F2C  EC18  F00F         	call	_SetLongAddr	;wreg free
  4508                           
  4509                           ;drivers/scr/API_MRF24J40.c: 244:  SetShortAddr((0x36), (0X04));
  4510   001F30  0E04               	movlw	4
  4511   001F32  6E03               	movwf	SetShortAddr@valor^0,c
  4512   001F34  0E36               	movlw	54
  4513   001F36  EC5F  F010         	call	_SetShortAddr
  4514                           
  4515                           ;drivers/scr/API_MRF24J40.c: 245:  SetShortAddr((0x36), (0X00));
  4516   001F3A  0E00               	movlw	0
  4517   001F3C  6E03               	movwf	SetShortAddr@valor^0,c
  4518   001F3E  0E36               	movlw	54
  4519   001F40  EC5F  F010         	call	_SetShortAddr
  4520   001F44                     
  4521                           ;drivers/scr/API_MRF24J40.c: 246:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  4522   001F44  0E06               	movlw	6
  4523   001F46  6E0B               	movwf	??_SetChannel^0,c
  4524   001F48  0E30               	movlw	48
  4525   001F4A                     u1497:
  4526   001F4A  2EE8               	decfsz	wreg,f,c
  4527   001F4C  D7FE               	bra	u1497
  4528   001F4E  2E0B               	decfsz	??_SetChannel^0,f,c
  4529   001F50  D7FC               	bra	u1497
  4530   001F52  F000 F000          	nop2	
  4531   001F56  0012               	return		;funcret
  4532   001F58                     __end_of_SetChannel:
  4533                           	callstack 0
  4534                           
  4535 ;; *************** function _SetShortAddr *****************
  4536 ;; Defined at:
  4537 ;;		line 165 in file "drivers/scr/API_MRF24J40.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;  reg_address     1    wreg     unsigned char 
  4540 ;;  valor           1    2[COMRAM] unsigned char 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  reg_address     1    3[COMRAM] unsigned char 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg, status,2, status,0, cstack
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4552 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;Total ram usage:        2 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; Hardware stack levels required when called: 3
  4559 ;; This function calls:
  4560 ;;		_SetCSPin
  4561 ;;		_WriteByteSPIPort
  4562 ;; This function is called by:
  4563 ;;		_InicializoMRF24
  4564 ;;		_SetChannel
  4565 ;;		_SetDeviceAddress
  4566 ;;		_SetDeviceMACAddress
  4567 ;;		_MRF24TransmitirDato
  4568 ;;		_MRF24ReciboPaquete
  4569 ;;		_MRF24BuscarDispositivos
  4570 ;; This function uses a non-reentrant model
  4571 ;;
  4572                           
  4573                           	psect	text19
  4574   0020BE                     __ptext19:
  4575                           	callstack 0
  4576   0020BE                     _SetShortAddr:
  4577                           	callstack 24
  4578                           
  4579                           ;incstack = 0
  4580                           ;SetShortAddr@reg_address stored from wreg
  4581   0020BE  6E04               	movwf	SetShortAddr@reg_address^0,c
  4582   0020C0                     
  4583                           ;drivers/scr/API_MRF24J40.c: 167:  reg_address = (uint8_t) (reg_address << (0X01)) | (0x
      +                          01);
  4584   0020C0  80D8               	bsf	status,0,c
  4585   0020C2  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  4586   0020C4                     
  4587                           ;drivers/scr/API_MRF24J40.c: 168:  SetCSPin(0);
  4588   0020C4  0E00               	movlw	0
  4589   0020C6  ECCA  F010         	call	_SetCSPin
  4590   0020CA                     
  4591                           ;drivers/scr/API_MRF24J40.c: 169:  WriteByteSPIPort(reg_address);
  4592   0020CA  5004               	movf	SetShortAddr@reg_address^0,w,c
  4593   0020CC  ECD1  F010         	call	_WriteByteSPIPort
  4594   0020D0                     
  4595                           ;drivers/scr/API_MRF24J40.c: 170:  WriteByteSPIPort(valor);
  4596   0020D0  5003               	movf	SetShortAddr@valor^0,w,c
  4597   0020D2  ECD1  F010         	call	_WriteByteSPIPort
  4598   0020D6                     
  4599                           ;drivers/scr/API_MRF24J40.c: 171:  SetCSPin(1);
  4600   0020D6  0E01               	movlw	1
  4601   0020D8  ECCA  F010         	call	_SetCSPin
  4602   0020DC  0012               	return		;funcret
  4603   0020DE                     __end_of_SetShortAddr:
  4604                           	callstack 0
  4605                           
  4606 ;; *************** function _SetLongAddr *****************
  4607 ;; Defined at:
  4608 ;;		line 205 in file "drivers/scr/API_MRF24J40.c"
  4609 ;; Parameters:    Size  Location     Type
  4610 ;;  reg_address     2    5[COMRAM] unsigned short 
  4611 ;;  valor           1    7[COMRAM] unsigned char 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;		None
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      void 
  4616 ;; Registers used:
  4617 ;;		wreg, status,2, status,0, cstack
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4623 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;Total ram usage:        5 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; Hardware stack levels required when called: 4
  4630 ;; This function calls:
  4631 ;;		_SetCSPin
  4632 ;;		_Write2ByteSPIPort
  4633 ;;		_WriteByteSPIPort
  4634 ;; This function is called by:
  4635 ;;		_InicializoMRF24
  4636 ;;		_SetChannel
  4637 ;;		_MRF24TransmitirDato
  4638 ;;		_MRF24ReciboPaquete
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text20
  4643   001E30                     __ptext20:
  4644                           	callstack 0
  4645   001E30                     _SetLongAddr:
  4646                           	callstack 23
  4647   001E30                     
  4648                           ;drivers/scr/API_MRF24J40.c: 207:  reg_address = (reg_address << (0X05)) | (0X8010);
  4649   001E30  C006  F009         	movff	SetLongAddr@reg_address,??_SetLongAddr
  4650   001E34  C007  F00A         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  4651   001E38  0E05               	movlw	5
  4652   001E3A                     u735:
  4653   001E3A  90D8               	bcf	status,0,c
  4654   001E3C  3609               	rlcf	??_SetLongAddr^0,f,c
  4655   001E3E  360A               	rlcf	(??_SetLongAddr+1)^0,f,c
  4656   001E40  2EE8               	decfsz	wreg,f,c
  4657   001E42  EF1D  F00F         	goto	u735
  4658   001E46  0E10               	movlw	16
  4659   001E48  1009               	iorwf	??_SetLongAddr^0,w,c
  4660   001E4A  6E06               	movwf	SetLongAddr@reg_address^0,c
  4661   001E4C  0E80               	movlw	128
  4662   001E4E  100A               	iorwf	(??_SetLongAddr+1)^0,w,c
  4663   001E50  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4664   001E52                     
  4665                           ;drivers/scr/API_MRF24J40.c: 208:  SetCSPin(0);
  4666   001E52  0E00               	movlw	0
  4667   001E54  ECCA  F010         	call	_SetCSPin
  4668   001E58                     
  4669                           ;drivers/scr/API_MRF24J40.c: 209:  Write2ByteSPIPort(reg_address);
  4670   001E58  C006  F004         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  4671   001E5C  C007  F005         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  4672   001E60  ECBC  F010         	call	_Write2ByteSPIPort	;wreg free
  4673   001E64                     
  4674                           ;drivers/scr/API_MRF24J40.c: 210:  WriteByteSPIPort(valor);
  4675   001E64  5008               	movf	SetLongAddr@valor^0,w,c
  4676   001E66  ECD1  F010         	call	_WriteByteSPIPort
  4677   001E6A                     
  4678                           ;drivers/scr/API_MRF24J40.c: 211:  SetCSPin(1);
  4679   001E6A  0E01               	movlw	1
  4680   001E6C  ECCA  F010         	call	_SetCSPin
  4681   001E70  0012               	return		;funcret
  4682   001E72                     __end_of_SetLongAddr:
  4683                           	callstack 0
  4684                           
  4685 ;; *************** function _GetShortAddr *****************
  4686 ;; Defined at:
  4687 ;;		line 184 in file "drivers/scr/API_MRF24J40.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  reg_address     1    wreg     unsigned char 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  reg_address     1    3[COMRAM] unsigned char 
  4692 ;;  leido_spi       1    2[COMRAM] unsigned char 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      unsigned char 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2, status,0, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4705 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4706 ;;Total ram usage:        2 bytes
  4707 ;; Hardware stack levels used: 1
  4708 ;; Hardware stack levels required when called: 3
  4709 ;; This function calls:
  4710 ;;		_ReadByteSPIPort
  4711 ;;		_SetCSPin
  4712 ;;		_WriteByteSPIPort
  4713 ;; This function is called by:
  4714 ;;		_InicializoMRF24
  4715 ;;		_MRF24ReciboPaquete
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           	psect	text21
  4720   002072                     __ptext21:
  4721                           	callstack 0
  4722   002072                     _GetShortAddr:
  4723                           	callstack 26
  4724                           
  4725                           ;incstack = 0
  4726                           ;GetShortAddr@reg_address stored from wreg
  4727   002072  6E04               	movwf	GetShortAddr@reg_address^0,c
  4728   002074                     
  4729                           ;drivers/scr/API_MRF24J40.c: 187:  reg_address = (uint8_t) (reg_address << (0X01)) & (0x
      +                          7E);
  4730   002074  5004               	movf	GetShortAddr@reg_address^0,w,c
  4731   002076  2404               	addwf	GetShortAddr@reg_address^0,w,c
  4732   002078  0B7E               	andlw	126
  4733   00207A  6E04               	movwf	GetShortAddr@reg_address^0,c
  4734   00207C                     
  4735                           ;drivers/scr/API_MRF24J40.c: 188:  SetCSPin(0);
  4736   00207C  0E00               	movlw	0
  4737   00207E  ECCA  F010         	call	_SetCSPin
  4738   002082                     
  4739                           ;drivers/scr/API_MRF24J40.c: 189:  WriteByteSPIPort(reg_address);
  4740   002082  5004               	movf	GetShortAddr@reg_address^0,w,c
  4741   002084  ECD1  F010         	call	_WriteByteSPIPort
  4742   002088                     
  4743                           ;drivers/scr/API_MRF24J40.c: 190:  leido_spi = ReadByteSPIPort();
  4744   002088  ECDB  F010         	call	_ReadByteSPIPort	;wreg free
  4745   00208C  6E03               	movwf	GetShortAddr@leido_spi^0,c
  4746   00208E                     
  4747                           ;drivers/scr/API_MRF24J40.c: 191:  SetCSPin(1);
  4748   00208E  0E01               	movlw	1
  4749   002090  ECCA  F010         	call	_SetCSPin
  4750   002094                     
  4751                           ;drivers/scr/API_MRF24J40.c: 192:  return leido_spi;
  4752   002094  5003               	movf	GetShortAddr@leido_spi^0,w,c
  4753   002096  0012               	return		;funcret
  4754   002098                     __end_of_GetShortAddr:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _WriteByteSPIPort *****************
  4758 ;; Defined at:
  4759 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  dato            1    wreg     unsigned char 
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  dato            1    1[COMRAM] unsigned char 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  1    wreg      void 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4777 ;;Total ram usage:        1 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 2
  4780 ;; This function calls:
  4781 ;;		_SPIWriteByte
  4782 ;; This function is called by:
  4783 ;;		_SetShortAddr
  4784 ;;		_GetShortAddr
  4785 ;;		_SetLongAddr
  4786 ;; This function uses a non-reentrant model
  4787 ;;
  4788                           
  4789                           	psect	text22
  4790   0021A2                     __ptext22:
  4791                           	callstack 0
  4792   0021A2                     _WriteByteSPIPort:
  4793                           	callstack 24
  4794                           
  4795                           ;incstack = 0
  4796                           ;WriteByteSPIPort@dato stored from wreg
  4797   0021A2  6E02               	movwf	WriteByteSPIPort@dato^0,c
  4798   0021A4                     
  4799                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  4800   0021A4  5002               	movf	WriteByteSPIPort@dato^0,w,c
  4801   0021A6  EC6F  F010         	call	_SPIWriteByte
  4802   0021AA  0012               	return		;funcret
  4803   0021AC                     __end_of_WriteByteSPIPort:
  4804                           	callstack 0
  4805                           
  4806 ;; *************** function _GetLongAddr *****************
  4807 ;; Defined at:
  4808 ;;		line 225 in file "drivers/scr/API_MRF24J40.c"
  4809 ;; Parameters:    Size  Location     Type
  4810 ;;  reg_address     2    5[COMRAM] unsigned short 
  4811 ;; Auto vars:     Size  Location     Type
  4812 ;;  respuesta       1    9[COMRAM] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  1    wreg      unsigned char 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0, cstack
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4825 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4826 ;;Total ram usage:        5 bytes
  4827 ;; Hardware stack levels used: 1
  4828 ;; Hardware stack levels required when called: 4
  4829 ;; This function calls:
  4830 ;;		_ReadByteSPIPort
  4831 ;;		_SetCSPin
  4832 ;;		_Write2ByteSPIPort
  4833 ;; This function is called by:
  4834 ;;		_InicializoMRF24
  4835 ;;		_MRF24ReciboPaquete
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text23
  4840   001DEC                     __ptext23:
  4841                           	callstack 0
  4842   001DEC                     _GetLongAddr:
  4843                           	callstack 25
  4844   001DEC                     
  4845                           ;drivers/scr/API_MRF24J40.c: 227:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 228:  
      +                          reg_address = (reg_address << (0X05)) | (0X8000);
  4846   001DEC  C006  F008         	movff	GetLongAddr@reg_address,??_GetLongAddr
  4847   001DF0  C007  F009         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  4848   001DF4  0E05               	movlw	5
  4849   001DF6                     u815:
  4850   001DF6  90D8               	bcf	status,0,c
  4851   001DF8  3608               	rlcf	??_GetLongAddr^0,f,c
  4852   001DFA  3609               	rlcf	(??_GetLongAddr+1)^0,f,c
  4853   001DFC  2EE8               	decfsz	wreg,f,c
  4854   001DFE  EFFB  F00E         	goto	u815
  4855   001E02  0E00               	movlw	0
  4856   001E04  1008               	iorwf	??_GetLongAddr^0,w,c
  4857   001E06  6E06               	movwf	GetLongAddr@reg_address^0,c
  4858   001E08  0E80               	movlw	128
  4859   001E0A  1009               	iorwf	(??_GetLongAddr+1)^0,w,c
  4860   001E0C  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  4861   001E0E                     
  4862                           ;drivers/scr/API_MRF24J40.c: 229:  SetCSPin(0);
  4863   001E0E  0E00               	movlw	0
  4864   001E10  ECCA  F010         	call	_SetCSPin
  4865   001E14                     
  4866                           ;drivers/scr/API_MRF24J40.c: 230:  Write2ByteSPIPort(reg_address);
  4867   001E14  C006  F004         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  4868   001E18  C007  F005         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  4869   001E1C  ECBC  F010         	call	_Write2ByteSPIPort	;wreg free
  4870   001E20                     
  4871                           ;drivers/scr/API_MRF24J40.c: 231:  respuesta = ReadByteSPIPort();
  4872   001E20  ECDB  F010         	call	_ReadByteSPIPort	;wreg free
  4873   001E24  6E0A               	movwf	GetLongAddr@respuesta^0,c
  4874   001E26                     
  4875                           ;drivers/scr/API_MRF24J40.c: 232:  SetCSPin(1);
  4876   001E26  0E01               	movlw	1
  4877   001E28  ECCA  F010         	call	_SetCSPin
  4878   001E2C                     
  4879                           ;drivers/scr/API_MRF24J40.c: 233:  return respuesta;
  4880   001E2C  500A               	movf	GetLongAddr@respuesta^0,w,c
  4881   001E2E  0012               	return		;funcret
  4882   001E30                     __end_of_GetLongAddr:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _Write2ByteSPIPort *****************
  4886 ;; Defined at:
  4887 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;  dato            2    3[COMRAM] unsigned short 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;		None
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, cstack
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4901 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;Total ram usage:        2 bytes
  4906 ;; Hardware stack levels used: 1
  4907 ;; Hardware stack levels required when called: 3
  4908 ;; This function calls:
  4909 ;;		_SPIWrite2Byte
  4910 ;; This function is called by:
  4911 ;;		_SetLongAddr
  4912 ;;		_GetLongAddr
  4913 ;; This function uses a non-reentrant model
  4914 ;;
  4915                           
  4916                           	psect	text24
  4917   002178                     __ptext24:
  4918                           	callstack 0
  4919   002178                     _Write2ByteSPIPort:
  4920                           	callstack 23
  4921   002178                     
  4922                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  4923   002178  C004  F002         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  4924   00217C  C005  F003         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  4925   002180  ECC3  F010         	call	_SPIWrite2Byte	;wreg free
  4926   002184  0012               	return		;funcret
  4927   002186                     __end_of_Write2ByteSPIPort:
  4928                           	callstack 0
  4929                           
  4930 ;; *************** function _SPIWrite2Byte *****************
  4931 ;; Defined at:
  4932 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  4933 ;; Parameters:    Size  Location     Type
  4934 ;;  dato            2    1[COMRAM] unsigned short 
  4935 ;; Auto vars:     Size  Location     Type
  4936 ;;		None
  4937 ;; Return value:  Size  Location     Type
  4938 ;;                  1    wreg      void 
  4939 ;; Registers used:
  4940 ;;		wreg, status,2, cstack
  4941 ;; Tracked objects:
  4942 ;;		On entry : 0/0
  4943 ;;		On exit  : 0/0
  4944 ;;		Unchanged: 0/0
  4945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;Total ram usage:        2 bytes
  4951 ;; Hardware stack levels used: 1
  4952 ;; Hardware stack levels required when called: 2
  4953 ;; This function calls:
  4954 ;;		_SPIWriteByte
  4955 ;; This function is called by:
  4956 ;;		_Write2ByteSPIPort
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text25
  4961   002186                     __ptext25:
  4962                           	callstack 0
  4963   002186                     _SPIWrite2Byte:
  4964                           	callstack 23
  4965   002186                     
  4966                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  4967   002186  5003               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  4968   002188  EC6F  F010         	call	_SPIWriteByte
  4969                           
  4970                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  4971   00218C  5002               	movf	SPIWrite2Byte@dato^0,w,c
  4972   00218E  EC6F  F010         	call	_SPIWriteByte
  4973   002192  0012               	return		;funcret
  4974   002194                     __end_of_SPIWrite2Byte:
  4975                           	callstack 0
  4976                           
  4977 ;; *************** function _SPIWriteByte *****************
  4978 ;; Defined at:
  4979 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;  dato            1    wreg     unsigned char 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  dato            1    0[COMRAM] unsigned char 
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4994 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4996 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4997 ;;Total ram usage:        1 bytes
  4998 ;; Hardware stack levels used: 1
  4999 ;; Hardware stack levels required when called: 1
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_WriteByteSPIPort
  5004 ;;		_SPIWrite2Byte
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text26
  5009   0020DE                     __ptext26:
  5010                           	callstack 0
  5011   0020DE                     _SPIWriteByte:
  5012                           	callstack 24
  5013                           
  5014                           ;incstack = 0
  5015                           ;SPIWriteByte@dato stored from wreg
  5016   0020DE  6E01               	movwf	SPIWriteByte@dato^0,c
  5017   0020E0                     
  5018                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  5019   0020E0  969E               	bcf	158,3,c	;volatile
  5020   0020E2                     
  5021                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  5022   0020E2  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  5023   0020E6                     l213:
  5024   0020E6  A69E               	btfss	158,3,c	;volatile
  5025   0020E8  EF78  F010         	goto	u701
  5026   0020EC  EF7A  F010         	goto	u700
  5027   0020F0                     u701:
  5028   0020F0  EF73  F010         	goto	l213
  5029   0020F4                     u700:
  5030   0020F4  0012               	return		;funcret
  5031   0020F6                     __end_of_SPIWriteByte:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _SetCSPin *****************
  5035 ;; Defined at:
  5036 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  estado          1    wreg     _Bool 
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;  estado          1    0[COMRAM] _Bool 
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;Total ram usage:        1 bytes
  5055 ;; Hardware stack levels used: 1
  5056 ;; Hardware stack levels required when called: 1
  5057 ;; This function calls:
  5058 ;;		Nothing
  5059 ;; This function is called by:
  5060 ;;		_InicializoPines
  5061 ;;		_SetShortAddr
  5062 ;;		_GetShortAddr
  5063 ;;		_SetLongAddr
  5064 ;;		_GetLongAddr
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text27
  5069   002194                     __ptext27:
  5070                           	callstack 0
  5071   002194                     _SetCSPin:
  5072                           	callstack 25
  5073                           
  5074                           ;incstack = 0
  5075                           ;SetCSPin@estado stored from wreg
  5076   002194  6E01               	movwf	SetCSPin@estado^0,c
  5077   002196                     
  5078                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  5079   002196  B001               	btfsc	SetCSPin@estado^0,0,c
  5080   002198  D002               	bra	u715
  5081   00219A  9C8B               	bcf	139,6,c	;volatile
  5082   00219C  D001               	bra	u716
  5083   00219E                     u715:
  5084   00219E  8C8B               	bsf	139,6,c	;volatile
  5085   0021A0                     u716:
  5086   0021A0  0012               	return		;funcret
  5087   0021A2                     __end_of_SetCSPin:
  5088                           	callstack 0
  5089                           
  5090 ;; *************** function _ReadByteSPIPort *****************
  5091 ;; Defined at:
  5092 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;		None
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;		None
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      unsigned char 
  5099 ;; Registers used:
  5100 ;;		wreg, status,2, cstack
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5110 ;;Total ram usage:        0 bytes
  5111 ;; Hardware stack levels used: 1
  5112 ;; Hardware stack levels required when called: 2
  5113 ;; This function calls:
  5114 ;;		_SPIRead
  5115 ;; This function is called by:
  5116 ;;		_GetShortAddr
  5117 ;;		_GetLongAddr
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text28
  5122   0021B6                     __ptext28:
  5123                           	callstack 0
  5124   0021B6                     _ReadByteSPIPort:
  5125                           	callstack 26
  5126   0021B6                     
  5127                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  5128   0021B6  EC87  F010         	call	_SPIRead	;wreg free
  5129   0021BA  0012               	return		;funcret
  5130   0021BC                     __end_of_ReadByteSPIPort:
  5131                           	callstack 0
  5132                           
  5133 ;; *************** function _SPIRead *****************
  5134 ;; Defined at:
  5135 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  5136 ;; Parameters:    Size  Location     Type
  5137 ;;		None
  5138 ;; Auto vars:     Size  Location     Type
  5139 ;;		None
  5140 ;; Return value:  Size  Location     Type
  5141 ;;                  1    wreg      unsigned char 
  5142 ;; Registers used:
  5143 ;;		wreg, status,2
  5144 ;; Tracked objects:
  5145 ;;		On entry : 0/0
  5146 ;;		On exit  : 0/0
  5147 ;;		Unchanged: 0/0
  5148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5153 ;;Total ram usage:        0 bytes
  5154 ;; Hardware stack levels used: 1
  5155 ;; Hardware stack levels required when called: 1
  5156 ;; This function calls:
  5157 ;;		Nothing
  5158 ;; This function is called by:
  5159 ;;		_ReadByteSPIPort
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text29
  5164   00210E                     __ptext29:
  5165                           	callstack 0
  5166   00210E                     _SPIRead:
  5167                           	callstack 26
  5168   00210E                     
  5169                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  5170   00210E  9EC6               	bcf	198,7,c	;volatile
  5171                           
  5172                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  5173   002110  6AC9               	clrf	201,c	;volatile
  5174   002112                     l222:
  5175   002112  A0C7               	btfss	199,0,c	;volatile
  5176   002114  EF8E  F010         	goto	u721
  5177   002118  EF90  F010         	goto	u720
  5178   00211C                     u721:
  5179   00211C  EF89  F010         	goto	l222
  5180   002120                     u720:
  5181   002120                     
  5182                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  5183   002120  50C9               	movf	201,w,c	;volatile
  5184   002122  0012               	return		;funcret
  5185   002124                     __end_of_SPIRead:
  5186                           	callstack 0
  5187                           
  5188 ;; *************** function _DelayReset *****************
  5189 ;; Defined at:
  5190 ;;		line 68 in file "drivers/scr/API_delay.c"
  5191 ;; Parameters:    Size  Location     Type
  5192 ;;  delay           1    0[COMRAM] PTR struct .
  5193 ;;		 -> InicializoMRF24@delay_time_out(9), 
  5194 ;; Auto vars:     Size  Location     Type
  5195 ;;		None
  5196 ;; Return value:  Size  Location     Type
  5197 ;;                  1    wreg      void 
  5198 ;; Registers used:
  5199 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5200 ;; Tracked objects:
  5201 ;;		On entry : 0/0
  5202 ;;		On exit  : 0/0
  5203 ;;		Unchanged: 0/0
  5204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5205 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5209 ;;Total ram usage:        1 bytes
  5210 ;; Hardware stack levels used: 1
  5211 ;; Hardware stack levels required when called: 1
  5212 ;; This function calls:
  5213 ;;		Nothing
  5214 ;; This function is called by:
  5215 ;;		_InicializoMRF24
  5216 ;; This function uses a non-reentrant model
  5217 ;;
  5218                           
  5219                           	psect	text30
  5220   002098                     __ptext30:
  5221                           	callstack 0
  5222   002098                     _DelayReset:
  5223                           	callstack 27
  5224   002098                     
  5225                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  5226   002098  5001               	movf	DelayReset@delay^0,w,c
  5227   00209A  6ED9               	movwf	fsr2l,c
  5228   00209C  6ADA               	clrf	fsr2h,c
  5229   00209E  C0EA  FFDE         	movff	_timeStamp,postinc2
  5230   0020A2  C0EB  FFDE         	movff	_timeStamp+1,postinc2
  5231   0020A6  C0EC  FFDE         	movff	_timeStamp+2,postinc2
  5232   0020AA  C0ED  FFDE         	movff	_timeStamp+3,postinc2
  5233   0020AE                     
  5234                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  5235   0020AE  5001               	movf	DelayReset@delay^0,w,c
  5236   0020B0  6ED9               	movwf	fsr2l,c
  5237   0020B2  6ADA               	clrf	fsr2h,c
  5238   0020B4  0E08               	movlw	8
  5239   0020B6  26D9               	addwf	fsr2l,f,c
  5240   0020B8  0E01               	movlw	1
  5241   0020BA  6EDF               	movwf	indf2,c
  5242   0020BC  0012               	return		;funcret
  5243   0020BE                     __end_of_DelayReset:
  5244                           	callstack 0
  5245                           
  5246 ;; *************** function _MRF24IsNewMsg *****************
  5247 ;; Defined at:
  5248 ;;		line 451 in file "drivers/scr/API_MRF24J40.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;		None
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;		None
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      enum E3263
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0, cstack
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;Total ram usage:        0 bytes
  5267 ;; Hardware stack levels used: 1
  5268 ;; Hardware stack levels required when called: 2
  5269 ;; This function calls:
  5270 ;;		_IsMRF24Interrup
  5271 ;; This function is called by:
  5272 ;;		_main
  5273 ;; This function uses a non-reentrant model
  5274 ;;
  5275                           
  5276                           	psect	text31
  5277   001F58                     __ptext31:
  5278                           	callstack 0
  5279   001F58                     _MRF24IsNewMsg:
  5280                           	callstack 28
  5281   001F58                     
  5282                           ;drivers/scr/API_MRF24J40.c: 453:  if(INITIALIZATION_OK != estadoActual)
  5283   001F58  045D               	decf	_estadoActual^0,w,c
  5284   001F5A  B4D8               	btfsc	status,2,c
  5285   001F5C  EFB2  F00F         	goto	u1111
  5286   001F60  EFB4  F00F         	goto	u1110
  5287   001F64                     u1111:
  5288   001F64  EFB7  F00F         	goto	l2395
  5289   001F68                     u1110:
  5290   001F68                     
  5291                           ;drivers/scr/API_MRF24J40.c: 454:   return UNEXPECTED_ERROR;
  5292   001F68  0E0B               	movlw	11
  5293   001F6A  EFC5  F00F         	goto	l180
  5294   001F6E                     l2395:
  5295                           
  5296                           ;drivers/scr/API_MRF24J40.c: 456:  if(!IsMRF24Interrup())
  5297   001F6E  EC9C  F010         	call	_IsMRF24Interrup	;wreg free
  5298   001F72  0900               	iorlw	0
  5299   001F74  A4D8               	btfss	status,2,c
  5300   001F76  EFBF  F00F         	goto	u1121
  5301   001F7A  EFC1  F00F         	goto	u1120
  5302   001F7E                     u1121:
  5303   001F7E  EFC4  F00F         	goto	l2401
  5304   001F82                     u1120:
  5305   001F82                     
  5306                           ;drivers/scr/API_MRF24J40.c: 457:   return MSG_PRESENT;
  5307   001F82  0E04               	movlw	4
  5308   001F84  EFC5  F00F         	goto	l180
  5309   001F88                     l2401:
  5310                           
  5311                           ;drivers/scr/API_MRF24J40.c: 458:  return BUFFER_EMPTY;
  5312   001F88  0E07               	movlw	7
  5313   001F8A                     l180:
  5314   001F8A  0012               	return		;funcret
  5315   001F8C                     __end_of_MRF24IsNewMsg:
  5316                           	callstack 0
  5317                           
  5318 ;; *************** function _IsMRF24Interrup *****************
  5319 ;; Defined at:
  5320 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;		None
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;		None
  5325 ;; Return value:  Size  Location     Type
  5326 ;;                  1    wreg      _Bool 
  5327 ;; Registers used:
  5328 ;;		wreg
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;Total ram usage:        0 bytes
  5339 ;; Hardware stack levels used: 1
  5340 ;; Hardware stack levels required when called: 1
  5341 ;; This function calls:
  5342 ;;		Nothing
  5343 ;; This function is called by:
  5344 ;;		_MRF24IsNewMsg
  5345 ;; This function uses a non-reentrant model
  5346 ;;
  5347                           
  5348                           	psect	text32
  5349   002138                     __ptext32:
  5350                           	callstack 0
  5351   002138                     _IsMRF24Interrup:
  5352                           	callstack 28
  5353   002138                     
  5354                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  5355   002138  B081               	btfsc	129,0,c	;volatile
  5356   00213A  EFA1  F010         	goto	u921
  5357   00213E  EFA4  F010         	goto	u920
  5358   002142                     u921:
  5359   002142  0E01               	movlw	1
  5360   002144  EFA5  F010         	goto	u926
  5361   002148                     u920:
  5362   002148  0E00               	movlw	0
  5363   00214A                     u926:
  5364   00214A  0012               	return		;funcret
  5365   00214C                     __end_of_IsMRF24Interrup:
  5366                           	callstack 0
  5367                           
  5368 ;; *************** function _MRF24GetDataIn *****************
  5369 ;; Defined at:
  5370 ;;		line 504 in file "drivers/scr/API_MRF24J40.c"
  5371 ;; Parameters:    Size  Location     Type
  5372 ;;		None
  5373 ;; Auto vars:     Size  Location     Type
  5374 ;;		None
  5375 ;; Return value:  Size  Location     Type
  5376 ;;                  2    0[COMRAM] PTR struct .
  5377 ;; Registers used:
  5378 ;;		wreg, status,2, status,0
  5379 ;; Tracked objects:
  5380 ;;		On entry : 0/0
  5381 ;;		On exit  : 0/0
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5384 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;Total ram usage:        2 bytes
  5389 ;; Hardware stack levels used: 1
  5390 ;; Hardware stack levels required when called: 1
  5391 ;; This function calls:
  5392 ;;		Nothing
  5393 ;; This function is called by:
  5394 ;;		_main
  5395 ;; This function uses a non-reentrant model
  5396 ;;
  5397                           
  5398                           	psect	text33
  5399   0021AC                     __ptext33:
  5400                           	callstack 0
  5401   0021AC                     _MRF24GetDataIn:
  5402                           	callstack 29
  5403   0021AC                     
  5404                           ;drivers/scr/API_MRF24J40.c: 506:  return &data_in_s;
  5405   0021AC  0E00               	movlw	low _data_in_s
  5406   0021AE  6E01               	movwf	?_MRF24GetDataIn^0,c
  5407   0021B0  0E04               	movlw	high _data_in_s
  5408   0021B2  6E02               	movwf	(?_MRF24GetDataIn+1)^0,c
  5409   0021B4  0012               	return		;funcret
  5410   0021B6                     __end_of_MRF24GetDataIn:
  5411                           	callstack 0
  5412                           
  5413 ;; *************** function _DebounceFSMUpdate *****************
  5414 ;; Defined at:
  5415 ;;		line 34 in file "drivers/scr/API_debounce.c"
  5416 ;; Parameters:    Size  Location     Type
  5417 ;;  antirrebote_    2   16[COMRAM] PTR struct .
  5418 ;;		 -> main@boton1(11), 
  5419 ;;  estado_pin      1   18[COMRAM] _Bool 
  5420 ;; Auto vars:     Size  Location     Type
  5421 ;;		None
  5422 ;; Return value:  Size  Location     Type
  5423 ;;                  1    wreg      enum E2763
  5424 ;; Registers used:
  5425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5426 ;; Tracked objects:
  5427 ;;		On entry : 0/0
  5428 ;;		On exit  : 0/0
  5429 ;;		Unchanged: 0/0
  5430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5431 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5434 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5435 ;;Total ram usage:        5 bytes
  5436 ;; Hardware stack levels used: 1
  5437 ;; Hardware stack levels required when called: 3
  5438 ;; This function calls:
  5439 ;;		_DebounceFSMInit
  5440 ;;		_DelayRead
  5441 ;; This function is called by:
  5442 ;;		_main
  5443 ;; This function uses a non-reentrant model
  5444 ;;
  5445                           
  5446                           	psect	text34
  5447   0015F0                     __ptext34:
  5448                           	callstack 0
  5449   0015F0                     _DebounceFSMUpdate:
  5450                           	callstack 27
  5451   0015F0                     
  5452                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  5453   0015F0  EF80  F00B         	goto	l2483
  5454   0015F4                     l2431:
  5455                           
  5456                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  5457   0015F4  5013               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  5458   0015F6  A4D8               	btfss	status,2,c
  5459   0015F8  EF00  F00B         	goto	u1151
  5460   0015FC  EF02  F00B         	goto	u1150
  5461   001600                     u1151:
  5462   001600  EFA3  F00B         	goto	l2485
  5463   001604                     u1150:
  5464   001604                     
  5465                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  5466   001604  EE20 F001          	lfsr	2,1
  5467   001608  5011               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  5468   00160A  26D9               	addwf	fsr2l,f,c
  5469   00160C  5012               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  5470   00160E  22DA               	addwfc	fsr2h,f,c
  5471   001610  0E01               	movlw	1
  5472   001612  6EDF               	movwf	indf2,c
  5473   001614  EFA3  F00B         	goto	l2485
  5474   001618                     l2435:
  5475                           
  5476                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  5477   001618  0E02               	movlw	2
  5478   00161A  2411               	addwf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  5479   00161C  6E03               	movwf	DelayRead@delay^0,c
  5480   00161E  0E00               	movlw	0
  5481   001620  2012               	addwfc	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  5482   001622  6E04               	movwf	(DelayRead@delay+1)^0,c
  5483   001624  EC77  F00D         	call	_DelayRead	;wreg free
  5484   001628  0900               	iorlw	0
  5485   00162A  B4D8               	btfsc	status,2,c
  5486   00162C  EF1A  F00B         	goto	u1161
  5487   001630  EF1C  F00B         	goto	u1160
  5488   001634                     u1161:
  5489   001634  EFA3  F00B         	goto	l2485
  5490   001638                     u1160:
  5491   001638                     
  5492                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  5493   001638  5013               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  5494   00163A  A4D8               	btfss	status,2,c
  5495   00163C  EF22  F00B         	goto	u1171
  5496   001640  EF24  F00B         	goto	u1170
  5497   001644                     u1171:
  5498   001644  EF2F  F00B         	goto	l2447
  5499   001648                     u1170:
  5500   001648                     
  5501                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  5502   001648  EE20 F001          	lfsr	2,1
  5503   00164C  5011               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  5504   00164E  26D9               	addwf	fsr2l,f,c
  5505   001650  5012               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  5506   001652  22DA               	addwfc	fsr2h,f,c
  5507   001654  0E02               	movlw	2
  5508   001656  6EDF               	movwf	indf2,c
  5509   001658                     
  5510                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  5511   001658  0E01               	movlw	1
  5512   00165A  EFA4  F00B         	goto	l264
  5513   00165E                     l2447:
  5514                           
  5515                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  5516   00165E  EE20 F001          	lfsr	2,1
  5517   001662  5011               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  5518   001664  26D9               	addwf	fsr2l,f,c
  5519   001666  5012               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  5520   001668  22DA               	addwfc	fsr2h,f,c
  5521   00166A  6ADF               	clrf	indf2,c
  5522   00166C                     l2449:
  5523                           
  5524                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  5525   00166C  0E04               	movlw	4
  5526   00166E  EFA4  F00B         	goto	l264
  5527   001672                     l2453:
  5528                           
  5529                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  5530   001672  0E02               	movlw	2
  5531   001674  2411               	addwf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  5532   001676  6E03               	movwf	DelayRead@delay^0,c
  5533   001678  0E00               	movlw	0
  5534   00167A  2012               	addwfc	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  5535   00167C  6E04               	movwf	(DelayRead@delay+1)^0,c
  5536   00167E  EC77  F00D         	call	_DelayRead	;wreg free
  5537   001682  0900               	iorlw	0
  5538   001684  B4D8               	btfsc	status,2,c
  5539   001686  EF47  F00B         	goto	u1181
  5540   00168A  EF49  F00B         	goto	u1180
  5541   00168E                     u1181:
  5542   00168E  EFA3  F00B         	goto	l2485
  5543   001692                     u1180:
  5544   001692                     
  5545                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  5546   001692  5013               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  5547   001694  B4D8               	btfsc	status,2,c
  5548   001696  EF4F  F00B         	goto	u1191
  5549   00169A  EF51  F00B         	goto	u1190
  5550   00169E                     u1191:
  5551   00169E  EF5B  F00B         	goto	l2465
  5552   0016A2                     u1190:
  5553   0016A2                     
  5554                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  5555   0016A2  EE20 F001          	lfsr	2,1
  5556   0016A6  5011               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  5557   0016A8  26D9               	addwf	fsr2l,f,c
  5558   0016AA  5012               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  5559   0016AC  22DA               	addwfc	fsr2h,f,c
  5560   0016AE  6ADF               	clrf	indf2,c
  5561   0016B0                     
  5562                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  5563   0016B0  0E02               	movlw	2
  5564   0016B2  EFA4  F00B         	goto	l264
  5565   0016B6                     l2465:
  5566                           
  5567                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  5568   0016B6  EE20 F001          	lfsr	2,1
  5569   0016BA  5011               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  5570   0016BC  26D9               	addwf	fsr2l,f,c
  5571   0016BE  5012               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  5572   0016C0  22DA               	addwfc	fsr2h,f,c
  5573   0016C2  0E02               	movlw	2
  5574   0016C4  6EDF               	movwf	indf2,c
  5575   0016C6  EF36  F00B         	goto	l2449
  5576   0016CA                     l2471:
  5577                           
  5578                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  5579   0016CA  5013               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  5580   0016CC  B4D8               	btfsc	status,2,c
  5581   0016CE  EF6B  F00B         	goto	u1201
  5582   0016D2  EF6D  F00B         	goto	u1200
  5583   0016D6                     u1201:
  5584   0016D6  EFA3  F00B         	goto	l2485
  5585   0016DA                     u1200:
  5586   0016DA                     
  5587                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  5588   0016DA  EE20 F001          	lfsr	2,1
  5589   0016DE  5011               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  5590   0016E0  26D9               	addwf	fsr2l,f,c
  5591   0016E2  5012               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  5592   0016E4  22DA               	addwfc	fsr2h,f,c
  5593   0016E6  0E03               	movlw	3
  5594   0016E8  6EDF               	movwf	indf2,c
  5595   0016EA  EFA3  F00B         	goto	l2485
  5596   0016EE                     l2475:
  5597                           
  5598                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  5599   0016EE  C011  F007         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  5600   0016F2  C012  F008         	movff	DebounceFSMUpdate@antirrebote_boton_n+1,DebounceFSMInit@antirrebote_boton_n+1
  5601   0016F6  EC73  F00F         	call	_DebounceFSMInit	;wreg free
  5602   0016FA                     
  5603                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  5604   0016FA  0E00               	movlw	0
  5605   0016FC  EFA4  F00B         	goto	l264
  5606   001700                     l2483:
  5607   001700  EE20 F001          	lfsr	2,1
  5608   001704  5011               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  5609   001706  26D9               	addwf	fsr2l,f,c
  5610   001708  5012               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  5611   00170A  22DA               	addwfc	fsr2h,f,c
  5612   00170C  50DF               	movf	indf2,w,c
  5613   00170E  6E14               	movwf	??_DebounceFSMUpdate^0,c
  5614   001710  6A15               	clrf	(??_DebounceFSMUpdate+1)^0,c
  5615                           
  5616                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5617                           ; Switch size 1, requested type "simple"
  5618                           ; Number of cases is 1, Range of values is 0 to 0
  5619                           ; switch strategies available:
  5620                           ; Name         Instructions Cycles
  5621                           ; simple_byte            4     3 (average)
  5622                           ;	Chosen strategy is simple_byte
  5623   001712  5015               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  5624   001714  0A00               	xorlw	0	; case 0
  5625   001716  B4D8               	btfsc	status,2,c
  5626   001718  EF90  F00B         	goto	l2767
  5627   00171C  EF77  F00B         	goto	l2475
  5628   001720                     l2767:
  5629                           
  5630                           ; Switch size 1, requested type "simple"
  5631                           ; Number of cases is 4, Range of values is 0 to 3
  5632                           ; switch strategies available:
  5633                           ; Name         Instructions Cycles
  5634                           ; simple_byte           13     7 (average)
  5635                           ;	Chosen strategy is simple_byte
  5636   001720  5014               	movf	??_DebounceFSMUpdate^0,w,c
  5637   001722  0A00               	xorlw	0	; case 0
  5638   001724  B4D8               	btfsc	status,2,c
  5639   001726  EFFA  F00A         	goto	l2431
  5640   00172A  0A01               	xorlw	1	; case 1
  5641   00172C  B4D8               	btfsc	status,2,c
  5642   00172E  EF0C  F00B         	goto	l2435
  5643   001732  0A03               	xorlw	3	; case 2
  5644   001734  B4D8               	btfsc	status,2,c
  5645   001736  EF65  F00B         	goto	l2471
  5646   00173A  0A01               	xorlw	1	; case 3
  5647   00173C  B4D8               	btfsc	status,2,c
  5648   00173E  EF39  F00B         	goto	l2453
  5649   001742  EF77  F00B         	goto	l2475
  5650   001746                     l2485:
  5651                           
  5652                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  5653   001746  0E03               	movlw	3
  5654   001748                     l264:
  5655   001748  0012               	return		;funcret
  5656   00174A                     __end_of_DebounceFSMUpdate:
  5657                           	callstack 0
  5658                           
  5659 ;; *************** function _DelayRead *****************
  5660 ;; Defined at:
  5661 ;;		line 34 in file "drivers/scr/API_delay.c"
  5662 ;; Parameters:    Size  Location     Type
  5663 ;;  delay           2    2[COMRAM] PTR struct .
  5664 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;		None
  5667 ;; Return value:  Size  Location     Type
  5668 ;;                  1    wreg      _Bool 
  5669 ;; Registers used:
  5670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5671 ;; Tracked objects:
  5672 ;;		On entry : 0/0
  5673 ;;		On exit  : 0/0
  5674 ;;		Unchanged: 0/0
  5675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5678 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5679 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5680 ;;Total ram usage:       14 bytes
  5681 ;; Hardware stack levels used: 1
  5682 ;; Hardware stack levels required when called: 2
  5683 ;; This function calls:
  5684 ;;		_DelayIsRunning
  5685 ;; This function is called by:
  5686 ;;		_InicializoMRF24
  5687 ;;		_DebounceFSMUpdate
  5688 ;;		_main
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text35
  5693   001AEE                     __ptext35:
  5694                           	callstack 0
  5695   001AEE                     _DelayRead:
  5696                           	callstack 26
  5697   001AEE                     
  5698                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  5699   001AEE  C003  F001         	movff	DelayRead@delay,DelayIsRunning@delay
  5700   001AF2  C004  F002         	movff	DelayRead@delay+1,DelayIsRunning@delay+1
  5701   001AF6  ECA6  F010         	call	_DelayIsRunning	;wreg free
  5702   001AFA  0900               	iorlw	0
  5703   001AFC  A4D8               	btfss	status,2,c
  5704   001AFE  EF83  F00D         	goto	u781
  5705   001B02  EF85  F00D         	goto	u780
  5706   001B06                     u781:
  5707   001B06  EF9B  F00D         	goto	l2029
  5708   001B0A                     u780:
  5709   001B0A                     
  5710                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  5711   001B0A  C003  FFD9         	movff	DelayRead@delay,fsr2l
  5712   001B0E  C004  FFDA         	movff	DelayRead@delay+1,fsr2h
  5713   001B12  C0EA  FFDE         	movff	_timeStamp,postinc2
  5714   001B16  C0EB  FFDE         	movff	_timeStamp+1,postinc2
  5715   001B1A  C0EC  FFDE         	movff	_timeStamp+2,postinc2
  5716   001B1E  C0ED  FFDE         	movff	_timeStamp+3,postinc2
  5717   001B22                     
  5718                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  5719   001B22  EE20 F008          	lfsr	2,8
  5720   001B26  5003               	movf	DelayRead@delay^0,w,c
  5721   001B28  26D9               	addwf	fsr2l,f,c
  5722   001B2A  5004               	movf	(DelayRead@delay+1)^0,w,c
  5723   001B2C  22DA               	addwfc	fsr2h,f,c
  5724   001B2E  0E01               	movlw	1
  5725   001B30  6EDF               	movwf	indf2,c
  5726                           
  5727                           ;drivers/scr/API_delay.c: 40:  } else {
  5728   001B32  EFD3  F00D         	goto	l2037
  5729   001B36                     l2029:
  5730                           
  5731                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  5732   001B36  EE20 F004          	lfsr	2,4
  5733   001B3A  5003               	movf	DelayRead@delay^0,w,c
  5734   001B3C  26D9               	addwf	fsr2l,f,c
  5735   001B3E  5004               	movf	(DelayRead@delay+1)^0,w,c
  5736   001B40  22DA               	addwfc	fsr2h,f,c
  5737   001B42  C003  FFE1         	movff	DelayRead@delay,fsr1l
  5738   001B46  C004  FFE2         	movff	DelayRead@delay+1,fsr1h
  5739   001B4A  CFE6 F009          	movff	postinc1,??_DelayRead+4
  5740   001B4E  CFE6 F00A          	movff	postinc1,??_DelayRead+5
  5741   001B52  CFE6 F00B          	movff	postinc1,??_DelayRead+6
  5742   001B56  CFE6 F00C          	movff	postinc1,??_DelayRead+7
  5743   001B5A  5009               	movf	(??_DelayRead+4)^0,w,c
  5744   001B5C  0100               	movlb	0	; () banked
  5745   001B5E  5DEA               	subwf	_timeStamp& (0+255),w,b
  5746   001B60  6E0D               	movwf	(??_DelayRead+8)^0,c
  5747   001B62  500A               	movf	(??_DelayRead+5)^0,w,c
  5748   001B64  59EB               	subwfb	(_timeStamp+1)& (0+255),w,b
  5749   001B66  6E0E               	movwf	(??_DelayRead+9)^0,c
  5750   001B68  500B               	movf	(??_DelayRead+6)^0,w,c
  5751   001B6A  59EC               	subwfb	(_timeStamp+2)& (0+255),w,b
  5752   001B6C  6E0F               	movwf	(??_DelayRead+10)^0,c
  5753   001B6E  500C               	movf	(??_DelayRead+7)^0,w,c
  5754   001B70  59ED               	subwfb	(_timeStamp+3)& (0+255),w,b
  5755   001B72  6E10               	movwf	(??_DelayRead+11)^0,c
  5756   001B74  50DE               	movf	postinc2,w,c
  5757   001B76  5C0D               	subwf	(??_DelayRead+8)^0,w,c
  5758   001B78  50DE               	movf	postinc2,w,c
  5759   001B7A  580E               	subwfb	(??_DelayRead+9)^0,w,c
  5760   001B7C  50DE               	movf	postinc2,w,c
  5761   001B7E  580F               	subwfb	(??_DelayRead+10)^0,w,c
  5762   001B80  50DE               	movf	postinc2,w,c
  5763   001B82  5810               	subwfb	(??_DelayRead+11)^0,w,c
  5764   001B84  A0D8               	btfss	status,0,c
  5765   001B86  EFC7  F00D         	goto	u791
  5766   001B8A  EFC9  F00D         	goto	u790
  5767   001B8E                     u791:
  5768   001B8E  EFD3  F00D         	goto	l2037
  5769   001B92                     u790:
  5770   001B92                     
  5771                           ; BSR set to: 0
  5772                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  5773   001B92  EE20 F008          	lfsr	2,8
  5774   001B96  5003               	movf	DelayRead@delay^0,w,c
  5775   001B98  26D9               	addwf	fsr2l,f,c
  5776   001B9A  5004               	movf	(DelayRead@delay+1)^0,w,c
  5777   001B9C  22DA               	addwfc	fsr2h,f,c
  5778   001B9E  6ADF               	clrf	indf2,c
  5779   001BA0                     
  5780                           ; BSR set to: 0
  5781                           ;drivers/scr/API_delay.c: 45:    return 1;
  5782   001BA0  0E01               	movlw	1
  5783   001BA2  EFD4  F00D         	goto	l238
  5784   001BA6                     l2037:
  5785                           
  5786                           ;drivers/scr/API_delay.c: 48:  return 0;
  5787   001BA6  0E00               	movlw	0
  5788   001BA8                     l238:
  5789   001BA8  0012               	return		;funcret
  5790   001BAA                     __end_of_DelayRead:
  5791                           	callstack 0
  5792                           
  5793 ;; *************** function _DelayIsRunning *****************
  5794 ;; Defined at:
  5795 ;;		line 83 in file "drivers/scr/API_delay.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  delay           2    0[COMRAM] PTR struct .
  5798 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      _Bool 
  5803 ;; Registers used:
  5804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;Total ram usage:        2 bytes
  5815 ;; Hardware stack levels used: 1
  5816 ;; Hardware stack levels required when called: 1
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_DelayRead
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text36
  5825   00214C                     __ptext36:
  5826                           	callstack 0
  5827   00214C                     _DelayIsRunning:
  5828                           	callstack 26
  5829   00214C                     
  5830                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  5831   00214C  EE20 F008          	lfsr	2,8
  5832   002150  5001               	movf	DelayIsRunning@delay^0,w,c
  5833   002152  26D9               	addwf	fsr2l,f,c
  5834   002154  5002               	movf	(DelayIsRunning@delay+1)^0,w,c
  5835   002156  22DA               	addwfc	fsr2h,f,c
  5836   002158  50DF               	movf	indf2,w,c
  5837   00215A  0012               	return		;funcret
  5838   00215C                     __end_of_DelayIsRunning:
  5839                           	callstack 0
  5840                           
  5841 ;; *************** function _DebounceFSMInit *****************
  5842 ;; Defined at:
  5843 ;;		line 19 in file "drivers/scr/API_debounce.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  antirrebote_    2    6[COMRAM] PTR struct .
  5846 ;;		 -> main@boton1(11), 
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;		None
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  1    wreg      void 
  5851 ;; Registers used:
  5852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;Total ram usage:        2 bytes
  5863 ;; Hardware stack levels used: 1
  5864 ;; Hardware stack levels required when called: 2
  5865 ;; This function calls:
  5866 ;;		_DelayInit
  5867 ;; This function is called by:
  5868 ;;		_DebounceFSMUpdate
  5869 ;;		_main
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text37
  5874   001EE6                     __ptext37:
  5875                           	callstack 0
  5876   001EE6                     _DebounceFSMInit:
  5877                           	callstack 27
  5878   001EE6                     
  5879                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  5880   001EE6  EE20 F001          	lfsr	2,1
  5881   001EEA  5007               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5882   001EEC  26D9               	addwf	fsr2l,f,c
  5883   001EEE  5008               	movf	(DebounceFSMInit@antirrebote_boton_n+1)^0,w,c
  5884   001EF0  22DA               	addwfc	fsr2h,f,c
  5885   001EF2  6ADF               	clrf	indf2,c
  5886   001EF4                     
  5887                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  5888   001EF4  0E02               	movlw	2
  5889   001EF6  2407               	addwf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5890   001EF8  6E01               	movwf	DelayInit@delay^0,c
  5891   001EFA  0E00               	movlw	0
  5892   001EFC  2008               	addwfc	(DebounceFSMInit@antirrebote_boton_n+1)^0,w,c
  5893   001EFE  6E02               	movwf	(DelayInit@delay+1)^0,c
  5894   001F00  0E28               	movlw	40
  5895   001F02  6E03               	movwf	DelayInit@duration^0,c
  5896   001F04  0E00               	movlw	0
  5897   001F06  6E04               	movwf	(DelayInit@duration+1)^0,c
  5898   001F08  0E00               	movlw	0
  5899   001F0A  6E05               	movwf	(DelayInit@duration+2)^0,c
  5900   001F0C  0E00               	movlw	0
  5901   001F0E  6E06               	movwf	(DelayInit@duration+3)^0,c
  5902   001F10  EC0D  F010         	call	_DelayInit	;wreg free
  5903   001F14                     
  5904                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  5905   001F14  C007  FFD9         	movff	DebounceFSMInit@antirrebote_boton_n,fsr2l
  5906   001F18  C008  FFDA         	movff	DebounceFSMInit@antirrebote_boton_n+1,fsr2h
  5907   001F1C  6ADF               	clrf	indf2,c
  5908   001F1E  0012               	return		;funcret
  5909   001F20                     __end_of_DebounceFSMInit:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function _DelayInit *****************
  5913 ;; Defined at:
  5914 ;;		line 22 in file "drivers/scr/API_delay.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  delay           2    0[COMRAM] PTR struct .
  5917 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5918 ;;  duration        4    2[COMRAM] unsigned long 
  5919 ;; Auto vars:     Size  Location     Type
  5920 ;;		None
  5921 ;; Return value:  Size  Location     Type
  5922 ;;                  1    wreg      void 
  5923 ;; Registers used:
  5924 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5925 ;; Tracked objects:
  5926 ;;		On entry : 0/0
  5927 ;;		On exit  : 0/0
  5928 ;;		Unchanged: 0/0
  5929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5930 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;Total ram usage:        6 bytes
  5935 ;; Hardware stack levels used: 1
  5936 ;; Hardware stack levels required when called: 1
  5937 ;; This function calls:
  5938 ;;		Nothing
  5939 ;; This function is called by:
  5940 ;;		_InicializoMRF24
  5941 ;;		_DebounceFSMInit
  5942 ;;		_main
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text38
  5947   00201A                     __ptext38:
  5948                           	callstack 0
  5949   00201A                     _DelayInit:
  5950                           	callstack 27
  5951   00201A                     
  5952                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  5953   00201A  EE20 F004          	lfsr	2,4
  5954   00201E  5001               	movf	DelayInit@delay^0,w,c
  5955   002020  26D9               	addwf	fsr2l,f,c
  5956   002022  5002               	movf	(DelayInit@delay+1)^0,w,c
  5957   002024  22DA               	addwfc	fsr2h,f,c
  5958   002026  C003  FFDE         	movff	DelayInit@duration,postinc2
  5959   00202A  C004  FFDE         	movff	DelayInit@duration+1,postinc2
  5960   00202E  C005  FFDE         	movff	DelayInit@duration+2,postinc2
  5961   002032  C006  FFDE         	movff	DelayInit@duration+3,postinc2
  5962                           
  5963                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  5964   002036  EE20 F008          	lfsr	2,8
  5965   00203A  5001               	movf	DelayInit@delay^0,w,c
  5966   00203C  26D9               	addwf	fsr2l,f,c
  5967   00203E  5002               	movf	(DelayInit@delay+1)^0,w,c
  5968   002040  22DA               	addwfc	fsr2h,f,c
  5969   002042  6ADF               	clrf	indf2,c
  5970   002044  0012               	return		;funcret
  5971   002046                     __end_of_DelayInit:
  5972                           	callstack 0
  5973                           
  5974 ;; *************** function _BoardInit *****************
  5975 ;; Defined at:
  5976 ;;		line 21 in file "hardware_config.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;		None
  5979 ;; Auto vars:     Size  Location     Type
  5980 ;;		None
  5981 ;; Return value:  Size  Location     Type
  5982 ;;                  1    wreg      void 
  5983 ;; Registers used:
  5984 ;;		wreg, status,2, cstack
  5985 ;; Tracked objects:
  5986 ;;		On entry : 0/0
  5987 ;;		On exit  : 0/0
  5988 ;;		Unchanged: 0/0
  5989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5994 ;;Total ram usage:        0 bytes
  5995 ;; Hardware stack levels used: 1
  5996 ;; Hardware stack levels required when called: 2
  5997 ;; This function calls:
  5998 ;;		_SPIInit
  5999 ;; This function is called by:
  6000 ;;		_main
  6001 ;; This function uses a non-reentrant model
  6002 ;;
  6003                           
  6004                           	psect	text39
  6005   001CF4                     __ptext39:
  6006                           	callstack 0
  6007   001CF4                     _BoardInit:
  6008                           	callstack 28
  6009   001CF4                     
  6010                           ;hardware_config.c: 23:     PORTA = 0;
  6011   001CF4  6A80               	clrf	128,c	;volatile
  6012                           
  6013                           ;hardware_config.c: 24:     PORTB = 0;
  6014   001CF6  6A81               	clrf	129,c	;volatile
  6015                           
  6016                           ;hardware_config.c: 25:     PORTC = 0;
  6017   001CF8  6A82               	clrf	130,c	;volatile
  6018                           
  6019                           ;hardware_config.c: 26:     PORTD = 0;
  6020   001CFA  6A83               	clrf	131,c	;volatile
  6021                           
  6022                           ;hardware_config.c: 27:     PORTE = 0;
  6023   001CFC  6A84               	clrf	132,c	;volatile
  6024                           
  6025                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  6026   001CFE  8C93               	bsf	147,6,c	;volatile
  6027                           
  6028                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  6029   001D00  8E93               	bsf	147,7,c	;volatile
  6030                           
  6031                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  6032   001D02  9496               	bcf	150,2,c	;volatile
  6033                           
  6034                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  6035   001D04  9096               	bcf	150,0,c	;volatile
  6036                           
  6037                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  6038   001D06  9296               	bcf	150,1,c	;volatile
  6039                           
  6040                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  6041   001D08  8494               	bsf	148,2,c	;volatile
  6042                           
  6043                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  6044   001D0A  848D               	bsf	141,2,c	;volatile
  6045                           
  6046                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  6047   001D0C  808D               	bsf	141,0,c	;volatile
  6048                           
  6049                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  6050   001D0E  828D               	bsf	141,1,c	;volatile
  6051                           
  6052                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  6053   001D10  8093               	bsf	147,0,c	;volatile
  6054                           
  6055                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  6056   001D12  9C94               	bcf	148,6,c	;volatile
  6057                           
  6058                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  6059   001D14  9E94               	bcf	148,7,c	;volatile
  6060                           
  6061                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  6062   001D16  9895               	bcf	149,4,c	;volatile
  6063                           
  6064                           ;hardware_config.c: 45:     IPEN = 0;
  6065   001D18  9ED0               	bcf	4048,7,c	;volatile
  6066                           
  6067                           ;hardware_config.c: 46:  GIE = 1;
  6068   001D1A  8EF2               	bsf	4082,7,c	;volatile
  6069                           
  6070                           ;hardware_config.c: 47:  PEIE = 1;
  6071   001D1C  8CF2               	bsf	4082,6,c	;volatile
  6072                           
  6073                           ;hardware_config.c: 48:     INT0E = 0;
  6074   001D1E  98F2               	bcf	4082,4,c	;volatile
  6075                           
  6076                           ;hardware_config.c: 49:  RBIE = 0;
  6077   001D20  96F2               	bcf	4082,3,c	;volatile
  6078                           
  6079                           ;hardware_config.c: 50:  T0IE = 0;
  6080   001D22  9AF2               	bcf	4082,5,c	;volatile
  6081                           
  6082                           ;hardware_config.c: 51:  TMR1IE = 1;
  6083   001D24  809D               	bsf	3997,0,c	;volatile
  6084                           
  6085                           ;hardware_config.c: 52:  TMR2IE = 0;
  6086   001D26  929D               	bcf	3997,1,c	;volatile
  6087                           
  6088                           ;hardware_config.c: 53:  CCP1IE = 0;
  6089   001D28  949D               	bcf	3997,2,c	;volatile
  6090                           
  6091                           ;hardware_config.c: 54:  CCP2IE = 0;
  6092   001D2A  90A0               	bcf	4000,0,c	;volatile
  6093                           
  6094                           ;hardware_config.c: 55:  EEIE = 0;
  6095   001D2C  98A0               	bcf	4000,4,c	;volatile
  6096                           
  6097                           ;hardware_config.c: 56:  SSPIE = 0;
  6098   001D2E  969D               	bcf	3997,3,c	;volatile
  6099                           
  6100                           ;hardware_config.c: 57:  BCLIE = 0;
  6101   001D30  96A0               	bcf	4000,3,c	;volatile
  6102                           
  6103                           ;hardware_config.c: 58:  ADIE = 0;
  6104   001D32  9C9D               	bcf	3997,6,c	;volatile
  6105                           
  6106                           ;hardware_config.c: 59:  RBIE = 0;
  6107   001D34  96F2               	bcf	4082,3,c	;volatile
  6108                           
  6109                           ;hardware_config.c: 60:  RCIE = 0;
  6110   001D36  9A9D               	bcf	3997,5,c	;volatile
  6111   001D38                     
  6112                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  6113   001D38  0E72               	movlw	114
  6114   001D3A  6ED3               	movwf	211,c	;volatile
  6115                           
  6116                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  6117   001D3C  0EDF               	movlw	223
  6118   001D3E  6E9B               	movwf	155,c	;volatile
  6119   001D40                     
  6120                           ;hardware_config.c: 63:     RBPU = 1;
  6121   001D40  8EF1               	bsf	4081,7,c	;volatile
  6122   001D42                     
  6123                           ;hardware_config.c: 66:     T1RD16 = 0;
  6124   001D42  9ECD               	bcf	4045,7,c	;volatile
  6125   001D44                     
  6126                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  6127   001D44  88CD               	bsf	4045,4,c	;volatile
  6128   001D46                     
  6129                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  6130   001D46  8ACD               	bsf	4045,5,c	;volatile
  6131   001D48                     
  6132                           ;hardware_config.c: 69:  T1SYNC = 0;
  6133   001D48  94CD               	bcf	4045,2,c	;volatile
  6134   001D4A                     
  6135                           ;hardware_config.c: 70:  T1OSCEN = 0;
  6136   001D4A  96CD               	bcf	4045,3,c	;volatile
  6137   001D4C                     
  6138                           ;hardware_config.c: 71:  TMR1CS = 0;
  6139   001D4C  92CD               	bcf	4045,1,c	;volatile
  6140   001D4E                     
  6141                           ;hardware_config.c: 72:  TMR1ON = 1;
  6142   001D4E  80CD               	bsf	4045,0,c	;volatile
  6143   001D50                     
  6144                           ;hardware_config.c: 75:     SPIInit();
  6145   001D50  EC7B  F010         	call	_SPIInit	;wreg free
  6146   001D54  0012               	return		;funcret
  6147   001D56                     __end_of_BoardInit:
  6148                           	callstack 0
  6149                           
  6150 ;; *************** function _SPIInit *****************
  6151 ;; Defined at:
  6152 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  6153 ;; Parameters:    Size  Location     Type
  6154 ;;		None
  6155 ;; Auto vars:     Size  Location     Type
  6156 ;;		None
  6157 ;; Return value:  Size  Location     Type
  6158 ;;                  1    wreg      void 
  6159 ;; Registers used:
  6160 ;;		wreg, status,2
  6161 ;; Tracked objects:
  6162 ;;		On entry : 0/0
  6163 ;;		On exit  : 0/0
  6164 ;;		Unchanged: 0/0
  6165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6170 ;;Total ram usage:        0 bytes
  6171 ;; Hardware stack levels used: 1
  6172 ;; Hardware stack levels required when called: 1
  6173 ;; This function calls:
  6174 ;;		Nothing
  6175 ;; This function is called by:
  6176 ;;		_BoardInit
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	text40
  6181   0020F6                     __ptext40:
  6182                           	callstack 0
  6183   0020F6                     _SPIInit:
  6184                           	callstack 28
  6185   0020F6                     
  6186                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  6187   0020F6  9694               	bcf	148,3,c	;volatile
  6188                           
  6189                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  6190   0020F8  9A94               	bcf	148,5,c	;volatile
  6191                           
  6192                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  6193   0020FA  8894               	bsf	148,4,c	;volatile
  6194                           
  6195                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  6196   0020FC  8EC7               	bsf	199,7,c	;volatile
  6197                           
  6198                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  6199   0020FE  8CC7               	bsf	199,6,c	;volatile
  6200   002100                     
  6201                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  6202   002100  0E01               	movlw	1
  6203   002102  6EC6               	movwf	198,c	;volatile
  6204   002104                     
  6205                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  6206   002104  8EC6               	bsf	198,7,c	;volatile
  6207   002106                     
  6208                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  6209   002106  9CC6               	bcf	198,6,c	;volatile
  6210   002108                     
  6211                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  6212   002108  8AC6               	bsf	198,5,c	;volatile
  6213   00210A                     
  6214                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  6215   00210A  98C6               	bcf	198,4,c	;volatile
  6216   00210C  0012               	return		;funcret
  6217   00210E                     __end_of_SPIInit:
  6218                           	callstack 0
  6219                           
  6220 ;; *************** function _isr *****************
  6221 ;; Defined at:
  6222 ;;		line 5 in file "drivers/inc/interrupciones.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;		None
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      void 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;Total ram usage:        0 bytes
  6241 ;; Hardware stack levels used: 1
  6242 ;; This function calls:
  6243 ;;		Nothing
  6244 ;; This function is called by:
  6245 ;;		Interrupt level 2
  6246 ;; This function uses a non-reentrant model
  6247 ;;
  6248                           
  6249                           	psect	intcode
  6250   000008                     __pintcode:
  6251                           	callstack 0
  6252   000008                     _isr:
  6253                           	callstack 23
  6254                           
  6255                           ;incstack = 0
  6256   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6257   00000A                     
  6258                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  6259   00000A  A09D               	btfss	3997,0,c	;volatile
  6260   00000C  EF0A  F000         	goto	i2u137_41
  6261   000010  EF0C  F000         	goto	i2u137_40
  6262   000014                     i2u137_41:
  6263   000014  EF1F  F000         	goto	i2l447
  6264   000018                     i2u137_40:
  6265   000018  A09E               	btfss	3998,0,c	;volatile
  6266   00001A  EF11  F000         	goto	i2u138_41
  6267   00001E  EF13  F000         	goto	i2u138_40
  6268   000022                     i2u138_41:
  6269   000022  EF1F  F000         	goto	i2l447
  6270   000026                     i2u138_40:
  6271   000026                     
  6272                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  6273   000026  909E               	bcf	3998,0,c	;volatile
  6274   000028                     
  6275                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  6276   000028  0EF7               	movlw	247
  6277   00002A  6ECE               	movwf	206,c	;volatile
  6278                           
  6279                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  6280   00002C  0EFD               	movlw	253
  6281   00002E  6ECF               	movwf	207,c	;volatile
  6282   000030                     
  6283                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  6284   000030  0E01               	movlw	1
  6285   000032  0100               	movlb	0	; () banked
  6286   000034  27EA               	addwf	_timeStamp& (0+255),f,b
  6287   000036  0E00               	movlw	0
  6288   000038  23EB               	addwfc	(_timeStamp+1)& (0+255),f,b
  6289   00003A  23EC               	addwfc	(_timeStamp+2)& (0+255),f,b
  6290   00003C  23ED               	addwfc	(_timeStamp+3)& (0+255),f,b
  6291   00003E                     i2l447:
  6292   00003E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6293   000040  0011               	retfie		f
  6294   000042                     __end_of_isr:
  6295                           	callstack 0
  6296                           
  6297                           	psect	rparam
  6298   000001                     ___rparam_used  equ	1
  6299   000000                     ___param_bank   equ	0
  6300   000000                     __Lparam        equ	__Lrparam
  6301   000000                     __Hparam        equ	__Hrparam
  6302                           
  6303                           	psect	temp
  6304   00005F                     btemp:
  6305                           	callstack 0
  6306   00005F                     	ds	1
  6307   00005F                     int$flags       set	btemp
  6308   000060                     wtemp8          set	btemp+1
  6309   000060                     ttemp5          set	btemp+1
  6310   000063                     ttemp6          set	btemp+4
  6311   000067                     ttemp7          set	btemp+8
  6312                           
  6313                           	psect	idloc
  6314                           
  6315                           ;Config register IDLOC0 @ 0x200000
  6316                           ;	unspecified, using default values
  6317   200000                     	org	2097152
  6318   200000  FF                 	db	255
  6319                           
  6320                           ;Config register IDLOC1 @ 0x200001
  6321                           ;	unspecified, using default values
  6322   200001                     	org	2097153
  6323   200001  FF                 	db	255
  6324                           
  6325                           ;Config register IDLOC2 @ 0x200002
  6326                           ;	unspecified, using default values
  6327   200002                     	org	2097154
  6328   200002  FF                 	db	255
  6329                           
  6330                           ;Config register IDLOC3 @ 0x200003
  6331                           ;	unspecified, using default values
  6332   200003                     	org	2097155
  6333   200003  FF                 	db	255
  6334                           
  6335                           ;Config register IDLOC4 @ 0x200004
  6336                           ;	unspecified, using default values
  6337   200004                     	org	2097156
  6338   200004  FF                 	db	255
  6339                           
  6340                           ;Config register IDLOC5 @ 0x200005
  6341                           ;	unspecified, using default values
  6342   200005                     	org	2097157
  6343   200005  FF                 	db	255
  6344                           
  6345                           ;Config register IDLOC6 @ 0x200006
  6346                           ;	unspecified, using default values
  6347   200006                     	org	2097158
  6348   200006  FF                 	db	255
  6349                           
  6350                           ;Config register IDLOC7 @ 0x200007
  6351                           ;	unspecified, using default values
  6352   200007                     	org	2097159
  6353   200007  FF                 	db	255
  6354                           
  6355                           	psect	config
  6356                           
  6357                           ; Padding undefined space
  6358   300000                     	org	3145728
  6359   300000  FF                 	db	255
  6360                           
  6361                           ;Config register CONFIG1H @ 0x300001
  6362                           ;	Oscillator Selection bits
  6363                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  6364                           ;	Fail-Safe Clock Monitor Enable bit
  6365                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6366                           ;	Internal/External Oscillator Switchover bit
  6367                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6368   300001                     	org	3145729
  6369   300001  08                 	db	8
  6370                           
  6371                           ;Config register CONFIG2L @ 0x300002
  6372                           ;	Power-up Timer Enable bit
  6373                           ;	PWRT = 0x1, unprogrammed default
  6374                           ;	Brown-out Reset Enable bits
  6375                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6376                           ;	Brown Out Reset Voltage bits
  6377                           ;	BORV = 22, VBOR set to 2.2 V nominal
  6378   300002                     	org	3145730
  6379   300002  11                 	db	17
  6380                           
  6381                           ;Config register CONFIG2H @ 0x300003
  6382                           ;	Watchdog Timer Enable bit
  6383                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  6384                           ;	Watchdog Timer Postscale Select bits
  6385                           ;	WDTPS = 8192, 1:8192
  6386   300003                     	org	3145731
  6387   300003  1A                 	db	26
  6388                           
  6389                           ; Padding undefined space
  6390   300004                     	org	3145732
  6391   300004  FF                 	db	255
  6392                           
  6393                           ;Config register CONFIG3H @ 0x300005
  6394                           ;	CCP2 MUX bit
  6395                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6396                           ;	PORTB A/D Enable bit
  6397                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6398                           ;	Low-Power Timer1 Oscillator Enable bit
  6399                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6400                           ;	HFINTOSC Fast Start-up
  6401                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  6402                           ;	MCLR Pin Enable bit
  6403                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  6404   300005                     	org	3145733
  6405   300005  01                 	db	1
  6406                           
  6407                           ;Config register CONFIG4L @ 0x300006
  6408                           ;	Stack Full/Underflow Reset Enable bit
  6409                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  6410                           ;	Single-Supply ICSP Enable bit
  6411                           ;	LVP = OFF, Single-Supply ICSP disabled
  6412                           ;	Extended Instruction Set Enable bit
  6413                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6414                           ;	Background Debugger Enable bit
  6415                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6416   300006                     	org	3145734
  6417   300006  80                 	db	128
  6418                           
  6419                           ; Padding undefined space
  6420   300007                     	org	3145735
  6421   300007  FF                 	db	255
  6422                           
  6423                           ;Config register CONFIG5L @ 0x300008
  6424                           ;	Code Protection Block 0
  6425                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6426                           ;	Code Protection Block 1
  6427                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6428                           ;	Code Protection Block 2
  6429                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6430                           ;	Code Protection Block 3
  6431                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6432   300008                     	org	3145736
  6433   300008  0F                 	db	15
  6434                           
  6435                           ;Config register CONFIG5H @ 0x300009
  6436                           ;	Boot Block Code Protection bit
  6437                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6438                           ;	Data EEPROM Code Protection bit
  6439                           ;	CPD = OFF, Data EEPROM not code-protected
  6440   300009                     	org	3145737
  6441   300009  C0                 	db	192
  6442                           
  6443                           ;Config register CONFIG6L @ 0x30000A
  6444                           ;	Write Protection Block 0
  6445                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6446                           ;	Write Protection Block 1
  6447                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6448                           ;	Write Protection Block 2
  6449                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6450                           ;	Write Protection Block 3
  6451                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  6452   30000A                     	org	3145738
  6453   30000A  0F                 	db	15
  6454                           
  6455                           ;Config register CONFIG6H @ 0x30000B
  6456                           ;	Configuration Register Write Protection bit
  6457                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6458                           ;	Boot Block Write Protection bit
  6459                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6460                           ;	Data EEPROM Write Protection bit
  6461                           ;	WRTD = OFF, Data EEPROM not write-protected
  6462   30000B                     	org	3145739
  6463   30000B  E0                 	db	224
  6464                           
  6465                           ;Config register CONFIG7L @ 0x30000C
  6466                           ;	unspecified, using default values
  6467                           ;	Table Read Protection Block 0
  6468                           ;	EBTR0 = 0x1, unprogrammed default
  6469                           ;	Table Read Protection Block 1
  6470                           ;	EBTR1 = 0x1, unprogrammed default
  6471                           ;	Table Read Protection Block 2
  6472                           ;	EBTR2 = 0x1, unprogrammed default
  6473                           ;	Table Read Protection Block 3
  6474                           ;	EBTR3 = 0x1, unprogrammed default
  6475   30000C                     	org	3145740
  6476   30000C  0F                 	db	15
  6477                           
  6478                           ;Config register CONFIG7H @ 0x30000D
  6479                           ;	Boot Block Table Read Protection bit
  6480                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6481   30000D                     	org	3145741
  6482   30000D  40                 	db	64
  6483                           tosu	equ	0xFFF
  6484                           tosh	equ	0xFFE
  6485                           tosl	equ	0xFFD
  6486                           stkptr	equ	0xFFC
  6487                           pclatu	equ	0xFFB
  6488                           pclath	equ	0xFFA
  6489                           pcl	equ	0xFF9
  6490                           tblptru	equ	0xFF8
  6491                           tblptrh	equ	0xFF7
  6492                           tblptrl	equ	0xFF6
  6493                           tablat	equ	0xFF5
  6494                           prodh	equ	0xFF4
  6495                           prodl	equ	0xFF3
  6496                           indf0	equ	0xFEF
  6497                           postinc0	equ	0xFEE
  6498                           postdec0	equ	0xFED
  6499                           preinc0	equ	0xFEC
  6500                           plusw0	equ	0xFEB
  6501                           fsr0h	equ	0xFEA
  6502                           fsr0l	equ	0xFE9
  6503                           wreg	equ	0xFE8
  6504                           indf1	equ	0xFE7
  6505                           postinc1	equ	0xFE6
  6506                           postdec1	equ	0xFE5
  6507                           preinc1	equ	0xFE4
  6508                           plusw1	equ	0xFE3
  6509                           fsr1h	equ	0xFE2
  6510                           fsr1l	equ	0xFE1
  6511                           bsr	equ	0xFE0
  6512                           indf2	equ	0xFDF
  6513                           postinc2	equ	0xFDE
  6514                           postdec2	equ	0xFDD
  6515                           preinc2	equ	0xFDC
  6516                           plusw2	equ	0xFDB
  6517                           fsr2h	equ	0xFDA
  6518                           fsr2l	equ	0xFD9
  6519                           status	equ	0xFD8

Data Sizes:
    Strings     42
    Constant    24
    Data        113
    BSS         864
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      94
    BANK0           160    138     142
    BANK1           256    211     243
    BANK2           256    155     230
    BANK3           256      0     190
    BANK4           256      0     134
    BANK5           256      0     135
    BANK6           256      0     135
    BANK7           256      0     135
    BANK8           256      0     135
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(2) Largest target is 11
		 -> main@boton1(BANK2[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(2) Largest target is 11
		 -> main@boton1(BANK2[11]), 

    DelayInit@delay	PTR struct . size(2) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(BANK2[11]), main@delay_parpadeo(BANK2[9]), 

    DelayIsRunning@delay	PTR struct . size(2) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(BANK2[11]), main@delay_parpadeo(BANK2[9]), 

    DelayRead@delay	PTR struct . size(2) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(BANK2[11]), main@delay_parpadeo(BANK2[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), 

    main@mrf24_data_in	PTR struct . size(2) Largest target is 134
		 -> data_in_s(BANK4[134]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 135
		 -> cierro_configuracion@data_out_s(BANK0[135]), configuro_mrf@buuf(BANK1[43]), configuro_mrf@data_config_s(BANK1[32]), configuro_mrf@data_out_s(BANK1[135]), 
		 -> configuro_sistema@buuf(COMRAM[70]), configuro_sistema@data_out_s(BANK1[135]), data_config_s(BANK1[32]), 

    memcpy@d1	PTR void  size(2) Largest target is 135
		 -> cierro_configuracion@data_out_s(BANK0[135]), configuro_mrf@buuf(BANK1[43]), configuro_mrf@data_config_s(BANK1[32]), configuro_mrf@data_out_s(BANK1[135]), 
		 -> configuro_sistema@buuf(COMRAM[70]), configuro_sistema@data_out_s(BANK1[135]), data_config_s(BANK1[32]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 70
		 -> configuro_mrf@buuf(BANK1[43]), configuro_mrf@data_config_s(BANK1[32]), configuro_sistema@buuf(COMRAM[70]), configuro_sistema@config_sistema(BANK0[60]), 
		 -> default_mac_address(CODE[8]), default_security_key(CODE[16]), STR_1(CODE[6]), STR_3(CODE[7]), 
		 -> STR_9(CODE[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 70
		 -> configuro_mrf@buuf(BANK1[43]), configuro_mrf@data_config_s(BANK1[32]), configuro_sistema@buuf(COMRAM[70]), configuro_sistema@config_sistema(BANK0[60]), 
		 -> default_mac_address(CODE[8]), default_security_key(CODE[16]), STR_1(CODE[6]), STR_3(CODE[7]), 
		 -> STR_9(CODE[8]), 

    MRF24TransmitirDato@p_info_out_s	PTR struct . size(2) Largest target is 135
		 -> cierro_configuracion@data_out_s(BANK0[135]), configuro_mrf@data_out_s(BANK1[135]), configuro_sistema@data_out_s(BANK1[135]), 

    sp__memcpy	PTR void  size(2) Largest target is 135
		 -> cierro_configuracion@data_out_s(BANK0[135]), configuro_mrf@buuf(BANK1[43]), configuro_mrf@data_config_s(BANK1[32]), configuro_mrf@data_out_s(BANK1[135]), 
		 -> configuro_sistema@buuf(COMRAM[70]), configuro_sistema@data_out_s(BANK1[135]), data_config_s(BANK1[32]), 

    sp__MRF24GetDataIn	PTR struct . size(2) Largest target is 134
		 -> data_in_s(BANK4[134]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 60
		 -> configuro_sistema@config_sistema(BANK0[60]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 60
		 -> configuro_sistema@config_sistema(BANK0[60]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 60
		 -> configuro_sistema@config_sistema(BANK0[60]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_5(CODE[10]), STR_6(CODE[3]), STR_7(CODE[8]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 70
		 -> configuro_mrf@buuf(BANK1[43]), configuro_sistema@buuf(COMRAM[70]), STR_2(CODE[6]), STR_4(CODE[7]), 
		 -> STR_8(CODE[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 70
		 -> configuro_mrf@buuf(BANK1[43]), configuro_sistema@buuf(COMRAM[70]), STR_2(CODE[6]), STR_4(CODE[7]), 
		 -> STR_8(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_envio
    _envio->_configuro_sistema
    _configuro_sistema->_MRF24TransmitirDato
    _configuro_mrf->_MRF24TransmitirDato
    _cierro_configuracion->_MRF24TransmitirDato
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_InicializoMRF24
    _InicializoVariables->_memcpy
    _memcpy->_strlen
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _InicializoMRF24->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _GetShortAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _GetLongAddr->_Write2ByteSPIPort
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _envio->_cierro_configuracion

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _envio->_configuro_mrf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               159   159      0   10303
                                            136 BANK0      2     2      0
                                              0 BANK2    155   155      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
                     _MRF24GetDataIn
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
                              _envio
 ---------------------------------------------------------------------------------
 (1) _envio                                                2     2      0    5453
                                             90 COMRAM     2     2      0
               _cierro_configuracion
                      _configuro_mrf
                  _configuro_sistema
 ---------------------------------------------------------------------------------
 (2) _configuro_sistema                                  267   267      0    1907
                                             19 COMRAM    71    71      0
                                              0 BANK0     61    61      0
                                              0 BANK1    135   135      0
                _MRF24TransmitirDato
                             _memcpy
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     2      2      79
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _configuro_mrf                                      212   212      0    1903
                                             19 COMRAM     1     1      0
                                              0 BANK1    211   211      0
                _MRF24TransmitirDato
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _cierro_configuracion                               196   196      0    1643
                                              0 BANK0    136   136      0
                _MRF24TransmitirDato
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2      95
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _MRF24TransmitirDato                                  9     7      2    1188
                                             10 COMRAM     9     7      2
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   8     8      0     972
                                             10 COMRAM     8     8      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         1     1      0    2557
                                             28 COMRAM     1     1      0
                    _InicializoMRF24
                    _InicializoPines
                _InicializoVariables
                        _SetResetPin
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  0     0      0     176
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              11     5      6     176
                                              4 COMRAM    11     5      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      87
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InicializoMRF24                                     12    12      0    2265
                                             16 COMRAM    12    12      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceMACAddress                                  1     1      0     279
                                              4 COMRAM     1     1      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetChannel                                           1     1      0     487
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (4) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (4) _SetLongAddr                                          5     2      3     298
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (5) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     200
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (5) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (6) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (6) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetDataIn                                       2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    5     2      3     610
                                             16 COMRAM     5     2      3
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (3) _DelayRead                                           14    12      2     160
                                              2 COMRAM    14    12      2
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (4) _DelayIsRunning                                       2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      2     0      2     140
                                              6 COMRAM     2     0      2
                          _DelayInit
 ---------------------------------------------------------------------------------
 (3) _DelayInit                                            6     0      6      72
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24GetDataIn
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _InicializoMRF24
       _DelayInit
       _DelayRead
       _DelayReset
       _GetLongAddr
         _ReadByteSPIPort
           _SPIRead
         _SetCSPin
         _Write2ByteSPIPort
           _SPIWrite2Byte
             _SPIWriteByte
       _GetShortAddr
         _ReadByteSPIPort
         _SetCSPin
         _WriteByteSPIPort
           _SPIWriteByte
       _SetChannel
         _SetLongAddr
           _SetCSPin
           _Write2ByteSPIPort
           _WriteByteSPIPort
         _SetShortAddr
           _SetCSPin
           _WriteByteSPIPort
       _SetDeviceAddress
         _SetShortAddr
       _SetDeviceMACAddress
         _SetShortAddr
       _SetLongAddr
       _SetShortAddr
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
       _memcpy
         _strlen (ARG)
     _SetResetPin
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _envio
     _cierro_configuracion
       _MRF24TransmitirDato
         _SetLongAddr
         _SetShortAddr
       _memcpy
       _strlen
     _configuro_mrf
       _MRF24TransmitirDato
       _memcpy
       _strlen
     _configuro_sistema
       _MRF24TransmitirDato
       _memcpy
       _strcpy
       _strlen

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0     135     52.7%
BITBANK7           256      0       0      0.0%
BANK7              256      0     135     52.7%
BITBANK6           256      0       0      0.0%
BANK6              256      0     135     52.7%
BITBANK5           256      0       0      0.0%
BANK5              256      0     135     52.7%
BITBANK4           256      0       0      0.0%
BANK4              256      0     134     52.3%
BITBANK3           256      0       0      0.0%
BANK3              256      0     190     74.2%
BITBANK2           256      0       0      0.0%
BANK2              256    155     230     89.8%
BITBANK1           256      0       0      0.0%
BANK1              256    211     243     94.9%
BITBANK0           160      0       0      0.0%
BANK0              160    138     142     88.8%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     92      94    100.0%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0    1575      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Aug 16 20:45:16 2025

           cierro_configuracion@F3384 0800             cierro_configuracion@F3386 0300  
                         _SSPSTATbits 0FC7                                    l21 2136  
                                  l30 2176                                    l24 21A0  
                                  l33 214A                                    l42 21BA  
                                  l27 2168                                    l36 21AA  
                                  l39 2184                       _IsMRF24Interrup 2138  
                                  l98 1C8A                         ?_MRF24J40Init 0001  
                      ?_configuro_mrf 0001                                   l101 1304  
                                 l110 20DC                                   l103 1482  
                                 l113 2096                                   l210 210C  
                                 l122 1F56                                   l130 1FEA  
                                 l116 1E70                                   l213 20E6  
                                 l125 2018                                   l133 1EE4  
                                 l222 2112                                   l119 1E2E  
                                 l232 2044                                   l216 20F4  
                                 l225 2122                                   l219 2192  
                                 l171 10C2                                   l180 1F8A  
                                 l244 20BC                                   l317 189C  
                                 l254 1F1E                                   l238 1BA8  
                                 l431 1D54                                   l247 215A  
                                 l191 21B4                                   l264 1748  
                                 l168 12D6                                   l185 1A30  
                                 l329 1EAA                                   l339 15EE  
                                 l356 1C1C                                   l349 1850  
                                 _GIE 7F97                                   u700 20F4  
                                 u701 20F0                                   u720 2120  
                                 u800 1FEA                                   u721 211C  
                                 u801 1FE6                                   u715 219E  
                                 u716 21A0                                   u820 1054  
                                 u900 1D98                                   u821 1050  
                                 u901 1D94                                   u830 1078  
                                 u910 1FBC                                   u815 1DF6  
                                 u735 1E3A                                   u831 1074  
                                 u911 1FB8                                   u920 2148  
                                 u760 1CC2                                   u840 109A  
                                 u921 2142                                   u745 2166  
                                 u841 1096                                   u746 2168  
                                 u770 1CF2                                   u930 1C30  
                                 u850 10BC                                   u755 2174  
                                 u771 1CEE                                   u931 1C2C  
                                 u851 10B8                                   u780 1B0A  
                                 u940 1326                                   u756 2176  
                                 u860 1144                                   u781 1B06  
                                 u941 1322                                   u861 1140  
                                 u790 1B92                                   u926 214A  
                                 u950 1342                                   u870 11F6  
                                 u791 1B8E                                   u951 133E  
                                 u767 1CB8                                   u871 11F2  
                                 u960 1442                                   u880 12BA  
                                 u961 143E                                   u881 12B6  
                                 u970 1458                                   u890 1D88  
                                 u971 1454                                   u981 148E  
                                 u991 14A6                                   u897 1D7E  
                                 _isr 0008                                   fsr1 0FE1  
                                 fsr2 0FD9                                   wreg 0FE8  
                 __end_of_GetLongAddr 1E30                                  l2001 2098  
                                l2003 20AE                                  l2011 207C  
                                l2013 2082                                  l2101 10C4  
                                l1133 1FBC                                  l2031 1B92  
                                l2023 1AEE                                  l2015 2088  
                                l2007 2074                                  l1127 1CF2  
                                l2111 1102                                  l2103 10D4  
                                l2033 1BA0                                  l2025 1B0A  
                                l2017 208E                                  l2009 2074  
                                l2041 1FEC                                  l2201 1C76  
                                l2121 112A                                  l2113 1104  
                                l2105 10D6                                  l2027 1B22  
                                l2019 2094                                  l2051 1FC0  
                                l2211 12F2                                  l2203 1C7A  
                                l2131 1190                                  l2123 1144  
                                l2115 1112                                  l2107 10F2  
                                l1139 1DA4                                  l2037 1BA6  
                                l2029 1B36                                  l2061 1E14  
                                l2053 1FD8                                  l2045 1FBE  
                                l2221 132C                                  l2213 12FC  
                                l2205 1C82                                  l2141 11D8  
                                l2133 1192                                  l2125 1154  
                                l2117 1114                                  l2109 10F4  
                                l2301 14C8                                  l2063 1E20  
                                l2071 1F20                                  l2055 1FDA  
                                l2231 136E                                  l2223 1342  
                                l2215 130C                                  l2151 124E  
                                l2143 11F6                                  l2135 11AC  
                                l2127 116A                                  l2119 1128  
                                l2311 14E8                                  l2303 14CC  
                                l2401 1F88                                  l2065 1E26  
                                l2057 1DEC                                  l2073 1F44  
                                l2241 13BE                                  l2233 137E  
                                l2225 135C                                  l2217 1326  
                                l2209 12D8                                  l2161 1280  
                                l2153 1250                                  l2145 120A  
                                l2137 11AE                                  l2129 116C  
                                l2321 1592                                  l2313 1518  
                                l2305 14D4                                  l2067 1E2C  
                                l2059 1E0E                                  l2251 13FC  
                                l2243 13CE                                  l2235 138E  
                                l2227 1366                                  l2411 19BA  
                                l2163 12BA                                  l2155 1256  
                                l2147 1224                                  l2139 11D6  
                                l2091 109A                                  l2083 105A  
                                l2323 15AC                                  l2315 155A  
                                l2307 14DC                                  l2331 1774  
                                l2501 1D44                                  l2253 1406  
                                l2245 13DE                                  l2237 139E  
                                l2229 136A                                  l2421 1A1A  
                                l2413 19C2                                  l2405 194E  
                                l2165 12C8                                  l2157 127C  
                                l2149 1226                                  l2085 1078  
                                l2077 1044                                  l2173 1D56  
                                l2325 15B0                                  l2317 156C  
                                l2309 14E4                                  l2341 17A6  
                                l2333 177E                                  l2511 1D4E  
                                l2503 1D46                                  l2431 15F4  
                                l2191 2138                                  l2255 1410  
                                l2247 13E8                                  l2239 13AE  
                                l2415 19C8                                  l2167 12CA  
                                l2159 127E                                  l2095 10A0  
                                l2079 1054                                  l2175 1D62  
                                l2327 15CC                                  l2319 158C  
                                l2183 1F8C                                  l2351 17F8  
                                l2343 17B2                                  l2335 1786  
                                l2281 2108                                  l2273 20F6  
                                l2513 1D50                                  l2505 1D48  
                                l2441 1658                                  l2433 1604  
                                l2425 21AC                                  l2265 1446  
                                l2257 1418                                  l2249 13F2  
                                l2417 19E6                                  l2409 1962  
                                l2169 12D4                                  l2097 10BC  
                                l2089 107E                                  l2177 1D66  
                                l2361 1BC2                                  l2185 1F90  
                                l2353 1810                                  l2345 17C4  
                                l2337 178E                                  l2329 174A  
                                l2283 210A                                  l2275 2100  
                                l2507 1D4A                                  l2291 1F14  
                                l2435 1618                                  l2267 1458  
                                l2259 1428                                  l2187 2124  
                                l2195 1C1E                                  l2419 19E8  
                                l2179 1D98                                  l2371 1C0E  
                                l2363 1BCC                                  l2355 1814  
                                l2347 17D4                                  l2339 179A  
                                l2277 2104                                  l2509 1D4C  
                                l2453 1672                                  l2437 1638  
                                l2429 15F0                                  l2269 1480  
                                l2197 1C30                                  l2381 1EC6  
                                l2373 1C12                                  l2365 1BD4  
                                l2293 1484                                  l2357 1830  
                                l2349 17F2                                  l2701 188C  
                                l2279 2106                                  l2287 1EE6  
                                l2471 16CA                                  l2455 1692  
                                l2439 1648                                  l2447 165E  
                                l2391 1F68                                  l2199 1C70  
                                l2383 1ECC                                  l2375 1EAC  
                                l2367 1BDC                                  l2359 1BAA  
                                l2295 14AE                                  l2711 18EC  
                                l2703 1894                                  l2289 1EF4  
                                l2473 16DA                                  l2457 16A2  
                                l2465 16B6                                  l2449 166C  
                                l1921 20E2                                  l2385 1EDE  
                                l2377 1EB0                                  l2369 1BF2  
                                l2297 14B8                                  l2713 1900  
                                l2705 18A2                                  l2475 16EE  
                                l2459 16B0                                  l2483 1700  
                                l2395 1F6E                                  l1923 2186  
                                l1931 21A4                                  l2379 1EB4  
                                l2299 14C0                                  l2715 1904  
                                l2493 1CF4                                  l2477 16FA  
                                l2485 1746                                  l2397 1F82  
                                l2389 1F58                                  l1941 2120  
                                l2717 1908                                  l2709 18AA  
                                l2495 1D38                                  l1927 2196  
                                l1919 20E0                                  l1935 2178  
                                l1951 20C4                                  l2719 1924  
                                l2497 1D40                                  l1945 21B6  
                                l1961 1E30                                  l1953 20CA  
                                l2681 1E72                                  l2499 1D42  
                                l1939 210E                                  l1963 1E52  
                                l1955 20D0                                  l2683 1E76  
                                l2691 1852                                  l1973 214C  
                                l1965 1E58                                  l1957 20D6  
                                l1949 20C0                                  l1981 216C  
                                l2685 1E8C                                  l2765 18DE  
                                l2693 185E                                  l2767 1720  
                                l1967 1E64                                  l1991 1CC8  
                                l2687 1EA6                                  l2695 1862  
                                l1969 1E6A                                  l1977 215E  
                                l1993 1CD4                                  l1985 1C8C  
                                l2697 1866                                  l1987 1CA0  
                                l1995 1CD8                                  l2699 1882  
                                l1997 201A                                  l1989 1CC4  
                                _ADIE 7CEE                                  ?_isr 0001  
                                _EEIE 7D04                                  STR_1 103A  
                                STR_2 103A                                  STR_3 1033  
                                STR_4 1033                                  STR_5 1019  
                                STR_6 1040                                  STR_7 102B  
                                STR_8 1023                                  STR_9 1023  
                                _T0IE 7F95                                  u1001 1552  
                                u1010 15CC                                  u1011 15C8  
                                u1020 15DE                                  u1101 1BB4  
                                u1021 15D6                                  u1110 1F68  
                                u1111 1F64                                  u1200 16DA  
                                u1120 1F82                                  u1201 16D6  
                                u1121 1F7E                                  u1041 1754  
                                u1130 195E                                  u1131 195A  
                                u1051 176C                                  u1140 1A1A  
                                u1141 1A16                                  u1061 17BC  
                                u1150 1604                                  u1038 15E0  
                                u1070 1830                                  u1151 1600  
                                u1071 182C                                  u1160 1638  
                                u1080 1842                                  u1400 1900  
                                u1161 1634                                  u1081 183A  
                                u1401 18FC                                  u1170 1648  
                                u1410 1924                                  u1171 1644  
                                u1411 1920                                  u1180 1692  
                                u1420 1938                                  u1181 168E  
                                u1421 192E                                  u1190 16A2  
                                u1191 169E                                  u1098 1844  
                                u1438 193C                                  u1390 18C2  
                                u1447 1E80                                  u1391 18BC  
                                u1457 1E9A                                  u1467 1EBA  
                                u1396 18C4                                  u1477 1ED2  
                                u1487 134C                                  _IPEN 7E87  
                                u1497 1F4A                                  _PEIE 7F96  
                                _RBIE 7F93                                  _RCIE 7CED  
                                _RBPU 7F8F                          _SPIWriteByte 20DE  
                                _main 1852                ??_cierro_configuracion 0014  
                     __end_of_SPIInit 210E                       __end_of_SPIRead 2124  
                                fsr1h 0FE2                                  fsr2h 0FDA  
                                indf1 0FE7                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                btemp 005F                         _MRF24IsNewMsg 1F58  
                          _DelayReset 2098               GetShortAddr@reg_address 0004  
                                start 0042                     DelayInit@duration 0003  
                        ___param_bank 0000                     ??_ReadByteSPIPort 0001  
                               ??_isr 0001                        ??_MRF24J40Init 001D  
         __end_of_InicializoVariables 1C8C                         _SPIWrite2Byte 2186  
                               ?_main 0001                                 _BCLIE 7D03  
                               _INT0E 7F94                                 i2l447 003E  
                SetDeviceMACAddress@i 0005                        _MRF24GetDataIn 21AC  
                               _TMR1H 0FCF                                 _TMR1L 0FCE  
                               _PORTA 0F80                                 _PORTB 0F81  
                               _PORTC 0F82                                 _PORTD 0F83  
                               _PORTE 0F84                                 _SSPIE 7CEB  
                __end_of_GetShortAddr 2098                       _InicializoMRF24 12D8  
             configuro_mrf@data_out_s 014C                       _InicializoPines 2124  
             SetShortAddr@reg_address 0004                                 _envio 1E72  
                               tablat 0FF5                                 plusw1 0FE3  
                               plusw2 0FDB                        ?_MRF24IsNewMsg 0001  
                               ttemp5 0060                                 ttemp6 0063  
                               ttemp7 0067                                 status 0FD8  
                               wtemp8 0060               __end_of_IsMRF24Interrup 214C  
                 _SetDeviceMACAddress 1FBE                       __initialization 1A32  
                        __end_of_main 194E  DebounceFSMUpdate@antirrebote_boton_n 0011  
         configuro_sistema@data_out_s 0100                       ??_configuro_mrf 0014  
                      ?_SPIWrite2Byte 0002                      __end_of_SetCSPin 21A2  
                         _GetLongAddr 1DEC                         ??_SetLongAddr 0009  
              __end_of_MRF24GetDataIn 21B6                                ??_main 00E8  
                       __activetblptr 0002                         ??_SetResetPin 0001  
                ?_SetDeviceMACAddress 0001                            _SetChannel 1F20  
       InicializoMRF24@delay_time_out 0014                     ?_SetDeviceAddress 0001  
                              _CCP1IE 7CEA                                _CCP2IE 7D00  
                              ?_envio 0001                             ??_SPIInit 0001  
                           ??_SPIRead 0001                    ??_SetDeviceAddress 0005  
                              _T1RD16 7E6F                                _T1SYNC 7E6A  
                              i2l2631 0018                                i2l2633 0026  
                              i2l2635 0028                                i2l2637 0030  
                              i2l2629 000A                            _SetWakePin 215C  
                              _OSCCON 0FD3                                _TMR1IE 7CE8  
                              _TMR1IF 7CF0                                _TMR1CS 7E69  
                              _TMR2IE 7CE9                                _TMR1ON 7E68  
        __end_of_default_security_key 1011                                _SSPBUF 0FC9  
                         ?_DelayReset 0001                   DelayIsRunning@delay 0001  
             __end_of_InicializoMRF24 1484                                _memcpy 1C8C  
                              clear_0 1A78                                clear_1 1A84  
                              clear_2 1A90                                clear_3 1A9C  
                              clear_4 1AA8                                clear_5 1AB4  
                              clear_6 1AC0                                clear_7 1ACC  
                              isa$std 0001                       ?_MRF24GetDataIn 0001  
                      SetCSPin@estado 0001               __end_of_InicializoPines 2138  
                              _strcpy 1F8C                                _strlen 1D56  
                 MRF24ReciboPaquete@i 0012                 ??_SetDeviceMACAddress 0005  
                        __mediumconst 0000                                tblptrh 0FF7  
                              tblptrl 0FF6                                tblptru 0FF8  
                 __end_of_SetLongAddr 1E72                    _MRF24ReciboPaquete 194E  
                    ??_DelayIsRunning 0003                       ??_MRF24IsNewMsg 0001  
                 __end_of_SetResetPin 2178                 GetShortAddr@leido_spi 0003  
                   __end_of_DelayInit 2046                     __end_of_DelayRead 1BAA  
                __end_of_MRF24J40Init 1EE6                            __accesstop 0060  
             __end_of__initialization 1AE0                   ?_MRF24ReciboPaquete 0001  
         __end_of_MRF24TransmitirDato 12D8                     __end_of_BoardInit 1D56  
                      DelayInit@delay 0001                         ___rparam_used 0001  
                      DelayRead@delay 0003                      SetWakePin@estado 0001  
                    ?_IsMRF24Interrup 0001                         ?_SetShortAddr 0003  
                      __pcstackCOMRAM 0001                          __pidataBANK2 2046  
                        __pidataBANK3 1DA6                       ??_SPIWrite2Byte 0004  
                   _configuro_sistema 174A                    _long_mac_address_e 005E  
                       __end_of_envio 1EAC                    ?_configuro_sistema 0001  
                ??_MRF24ReciboPaquete 000B                        main@data_out_s 0200  
                         ?_SetChannel 0001                   ??_configuro_sistema 0014  
                             ??_envio 005B                            __pbssBANK0 00EA  
                          __pbssBANK1 01D3                            __pbssBANK2 02C6  
                          __pbssBANK3 0300                            __pbssBANK4 0400  
                          __pbssBANK5 0500                            __pbssBANK6 0600  
                          __pbssBANK7 0700                            __pbssBANK8 0800  
                         ?_SetWakePin 0001                             ?_SetCSPin 0001  
                     _ReadByteSPIPort 21B6                InicializoMRF24@lectura 0013  
                          _data_out_s 0500                          _GetShortAddr 2072  
                      ??_SetShortAddr 0004             __end_of_configuro_sistema 1852  
                    ?_InicializoMRF24 0001                               ?_memcpy 0005  
                         _SetLongAddr 1E30                               _T1CKPS0 7E6C  
                             _T1CKPS1 7E6D                               ?_strcpy 0001  
                             ?_strlen 0001                      ?_InicializoPines 0001  
                _default_security_key 1001                               _T1OSCEN 7E6B  
                         _SetResetPin 216A                               _OSCTUNE 0F9B  
                             _SSPCON1 0FC6                               _SPIInit 20F6  
                             _SPIRead 210E                            ??_SetCSPin 0001  
                   SetShortAddr@valor 0003                               __Hparam 0000  
                             __Lparam 0000                     ??_DebounceFSMInit 0009  
                        __psmallconst 1000                               __pcinit 1A32  
                        ?_GetLongAddr 0006                               __ramtop 1000  
                             __ptext0 1852                               __ptext1 1E72  
                             __ptext2 174A                               __ptext3 1F8C  
                             __ptext4 1484                               __ptext5 1BAA  
                             __ptext6 1D56                               __ptext7 1044  
                             __ptext8 194E                               __ptext9 1EAC  
                    _WriteByteSPIPort 21A2               __end_of_ReadByteSPIPort 21BC  
                end_of_initialization 1AE0                               memcpy@d 000B  
                             memcpy@n 0009                               memcpy@s 000D  
                       __Lmediumconst 0000                          ??_DelayReset 0002  
                    ??_MRF24GetDataIn 0003                   _default_mac_address 1011  
                             postdec1 0FE5                               postdec2 0FDD  
                             postinc0 0FEE                               postinc1 0FE6  
                             postinc2 0FDE                               strcpy@d 0004  
                             strlen@a 0003                               strlen@s 0001  
               __end_of_configuro_mrf 15F0                          _MRF24J40Init 1EAC  
                           _PORTBbits 0F81                             _PORTCbits 0F82  
          configuro_mrf@data_config_s 012C                    __end_of_DelayReset 20BE  
                WriteByteSPIPort@dato 0002                             _TRISBbits 0F93  
                           _TRISCbits 0F94                             _TRISDbits 0F95  
                           _TRISEbits 0F96                  __end_of_SetShortAddr 20DE  
               Write2ByteSPIPort@dato 0004                  GetLongAddr@respuesta 000A  
                          main@boton1 0290                             _DelayInit 201A  
                           _DelayRead 1AEE                             _BoardInit 1CF4  
                   _Write2ByteSPIPort 2178           __end_of_SetDeviceMACAddress 1FEC  
                       _data_config_s 01D3                    ?_Write2ByteSPIPort 0004  
                      __end_of_memcpy 1CF4                        __end_of_strcpy 1FBE  
                      __end_of_strlen 1DA6                          ??_SetChannel 000B  
                 start_initialization 1A32                   ??_Write2ByteSPIPort 0006  
                         __end_of_isr 0042                      ?_ReadByteSPIPort 0001  
                       ?_SPIWriteByte 0001                          ??_SetWakePin 0001  
               __end_of_MRF24IsNewMsg 1F8C                            ?_DelayInit 0001  
                          ?_DelayRead 0003                            ?_BoardInit 0001  
           __end_of_Write2ByteSPIPort 2186                    __end_of_SetChannel 1F58  
                        _estadoActual 005D                           __pdataBANK2 029B  
                         __pdataBANK3 0378                 __end_of_SPIWrite2Byte 2194  
                            ??_memcpy 000B                          ?_SetLongAddr 0006  
                            ??_strcpy 0003                              ??_strlen 0003  
                  __end_of_SetWakePin 216A                     _DebounceFSMUpdate 15F0  
                        ?_SetResetPin 0001                           __pbssCOMRAM 005D  
                  ?_DebounceFSMUpdate 0011                         __pcstackBANK0 0060  
                       __pcstackBANK1 0100                         __pcstackBANK2 0200  
                     DelayReset@delay 0001                              ?_SPIInit 0001  
                            ?_SPIRead 0001                        ??_SPIWriteByte 0001  
                 ??_DebounceFSMUpdate 0014                      SPIWriteByte@dato 0001  
                     _DebounceFSMInit 1EE6                             _data_in_s 0400  
                    _SetDeviceAddress 1FEC                   _InicializoVariables 1C1E  
            __end_of_WriteByteSPIPort 21AC                    configuro_mrf@F3370 02C6  
                  configuro_mrf@F3372 029B                    configuro_mrf@F3368 0600  
                           __pintcode 0008             __end_of_DebounceFSMUpdate 174A  
     configuro_sistema@config_sistema 0061                     SetResetPin@estado 0001  
                         __smallconst 1000          __end_of_cierro_configuracion 1C1E  
                ?_InicializoVariables 0001              cierro_configuracion@size 0060  
                    SetLongAddr@valor 0008                              _LATCbits 0F8B  
                            _LATDbits 0F8C                              _LATEbits 0F8D  
                         ??_DelayInit 0007                           ??_DelayRead 0005  
                         ??_BoardInit 0001                              i2u137_40 0018  
                            i2u137_41 0014                              i2u138_40 0026  
                            i2u138_41 0022                              _PIR1bits 0F9E  
                        _SetShortAddr 20BE                             _timeStamp 00EA  
                  main@delay_parpadeo 0287                 ??_InicializoVariables 0010  
                   ??_IsMRF24Interrup 0001               __end_of_DebounceFSMInit 1F20  
                           copy_data0 1A46                             copy_data1 1A66  
              configuro_sistema@F3380 0378                configuro_sistema@F3376 0700  
              configuro_sistema@F3378 033C                              _SetCSPin 2194  
                            __Hrparam 0000                             memcpy@tmp 000F  
                            __Lrparam 0000                  __end_of_SPIWriteByte 20F6  
                            __ptext10 1C1E                              __ptext11 1C8C  
                            __ptext20 1E30                              __ptext12 2124  
                            __ptext21 2072                              __ptext13 215C  
                            __ptext30 2098                              __ptext22 21A2  
                            __ptext14 216A                              __ptext31 1F58  
                            __ptext23 1DEC                              __ptext15 12D8  
                            __ptext40 20F6                              __ptext32 2138  
                            __ptext24 2178                              __ptext16 1FBE  
                            __ptext33 21AC                              __ptext25 2186  
                            __ptext17 1FEC                              __ptext34 15F0  
                            __ptext26 20DE                              __ptext18 1F20  
                 _MRF24TransmitirDato 1044                              __ptext35 1AEE  
                            __ptext27 2194                              __ptext19 20BE  
                            __ptext36 214C                              __ptext28 21B6  
                            __ptext37 1EE6                              __ptext29 210E  
                            __ptext38 201A                              __ptext39 1CF4  
                   configuro_mrf@buuf 0100                            strcpy@dest 0001  
                   configuro_mrf@size 012B                     ??_InicializoMRF24 0011  
                      _DelayIsRunning 214C                     ??_InicializoPines 0002  
                       ?_GetShortAddr 0001                  _cierro_configuracion 1BAA  
                ?_MRF24TransmitirDato 000B                              isa$xinst 0000  
                            int$flags 005F    DebounceFSMInit@antirrebote_boton_n 0007  
         __end_of_default_mac_address 1019              __end_of_SetDeviceAddress 201A  
                            memcpy@d1 0005                              memcpy@s1 0007  
               configuro_sistema@buuf 0015                 configuro_sistema@size 0060  
               MRF24ReciboPaquete@add 0010                      ?_DebounceFSMInit 0007  
                            intlevel2 0000                __end_of_DelayIsRunning 215C  
                MRF24TransmitirDato@i 0012       MRF24TransmitirDato@p_info_out_s 000B  
                      ??_GetShortAddr 0003                             strcpy@src 0002  
               ?_cierro_configuracion 0001                 ??_MRF24TransmitirDato 000D  
                   ?_WriteByteSPIPort 0001            __end_of_MRF24ReciboPaquete 1A32  
                       ??_GetLongAddr 0008                    ??_WriteByteSPIPort 0002  
              GetLongAddr@reg_address 0006                         _configuro_mrf 1484  
                         _SSPCON1bits 0FC6        cierro_configuracion@data_out_s 0061  
         DebounceFSMUpdate@estado_pin 0013                     SPIWrite2Byte@dato 0002  
              SetLongAddr@reg_address 0006                       ?_DelayIsRunning 0001  
          MRF24TransmitirDato@pos_mem 0013  
