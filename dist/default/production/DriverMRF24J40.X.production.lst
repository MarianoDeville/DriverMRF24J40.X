

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Apr 15 12:08:27 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Generated 13/12/2024 GMT
    43                           ; 
    44                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F46K20 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000FE0                     bsr             equ	4064
    77   000FE9                     fsr0            equ	4073
    78   000FEA                     fsr0h           equ	4074
    79   000FE9                     fsr0l           equ	4073
    80   000FE1                     fsr1            equ	4065
    81   000FE2                     fsr1h           equ	4066
    82   000FE1                     fsr1l           equ	4065
    83   000FD9                     fsr2            equ	4057
    84   000FDA                     fsr2h           equ	4058
    85   000FD9                     fsr2l           equ	4057
    86   000FEF                     indf0           equ	4079
    87   000FE7                     indf1           equ	4071
    88   000FDF                     indf2           equ	4063
    89   000FF2                     intcon          equ	4082
    90   000000                     nvmcon          equ	0
    91   000FF9                     pcl             equ	4089
    92   000FFA                     pclath          equ	4090
    93   000FFB                     pclatu          equ	4091
    94   000FEB                     plusw0          equ	4075
    95   000FE3                     plusw1          equ	4067
    96   000FDB                     plusw2          equ	4059
    97   000FED                     postdec0        equ	4077
    98   000FE5                     postdec1        equ	4069
    99   000FDD                     postdec2        equ	4061
   100   000FEE                     postinc0        equ	4078
   101   000FE6                     postinc1        equ	4070
   102   000FDE                     postinc2        equ	4062
   103   000FEC                     preinc0         equ	4076
   104   000FE4                     preinc1         equ	4068
   105   000FDC                     preinc2         equ	4060
   106   000FF3                     prod            equ	4083
   107   000FF4                     prodh           equ	4084
   108   000FF3                     prodl           equ	4083
   109   000FD8                     status          equ	4056
   110   000FF5                     tablat          equ	4085
   111   000FF6                     tblptr          equ	4086
   112   000FF7                     tblptrh         equ	4087
   113   000FF6                     tblptrl         equ	4086
   114   000FF8                     tblptru         equ	4088
   115   000FFD                     tosl            equ	4093
   116   000FE8                     wreg            equ	4072
   117   000F77                     SSPMSK          equ	3959	;# 
   118   000F78                     SLRCON          equ	3960	;# 
   119   000F79                     CM2CON1         equ	3961	;# 
   120   000F7A                     CM2CON0         equ	3962	;# 
   121   000F7B                     CM1CON0         equ	3963	;# 
   122   000F7C                     WPUB            equ	3964	;# 
   123   000F7D                     IOCB            equ	3965	;# 
   124   000F7E                     ANSEL           equ	3966	;# 
   125   000F7F                     ANSELH          equ	3967	;# 
   126   000F80                     PORTA           equ	3968	;# 
   127   000F81                     PORTB           equ	3969	;# 
   128   000F82                     PORTC           equ	3970	;# 
   129   000F83                     PORTD           equ	3971	;# 
   130   000F84                     PORTE           equ	3972	;# 
   131   000F89                     LATA            equ	3977	;# 
   132   000F8A                     LATB            equ	3978	;# 
   133   000F8B                     LATC            equ	3979	;# 
   134   000F8C                     LATD            equ	3980	;# 
   135   000F8D                     LATE            equ	3981	;# 
   136   000F92                     TRISA           equ	3986	;# 
   137   000F92                     DDRA            equ	3986	;# 
   138   000F93                     TRISB           equ	3987	;# 
   139   000F93                     DDRB            equ	3987	;# 
   140   000F94                     TRISC           equ	3988	;# 
   141   000F94                     DDRC            equ	3988	;# 
   142   000F95                     TRISD           equ	3989	;# 
   143   000F95                     DDRD            equ	3989	;# 
   144   000F96                     TRISE           equ	3990	;# 
   145   000F96                     DDRE            equ	3990	;# 
   146   000F9B                     OSCTUNE         equ	3995	;# 
   147   000F9D                     PIE1            equ	3997	;# 
   148   000F9E                     PIR1            equ	3998	;# 
   149   000F9F                     IPR1            equ	3999	;# 
   150   000FA0                     PIE2            equ	4000	;# 
   151   000FA1                     PIR2            equ	4001	;# 
   152   000FA2                     IPR2            equ	4002	;# 
   153   000FA6                     EECON1          equ	4006	;# 
   154   000FA7                     EECON2          equ	4007	;# 
   155   000FA8                     EEDATA          equ	4008	;# 
   156   000FA9                     EEADR           equ	4009	;# 
   157   000FAA                     EEADRH          equ	4010	;# 
   158   000FAB                     RCSTA           equ	4011	;# 
   159   000FAB                     RCSTA1          equ	4011	;# 
   160   000FAC                     TXSTA           equ	4012	;# 
   161   000FAC                     TXSTA1          equ	4012	;# 
   162   000FAD                     TXREG           equ	4013	;# 
   163   000FAD                     TXREG1          equ	4013	;# 
   164   000FAE                     RCREG           equ	4014	;# 
   165   000FAE                     RCREG1          equ	4014	;# 
   166   000FAF                     SPBRG           equ	4015	;# 
   167   000FAF                     SPBRG1          equ	4015	;# 
   168   000FB0                     SPBRGH          equ	4016	;# 
   169   000FB1                     T3CON           equ	4017	;# 
   170   000FB2                     TMR3            equ	4018	;# 
   171   000FB2                     TMR3L           equ	4018	;# 
   172   000FB3                     TMR3H           equ	4019	;# 
   173   000FB4                     CVRCON2         equ	4020	;# 
   174   000FB5                     CVRCON          equ	4021	;# 
   175   000FB6                     ECCP1AS         equ	4022	;# 
   176   000FB7                     PWM1CON         equ	4023	;# 
   177   000FB8                     BAUDCON         equ	4024	;# 
   178   000FB8                     BAUDCTL         equ	4024	;# 
   179   000FB9                     PSTRCON         equ	4025	;# 
   180   000FBA                     CCP2CON         equ	4026	;# 
   181   000FBB                     CCPR2           equ	4027	;# 
   182   000FBB                     CCPR2L          equ	4027	;# 
   183   000FBC                     CCPR2H          equ	4028	;# 
   184   000FBD                     CCP1CON         equ	4029	;# 
   185   000FBE                     CCPR1           equ	4030	;# 
   186   000FBE                     CCPR1L          equ	4030	;# 
   187   000FBF                     CCPR1H          equ	4031	;# 
   188   000FC0                     ADCON2          equ	4032	;# 
   189   000FC1                     ADCON1          equ	4033	;# 
   190   000FC2                     ADCON0          equ	4034	;# 
   191   000FC3                     ADRES           equ	4035	;# 
   192   000FC3                     ADRESL          equ	4035	;# 
   193   000FC4                     ADRESH          equ	4036	;# 
   194   000FC5                     SSPCON2         equ	4037	;# 
   195   000FC6                     SSPCON1         equ	4038	;# 
   196   000FC7                     SSPSTAT         equ	4039	;# 
   197   000FC8                     SSPADD          equ	4040	;# 
   198   000FC9                     SSPBUF          equ	4041	;# 
   199   000FCA                     T2CON           equ	4042	;# 
   200   000FCB                     PR2             equ	4043	;# 
   201   000FCB                     MEMCON          equ	4043	;# 
   202   000FCC                     TMR2            equ	4044	;# 
   203   000FCD                     T1CON           equ	4045	;# 
   204   000FCE                     TMR1            equ	4046	;# 
   205   000FCE                     TMR1L           equ	4046	;# 
   206   000FCF                     TMR1H           equ	4047	;# 
   207   000FD0                     RCON            equ	4048	;# 
   208   000FD1                     WDTCON          equ	4049	;# 
   209   000FD2                     HLVDCON         equ	4050	;# 
   210   000FD2                     LVDCON          equ	4050	;# 
   211   000FD3                     OSCCON          equ	4051	;# 
   212   000FD5                     T0CON           equ	4053	;# 
   213   000FD6                     TMR0            equ	4054	;# 
   214   000FD6                     TMR0L           equ	4054	;# 
   215   000FD7                     TMR0H           equ	4055	;# 
   216   000FD8                     STATUS          equ	4056	;# 
   217   000FD9                     FSR2            equ	4057	;# 
   218   000FD9                     FSR2L           equ	4057	;# 
   219   000FDA                     FSR2H           equ	4058	;# 
   220   000FDB                     PLUSW2          equ	4059	;# 
   221   000FDC                     PREINC2         equ	4060	;# 
   222   000FDD                     POSTDEC2        equ	4061	;# 
   223   000FDE                     POSTINC2        equ	4062	;# 
   224   000FDF                     INDF2           equ	4063	;# 
   225   000FE0                     BSR             equ	4064	;# 
   226   000FE1                     FSR1            equ	4065	;# 
   227   000FE1                     FSR1L           equ	4065	;# 
   228   000FE2                     FSR1H           equ	4066	;# 
   229   000FE3                     PLUSW1          equ	4067	;# 
   230   000FE4                     PREINC1         equ	4068	;# 
   231   000FE5                     POSTDEC1        equ	4069	;# 
   232   000FE6                     POSTINC1        equ	4070	;# 
   233   000FE7                     INDF1           equ	4071	;# 
   234   000FE8                     WREG            equ	4072	;# 
   235   000FE9                     FSR0            equ	4073	;# 
   236   000FE9                     FSR0L           equ	4073	;# 
   237   000FEA                     FSR0H           equ	4074	;# 
   238   000FEB                     PLUSW0          equ	4075	;# 
   239   000FEC                     PREINC0         equ	4076	;# 
   240   000FED                     POSTDEC0        equ	4077	;# 
   241   000FEE                     POSTINC0        equ	4078	;# 
   242   000FEF                     INDF0           equ	4079	;# 
   243   000FF0                     INTCON3         equ	4080	;# 
   244   000FF1                     INTCON2         equ	4081	;# 
   245   000FF2                     INTCON          equ	4082	;# 
   246   000FF3                     PROD            equ	4083	;# 
   247   000FF3                     PRODL           equ	4083	;# 
   248   000FF4                     PRODH           equ	4084	;# 
   249   000FF5                     TABLAT          equ	4085	;# 
   250   000FF6                     TBLPTR          equ	4086	;# 
   251   000FF6                     TBLPTRL         equ	4086	;# 
   252   000FF7                     TBLPTRH         equ	4087	;# 
   253   000FF8                     TBLPTRU         equ	4088	;# 
   254   000FF9                     PCLAT           equ	4089	;# 
   255   000FF9                     PC              equ	4089	;# 
   256   000FF9                     PCL             equ	4089	;# 
   257   000FFA                     PCLATH          equ	4090	;# 
   258   000FFB                     PCLATU          equ	4091	;# 
   259   000FFC                     STKPTR          equ	4092	;# 
   260   000FFD                     TOS             equ	4093	;# 
   261   000FFD                     TOSL            equ	4093	;# 
   262   000FFE                     TOSH            equ	4094	;# 
   263   000FFF                     TOSU            equ	4095	;# 
   264   000F77                     SSPMSK          equ	3959	;# 
   265   000F78                     SLRCON          equ	3960	;# 
   266   000F79                     CM2CON1         equ	3961	;# 
   267   000F7A                     CM2CON0         equ	3962	;# 
   268   000F7B                     CM1CON0         equ	3963	;# 
   269   000F7C                     WPUB            equ	3964	;# 
   270   000F7D                     IOCB            equ	3965	;# 
   271   000F7E                     ANSEL           equ	3966	;# 
   272   000F7F                     ANSELH          equ	3967	;# 
   273   000F80                     PORTA           equ	3968	;# 
   274   000F81                     PORTB           equ	3969	;# 
   275   000F82                     PORTC           equ	3970	;# 
   276   000F83                     PORTD           equ	3971	;# 
   277   000F84                     PORTE           equ	3972	;# 
   278   000F89                     LATA            equ	3977	;# 
   279   000F8A                     LATB            equ	3978	;# 
   280   000F8B                     LATC            equ	3979	;# 
   281   000F8C                     LATD            equ	3980	;# 
   282   000F8D                     LATE            equ	3981	;# 
   283   000F92                     TRISA           equ	3986	;# 
   284   000F92                     DDRA            equ	3986	;# 
   285   000F93                     TRISB           equ	3987	;# 
   286   000F93                     DDRB            equ	3987	;# 
   287   000F94                     TRISC           equ	3988	;# 
   288   000F94                     DDRC            equ	3988	;# 
   289   000F95                     TRISD           equ	3989	;# 
   290   000F95                     DDRD            equ	3989	;# 
   291   000F96                     TRISE           equ	3990	;# 
   292   000F96                     DDRE            equ	3990	;# 
   293   000F9B                     OSCTUNE         equ	3995	;# 
   294   000F9D                     PIE1            equ	3997	;# 
   295   000F9E                     PIR1            equ	3998	;# 
   296   000F9F                     IPR1            equ	3999	;# 
   297   000FA0                     PIE2            equ	4000	;# 
   298   000FA1                     PIR2            equ	4001	;# 
   299   000FA2                     IPR2            equ	4002	;# 
   300   000FA6                     EECON1          equ	4006	;# 
   301   000FA7                     EECON2          equ	4007	;# 
   302   000FA8                     EEDATA          equ	4008	;# 
   303   000FA9                     EEADR           equ	4009	;# 
   304   000FAA                     EEADRH          equ	4010	;# 
   305   000FAB                     RCSTA           equ	4011	;# 
   306   000FAB                     RCSTA1          equ	4011	;# 
   307   000FAC                     TXSTA           equ	4012	;# 
   308   000FAC                     TXSTA1          equ	4012	;# 
   309   000FAD                     TXREG           equ	4013	;# 
   310   000FAD                     TXREG1          equ	4013	;# 
   311   000FAE                     RCREG           equ	4014	;# 
   312   000FAE                     RCREG1          equ	4014	;# 
   313   000FAF                     SPBRG           equ	4015	;# 
   314   000FAF                     SPBRG1          equ	4015	;# 
   315   000FB0                     SPBRGH          equ	4016	;# 
   316   000FB1                     T3CON           equ	4017	;# 
   317   000FB2                     TMR3            equ	4018	;# 
   318   000FB2                     TMR3L           equ	4018	;# 
   319   000FB3                     TMR3H           equ	4019	;# 
   320   000FB4                     CVRCON2         equ	4020	;# 
   321   000FB5                     CVRCON          equ	4021	;# 
   322   000FB6                     ECCP1AS         equ	4022	;# 
   323   000FB7                     PWM1CON         equ	4023	;# 
   324   000FB8                     BAUDCON         equ	4024	;# 
   325   000FB8                     BAUDCTL         equ	4024	;# 
   326   000FB9                     PSTRCON         equ	4025	;# 
   327   000FBA                     CCP2CON         equ	4026	;# 
   328   000FBB                     CCPR2           equ	4027	;# 
   329   000FBB                     CCPR2L          equ	4027	;# 
   330   000FBC                     CCPR2H          equ	4028	;# 
   331   000FBD                     CCP1CON         equ	4029	;# 
   332   000FBE                     CCPR1           equ	4030	;# 
   333   000FBE                     CCPR1L          equ	4030	;# 
   334   000FBF                     CCPR1H          equ	4031	;# 
   335   000FC0                     ADCON2          equ	4032	;# 
   336   000FC1                     ADCON1          equ	4033	;# 
   337   000FC2                     ADCON0          equ	4034	;# 
   338   000FC3                     ADRES           equ	4035	;# 
   339   000FC3                     ADRESL          equ	4035	;# 
   340   000FC4                     ADRESH          equ	4036	;# 
   341   000FC5                     SSPCON2         equ	4037	;# 
   342   000FC6                     SSPCON1         equ	4038	;# 
   343   000FC7                     SSPSTAT         equ	4039	;# 
   344   000FC8                     SSPADD          equ	4040	;# 
   345   000FC9                     SSPBUF          equ	4041	;# 
   346   000FCA                     T2CON           equ	4042	;# 
   347   000FCB                     PR2             equ	4043	;# 
   348   000FCB                     MEMCON          equ	4043	;# 
   349   000FCC                     TMR2            equ	4044	;# 
   350   000FCD                     T1CON           equ	4045	;# 
   351   000FCE                     TMR1            equ	4046	;# 
   352   000FCE                     TMR1L           equ	4046	;# 
   353   000FCF                     TMR1H           equ	4047	;# 
   354   000FD0                     RCON            equ	4048	;# 
   355   000FD1                     WDTCON          equ	4049	;# 
   356   000FD2                     HLVDCON         equ	4050	;# 
   357   000FD2                     LVDCON          equ	4050	;# 
   358   000FD3                     OSCCON          equ	4051	;# 
   359   000FD5                     T0CON           equ	4053	;# 
   360   000FD6                     TMR0            equ	4054	;# 
   361   000FD6                     TMR0L           equ	4054	;# 
   362   000FD7                     TMR0H           equ	4055	;# 
   363   000FD8                     STATUS          equ	4056	;# 
   364   000FD9                     FSR2            equ	4057	;# 
   365   000FD9                     FSR2L           equ	4057	;# 
   366   000FDA                     FSR2H           equ	4058	;# 
   367   000FDB                     PLUSW2          equ	4059	;# 
   368   000FDC                     PREINC2         equ	4060	;# 
   369   000FDD                     POSTDEC2        equ	4061	;# 
   370   000FDE                     POSTINC2        equ	4062	;# 
   371   000FDF                     INDF2           equ	4063	;# 
   372   000FE0                     BSR             equ	4064	;# 
   373   000FE1                     FSR1            equ	4065	;# 
   374   000FE1                     FSR1L           equ	4065	;# 
   375   000FE2                     FSR1H           equ	4066	;# 
   376   000FE3                     PLUSW1          equ	4067	;# 
   377   000FE4                     PREINC1         equ	4068	;# 
   378   000FE5                     POSTDEC1        equ	4069	;# 
   379   000FE6                     POSTINC1        equ	4070	;# 
   380   000FE7                     INDF1           equ	4071	;# 
   381   000FE8                     WREG            equ	4072	;# 
   382   000FE9                     FSR0            equ	4073	;# 
   383   000FE9                     FSR0L           equ	4073	;# 
   384   000FEA                     FSR0H           equ	4074	;# 
   385   000FEB                     PLUSW0          equ	4075	;# 
   386   000FEC                     PREINC0         equ	4076	;# 
   387   000FED                     POSTDEC0        equ	4077	;# 
   388   000FEE                     POSTINC0        equ	4078	;# 
   389   000FEF                     INDF0           equ	4079	;# 
   390   000FF0                     INTCON3         equ	4080	;# 
   391   000FF1                     INTCON2         equ	4081	;# 
   392   000FF2                     INTCON          equ	4082	;# 
   393   000FF3                     PROD            equ	4083	;# 
   394   000FF3                     PRODL           equ	4083	;# 
   395   000FF4                     PRODH           equ	4084	;# 
   396   000FF5                     TABLAT          equ	4085	;# 
   397   000FF6                     TBLPTR          equ	4086	;# 
   398   000FF6                     TBLPTRL         equ	4086	;# 
   399   000FF7                     TBLPTRH         equ	4087	;# 
   400   000FF8                     TBLPTRU         equ	4088	;# 
   401   000FF9                     PCLAT           equ	4089	;# 
   402   000FF9                     PC              equ	4089	;# 
   403   000FF9                     PCL             equ	4089	;# 
   404   000FFA                     PCLATH          equ	4090	;# 
   405   000FFB                     PCLATU          equ	4091	;# 
   406   000FFC                     STKPTR          equ	4092	;# 
   407   000FFD                     TOS             equ	4093	;# 
   408   000FFD                     TOSL            equ	4093	;# 
   409   000FFE                     TOSH            equ	4094	;# 
   410   000FFF                     TOSU            equ	4095	;# 
   411   000F77                     SSPMSK          equ	3959	;# 
   412   000F78                     SLRCON          equ	3960	;# 
   413   000F79                     CM2CON1         equ	3961	;# 
   414   000F7A                     CM2CON0         equ	3962	;# 
   415   000F7B                     CM1CON0         equ	3963	;# 
   416   000F7C                     WPUB            equ	3964	;# 
   417   000F7D                     IOCB            equ	3965	;# 
   418   000F7E                     ANSEL           equ	3966	;# 
   419   000F7F                     ANSELH          equ	3967	;# 
   420   000F80                     PORTA           equ	3968	;# 
   421   000F81                     PORTB           equ	3969	;# 
   422   000F82                     PORTC           equ	3970	;# 
   423   000F83                     PORTD           equ	3971	;# 
   424   000F84                     PORTE           equ	3972	;# 
   425   000F89                     LATA            equ	3977	;# 
   426   000F8A                     LATB            equ	3978	;# 
   427   000F8B                     LATC            equ	3979	;# 
   428   000F8C                     LATD            equ	3980	;# 
   429   000F8D                     LATE            equ	3981	;# 
   430   000F92                     TRISA           equ	3986	;# 
   431   000F92                     DDRA            equ	3986	;# 
   432   000F93                     TRISB           equ	3987	;# 
   433   000F93                     DDRB            equ	3987	;# 
   434   000F94                     TRISC           equ	3988	;# 
   435   000F94                     DDRC            equ	3988	;# 
   436   000F95                     TRISD           equ	3989	;# 
   437   000F95                     DDRD            equ	3989	;# 
   438   000F96                     TRISE           equ	3990	;# 
   439   000F96                     DDRE            equ	3990	;# 
   440   000F9B                     OSCTUNE         equ	3995	;# 
   441   000F9D                     PIE1            equ	3997	;# 
   442   000F9E                     PIR1            equ	3998	;# 
   443   000F9F                     IPR1            equ	3999	;# 
   444   000FA0                     PIE2            equ	4000	;# 
   445   000FA1                     PIR2            equ	4001	;# 
   446   000FA2                     IPR2            equ	4002	;# 
   447   000FA6                     EECON1          equ	4006	;# 
   448   000FA7                     EECON2          equ	4007	;# 
   449   000FA8                     EEDATA          equ	4008	;# 
   450   000FA9                     EEADR           equ	4009	;# 
   451   000FAA                     EEADRH          equ	4010	;# 
   452   000FAB                     RCSTA           equ	4011	;# 
   453   000FAB                     RCSTA1          equ	4011	;# 
   454   000FAC                     TXSTA           equ	4012	;# 
   455   000FAC                     TXSTA1          equ	4012	;# 
   456   000FAD                     TXREG           equ	4013	;# 
   457   000FAD                     TXREG1          equ	4013	;# 
   458   000FAE                     RCREG           equ	4014	;# 
   459   000FAE                     RCREG1          equ	4014	;# 
   460   000FAF                     SPBRG           equ	4015	;# 
   461   000FAF                     SPBRG1          equ	4015	;# 
   462   000FB0                     SPBRGH          equ	4016	;# 
   463   000FB1                     T3CON           equ	4017	;# 
   464   000FB2                     TMR3            equ	4018	;# 
   465   000FB2                     TMR3L           equ	4018	;# 
   466   000FB3                     TMR3H           equ	4019	;# 
   467   000FB4                     CVRCON2         equ	4020	;# 
   468   000FB5                     CVRCON          equ	4021	;# 
   469   000FB6                     ECCP1AS         equ	4022	;# 
   470   000FB7                     PWM1CON         equ	4023	;# 
   471   000FB8                     BAUDCON         equ	4024	;# 
   472   000FB8                     BAUDCTL         equ	4024	;# 
   473   000FB9                     PSTRCON         equ	4025	;# 
   474   000FBA                     CCP2CON         equ	4026	;# 
   475   000FBB                     CCPR2           equ	4027	;# 
   476   000FBB                     CCPR2L          equ	4027	;# 
   477   000FBC                     CCPR2H          equ	4028	;# 
   478   000FBD                     CCP1CON         equ	4029	;# 
   479   000FBE                     CCPR1           equ	4030	;# 
   480   000FBE                     CCPR1L          equ	4030	;# 
   481   000FBF                     CCPR1H          equ	4031	;# 
   482   000FC0                     ADCON2          equ	4032	;# 
   483   000FC1                     ADCON1          equ	4033	;# 
   484   000FC2                     ADCON0          equ	4034	;# 
   485   000FC3                     ADRES           equ	4035	;# 
   486   000FC3                     ADRESL          equ	4035	;# 
   487   000FC4                     ADRESH          equ	4036	;# 
   488   000FC5                     SSPCON2         equ	4037	;# 
   489   000FC6                     SSPCON1         equ	4038	;# 
   490   000FC7                     SSPSTAT         equ	4039	;# 
   491   000FC8                     SSPADD          equ	4040	;# 
   492   000FC9                     SSPBUF          equ	4041	;# 
   493   000FCA                     T2CON           equ	4042	;# 
   494   000FCB                     PR2             equ	4043	;# 
   495   000FCB                     MEMCON          equ	4043	;# 
   496   000FCC                     TMR2            equ	4044	;# 
   497   000FCD                     T1CON           equ	4045	;# 
   498   000FCE                     TMR1            equ	4046	;# 
   499   000FCE                     TMR1L           equ	4046	;# 
   500   000FCF                     TMR1H           equ	4047	;# 
   501   000FD0                     RCON            equ	4048	;# 
   502   000FD1                     WDTCON          equ	4049	;# 
   503   000FD2                     HLVDCON         equ	4050	;# 
   504   000FD2                     LVDCON          equ	4050	;# 
   505   000FD3                     OSCCON          equ	4051	;# 
   506   000FD5                     T0CON           equ	4053	;# 
   507   000FD6                     TMR0            equ	4054	;# 
   508   000FD6                     TMR0L           equ	4054	;# 
   509   000FD7                     TMR0H           equ	4055	;# 
   510   000FD8                     STATUS          equ	4056	;# 
   511   000FD9                     FSR2            equ	4057	;# 
   512   000FD9                     FSR2L           equ	4057	;# 
   513   000FDA                     FSR2H           equ	4058	;# 
   514   000FDB                     PLUSW2          equ	4059	;# 
   515   000FDC                     PREINC2         equ	4060	;# 
   516   000FDD                     POSTDEC2        equ	4061	;# 
   517   000FDE                     POSTINC2        equ	4062	;# 
   518   000FDF                     INDF2           equ	4063	;# 
   519   000FE0                     BSR             equ	4064	;# 
   520   000FE1                     FSR1            equ	4065	;# 
   521   000FE1                     FSR1L           equ	4065	;# 
   522   000FE2                     FSR1H           equ	4066	;# 
   523   000FE3                     PLUSW1          equ	4067	;# 
   524   000FE4                     PREINC1         equ	4068	;# 
   525   000FE5                     POSTDEC1        equ	4069	;# 
   526   000FE6                     POSTINC1        equ	4070	;# 
   527   000FE7                     INDF1           equ	4071	;# 
   528   000FE8                     WREG            equ	4072	;# 
   529   000FE9                     FSR0            equ	4073	;# 
   530   000FE9                     FSR0L           equ	4073	;# 
   531   000FEA                     FSR0H           equ	4074	;# 
   532   000FEB                     PLUSW0          equ	4075	;# 
   533   000FEC                     PREINC0         equ	4076	;# 
   534   000FED                     POSTDEC0        equ	4077	;# 
   535   000FEE                     POSTINC0        equ	4078	;# 
   536   000FEF                     INDF0           equ	4079	;# 
   537   000FF0                     INTCON3         equ	4080	;# 
   538   000FF1                     INTCON2         equ	4081	;# 
   539   000FF2                     INTCON          equ	4082	;# 
   540   000FF3                     PROD            equ	4083	;# 
   541   000FF3                     PRODL           equ	4083	;# 
   542   000FF4                     PRODH           equ	4084	;# 
   543   000FF5                     TABLAT          equ	4085	;# 
   544   000FF6                     TBLPTR          equ	4086	;# 
   545   000FF6                     TBLPTRL         equ	4086	;# 
   546   000FF7                     TBLPTRH         equ	4087	;# 
   547   000FF8                     TBLPTRU         equ	4088	;# 
   548   000FF9                     PCLAT           equ	4089	;# 
   549   000FF9                     PC              equ	4089	;# 
   550   000FF9                     PCL             equ	4089	;# 
   551   000FFA                     PCLATH          equ	4090	;# 
   552   000FFB                     PCLATU          equ	4091	;# 
   553   000FFC                     STKPTR          equ	4092	;# 
   554   000FFD                     TOS             equ	4093	;# 
   555   000FFD                     TOSL            equ	4093	;# 
   556   000FFE                     TOSH            equ	4094	;# 
   557   000FFF                     TOSU            equ	4095	;# 
   558   000F77                     SSPMSK          equ	3959	;# 
   559   000F78                     SLRCON          equ	3960	;# 
   560   000F79                     CM2CON1         equ	3961	;# 
   561   000F7A                     CM2CON0         equ	3962	;# 
   562   000F7B                     CM1CON0         equ	3963	;# 
   563   000F7C                     WPUB            equ	3964	;# 
   564   000F7D                     IOCB            equ	3965	;# 
   565   000F7E                     ANSEL           equ	3966	;# 
   566   000F7F                     ANSELH          equ	3967	;# 
   567   000F80                     PORTA           equ	3968	;# 
   568   000F81                     PORTB           equ	3969	;# 
   569   000F82                     PORTC           equ	3970	;# 
   570   000F83                     PORTD           equ	3971	;# 
   571   000F84                     PORTE           equ	3972	;# 
   572   000F89                     LATA            equ	3977	;# 
   573   000F8A                     LATB            equ	3978	;# 
   574   000F8B                     LATC            equ	3979	;# 
   575   000F8C                     LATD            equ	3980	;# 
   576   000F8D                     LATE            equ	3981	;# 
   577   000F92                     TRISA           equ	3986	;# 
   578   000F92                     DDRA            equ	3986	;# 
   579   000F93                     TRISB           equ	3987	;# 
   580   000F93                     DDRB            equ	3987	;# 
   581   000F94                     TRISC           equ	3988	;# 
   582   000F94                     DDRC            equ	3988	;# 
   583   000F95                     TRISD           equ	3989	;# 
   584   000F95                     DDRD            equ	3989	;# 
   585   000F96                     TRISE           equ	3990	;# 
   586   000F96                     DDRE            equ	3990	;# 
   587   000F9B                     OSCTUNE         equ	3995	;# 
   588   000F9D                     PIE1            equ	3997	;# 
   589   000F9E                     PIR1            equ	3998	;# 
   590   000F9F                     IPR1            equ	3999	;# 
   591   000FA0                     PIE2            equ	4000	;# 
   592   000FA1                     PIR2            equ	4001	;# 
   593   000FA2                     IPR2            equ	4002	;# 
   594   000FA6                     EECON1          equ	4006	;# 
   595   000FA7                     EECON2          equ	4007	;# 
   596   000FA8                     EEDATA          equ	4008	;# 
   597   000FA9                     EEADR           equ	4009	;# 
   598   000FAA                     EEADRH          equ	4010	;# 
   599   000FAB                     RCSTA           equ	4011	;# 
   600   000FAB                     RCSTA1          equ	4011	;# 
   601   000FAC                     TXSTA           equ	4012	;# 
   602   000FAC                     TXSTA1          equ	4012	;# 
   603   000FAD                     TXREG           equ	4013	;# 
   604   000FAD                     TXREG1          equ	4013	;# 
   605   000FAE                     RCREG           equ	4014	;# 
   606   000FAE                     RCREG1          equ	4014	;# 
   607   000FAF                     SPBRG           equ	4015	;# 
   608   000FAF                     SPBRG1          equ	4015	;# 
   609   000FB0                     SPBRGH          equ	4016	;# 
   610   000FB1                     T3CON           equ	4017	;# 
   611   000FB2                     TMR3            equ	4018	;# 
   612   000FB2                     TMR3L           equ	4018	;# 
   613   000FB3                     TMR3H           equ	4019	;# 
   614   000FB4                     CVRCON2         equ	4020	;# 
   615   000FB5                     CVRCON          equ	4021	;# 
   616   000FB6                     ECCP1AS         equ	4022	;# 
   617   000FB7                     PWM1CON         equ	4023	;# 
   618   000FB8                     BAUDCON         equ	4024	;# 
   619   000FB8                     BAUDCTL         equ	4024	;# 
   620   000FB9                     PSTRCON         equ	4025	;# 
   621   000FBA                     CCP2CON         equ	4026	;# 
   622   000FBB                     CCPR2           equ	4027	;# 
   623   000FBB                     CCPR2L          equ	4027	;# 
   624   000FBC                     CCPR2H          equ	4028	;# 
   625   000FBD                     CCP1CON         equ	4029	;# 
   626   000FBE                     CCPR1           equ	4030	;# 
   627   000FBE                     CCPR1L          equ	4030	;# 
   628   000FBF                     CCPR1H          equ	4031	;# 
   629   000FC0                     ADCON2          equ	4032	;# 
   630   000FC1                     ADCON1          equ	4033	;# 
   631   000FC2                     ADCON0          equ	4034	;# 
   632   000FC3                     ADRES           equ	4035	;# 
   633   000FC3                     ADRESL          equ	4035	;# 
   634   000FC4                     ADRESH          equ	4036	;# 
   635   000FC5                     SSPCON2         equ	4037	;# 
   636   000FC6                     SSPCON1         equ	4038	;# 
   637   000FC7                     SSPSTAT         equ	4039	;# 
   638   000FC8                     SSPADD          equ	4040	;# 
   639   000FC9                     SSPBUF          equ	4041	;# 
   640   000FCA                     T2CON           equ	4042	;# 
   641   000FCB                     PR2             equ	4043	;# 
   642   000FCB                     MEMCON          equ	4043	;# 
   643   000FCC                     TMR2            equ	4044	;# 
   644   000FCD                     T1CON           equ	4045	;# 
   645   000FCE                     TMR1            equ	4046	;# 
   646   000FCE                     TMR1L           equ	4046	;# 
   647   000FCF                     TMR1H           equ	4047	;# 
   648   000FD0                     RCON            equ	4048	;# 
   649   000FD1                     WDTCON          equ	4049	;# 
   650   000FD2                     HLVDCON         equ	4050	;# 
   651   000FD2                     LVDCON          equ	4050	;# 
   652   000FD3                     OSCCON          equ	4051	;# 
   653   000FD5                     T0CON           equ	4053	;# 
   654   000FD6                     TMR0            equ	4054	;# 
   655   000FD6                     TMR0L           equ	4054	;# 
   656   000FD7                     TMR0H           equ	4055	;# 
   657   000FD8                     STATUS          equ	4056	;# 
   658   000FD9                     FSR2            equ	4057	;# 
   659   000FD9                     FSR2L           equ	4057	;# 
   660   000FDA                     FSR2H           equ	4058	;# 
   661   000FDB                     PLUSW2          equ	4059	;# 
   662   000FDC                     PREINC2         equ	4060	;# 
   663   000FDD                     POSTDEC2        equ	4061	;# 
   664   000FDE                     POSTINC2        equ	4062	;# 
   665   000FDF                     INDF2           equ	4063	;# 
   666   000FE0                     BSR             equ	4064	;# 
   667   000FE1                     FSR1            equ	4065	;# 
   668   000FE1                     FSR1L           equ	4065	;# 
   669   000FE2                     FSR1H           equ	4066	;# 
   670   000FE3                     PLUSW1          equ	4067	;# 
   671   000FE4                     PREINC1         equ	4068	;# 
   672   000FE5                     POSTDEC1        equ	4069	;# 
   673   000FE6                     POSTINC1        equ	4070	;# 
   674   000FE7                     INDF1           equ	4071	;# 
   675   000FE8                     WREG            equ	4072	;# 
   676   000FE9                     FSR0            equ	4073	;# 
   677   000FE9                     FSR0L           equ	4073	;# 
   678   000FEA                     FSR0H           equ	4074	;# 
   679   000FEB                     PLUSW0          equ	4075	;# 
   680   000FEC                     PREINC0         equ	4076	;# 
   681   000FED                     POSTDEC0        equ	4077	;# 
   682   000FEE                     POSTINC0        equ	4078	;# 
   683   000FEF                     INDF0           equ	4079	;# 
   684   000FF0                     INTCON3         equ	4080	;# 
   685   000FF1                     INTCON2         equ	4081	;# 
   686   000FF2                     INTCON          equ	4082	;# 
   687   000FF3                     PROD            equ	4083	;# 
   688   000FF3                     PRODL           equ	4083	;# 
   689   000FF4                     PRODH           equ	4084	;# 
   690   000FF5                     TABLAT          equ	4085	;# 
   691   000FF6                     TBLPTR          equ	4086	;# 
   692   000FF6                     TBLPTRL         equ	4086	;# 
   693   000FF7                     TBLPTRH         equ	4087	;# 
   694   000FF8                     TBLPTRU         equ	4088	;# 
   695   000FF9                     PCLAT           equ	4089	;# 
   696   000FF9                     PC              equ	4089	;# 
   697   000FF9                     PCL             equ	4089	;# 
   698   000FFA                     PCLATH          equ	4090	;# 
   699   000FFB                     PCLATU          equ	4091	;# 
   700   000FFC                     STKPTR          equ	4092	;# 
   701   000FFD                     TOS             equ	4093	;# 
   702   000FFD                     TOSL            equ	4093	;# 
   703   000FFE                     TOSH            equ	4094	;# 
   704   000FFF                     TOSU            equ	4095	;# 
   705   000F77                     SSPMSK          equ	3959	;# 
   706   000F78                     SLRCON          equ	3960	;# 
   707   000F79                     CM2CON1         equ	3961	;# 
   708   000F7A                     CM2CON0         equ	3962	;# 
   709   000F7B                     CM1CON0         equ	3963	;# 
   710   000F7C                     WPUB            equ	3964	;# 
   711   000F7D                     IOCB            equ	3965	;# 
   712   000F7E                     ANSEL           equ	3966	;# 
   713   000F7F                     ANSELH          equ	3967	;# 
   714   000F80                     PORTA           equ	3968	;# 
   715   000F81                     PORTB           equ	3969	;# 
   716   000F82                     PORTC           equ	3970	;# 
   717   000F83                     PORTD           equ	3971	;# 
   718   000F84                     PORTE           equ	3972	;# 
   719   000F89                     LATA            equ	3977	;# 
   720   000F8A                     LATB            equ	3978	;# 
   721   000F8B                     LATC            equ	3979	;# 
   722   000F8C                     LATD            equ	3980	;# 
   723   000F8D                     LATE            equ	3981	;# 
   724   000F92                     TRISA           equ	3986	;# 
   725   000F92                     DDRA            equ	3986	;# 
   726   000F93                     TRISB           equ	3987	;# 
   727   000F93                     DDRB            equ	3987	;# 
   728   000F94                     TRISC           equ	3988	;# 
   729   000F94                     DDRC            equ	3988	;# 
   730   000F95                     TRISD           equ	3989	;# 
   731   000F95                     DDRD            equ	3989	;# 
   732   000F96                     TRISE           equ	3990	;# 
   733   000F96                     DDRE            equ	3990	;# 
   734   000F9B                     OSCTUNE         equ	3995	;# 
   735   000F9D                     PIE1            equ	3997	;# 
   736   000F9E                     PIR1            equ	3998	;# 
   737   000F9F                     IPR1            equ	3999	;# 
   738   000FA0                     PIE2            equ	4000	;# 
   739   000FA1                     PIR2            equ	4001	;# 
   740   000FA2                     IPR2            equ	4002	;# 
   741   000FA6                     EECON1          equ	4006	;# 
   742   000FA7                     EECON2          equ	4007	;# 
   743   000FA8                     EEDATA          equ	4008	;# 
   744   000FA9                     EEADR           equ	4009	;# 
   745   000FAA                     EEADRH          equ	4010	;# 
   746   000FAB                     RCSTA           equ	4011	;# 
   747   000FAB                     RCSTA1          equ	4011	;# 
   748   000FAC                     TXSTA           equ	4012	;# 
   749   000FAC                     TXSTA1          equ	4012	;# 
   750   000FAD                     TXREG           equ	4013	;# 
   751   000FAD                     TXREG1          equ	4013	;# 
   752   000FAE                     RCREG           equ	4014	;# 
   753   000FAE                     RCREG1          equ	4014	;# 
   754   000FAF                     SPBRG           equ	4015	;# 
   755   000FAF                     SPBRG1          equ	4015	;# 
   756   000FB0                     SPBRGH          equ	4016	;# 
   757   000FB1                     T3CON           equ	4017	;# 
   758   000FB2                     TMR3            equ	4018	;# 
   759   000FB2                     TMR3L           equ	4018	;# 
   760   000FB3                     TMR3H           equ	4019	;# 
   761   000FB4                     CVRCON2         equ	4020	;# 
   762   000FB5                     CVRCON          equ	4021	;# 
   763   000FB6                     ECCP1AS         equ	4022	;# 
   764   000FB7                     PWM1CON         equ	4023	;# 
   765   000FB8                     BAUDCON         equ	4024	;# 
   766   000FB8                     BAUDCTL         equ	4024	;# 
   767   000FB9                     PSTRCON         equ	4025	;# 
   768   000FBA                     CCP2CON         equ	4026	;# 
   769   000FBB                     CCPR2           equ	4027	;# 
   770   000FBB                     CCPR2L          equ	4027	;# 
   771   000FBC                     CCPR2H          equ	4028	;# 
   772   000FBD                     CCP1CON         equ	4029	;# 
   773   000FBE                     CCPR1           equ	4030	;# 
   774   000FBE                     CCPR1L          equ	4030	;# 
   775   000FBF                     CCPR1H          equ	4031	;# 
   776   000FC0                     ADCON2          equ	4032	;# 
   777   000FC1                     ADCON1          equ	4033	;# 
   778   000FC2                     ADCON0          equ	4034	;# 
   779   000FC3                     ADRES           equ	4035	;# 
   780   000FC3                     ADRESL          equ	4035	;# 
   781   000FC4                     ADRESH          equ	4036	;# 
   782   000FC5                     SSPCON2         equ	4037	;# 
   783   000FC6                     SSPCON1         equ	4038	;# 
   784   000FC7                     SSPSTAT         equ	4039	;# 
   785   000FC8                     SSPADD          equ	4040	;# 
   786   000FC9                     SSPBUF          equ	4041	;# 
   787   000FCA                     T2CON           equ	4042	;# 
   788   000FCB                     PR2             equ	4043	;# 
   789   000FCB                     MEMCON          equ	4043	;# 
   790   000FCC                     TMR2            equ	4044	;# 
   791   000FCD                     T1CON           equ	4045	;# 
   792   000FCE                     TMR1            equ	4046	;# 
   793   000FCE                     TMR1L           equ	4046	;# 
   794   000FCF                     TMR1H           equ	4047	;# 
   795   000FD0                     RCON            equ	4048	;# 
   796   000FD1                     WDTCON          equ	4049	;# 
   797   000FD2                     HLVDCON         equ	4050	;# 
   798   000FD2                     LVDCON          equ	4050	;# 
   799   000FD3                     OSCCON          equ	4051	;# 
   800   000FD5                     T0CON           equ	4053	;# 
   801   000FD6                     TMR0            equ	4054	;# 
   802   000FD6                     TMR0L           equ	4054	;# 
   803   000FD7                     TMR0H           equ	4055	;# 
   804   000FD8                     STATUS          equ	4056	;# 
   805   000FD9                     FSR2            equ	4057	;# 
   806   000FD9                     FSR2L           equ	4057	;# 
   807   000FDA                     FSR2H           equ	4058	;# 
   808   000FDB                     PLUSW2          equ	4059	;# 
   809   000FDC                     PREINC2         equ	4060	;# 
   810   000FDD                     POSTDEC2        equ	4061	;# 
   811   000FDE                     POSTINC2        equ	4062	;# 
   812   000FDF                     INDF2           equ	4063	;# 
   813   000FE0                     BSR             equ	4064	;# 
   814   000FE1                     FSR1            equ	4065	;# 
   815   000FE1                     FSR1L           equ	4065	;# 
   816   000FE2                     FSR1H           equ	4066	;# 
   817   000FE3                     PLUSW1          equ	4067	;# 
   818   000FE4                     PREINC1         equ	4068	;# 
   819   000FE5                     POSTDEC1        equ	4069	;# 
   820   000FE6                     POSTINC1        equ	4070	;# 
   821   000FE7                     INDF1           equ	4071	;# 
   822   000FE8                     WREG            equ	4072	;# 
   823   000FE9                     FSR0            equ	4073	;# 
   824   000FE9                     FSR0L           equ	4073	;# 
   825   000FEA                     FSR0H           equ	4074	;# 
   826   000FEB                     PLUSW0          equ	4075	;# 
   827   000FEC                     PREINC0         equ	4076	;# 
   828   000FED                     POSTDEC0        equ	4077	;# 
   829   000FEE                     POSTINC0        equ	4078	;# 
   830   000FEF                     INDF0           equ	4079	;# 
   831   000FF0                     INTCON3         equ	4080	;# 
   832   000FF1                     INTCON2         equ	4081	;# 
   833   000FF2                     INTCON          equ	4082	;# 
   834   000FF3                     PROD            equ	4083	;# 
   835   000FF3                     PRODL           equ	4083	;# 
   836   000FF4                     PRODH           equ	4084	;# 
   837   000FF5                     TABLAT          equ	4085	;# 
   838   000FF6                     TBLPTR          equ	4086	;# 
   839   000FF6                     TBLPTRL         equ	4086	;# 
   840   000FF7                     TBLPTRH         equ	4087	;# 
   841   000FF8                     TBLPTRU         equ	4088	;# 
   842   000FF9                     PCLAT           equ	4089	;# 
   843   000FF9                     PC              equ	4089	;# 
   844   000FF9                     PCL             equ	4089	;# 
   845   000FFA                     PCLATH          equ	4090	;# 
   846   000FFB                     PCLATU          equ	4091	;# 
   847   000FFC                     STKPTR          equ	4092	;# 
   848   000FFD                     TOS             equ	4093	;# 
   849   000FFD                     TOSL            equ	4093	;# 
   850   000FFE                     TOSH            equ	4094	;# 
   851   000FFF                     TOSU            equ	4095	;# 
   852                           
   853                           	psect	smallconst
   854   001000                     __psmallconst:
   855                           	callstack 0
   856   001000  00                 	db	0
   857   001001                     _default_security_key:
   858                           	callstack 0
   859   001001  00                 	db	0
   860   001002  10                 	db	16
   861   001003  25                 	db	37
   862   001004  37                 	db	55
   863   001005  04                 	db	4
   864   001006  55                 	db	85
   865   001007  06                 	db	6
   866   001008  79                 	db	121
   867   001009  08                 	db	8
   868   00100A  09                 	db	9
   869   00100B  10                 	db	16
   870   00100C  11                 	db	17
   871   00100D  12                 	db	18
   872   00100E  13                 	db	19
   873   00100F  14                 	db	20
   874   001010  15                 	db	21
   875   001011                     __end_of_default_security_key:
   876                           	callstack 0
   877   001011                     _default_mac_address:
   878                           	callstack 0
   879   001011  11                 	db	17
   880   001012  28                 	db	40
   881   001013  35                 	db	53
   882   001014  44                 	db	68
   883   001015  56                 	db	86
   884   001016  66                 	db	102
   885   001017  77                 	db	119
   886   001018  01                 	db	1
   887   001019                     __end_of_default_mac_address:
   888                           	callstack 0
   889   007CED                     _RCIE           set	31981
   890   007CEE                     _ADIE           set	31982
   891   007D03                     _BCLIE          set	32003
   892   007CEB                     _SSPIE          set	31979
   893   007D04                     _EEIE           set	32004
   894   007D00                     _CCP2IE         set	32000
   895   007CEA                     _CCP1IE         set	31978
   896   007CE9                     _TMR2IE         set	31977
   897   007CE8                     _TMR1IE         set	31976
   898   007F95                     _T0IE           set	32661
   899   007F93                     _RBIE           set	32659
   900   007F96                     _PEIE           set	32662
   901   007F97                     _GIE            set	32663
   902   000F9B                     _OSCTUNE        set	3995
   903   000FD3                     _OSCCON         set	4051
   904   000F96                     _TRISEbits      set	3990
   905   000F84                     _PORTE          set	3972
   906   000F83                     _PORTD          set	3971
   907   000F82                     _PORTC          set	3970
   908   000F81                     _PORTB          set	3969
   909   000F80                     _PORTA          set	3968
   910   000F8D                     _LATEbits       set	3981
   911   000FC9                     _SSPBUF         set	4041
   912   000F9E                     _PIR1bits       set	3998
   913   000FC6                     _SSPCON1bits    set	4038
   914   000FC6                     _SSPCON1        set	4038
   915   000FC7                     _SSPSTATbits    set	4039
   916   000F8C                     _LATDbits       set	3980
   917   000F8B                     _LATCbits       set	3979
   918   000F95                     _TRISDbits      set	3989
   919   000F94                     _TRISCbits      set	3988
   920   000F93                     _TRISBbits      set	3987
   921   001019                     STR_1:
   922   001019  48                 	db	72	;'H'
   923   00101A  6F                 	db	111	;'o'
   924   00101B  6C                 	db	108	;'l'
   925   00101C  61                 	db	97	;'a'
   926   00101D  20                 	db	32
   927   00101E  6D                 	db	109	;'m'
   928   00101F  75                 	db	117	;'u'
   929   001020  6E                 	db	110	;'n'
   930   001021  64                 	db	100	;'d'
   931   001022  6F                 	db	111	;'o'
   932   001023  2E                 	db	46
   933   001024  00                 	db	0
   934   001025  00                 	db	0	; dummy byte at the end
   935   000001                     __activetblptr  equ	1
   936                           
   937                           ; #config settings
   938                           
   939                           	psect	cinit
   940   001538                     __pcinit:
   941                           	callstack 0
   942   001538                     start_initialization:
   943                           	callstack 0
   944   001538                     __initialization:
   945                           	callstack 0
   946                           
   947                           ; Clear objects allocated to BANK0 (55 bytes)
   948   001538  EE00  F060         	lfsr	0,__pbssBANK0
   949   00153C  0E37               	movlw	55
   950   00153E                     clear_0:
   951   00153E  6AEE               	clrf	postinc0,c
   952   001540  06E8               	decf	wreg,f,c
   953   001542  E1FD               	bnz	clear_0
   954                           
   955                           ; Clear objects allocated to COMRAM (41 bytes)
   956   001544  EE00  F001         	lfsr	0,__pbssCOMRAM
   957   001548  0E29               	movlw	41
   958   00154A                     clear_1:
   959   00154A  6AEE               	clrf	postinc0,c
   960   00154C  06E8               	decf	wreg,f,c
   961   00154E  E1FD               	bnz	clear_1
   962   001550                     end_of_initialization:
   963                           	callstack 0
   964   001550                     __end_of__initialization:
   965                           	callstack 0
   966   001550  0E00               	movlw	low (__Lsmallconst shr (0+16))
   967   001552  6EF8               	movwf	tblptru,c
   968   001554  0E10               	movlw	high __Lsmallconst
   969   001556  6EF7               	movwf	tblptrh,c
   970   001558  0100               	movlb	0
   971   00155A  EF9F  F009         	goto	_main	;jump to C main() function
   972                           
   973                           	psect	bssCOMRAM
   974   000001                     __pbssCOMRAM:
   975                           	callstack 0
   976   000001                     _mrf24_data_config:
   977                           	callstack 0
   978   000001                     	ds	34
   979   000023                     _mrf24_data_out:
   980                           	callstack 0
   981   000023                     	ds	6
   982   000029                     _my_default_mac_address:
   983                           	callstack 0
   984   000029                     	ds	1
   985                           
   986                           	psect	bssBANK0
   987   000060                     __pbssBANK0:
   988                           	callstack 0
   989   000060                     _mrf24_data_in:
   990                           	callstack 0
   991   000060                     	ds	55
   992                           
   993                           	psect	cstackCOMRAM
   994   00002A                     __pcstackCOMRAM:
   995                           	callstack 0
   996   00002A                     ?_strlen:
   997                           	callstack 0
   998   00002A                     SetCSPin@estado:
   999                           	callstack 0
  1000   00002A                     SetWakePin@estado:
  1001                           	callstack 0
  1002   00002A                     SetResetPin@estado:
  1003                           	callstack 0
  1004   00002A                     SPIWriteByte@dato:
  1005                           	callstack 0
  1006   00002A                     strlen@s:
  1007                           	callstack 0
  1008   00002A                     SetDireccionDestino@direccion:
  1009                           	callstack 0
  1010   00002A                     SetPANIDDestino@panid:
  1011                           	callstack 0
  1012   00002A                     ??_InicializoVariables:
  1013   00002A                     
  1014                           ; 1 bytes @ 0x0
  1015   00002A                     	ds	1
  1016   00002B                     WriteByteSPIPort@dato:
  1017                           	callstack 0
  1018   00002B                     InicializoVariables@i:
  1019                           	callstack 0
  1020   00002B                     SPIWrite2Byte@dato:
  1021                           	callstack 0
  1022   00002B                     
  1023                           ; 1 bytes @ 0x1
  1024   00002B                     	ds	1
  1025   00002C                     SetShortAddr@value:
  1026                           	callstack 0
  1027   00002C                     GetShortAddr@leido_spi:
  1028                           	callstack 0
  1029   00002C                     strlen@a:
  1030                           	callstack 0
  1031   00002C                     
  1032                           ; 1 bytes @ 0x2
  1033   00002C                     	ds	1
  1034   00002D                     SetShortAddr@reg_address:
  1035                           	callstack 0
  1036   00002D                     GetShortAddr@reg_address:
  1037                           	callstack 0
  1038   00002D                     SetMensajeSalida@mensaje:
  1039                           	callstack 0
  1040   00002D                     Write2ByteSPIPort@dato:
  1041                           	callstack 0
  1042   00002D                     
  1043                           ; 1 bytes @ 0x3
  1044   00002D                     	ds	1
  1045   00002E                     SetDeviceMACAddress@i:
  1046                           	callstack 0
  1047   00002E                     
  1048                           ; 1 bytes @ 0x4
  1049   00002E                     	ds	1
  1050   00002F                     SetLongAddr@reg_address:
  1051                           	callstack 0
  1052   00002F                     GetLongAddr@reg_address:
  1053                           	callstack 0
  1054   00002F                     
  1055                           ; 1 bytes @ 0x5
  1056   00002F                     	ds	2
  1057   000031                     SetLongAddr@value:
  1058                           	callstack 0
  1059   000031                     ??_GetLongAddr:
  1060                           
  1061                           ; 1 bytes @ 0x7
  1062   000031                     	ds	1
  1063   000032                     ??_SetLongAddr:
  1064                           
  1065                           ; 1 bytes @ 0x8
  1066   000032                     	ds	1
  1067   000033                     GetLongAddr@respuesta:
  1068                           	callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x9
  1071   000033                     	ds	1
  1072   000034                     ??_MRF24J40Init:
  1073   000034                     ??_EnviarDato:
  1074                           
  1075                           ; 1 bytes @ 0xA
  1076   000034                     	ds	1
  1077   000035                     MRF24J40Init@lectura:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0xB
  1081   000035                     	ds	4
  1082   000039                     EnviarDato@i:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0xF
  1086   000039                     	ds	1
  1087   00003A                     EnviarDato@pos_memoria:
  1088                           	callstack 0
  1089                           
  1090                           ; 1 bytes @ 0x10
  1091   00003A                     	ds	1
  1092   00003B                     ??_main:
  1093                           
  1094                           ; 1 bytes @ 0x11
  1095   00003B                     	ds	2
  1096                           
  1097 ;;
  1098 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1099 ;;
  1100 ;; *************** function _main *****************
  1101 ;; Defined at:
  1102 ;;		line 23 in file "main.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1120 ;;Total ram usage:        2 bytes
  1121 ;; Hardware stack levels required when called: 6
  1122 ;; This function calls:
  1123 ;;		_BoardInit
  1124 ;;		_EnviarDato
  1125 ;;		_MRF24J40Init
  1126 ;;		_SetDireccionDestino
  1127 ;;		_SetMensajeSalida
  1128 ;;		_SetPANIDDestino
  1129 ;; This function is called by:
  1130 ;;		Startup code after reset
  1131 ;; This function uses a non-reentrant model
  1132 ;;
  1133                           
  1134                           	psect	text0
  1135   00133E                     __ptext0:
  1136                           	callstack 0
  1137   00133E                     _main:
  1138                           	callstack 25
  1139   00133E                     
  1140                           ;main.c: 25:     BoardInit();
  1141   00133E  ECF5  F009         	call	_BoardInit	;wreg free
  1142   001342                     
  1143                           ;main.c: 26:     MRF24J40Init();
  1144   001342  EC13  F008         	call	_MRF24J40Init	;wreg free
  1145   001346                     
  1146                           ;main.c: 27:     SetMensajeSalida("Hola mundo.");
  1147   001346  0E19               	movlw	low STR_1
  1148   001348  6E2D               	movwf	SetMensajeSalida@mensaje^0,c
  1149   00134A  EC03  F00B         	call	_SetMensajeSalida	;wreg free
  1150   00134E                     
  1151                           ;main.c: 28:     SetDireccionDestino((0xFFFF));
  1152   00134E  0EFF               	movlw	255
  1153   001350  6E2B               	movwf	(SetDireccionDestino@direccion+1)^0,c
  1154   001352  682A               	setf	SetDireccionDestino@direccion^0,c
  1155   001354  EC34  F00B         	call	_SetDireccionDestino	;wreg free
  1156   001358                     
  1157                           ;main.c: 29:     SetPANIDDestino(0X1234);
  1158   001358  0E12               	movlw	18
  1159   00135A  6E2B               	movwf	(SetPANIDDestino@panid+1)^0,c
  1160   00135C  0E34               	movlw	52
  1161   00135E  6E2A               	movwf	SetPANIDDestino@panid^0,c
  1162   001360  EC2F  F00B         	call	_SetPANIDDestino	;wreg free
  1163   001364                     l211:
  1164   001364  0004               	clrwdt		;# 
  1165   001366                     
  1166                           ;main.c: 34:         LATEbits.LATE0 = !LATEbits.LATE0;
  1167   001366  A08D               	btfss	141,0,c	;volatile
  1168   001368  EFB8  F009         	goto	u371
  1169   00136C  EFBC  F009         	goto	u370
  1170   001370                     u371:
  1171   001370  6A3B               	clrf	??_main^0,c
  1172   001372  2A3B               	incf	??_main^0,f,c
  1173   001374  EFBD  F009         	goto	u388
  1174   001378                     u370:
  1175   001378  6A3B               	clrf	??_main^0,c
  1176   00137A                     u388:
  1177   00137A  508D               	movf	141,w,c	;volatile
  1178   00137C  183B               	xorwf	??_main^0,w,c
  1179   00137E  0BFE               	andlw	-2
  1180   001380  183B               	xorwf	??_main^0,w,c
  1181   001382  6E8D               	movwf	141,c	;volatile
  1182   001384                     
  1183                           ;main.c: 35:         _delay((unsigned long)((750)*(16000000/4000.0)));;
  1184   001384  0E10               	movlw	16
  1185   001386  6E3C               	movwf	(??_main+1)^0,c
  1186   001388  0E39               	movlw	57
  1187   00138A  6E3B               	movwf	??_main^0,c
  1188   00138C  0E0E               	movlw	14
  1189   00138E                     u397:
  1190   00138E  2EE8               	decfsz	wreg,f,c
  1191   001390  D7FE               	bra	u397
  1192   001392  2E3B               	decfsz	??_main^0,f,c
  1193   001394  D7FC               	bra	u397
  1194   001396  2E3C               	decfsz	(??_main+1)^0,f,c
  1195   001398  D7FA               	bra	u397
  1196   00139A                     
  1197                           ;main.c: 36:         EnviarDato();
  1198   00139A  ECCE  F008         	call	_EnviarDato	;wreg free
  1199   00139E  EFB2  F009         	goto	l211
  1200   0013A2  EF00  F000         	goto	start
  1201   0013A6                     __end_of_main:
  1202                           	callstack 0
  1203                           
  1204 ;; *************** function _SetPANIDDestino *****************
  1205 ;; Defined at:
  1206 ;;		line 488 in file "drivers/scr/drv_mrf24j40.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  panid           2    0[COMRAM] unsigned short 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		None
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1223 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1224 ;;Total ram usage:        2 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text1
  1234   00165E                     __ptext1:
  1235                           	callstack 0
  1236   00165E                     _SetPANIDDestino:
  1237                           	callstack 30
  1238   00165E                     
  1239                           ;drivers/scr/drv_mrf24j40.c: 490:     mrf24_data_out.destinity_panid = panid;
  1240   00165E  C02A  F023         	movff	SetPANIDDestino@panid,_mrf24_data_out
  1241   001662  C02B  F024         	movff	SetPANIDDestino@panid+1,_mrf24_data_out+1
  1242   001666  0012               	return		;funcret
  1243   001668                     __end_of_SetPANIDDestino:
  1244                           	callstack 0
  1245                           
  1246 ;; *************** function _SetMensajeSalida *****************
  1247 ;; Defined at:
  1248 ;;		line 465 in file "drivers/scr/drv_mrf24j40.c"
  1249 ;; Parameters:    Size  Location     Type
  1250 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  1251 ;;		 -> STR_1(12), 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1263 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1266 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1267 ;;Total ram usage:        1 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 1
  1270 ;; This function calls:
  1271 ;;		_strlen
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           	psect	text2
  1278   001606                     __ptext2:
  1279                           	callstack 0
  1280   001606                     _SetMensajeSalida:
  1281                           	callstack 29
  1282   001606                     
  1283                           ;drivers/scr/drv_mrf24j40.c: 467:     mrf24_data_out.buffer_salida = mensaje;
  1284   001606  C02D  F028         	movff	SetMensajeSalida@mensaje,_mrf24_data_out+5
  1285   00160A                     
  1286                           ;drivers/scr/drv_mrf24j40.c: 468:     mrf24_data_out.largo_mensaje = (uint8_t) strlen(me
      +                          nsaje);
  1287   00160A  C02D  F02A         	movff	SetMensajeSalida@mensaje,strlen@s
  1288   00160E  EC59  F00A         	call	_strlen	;wreg free
  1289   001612  502A               	movf	?_strlen^0,w,c
  1290   001614  6E27               	movwf	(_mrf24_data_out+4)^0,c
  1291   001616  0012               	return		;funcret
  1292   001618                     __end_of_SetMensajeSalida:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _strlen *****************
  1296 ;; Defined at:
  1297 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1300 ;;		 -> STR_1(12), 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1303 ;;		 -> STR_1(12), 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  2    0[COMRAM] unsigned int 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;Total ram usage:        3 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_SetMensajeSalida
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text3
  1327   0014B2                     __ptext3:
  1328                           	callstack 0
  1329   0014B2                     _strlen:
  1330                           	callstack 29
  1331   0014B2  C02A  F02C         	movff	strlen@s,strlen@a
  1332   0014B6  EF5E  F00A         	goto	l1565
  1333   0014BA                     l1563:
  1334   0014BA  2A2A               	incf	strlen@s^0,f,c
  1335   0014BC                     l1565:
  1336   0014BC  C02A  FFF6         	movff	strlen@s,tblptrl
  1337   0014C0                     	if	0	;There is only one active tblptr byte
  1338   0014C0                     	endif
  1339   0014C0                     	if	0	;tblptru may be non-zero
  1340   0014C0                     	endif
  1341   0014C0                     	if	0	;tblptru may be non-zero
  1342   0014C0                     	endif
  1343   0014C0  0008               	tblrd		*
  1344   0014C2  50F5               	movf	tablat,w,c
  1345   0014C4  0900               	iorlw	0
  1346   0014C6  A4D8               	btfss	status,2,c
  1347   0014C8  EF68  F00A         	goto	u291
  1348   0014CC  EF6A  F00A         	goto	u290
  1349   0014D0                     u291:
  1350   0014D0  EF5D  F00A         	goto	l1563
  1351   0014D4                     u290:
  1352   0014D4  502C               	movf	strlen@a^0,w,c
  1353   0014D6  5C2A               	subwf	strlen@s^0,w,c
  1354   0014D8  6E2A               	movwf	?_strlen^0,c
  1355   0014DA  6A2B               	clrf	(?_strlen+1)^0,c
  1356   0014DC  BE2A               	btfsc	?_strlen^0,7,c
  1357   0014DE  062B               	decf	(?_strlen+1)^0,f,c
  1358   0014E0  0012               	return		;funcret
  1359   0014E2                     __end_of_strlen:
  1360                           	callstack 0
  1361                           
  1362 ;; *************** function _SetDireccionDestino *****************
  1363 ;; Defined at:
  1364 ;;		line 477 in file "drivers/scr/drv_mrf24j40.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  direccion       2    0[COMRAM] unsigned short 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		None
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1378 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;Total ram usage:        2 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           	psect	text4
  1392   001668                     __ptext4:
  1393                           	callstack 0
  1394   001668                     _SetDireccionDestino:
  1395                           	callstack 30
  1396   001668                     
  1397                           ;drivers/scr/drv_mrf24j40.c: 479:     mrf24_data_out.destinity_address = direccion;
  1398   001668  C02A  F025         	movff	SetDireccionDestino@direccion,_mrf24_data_out+2
  1399   00166C  C02B  F026         	movff	SetDireccionDestino@direccion+1,_mrf24_data_out+3
  1400   001670  0012               	return		;funcret
  1401   001672                     __end_of_SetDireccionDestino:
  1402                           	callstack 0
  1403                           
  1404 ;; *************** function _MRF24J40Init *****************
  1405 ;; Defined at:
  1406 ;;		line 276 in file "drivers/scr/drv_mrf24j40.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;		None
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  lectura         1   11[COMRAM] unsigned char 
  1411 ;; Return value:  Size  Location     Type
  1412 ;;                  1    wreg      void 
  1413 ;; Registers used:
  1414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1415 ;; Tracked objects:
  1416 ;;		On entry : 0/0
  1417 ;;		On exit  : 0/0
  1418 ;;		Unchanged: 0/0
  1419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1424 ;;Total ram usage:        2 bytes
  1425 ;; Hardware stack levels used: 1
  1426 ;; Hardware stack levels required when called: 5
  1427 ;; This function calls:
  1428 ;;		_GetLongAddr
  1429 ;;		_GetShortAddr
  1430 ;;		_InicializoPines
  1431 ;;		_InicializoVariables
  1432 ;;		_SetChannel
  1433 ;;		_SetDeviceAddress
  1434 ;;		_SetDeviceMACAddress
  1435 ;;		_SetLongAddr
  1436 ;;		_SetResetPin
  1437 ;;		_SetShortAddr
  1438 ;; This function is called by:
  1439 ;;		_main
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text5
  1444   001026                     __ptext5:
  1445                           	callstack 0
  1446   001026                     _MRF24J40Init:
  1447                           	callstack 25
  1448   001026                     
  1449                           ;drivers/scr/drv_mrf24j40.c: 278:     uint8_t lectura;;drivers/scr/drv_mrf24j40.c: 279: 
      +                              InicializoVariables();
  1450   001026  EC4B  F009         	call	_InicializoVariables	;wreg free
  1451   00102A                     
  1452                           ;drivers/scr/drv_mrf24j40.c: 280:     InicializoPines();
  1453   00102A  ECD2  F00A         	call	_InicializoPines	;wreg free
  1454   00102E                     
  1455                           ;drivers/scr/drv_mrf24j40.c: 281:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  1456   00102E  0E06               	movlw	6
  1457   001030  6E34               	movwf	??_MRF24J40Init^0,c
  1458   001032  0E30               	movlw	48
  1459   001034                     u407:
  1460   001034  2EE8               	decfsz	wreg,f,c
  1461   001036  D7FE               	bra	u407
  1462   001038  2E34               	decfsz	??_MRF24J40Init^0,f,c
  1463   00103A  D7FC               	bra	u407
  1464   00103C  F000 F000          	nop2	
  1465   001040                     
  1466                           ;drivers/scr/drv_mrf24j40.c: 282:     SetResetPin(1);
  1467   001040  0E01               	movlw	1
  1468   001042  EC13  F00B         	call	_SetResetPin
  1469   001046                     
  1470                           ;drivers/scr/drv_mrf24j40.c: 283:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  1471   001046  0E06               	movlw	6
  1472   001048  6E34               	movwf	??_MRF24J40Init^0,c
  1473   00104A  0E30               	movlw	48
  1474   00104C                     u417:
  1475   00104C  2EE8               	decfsz	wreg,f,c
  1476   00104E  D7FE               	bra	u417
  1477   001050  2E34               	decfsz	??_MRF24J40Init^0,f,c
  1478   001052  D7FC               	bra	u417
  1479   001054  F000 F000          	nop2	
  1480   001058                     
  1481                           ;drivers/scr/drv_mrf24j40.c: 284:     SetShortAddr((0x2A),0x07);
  1482   001058  0E07               	movlw	7
  1483   00105A  6E2C               	movwf	SetShortAddr@value^0,c
  1484   00105C  0E2A               	movlw	42
  1485   00105E  ECC2  F00A         	call	_SetShortAddr
  1486   001062                     l1583:
  1487                           
  1488                           ;drivers/scr/drv_mrf24j40.c: 287:         lectura = GetShortAddr((0x2A));
  1489   001062  0E2A               	movlw	42
  1490   001064  ECAF  F00A         	call	_GetShortAddr
  1491   001068  6E35               	movwf	MRF24J40Init@lectura^0,c
  1492   00106A                     
  1493                           ;drivers/scr/drv_mrf24j40.c: 288:     }while((lectura&0x07) != 0X00);
  1494   00106A  C035  F034         	movff	MRF24J40Init@lectura,??_MRF24J40Init
  1495   00106E  0E07               	movlw	7
  1496   001070  1634               	andwf	??_MRF24J40Init^0,f,c
  1497   001072  A4D8               	btfss	status,2,c
  1498   001074  EF3E  F008         	goto	u301
  1499   001078  EF40  F008         	goto	u300
  1500   00107C                     u301:
  1501   00107C  EF31  F008         	goto	l1583
  1502   001080                     u300:
  1503   001080                     
  1504                           ;drivers/scr/drv_mrf24j40.c: 289:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  1505   001080  0E06               	movlw	6
  1506   001082  6E34               	movwf	??_MRF24J40Init^0,c
  1507   001084  0E30               	movlw	48
  1508   001086                     u427:
  1509   001086  2EE8               	decfsz	wreg,f,c
  1510   001088  D7FE               	bra	u427
  1511   00108A  2E34               	decfsz	??_MRF24J40Init^0,f,c
  1512   00108C  D7FC               	bra	u427
  1513   00108E  F000 F000          	nop2	
  1514   001092                     
  1515                           ;drivers/scr/drv_mrf24j40.c: 290:     SetShortAddr((0x0D), 0x01);
  1516   001092  0E01               	movlw	1
  1517   001094  6E2C               	movwf	SetShortAddr@value^0,c
  1518   001096  0E0D               	movlw	13
  1519   001098  ECC2  F00A         	call	_SetShortAddr
  1520   00109C                     
  1521                           ;drivers/scr/drv_mrf24j40.c: 291:     SetDeviceAddress();
  1522   00109C  EC87  F00A         	call	_SetDeviceAddress	;wreg free
  1523   0010A0                     
  1524                           ;drivers/scr/drv_mrf24j40.c: 292:     SetDeviceMACAddress();
  1525   0010A0  EC17  F00A         	call	_SetDeviceMACAddress	;wreg free
  1526   0010A4                     
  1527                           ;drivers/scr/drv_mrf24j40.c: 293:     SetLongAddr((0x202), 0x80);
  1528   0010A4  0E02               	movlw	2
  1529   0010A6  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  1530   0010A8  0E02               	movlw	2
  1531   0010AA  6E2F               	movwf	SetLongAddr@reg_address^0,c
  1532   0010AC  0E80               	movlw	128
  1533   0010AE  6E31               	movwf	SetLongAddr@value^0,c
  1534   0010B0  EC38  F00A         	call	_SetLongAddr	;wreg free
  1535   0010B4                     
  1536                           ;drivers/scr/drv_mrf24j40.c: 294:     SetLongAddr((0x203), (0XC0) | (0X38));
  1537   0010B4  0E02               	movlw	2
  1538   0010B6  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  1539   0010B8  0E03               	movlw	3
  1540   0010BA  6E2F               	movwf	SetLongAddr@reg_address^0,c
  1541   0010BC  0EF8               	movlw	248
  1542   0010BE  6E31               	movwf	SetLongAddr@value^0,c
  1543   0010C0  EC38  F00A         	call	_SetLongAddr	;wreg free
  1544   0010C4                     
  1545                           ;drivers/scr/drv_mrf24j40.c: 295:  SetLongAddr((0x206), 0x90);
  1546   0010C4  0E02               	movlw	2
  1547   0010C6  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  1548   0010C8  0E06               	movlw	6
  1549   0010CA  6E2F               	movwf	SetLongAddr@reg_address^0,c
  1550   0010CC  0E90               	movlw	144
  1551   0010CE  6E31               	movwf	SetLongAddr@value^0,c
  1552   0010D0  EC38  F00A         	call	_SetLongAddr	;wreg free
  1553   0010D4                     
  1554                           ;drivers/scr/drv_mrf24j40.c: 296:  SetLongAddr((0x207), 0x80);
  1555   0010D4  0E02               	movlw	2
  1556   0010D6  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  1557   0010D8  0E07               	movlw	7
  1558   0010DA  6E2F               	movwf	SetLongAddr@reg_address^0,c
  1559   0010DC  0E80               	movlw	128
  1560   0010DE  6E31               	movwf	SetLongAddr@value^0,c
  1561   0010E0  EC38  F00A         	call	_SetLongAddr	;wreg free
  1562   0010E4                     
  1563                           ;drivers/scr/drv_mrf24j40.c: 297:  SetLongAddr((0x208), 0x10);
  1564   0010E4  0E02               	movlw	2
  1565   0010E6  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  1566   0010E8  0E08               	movlw	8
  1567   0010EA  6E2F               	movwf	SetLongAddr@reg_address^0,c
  1568   0010EC  0E10               	movlw	16
  1569   0010EE  6E31               	movwf	SetLongAddr@value^0,c
  1570   0010F0  EC38  F00A         	call	_SetLongAddr	;wreg free
  1571   0010F4                     
  1572                           ;drivers/scr/drv_mrf24j40.c: 298:  SetLongAddr((0x220), 0x21);
  1573   0010F4  0E02               	movlw	2
  1574   0010F6  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  1575   0010F8  0E20               	movlw	32
  1576   0010FA  6E2F               	movwf	SetLongAddr@reg_address^0,c
  1577   0010FC  0E21               	movlw	33
  1578   0010FE  6E31               	movwf	SetLongAddr@value^0,c
  1579   001100  EC38  F00A         	call	_SetLongAddr	;wreg free
  1580   001104                     
  1581                           ;drivers/scr/drv_mrf24j40.c: 299:     SetShortAddr((0x3A), 0x80);
  1582   001104  0E80               	movlw	128
  1583   001106  6E2C               	movwf	SetShortAddr@value^0,c
  1584   001108  0E3A               	movlw	58
  1585   00110A  ECC2  F00A         	call	_SetShortAddr
  1586   00110E                     
  1587                           ;drivers/scr/drv_mrf24j40.c: 300:     SetShortAddr((0x3E), 0x40);
  1588   00110E  0E40               	movlw	64
  1589   001110  6E2C               	movwf	SetShortAddr@value^0,c
  1590   001112  0E3E               	movlw	62
  1591   001114  ECC2  F00A         	call	_SetShortAddr
  1592   001118                     
  1593                           ;drivers/scr/drv_mrf24j40.c: 301:     SetShortAddr((0x3F), 0x60);
  1594   001118  0E60               	movlw	96
  1595   00111A  6E2C               	movwf	SetShortAddr@value^0,c
  1596   00111C  0E3F               	movlw	63
  1597   00111E  ECC2  F00A         	call	_SetShortAddr
  1598   001122                     
  1599                           ;drivers/scr/drv_mrf24j40.c: 302:     SetShortAddr((0x18), 0x98);
  1600   001122  0E98               	movlw	152
  1601   001124  6E2C               	movwf	SetShortAddr@value^0,c
  1602   001126  0E18               	movlw	24
  1603   001128  ECC2  F00A         	call	_SetShortAddr
  1604   00112C                     
  1605                           ;drivers/scr/drv_mrf24j40.c: 303:     SetShortAddr((0x2E), 0x95);
  1606   00112C  0E95               	movlw	149
  1607   00112E  6E2C               	movwf	SetShortAddr@value^0,c
  1608   001130  0E2E               	movlw	46
  1609   001132  ECC2  F00A         	call	_SetShortAddr
  1610   001136                     l1617:
  1611                           
  1612                           ;drivers/scr/drv_mrf24j40.c: 306:   lectura = GetLongAddr((0x20f));
  1613   001136  0E02               	movlw	2
  1614   001138  6E30               	movwf	(GetLongAddr@reg_address+1)^0,c
  1615   00113A  0E0F               	movlw	15
  1616   00113C  6E2F               	movwf	GetLongAddr@reg_address^0,c
  1617   00113E  ECD3  F009         	call	_GetLongAddr	;wreg free
  1618   001142  6E35               	movwf	MRF24J40Init@lectura^0,c
  1619   001144                     
  1620                           ;drivers/scr/drv_mrf24j40.c: 307:  }while((lectura & 0xA0) != 0xA0);
  1621   001144  5035               	movf	MRF24J40Init@lectura^0,w,c
  1622   001146  0BA0               	andlw	160
  1623   001148  0AA0               	xorlw	160
  1624   00114A  A4D8               	btfss	status,2,c
  1625   00114C  EFAA  F008         	goto	u311
  1626   001150  EFAC  F008         	goto	u310
  1627   001154                     u311:
  1628   001154  EF9B  F008         	goto	l1617
  1629   001158                     u310:
  1630   001158                     
  1631                           ;drivers/scr/drv_mrf24j40.c: 308:     SetShortAddr((0x32), 0xE6);
  1632   001158  0EE6               	movlw	230
  1633   00115A  6E2C               	movwf	SetShortAddr@value^0,c
  1634   00115C  0E32               	movlw	50
  1635   00115E  ECC2  F00A         	call	_SetShortAddr
  1636                           
  1637                           ;drivers/scr/drv_mrf24j40.c: 309:  SetShortAddr((0x12), 0xB9);
  1638   001162  0EB9               	movlw	185
  1639   001164  6E2C               	movwf	SetShortAddr@value^0,c
  1640   001166  0E12               	movlw	18
  1641   001168  ECC2  F00A         	call	_SetShortAddr
  1642                           
  1643                           ;drivers/scr/drv_mrf24j40.c: 310:     SetLongAddr((0x200), 0x03);
  1644   00116C  0E02               	movlw	2
  1645   00116E  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  1646   001170  0E00               	movlw	0
  1647   001172  6E2F               	movwf	SetLongAddr@reg_address^0,c
  1648   001174  0E03               	movlw	3
  1649   001176  6E31               	movwf	SetLongAddr@value^0,c
  1650   001178  EC38  F00A         	call	_SetLongAddr	;wreg free
  1651                           
  1652                           ;drivers/scr/drv_mrf24j40.c: 311:  SetLongAddr((0x201), 0x02);
  1653   00117C  0E02               	movlw	2
  1654   00117E  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  1655   001180  0E01               	movlw	1
  1656   001182  6E2F               	movwf	SetLongAddr@reg_address^0,c
  1657   001184  0E02               	movlw	2
  1658   001186  6E31               	movwf	SetLongAddr@value^0,c
  1659   001188  EC38  F00A         	call	_SetLongAddr	;wreg free
  1660                           
  1661                           ;drivers/scr/drv_mrf24j40.c: 312:  SetChannel();
  1662   00118C  EC71  F00A         	call	_SetChannel	;wreg free
  1663                           
  1664                           ;drivers/scr/drv_mrf24j40.c: 321:  SetShortAddr((0x00),0x00);
  1665   001190  0E00               	movlw	0
  1666   001192  6E2C               	movwf	SetShortAddr@value^0,c
  1667   001194  0E00               	movlw	0
  1668   001196  ECC2  F00A         	call	_SetShortAddr
  1669   00119A  0012               	return		;funcret
  1670   00119C                     __end_of_MRF24J40Init:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _SetDeviceMACAddress *****************
  1674 ;; Defined at:
  1675 ;;		line 447 in file "drivers/scr/drv_mrf24j40.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  i               2    4[COMRAM] int 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;Total ram usage:        2 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 3
  1696 ;; This function calls:
  1697 ;;		_SetShortAddr
  1698 ;; This function is called by:
  1699 ;;		_MRF24J40Init
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text6
  1704   00142E                     __ptext6:
  1705                           	callstack 0
  1706   00142E                     _SetDeviceMACAddress:
  1707                           	callstack 26
  1708   00142E                     
  1709                           ;drivers/scr/drv_mrf24j40.c: 449:     my_default_mac_address = EADR0;
  1710   00142E  0E05               	movlw	5
  1711   001430  6E29               	movwf	_my_default_mac_address^0,c
  1712                           
  1713                           ;drivers/scr/drv_mrf24j40.c: 451:     for(int i = 0; i < 8; i++) {
  1714   001432  0E00               	movlw	0
  1715   001434  6E2F               	movwf	(SetDeviceMACAddress@i+1)^0,c
  1716   001436  0E00               	movlw	0
  1717   001438  6E2E               	movwf	SetDeviceMACAddress@i^0,c
  1718   00143A                     l1533:
  1719                           
  1720                           ;drivers/scr/drv_mrf24j40.c: 453:         SetShortAddr(my_default_mac_address++, mrf24_d
      +                          ata_config.my_mac[i]);
  1721   00143A  502E               	movf	SetDeviceMACAddress@i^0,w,c
  1722   00143C  0F15               	addlw	low (_mrf24_data_config+20)
  1723   00143E  6ED9               	movwf	fsr2l,c
  1724   001440  6ADA               	clrf	fsr2h,c
  1725   001442  50DF               	movf	indf2,w,c
  1726   001444  6E2C               	movwf	SetShortAddr@value^0,c
  1727   001446  5029               	movf	_my_default_mac_address^0,w,c
  1728   001448  ECC2  F00A         	call	_SetShortAddr
  1729   00144C  2A29               	incf	_my_default_mac_address^0,f,c
  1730   00144E                     
  1731                           ;drivers/scr/drv_mrf24j40.c: 454:     }
  1732   00144E  4A2E               	infsnz	SetDeviceMACAddress@i^0,f,c
  1733   001450  2A2F               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  1734   001452  BE2F               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  1735   001454  EF35  F00A         	goto	u271
  1736   001458  502F               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  1737   00145A  E109               	bnz	u270
  1738   00145C  0E08               	movlw	8
  1739   00145E  5C2E               	subwf	SetDeviceMACAddress@i^0,w,c
  1740   001460  A0D8               	btfss	status,0,c
  1741   001462  EF35  F00A         	goto	u271
  1742   001466  EF37  F00A         	goto	u270
  1743   00146A                     u271:
  1744   00146A  EF1D  F00A         	goto	l1533
  1745   00146E                     u270:
  1746   00146E  0012               	return		;funcret
  1747   001470                     __end_of_SetDeviceMACAddress:
  1748                           	callstack 0
  1749                           
  1750 ;; *************** function _SetDeviceAddress *****************
  1751 ;; Defined at:
  1752 ;;		line 433 in file "drivers/scr/drv_mrf24j40.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:        0 bytes
  1771 ;; Hardware stack levels used: 1
  1772 ;; Hardware stack levels required when called: 3
  1773 ;; This function calls:
  1774 ;;		_SetShortAddr
  1775 ;; This function is called by:
  1776 ;;		_MRF24J40Init
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text7
  1781   00150E                     __ptext7:
  1782                           	callstack 0
  1783   00150E                     _SetDeviceAddress:
  1784                           	callstack 26
  1785   00150E                     
  1786                           ;drivers/scr/drv_mrf24j40.c: 435:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> 8));
  1787   00150E  5020               	movf	(_mrf24_data_config+31)^0,w,c
  1788   001510  6E2C               	movwf	SetShortAddr@value^0,c
  1789   001512  0E04               	movlw	4
  1790   001514  ECC2  F00A         	call	_SetShortAddr
  1791                           
  1792                           ;drivers/scr/drv_mrf24j40.c: 436:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  1793   001518  C01F  F02C         	movff	_mrf24_data_config+30,SetShortAddr@value
  1794   00151C  0E03               	movlw	3
  1795   00151E  ECC2  F00A         	call	_SetShortAddr
  1796                           
  1797                           ;drivers/scr/drv_mrf24j40.c: 437:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> 8));
  1798   001522  501E               	movf	(_mrf24_data_config+29)^0,w,c
  1799   001524  6E2C               	movwf	SetShortAddr@value^0,c
  1800   001526  0E02               	movlw	2
  1801   001528  ECC2  F00A         	call	_SetShortAddr
  1802                           
  1803                           ;drivers/scr/drv_mrf24j40.c: 438:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  1804   00152C  C01D  F02C         	movff	_mrf24_data_config+28,SetShortAddr@value
  1805   001530  0E01               	movlw	1
  1806   001532  ECC2  F00A         	call	_SetShortAddr
  1807   001536  0012               	return		;funcret
  1808   001538                     __end_of_SetDeviceAddress:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _SetChannel *****************
  1812 ;; Defined at:
  1813 ;;		line 419 in file "drivers/scr/drv_mrf24j40.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 4
  1834 ;; This function calls:
  1835 ;;		_SetLongAddr
  1836 ;;		_SetShortAddr
  1837 ;; This function is called by:
  1838 ;;		_MRF24J40Init
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text8
  1843   0014E2                     __ptext8:
  1844                           	callstack 0
  1845   0014E2                     _SetChannel:
  1846                           	callstack 25
  1847   0014E2                     
  1848                           ;drivers/scr/drv_mrf24j40.c: 421:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  1849   0014E2  0E02               	movlw	2
  1850   0014E4  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  1851   0014E6  0E00               	movlw	0
  1852   0014E8  6E2F               	movwf	SetLongAddr@reg_address^0,c
  1853   0014EA  C004  F031         	movff	_mrf24_data_config+3,SetLongAddr@value
  1854   0014EE  EC38  F00A         	call	_SetLongAddr	;wreg free
  1855                           
  1856                           ;drivers/scr/drv_mrf24j40.c: 422:  SetShortAddr((0x36), 0x04);
  1857   0014F2  0E04               	movlw	4
  1858   0014F4  6E2C               	movwf	SetShortAddr@value^0,c
  1859   0014F6  0E36               	movlw	54
  1860   0014F8  ECC2  F00A         	call	_SetShortAddr
  1861                           
  1862                           ;drivers/scr/drv_mrf24j40.c: 423:  SetShortAddr((0x36), 0x00);
  1863   0014FC  0E00               	movlw	0
  1864   0014FE  6E2C               	movwf	SetShortAddr@value^0,c
  1865   001500  0E36               	movlw	54
  1866   001502  ECC2  F00A         	call	_SetShortAddr
  1867   001506                     
  1868                           ;drivers/scr/drv_mrf24j40.c: 424:  _delay((unsigned long)((192)*(16000000/4000000.0)));;
  1869   001506  0E00               	movlw	0
  1870   001508                     u437:
  1871   001508  2EE8               	decfsz	wreg,f,c
  1872   00150A  D7FE               	bra	u437
  1873   00150C  0012               	return		;funcret
  1874   00150E                     __end_of_SetChannel:
  1875                           	callstack 0
  1876                           
  1877 ;; *************** function _InicializoVariables *****************
  1878 ;; Defined at:
  1879 ;;		line 331 in file "drivers/scr/drv_mrf24j40.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;		None
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  i               2    1[COMRAM] int 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1895 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1896 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1897 ;;Total ram usage:        3 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_MRF24J40Init
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text9
  1907   001296                     __ptext9:
  1908                           	callstack 0
  1909   001296                     _InicializoVariables:
  1910                           	callstack 29
  1911   001296                     
  1912                           ;drivers/scr/drv_mrf24j40.c: 333:     for(int i = 0; i < 16; i++){
  1913   001296  0E00               	movlw	0
  1914   001298  6E2C               	movwf	(InicializoVariables@i+1)^0,c
  1915   00129A  0E00               	movlw	0
  1916   00129C  6E2B               	movwf	InicializoVariables@i^0,c
  1917   00129E                     l1481:
  1918                           
  1919                           ;drivers/scr/drv_mrf24j40.c: 335:         if(i < 8)
  1920   00129E  BE2C               	btfsc	(InicializoVariables@i+1)^0,7,c
  1921   0012A0  EF5D  F009         	goto	u250
  1922   0012A4  502C               	movf	(InicializoVariables@i+1)^0,w,c
  1923   0012A6  E107               	bnz	u251
  1924   0012A8  0E08               	movlw	8
  1925   0012AA  5C2B               	subwf	InicializoVariables@i^0,w,c
  1926   0012AC  B0D8               	btfsc	status,0,c
  1927   0012AE  EF5B  F009         	goto	u251
  1928   0012B2  EF5D  F009         	goto	u250
  1929   0012B6                     u251:
  1930   0012B6  EF69  F009         	goto	l56
  1931   0012BA                     u250:
  1932   0012BA                     
  1933                           ;drivers/scr/drv_mrf24j40.c: 336:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  1934   0012BA  502B               	movf	InicializoVariables@i^0,w,c
  1935   0012BC  0F11               	addlw	low _default_mac_address
  1936   0012BE  6E2A               	movwf	??_InicializoVariables^0,c
  1937   0012C0  C02A  FFF6         	movff	??_InicializoVariables,tblptrl
  1938   0012C4                     	if	0	;There is only one active tblptr byte
  1939   0012C4                     	endif
  1940   0012C4                     	if	0	;tblptru may be non-zero
  1941   0012C4                     	endif
  1942   0012C4                     	if	0	;tblptru may be non-zero
  1943   0012C4                     	endif
  1944   0012C4  502B               	movf	InicializoVariables@i^0,w,c
  1945   0012C6  0F15               	addlw	low (_mrf24_data_config+20)
  1946   0012C8  6ED9               	movwf	fsr2l,c
  1947   0012CA  6ADA               	clrf	fsr2h,c
  1948   0012CC  0008               	tblrd		*
  1949   0012CE  CFF5 FFDF          	movff	tablat,indf2
  1950   0012D2                     l56:
  1951                           
  1952                           ;drivers/scr/drv_mrf24j40.c: 337:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  1953   0012D2  502B               	movf	InicializoVariables@i^0,w,c
  1954   0012D4  0F01               	addlw	low _default_security_key
  1955   0012D6  6E2A               	movwf	??_InicializoVariables^0,c
  1956   0012D8  C02A  FFF6         	movff	??_InicializoVariables,tblptrl
  1957   0012DC                     	if	0	;There is only one active tblptr byte
  1958   0012DC                     	endif
  1959   0012DC                     	if	0	;tblptru may be non-zero
  1960   0012DC                     	endif
  1961   0012DC                     	if	0	;tblptru may be non-zero
  1962   0012DC                     	endif
  1963   0012DC  502B               	movf	InicializoVariables@i^0,w,c
  1964   0012DE  0F05               	addlw	low (_mrf24_data_config+4)
  1965   0012E0  6ED9               	movwf	fsr2l,c
  1966   0012E2  6ADA               	clrf	fsr2h,c
  1967   0012E4  0008               	tblrd		*
  1968   0012E6  CFF5 FFDF          	movff	tablat,indf2
  1969   0012EA                     
  1970                           ;drivers/scr/drv_mrf24j40.c: 338:     }
  1971   0012EA  4A2B               	infsnz	InicializoVariables@i^0,f,c
  1972   0012EC  2A2C               	incf	(InicializoVariables@i+1)^0,f,c
  1973   0012EE  BE2C               	btfsc	(InicializoVariables@i+1)^0,7,c
  1974   0012F0  EF83  F009         	goto	u261
  1975   0012F4  502C               	movf	(InicializoVariables@i+1)^0,w,c
  1976   0012F6  E109               	bnz	u260
  1977   0012F8  0E10               	movlw	16
  1978   0012FA  5C2B               	subwf	InicializoVariables@i^0,w,c
  1979   0012FC  A0D8               	btfss	status,0,c
  1980   0012FE  EF83  F009         	goto	u261
  1981   001302  EF85  F009         	goto	u260
  1982   001306                     u261:
  1983   001306  EF4F  F009         	goto	l1481
  1984   00130A                     u260:
  1985   00130A                     
  1986                           ;drivers/scr/drv_mrf24j40.c: 339:     mrf24_data_config.sequence_number = 0X01;
  1987   00130A  0E01               	movlw	1
  1988   00130C  6E03               	movwf	(_mrf24_data_config+2)^0,c
  1989                           
  1990                           ;drivers/scr/drv_mrf24j40.c: 340:     mrf24_data_config.my_channel = CH_11;
  1991   00130E  0E03               	movlw	3
  1992   001310  6E04               	movwf	(_mrf24_data_config+3)^0,c
  1993   001312                     
  1994                           ;drivers/scr/drv_mrf24j40.c: 341:     mrf24_data_config.get_new_msg = 0;
  1995   001312  6A01               	clrf	_mrf24_data_config^0,c
  1996   001314                     
  1997                           ;drivers/scr/drv_mrf24j40.c: 342:     mrf24_data_config.put_new_msg = 0;
  1998   001314  6A02               	clrf	(_mrf24_data_config+1)^0,c
  1999                           
  2000                           ;drivers/scr/drv_mrf24j40.c: 343:     mrf24_data_config.my_panid = 0x1234;
  2001   001316  0E12               	movlw	18
  2002   001318  6E1E               	movwf	(_mrf24_data_config+29)^0,c
  2003   00131A  0E34               	movlw	52
  2004   00131C  6E1D               	movwf	(_mrf24_data_config+28)^0,c
  2005                           
  2006                           ;drivers/scr/drv_mrf24j40.c: 344:     mrf24_data_config.my_address = 0xDE11;
  2007   00131E  0EDE               	movlw	222
  2008   001320  6E20               	movwf	(_mrf24_data_config+31)^0,c
  2009   001322  0E11               	movlw	17
  2010   001324  6E1F               	movwf	(_mrf24_data_config+30)^0,c
  2011                           
  2012                           ;drivers/scr/drv_mrf24j40.c: 345:     mrf24_data_in.source_address = 0X00;
  2013   001326  0E00               	movlw	0
  2014   001328  0100               	movlb	0	; () banked
  2015   00132A  6F63               	movwf	(_mrf24_data_in+3)& (0+255),b
  2016   00132C  0E00               	movlw	0
  2017   00132E  6F62               	movwf	(_mrf24_data_in+2)& (0+255),b
  2018                           
  2019                           ;drivers/scr/drv_mrf24j40.c: 346:     mrf24_data_in.source_panid = 0X00;
  2020   001330  0E00               	movlw	0
  2021   001332  6F61               	movwf	(_mrf24_data_in+1)& (0+255),b
  2022   001334  0E00               	movlw	0
  2023   001336  6F60               	movwf	_mrf24_data_in& (0+255),b
  2024   001338                     
  2025                           ; BSR set to: 0
  2026                           ;drivers/scr/drv_mrf24j40.c: 347:     mrf24_data_in.tamano_mensaje = 0X00;
  2027   001338  6B64               	clrf	(_mrf24_data_in+4)& (0+255),b
  2028   00133A                     
  2029                           ; BSR set to: 0
  2030                           ;drivers/scr/drv_mrf24j40.c: 348:     mrf24_data_in.buffer_entrada[0] = 0X00;
  2031   00133A  6B65               	clrf	(_mrf24_data_in+5)& (0+255),b
  2032   00133C                     
  2033                           ; BSR set to: 0
  2034   00133C  0012               	return		;funcret
  2035   00133E                     __end_of_InicializoVariables:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _InicializoPines *****************
  2039 ;; Defined at:
  2040 ;;		line 21 in file "drivers/scr/drv_mrf24j40_port.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 1
  2061 ;; This function calls:
  2062 ;;		_SetCSPin
  2063 ;;		_SetResetPin
  2064 ;;		_SetWakePin
  2065 ;; This function is called by:
  2066 ;;		_MRF24J40Init
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text10
  2071   0015A4                     __ptext10:
  2072                           	callstack 0
  2073   0015A4                     _InicializoPines:
  2074                           	callstack 28
  2075   0015A4                     
  2076                           ;drivers/scr/drv_mrf24j40_port.c: 23:     TRISBbits.TRISB0 = 1;
  2077   0015A4  8093               	bsf	147,0,c	;volatile
  2078                           
  2079                           ;drivers/scr/drv_mrf24j40_port.c: 24:     TRISCbits.TRISC6 = 0;
  2080   0015A6  9C94               	bcf	148,6,c	;volatile
  2081                           
  2082                           ;drivers/scr/drv_mrf24j40_port.c: 25:     TRISCbits.TRISC7 = 0;
  2083   0015A8  9E94               	bcf	148,7,c	;volatile
  2084                           
  2085                           ;drivers/scr/drv_mrf24j40_port.c: 26:     TRISDbits.TRISD4 = 0;
  2086   0015AA  9895               	bcf	149,4,c	;volatile
  2087   0015AC                     
  2088                           ;drivers/scr/drv_mrf24j40_port.c: 27:     SetCSPin(1);
  2089   0015AC  0E01               	movlw	1
  2090   0015AE  EC28  F00B         	call	_SetCSPin
  2091                           
  2092                           ;drivers/scr/drv_mrf24j40_port.c: 28:     SetWakePin(1);
  2093   0015B2  0E01               	movlw	1
  2094   0015B4  EC0C  F00B         	call	_SetWakePin
  2095                           
  2096                           ;drivers/scr/drv_mrf24j40_port.c: 29:     SetResetPin(0);
  2097   0015B8  0E00               	movlw	0
  2098   0015BA  EC13  F00B         	call	_SetResetPin
  2099   0015BE  0012               	return		;funcret
  2100   0015C0                     __end_of_InicializoPines:
  2101                           	callstack 0
  2102                           
  2103 ;; *************** function _SetWakePin *****************
  2104 ;; Defined at:
  2105 ;;		line 49 in file "drivers/scr/drv_mrf24j40_port.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  estado          1    wreg     _Bool 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  estado          1    0[COMRAM] _Bool 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;Total ram usage:        1 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_InicializoPines
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text11
  2133   001618                     __ptext11:
  2134                           	callstack 0
  2135   001618                     _SetWakePin:
  2136                           	callstack 28
  2137                           
  2138                           ;incstack = 0
  2139                           ;SetWakePin@estado stored from wreg
  2140   001618  6E2A               	movwf	SetWakePin@estado^0,c
  2141   00161A                     
  2142                           ;drivers/scr/drv_mrf24j40_port.c: 51:     LATCbits.LATC7 = estado;
  2143   00161A  B02A               	btfsc	SetWakePin@estado^0,0,c
  2144   00161C  D002               	bra	u65
  2145   00161E  9E8B               	bcf	139,7,c	;volatile
  2146   001620  D001               	bra	u66
  2147   001622                     u65:
  2148   001622  8E8B               	bsf	139,7,c	;volatile
  2149   001624                     u66:
  2150   001624  0012               	return		;funcret
  2151   001626                     __end_of_SetWakePin:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _SetResetPin *****************
  2155 ;; Defined at:
  2156 ;;		line 60 in file "drivers/scr/drv_mrf24j40_port.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  estado          1    wreg     _Bool 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  estado          1    0[COMRAM] _Bool 
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;Total ram usage:        1 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_MRF24J40Init
  2180 ;;		_InicializoPines
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text12
  2185   001626                     __ptext12:
  2186                           	callstack 0
  2187   001626                     _SetResetPin:
  2188                           	callstack 29
  2189                           
  2190                           ;incstack = 0
  2191                           ;SetResetPin@estado stored from wreg
  2192   001626  6E2A               	movwf	SetResetPin@estado^0,c
  2193   001628                     
  2194                           ;drivers/scr/drv_mrf24j40_port.c: 62:     LATDbits.LATD4 = estado;
  2195   001628  B02A               	btfsc	SetResetPin@estado^0,0,c
  2196   00162A  D002               	bra	u45
  2197   00162C  988C               	bcf	140,4,c	;volatile
  2198   00162E  D001               	bra	u46
  2199   001630                     u45:
  2200   001630  888C               	bsf	140,4,c	;volatile
  2201   001632                     u46:
  2202   001632  0012               	return		;funcret
  2203   001634                     __end_of_SetResetPin:
  2204                           	callstack 0
  2205                           
  2206 ;; *************** function _GetShortAddr *****************
  2207 ;; Defined at:
  2208 ;;		line 372 in file "drivers/scr/drv_mrf24j40.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  reg_address     1    wreg     unsigned char 
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;  reg_address     1    3[COMRAM] unsigned char 
  2213 ;;  leido_spi       1    2[COMRAM] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      unsigned char 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2224 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2226 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2227 ;;Total ram usage:        2 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 2
  2230 ;; This function calls:
  2231 ;;		_ReadByteSPIPort
  2232 ;;		_SetCSPin
  2233 ;;		_WriteByteSPIPort
  2234 ;; This function is called by:
  2235 ;;		_MRF24J40Init
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239                           	psect	text13
  2240   00155E                     __ptext13:
  2241                           	callstack 0
  2242   00155E                     _GetShortAddr:
  2243                           	callstack 27
  2244                           
  2245                           ;incstack = 0
  2246                           ;GetShortAddr@reg_address stored from wreg
  2247   00155E  6E2D               	movwf	GetShortAddr@reg_address^0,c
  2248   001560                     
  2249                           ;drivers/scr/drv_mrf24j40.c: 375:     reg_address = (uint8_t) (reg_address << 1) & 0x7E;
  2250   001560  502D               	movf	GetShortAddr@reg_address^0,w,c
  2251   001562  242D               	addwf	GetShortAddr@reg_address^0,w,c
  2252   001564  0B7E               	andlw	126
  2253   001566  6E2D               	movwf	GetShortAddr@reg_address^0,c
  2254   001568                     
  2255                           ;drivers/scr/drv_mrf24j40.c: 376:     SetCSPin(0);
  2256   001568  0E00               	movlw	0
  2257   00156A  EC28  F00B         	call	_SetCSPin
  2258   00156E                     
  2259                           ;drivers/scr/drv_mrf24j40.c: 377:     WriteByteSPIPort(reg_address);
  2260   00156E  502D               	movf	GetShortAddr@reg_address^0,w,c
  2261   001570  EC39  F00B         	call	_WriteByteSPIPort
  2262   001574                     
  2263                           ;drivers/scr/drv_mrf24j40.c: 378:     leido_spi = ReadByteSPIPort();
  2264   001574  EC3E  F00B         	call	_ReadByteSPIPort	;wreg free
  2265   001578  6E2C               	movwf	GetShortAddr@leido_spi^0,c
  2266   00157A                     
  2267                           ;drivers/scr/drv_mrf24j40.c: 379:     SetCSPin(1);
  2268   00157A  0E01               	movlw	1
  2269   00157C  EC28  F00B         	call	_SetCSPin
  2270   001580                     
  2271                           ;drivers/scr/drv_mrf24j40.c: 380:  return leido_spi;
  2272   001580  502C               	movf	GetShortAddr@leido_spi^0,w,c
  2273   001582  0012               	return		;funcret
  2274   001584                     __end_of_GetShortAddr:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _GetLongAddr *****************
  2278 ;; Defined at:
  2279 ;;		line 403 in file "drivers/scr/drv_mrf24j40.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  reg_address     2    5[COMRAM] unsigned short 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  respuesta       1    9[COMRAM] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      unsigned char 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;Total ram usage:        5 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 3
  2300 ;; This function calls:
  2301 ;;		_ReadByteSPIPort
  2302 ;;		_SetCSPin
  2303 ;;		_Write2ByteSPIPort
  2304 ;; This function is called by:
  2305 ;;		_MRF24J40Init
  2306 ;;		_ReciboPaquete
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text14
  2311   0013A6                     __ptext14:
  2312                           	callstack 0
  2313   0013A6                     _GetLongAddr:
  2314                           	callstack 26
  2315   0013A6                     
  2316                           ;drivers/scr/drv_mrf24j40.c: 405:  uint8_t respuesta;;drivers/scr/drv_mrf24j40.c: 406:  
      +                             reg_address = (reg_address << 5) | 0X8000;
  2317   0013A6  C02F  F031         	movff	GetLongAddr@reg_address,??_GetLongAddr
  2318   0013AA  C030  F032         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  2319   0013AE  0E05               	movlw	5
  2320   0013B0                     u285:
  2321   0013B0  90D8               	bcf	status,0,c
  2322   0013B2  3631               	rlcf	??_GetLongAddr^0,f,c
  2323   0013B4  3632               	rlcf	(??_GetLongAddr+1)^0,f,c
  2324   0013B6  2EE8               	decfsz	wreg,f,c
  2325   0013B8  EFD8  F009         	goto	u285
  2326   0013BC  0E00               	movlw	0
  2327   0013BE  1031               	iorwf	??_GetLongAddr^0,w,c
  2328   0013C0  6E2F               	movwf	GetLongAddr@reg_address^0,c
  2329   0013C2  0E80               	movlw	128
  2330   0013C4  1032               	iorwf	(??_GetLongAddr+1)^0,w,c
  2331   0013C6  6E30               	movwf	(GetLongAddr@reg_address+1)^0,c
  2332   0013C8                     
  2333                           ;drivers/scr/drv_mrf24j40.c: 407:     SetCSPin(0);
  2334   0013C8  0E00               	movlw	0
  2335   0013CA  EC28  F00B         	call	_SetCSPin
  2336   0013CE                     
  2337                           ;drivers/scr/drv_mrf24j40.c: 408:     Write2ByteSPIPort(reg_address);
  2338   0013CE  C02F  F02D         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  2339   0013D2  C030  F02E         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  2340   0013D6  EC1A  F00B         	call	_Write2ByteSPIPort	;wreg free
  2341   0013DA                     
  2342                           ;drivers/scr/drv_mrf24j40.c: 409:  respuesta = ReadByteSPIPort();
  2343   0013DA  EC3E  F00B         	call	_ReadByteSPIPort	;wreg free
  2344   0013DE  6E33               	movwf	GetLongAddr@respuesta^0,c
  2345   0013E0                     
  2346                           ;drivers/scr/drv_mrf24j40.c: 410:     SetCSPin(1);
  2347   0013E0  0E01               	movlw	1
  2348   0013E2  EC28  F00B         	call	_SetCSPin
  2349   0013E6                     
  2350                           ;drivers/scr/drv_mrf24j40.c: 411:  return respuesta;
  2351   0013E6  5033               	movf	GetLongAddr@respuesta^0,w,c
  2352   0013E8  0012               	return		;funcret
  2353   0013EA                     __end_of_GetLongAddr:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _ReadByteSPIPort *****************
  2357 ;; Defined at:
  2358 ;;		line 93 in file "drivers/scr/drv_mrf24j40_port.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;		None
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      unsigned char 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, cstack
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;Total ram usage:        0 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 1
  2379 ;; This function calls:
  2380 ;;		_SPIRead
  2381 ;; This function is called by:
  2382 ;;		_GetShortAddr
  2383 ;;		_GetLongAddr
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text15
  2388   00167C                     __ptext15:
  2389                           	callstack 0
  2390   00167C                     _ReadByteSPIPort:
  2391                           	callstack 27
  2392   00167C                     
  2393                           ;drivers/scr/drv_mrf24j40_port.c: 95:     return SPIRead();
  2394   00167C  ECF8  F00A         	call	_SPIRead	;wreg free
  2395   001680  0012               	return		;funcret
  2396   001682                     __end_of_ReadByteSPIPort:
  2397                           	callstack 0
  2398                           
  2399 ;; *************** function _SPIRead *****************
  2400 ;; Defined at:
  2401 ;;		line 74 in file "drivers/scr/drv_mspi_port.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      unsigned char 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;Total ram usage:        0 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_ReadByteSPIPort
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text16
  2429   0015F0                     __ptext16:
  2430                           	callstack 0
  2431   0015F0                     _SPIRead:
  2432                           	callstack 27
  2433   0015F0                     
  2434                           ;drivers/scr/drv_mspi_port.c: 76:     SSPCON1bits.WCOL = 0;
  2435   0015F0  9EC6               	bcf	198,7,c	;volatile
  2436                           
  2437                           ;drivers/scr/drv_mspi_port.c: 77:     SSPBUF = 0X00;
  2438   0015F2  6AC9               	clrf	201,c	;volatile
  2439   0015F4                     l187:
  2440   0015F4  A0C7               	btfss	199,0,c	;volatile
  2441   0015F6  EFFF  F00A         	goto	u231
  2442   0015FA  EF01  F00B         	goto	u230
  2443   0015FE                     u231:
  2444   0015FE  EFFA  F00A         	goto	l187
  2445   001602                     u230:
  2446   001602                     
  2447                           ;drivers/scr/drv_mspi_port.c: 79:     return SSPBUF;
  2448   001602  50C9               	movf	201,w,c	;volatile
  2449   001604  0012               	return		;funcret
  2450   001606                     __end_of_SPIRead:
  2451                           	callstack 0
  2452                           
  2453 ;; *************** function _EnviarDato *****************
  2454 ;; Defined at:
  2455 ;;		line 499 in file "drivers/scr/drv_mrf24j40.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;		None
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  i               1   15[COMRAM] char 
  2460 ;;  pos_memoria     1   16[COMRAM] unsigned char 
  2461 ;;  largo_cabece    1    0        unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;Total ram usage:        7 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 4
  2478 ;; This function calls:
  2479 ;;		_SetLongAddr
  2480 ;;		_SetShortAddr
  2481 ;; This function is called by:
  2482 ;;		_main
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           	psect	text17
  2487   00119C                     __ptext17:
  2488                           	callstack 0
  2489   00119C                     _EnviarDato:
  2490                           	callstack 26
  2491   00119C                     
  2492                           ;drivers/scr/drv_mrf24j40.c: 501:  uint8_t pos_memoria = 0;
  2493   00119C  6A3A               	clrf	EnviarDato@pos_memoria^0,c
  2494   00119E                     
  2495                           ;drivers/scr/drv_mrf24j40.c: 503:  SetLongAddr(pos_memoria++, largo_cabecera);
  2496   00119E  0E00               	movlw	0
  2497   0011A0  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  2498   0011A2  0E00               	movlw	0
  2499   0011A4  6E2F               	movwf	SetLongAddr@reg_address^0,c
  2500   0011A6  0E0E               	movlw	14
  2501   0011A8  6E31               	movwf	SetLongAddr@value^0,c
  2502   0011AA  EC38  F00A         	call	_SetLongAddr	;wreg free
  2503   0011AE  2A3A               	incf	EnviarDato@pos_memoria^0,f,c
  2504   0011B0                     
  2505                           ;drivers/scr/drv_mrf24j40.c: 504:  SetLongAddr(pos_memoria++, mrf24_data_out.largo_mensa
      +                          je + largo_cabecera);
  2506   0011B0  C03A  F02F         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  2507   0011B4  6A30               	clrf	(SetLongAddr@reg_address+1)^0,c
  2508   0011B6  5027               	movf	(_mrf24_data_out+4)^0,w,c
  2509   0011B8  0F0E               	addlw	14
  2510   0011BA  6E31               	movwf	SetLongAddr@value^0,c
  2511   0011BC  EC38  F00A         	call	_SetLongAddr	;wreg free
  2512   0011C0  2A3A               	incf	EnviarDato@pos_memoria^0,f,c
  2513   0011C2                     
  2514                           ;drivers/scr/drv_mrf24j40.c: 505:  SetLongAddr(pos_memoria++, (0X01)|(0X20)|(0X40));
  2515   0011C2  C03A  F02F         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  2516   0011C6  6A30               	clrf	(SetLongAddr@reg_address+1)^0,c
  2517   0011C8  0E61               	movlw	97
  2518   0011CA  6E31               	movwf	SetLongAddr@value^0,c
  2519   0011CC  EC38  F00A         	call	_SetLongAddr	;wreg free
  2520   0011D0  2A3A               	incf	EnviarDato@pos_memoria^0,f,c
  2521   0011D2                     
  2522                           ;drivers/scr/drv_mrf24j40.c: 506:  SetLongAddr(pos_memoria++, (0XC0)|(0X08));
  2523   0011D2  C03A  F02F         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  2524   0011D6  6A30               	clrf	(SetLongAddr@reg_address+1)^0,c
  2525   0011D8  0EC8               	movlw	200
  2526   0011DA  6E31               	movwf	SetLongAddr@value^0,c
  2527   0011DC  EC38  F00A         	call	_SetLongAddr	;wreg free
  2528   0011E0  2A3A               	incf	EnviarDato@pos_memoria^0,f,c
  2529   0011E2                     
  2530                           ;drivers/scr/drv_mrf24j40.c: 507:  SetLongAddr(pos_memoria++, mrf24_data_config.sequence
      +                          _number++);
  2531   0011E2  C03A  F02F         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  2532   0011E6  6A30               	clrf	(SetLongAddr@reg_address+1)^0,c
  2533   0011E8  EE20  F003         	lfsr	2,_mrf24_data_config+2
  2534   0011EC  50DF               	movf	indf2,w,c
  2535   0011EE  2ADF               	incf	indf2,f,c
  2536   0011F0  6E31               	movwf	SetLongAddr@value^0,c
  2537   0011F2  EC38  F00A         	call	_SetLongAddr	;wreg free
  2538   0011F6  2A3A               	incf	EnviarDato@pos_memoria^0,f,c
  2539   0011F8                     
  2540                           ;drivers/scr/drv_mrf24j40.c: 508:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_panid);
  2541   0011F8  C03A  F02F         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  2542   0011FC  6A30               	clrf	(SetLongAddr@reg_address+1)^0,c
  2543   0011FE  C023  F031         	movff	_mrf24_data_out,SetLongAddr@value
  2544   001202  EC38  F00A         	call	_SetLongAddr	;wreg free
  2545   001206  2A3A               	incf	EnviarDato@pos_memoria^0,f,c
  2546   001208                     
  2547                           ;drivers/scr/drv_mrf24j40.c: 509:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_panid >> 8));
  2548   001208  C03A  F02F         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  2549   00120C  6A30               	clrf	(SetLongAddr@reg_address+1)^0,c
  2550   00120E  5024               	movf	(_mrf24_data_out+1)^0,w,c
  2551   001210  6E31               	movwf	SetLongAddr@value^0,c
  2552   001212  EC38  F00A         	call	_SetLongAddr	;wreg free
  2553   001216  2A3A               	incf	EnviarDato@pos_memoria^0,f,c
  2554   001218                     
  2555                           ;drivers/scr/drv_mrf24j40.c: 510:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_address);
  2556   001218  C03A  F02F         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  2557   00121C  6A30               	clrf	(SetLongAddr@reg_address+1)^0,c
  2558   00121E  C025  F031         	movff	_mrf24_data_out+2,SetLongAddr@value
  2559   001222  EC38  F00A         	call	_SetLongAddr	;wreg free
  2560   001226  2A3A               	incf	EnviarDato@pos_memoria^0,f,c
  2561   001228                     
  2562                           ;drivers/scr/drv_mrf24j40.c: 511:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_address >> 8));
  2563   001228  C03A  F02F         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  2564   00122C  6A30               	clrf	(SetLongAddr@reg_address+1)^0,c
  2565   00122E  5026               	movf	(_mrf24_data_out+3)^0,w,c
  2566   001230  6E31               	movwf	SetLongAddr@value^0,c
  2567   001232  EC38  F00A         	call	_SetLongAddr	;wreg free
  2568   001236  2A3A               	incf	EnviarDato@pos_memoria^0,f,c
  2569   001238                     
  2570                           ;drivers/scr/drv_mrf24j40.c: 513:     for(int8_t i = 0; i < mrf24_data_out.largo_mensaje
      +                          ; i++) {
  2571   001238  6A39               	clrf	EnviarDato@i^0,c
  2572   00123A  EF2E  F009         	goto	l1683
  2573   00123E                     l1677:
  2574                           
  2575                           ;drivers/scr/drv_mrf24j40.c: 515:   SetLongAddr(pos_memoria++, mrf24_data_out.buffer_sal
      +                          ida[i]);
  2576   00123E  C03A  F02F         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  2577   001242  6A30               	clrf	(SetLongAddr@reg_address+1)^0,c
  2578   001244  5028               	movf	(_mrf24_data_out+5)^0,w,c
  2579   001246  2439               	addwf	EnviarDato@i^0,w,c
  2580   001248  6E34               	movwf	??_EnviarDato^0,c
  2581   00124A  C034  FFF6         	movff	??_EnviarDato,tblptrl
  2582   00124E                     	if	0	;There is only one active tblptr byte
  2583   00124E                     	endif
  2584   00124E                     	if	0	;tblptru may be non-zero
  2585   00124E                     	endif
  2586   00124E                     	if	0	;tblptru may be non-zero
  2587   00124E                     	endif
  2588   00124E  0008               	tblrd		*
  2589   001250  CFF5 F031          	movff	tablat,SetLongAddr@value
  2590   001254  EC38  F00A         	call	_SetLongAddr	;wreg free
  2591   001258  2A3A               	incf	EnviarDato@pos_memoria^0,f,c
  2592   00125A                     
  2593                           ;drivers/scr/drv_mrf24j40.c: 516:  }
  2594   00125A  2A39               	incf	EnviarDato@i^0,f,c
  2595   00125C                     l1683:
  2596   00125C  5027               	movf	(_mrf24_data_out+4)^0,w,c
  2597   00125E  6E34               	movwf	??_EnviarDato^0,c
  2598   001260  6A35               	clrf	(??_EnviarDato+1)^0,c
  2599   001262  C039  F036         	movff	EnviarDato@i,??_EnviarDato+2
  2600   001266  6A37               	clrf	(??_EnviarDato+3)^0,c
  2601   001268  BE36               	btfsc	(??_EnviarDato+2)^0,7,c
  2602   00126A  0637               	decf	(??_EnviarDato+3)^0,f,c
  2603   00126C  5034               	movf	??_EnviarDato^0,w,c
  2604   00126E  5C36               	subwf	(??_EnviarDato+2)^0,w,c
  2605   001270  5037               	movf	(??_EnviarDato+3)^0,w,c
  2606   001272  0A80               	xorlw	128
  2607   001274  6E38               	movwf	(??_EnviarDato+4)^0,c
  2608   001276  5035               	movf	(??_EnviarDato+1)^0,w,c
  2609   001278  0A80               	xorlw	128
  2610   00127A  5838               	subwfb	(??_EnviarDato+4)^0,w,c
  2611   00127C  A0D8               	btfss	status,0,c
  2612   00127E  EF43  F009         	goto	u321
  2613   001282  EF45  F009         	goto	u320
  2614   001286                     u321:
  2615   001286  EF1F  F009         	goto	l1677
  2616   00128A                     u320:
  2617   00128A                     
  2618                           ;drivers/scr/drv_mrf24j40.c: 517:  SetShortAddr((0x1B), 1 | (0X04));
  2619   00128A  0E05               	movlw	5
  2620   00128C  6E2C               	movwf	SetShortAddr@value^0,c
  2621   00128E  0E1B               	movlw	27
  2622   001290  ECC2  F00A         	call	_SetShortAddr
  2623   001294  0012               	return		;funcret
  2624   001296                     __end_of_EnviarDato:
  2625                           	callstack 0
  2626                           
  2627 ;; *************** function _SetShortAddr *****************
  2628 ;; Defined at:
  2629 ;;		line 357 in file "drivers/scr/drv_mrf24j40.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  reg_address     1    wreg     unsigned char 
  2632 ;;  value           1    2[COMRAM] unsigned char 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;  reg_address     1    3[COMRAM] unsigned char 
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2644 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2645 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;Total ram usage:        2 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 2
  2651 ;; This function calls:
  2652 ;;		_SetCSPin
  2653 ;;		_WriteByteSPIPort
  2654 ;; This function is called by:
  2655 ;;		_MRF24J40Init
  2656 ;;		_SetChannel
  2657 ;;		_SetDeviceAddress
  2658 ;;		_SetDeviceMACAddress
  2659 ;;		_EnviarDato
  2660 ;;		_EnviarDatoEncriptado
  2661 ;;		_EnviarComando
  2662 ;; This function uses a non-reentrant model
  2663 ;;
  2664                           
  2665                           	psect	text18
  2666   001584                     __ptext18:
  2667                           	callstack 0
  2668   001584                     _SetShortAddr:
  2669                           	callstack 27
  2670                           
  2671                           ;incstack = 0
  2672                           ;SetShortAddr@reg_address stored from wreg
  2673   001584  6E2D               	movwf	SetShortAddr@reg_address^0,c
  2674   001586                     
  2675                           ;drivers/scr/drv_mrf24j40.c: 359:     reg_address = (uint8_t) (reg_address << 1) | 0x01;
  2676   001586  80D8               	bsf	status,0,c
  2677   001588  362D               	rlcf	SetShortAddr@reg_address^0,f,c
  2678   00158A                     
  2679                           ;drivers/scr/drv_mrf24j40.c: 360:     SetCSPin(0);
  2680   00158A  0E00               	movlw	0
  2681   00158C  EC28  F00B         	call	_SetCSPin
  2682   001590                     
  2683                           ;drivers/scr/drv_mrf24j40.c: 361:  WriteByteSPIPort(reg_address);
  2684   001590  502D               	movf	SetShortAddr@reg_address^0,w,c
  2685   001592  EC39  F00B         	call	_WriteByteSPIPort
  2686   001596                     
  2687                           ;drivers/scr/drv_mrf24j40.c: 362:  WriteByteSPIPort(value);
  2688   001596  502C               	movf	SetShortAddr@value^0,w,c
  2689   001598  EC39  F00B         	call	_WriteByteSPIPort
  2690   00159C                     
  2691                           ;drivers/scr/drv_mrf24j40.c: 363:     SetCSPin(1);
  2692   00159C  0E01               	movlw	1
  2693   00159E  EC28  F00B         	call	_SetCSPin
  2694   0015A2  0012               	return		;funcret
  2695   0015A4                     __end_of_SetShortAddr:
  2696                           	callstack 0
  2697                           
  2698 ;; *************** function _SetLongAddr *****************
  2699 ;; Defined at:
  2700 ;;		line 388 in file "drivers/scr/drv_mrf24j40.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  reg_address     2    5[COMRAM] unsigned short 
  2703 ;;  value           1    7[COMRAM] unsigned char 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2715 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;Total ram usage:        5 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 3
  2722 ;; This function calls:
  2723 ;;		_SetCSPin
  2724 ;;		_Write2ByteSPIPort
  2725 ;;		_WriteByteSPIPort
  2726 ;; This function is called by:
  2727 ;;		_MRF24J40Init
  2728 ;;		_SetChannel
  2729 ;;		_EnviarDato
  2730 ;;		_EnviarDatoEncriptado
  2731 ;;		_EnviarComando
  2732 ;; This function uses a non-reentrant model
  2733 ;;
  2734                           
  2735                           	psect	text19
  2736   001470                     __ptext19:
  2737                           	callstack 0
  2738   001470                     _SetLongAddr:
  2739                           	callstack 26
  2740   001470                     
  2741                           ;drivers/scr/drv_mrf24j40.c: 390:     reg_address = (reg_address << 5) | 0X8010;
  2742   001470  C02F  F032         	movff	SetLongAddr@reg_address,??_SetLongAddr
  2743   001474  C030  F033         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  2744   001478  0E05               	movlw	5
  2745   00147A                     u245:
  2746   00147A  90D8               	bcf	status,0,c
  2747   00147C  3632               	rlcf	??_SetLongAddr^0,f,c
  2748   00147E  3633               	rlcf	(??_SetLongAddr+1)^0,f,c
  2749   001480  2EE8               	decfsz	wreg,f,c
  2750   001482  EF3D  F00A         	goto	u245
  2751   001486  0E10               	movlw	16
  2752   001488  1032               	iorwf	??_SetLongAddr^0,w,c
  2753   00148A  6E2F               	movwf	SetLongAddr@reg_address^0,c
  2754   00148C  0E80               	movlw	128
  2755   00148E  1033               	iorwf	(??_SetLongAddr+1)^0,w,c
  2756   001490  6E30               	movwf	(SetLongAddr@reg_address+1)^0,c
  2757   001492                     
  2758                           ;drivers/scr/drv_mrf24j40.c: 391:     SetCSPin(0);
  2759   001492  0E00               	movlw	0
  2760   001494  EC28  F00B         	call	_SetCSPin
  2761   001498                     
  2762                           ;drivers/scr/drv_mrf24j40.c: 392:     Write2ByteSPIPort(reg_address);
  2763   001498  C02F  F02D         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  2764   00149C  C030  F02E         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  2765   0014A0  EC1A  F00B         	call	_Write2ByteSPIPort	;wreg free
  2766   0014A4                     
  2767                           ;drivers/scr/drv_mrf24j40.c: 393:  WriteByteSPIPort(value);
  2768   0014A4  5031               	movf	SetLongAddr@value^0,w,c
  2769   0014A6  EC39  F00B         	call	_WriteByteSPIPort
  2770   0014AA                     
  2771                           ;drivers/scr/drv_mrf24j40.c: 394:     SetCSPin(1);
  2772   0014AA  0E01               	movlw	1
  2773   0014AC  EC28  F00B         	call	_SetCSPin
  2774   0014B0  0012               	return		;funcret
  2775   0014B2                     __end_of_SetLongAddr:
  2776                           	callstack 0
  2777                           
  2778 ;; *************** function _WriteByteSPIPort *****************
  2779 ;; Defined at:
  2780 ;;		line 71 in file "drivers/scr/drv_mrf24j40_port.c"
  2781 ;; Parameters:    Size  Location     Type
  2782 ;;  dato            1    wreg     unsigned char 
  2783 ;; Auto vars:     Size  Location     Type
  2784 ;;  dato            1    1[COMRAM] unsigned char 
  2785 ;; Return value:  Size  Location     Type
  2786 ;;                  1    wreg      void 
  2787 ;; Registers used:
  2788 ;;		wreg, status,2, cstack
  2789 ;; Tracked objects:
  2790 ;;		On entry : 0/0
  2791 ;;		On exit  : 0/0
  2792 ;;		Unchanged: 0/0
  2793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2797 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2798 ;;Total ram usage:        1 bytes
  2799 ;; Hardware stack levels used: 1
  2800 ;; Hardware stack levels required when called: 1
  2801 ;; This function calls:
  2802 ;;		_SPIWriteByte
  2803 ;; This function is called by:
  2804 ;;		_SetShortAddr
  2805 ;;		_GetShortAddr
  2806 ;;		_SetLongAddr
  2807 ;; This function uses a non-reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text20
  2811   001672                     __ptext20:
  2812                           	callstack 0
  2813   001672                     _WriteByteSPIPort:
  2814                           	callstack 27
  2815                           
  2816                           ;incstack = 0
  2817                           ;WriteByteSPIPort@dato stored from wreg
  2818   001672  6E2B               	movwf	WriteByteSPIPort@dato^0,c
  2819   001674                     
  2820                           ;drivers/scr/drv_mrf24j40_port.c: 73:     SPIWriteByte(dato);
  2821   001674  502B               	movf	WriteByteSPIPort@dato^0,w,c
  2822   001676  ECE0  F00A         	call	_SPIWriteByte
  2823   00167A  0012               	return		;funcret
  2824   00167C                     __end_of_WriteByteSPIPort:
  2825                           	callstack 0
  2826                           
  2827 ;; *************** function _Write2ByteSPIPort *****************
  2828 ;; Defined at:
  2829 ;;		line 82 in file "drivers/scr/drv_mrf24j40_port.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;  dato            2    3[COMRAM] unsigned short 
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2843 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;Total ram usage:        2 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 2
  2850 ;; This function calls:
  2851 ;;		_SPIWrite2Byte
  2852 ;; This function is called by:
  2853 ;;		_SetLongAddr
  2854 ;;		_GetLongAddr
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858                           	psect	text21
  2859   001634                     __ptext21:
  2860                           	callstack 0
  2861   001634                     _Write2ByteSPIPort:
  2862                           	callstack 26
  2863   001634                     
  2864                           ;drivers/scr/drv_mrf24j40_port.c: 84:     SPIWrite2Byte(dato);
  2865   001634  C02D  F02B         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  2866   001638  C02E  F02C         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  2867   00163C  EC21  F00B         	call	_SPIWrite2Byte	;wreg free
  2868   001640  0012               	return		;funcret
  2869   001642                     __end_of_Write2ByteSPIPort:
  2870                           	callstack 0
  2871                           
  2872 ;; *************** function _SPIWrite2Byte *****************
  2873 ;; Defined at:
  2874 ;;		line 62 in file "drivers/scr/drv_mspi_port.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  dato            2    1[COMRAM] unsigned short 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;		None
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, status,2, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2888 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;Total ram usage:        2 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 1
  2895 ;; This function calls:
  2896 ;;		_SPIWriteByte
  2897 ;; This function is called by:
  2898 ;;		_Write2ByteSPIPort
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text22
  2903   001642                     __ptext22:
  2904                           	callstack 0
  2905   001642                     _SPIWrite2Byte:
  2906                           	callstack 26
  2907   001642                     
  2908                           ;drivers/scr/drv_mspi_port.c: 64:     SPIWriteByte((uint8_t) (dato >> 8));
  2909   001642  502C               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  2910   001644  ECE0  F00A         	call	_SPIWriteByte
  2911                           
  2912                           ;drivers/scr/drv_mspi_port.c: 65:     SPIWriteByte((uint8_t) dato);
  2913   001648  502B               	movf	SPIWrite2Byte@dato^0,w,c
  2914   00164A  ECE0  F00A         	call	_SPIWriteByte
  2915   00164E  0012               	return		;funcret
  2916   001650                     __end_of_SPIWrite2Byte:
  2917                           	callstack 0
  2918                           
  2919 ;; *************** function _SPIWriteByte *****************
  2920 ;; Defined at:
  2921 ;;		line 49 in file "drivers/scr/drv_mspi_port.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  dato            1    wreg     unsigned char 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;  dato            1    0[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  1    wreg      void 
  2928 ;; Registers used:
  2929 ;;		wreg
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;Total ram usage:        1 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_WriteByteSPIPort
  2945 ;;		_SPIWrite2Byte
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text23
  2950   0015C0                     __ptext23:
  2951                           	callstack 0
  2952   0015C0                     _SPIWriteByte:
  2953                           	callstack 27
  2954                           
  2955                           ;incstack = 0
  2956                           ;SPIWriteByte@dato stored from wreg
  2957   0015C0  6E2A               	movwf	SPIWriteByte@dato^0,c
  2958   0015C2                     
  2959                           ;drivers/scr/drv_mspi_port.c: 51:     PIR1bits.SSPIF = 0;
  2960   0015C2  969E               	bcf	158,3,c	;volatile
  2961   0015C4                     
  2962                           ;drivers/scr/drv_mspi_port.c: 52:     SSPBUF = dato;
  2963   0015C4  C02A  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  2964   0015C8                     l178:
  2965   0015C8  A69E               	btfss	158,3,c	;volatile
  2966   0015CA  EFE9  F00A         	goto	u211
  2967   0015CE  EFEB  F00A         	goto	u210
  2968   0015D2                     u211:
  2969   0015D2  EFE4  F00A         	goto	l178
  2970   0015D6                     u210:
  2971   0015D6  0012               	return		;funcret
  2972   0015D8                     __end_of_SPIWriteByte:
  2973                           	callstack 0
  2974                           
  2975 ;; *************** function _SetCSPin *****************
  2976 ;; Defined at:
  2977 ;;		line 38 in file "drivers/scr/drv_mrf24j40_port.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  estado          1    wreg     _Bool 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  estado          1    0[COMRAM] _Bool 
  2982 ;; Return value:  Size  Location     Type
  2983 ;;                  1    wreg      void 
  2984 ;; Registers used:
  2985 ;;		wreg
  2986 ;; Tracked objects:
  2987 ;;		On entry : 0/0
  2988 ;;		On exit  : 0/0
  2989 ;;		Unchanged: 0/0
  2990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;Total ram usage:        1 bytes
  2996 ;; Hardware stack levels used: 1
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_SetShortAddr
  3001 ;;		_GetShortAddr
  3002 ;;		_SetLongAddr
  3003 ;;		_GetLongAddr
  3004 ;;		_InicializoPines
  3005 ;; This function uses a non-reentrant model
  3006 ;;
  3007                           
  3008                           	psect	text24
  3009   001650                     __ptext24:
  3010                           	callstack 0
  3011   001650                     _SetCSPin:
  3012                           	callstack 28
  3013                           
  3014                           ;incstack = 0
  3015                           ;SetCSPin@estado stored from wreg
  3016   001650  6E2A               	movwf	SetCSPin@estado^0,c
  3017   001652                     
  3018                           ;drivers/scr/drv_mrf24j40_port.c: 40:     LATCbits.LATC6 = estado;
  3019   001652  B02A               	btfsc	SetCSPin@estado^0,0,c
  3020   001654  D002               	bra	u225
  3021   001656  9C8B               	bcf	139,6,c	;volatile
  3022   001658  D001               	bra	u226
  3023   00165A                     u225:
  3024   00165A  8C8B               	bsf	139,6,c	;volatile
  3025   00165C                     u226:
  3026   00165C  0012               	return		;funcret
  3027   00165E                     __end_of_SetCSPin:
  3028                           	callstack 0
  3029                           
  3030 ;; *************** function _BoardInit *****************
  3031 ;; Defined at:
  3032 ;;		line 21 in file "hardware_config.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;		None
  3035 ;; Auto vars:     Size  Location     Type
  3036 ;;		None
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, status,2, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3050 ;;Total ram usage:        0 bytes
  3051 ;; Hardware stack levels used: 1
  3052 ;; Hardware stack levels required when called: 1
  3053 ;; This function calls:
  3054 ;;		_SPIInit
  3055 ;; This function is called by:
  3056 ;;		_main
  3057 ;; This function uses a non-reentrant model
  3058 ;;
  3059                           
  3060                           	psect	text25
  3061   0013EA                     __ptext25:
  3062                           	callstack 0
  3063   0013EA                     _BoardInit:
  3064                           	callstack 29
  3065   0013EA                     
  3066                           ;hardware_config.c: 23:     PORTA = 0;
  3067   0013EA  6A80               	clrf	128,c	;volatile
  3068                           
  3069                           ;hardware_config.c: 24:     PORTB = 0;
  3070   0013EC  6A81               	clrf	129,c	;volatile
  3071                           
  3072                           ;hardware_config.c: 25:     PORTC = 0;
  3073   0013EE  6A82               	clrf	130,c	;volatile
  3074                           
  3075                           ;hardware_config.c: 26:     PORTD = 0;
  3076   0013F0  6A83               	clrf	131,c	;volatile
  3077                           
  3078                           ;hardware_config.c: 27:     PORTE = 0;
  3079   0013F2  6A84               	clrf	132,c	;volatile
  3080                           
  3081                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  3082   0013F4  8C93               	bsf	147,6,c	;volatile
  3083                           
  3084                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  3085   0013F6  8E93               	bsf	147,7,c	;volatile
  3086                           
  3087                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  3088   0013F8  9496               	bcf	150,2,c	;volatile
  3089                           
  3090                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  3091   0013FA  9096               	bcf	150,0,c	;volatile
  3092                           
  3093                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  3094   0013FC  9296               	bcf	150,1,c	;volatile
  3095                           
  3096                           ;hardware_config.c: 35:     LATEbits.LATE2 = 1;
  3097   0013FE  848D               	bsf	141,2,c	;volatile
  3098                           
  3099                           ;hardware_config.c: 36:     LATEbits.LATE0 = 1;
  3100   001400  808D               	bsf	141,0,c	;volatile
  3101                           
  3102                           ;hardware_config.c: 37:     LATEbits.LATE1 = 1;
  3103   001402  828D               	bsf	141,1,c	;volatile
  3104                           
  3105                           ;hardware_config.c: 40:  GIE = 0;
  3106   001404  9EF2               	bcf	4082,7,c	;volatile
  3107                           
  3108                           ;hardware_config.c: 41:  PEIE = 0;
  3109   001406  9CF2               	bcf	4082,6,c	;volatile
  3110                           
  3111                           ;hardware_config.c: 42:  RBIE = 0;
  3112   001408  96F2               	bcf	4082,3,c	;volatile
  3113                           
  3114                           ;hardware_config.c: 43:  T0IE = 0;
  3115   00140A  9AF2               	bcf	4082,5,c	;volatile
  3116                           
  3117                           ;hardware_config.c: 44:  TMR1IE = 0;
  3118   00140C  909D               	bcf	3997,0,c	;volatile
  3119                           
  3120                           ;hardware_config.c: 45:  TMR2IE = 0;
  3121   00140E  929D               	bcf	3997,1,c	;volatile
  3122                           
  3123                           ;hardware_config.c: 46:  CCP1IE = 0;
  3124   001410  949D               	bcf	3997,2,c	;volatile
  3125                           
  3126                           ;hardware_config.c: 47:  CCP2IE = 0;
  3127   001412  90A0               	bcf	4000,0,c	;volatile
  3128                           
  3129                           ;hardware_config.c: 48:  EEIE = 0;
  3130   001414  98A0               	bcf	4000,4,c	;volatile
  3131                           
  3132                           ;hardware_config.c: 49:  SSPIE = 0;
  3133   001416  969D               	bcf	3997,3,c	;volatile
  3134                           
  3135                           ;hardware_config.c: 50:  BCLIE = 0;
  3136   001418  96A0               	bcf	4000,3,c	;volatile
  3137                           
  3138                           ;hardware_config.c: 51:  ADIE = 0;
  3139   00141A  9C9D               	bcf	3997,6,c	;volatile
  3140                           
  3141                           ;hardware_config.c: 52:  RBIE = 0;
  3142   00141C  96F2               	bcf	4082,3,c	;volatile
  3143                           
  3144                           ;hardware_config.c: 53:  RCIE = 0;
  3145   00141E  9A9D               	bcf	3997,5,c	;volatile
  3146   001420                     
  3147                           ;hardware_config.c: 54:     OSCCON = 0b01110010;
  3148   001420  0E72               	movlw	114
  3149   001422  6ED3               	movwf	211,c	;volatile
  3150                           
  3151                           ;hardware_config.c: 55:     OSCTUNE = 0b11011111;
  3152   001424  0EDF               	movlw	223
  3153   001426  6E9B               	movwf	155,c	;volatile
  3154   001428                     
  3155                           ;hardware_config.c: 58:     SPIInit();
  3156   001428  ECEC  F00A         	call	_SPIInit	;wreg free
  3157   00142C  0012               	return		;funcret
  3158   00142E                     __end_of_BoardInit:
  3159                           	callstack 0
  3160                           
  3161 ;; *************** function _SPIInit *****************
  3162 ;; Defined at:
  3163 ;;		line 29 in file "drivers/scr/drv_mspi_port.c"
  3164 ;; Parameters:    Size  Location     Type
  3165 ;;		None
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg, status,2
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;Total ram usage:        0 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_BoardInit
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text26
  3191   0015D8                     __ptext26:
  3192                           	callstack 0
  3193   0015D8                     _SPIInit:
  3194                           	callstack 29
  3195   0015D8                     
  3196                           ;drivers/scr/drv_mspi_port.c: 31:     TRISCbits.TRISC3 = 0;
  3197   0015D8  9694               	bcf	148,3,c	;volatile
  3198                           
  3199                           ;drivers/scr/drv_mspi_port.c: 32:     TRISCbits.TRISC5 = 0;
  3200   0015DA  9A94               	bcf	148,5,c	;volatile
  3201                           
  3202                           ;drivers/scr/drv_mspi_port.c: 33:     TRISCbits.TRISC4 = 1;
  3203   0015DC  8894               	bsf	148,4,c	;volatile
  3204                           
  3205                           ;drivers/scr/drv_mspi_port.c: 34:     SSPSTATbits.SMP = 1;
  3206   0015DE  8EC7               	bsf	199,7,c	;volatile
  3207                           
  3208                           ;drivers/scr/drv_mspi_port.c: 35:  SSPSTATbits.CKE = 1;
  3209   0015E0  8CC7               	bsf	199,6,c	;volatile
  3210   0015E2                     
  3211                           ;drivers/scr/drv_mspi_port.c: 36:     SSPCON1 = 0X00 | 0X01;
  3212   0015E2  0E01               	movlw	1
  3213   0015E4  6EC6               	movwf	198,c	;volatile
  3214   0015E6                     
  3215                           ;drivers/scr/drv_mspi_port.c: 37:  SSPCON1bits.WCOL = 1;
  3216   0015E6  8EC6               	bsf	198,7,c	;volatile
  3217   0015E8                     
  3218                           ;drivers/scr/drv_mspi_port.c: 38:  SSPCON1bits.SSPOV = 0;
  3219   0015E8  9CC6               	bcf	198,6,c	;volatile
  3220   0015EA                     
  3221                           ;drivers/scr/drv_mspi_port.c: 39:  SSPCON1bits.SSPEN = 1;
  3222   0015EA  8AC6               	bsf	198,5,c	;volatile
  3223   0015EC                     
  3224                           ;drivers/scr/drv_mspi_port.c: 40:  SSPCON1bits.CKP = 0;
  3225   0015EC  98C6               	bcf	198,4,c	;volatile
  3226   0015EE  0012               	return		;funcret
  3227   0015F0                     __end_of_SPIInit:
  3228                           	callstack 0
  3229                           
  3230                           	psect	rparam
  3231   000001                     ___rparam_used  equ	1
  3232   000000                     ___param_bank   equ	0
  3233   000000                     __Lparam        equ	__Lrparam
  3234   000000                     __Hparam        equ	__Hrparam
  3235                           
  3236                           	psect	idloc
  3237                           
  3238                           ;Config register IDLOC0 @ 0x200000
  3239                           ;	unspecified, using default values
  3240   200000                     	org	2097152
  3241   200000  FF                 	db	255
  3242                           
  3243                           ;Config register IDLOC1 @ 0x200001
  3244                           ;	unspecified, using default values
  3245   200001                     	org	2097153
  3246   200001  FF                 	db	255
  3247                           
  3248                           ;Config register IDLOC2 @ 0x200002
  3249                           ;	unspecified, using default values
  3250   200002                     	org	2097154
  3251   200002  FF                 	db	255
  3252                           
  3253                           ;Config register IDLOC3 @ 0x200003
  3254                           ;	unspecified, using default values
  3255   200003                     	org	2097155
  3256   200003  FF                 	db	255
  3257                           
  3258                           ;Config register IDLOC4 @ 0x200004
  3259                           ;	unspecified, using default values
  3260   200004                     	org	2097156
  3261   200004  FF                 	db	255
  3262                           
  3263                           ;Config register IDLOC5 @ 0x200005
  3264                           ;	unspecified, using default values
  3265   200005                     	org	2097157
  3266   200005  FF                 	db	255
  3267                           
  3268                           ;Config register IDLOC6 @ 0x200006
  3269                           ;	unspecified, using default values
  3270   200006                     	org	2097158
  3271   200006  FF                 	db	255
  3272                           
  3273                           ;Config register IDLOC7 @ 0x200007
  3274                           ;	unspecified, using default values
  3275   200007                     	org	2097159
  3276   200007  FF                 	db	255
  3277                           
  3278                           	psect	config
  3279                           
  3280                           ; Padding undefined space
  3281   300000                     	org	3145728
  3282   300000  FF                 	db	255
  3283                           
  3284                           ;Config register CONFIG1H @ 0x300001
  3285                           ;	Oscillator Selection bits
  3286                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3287                           ;	Fail-Safe Clock Monitor Enable bit
  3288                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3289                           ;	Internal/External Oscillator Switchover bit
  3290                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3291   300001                     	org	3145729
  3292   300001  08                 	db	8
  3293                           
  3294                           ;Config register CONFIG2L @ 0x300002
  3295                           ;	Power-up Timer Enable bit
  3296                           ;	PWRTEN = OFF, PWRT disabled
  3297                           ;	Brown-out Reset Enable bits
  3298                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3299                           ;	Brown Out Reset Voltage bits
  3300                           ;	BORV = 22, VBOR set to 2.2 V nominal
  3301   300002                     	org	3145730
  3302   300002  11                 	db	17
  3303                           
  3304                           ;Config register CONFIG2H @ 0x300003
  3305                           ;	Watchdog Timer Enable bit
  3306                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3307                           ;	Watchdog Timer Postscale Select bits
  3308                           ;	WDTPS = 8192, 1:8192
  3309   300003                     	org	3145731
  3310   300003  1A                 	db	26
  3311                           
  3312                           ; Padding undefined space
  3313   300004                     	org	3145732
  3314   300004  FF                 	db	255
  3315                           
  3316                           ;Config register CONFIG3H @ 0x300005
  3317                           ;	CCP2 MUX bit
  3318                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3319                           ;	PORTB A/D Enable bit
  3320                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3321                           ;	Low-Power Timer1 Oscillator Enable bit
  3322                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3323                           ;	HFINTOSC Fast Start-up
  3324                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  3325                           ;	MCLR Pin Enable bit
  3326                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  3327   300005                     	org	3145733
  3328   300005  01                 	db	1
  3329                           
  3330                           ;Config register CONFIG4L @ 0x300006
  3331                           ;	Stack Full/Underflow Reset Enable bit
  3332                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3333                           ;	Single-Supply ICSP Enable bit
  3334                           ;	LVP = OFF, Single-Supply ICSP disabled
  3335                           ;	Extended Instruction Set Enable bit
  3336                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3337                           ;	Background Debugger Enable bit
  3338                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3339   300006                     	org	3145734
  3340   300006  80                 	db	128
  3341                           
  3342                           ; Padding undefined space
  3343   300007                     	org	3145735
  3344   300007  FF                 	db	255
  3345                           
  3346                           ;Config register CONFIG5L @ 0x300008
  3347                           ;	Code Protection Block 0
  3348                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3349                           ;	Code Protection Block 1
  3350                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3351                           ;	Code Protection Block 2
  3352                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3353                           ;	Code Protection Block 3
  3354                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3355   300008                     	org	3145736
  3356   300008  0F                 	db	15
  3357                           
  3358                           ;Config register CONFIG5H @ 0x300009
  3359                           ;	Boot Block Code Protection bit
  3360                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3361                           ;	Data EEPROM Code Protection bit
  3362                           ;	CPD = OFF, Data EEPROM not code-protected
  3363   300009                     	org	3145737
  3364   300009  C0                 	db	192
  3365                           
  3366                           ;Config register CONFIG6L @ 0x30000A
  3367                           ;	Write Protection Block 0
  3368                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3369                           ;	Write Protection Block 1
  3370                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3371                           ;	Write Protection Block 2
  3372                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3373                           ;	Write Protection Block 3
  3374                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3375   30000A                     	org	3145738
  3376   30000A  0F                 	db	15
  3377                           
  3378                           ;Config register CONFIG6H @ 0x30000B
  3379                           ;	Configuration Register Write Protection bit
  3380                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3381                           ;	Boot Block Write Protection bit
  3382                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3383                           ;	Data EEPROM Write Protection bit
  3384                           ;	WRTD = OFF, Data EEPROM not write-protected
  3385   30000B                     	org	3145739
  3386   30000B  E0                 	db	224
  3387                           
  3388                           ;Config register CONFIG7L @ 0x30000C
  3389                           ;	unspecified, using default values
  3390                           ;	Table Read Protection Block 0
  3391                           ;	EBTR0 = 0x1, unprogrammed default
  3392                           ;	Table Read Protection Block 1
  3393                           ;	EBTR1 = 0x1, unprogrammed default
  3394                           ;	Table Read Protection Block 2
  3395                           ;	EBTR2 = 0x1, unprogrammed default
  3396                           ;	Table Read Protection Block 3
  3397                           ;	EBTR3 = 0x1, unprogrammed default
  3398   30000C                     	org	3145740
  3399   30000C  0F                 	db	15
  3400                           
  3401                           ;Config register CONFIG7H @ 0x30000D
  3402                           ;	Boot Block Table Read Protection bit
  3403                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3404   30000D                     	org	3145741
  3405   30000D  40                 	db	64
  3406                           tosu	equ	0xFFF
  3407                           tosh	equ	0xFFE
  3408                           tosl	equ	0xFFD
  3409                           stkptr	equ	0xFFC
  3410                           pclatu	equ	0xFFB
  3411                           pclath	equ	0xFFA
  3412                           pcl	equ	0xFF9
  3413                           tblptru	equ	0xFF8
  3414                           tblptrh	equ	0xFF7
  3415                           tblptrl	equ	0xFF6
  3416                           tablat	equ	0xFF5
  3417                           prodh	equ	0xFF4
  3418                           prodl	equ	0xFF3
  3419                           indf0	equ	0xFEF
  3420                           postinc0	equ	0xFEE
  3421                           postdec0	equ	0xFED
  3422                           preinc0	equ	0xFEC
  3423                           plusw0	equ	0xFEB
  3424                           fsr0h	equ	0xFEA
  3425                           fsr0l	equ	0xFE9
  3426                           wreg	equ	0xFE8
  3427                           indf1	equ	0xFE7
  3428                           postinc1	equ	0xFE6
  3429                           postdec1	equ	0xFE5
  3430                           preinc1	equ	0xFE4
  3431                           plusw1	equ	0xFE3
  3432                           fsr1h	equ	0xFE2
  3433                           fsr1l	equ	0xFE1
  3434                           bsr	equ	0xFE0
  3435                           indf2	equ	0xFDF
  3436                           postinc2	equ	0xFDE
  3437                           postdec2	equ	0xFDD
  3438                           preinc2	equ	0xFDC
  3439                           plusw2	equ	0xFDB
  3440                           fsr2h	equ	0xFDA
  3441                           fsr2l	equ	0xFD9
  3442                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    24
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     19      60
    BANK0           160      0      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    S34$buffer_salida	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_EnviarDato
    _SetMensajeSalida->_strlen
    _MRF24J40Init->_GetLongAddr
    _MRF24J40Init->_SetLongAddr
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _GetShortAddr->_WriteByteSPIPort
    _GetLongAddr->_Write2ByteSPIPort
    _EnviarDato->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3207
                                             17 COMRAM     2     2      0
                          _BoardInit
                         _EnviarDato
                       _MRF24J40Init
                _SetDireccionDestino
                   _SetMensajeSalida
                    _SetPANIDDestino
 ---------------------------------------------------------------------------------
 (1) _SetPANIDDestino                                      2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetMensajeSalida                                     1     0      1     136
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SetDireccionDestino                                  2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         2     2      0    2166
                                             10 COMRAM     2     2      0
                        _GetLongAddr
                       _GetShortAddr
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  2     2      0     257
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           0     0      0     537
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     199
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnviarDato                                           8     8      0     859
                                             10 COMRAM     7     7      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     348
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _EnviarDato
     _SetLongAddr
       _SetCSPin
       _Write2ByteSPIPort
         _SPIWrite2Byte
           _SPIWriteByte
       _WriteByteSPIPort
         _SPIWriteByte
     _SetShortAddr
       _SetCSPin
       _WriteByteSPIPort
   _MRF24J40Init
     _GetLongAddr
       _ReadByteSPIPort
         _SPIRead
       _SetCSPin
       _Write2ByteSPIPort
     _GetShortAddr
       _ReadByteSPIPort
       _SetCSPin
       _WriteByteSPIPort
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _SetLongAddr
       _SetShortAddr
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr
   _SetDireccionDestino
   _SetMensajeSalida
     _strlen
   _SetPANIDDestino

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      55     34.4%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     19      60     63.2%
BITBIGSFRlll        32      0       0      0.0%
BITBIGSFRlh         16      0       0      0.0%
BITBIGSFRllh        11      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     115      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Apr 15 12:08:27 2025

                 _SSPSTATbits 0FC7                            l51 119A                            l60 15A2  
                          l63 1582                            l56 12D2                            l72 150C  
                          l80 146E                            l57 133C                            l66 14B0  
                          l75 1536                            l83 1616                            l69 13E8  
                          l86 1670                            l95 1294                            l89 1666  
                          u45 1630                            u46 1632                            u65 1622  
                          u66 1624                 ?_MRF24J40Init 002A                           l211 1364  
                         l142 15BE                           l151 1632                           l160 1680  
                         l145 165C                           l154 167A                           l148 1624  
                         l181 15D6                           l157 1640                           l190 1604  
                         l175 15EE                           l184 164E                           l265 142C  
                         l178 15C8                           l187 15F4                           l945 14E0  
                         l973 1628                           _GIE 7F97                           u210 15D6  
                         u211 15D2                           u300 1080                           u301 107C  
                         u230 1602                           u310 1158                           u231 15FE  
                         u311 1154                           u320 128A                           u225 165A  
                         u321 1286                           u226 165C                           u250 12BA  
                         u251 12B6                           u260 130A                           u245 147A  
                         u261 1306                           u270 146E                           u271 146A  
                         u407 1034                           u417 104C                           u290 14D4  
                         u370 1378                           u427 1086                           u291 14D0  
                         u371 1370                           u285 13B0                           u437 1508  
                         u388 137A                           u397 138E                           wreg 0FE8  
         __end_of_GetLongAddr 13EA                          l1005 161A                          l1111 15E8  
                        l1113 15EA                          l1105 15D8                          l1115 15EC  
                        l1107 15E2                          l1109 15E6                          l1241 1428  
                        l1237 13EA                          l1421 15C2                          l1501 15A4  
                        l1239 1420                          l1423 15C4                          l1511 1568  
                        l1503 15AC                          l1425 1642                          l1433 1674  
                        l1441 15F0                          l1513 156E                          l1601 10D4  
                        l1451 1590                          l1443 1602                          l1515 1574  
                        l1507 1560                          l1523 150E                          l1611 1118  
                        l1603 10E4                          l1429 1652                          l1437 1634  
                        l1461 1492                          l1453 1596                          l1541 13A6  
                        l1517 157A                          l1509 1560                          l1533 143A  
                        l1621 1158                          l1613 1122                          l1605 10F4  
                        l1463 1498                          l1455 159C                          l1447 1586  
                        l1471 167C                          l1551 13E6                          l1543 13C8  
                        l1519 1580                          l1535 144C                          l1527 142E  
                        l1615 112C                          l1607 1104                          l1631 1668  
                        l1465 14A4                          l1449 158A                          l1641 11AE  
                        l1545 13CE                          l1481 129E                          l1537 144E  
                        l1617 1136                          l1609 110E                          l1561 14B2  
                        l1625 1606                          l1633 165E                          l1467 14AA  
                        l1459 1470                          l1651 11D2                          l1643 11B0  
                        l1635 119C                          l1547 13DA                          l1491 1312  
                        l1483 12BA                          l1475 1296                          l1555 14E2  
                        l1539 1452                          l1619 1144                          l1571 1026  
                        l1563 14BA                          l1627 160A                          l1661 1206  
                        l1653 11E0                          l1645 11C0                          l1637 119E  
                        l1549 13E0                          l1493 1314                          l1485 12EA  
                        l1557 1506                          l1581 1058                          l1573 102A  
                        l1565 14BC                          l1671 1228                          l1663 1208  
                        l1655 11E2                          l1647 11C2                          l1639 119E  
                        l1495 1338                          l1487 12EE                          l1591 109C  
                        l1583 1062                          l1575 102E                          l1567 14D4  
                        l1681 125A                          l1673 1236                          l1665 1216  
                        l1657 11F6                          l1649 11D0                          l1497 133A  
                        l1489 130A                          l1593 10A0                          l1585 106A  
                        l1577 1040                          l1683 125C                          l1675 1238  
                        l1667 1218                          l1659 11F8                          l1595 10A4  
                        l1587 1080                          l1579 1046                          l1851 1346  
                        l1685 128A                          l1677 123E                          l1669 1226  
                        l1597 10B4                          l1589 1092                          l1861 139A  
                        l1853 134E                          l1679 1258                          l1599 10C4  
                        l1855 1358                          l1847 133E                          l1857 1366  
                        l1849 1342                          l1859 1384                          _ADIE 7CEE  
                        _EEIE 7D04                          STR_1 1019                          _T0IE 7F95  
                        _PEIE 7F96                          _RBIE 7F93                          _RCIE 7CED  
                _SPIWriteByte 15C0                          _main 133E               __end_of_SPIInit 15F0  
             __end_of_SPIRead 1606                          fsr2h 0FDA                          indf2 0FDF  
                        fsr2l 0FD9                   EnviarDato@i 0039       GetShortAddr@reg_address 002D  
                        start 0000                  ___param_bank 0000             ??_ReadByteSPIPort 002A  
              ??_MRF24J40Init 0034   __end_of_InicializoVariables 133E                 _SPIWrite2Byte 1642  
                       ?_main 002A                         _BCLIE 7D03          SetDeviceMACAddress@i 002E  
                       _PORTA 0F80                         _PORTB 0F81                         _PORTC 0F82  
                       _PORTD 0F83                         _PORTE 0F84                         _SSPIE 7CEB  
        __end_of_GetShortAddr 1584               _InicializoPines 15A4       SetShortAddr@reg_address 002D  
         MRF24J40Init@lectura 0035                         tablat 0FF5                         status 0FD8  
                  _EnviarDato 119C           _SetDeviceMACAddress 142E               __initialization 1538  
                __end_of_main 13A6                ?_SPIWrite2Byte 002B              __end_of_SetCSPin 165E  
                 _GetLongAddr 13A6                 ??_SetLongAddr 0032                        ??_main 003B  
               __activetblptr 0001                 ??_SetResetPin 002A          ?_SetDeviceMACAddress 002A  
                  _SetChannel 14E2             ?_SetDeviceAddress 002A                        _CCP1IE 7CEA  
                      _CCP2IE 7D00                     ??_SPIInit 002A                     ??_SPIRead 002A  
          ??_SetDeviceAddress 002E                    _SetWakePin 1618                        _OSCCON 0FD3  
                      _TMR1IE 7CE8                        _TMR2IE 7CE9  __end_of_default_security_key 1011  
                      _SSPBUF 0FC9                        clear_0 153E                        clear_1 154A  
                      isa$std 0001                SetCSPin@estado 002A       __end_of_InicializoPines 15C0  
                      _strlen 14B2         ??_SetDeviceMACAddress 002E          InicializoVariables@i 002B  
                __mediumconst 0000             _mrf24_data_config 0001                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8           __end_of_SetLongAddr 14B2  
         __end_of_SetResetPin 1634         GetShortAddr@leido_spi 002C          __end_of_MRF24J40Init 119C  
            _SetMensajeSalida 1606                    __accesstop 0060       __end_of__initialization 1550  
           __end_of_BoardInit 142E                   ?_EnviarDato 002A                 ___rparam_used 0001  
            SetWakePin@estado 002A                 ?_SetShortAddr 002C                __pcstackCOMRAM 002A  
             ??_SPIWrite2Byte 002D                   ?_SetChannel 002A                    __pbssBANK0 0060  
 __end_of_SetDireccionDestino 1672                   ?_SetWakePin 002A                     ?_SetCSPin 002A  
             _ReadByteSPIPort 167C                  _GetShortAddr 155E                ??_SetShortAddr 002D  
           ??_SetPANIDDestino 002C                   _SetLongAddr 1470                       ?_strlen 002A  
            ?_InicializoPines 002A          _default_security_key 1001                   _SetResetPin 1626  
                     _OSCTUNE 0F9B                       _SSPCON1 0FC6                       _SPIInit 15D8  
                     _SPIRead 15F0                    ??_SetCSPin 002A             SetShortAddr@value 002C  
                     __Hparam 0000                       __Lparam 0000                  __psmallconst 1000  
                     __pcinit 1538                  ?_GetLongAddr 002F                       __ramtop 1000  
                     __ptext0 133E                       __ptext1 165E                       __ptext2 1606  
                     __ptext3 14B2                       __ptext4 1668                       __ptext5 1026  
                     __ptext6 142E                       __ptext7 150E                       __ptext8 14E2  
                     __ptext9 1296         EnviarDato@pos_memoria 003A              _WriteByteSPIPort 1672  
     __end_of_ReadByteSPIPort 1682          end_of_initialization 1550           _default_mac_address 1011  
                     postinc0 0FEE                       strlen@a 002C                       strlen@s 002A  
                _MRF24J40Init 1026      __end_of_SetMensajeSalida 1618          WriteByteSPIPort@dato 002B  
                   _TRISBbits 0F93                     _TRISCbits 0F94                     _TRISDbits 0F95  
                   _TRISEbits 0F96          __end_of_SetShortAddr 15A4        _my_default_mac_address 0029  
       Write2ByteSPIPort@dato 002D          GetLongAddr@respuesta 0033                  ??_EnviarDato 0034  
                   _BoardInit 13EA             _Write2ByteSPIPort 1634   __end_of_SetDeviceMACAddress 1470  
          ?_Write2ByteSPIPort 002D                __end_of_strlen 14E2                  ??_SetChannel 0034  
         start_initialization 1538            __end_of_EnviarDato 1296           ??_Write2ByteSPIPort 002F  
            ?_ReadByteSPIPort 002A          SetPANIDDestino@panid 002A               _SetPANIDDestino 165E  
               ?_SPIWriteByte 002A                  ??_SetWakePin 002A                    ?_BoardInit 002A  
   __end_of_Write2ByteSPIPort 1642            __end_of_SetChannel 150E         __end_of_SPIWrite2Byte 1650  
                ?_SetLongAddr 002F                      ??_strlen 002C            __end_of_SetWakePin 1626  
                ?_SetResetPin 002A                   __pbssCOMRAM 0001       SetMensajeSalida@mensaje 002D  
                    ?_SPIInit 002A                      ?_SPIRead 002A                ??_SPIWriteByte 002A  
            SPIWriteByte@dato 002A              _SetDeviceAddress 150E           _InicializoVariables 1296  
    __end_of_WriteByteSPIPort 167C             SetResetPin@estado 002A                   __smallconst 1000  
     __end_of_SetPANIDDestino 1668          ?_InicializoVariables 002A              SetLongAddr@value 0031  
                    _LATCbits 0F8B                      _LATDbits 0F8C                      _LATEbits 0F8D  
                 ??_BoardInit 002A                      _PIR1bits 0F9E                  _SetShortAddr 1584  
           ?_SetMensajeSalida 002D         ??_InicializoVariables 002A            ??_SetMensajeSalida 002E  
SetDireccionDestino@direccion 002A                _mrf24_data_out 0023                      _SetCSPin 1650  
                    __Hrparam 0000                      __Lrparam 0000                  __Lsmallconst 1000  
        __end_of_SPIWriteByte 15D8              ?_SetPANIDDestino 002A                      __ptext10 15A4  
                    __ptext11 1618                      __ptext20 1672                      __ptext12 1626  
                    __ptext21 1634                      __ptext13 155E                      __ptext22 1642  
                    __ptext14 13A6                      __ptext23 15C0                      __ptext15 167C  
                    __ptext24 1650                      __ptext16 15F0                      __ptext25 13EA  
                    __ptext17 119C                      __ptext26 15D8                      __ptext18 1584  
                    __ptext19 1470             ??_InicializoPines 002B                 ?_GetShortAddr 002A  
                    isa$xinst 0000   __end_of_default_mac_address 1019                 _mrf24_data_in 0060  
    __end_of_SetDeviceAddress 1538           _SetDireccionDestino 1668                ??_GetShortAddr 002C  
        ?_SetDireccionDestino 002A             ?_WriteByteSPIPort 002A                 ??_GetLongAddr 0031  
          ??_WriteByteSPIPort 002B        GetLongAddr@reg_address 002F                   _SSPCON1bits 0FC6  
           SPIWrite2Byte@dato 002B        SetLongAddr@reg_address 002F         ??_SetDireccionDestino 002C  
