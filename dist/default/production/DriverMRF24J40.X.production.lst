

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Aug 07 12:40:14 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=2
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Version 2.20
    58                           ; Generated 05/05/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F46K20 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000FE0                     bsr             equ	4064
    92   000FE9                     fsr0            equ	4073
    93   000FEA                     fsr0h           equ	4074
    94   000FE9                     fsr0l           equ	4073
    95   000FE1                     fsr1            equ	4065
    96   000FE2                     fsr1h           equ	4066
    97   000FE1                     fsr1l           equ	4065
    98   000FD9                     fsr2            equ	4057
    99   000FDA                     fsr2h           equ	4058
   100   000FD9                     fsr2l           equ	4057
   101   000FEF                     indf0           equ	4079
   102   000FE7                     indf1           equ	4071
   103   000FDF                     indf2           equ	4063
   104   000FF2                     intcon          equ	4082
   105   000000                     nvmcon          equ	0
   106   000FF9                     pcl             equ	4089
   107   000FFA                     pclath          equ	4090
   108   000FFB                     pclatu          equ	4091
   109   000FEB                     plusw0          equ	4075
   110   000FE3                     plusw1          equ	4067
   111   000FDB                     plusw2          equ	4059
   112   000FED                     postdec0        equ	4077
   113   000FE5                     postdec1        equ	4069
   114   000FDD                     postdec2        equ	4061
   115   000FEE                     postinc0        equ	4078
   116   000FE6                     postinc1        equ	4070
   117   000FDE                     postinc2        equ	4062
   118   000FEC                     preinc0         equ	4076
   119   000FE4                     preinc1         equ	4068
   120   000FDC                     preinc2         equ	4060
   121   000FF3                     prod            equ	4083
   122   000FF4                     prodh           equ	4084
   123   000FF3                     prodl           equ	4083
   124   000FD8                     status          equ	4056
   125   000FF5                     tablat          equ	4085
   126   000FF6                     tblptr          equ	4086
   127   000FF7                     tblptrh         equ	4087
   128   000FF6                     tblptrl         equ	4086
   129   000FF8                     tblptru         equ	4088
   130   000FFD                     tosl            equ	4093
   131   000FE8                     wreg            equ	4072
   132   000F77                     SSPMSK          equ	3959	;# 
   133   000F78                     SLRCON          equ	3960	;# 
   134   000F79                     CM2CON1         equ	3961	;# 
   135   000F7A                     CM2CON0         equ	3962	;# 
   136   000F7B                     CM1CON0         equ	3963	;# 
   137   000F7C                     WPUB            equ	3964	;# 
   138   000F7D                     IOCB            equ	3965	;# 
   139   000F7E                     ANSEL           equ	3966	;# 
   140   000F7F                     ANSELH          equ	3967	;# 
   141   000F80                     PORTA           equ	3968	;# 
   142   000F81                     PORTB           equ	3969	;# 
   143   000F82                     PORTC           equ	3970	;# 
   144   000F83                     PORTD           equ	3971	;# 
   145   000F84                     PORTE           equ	3972	;# 
   146   000F89                     LATA            equ	3977	;# 
   147   000F8A                     LATB            equ	3978	;# 
   148   000F8B                     LATC            equ	3979	;# 
   149   000F8C                     LATD            equ	3980	;# 
   150   000F8D                     LATE            equ	3981	;# 
   151   000F92                     TRISA           equ	3986	;# 
   152   000F92                     DDRA            equ	3986	;# 
   153   000F93                     TRISB           equ	3987	;# 
   154   000F93                     DDRB            equ	3987	;# 
   155   000F94                     TRISC           equ	3988	;# 
   156   000F94                     DDRC            equ	3988	;# 
   157   000F95                     TRISD           equ	3989	;# 
   158   000F95                     DDRD            equ	3989	;# 
   159   000F96                     TRISE           equ	3990	;# 
   160   000F96                     DDRE            equ	3990	;# 
   161   000F9B                     OSCTUNE         equ	3995	;# 
   162   000F9D                     PIE1            equ	3997	;# 
   163   000F9E                     PIR1            equ	3998	;# 
   164   000F9F                     IPR1            equ	3999	;# 
   165   000FA0                     PIE2            equ	4000	;# 
   166   000FA1                     PIR2            equ	4001	;# 
   167   000FA2                     IPR2            equ	4002	;# 
   168   000FA6                     EECON1          equ	4006	;# 
   169   000FA7                     EECON2          equ	4007	;# 
   170   000FA8                     EEDATA          equ	4008	;# 
   171   000FA9                     EEADR           equ	4009	;# 
   172   000FAA                     EEADRH          equ	4010	;# 
   173   000FAB                     RCSTA           equ	4011	;# 
   174   000FAB                     RCSTA1          equ	4011	;# 
   175   000FAC                     TXSTA           equ	4012	;# 
   176   000FAC                     TXSTA1          equ	4012	;# 
   177   000FAD                     TXREG           equ	4013	;# 
   178   000FAD                     TXREG1          equ	4013	;# 
   179   000FAE                     RCREG           equ	4014	;# 
   180   000FAE                     RCREG1          equ	4014	;# 
   181   000FAF                     SPBRG           equ	4015	;# 
   182   000FAF                     SPBRG1          equ	4015	;# 
   183   000FB0                     SPBRGH          equ	4016	;# 
   184   000FB1                     T3CON           equ	4017	;# 
   185   000FB2                     TMR3            equ	4018	;# 
   186   000FB2                     TMR3L           equ	4018	;# 
   187   000FB3                     TMR3H           equ	4019	;# 
   188   000FB4                     CVRCON2         equ	4020	;# 
   189   000FB5                     CVRCON          equ	4021	;# 
   190   000FB6                     ECCP1AS         equ	4022	;# 
   191   000FB7                     PWM1CON         equ	4023	;# 
   192   000FB8                     BAUDCON         equ	4024	;# 
   193   000FB8                     BAUDCTL         equ	4024	;# 
   194   000FB9                     PSTRCON         equ	4025	;# 
   195   000FBA                     CCP2CON         equ	4026	;# 
   196   000FBB                     CCPR2           equ	4027	;# 
   197   000FBB                     CCPR2L          equ	4027	;# 
   198   000FBC                     CCPR2H          equ	4028	;# 
   199   000FBD                     CCP1CON         equ	4029	;# 
   200   000FBE                     CCPR1           equ	4030	;# 
   201   000FBE                     CCPR1L          equ	4030	;# 
   202   000FBF                     CCPR1H          equ	4031	;# 
   203   000FC0                     ADCON2          equ	4032	;# 
   204   000FC1                     ADCON1          equ	4033	;# 
   205   000FC2                     ADCON0          equ	4034	;# 
   206   000FC3                     ADRES           equ	4035	;# 
   207   000FC3                     ADRESL          equ	4035	;# 
   208   000FC4                     ADRESH          equ	4036	;# 
   209   000FC5                     SSPCON2         equ	4037	;# 
   210   000FC6                     SSPCON1         equ	4038	;# 
   211   000FC7                     SSPSTAT         equ	4039	;# 
   212   000FC8                     SSPADD          equ	4040	;# 
   213   000FC9                     SSPBUF          equ	4041	;# 
   214   000FCA                     T2CON           equ	4042	;# 
   215   000FCB                     PR2             equ	4043	;# 
   216   000FCB                     MEMCON          equ	4043	;# 
   217   000FCC                     TMR2            equ	4044	;# 
   218   000FCD                     T1CON           equ	4045	;# 
   219   000FCE                     TMR1            equ	4046	;# 
   220   000FCE                     TMR1L           equ	4046	;# 
   221   000FCF                     TMR1H           equ	4047	;# 
   222   000FD0                     RCON            equ	4048	;# 
   223   000FD1                     WDTCON          equ	4049	;# 
   224   000FD2                     HLVDCON         equ	4050	;# 
   225   000FD2                     LVDCON          equ	4050	;# 
   226   000FD3                     OSCCON          equ	4051	;# 
   227   000FD5                     T0CON           equ	4053	;# 
   228   000FD6                     TMR0            equ	4054	;# 
   229   000FD6                     TMR0L           equ	4054	;# 
   230   000FD7                     TMR0H           equ	4055	;# 
   231   000FD8                     STATUS          equ	4056	;# 
   232   000FD9                     FSR2            equ	4057	;# 
   233   000FD9                     FSR2L           equ	4057	;# 
   234   000FDA                     FSR2H           equ	4058	;# 
   235   000FDB                     PLUSW2          equ	4059	;# 
   236   000FDC                     PREINC2         equ	4060	;# 
   237   000FDD                     POSTDEC2        equ	4061	;# 
   238   000FDE                     POSTINC2        equ	4062	;# 
   239   000FDF                     INDF2           equ	4063	;# 
   240   000FE0                     BSR             equ	4064	;# 
   241   000FE1                     FSR1            equ	4065	;# 
   242   000FE1                     FSR1L           equ	4065	;# 
   243   000FE2                     FSR1H           equ	4066	;# 
   244   000FE3                     PLUSW1          equ	4067	;# 
   245   000FE4                     PREINC1         equ	4068	;# 
   246   000FE5                     POSTDEC1        equ	4069	;# 
   247   000FE6                     POSTINC1        equ	4070	;# 
   248   000FE7                     INDF1           equ	4071	;# 
   249   000FE8                     WREG            equ	4072	;# 
   250   000FE9                     FSR0            equ	4073	;# 
   251   000FE9                     FSR0L           equ	4073	;# 
   252   000FEA                     FSR0H           equ	4074	;# 
   253   000FEB                     PLUSW0          equ	4075	;# 
   254   000FEC                     PREINC0         equ	4076	;# 
   255   000FED                     POSTDEC0        equ	4077	;# 
   256   000FEE                     POSTINC0        equ	4078	;# 
   257   000FEF                     INDF0           equ	4079	;# 
   258   000FF0                     INTCON3         equ	4080	;# 
   259   000FF1                     INTCON2         equ	4081	;# 
   260   000FF2                     INTCON          equ	4082	;# 
   261   000FF3                     PROD            equ	4083	;# 
   262   000FF3                     PRODL           equ	4083	;# 
   263   000FF4                     PRODH           equ	4084	;# 
   264   000FF5                     TABLAT          equ	4085	;# 
   265   000FF6                     TBLPTR          equ	4086	;# 
   266   000FF6                     TBLPTRL         equ	4086	;# 
   267   000FF7                     TBLPTRH         equ	4087	;# 
   268   000FF8                     TBLPTRU         equ	4088	;# 
   269   000FF9                     PCLAT           equ	4089	;# 
   270   000FF9                     PC              equ	4089	;# 
   271   000FF9                     PCL             equ	4089	;# 
   272   000FFA                     PCLATH          equ	4090	;# 
   273   000FFB                     PCLATU          equ	4091	;# 
   274   000FFC                     STKPTR          equ	4092	;# 
   275   000FFD                     TOS             equ	4093	;# 
   276   000FFD                     TOSL            equ	4093	;# 
   277   000FFE                     TOSH            equ	4094	;# 
   278   000FFF                     TOSU            equ	4095	;# 
   279   000F77                     SSPMSK          equ	3959	;# 
   280   000F78                     SLRCON          equ	3960	;# 
   281   000F79                     CM2CON1         equ	3961	;# 
   282   000F7A                     CM2CON0         equ	3962	;# 
   283   000F7B                     CM1CON0         equ	3963	;# 
   284   000F7C                     WPUB            equ	3964	;# 
   285   000F7D                     IOCB            equ	3965	;# 
   286   000F7E                     ANSEL           equ	3966	;# 
   287   000F7F                     ANSELH          equ	3967	;# 
   288   000F80                     PORTA           equ	3968	;# 
   289   000F81                     PORTB           equ	3969	;# 
   290   000F82                     PORTC           equ	3970	;# 
   291   000F83                     PORTD           equ	3971	;# 
   292   000F84                     PORTE           equ	3972	;# 
   293   000F89                     LATA            equ	3977	;# 
   294   000F8A                     LATB            equ	3978	;# 
   295   000F8B                     LATC            equ	3979	;# 
   296   000F8C                     LATD            equ	3980	;# 
   297   000F8D                     LATE            equ	3981	;# 
   298   000F92                     TRISA           equ	3986	;# 
   299   000F92                     DDRA            equ	3986	;# 
   300   000F93                     TRISB           equ	3987	;# 
   301   000F93                     DDRB            equ	3987	;# 
   302   000F94                     TRISC           equ	3988	;# 
   303   000F94                     DDRC            equ	3988	;# 
   304   000F95                     TRISD           equ	3989	;# 
   305   000F95                     DDRD            equ	3989	;# 
   306   000F96                     TRISE           equ	3990	;# 
   307   000F96                     DDRE            equ	3990	;# 
   308   000F9B                     OSCTUNE         equ	3995	;# 
   309   000F9D                     PIE1            equ	3997	;# 
   310   000F9E                     PIR1            equ	3998	;# 
   311   000F9F                     IPR1            equ	3999	;# 
   312   000FA0                     PIE2            equ	4000	;# 
   313   000FA1                     PIR2            equ	4001	;# 
   314   000FA2                     IPR2            equ	4002	;# 
   315   000FA6                     EECON1          equ	4006	;# 
   316   000FA7                     EECON2          equ	4007	;# 
   317   000FA8                     EEDATA          equ	4008	;# 
   318   000FA9                     EEADR           equ	4009	;# 
   319   000FAA                     EEADRH          equ	4010	;# 
   320   000FAB                     RCSTA           equ	4011	;# 
   321   000FAB                     RCSTA1          equ	4011	;# 
   322   000FAC                     TXSTA           equ	4012	;# 
   323   000FAC                     TXSTA1          equ	4012	;# 
   324   000FAD                     TXREG           equ	4013	;# 
   325   000FAD                     TXREG1          equ	4013	;# 
   326   000FAE                     RCREG           equ	4014	;# 
   327   000FAE                     RCREG1          equ	4014	;# 
   328   000FAF                     SPBRG           equ	4015	;# 
   329   000FAF                     SPBRG1          equ	4015	;# 
   330   000FB0                     SPBRGH          equ	4016	;# 
   331   000FB1                     T3CON           equ	4017	;# 
   332   000FB2                     TMR3            equ	4018	;# 
   333   000FB2                     TMR3L           equ	4018	;# 
   334   000FB3                     TMR3H           equ	4019	;# 
   335   000FB4                     CVRCON2         equ	4020	;# 
   336   000FB5                     CVRCON          equ	4021	;# 
   337   000FB6                     ECCP1AS         equ	4022	;# 
   338   000FB7                     PWM1CON         equ	4023	;# 
   339   000FB8                     BAUDCON         equ	4024	;# 
   340   000FB8                     BAUDCTL         equ	4024	;# 
   341   000FB9                     PSTRCON         equ	4025	;# 
   342   000FBA                     CCP2CON         equ	4026	;# 
   343   000FBB                     CCPR2           equ	4027	;# 
   344   000FBB                     CCPR2L          equ	4027	;# 
   345   000FBC                     CCPR2H          equ	4028	;# 
   346   000FBD                     CCP1CON         equ	4029	;# 
   347   000FBE                     CCPR1           equ	4030	;# 
   348   000FBE                     CCPR1L          equ	4030	;# 
   349   000FBF                     CCPR1H          equ	4031	;# 
   350   000FC0                     ADCON2          equ	4032	;# 
   351   000FC1                     ADCON1          equ	4033	;# 
   352   000FC2                     ADCON0          equ	4034	;# 
   353   000FC3                     ADRES           equ	4035	;# 
   354   000FC3                     ADRESL          equ	4035	;# 
   355   000FC4                     ADRESH          equ	4036	;# 
   356   000FC5                     SSPCON2         equ	4037	;# 
   357   000FC6                     SSPCON1         equ	4038	;# 
   358   000FC7                     SSPSTAT         equ	4039	;# 
   359   000FC8                     SSPADD          equ	4040	;# 
   360   000FC9                     SSPBUF          equ	4041	;# 
   361   000FCA                     T2CON           equ	4042	;# 
   362   000FCB                     PR2             equ	4043	;# 
   363   000FCB                     MEMCON          equ	4043	;# 
   364   000FCC                     TMR2            equ	4044	;# 
   365   000FCD                     T1CON           equ	4045	;# 
   366   000FCE                     TMR1            equ	4046	;# 
   367   000FCE                     TMR1L           equ	4046	;# 
   368   000FCF                     TMR1H           equ	4047	;# 
   369   000FD0                     RCON            equ	4048	;# 
   370   000FD1                     WDTCON          equ	4049	;# 
   371   000FD2                     HLVDCON         equ	4050	;# 
   372   000FD2                     LVDCON          equ	4050	;# 
   373   000FD3                     OSCCON          equ	4051	;# 
   374   000FD5                     T0CON           equ	4053	;# 
   375   000FD6                     TMR0            equ	4054	;# 
   376   000FD6                     TMR0L           equ	4054	;# 
   377   000FD7                     TMR0H           equ	4055	;# 
   378   000FD8                     STATUS          equ	4056	;# 
   379   000FD9                     FSR2            equ	4057	;# 
   380   000FD9                     FSR2L           equ	4057	;# 
   381   000FDA                     FSR2H           equ	4058	;# 
   382   000FDB                     PLUSW2          equ	4059	;# 
   383   000FDC                     PREINC2         equ	4060	;# 
   384   000FDD                     POSTDEC2        equ	4061	;# 
   385   000FDE                     POSTINC2        equ	4062	;# 
   386   000FDF                     INDF2           equ	4063	;# 
   387   000FE0                     BSR             equ	4064	;# 
   388   000FE1                     FSR1            equ	4065	;# 
   389   000FE1                     FSR1L           equ	4065	;# 
   390   000FE2                     FSR1H           equ	4066	;# 
   391   000FE3                     PLUSW1          equ	4067	;# 
   392   000FE4                     PREINC1         equ	4068	;# 
   393   000FE5                     POSTDEC1        equ	4069	;# 
   394   000FE6                     POSTINC1        equ	4070	;# 
   395   000FE7                     INDF1           equ	4071	;# 
   396   000FE8                     WREG            equ	4072	;# 
   397   000FE9                     FSR0            equ	4073	;# 
   398   000FE9                     FSR0L           equ	4073	;# 
   399   000FEA                     FSR0H           equ	4074	;# 
   400   000FEB                     PLUSW0          equ	4075	;# 
   401   000FEC                     PREINC0         equ	4076	;# 
   402   000FED                     POSTDEC0        equ	4077	;# 
   403   000FEE                     POSTINC0        equ	4078	;# 
   404   000FEF                     INDF0           equ	4079	;# 
   405   000FF0                     INTCON3         equ	4080	;# 
   406   000FF1                     INTCON2         equ	4081	;# 
   407   000FF2                     INTCON          equ	4082	;# 
   408   000FF3                     PROD            equ	4083	;# 
   409   000FF3                     PRODL           equ	4083	;# 
   410   000FF4                     PRODH           equ	4084	;# 
   411   000FF5                     TABLAT          equ	4085	;# 
   412   000FF6                     TBLPTR          equ	4086	;# 
   413   000FF6                     TBLPTRL         equ	4086	;# 
   414   000FF7                     TBLPTRH         equ	4087	;# 
   415   000FF8                     TBLPTRU         equ	4088	;# 
   416   000FF9                     PCLAT           equ	4089	;# 
   417   000FF9                     PC              equ	4089	;# 
   418   000FF9                     PCL             equ	4089	;# 
   419   000FFA                     PCLATH          equ	4090	;# 
   420   000FFB                     PCLATU          equ	4091	;# 
   421   000FFC                     STKPTR          equ	4092	;# 
   422   000FFD                     TOS             equ	4093	;# 
   423   000FFD                     TOSL            equ	4093	;# 
   424   000FFE                     TOSH            equ	4094	;# 
   425   000FFF                     TOSU            equ	4095	;# 
   426   000F77                     SSPMSK          equ	3959	;# 
   427   000F78                     SLRCON          equ	3960	;# 
   428   000F79                     CM2CON1         equ	3961	;# 
   429   000F7A                     CM2CON0         equ	3962	;# 
   430   000F7B                     CM1CON0         equ	3963	;# 
   431   000F7C                     WPUB            equ	3964	;# 
   432   000F7D                     IOCB            equ	3965	;# 
   433   000F7E                     ANSEL           equ	3966	;# 
   434   000F7F                     ANSELH          equ	3967	;# 
   435   000F80                     PORTA           equ	3968	;# 
   436   000F81                     PORTB           equ	3969	;# 
   437   000F82                     PORTC           equ	3970	;# 
   438   000F83                     PORTD           equ	3971	;# 
   439   000F84                     PORTE           equ	3972	;# 
   440   000F89                     LATA            equ	3977	;# 
   441   000F8A                     LATB            equ	3978	;# 
   442   000F8B                     LATC            equ	3979	;# 
   443   000F8C                     LATD            equ	3980	;# 
   444   000F8D                     LATE            equ	3981	;# 
   445   000F92                     TRISA           equ	3986	;# 
   446   000F92                     DDRA            equ	3986	;# 
   447   000F93                     TRISB           equ	3987	;# 
   448   000F93                     DDRB            equ	3987	;# 
   449   000F94                     TRISC           equ	3988	;# 
   450   000F94                     DDRC            equ	3988	;# 
   451   000F95                     TRISD           equ	3989	;# 
   452   000F95                     DDRD            equ	3989	;# 
   453   000F96                     TRISE           equ	3990	;# 
   454   000F96                     DDRE            equ	3990	;# 
   455   000F9B                     OSCTUNE         equ	3995	;# 
   456   000F9D                     PIE1            equ	3997	;# 
   457   000F9E                     PIR1            equ	3998	;# 
   458   000F9F                     IPR1            equ	3999	;# 
   459   000FA0                     PIE2            equ	4000	;# 
   460   000FA1                     PIR2            equ	4001	;# 
   461   000FA2                     IPR2            equ	4002	;# 
   462   000FA6                     EECON1          equ	4006	;# 
   463   000FA7                     EECON2          equ	4007	;# 
   464   000FA8                     EEDATA          equ	4008	;# 
   465   000FA9                     EEADR           equ	4009	;# 
   466   000FAA                     EEADRH          equ	4010	;# 
   467   000FAB                     RCSTA           equ	4011	;# 
   468   000FAB                     RCSTA1          equ	4011	;# 
   469   000FAC                     TXSTA           equ	4012	;# 
   470   000FAC                     TXSTA1          equ	4012	;# 
   471   000FAD                     TXREG           equ	4013	;# 
   472   000FAD                     TXREG1          equ	4013	;# 
   473   000FAE                     RCREG           equ	4014	;# 
   474   000FAE                     RCREG1          equ	4014	;# 
   475   000FAF                     SPBRG           equ	4015	;# 
   476   000FAF                     SPBRG1          equ	4015	;# 
   477   000FB0                     SPBRGH          equ	4016	;# 
   478   000FB1                     T3CON           equ	4017	;# 
   479   000FB2                     TMR3            equ	4018	;# 
   480   000FB2                     TMR3L           equ	4018	;# 
   481   000FB3                     TMR3H           equ	4019	;# 
   482   000FB4                     CVRCON2         equ	4020	;# 
   483   000FB5                     CVRCON          equ	4021	;# 
   484   000FB6                     ECCP1AS         equ	4022	;# 
   485   000FB7                     PWM1CON         equ	4023	;# 
   486   000FB8                     BAUDCON         equ	4024	;# 
   487   000FB8                     BAUDCTL         equ	4024	;# 
   488   000FB9                     PSTRCON         equ	4025	;# 
   489   000FBA                     CCP2CON         equ	4026	;# 
   490   000FBB                     CCPR2           equ	4027	;# 
   491   000FBB                     CCPR2L          equ	4027	;# 
   492   000FBC                     CCPR2H          equ	4028	;# 
   493   000FBD                     CCP1CON         equ	4029	;# 
   494   000FBE                     CCPR1           equ	4030	;# 
   495   000FBE                     CCPR1L          equ	4030	;# 
   496   000FBF                     CCPR1H          equ	4031	;# 
   497   000FC0                     ADCON2          equ	4032	;# 
   498   000FC1                     ADCON1          equ	4033	;# 
   499   000FC2                     ADCON0          equ	4034	;# 
   500   000FC3                     ADRES           equ	4035	;# 
   501   000FC3                     ADRESL          equ	4035	;# 
   502   000FC4                     ADRESH          equ	4036	;# 
   503   000FC5                     SSPCON2         equ	4037	;# 
   504   000FC6                     SSPCON1         equ	4038	;# 
   505   000FC7                     SSPSTAT         equ	4039	;# 
   506   000FC8                     SSPADD          equ	4040	;# 
   507   000FC9                     SSPBUF          equ	4041	;# 
   508   000FCA                     T2CON           equ	4042	;# 
   509   000FCB                     PR2             equ	4043	;# 
   510   000FCB                     MEMCON          equ	4043	;# 
   511   000FCC                     TMR2            equ	4044	;# 
   512   000FCD                     T1CON           equ	4045	;# 
   513   000FCE                     TMR1            equ	4046	;# 
   514   000FCE                     TMR1L           equ	4046	;# 
   515   000FCF                     TMR1H           equ	4047	;# 
   516   000FD0                     RCON            equ	4048	;# 
   517   000FD1                     WDTCON          equ	4049	;# 
   518   000FD2                     HLVDCON         equ	4050	;# 
   519   000FD2                     LVDCON          equ	4050	;# 
   520   000FD3                     OSCCON          equ	4051	;# 
   521   000FD5                     T0CON           equ	4053	;# 
   522   000FD6                     TMR0            equ	4054	;# 
   523   000FD6                     TMR0L           equ	4054	;# 
   524   000FD7                     TMR0H           equ	4055	;# 
   525   000FD8                     STATUS          equ	4056	;# 
   526   000FD9                     FSR2            equ	4057	;# 
   527   000FD9                     FSR2L           equ	4057	;# 
   528   000FDA                     FSR2H           equ	4058	;# 
   529   000FDB                     PLUSW2          equ	4059	;# 
   530   000FDC                     PREINC2         equ	4060	;# 
   531   000FDD                     POSTDEC2        equ	4061	;# 
   532   000FDE                     POSTINC2        equ	4062	;# 
   533   000FDF                     INDF2           equ	4063	;# 
   534   000FE0                     BSR             equ	4064	;# 
   535   000FE1                     FSR1            equ	4065	;# 
   536   000FE1                     FSR1L           equ	4065	;# 
   537   000FE2                     FSR1H           equ	4066	;# 
   538   000FE3                     PLUSW1          equ	4067	;# 
   539   000FE4                     PREINC1         equ	4068	;# 
   540   000FE5                     POSTDEC1        equ	4069	;# 
   541   000FE6                     POSTINC1        equ	4070	;# 
   542   000FE7                     INDF1           equ	4071	;# 
   543   000FE8                     WREG            equ	4072	;# 
   544   000FE9                     FSR0            equ	4073	;# 
   545   000FE9                     FSR0L           equ	4073	;# 
   546   000FEA                     FSR0H           equ	4074	;# 
   547   000FEB                     PLUSW0          equ	4075	;# 
   548   000FEC                     PREINC0         equ	4076	;# 
   549   000FED                     POSTDEC0        equ	4077	;# 
   550   000FEE                     POSTINC0        equ	4078	;# 
   551   000FEF                     INDF0           equ	4079	;# 
   552   000FF0                     INTCON3         equ	4080	;# 
   553   000FF1                     INTCON2         equ	4081	;# 
   554   000FF2                     INTCON          equ	4082	;# 
   555   000FF3                     PROD            equ	4083	;# 
   556   000FF3                     PRODL           equ	4083	;# 
   557   000FF4                     PRODH           equ	4084	;# 
   558   000FF5                     TABLAT          equ	4085	;# 
   559   000FF6                     TBLPTR          equ	4086	;# 
   560   000FF6                     TBLPTRL         equ	4086	;# 
   561   000FF7                     TBLPTRH         equ	4087	;# 
   562   000FF8                     TBLPTRU         equ	4088	;# 
   563   000FF9                     PCLAT           equ	4089	;# 
   564   000FF9                     PC              equ	4089	;# 
   565   000FF9                     PCL             equ	4089	;# 
   566   000FFA                     PCLATH          equ	4090	;# 
   567   000FFB                     PCLATU          equ	4091	;# 
   568   000FFC                     STKPTR          equ	4092	;# 
   569   000FFD                     TOS             equ	4093	;# 
   570   000FFD                     TOSL            equ	4093	;# 
   571   000FFE                     TOSH            equ	4094	;# 
   572   000FFF                     TOSU            equ	4095	;# 
   573   000F77                     SSPMSK          equ	3959	;# 
   574   000F78                     SLRCON          equ	3960	;# 
   575   000F79                     CM2CON1         equ	3961	;# 
   576   000F7A                     CM2CON0         equ	3962	;# 
   577   000F7B                     CM1CON0         equ	3963	;# 
   578   000F7C                     WPUB            equ	3964	;# 
   579   000F7D                     IOCB            equ	3965	;# 
   580   000F7E                     ANSEL           equ	3966	;# 
   581   000F7F                     ANSELH          equ	3967	;# 
   582   000F80                     PORTA           equ	3968	;# 
   583   000F81                     PORTB           equ	3969	;# 
   584   000F82                     PORTC           equ	3970	;# 
   585   000F83                     PORTD           equ	3971	;# 
   586   000F84                     PORTE           equ	3972	;# 
   587   000F89                     LATA            equ	3977	;# 
   588   000F8A                     LATB            equ	3978	;# 
   589   000F8B                     LATC            equ	3979	;# 
   590   000F8C                     LATD            equ	3980	;# 
   591   000F8D                     LATE            equ	3981	;# 
   592   000F92                     TRISA           equ	3986	;# 
   593   000F92                     DDRA            equ	3986	;# 
   594   000F93                     TRISB           equ	3987	;# 
   595   000F93                     DDRB            equ	3987	;# 
   596   000F94                     TRISC           equ	3988	;# 
   597   000F94                     DDRC            equ	3988	;# 
   598   000F95                     TRISD           equ	3989	;# 
   599   000F95                     DDRD            equ	3989	;# 
   600   000F96                     TRISE           equ	3990	;# 
   601   000F96                     DDRE            equ	3990	;# 
   602   000F9B                     OSCTUNE         equ	3995	;# 
   603   000F9D                     PIE1            equ	3997	;# 
   604   000F9E                     PIR1            equ	3998	;# 
   605   000F9F                     IPR1            equ	3999	;# 
   606   000FA0                     PIE2            equ	4000	;# 
   607   000FA1                     PIR2            equ	4001	;# 
   608   000FA2                     IPR2            equ	4002	;# 
   609   000FA6                     EECON1          equ	4006	;# 
   610   000FA7                     EECON2          equ	4007	;# 
   611   000FA8                     EEDATA          equ	4008	;# 
   612   000FA9                     EEADR           equ	4009	;# 
   613   000FAA                     EEADRH          equ	4010	;# 
   614   000FAB                     RCSTA           equ	4011	;# 
   615   000FAB                     RCSTA1          equ	4011	;# 
   616   000FAC                     TXSTA           equ	4012	;# 
   617   000FAC                     TXSTA1          equ	4012	;# 
   618   000FAD                     TXREG           equ	4013	;# 
   619   000FAD                     TXREG1          equ	4013	;# 
   620   000FAE                     RCREG           equ	4014	;# 
   621   000FAE                     RCREG1          equ	4014	;# 
   622   000FAF                     SPBRG           equ	4015	;# 
   623   000FAF                     SPBRG1          equ	4015	;# 
   624   000FB0                     SPBRGH          equ	4016	;# 
   625   000FB1                     T3CON           equ	4017	;# 
   626   000FB2                     TMR3            equ	4018	;# 
   627   000FB2                     TMR3L           equ	4018	;# 
   628   000FB3                     TMR3H           equ	4019	;# 
   629   000FB4                     CVRCON2         equ	4020	;# 
   630   000FB5                     CVRCON          equ	4021	;# 
   631   000FB6                     ECCP1AS         equ	4022	;# 
   632   000FB7                     PWM1CON         equ	4023	;# 
   633   000FB8                     BAUDCON         equ	4024	;# 
   634   000FB8                     BAUDCTL         equ	4024	;# 
   635   000FB9                     PSTRCON         equ	4025	;# 
   636   000FBA                     CCP2CON         equ	4026	;# 
   637   000FBB                     CCPR2           equ	4027	;# 
   638   000FBB                     CCPR2L          equ	4027	;# 
   639   000FBC                     CCPR2H          equ	4028	;# 
   640   000FBD                     CCP1CON         equ	4029	;# 
   641   000FBE                     CCPR1           equ	4030	;# 
   642   000FBE                     CCPR1L          equ	4030	;# 
   643   000FBF                     CCPR1H          equ	4031	;# 
   644   000FC0                     ADCON2          equ	4032	;# 
   645   000FC1                     ADCON1          equ	4033	;# 
   646   000FC2                     ADCON0          equ	4034	;# 
   647   000FC3                     ADRES           equ	4035	;# 
   648   000FC3                     ADRESL          equ	4035	;# 
   649   000FC4                     ADRESH          equ	4036	;# 
   650   000FC5                     SSPCON2         equ	4037	;# 
   651   000FC6                     SSPCON1         equ	4038	;# 
   652   000FC7                     SSPSTAT         equ	4039	;# 
   653   000FC8                     SSPADD          equ	4040	;# 
   654   000FC9                     SSPBUF          equ	4041	;# 
   655   000FCA                     T2CON           equ	4042	;# 
   656   000FCB                     PR2             equ	4043	;# 
   657   000FCB                     MEMCON          equ	4043	;# 
   658   000FCC                     TMR2            equ	4044	;# 
   659   000FCD                     T1CON           equ	4045	;# 
   660   000FCE                     TMR1            equ	4046	;# 
   661   000FCE                     TMR1L           equ	4046	;# 
   662   000FCF                     TMR1H           equ	4047	;# 
   663   000FD0                     RCON            equ	4048	;# 
   664   000FD1                     WDTCON          equ	4049	;# 
   665   000FD2                     HLVDCON         equ	4050	;# 
   666   000FD2                     LVDCON          equ	4050	;# 
   667   000FD3                     OSCCON          equ	4051	;# 
   668   000FD5                     T0CON           equ	4053	;# 
   669   000FD6                     TMR0            equ	4054	;# 
   670   000FD6                     TMR0L           equ	4054	;# 
   671   000FD7                     TMR0H           equ	4055	;# 
   672   000FD8                     STATUS          equ	4056	;# 
   673   000FD9                     FSR2            equ	4057	;# 
   674   000FD9                     FSR2L           equ	4057	;# 
   675   000FDA                     FSR2H           equ	4058	;# 
   676   000FDB                     PLUSW2          equ	4059	;# 
   677   000FDC                     PREINC2         equ	4060	;# 
   678   000FDD                     POSTDEC2        equ	4061	;# 
   679   000FDE                     POSTINC2        equ	4062	;# 
   680   000FDF                     INDF2           equ	4063	;# 
   681   000FE0                     BSR             equ	4064	;# 
   682   000FE1                     FSR1            equ	4065	;# 
   683   000FE1                     FSR1L           equ	4065	;# 
   684   000FE2                     FSR1H           equ	4066	;# 
   685   000FE3                     PLUSW1          equ	4067	;# 
   686   000FE4                     PREINC1         equ	4068	;# 
   687   000FE5                     POSTDEC1        equ	4069	;# 
   688   000FE6                     POSTINC1        equ	4070	;# 
   689   000FE7                     INDF1           equ	4071	;# 
   690   000FE8                     WREG            equ	4072	;# 
   691   000FE9                     FSR0            equ	4073	;# 
   692   000FE9                     FSR0L           equ	4073	;# 
   693   000FEA                     FSR0H           equ	4074	;# 
   694   000FEB                     PLUSW0          equ	4075	;# 
   695   000FEC                     PREINC0         equ	4076	;# 
   696   000FED                     POSTDEC0        equ	4077	;# 
   697   000FEE                     POSTINC0        equ	4078	;# 
   698   000FEF                     INDF0           equ	4079	;# 
   699   000FF0                     INTCON3         equ	4080	;# 
   700   000FF1                     INTCON2         equ	4081	;# 
   701   000FF2                     INTCON          equ	4082	;# 
   702   000FF3                     PROD            equ	4083	;# 
   703   000FF3                     PRODL           equ	4083	;# 
   704   000FF4                     PRODH           equ	4084	;# 
   705   000FF5                     TABLAT          equ	4085	;# 
   706   000FF6                     TBLPTR          equ	4086	;# 
   707   000FF6                     TBLPTRL         equ	4086	;# 
   708   000FF7                     TBLPTRH         equ	4087	;# 
   709   000FF8                     TBLPTRU         equ	4088	;# 
   710   000FF9                     PCLAT           equ	4089	;# 
   711   000FF9                     PC              equ	4089	;# 
   712   000FF9                     PCL             equ	4089	;# 
   713   000FFA                     PCLATH          equ	4090	;# 
   714   000FFB                     PCLATU          equ	4091	;# 
   715   000FFC                     STKPTR          equ	4092	;# 
   716   000FFD                     TOS             equ	4093	;# 
   717   000FFD                     TOSL            equ	4093	;# 
   718   000FFE                     TOSH            equ	4094	;# 
   719   000FFF                     TOSU            equ	4095	;# 
   720   000F77                     SSPMSK          equ	3959	;# 
   721   000F78                     SLRCON          equ	3960	;# 
   722   000F79                     CM2CON1         equ	3961	;# 
   723   000F7A                     CM2CON0         equ	3962	;# 
   724   000F7B                     CM1CON0         equ	3963	;# 
   725   000F7C                     WPUB            equ	3964	;# 
   726   000F7D                     IOCB            equ	3965	;# 
   727   000F7E                     ANSEL           equ	3966	;# 
   728   000F7F                     ANSELH          equ	3967	;# 
   729   000F80                     PORTA           equ	3968	;# 
   730   000F81                     PORTB           equ	3969	;# 
   731   000F82                     PORTC           equ	3970	;# 
   732   000F83                     PORTD           equ	3971	;# 
   733   000F84                     PORTE           equ	3972	;# 
   734   000F89                     LATA            equ	3977	;# 
   735   000F8A                     LATB            equ	3978	;# 
   736   000F8B                     LATC            equ	3979	;# 
   737   000F8C                     LATD            equ	3980	;# 
   738   000F8D                     LATE            equ	3981	;# 
   739   000F92                     TRISA           equ	3986	;# 
   740   000F92                     DDRA            equ	3986	;# 
   741   000F93                     TRISB           equ	3987	;# 
   742   000F93                     DDRB            equ	3987	;# 
   743   000F94                     TRISC           equ	3988	;# 
   744   000F94                     DDRC            equ	3988	;# 
   745   000F95                     TRISD           equ	3989	;# 
   746   000F95                     DDRD            equ	3989	;# 
   747   000F96                     TRISE           equ	3990	;# 
   748   000F96                     DDRE            equ	3990	;# 
   749   000F9B                     OSCTUNE         equ	3995	;# 
   750   000F9D                     PIE1            equ	3997	;# 
   751   000F9E                     PIR1            equ	3998	;# 
   752   000F9F                     IPR1            equ	3999	;# 
   753   000FA0                     PIE2            equ	4000	;# 
   754   000FA1                     PIR2            equ	4001	;# 
   755   000FA2                     IPR2            equ	4002	;# 
   756   000FA6                     EECON1          equ	4006	;# 
   757   000FA7                     EECON2          equ	4007	;# 
   758   000FA8                     EEDATA          equ	4008	;# 
   759   000FA9                     EEADR           equ	4009	;# 
   760   000FAA                     EEADRH          equ	4010	;# 
   761   000FAB                     RCSTA           equ	4011	;# 
   762   000FAB                     RCSTA1          equ	4011	;# 
   763   000FAC                     TXSTA           equ	4012	;# 
   764   000FAC                     TXSTA1          equ	4012	;# 
   765   000FAD                     TXREG           equ	4013	;# 
   766   000FAD                     TXREG1          equ	4013	;# 
   767   000FAE                     RCREG           equ	4014	;# 
   768   000FAE                     RCREG1          equ	4014	;# 
   769   000FAF                     SPBRG           equ	4015	;# 
   770   000FAF                     SPBRG1          equ	4015	;# 
   771   000FB0                     SPBRGH          equ	4016	;# 
   772   000FB1                     T3CON           equ	4017	;# 
   773   000FB2                     TMR3            equ	4018	;# 
   774   000FB2                     TMR3L           equ	4018	;# 
   775   000FB3                     TMR3H           equ	4019	;# 
   776   000FB4                     CVRCON2         equ	4020	;# 
   777   000FB5                     CVRCON          equ	4021	;# 
   778   000FB6                     ECCP1AS         equ	4022	;# 
   779   000FB7                     PWM1CON         equ	4023	;# 
   780   000FB8                     BAUDCON         equ	4024	;# 
   781   000FB8                     BAUDCTL         equ	4024	;# 
   782   000FB9                     PSTRCON         equ	4025	;# 
   783   000FBA                     CCP2CON         equ	4026	;# 
   784   000FBB                     CCPR2           equ	4027	;# 
   785   000FBB                     CCPR2L          equ	4027	;# 
   786   000FBC                     CCPR2H          equ	4028	;# 
   787   000FBD                     CCP1CON         equ	4029	;# 
   788   000FBE                     CCPR1           equ	4030	;# 
   789   000FBE                     CCPR1L          equ	4030	;# 
   790   000FBF                     CCPR1H          equ	4031	;# 
   791   000FC0                     ADCON2          equ	4032	;# 
   792   000FC1                     ADCON1          equ	4033	;# 
   793   000FC2                     ADCON0          equ	4034	;# 
   794   000FC3                     ADRES           equ	4035	;# 
   795   000FC3                     ADRESL          equ	4035	;# 
   796   000FC4                     ADRESH          equ	4036	;# 
   797   000FC5                     SSPCON2         equ	4037	;# 
   798   000FC6                     SSPCON1         equ	4038	;# 
   799   000FC7                     SSPSTAT         equ	4039	;# 
   800   000FC8                     SSPADD          equ	4040	;# 
   801   000FC9                     SSPBUF          equ	4041	;# 
   802   000FCA                     T2CON           equ	4042	;# 
   803   000FCB                     PR2             equ	4043	;# 
   804   000FCB                     MEMCON          equ	4043	;# 
   805   000FCC                     TMR2            equ	4044	;# 
   806   000FCD                     T1CON           equ	4045	;# 
   807   000FCE                     TMR1            equ	4046	;# 
   808   000FCE                     TMR1L           equ	4046	;# 
   809   000FCF                     TMR1H           equ	4047	;# 
   810   000FD0                     RCON            equ	4048	;# 
   811   000FD1                     WDTCON          equ	4049	;# 
   812   000FD2                     HLVDCON         equ	4050	;# 
   813   000FD2                     LVDCON          equ	4050	;# 
   814   000FD3                     OSCCON          equ	4051	;# 
   815   000FD5                     T0CON           equ	4053	;# 
   816   000FD6                     TMR0            equ	4054	;# 
   817   000FD6                     TMR0L           equ	4054	;# 
   818   000FD7                     TMR0H           equ	4055	;# 
   819   000FD8                     STATUS          equ	4056	;# 
   820   000FD9                     FSR2            equ	4057	;# 
   821   000FD9                     FSR2L           equ	4057	;# 
   822   000FDA                     FSR2H           equ	4058	;# 
   823   000FDB                     PLUSW2          equ	4059	;# 
   824   000FDC                     PREINC2         equ	4060	;# 
   825   000FDD                     POSTDEC2        equ	4061	;# 
   826   000FDE                     POSTINC2        equ	4062	;# 
   827   000FDF                     INDF2           equ	4063	;# 
   828   000FE0                     BSR             equ	4064	;# 
   829   000FE1                     FSR1            equ	4065	;# 
   830   000FE1                     FSR1L           equ	4065	;# 
   831   000FE2                     FSR1H           equ	4066	;# 
   832   000FE3                     PLUSW1          equ	4067	;# 
   833   000FE4                     PREINC1         equ	4068	;# 
   834   000FE5                     POSTDEC1        equ	4069	;# 
   835   000FE6                     POSTINC1        equ	4070	;# 
   836   000FE7                     INDF1           equ	4071	;# 
   837   000FE8                     WREG            equ	4072	;# 
   838   000FE9                     FSR0            equ	4073	;# 
   839   000FE9                     FSR0L           equ	4073	;# 
   840   000FEA                     FSR0H           equ	4074	;# 
   841   000FEB                     PLUSW0          equ	4075	;# 
   842   000FEC                     PREINC0         equ	4076	;# 
   843   000FED                     POSTDEC0        equ	4077	;# 
   844   000FEE                     POSTINC0        equ	4078	;# 
   845   000FEF                     INDF0           equ	4079	;# 
   846   000FF0                     INTCON3         equ	4080	;# 
   847   000FF1                     INTCON2         equ	4081	;# 
   848   000FF2                     INTCON          equ	4082	;# 
   849   000FF3                     PROD            equ	4083	;# 
   850   000FF3                     PRODL           equ	4083	;# 
   851   000FF4                     PRODH           equ	4084	;# 
   852   000FF5                     TABLAT          equ	4085	;# 
   853   000FF6                     TBLPTR          equ	4086	;# 
   854   000FF6                     TBLPTRL         equ	4086	;# 
   855   000FF7                     TBLPTRH         equ	4087	;# 
   856   000FF8                     TBLPTRU         equ	4088	;# 
   857   000FF9                     PCLAT           equ	4089	;# 
   858   000FF9                     PC              equ	4089	;# 
   859   000FF9                     PCL             equ	4089	;# 
   860   000FFA                     PCLATH          equ	4090	;# 
   861   000FFB                     PCLATU          equ	4091	;# 
   862   000FFC                     STKPTR          equ	4092	;# 
   863   000FFD                     TOS             equ	4093	;# 
   864   000FFD                     TOSL            equ	4093	;# 
   865   000FFE                     TOSH            equ	4094	;# 
   866   000FFF                     TOSU            equ	4095	;# 
   867   000F77                     SSPMSK          equ	3959	;# 
   868   000F78                     SLRCON          equ	3960	;# 
   869   000F79                     CM2CON1         equ	3961	;# 
   870   000F7A                     CM2CON0         equ	3962	;# 
   871   000F7B                     CM1CON0         equ	3963	;# 
   872   000F7C                     WPUB            equ	3964	;# 
   873   000F7D                     IOCB            equ	3965	;# 
   874   000F7E                     ANSEL           equ	3966	;# 
   875   000F7F                     ANSELH          equ	3967	;# 
   876   000F80                     PORTA           equ	3968	;# 
   877   000F81                     PORTB           equ	3969	;# 
   878   000F82                     PORTC           equ	3970	;# 
   879   000F83                     PORTD           equ	3971	;# 
   880   000F84                     PORTE           equ	3972	;# 
   881   000F89                     LATA            equ	3977	;# 
   882   000F8A                     LATB            equ	3978	;# 
   883   000F8B                     LATC            equ	3979	;# 
   884   000F8C                     LATD            equ	3980	;# 
   885   000F8D                     LATE            equ	3981	;# 
   886   000F92                     TRISA           equ	3986	;# 
   887   000F92                     DDRA            equ	3986	;# 
   888   000F93                     TRISB           equ	3987	;# 
   889   000F93                     DDRB            equ	3987	;# 
   890   000F94                     TRISC           equ	3988	;# 
   891   000F94                     DDRC            equ	3988	;# 
   892   000F95                     TRISD           equ	3989	;# 
   893   000F95                     DDRD            equ	3989	;# 
   894   000F96                     TRISE           equ	3990	;# 
   895   000F96                     DDRE            equ	3990	;# 
   896   000F9B                     OSCTUNE         equ	3995	;# 
   897   000F9D                     PIE1            equ	3997	;# 
   898   000F9E                     PIR1            equ	3998	;# 
   899   000F9F                     IPR1            equ	3999	;# 
   900   000FA0                     PIE2            equ	4000	;# 
   901   000FA1                     PIR2            equ	4001	;# 
   902   000FA2                     IPR2            equ	4002	;# 
   903   000FA6                     EECON1          equ	4006	;# 
   904   000FA7                     EECON2          equ	4007	;# 
   905   000FA8                     EEDATA          equ	4008	;# 
   906   000FA9                     EEADR           equ	4009	;# 
   907   000FAA                     EEADRH          equ	4010	;# 
   908   000FAB                     RCSTA           equ	4011	;# 
   909   000FAB                     RCSTA1          equ	4011	;# 
   910   000FAC                     TXSTA           equ	4012	;# 
   911   000FAC                     TXSTA1          equ	4012	;# 
   912   000FAD                     TXREG           equ	4013	;# 
   913   000FAD                     TXREG1          equ	4013	;# 
   914   000FAE                     RCREG           equ	4014	;# 
   915   000FAE                     RCREG1          equ	4014	;# 
   916   000FAF                     SPBRG           equ	4015	;# 
   917   000FAF                     SPBRG1          equ	4015	;# 
   918   000FB0                     SPBRGH          equ	4016	;# 
   919   000FB1                     T3CON           equ	4017	;# 
   920   000FB2                     TMR3            equ	4018	;# 
   921   000FB2                     TMR3L           equ	4018	;# 
   922   000FB3                     TMR3H           equ	4019	;# 
   923   000FB4                     CVRCON2         equ	4020	;# 
   924   000FB5                     CVRCON          equ	4021	;# 
   925   000FB6                     ECCP1AS         equ	4022	;# 
   926   000FB7                     PWM1CON         equ	4023	;# 
   927   000FB8                     BAUDCON         equ	4024	;# 
   928   000FB8                     BAUDCTL         equ	4024	;# 
   929   000FB9                     PSTRCON         equ	4025	;# 
   930   000FBA                     CCP2CON         equ	4026	;# 
   931   000FBB                     CCPR2           equ	4027	;# 
   932   000FBB                     CCPR2L          equ	4027	;# 
   933   000FBC                     CCPR2H          equ	4028	;# 
   934   000FBD                     CCP1CON         equ	4029	;# 
   935   000FBE                     CCPR1           equ	4030	;# 
   936   000FBE                     CCPR1L          equ	4030	;# 
   937   000FBF                     CCPR1H          equ	4031	;# 
   938   000FC0                     ADCON2          equ	4032	;# 
   939   000FC1                     ADCON1          equ	4033	;# 
   940   000FC2                     ADCON0          equ	4034	;# 
   941   000FC3                     ADRES           equ	4035	;# 
   942   000FC3                     ADRESL          equ	4035	;# 
   943   000FC4                     ADRESH          equ	4036	;# 
   944   000FC5                     SSPCON2         equ	4037	;# 
   945   000FC6                     SSPCON1         equ	4038	;# 
   946   000FC7                     SSPSTAT         equ	4039	;# 
   947   000FC8                     SSPADD          equ	4040	;# 
   948   000FC9                     SSPBUF          equ	4041	;# 
   949   000FCA                     T2CON           equ	4042	;# 
   950   000FCB                     PR2             equ	4043	;# 
   951   000FCB                     MEMCON          equ	4043	;# 
   952   000FCC                     TMR2            equ	4044	;# 
   953   000FCD                     T1CON           equ	4045	;# 
   954   000FCE                     TMR1            equ	4046	;# 
   955   000FCE                     TMR1L           equ	4046	;# 
   956   000FCF                     TMR1H           equ	4047	;# 
   957   000FD0                     RCON            equ	4048	;# 
   958   000FD1                     WDTCON          equ	4049	;# 
   959   000FD2                     HLVDCON         equ	4050	;# 
   960   000FD2                     LVDCON          equ	4050	;# 
   961   000FD3                     OSCCON          equ	4051	;# 
   962   000FD5                     T0CON           equ	4053	;# 
   963   000FD6                     TMR0            equ	4054	;# 
   964   000FD6                     TMR0L           equ	4054	;# 
   965   000FD7                     TMR0H           equ	4055	;# 
   966   000FD8                     STATUS          equ	4056	;# 
   967   000FD9                     FSR2            equ	4057	;# 
   968   000FD9                     FSR2L           equ	4057	;# 
   969   000FDA                     FSR2H           equ	4058	;# 
   970   000FDB                     PLUSW2          equ	4059	;# 
   971   000FDC                     PREINC2         equ	4060	;# 
   972   000FDD                     POSTDEC2        equ	4061	;# 
   973   000FDE                     POSTINC2        equ	4062	;# 
   974   000FDF                     INDF2           equ	4063	;# 
   975   000FE0                     BSR             equ	4064	;# 
   976   000FE1                     FSR1            equ	4065	;# 
   977   000FE1                     FSR1L           equ	4065	;# 
   978   000FE2                     FSR1H           equ	4066	;# 
   979   000FE3                     PLUSW1          equ	4067	;# 
   980   000FE4                     PREINC1         equ	4068	;# 
   981   000FE5                     POSTDEC1        equ	4069	;# 
   982   000FE6                     POSTINC1        equ	4070	;# 
   983   000FE7                     INDF1           equ	4071	;# 
   984   000FE8                     WREG            equ	4072	;# 
   985   000FE9                     FSR0            equ	4073	;# 
   986   000FE9                     FSR0L           equ	4073	;# 
   987   000FEA                     FSR0H           equ	4074	;# 
   988   000FEB                     PLUSW0          equ	4075	;# 
   989   000FEC                     PREINC0         equ	4076	;# 
   990   000FED                     POSTDEC0        equ	4077	;# 
   991   000FEE                     POSTINC0        equ	4078	;# 
   992   000FEF                     INDF0           equ	4079	;# 
   993   000FF0                     INTCON3         equ	4080	;# 
   994   000FF1                     INTCON2         equ	4081	;# 
   995   000FF2                     INTCON          equ	4082	;# 
   996   000FF3                     PROD            equ	4083	;# 
   997   000FF3                     PRODL           equ	4083	;# 
   998   000FF4                     PRODH           equ	4084	;# 
   999   000FF5                     TABLAT          equ	4085	;# 
  1000   000FF6                     TBLPTR          equ	4086	;# 
  1001   000FF6                     TBLPTRL         equ	4086	;# 
  1002   000FF7                     TBLPTRH         equ	4087	;# 
  1003   000FF8                     TBLPTRU         equ	4088	;# 
  1004   000FF9                     PCLAT           equ	4089	;# 
  1005   000FF9                     PC              equ	4089	;# 
  1006   000FF9                     PCL             equ	4089	;# 
  1007   000FFA                     PCLATH          equ	4090	;# 
  1008   000FFB                     PCLATU          equ	4091	;# 
  1009   000FFC                     STKPTR          equ	4092	;# 
  1010   000FFD                     TOS             equ	4093	;# 
  1011   000FFD                     TOSL            equ	4093	;# 
  1012   000FFE                     TOSH            equ	4094	;# 
  1013   000FFF                     TOSU            equ	4095	;# 
  1014   000F77                     SSPMSK          equ	3959	;# 
  1015   000F78                     SLRCON          equ	3960	;# 
  1016   000F79                     CM2CON1         equ	3961	;# 
  1017   000F7A                     CM2CON0         equ	3962	;# 
  1018   000F7B                     CM1CON0         equ	3963	;# 
  1019   000F7C                     WPUB            equ	3964	;# 
  1020   000F7D                     IOCB            equ	3965	;# 
  1021   000F7E                     ANSEL           equ	3966	;# 
  1022   000F7F                     ANSELH          equ	3967	;# 
  1023   000F80                     PORTA           equ	3968	;# 
  1024   000F81                     PORTB           equ	3969	;# 
  1025   000F82                     PORTC           equ	3970	;# 
  1026   000F83                     PORTD           equ	3971	;# 
  1027   000F84                     PORTE           equ	3972	;# 
  1028   000F89                     LATA            equ	3977	;# 
  1029   000F8A                     LATB            equ	3978	;# 
  1030   000F8B                     LATC            equ	3979	;# 
  1031   000F8C                     LATD            equ	3980	;# 
  1032   000F8D                     LATE            equ	3981	;# 
  1033   000F92                     TRISA           equ	3986	;# 
  1034   000F92                     DDRA            equ	3986	;# 
  1035   000F93                     TRISB           equ	3987	;# 
  1036   000F93                     DDRB            equ	3987	;# 
  1037   000F94                     TRISC           equ	3988	;# 
  1038   000F94                     DDRC            equ	3988	;# 
  1039   000F95                     TRISD           equ	3989	;# 
  1040   000F95                     DDRD            equ	3989	;# 
  1041   000F96                     TRISE           equ	3990	;# 
  1042   000F96                     DDRE            equ	3990	;# 
  1043   000F9B                     OSCTUNE         equ	3995	;# 
  1044   000F9D                     PIE1            equ	3997	;# 
  1045   000F9E                     PIR1            equ	3998	;# 
  1046   000F9F                     IPR1            equ	3999	;# 
  1047   000FA0                     PIE2            equ	4000	;# 
  1048   000FA1                     PIR2            equ	4001	;# 
  1049   000FA2                     IPR2            equ	4002	;# 
  1050   000FA6                     EECON1          equ	4006	;# 
  1051   000FA7                     EECON2          equ	4007	;# 
  1052   000FA8                     EEDATA          equ	4008	;# 
  1053   000FA9                     EEADR           equ	4009	;# 
  1054   000FAA                     EEADRH          equ	4010	;# 
  1055   000FAB                     RCSTA           equ	4011	;# 
  1056   000FAB                     RCSTA1          equ	4011	;# 
  1057   000FAC                     TXSTA           equ	4012	;# 
  1058   000FAC                     TXSTA1          equ	4012	;# 
  1059   000FAD                     TXREG           equ	4013	;# 
  1060   000FAD                     TXREG1          equ	4013	;# 
  1061   000FAE                     RCREG           equ	4014	;# 
  1062   000FAE                     RCREG1          equ	4014	;# 
  1063   000FAF                     SPBRG           equ	4015	;# 
  1064   000FAF                     SPBRG1          equ	4015	;# 
  1065   000FB0                     SPBRGH          equ	4016	;# 
  1066   000FB1                     T3CON           equ	4017	;# 
  1067   000FB2                     TMR3            equ	4018	;# 
  1068   000FB2                     TMR3L           equ	4018	;# 
  1069   000FB3                     TMR3H           equ	4019	;# 
  1070   000FB4                     CVRCON2         equ	4020	;# 
  1071   000FB5                     CVRCON          equ	4021	;# 
  1072   000FB6                     ECCP1AS         equ	4022	;# 
  1073   000FB7                     PWM1CON         equ	4023	;# 
  1074   000FB8                     BAUDCON         equ	4024	;# 
  1075   000FB8                     BAUDCTL         equ	4024	;# 
  1076   000FB9                     PSTRCON         equ	4025	;# 
  1077   000FBA                     CCP2CON         equ	4026	;# 
  1078   000FBB                     CCPR2           equ	4027	;# 
  1079   000FBB                     CCPR2L          equ	4027	;# 
  1080   000FBC                     CCPR2H          equ	4028	;# 
  1081   000FBD                     CCP1CON         equ	4029	;# 
  1082   000FBE                     CCPR1           equ	4030	;# 
  1083   000FBE                     CCPR1L          equ	4030	;# 
  1084   000FBF                     CCPR1H          equ	4031	;# 
  1085   000FC0                     ADCON2          equ	4032	;# 
  1086   000FC1                     ADCON1          equ	4033	;# 
  1087   000FC2                     ADCON0          equ	4034	;# 
  1088   000FC3                     ADRES           equ	4035	;# 
  1089   000FC3                     ADRESL          equ	4035	;# 
  1090   000FC4                     ADRESH          equ	4036	;# 
  1091   000FC5                     SSPCON2         equ	4037	;# 
  1092   000FC6                     SSPCON1         equ	4038	;# 
  1093   000FC7                     SSPSTAT         equ	4039	;# 
  1094   000FC8                     SSPADD          equ	4040	;# 
  1095   000FC9                     SSPBUF          equ	4041	;# 
  1096   000FCA                     T2CON           equ	4042	;# 
  1097   000FCB                     PR2             equ	4043	;# 
  1098   000FCB                     MEMCON          equ	4043	;# 
  1099   000FCC                     TMR2            equ	4044	;# 
  1100   000FCD                     T1CON           equ	4045	;# 
  1101   000FCE                     TMR1            equ	4046	;# 
  1102   000FCE                     TMR1L           equ	4046	;# 
  1103   000FCF                     TMR1H           equ	4047	;# 
  1104   000FD0                     RCON            equ	4048	;# 
  1105   000FD1                     WDTCON          equ	4049	;# 
  1106   000FD2                     HLVDCON         equ	4050	;# 
  1107   000FD2                     LVDCON          equ	4050	;# 
  1108   000FD3                     OSCCON          equ	4051	;# 
  1109   000FD5                     T0CON           equ	4053	;# 
  1110   000FD6                     TMR0            equ	4054	;# 
  1111   000FD6                     TMR0L           equ	4054	;# 
  1112   000FD7                     TMR0H           equ	4055	;# 
  1113   000FD8                     STATUS          equ	4056	;# 
  1114   000FD9                     FSR2            equ	4057	;# 
  1115   000FD9                     FSR2L           equ	4057	;# 
  1116   000FDA                     FSR2H           equ	4058	;# 
  1117   000FDB                     PLUSW2          equ	4059	;# 
  1118   000FDC                     PREINC2         equ	4060	;# 
  1119   000FDD                     POSTDEC2        equ	4061	;# 
  1120   000FDE                     POSTINC2        equ	4062	;# 
  1121   000FDF                     INDF2           equ	4063	;# 
  1122   000FE0                     BSR             equ	4064	;# 
  1123   000FE1                     FSR1            equ	4065	;# 
  1124   000FE1                     FSR1L           equ	4065	;# 
  1125   000FE2                     FSR1H           equ	4066	;# 
  1126   000FE3                     PLUSW1          equ	4067	;# 
  1127   000FE4                     PREINC1         equ	4068	;# 
  1128   000FE5                     POSTDEC1        equ	4069	;# 
  1129   000FE6                     POSTINC1        equ	4070	;# 
  1130   000FE7                     INDF1           equ	4071	;# 
  1131   000FE8                     WREG            equ	4072	;# 
  1132   000FE9                     FSR0            equ	4073	;# 
  1133   000FE9                     FSR0L           equ	4073	;# 
  1134   000FEA                     FSR0H           equ	4074	;# 
  1135   000FEB                     PLUSW0          equ	4075	;# 
  1136   000FEC                     PREINC0         equ	4076	;# 
  1137   000FED                     POSTDEC0        equ	4077	;# 
  1138   000FEE                     POSTINC0        equ	4078	;# 
  1139   000FEF                     INDF0           equ	4079	;# 
  1140   000FF0                     INTCON3         equ	4080	;# 
  1141   000FF1                     INTCON2         equ	4081	;# 
  1142   000FF2                     INTCON          equ	4082	;# 
  1143   000FF3                     PROD            equ	4083	;# 
  1144   000FF3                     PRODL           equ	4083	;# 
  1145   000FF4                     PRODH           equ	4084	;# 
  1146   000FF5                     TABLAT          equ	4085	;# 
  1147   000FF6                     TBLPTR          equ	4086	;# 
  1148   000FF6                     TBLPTRL         equ	4086	;# 
  1149   000FF7                     TBLPTRH         equ	4087	;# 
  1150   000FF8                     TBLPTRU         equ	4088	;# 
  1151   000FF9                     PCLAT           equ	4089	;# 
  1152   000FF9                     PC              equ	4089	;# 
  1153   000FF9                     PCL             equ	4089	;# 
  1154   000FFA                     PCLATH          equ	4090	;# 
  1155   000FFB                     PCLATU          equ	4091	;# 
  1156   000FFC                     STKPTR          equ	4092	;# 
  1157   000FFD                     TOS             equ	4093	;# 
  1158   000FFD                     TOSL            equ	4093	;# 
  1159   000FFE                     TOSH            equ	4094	;# 
  1160   000FFF                     TOSU            equ	4095	;# 
  1161   000F77                     SSPMSK          equ	3959	;# 
  1162   000F78                     SLRCON          equ	3960	;# 
  1163   000F79                     CM2CON1         equ	3961	;# 
  1164   000F7A                     CM2CON0         equ	3962	;# 
  1165   000F7B                     CM1CON0         equ	3963	;# 
  1166   000F7C                     WPUB            equ	3964	;# 
  1167   000F7D                     IOCB            equ	3965	;# 
  1168   000F7E                     ANSEL           equ	3966	;# 
  1169   000F7F                     ANSELH          equ	3967	;# 
  1170   000F80                     PORTA           equ	3968	;# 
  1171   000F81                     PORTB           equ	3969	;# 
  1172   000F82                     PORTC           equ	3970	;# 
  1173   000F83                     PORTD           equ	3971	;# 
  1174   000F84                     PORTE           equ	3972	;# 
  1175   000F89                     LATA            equ	3977	;# 
  1176   000F8A                     LATB            equ	3978	;# 
  1177   000F8B                     LATC            equ	3979	;# 
  1178   000F8C                     LATD            equ	3980	;# 
  1179   000F8D                     LATE            equ	3981	;# 
  1180   000F92                     TRISA           equ	3986	;# 
  1181   000F92                     DDRA            equ	3986	;# 
  1182   000F93                     TRISB           equ	3987	;# 
  1183   000F93                     DDRB            equ	3987	;# 
  1184   000F94                     TRISC           equ	3988	;# 
  1185   000F94                     DDRC            equ	3988	;# 
  1186   000F95                     TRISD           equ	3989	;# 
  1187   000F95                     DDRD            equ	3989	;# 
  1188   000F96                     TRISE           equ	3990	;# 
  1189   000F96                     DDRE            equ	3990	;# 
  1190   000F9B                     OSCTUNE         equ	3995	;# 
  1191   000F9D                     PIE1            equ	3997	;# 
  1192   000F9E                     PIR1            equ	3998	;# 
  1193   000F9F                     IPR1            equ	3999	;# 
  1194   000FA0                     PIE2            equ	4000	;# 
  1195   000FA1                     PIR2            equ	4001	;# 
  1196   000FA2                     IPR2            equ	4002	;# 
  1197   000FA6                     EECON1          equ	4006	;# 
  1198   000FA7                     EECON2          equ	4007	;# 
  1199   000FA8                     EEDATA          equ	4008	;# 
  1200   000FA9                     EEADR           equ	4009	;# 
  1201   000FAA                     EEADRH          equ	4010	;# 
  1202   000FAB                     RCSTA           equ	4011	;# 
  1203   000FAB                     RCSTA1          equ	4011	;# 
  1204   000FAC                     TXSTA           equ	4012	;# 
  1205   000FAC                     TXSTA1          equ	4012	;# 
  1206   000FAD                     TXREG           equ	4013	;# 
  1207   000FAD                     TXREG1          equ	4013	;# 
  1208   000FAE                     RCREG           equ	4014	;# 
  1209   000FAE                     RCREG1          equ	4014	;# 
  1210   000FAF                     SPBRG           equ	4015	;# 
  1211   000FAF                     SPBRG1          equ	4015	;# 
  1212   000FB0                     SPBRGH          equ	4016	;# 
  1213   000FB1                     T3CON           equ	4017	;# 
  1214   000FB2                     TMR3            equ	4018	;# 
  1215   000FB2                     TMR3L           equ	4018	;# 
  1216   000FB3                     TMR3H           equ	4019	;# 
  1217   000FB4                     CVRCON2         equ	4020	;# 
  1218   000FB5                     CVRCON          equ	4021	;# 
  1219   000FB6                     ECCP1AS         equ	4022	;# 
  1220   000FB7                     PWM1CON         equ	4023	;# 
  1221   000FB8                     BAUDCON         equ	4024	;# 
  1222   000FB8                     BAUDCTL         equ	4024	;# 
  1223   000FB9                     PSTRCON         equ	4025	;# 
  1224   000FBA                     CCP2CON         equ	4026	;# 
  1225   000FBB                     CCPR2           equ	4027	;# 
  1226   000FBB                     CCPR2L          equ	4027	;# 
  1227   000FBC                     CCPR2H          equ	4028	;# 
  1228   000FBD                     CCP1CON         equ	4029	;# 
  1229   000FBE                     CCPR1           equ	4030	;# 
  1230   000FBE                     CCPR1L          equ	4030	;# 
  1231   000FBF                     CCPR1H          equ	4031	;# 
  1232   000FC0                     ADCON2          equ	4032	;# 
  1233   000FC1                     ADCON1          equ	4033	;# 
  1234   000FC2                     ADCON0          equ	4034	;# 
  1235   000FC3                     ADRES           equ	4035	;# 
  1236   000FC3                     ADRESL          equ	4035	;# 
  1237   000FC4                     ADRESH          equ	4036	;# 
  1238   000FC5                     SSPCON2         equ	4037	;# 
  1239   000FC6                     SSPCON1         equ	4038	;# 
  1240   000FC7                     SSPSTAT         equ	4039	;# 
  1241   000FC8                     SSPADD          equ	4040	;# 
  1242   000FC9                     SSPBUF          equ	4041	;# 
  1243   000FCA                     T2CON           equ	4042	;# 
  1244   000FCB                     PR2             equ	4043	;# 
  1245   000FCB                     MEMCON          equ	4043	;# 
  1246   000FCC                     TMR2            equ	4044	;# 
  1247   000FCD                     T1CON           equ	4045	;# 
  1248   000FCE                     TMR1            equ	4046	;# 
  1249   000FCE                     TMR1L           equ	4046	;# 
  1250   000FCF                     TMR1H           equ	4047	;# 
  1251   000FD0                     RCON            equ	4048	;# 
  1252   000FD1                     WDTCON          equ	4049	;# 
  1253   000FD2                     HLVDCON         equ	4050	;# 
  1254   000FD2                     LVDCON          equ	4050	;# 
  1255   000FD3                     OSCCON          equ	4051	;# 
  1256   000FD5                     T0CON           equ	4053	;# 
  1257   000FD6                     TMR0            equ	4054	;# 
  1258   000FD6                     TMR0L           equ	4054	;# 
  1259   000FD7                     TMR0H           equ	4055	;# 
  1260   000FD8                     STATUS          equ	4056	;# 
  1261   000FD9                     FSR2            equ	4057	;# 
  1262   000FD9                     FSR2L           equ	4057	;# 
  1263   000FDA                     FSR2H           equ	4058	;# 
  1264   000FDB                     PLUSW2          equ	4059	;# 
  1265   000FDC                     PREINC2         equ	4060	;# 
  1266   000FDD                     POSTDEC2        equ	4061	;# 
  1267   000FDE                     POSTINC2        equ	4062	;# 
  1268   000FDF                     INDF2           equ	4063	;# 
  1269   000FE0                     BSR             equ	4064	;# 
  1270   000FE1                     FSR1            equ	4065	;# 
  1271   000FE1                     FSR1L           equ	4065	;# 
  1272   000FE2                     FSR1H           equ	4066	;# 
  1273   000FE3                     PLUSW1          equ	4067	;# 
  1274   000FE4                     PREINC1         equ	4068	;# 
  1275   000FE5                     POSTDEC1        equ	4069	;# 
  1276   000FE6                     POSTINC1        equ	4070	;# 
  1277   000FE7                     INDF1           equ	4071	;# 
  1278   000FE8                     WREG            equ	4072	;# 
  1279   000FE9                     FSR0            equ	4073	;# 
  1280   000FE9                     FSR0L           equ	4073	;# 
  1281   000FEA                     FSR0H           equ	4074	;# 
  1282   000FEB                     PLUSW0          equ	4075	;# 
  1283   000FEC                     PREINC0         equ	4076	;# 
  1284   000FED                     POSTDEC0        equ	4077	;# 
  1285   000FEE                     POSTINC0        equ	4078	;# 
  1286   000FEF                     INDF0           equ	4079	;# 
  1287   000FF0                     INTCON3         equ	4080	;# 
  1288   000FF1                     INTCON2         equ	4081	;# 
  1289   000FF2                     INTCON          equ	4082	;# 
  1290   000FF3                     PROD            equ	4083	;# 
  1291   000FF3                     PRODL           equ	4083	;# 
  1292   000FF4                     PRODH           equ	4084	;# 
  1293   000FF5                     TABLAT          equ	4085	;# 
  1294   000FF6                     TBLPTR          equ	4086	;# 
  1295   000FF6                     TBLPTRL         equ	4086	;# 
  1296   000FF7                     TBLPTRH         equ	4087	;# 
  1297   000FF8                     TBLPTRU         equ	4088	;# 
  1298   000FF9                     PCLAT           equ	4089	;# 
  1299   000FF9                     PC              equ	4089	;# 
  1300   000FF9                     PCL             equ	4089	;# 
  1301   000FFA                     PCLATH          equ	4090	;# 
  1302   000FFB                     PCLATU          equ	4091	;# 
  1303   000FFC                     STKPTR          equ	4092	;# 
  1304   000FFD                     TOS             equ	4093	;# 
  1305   000FFD                     TOSL            equ	4093	;# 
  1306   000FFE                     TOSH            equ	4094	;# 
  1307   000FFF                     TOSU            equ	4095	;# 
  1308                           
  1309                           	psect	smallconst
  1310   001000                     __psmallconst:
  1311                           	callstack 0
  1312   001000  00                 	db	0
  1313   001001                     _default_security_key:
  1314                           	callstack 0
  1315   001001  00                 	db	0
  1316   001002  10                 	db	16
  1317   001003  25                 	db	37
  1318   001004  37                 	db	55
  1319   001005  04                 	db	4
  1320   001006  55                 	db	85
  1321   001007  06                 	db	6
  1322   001008  79                 	db	121
  1323   001009  08                 	db	8
  1324   00100A  09                 	db	9
  1325   00100B  10                 	db	16
  1326   00100C  11                 	db	17
  1327   00100D  12                 	db	18
  1328   00100E  13                 	db	19
  1329   00100F  14                 	db	20
  1330   001010  15                 	db	21
  1331   001011                     __end_of_default_security_key:
  1332                           	callstack 0
  1333   001011                     _default_mac_address:
  1334                           	callstack 0
  1335   001011  11                 	db	17
  1336   001012  28                 	db	40
  1337   001013  35                 	db	53
  1338   001014  44                 	db	68
  1339   001015  56                 	db	86
  1340   001016  66                 	db	102
  1341   001017  77                 	db	119
  1342   001018  01                 	db	1
  1343   001019                     __end_of_default_mac_address:
  1344                           	callstack 0
  1345   007CF0                     _TMR1IF         set	31984
  1346   007E68                     _TMR1ON         set	32360
  1347   007E69                     _TMR1CS         set	32361
  1348   007E6B                     _T1OSCEN        set	32363
  1349   007E6A                     _T1SYNC         set	32362
  1350   007E6D                     _T1CKPS1        set	32365
  1351   007E6C                     _T1CKPS0        set	32364
  1352   007E6F                     _T1RD16         set	32367
  1353   007F8F                     _RBPU           set	32655
  1354   007CED                     _RCIE           set	31981
  1355   007CEE                     _ADIE           set	31982
  1356   007D03                     _BCLIE          set	32003
  1357   007CEB                     _SSPIE          set	31979
  1358   007D04                     _EEIE           set	32004
  1359   007D00                     _CCP2IE         set	32000
  1360   007CEA                     _CCP1IE         set	31978
  1361   007CE9                     _TMR2IE         set	31977
  1362   007CE8                     _TMR1IE         set	31976
  1363   007F95                     _T0IE           set	32661
  1364   007F93                     _RBIE           set	32659
  1365   007F94                     _INT0E          set	32660
  1366   007F96                     _PEIE           set	32662
  1367   007F97                     _GIE            set	32663
  1368   007E87                     _IPEN           set	32391
  1369   000FCF                     _TMR1H          set	4047
  1370   000FCE                     _TMR1L          set	4046
  1371   000F9B                     _OSCTUNE        set	3995
  1372   000FD3                     _OSCCON         set	4051
  1373   000F95                     _TRISDbits      set	3989
  1374   000F96                     _TRISEbits      set	3990
  1375   000F93                     _TRISBbits      set	3987
  1376   000F84                     _PORTE          set	3972
  1377   000F83                     _PORTD          set	3971
  1378   000F82                     _PORTC          set	3970
  1379   000F81                     _PORTB          set	3969
  1380   000F80                     _PORTA          set	3968
  1381   000F8D                     _LATEbits       set	3981
  1382   000F82                     _PORTCbits      set	3970
  1383   000FC9                     _SSPBUF         set	4041
  1384   000F9E                     _PIR1bits       set	3998
  1385   000FC6                     _SSPCON1bits    set	4038
  1386   000FC6                     _SSPCON1        set	4038
  1387   000FC7                     _SSPSTATbits    set	4039
  1388   000F94                     _TRISCbits      set	3988
  1389   000F81                     _PORTBbits      set	3969
  1390   000F8C                     _LATDbits       set	3980
  1391   000F8B                     _LATCbits       set	3979
  1392   001019                     STR_1:
  1393   001019  43                 	db	67	;'C'
  1394   00101A  4D                 	db	77	;'M'
  1395   00101B  44                 	db	68	;'D'
  1396   00101C  3A                 	db	58	;':'
  1397   00101D  50                 	db	80	;'P'
  1398   00101E  4C                 	db	76	;'L'
  1399   00101F  56                 	db	86	;'V'
  1400   001020  00                 	db	0
  1401   001021  00                 	db	0	; dummy byte at the end
  1402   000002                     __activetblptr  equ	2
  1403                           
  1404                           ; #config settings
  1405                           
  1406                           	psect	cinit
  1407   001A10                     __pcinit:
  1408                           	callstack 0
  1409   001A10                     start_initialization:
  1410                           	callstack 0
  1411   001A10                     __initialization:
  1412                           	callstack 0
  1413                           
  1414                           ; Clear objects allocated to BANK1 (112 bytes)
  1415   001A10  EE01  F000         	lfsr	0,__pbssBANK1
  1416   001A14  0E70               	movlw	112
  1417   001A16                     clear_0:
  1418   001A16  6AEE               	clrf	postinc0,c
  1419   001A18  06E8               	decf	wreg,f,c
  1420   001A1A  E1FD               	bnz	clear_0
  1421                           
  1422                           ; Clear objects allocated to BANK0 (32 bytes)
  1423   001A1C  EE00  F0AC         	lfsr	0,__pbssBANK0
  1424   001A20  0E20               	movlw	32
  1425   001A22                     clear_1:
  1426   001A22  6AEE               	clrf	postinc0,c
  1427   001A24  06E8               	decf	wreg,f,c
  1428   001A26  E1FD               	bnz	clear_1
  1429                           
  1430                           ; Clear objects allocated to COMRAM (6 bytes)
  1431   001A28  6A51               	clrf	(__pbssCOMRAM+5)& (0+255),c
  1432   001A2A  6A50               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1433   001A2C  6A4F               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1434   001A2E  6A4E               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1435   001A30  6A4D               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1436   001A32  6A4C               	clrf	__pbssCOMRAM& (0+255),c
  1437   001A34                     end_of_initialization:
  1438                           	callstack 0
  1439   001A34                     __end_of__initialization:
  1440                           	callstack 0
  1441   001A34  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1442   001A36  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1443   001A38  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1444   001A3A  6EF8               	movwf	tblptru,c
  1445   001A3C  0100               	movlb	0
  1446   001A3E  EF96  F00A         	goto	_main	;jump to C main() function
  1447                           
  1448                           	psect	bssCOMRAM
  1449   00004C                     __pbssCOMRAM:
  1450                           	callstack 0
  1451   00004C                     _timeStamp:
  1452                           	callstack 0
  1453   00004C                     	ds	4
  1454   000050                     _estadoActual:
  1455                           	callstack 0
  1456   000050                     	ds	1
  1457   000051                     _long_mac_address_e:
  1458                           	callstack 0
  1459   000051                     	ds	1
  1460                           
  1461                           	psect	bssBANK0
  1462   0000AC                     __pbssBANK0:
  1463                           	callstack 0
  1464   0000AC                     _data_config_s:
  1465                           	callstack 0
  1466   0000AC                     	ds	32
  1467                           
  1468                           	psect	bssBANK1
  1469   000100                     __pbssBANK1:
  1470                           	callstack 0
  1471   000100                     _data_out_s:
  1472                           	callstack 0
  1473   000100                     	ds	56
  1474   000138                     _data_in_s:
  1475                           	callstack 0
  1476   000138                     	ds	56
  1477                           
  1478                           	psect	cstackBANK0
  1479   000060                     __pcstackBANK0:
  1480                           	callstack 0
  1481   000060                     main@data_out_s:
  1482                           	callstack 0
  1483                           
  1484                           ; 56 bytes @ 0x0
  1485   000060                     	ds	56
  1486   000098                     main@delay_parpadeo:
  1487                           	callstack 0
  1488                           
  1489                           ; 9 bytes @ 0x38
  1490   000098                     	ds	9
  1491   0000A1                     main@boton1:
  1492                           	callstack 0
  1493                           
  1494                           ; 11 bytes @ 0x41
  1495   0000A1                     	ds	11
  1496                           
  1497                           	psect	cstackCOMRAM
  1498   000001                     __pcstackCOMRAM:
  1499                           	callstack 0
  1500   000001                     ?_strlen:
  1501                           	callstack 0
  1502   000001                     ?_MRF24GetDataIn:
  1503                           	callstack 0
  1504   000001                     SetCSPin@estado:
  1505                           	callstack 0
  1506   000001                     SetWakePin@estado:
  1507                           	callstack 0
  1508   000001                     SetResetPin@estado:
  1509                           	callstack 0
  1510   000001                     SPIWriteByte@dato:
  1511                           	callstack 0
  1512   000001                     DelayInit@delay:
  1513                           	callstack 0
  1514   000001                     DelayReset@delay:
  1515                           	callstack 0
  1516   000001                     DelayIsRunning@delay:
  1517                           	callstack 0
  1518   000001                     strcpy@dest:
  1519                           	callstack 0
  1520   000001                     strlen@s:
  1521                           	callstack 0
  1522   000001                     strncpy@d:
  1523                           	callstack 0
  1524   000001                     
  1525                           ; 1 bytes @ 0x0
  1526   000001                     	ds	1
  1527   000002                     WriteByteSPIPort@dato:
  1528                           	callstack 0
  1529   000002                     DelayRead@delay:
  1530                           	callstack 0
  1531   000002                     strcpy@src:
  1532                           	callstack 0
  1533   000002                     strncpy@s:
  1534                           	callstack 0
  1535   000002                     SPIWrite2Byte@dato:
  1536                           	callstack 0
  1537   000002                     DelayInit@duration:
  1538                           	callstack 0
  1539   000002                     
  1540                           ; 1 bytes @ 0x1
  1541   000002                     	ds	1
  1542   000003                     SetShortAddr@valor:
  1543                           	callstack 0
  1544   000003                     GetShortAddr@leido_spi:
  1545                           	callstack 0
  1546   000003                     strlen@a:
  1547                           	callstack 0
  1548   000003                     strncpy@n:
  1549                           	callstack 0
  1550   000003                     ??_DelayRead:
  1551   000003                     ??_strcpy:
  1552                           
  1553                           ; 1 bytes @ 0x2
  1554   000003                     	ds	1
  1555   000004                     SetShortAddr@reg_address:
  1556                           	callstack 0
  1557   000004                     GetShortAddr@reg_address:
  1558                           	callstack 0
  1559   000004                     strcpy@d:
  1560                           	callstack 0
  1561   000004                     Write2ByteSPIPort@dato:
  1562                           	callstack 0
  1563   000004                     
  1564                           ; 1 bytes @ 0x3
  1565   000004                     	ds	1
  1566   000005                     SetDeviceMACAddress@i:
  1567                           	callstack 0
  1568   000005                     ??_strncpy:
  1569   000005                     
  1570                           ; 1 bytes @ 0x4
  1571   000005                     	ds	1
  1572   000006                     DebounceFSMInit@antirrebote_boton_n:
  1573                           	callstack 0
  1574   000006                     strncpy@cp:
  1575                           	callstack 0
  1576   000006                     SetLongAddr@reg_address:
  1577                           	callstack 0
  1578   000006                     GetLongAddr@reg_address:
  1579                           	callstack 0
  1580   000006                     
  1581                           ; 1 bytes @ 0x5
  1582   000006                     	ds	1
  1583   000007                     
  1584                           ; 1 bytes @ 0x6
  1585   000007                     	ds	1
  1586   000008                     SetLongAddr@valor:
  1587                           	callstack 0
  1588   000008                     ??_GetLongAddr:
  1589                           
  1590                           ; 1 bytes @ 0x7
  1591   000008                     	ds	1
  1592   000009                     ??_SetLongAddr:
  1593                           
  1594                           ; 1 bytes @ 0x8
  1595   000009                     	ds	1
  1596   00000A                     GetLongAddr@respuesta:
  1597                           	callstack 0
  1598                           
  1599                           ; 1 bytes @ 0x9
  1600   00000A                     	ds	1
  1601   00000B                     MRF24TransmitirDato@p_info_out_s:
  1602                           	callstack 0
  1603   00000B                     ??_SetChannel:
  1604   00000B                     ??_MRF24ReciboPaquete:
  1605                           
  1606                           ; 1 bytes @ 0xA
  1607   00000B                     	ds	1
  1608   00000C                     ??_MRF24TransmitirDato:
  1609                           
  1610                           ; 1 bytes @ 0xB
  1611   00000C                     	ds	2
  1612   00000E                     MRF24TransmitirDato@i:
  1613                           	callstack 0
  1614                           
  1615                           ; 1 bytes @ 0xD
  1616   00000E                     	ds	1
  1617   00000F                     DebounceFSMUpdate@antirrebote_boton_n:
  1618                           	callstack 0
  1619   00000F                     MRF24TransmitirDato@largo_mensaje:
  1620                           	callstack 0
  1621   00000F                     ??_InicializoMRF24:
  1622                           
  1623                           ; 1 bytes @ 0xE
  1624   00000F                     	ds	1
  1625   000010                     MRF24ReciboPaquete@largo_mensaje:
  1626                           	callstack 0
  1627   000010                     DebounceFSMUpdate@estado_pin:
  1628                           	callstack 0
  1629                           
  1630                           ; 1 bytes @ 0xF
  1631   000010                     	ds	1
  1632   000011                     InicializoMRF24@lectura:
  1633                           	callstack 0
  1634   000011                     MRF24TransmitirDato@pos_mem:
  1635                           	callstack 0
  1636   000011                     MRF24ReciboPaquete@add:
  1637                           	callstack 0
  1638   000011                     ??_DebounceFSMUpdate:
  1639                           
  1640                           ; 1 bytes @ 0x10
  1641   000011                     	ds	1
  1642   000012                     InicializoMRF24@delay_time_out:
  1643                           	callstack 0
  1644   000012                     envio@data_out_s:
  1645                           	callstack 0
  1646   000012                     
  1647                           ; 1 bytes @ 0x11
  1648   000012                     	ds	1
  1649   000013                     MRF24ReciboPaquete@i:
  1650                           	callstack 0
  1651                           
  1652                           ; 1 bytes @ 0x12
  1653   000013                     	ds	8
  1654   00001B                     ??_MRF24J40Init:
  1655                           
  1656                           ; 1 bytes @ 0x1A
  1657   00001B                     	ds	47
  1658   00004A                     ??_main:
  1659                           
  1660                           ; 1 bytes @ 0x49
  1661   00004A                     	ds	2
  1662                           
  1663 ;;
  1664 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1665 ;;
  1666 ;; *************** function _main *****************
  1667 ;; Defined at:
  1668 ;;		line 31 in file "main.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  mrf24_data_i    2    0        PTR struct .
  1673 ;;		 -> data_in_s(56), 
  1674 ;;  data_out_s     56    0[BANK0 ] struct .
  1675 ;;  boton1         11   65[BANK0 ] struct .
  1676 ;;  delay_parpad    9   56[BANK0 ] struct .
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1687 ;;      Locals:         0      76       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1689 ;;      Totals:         2      76       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1690 ;;Total ram usage:       78 bytes
  1691 ;; Hardware stack levels required when called: 8
  1692 ;; This function calls:
  1693 ;;		_BoardInit
  1694 ;;		_DebounceFSMInit
  1695 ;;		_DebounceFSMUpdate
  1696 ;;		_DelayInit
  1697 ;;		_DelayRead
  1698 ;;		_MRF24GetDataIn
  1699 ;;		_MRF24IsNewMsg
  1700 ;;		_MRF24J40Init
  1701 ;;		_MRF24ReciboPaquete
  1702 ;;		_envio
  1703 ;; This function is called by:
  1704 ;;		Startup code after reset
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text0
  1709   00152C                     __ptext0:
  1710                           	callstack 0
  1711   00152C                     _main:
  1712                           	callstack 23
  1713   00152C                     
  1714                           ;main.c: 33:     delayNoBloqueanteData_t delay_parpadeo;;main.c: 34:     debounceData_t 
      +                          boton1;;main.c: 35:  DebounceFSMInit(&boton1);
  1715   00152C  0EA1               	movlw	low main@boton1
  1716   00152E  6E06               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  1717   001530  EC3A  F00D         	call	_DebounceFSMInit	;wreg free
  1718   001534                     
  1719                           ;main.c: 36:     BoardInit();
  1720   001534  EC41  F00C         	call	_BoardInit	;wreg free
  1721   001538                     
  1722                           ;main.c: 37:     MRF24J40Init();
  1723   001538  ECB5  F00C         	call	_MRF24J40Init	;wreg free
  1724   00153C                     
  1725                           ;main.c: 38:     DelayInit(&delay_parpadeo, 1000);
  1726   00153C  0E98               	movlw	low main@delay_parpadeo
  1727   00153E  6E01               	movwf	DelayInit@delay^0,c
  1728   001540  0EE8               	movlw	232
  1729   001542  6E02               	movwf	DelayInit@duration^0,c
  1730   001544  0E03               	movlw	3
  1731   001546  6E03               	movwf	(DelayInit@duration+1)^0,c
  1732   001548  0E00               	movlw	0
  1733   00154A  6E04               	movwf	(DelayInit@duration+2)^0,c
  1734   00154C  0E00               	movlw	0
  1735   00154E  6E05               	movwf	(DelayInit@duration+3)^0,c
  1736   001550  ECAC  F00D         	call	_DelayInit	;wreg free
  1737   001554                     
  1738                           ;main.c: 40:     mrf24_data_out_t data_out_s;;main.c: 41:  data_out_s.dest_address = (0x
      +                          1111);
  1739   001554  0E11               	movlw	17
  1740   001556  0100               	movlb	0	; () banked
  1741   001558  6F63               	movwf	(main@data_out_s+3)& (0+255),b
  1742   00155A  0E11               	movlw	17
  1743   00155C  6F62               	movwf	(main@data_out_s+2)& (0+255),b
  1744   00155E                     
  1745                           ; BSR set to: 0
  1746                           ;main.c: 42:  data_out_s.dest_panid = 0x1234;
  1747   00155E  0E12               	movlw	18
  1748   001560  6F61               	movwf	(main@data_out_s+1)& (0+255),b
  1749   001562  0E34               	movlw	52
  1750   001564  6F60               	movwf	main@data_out_s& (0+255),b
  1751   001566                     
  1752                           ; BSR set to: 0
  1753                           ;main.c: 43:  data_out_s.origin_address = 0x4567;
  1754   001566  0E45               	movlw	69
  1755   001568  6F65               	movwf	(main@data_out_s+5)& (0+255),b
  1756   00156A  0E67               	movlw	103
  1757   00156C  6F64               	movwf	(main@data_out_s+4)& (0+255),b
  1758   00156E                     l280:
  1759   00156E  0004               	clrwdt		;# 
  1760                           
  1761                           ;main.c: 48:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  1762   001570  EFBE  F00A         	goto	l2237
  1763   001574                     l2233:
  1764                           
  1765                           ;main.c: 51:                 envio();
  1766   001574  EC52  F00D         	call	_envio	;wreg free
  1767                           
  1768                           ;main.c: 52:     break;
  1769   001578  EFDC  F00A         	goto	l2239
  1770   00157C                     l2237:
  1771   00157C  0EA1               	movlw	low main@boton1
  1772   00157E  6E0F               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  1773   001580  B482               	btfsc	130,2,c	;volatile
  1774   001582  EFC5  F00A         	goto	u861
  1775   001586  EFC8  F00A         	goto	u860
  1776   00158A                     u861:
  1777   00158A  0E01               	movlw	1
  1778   00158C  EFC9  F00A         	goto	u866
  1779   001590                     u860:
  1780   001590  0E00               	movlw	0
  1781   001592                     u866:
  1782   001592  6E10               	movwf	DebounceFSMUpdate@estado_pin^0,c
  1783   001594  ECF8  F009         	call	_DebounceFSMUpdate	;wreg free
  1784   001598  6E4A               	movwf	??_main^0,c
  1785   00159A  6A4B               	clrf	(??_main+1)^0,c
  1786                           
  1787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1788                           ; Switch size 1, requested type "simple"
  1789                           ; Number of cases is 1, Range of values is 0 to 0
  1790                           ; switch strategies available:
  1791                           ; Name         Instructions Cycles
  1792                           ; simple_byte            4     3 (average)
  1793                           ;	Chosen strategy is simple_byte
  1794   00159C  504B               	movf	(??_main+1)^0,w,c
  1795   00159E  0A00               	xorlw	0	; case 0
  1796   0015A0  B4D8               	btfsc	status,2,c
  1797   0015A2  EFD5  F00A         	goto	l2305
  1798   0015A6  EFDC  F00A         	goto	l2239
  1799   0015AA                     l2305:
  1800                           
  1801                           ; Switch size 1, requested type "simple"
  1802                           ; Number of cases is 1, Range of values is 1 to 1
  1803                           ; switch strategies available:
  1804                           ; Name         Instructions Cycles
  1805                           ; simple_byte            4     3 (average)
  1806                           ;	Chosen strategy is simple_byte
  1807   0015AA  504A               	movf	??_main^0,w,c
  1808   0015AC  0A01               	xorlw	1	; case 1
  1809   0015AE  B4D8               	btfsc	status,2,c
  1810   0015B0  EFBA  F00A         	goto	l2233
  1811   0015B4  EFDC  F00A         	goto	l2239
  1812   0015B8                     l2239:
  1813                           
  1814                           ;main.c: 58:         if(MRF24IsNewMsg() == MSG_PRESENTE) {
  1815   0015B8  ECEE  F00C         	call	_MRF24IsNewMsg	;wreg free
  1816   0015BC  0A02               	xorlw	2
  1817   0015BE  A4D8               	btfss	status,2,c
  1818   0015C0  EFE4  F00A         	goto	u871
  1819   0015C4  EFE6  F00A         	goto	u870
  1820   0015C8                     u871:
  1821   0015C8  EFEA  F00A         	goto	l2245
  1822   0015CC                     u870:
  1823   0015CC  EC5C  F00E         	call	_MRF24GetDataIn	;wreg free
  1824   0015D0                     
  1825                           ;main.c: 61:             MRF24ReciboPaquete();
  1826   0015D0  EC09  F00B         	call	_MRF24ReciboPaquete	;wreg free
  1827   0015D4                     l2245:
  1828                           
  1829                           ;main.c: 86:         if(DelayRead(&delay_parpadeo)) {
  1830   0015D4  0E98               	movlw	low main@delay_parpadeo
  1831   0015D6  6E02               	movwf	DelayRead@delay^0,c
  1832   0015D8  EC79  F00B         	call	_DelayRead	;wreg free
  1833   0015DC  0900               	iorlw	0
  1834   0015DE  B4D8               	btfsc	status,2,c
  1835   0015E0  EFF4  F00A         	goto	u881
  1836   0015E4  EFF6  F00A         	goto	u880
  1837   0015E8                     u881:
  1838   0015E8  EFB7  F00A         	goto	l280
  1839   0015EC                     u880:
  1840   0015EC                     
  1841                           ;main.c: 87:             LATEbits.LATE0 = !LATEbits.LATE0;
  1842   0015EC  A08D               	btfss	141,0,c	;volatile
  1843   0015EE  EFFB  F00A         	goto	u891
  1844   0015F2  EFFF  F00A         	goto	u890
  1845   0015F6                     u891:
  1846   0015F6  6A4A               	clrf	??_main^0,c
  1847   0015F8  2A4A               	incf	??_main^0,f,c
  1848   0015FA  EF00  F00B         	goto	u908
  1849   0015FE                     u890:
  1850   0015FE  6A4A               	clrf	??_main^0,c
  1851   001600                     u908:
  1852   001600  508D               	movf	141,w,c	;volatile
  1853   001602  184A               	xorwf	??_main^0,w,c
  1854   001604  0BFE               	andlw	-2
  1855   001606  184A               	xorwf	??_main^0,w,c
  1856   001608  6E8D               	movwf	141,c	;volatile
  1857   00160A  EFB7  F00A         	goto	l280
  1858   00160E  EF20  F000         	goto	start
  1859   001612                     __end_of_main:
  1860                           	callstack 0
  1861                           
  1862 ;; *************** function _envio *****************
  1863 ;; Defined at:
  1864 ;;		line 92 in file "main.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  data_out_s     56   17[COMRAM] struct .
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1879 ;;      Locals:        56       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1881 ;;      Totals:        56       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1882 ;;Total ram usage:       56 bytes
  1883 ;; Hardware stack levels used: 1
  1884 ;; Hardware stack levels required when called: 6
  1885 ;; This function calls:
  1886 ;;		_MRF24TransmitirDato
  1887 ;;		_strcpy
  1888 ;; This function is called by:
  1889 ;;		_main
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text1
  1894   001AA4                     __ptext1:
  1895                           	callstack 0
  1896   001AA4                     _envio:
  1897                           	callstack 24
  1898   001AA4                     
  1899                           ;main.c: 94:     mrf24_data_out_t data_out_s;;main.c: 95:  data_out_s.dest_address = (0x
      +                          1111);
  1900   001AA4  0E11               	movlw	17
  1901   001AA6  6E15               	movwf	(envio@data_out_s+3)^0,c
  1902   001AA8  0E11               	movlw	17
  1903   001AAA  6E14               	movwf	(envio@data_out_s+2)^0,c
  1904                           
  1905                           ;main.c: 96:  data_out_s.dest_panid = 0x1234;
  1906   001AAC  0E12               	movlw	18
  1907   001AAE  6E13               	movwf	(envio@data_out_s+1)^0,c
  1908   001AB0  0E34               	movlw	52
  1909   001AB2  6E12               	movwf	envio@data_out_s^0,c
  1910                           
  1911                           ;main.c: 97:  data_out_s.origin_address = 0x4567;
  1912   001AB4  0E45               	movlw	69
  1913   001AB6  6E17               	movwf	(envio@data_out_s+5)^0,c
  1914   001AB8  0E67               	movlw	103
  1915   001ABA  6E16               	movwf	(envio@data_out_s+4)^0,c
  1916   001ABC                     
  1917                           ;main.c: 100:     strcpy(data_out_s.buffer, "CMD:PLV");
  1918   001ABC  0E18               	movlw	low (envio@data_out_s+6)
  1919   001ABE  6E01               	movwf	strcpy@dest^0,c
  1920   001AC0  0E19               	movlw	low STR_1
  1921   001AC2  6E02               	movwf	strcpy@src^0,c
  1922   001AC4  EC21  F00D         	call	_strcpy	;wreg free
  1923   001AC8                     
  1924                           ;main.c: 101:     MRF24TransmitirDato(&data_out_s);
  1925   001AC8  0E12               	movlw	low envio@data_out_s
  1926   001ACA  6E0B               	movwf	MRF24TransmitirDato@p_info_out_s^0,c
  1927   001ACC  EC11  F008         	call	_MRF24TransmitirDato	;wreg free
  1928   001AD0  0012               	return		;funcret
  1929   001AD2                     __end_of_envio:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _strcpy *****************
  1933 ;; Defined at:
  1934 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  dest            1    0[COMRAM] PTR unsigned char 
  1937 ;;		 -> envio@data_out_s(56), 
  1938 ;;  src             1    1[COMRAM] PTR const unsigned char 
  1939 ;;		 -> STR_1(8), 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  d               1    3[COMRAM] PTR unsigned char 
  1942 ;;		 -> envio@data_out_s(56), 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    0[COMRAM] PTR unsigned char 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1952 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1953 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1954 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1955 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1956 ;;Total ram usage:        4 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 1
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_envio
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text2
  1967   001A42                     __ptext2:
  1968                           	callstack 0
  1969   001A42                     _strcpy:
  1970                           	callstack 28
  1971   001A42  C001  F004         	movff	strcpy@dest,strcpy@d
  1972   001A46                     l2057:
  1973   001A46  2A02               	incf	strcpy@src^0,f,c
  1974   001A48  0402               	decf	strcpy@src^0,w,c
  1975   001A4A  6E03               	movwf	??_strcpy^0,c
  1976   001A4C  C003  FFF6         	movff	??_strcpy,tblptrl
  1977   001A50                     	if	1	;There is more than 1 active tblptr byte
  1978   001A50  0E10               	movlw	high __smallconst
  1979   001A52  6EF7               	movwf	tblptrh,c
  1980   001A54                     	endif
  1981   001A54                     	if	0	;tblptru may be non-zero
  1982   001A54                     	endif
  1983   001A54                     	if	0	;tblptru may be non-zero
  1984   001A54                     	endif
  1985   001A54  2A04               	incf	strcpy@d^0,f,c
  1986   001A56  0404               	decf	strcpy@d^0,w,c
  1987   001A58  6ED9               	movwf	fsr2l,c
  1988   001A5A  6ADA               	clrf	fsr2h,c
  1989   001A5C  0008               	tblrd		*
  1990   001A5E  CFF5 FFDF          	movff	tablat,indf2
  1991   001A62  50DF               	movf	indf2,w,c
  1992   001A64  A4D8               	btfss	status,2,c
  1993   001A66  EF37  F00D         	goto	u741
  1994   001A6A  EF39  F00D         	goto	u740
  1995   001A6E                     u741:
  1996   001A6E  EF23  F00D         	goto	l2057
  1997   001A72                     u740:
  1998   001A72  0012               	return		;funcret
  1999   001A74                     __end_of_strcpy:
  2000                           	callstack 0
  2001                           
  2002 ;; *************** function _MRF24TransmitirDato *****************
  2003 ;; Defined at:
  2004 ;;		line 315 in file "drivers/scr/API_MRF24J40.c"
  2005 ;; Parameters:    Size  Location     Type
  2006 ;;  p_info_out_s    1   10[COMRAM] PTR struct .
  2007 ;;		 -> envio@data_out_s(56), 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  i               1   13[COMRAM] char 
  2010 ;;  largo_mensaj    2   14[COMRAM] unsigned int 
  2011 ;;  pos_mem         1   16[COMRAM] unsigned char 
  2012 ;; Return value:  Size  Location     Type
  2013 ;;                  1    wreg      enum E3263
  2014 ;; Registers used:
  2015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2016 ;; Tracked objects:
  2017 ;;		On entry : 0/0
  2018 ;;		On exit  : 0/0
  2019 ;;		Unchanged: 0/0
  2020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2021 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2022 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;Total ram usage:        7 bytes
  2026 ;; Hardware stack levels used: 1
  2027 ;; Hardware stack levels required when called: 5
  2028 ;; This function calls:
  2029 ;;		_SetLongAddr
  2030 ;;		_SetShortAddr
  2031 ;;		_strlen
  2032 ;; This function is called by:
  2033 ;;		_envio
  2034 ;; This function uses a non-reentrant model
  2035 ;;
  2036                           
  2037                           	psect	text3
  2038   001022                     __ptext3:
  2039                           	callstack 0
  2040   001022                     _MRF24TransmitirDato:
  2041                           	callstack 24
  2042   001022                     
  2043                           ;drivers/scr/API_MRF24J40.c: 317:  if(estadoActual != INICIALIZACION_OK)
  2044   001022  5050               	movf	_estadoActual^0,w,c
  2045   001024  B4D8               	btfsc	status,2,c
  2046   001026  EF17  F008         	goto	u681
  2047   00102A  EF19  F008         	goto	u680
  2048   00102E                     u681:
  2049   00102E  EF1B  F008         	goto	l1961
  2050   001032                     u680:
  2051   001032  EF24  F009         	goto	l144
  2052   001036                     l1961:
  2053                           
  2054                           ;drivers/scr/API_MRF24J40.c: 320:  if(p_info_out_s->dest_address == (0X00))
  2055   001036  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2056   001038  6ED9               	movwf	fsr2l,c
  2057   00103A  6ADA               	clrf	fsr2h,c
  2058   00103C  0E02               	movlw	2
  2059   00103E  26D9               	addwf	fsr2l,f,c
  2060   001040  50DE               	movf	postinc2,w,c
  2061   001042  10DE               	iorwf	postinc2,w,c
  2062   001044  A4D8               	btfss	status,2,c
  2063   001046  EF27  F008         	goto	u691
  2064   00104A  EF29  F008         	goto	u690
  2065   00104E                     u691:
  2066   00104E  EF2B  F008         	goto	l145
  2067   001052                     u690:
  2068   001052  EF24  F009         	goto	l144
  2069   001056                     l145:
  2070                           
  2071                           ;drivers/scr/API_MRF24J40.c: 322:  uint8_t pos_mem = 0;
  2072   001056  6A11               	clrf	MRF24TransmitirDato@pos_mem^0,c
  2073   001058                     
  2074                           ;drivers/scr/API_MRF24J40.c: 323:  unsigned largo_mensaje = strlen(p_info_out_s->buffer)
      +                          ;
  2075   001058  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2076   00105A  0F06               	addlw	6
  2077   00105C  6E01               	movwf	strlen@s^0,c
  2078   00105E  EC69  F00D         	call	_strlen	;wreg free
  2079   001062  C001  F00F         	movff	?_strlen,MRF24TransmitirDato@largo_mensaje
  2080   001066  C002  F010         	movff	?_strlen+1,MRF24TransmitirDato@largo_mensaje+1
  2081   00106A                     
  2082                           ;drivers/scr/API_MRF24J40.c: 325:  if(largo_mensaje == 0)
  2083   00106A  500F               	movf	MRF24TransmitirDato@largo_mensaje^0,w,c
  2084   00106C  1010               	iorwf	(MRF24TransmitirDato@largo_mensaje+1)^0,w,c
  2085   00106E  A4D8               	btfss	status,2,c
  2086   001070  EF3C  F008         	goto	u701
  2087   001074  EF3E  F008         	goto	u700
  2088   001078                     u701:
  2089   001078  EF40  F008         	goto	l1971
  2090   00107C                     u700:
  2091   00107C  EF24  F009         	goto	l144
  2092   001080                     l1971:
  2093                           
  2094                           ;drivers/scr/API_MRF24J40.c: 327:  SetLongAddr(pos_mem++, (0X0B));
  2095   001080  0E00               	movlw	0
  2096   001082  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2097   001084  0E00               	movlw	0
  2098   001086  6E06               	movwf	SetLongAddr@reg_address^0,c
  2099   001088  0E0B               	movlw	11
  2100   00108A  6E08               	movwf	SetLongAddr@valor^0,c
  2101   00108C  EC94  F00C         	call	_SetLongAddr	;wreg free
  2102   001090  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2103   001092                     
  2104                           ;drivers/scr/API_MRF24J40.c: 328:  SetLongAddr(pos_mem++, (uint8_t)largo_mensaje + (0X0B
      +                          ));
  2105   001092  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2106   001096  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2107   001098  500F               	movf	MRF24TransmitirDato@largo_mensaje^0,w,c
  2108   00109A  0F0B               	addlw	11
  2109   00109C  6E08               	movwf	SetLongAddr@valor^0,c
  2110   00109E  EC94  F00C         	call	_SetLongAddr	;wreg free
  2111   0010A2  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2112   0010A4                     
  2113                           ;drivers/scr/API_MRF24J40.c: 329:  SetLongAddr(pos_mem++, (0X01) | (0X20) | (0X40));
  2114   0010A4  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2115   0010A8  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2116   0010AA  0E61               	movlw	97
  2117   0010AC  6E08               	movwf	SetLongAddr@valor^0,c
  2118   0010AE  EC94  F00C         	call	_SetLongAddr	;wreg free
  2119   0010B2  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2120                           
  2121                           ;drivers/scr/API_MRF24J40.c: 330:  SetLongAddr(pos_mem++, (0X80) | (0X08));
  2122   0010B4  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2123   0010B8  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2124   0010BA  0E88               	movlw	136
  2125   0010BC  6E08               	movwf	SetLongAddr@valor^0,c
  2126   0010BE  EC94  F00C         	call	_SetLongAddr	;wreg free
  2127   0010C2  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2128   0010C4                     
  2129                           ;drivers/scr/API_MRF24J40.c: 331:  SetLongAddr(pos_mem++, data_config_s.sequence_number+
      +                          +);
  2130   0010C4  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2131   0010C8  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2132   0010CA  C0AC  F008         	movff	_data_config_s,SetLongAddr@valor
  2133   0010CE  EC94  F00C         	call	_SetLongAddr	;wreg free
  2134   0010D2  0100               	movlb	0	; () banked
  2135   0010D4  2BAC               	incf	_data_config_s& (0+255),f,b
  2136   0010D6  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2137   0010D8                     
  2138                           ; BSR set to: 0
  2139                           ;drivers/scr/API_MRF24J40.c: 333:  if(p_info_out_s->dest_panid == (0X00))
  2140   0010D8  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2141   0010DA  6ED9               	movwf	fsr2l,c
  2142   0010DC  6ADA               	clrf	fsr2h,c
  2143   0010DE  50DE               	movf	postinc2,w,c
  2144   0010E0  10DE               	iorwf	postinc2,w,c
  2145   0010E2  A4D8               	btfss	status,2,c
  2146   0010E4  EF76  F008         	goto	u711
  2147   0010E8  EF78  F008         	goto	u710
  2148   0010EC                     u711:
  2149   0010EC  EF7F  F008         	goto	l1989
  2150   0010F0                     u710:
  2151   0010F0                     
  2152                           ; BSR set to: 0
  2153                           ;drivers/scr/API_MRF24J40.c: 334:   p_info_out_s->dest_panid = data_config_s.my_panid;
  2154   0010F0  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2155   0010F2  6ED9               	movwf	fsr2l,c
  2156   0010F4  6ADA               	clrf	fsr2h,c
  2157   0010F6  C0C6  FFDE         	movff	_data_config_s+26,postinc2
  2158   0010FA  C0C7  FFDD         	movff	_data_config_s+27,postdec2
  2159   0010FE                     l1989:
  2160                           
  2161                           ; BSR set to: 0
  2162                           ;drivers/scr/API_MRF24J40.c: 335:  SetLongAddr(pos_mem++, (uint8_t) p_info_out_s->dest_p
      +                          anid);
  2163   0010FE  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2164   001102  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2165   001104  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2166   001106  6ED9               	movwf	fsr2l,c
  2167   001108  6ADA               	clrf	fsr2h,c
  2168   00110A  50DF               	movf	indf2,w,c
  2169   00110C  6E08               	movwf	SetLongAddr@valor^0,c
  2170   00110E  EC94  F00C         	call	_SetLongAddr	;wreg free
  2171   001112  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2172   001114                     
  2173                           ;drivers/scr/API_MRF24J40.c: 336:  SetLongAddr(pos_mem++, (uint8_t) (p_info_out_s->dest_
      +                          panid >> (0X08)));
  2174   001114  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2175   001118  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2176   00111A  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2177   00111C  6ED9               	movwf	fsr2l,c
  2178   00111E  6ADA               	clrf	fsr2h,c
  2179   001120  CFDE F00C          	movff	postinc2,??_MRF24TransmitirDato
  2180   001124  CFDD F00D          	movff	postdec2,??_MRF24TransmitirDato+1
  2181   001128  C00D  F00C         	movff	??_MRF24TransmitirDato+1,??_MRF24TransmitirDato
  2182   00112C  6A0D               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2183   00112E  500C               	movf	??_MRF24TransmitirDato^0,w,c
  2184   001130  6E08               	movwf	SetLongAddr@valor^0,c
  2185   001132  EC94  F00C         	call	_SetLongAddr	;wreg free
  2186   001136  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2187   001138                     
  2188                           ;drivers/scr/API_MRF24J40.c: 337:  SetLongAddr(pos_mem++, (uint8_t) p_info_out_s->dest_a
      +                          ddress);
  2189   001138  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2190   00113C  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2191   00113E  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2192   001140  6ED9               	movwf	fsr2l,c
  2193   001142  6ADA               	clrf	fsr2h,c
  2194   001144  0E02               	movlw	2
  2195   001146  26D9               	addwf	fsr2l,f,c
  2196   001148  50DF               	movf	indf2,w,c
  2197   00114A  6E08               	movwf	SetLongAddr@valor^0,c
  2198   00114C  EC94  F00C         	call	_SetLongAddr	;wreg free
  2199   001150  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2200   001152                     
  2201                           ;drivers/scr/API_MRF24J40.c: 338:  SetLongAddr(pos_mem++, (uint8_t) (p_info_out_s->dest_
      +                          address >> (0X08)));
  2202   001152  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2203   001156  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2204   001158  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2205   00115A  6ED9               	movwf	fsr2l,c
  2206   00115C  6ADA               	clrf	fsr2h,c
  2207   00115E  0E02               	movlw	2
  2208   001160  26D9               	addwf	fsr2l,f,c
  2209   001162  CFDE F00C          	movff	postinc2,??_MRF24TransmitirDato
  2210   001166  CFDD F00D          	movff	postdec2,??_MRF24TransmitirDato+1
  2211   00116A  C00D  F00C         	movff	??_MRF24TransmitirDato+1,??_MRF24TransmitirDato
  2212   00116E  6A0D               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2213   001170  500C               	movf	??_MRF24TransmitirDato^0,w,c
  2214   001172  6E08               	movwf	SetLongAddr@valor^0,c
  2215   001174  EC94  F00C         	call	_SetLongAddr	;wreg free
  2216   001178  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2217   00117A                     
  2218                           ;drivers/scr/API_MRF24J40.c: 340:  if(p_info_out_s->origin_address == (0X00))
  2219   00117A  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2220   00117C  6ED9               	movwf	fsr2l,c
  2221   00117E  6ADA               	clrf	fsr2h,c
  2222   001180  0E04               	movlw	4
  2223   001182  26D9               	addwf	fsr2l,f,c
  2224   001184  50DE               	movf	postinc2,w,c
  2225   001186  10DE               	iorwf	postinc2,w,c
  2226   001188  A4D8               	btfss	status,2,c
  2227   00118A  EFC9  F008         	goto	u721
  2228   00118E  EFCB  F008         	goto	u720
  2229   001192                     u721:
  2230   001192  EFD4  F008         	goto	l2009
  2231   001196                     u720:
  2232   001196                     
  2233                           ;drivers/scr/API_MRF24J40.c: 341:   p_info_out_s->origin_address = data_config_s.my_addr
      +                          ess;
  2234   001196  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2235   001198  6ED9               	movwf	fsr2l,c
  2236   00119A  6ADA               	clrf	fsr2h,c
  2237   00119C  0E04               	movlw	4
  2238   00119E  26D9               	addwf	fsr2l,f,c
  2239   0011A0  C0C8  FFDE         	movff	_data_config_s+28,postinc2
  2240   0011A4  C0C9  FFDD         	movff	_data_config_s+29,postdec2
  2241   0011A8                     l2009:
  2242                           
  2243                           ;drivers/scr/API_MRF24J40.c: 342:  SetLongAddr(pos_mem++, (uint8_t) p_info_out_s->origin
      +                          _address);
  2244   0011A8  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2245   0011AC  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2246   0011AE  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2247   0011B0  6ED9               	movwf	fsr2l,c
  2248   0011B2  6ADA               	clrf	fsr2h,c
  2249   0011B4  0E04               	movlw	4
  2250   0011B6  26D9               	addwf	fsr2l,f,c
  2251   0011B8  50DF               	movf	indf2,w,c
  2252   0011BA  6E08               	movwf	SetLongAddr@valor^0,c
  2253   0011BC  EC94  F00C         	call	_SetLongAddr	;wreg free
  2254   0011C0  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2255   0011C2                     
  2256                           ;drivers/scr/API_MRF24J40.c: 343:  SetLongAddr(pos_mem++, (uint8_t) (p_info_out_s->origi
      +                          n_address >> (0X08)));
  2257   0011C2  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2258   0011C6  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2259   0011C8  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2260   0011CA  6ED9               	movwf	fsr2l,c
  2261   0011CC  6ADA               	clrf	fsr2h,c
  2262   0011CE  0E04               	movlw	4
  2263   0011D0  26D9               	addwf	fsr2l,f,c
  2264   0011D2  CFDE F00C          	movff	postinc2,??_MRF24TransmitirDato
  2265   0011D6  CFDD F00D          	movff	postdec2,??_MRF24TransmitirDato+1
  2266   0011DA  C00D  F00C         	movff	??_MRF24TransmitirDato+1,??_MRF24TransmitirDato
  2267   0011DE  6A0D               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2268   0011E0  500C               	movf	??_MRF24TransmitirDato^0,w,c
  2269   0011E2  6E08               	movwf	SetLongAddr@valor^0,c
  2270   0011E4  EC94  F00C         	call	_SetLongAddr	;wreg free
  2271   0011E8  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2272   0011EA                     
  2273                           ;drivers/scr/API_MRF24J40.c: 345:  for(int8_t i = 0; i < largo_mensaje; i++) {
  2274   0011EA  6A0E               	clrf	MRF24TransmitirDato@i^0,c
  2275   0011EC  EF07  F009         	goto	l2025
  2276   0011F0                     l2019:
  2277                           
  2278                           ;drivers/scr/API_MRF24J40.c: 347:   SetLongAddr(pos_mem++, p_info_out_s->buffer[i]);
  2279   0011F0  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2280   0011F4  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2281   0011F6  500B               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2282   0011F8  240E               	addwf	MRF24TransmitirDato@i^0,w,c
  2283   0011FA  6ED9               	movwf	fsr2l,c
  2284   0011FC  6ADA               	clrf	fsr2h,c
  2285   0011FE  0E06               	movlw	6
  2286   001200  26D9               	addwf	fsr2l,f,c
  2287   001202  50DF               	movf	indf2,w,c
  2288   001204  6E08               	movwf	SetLongAddr@valor^0,c
  2289   001206  EC94  F00C         	call	_SetLongAddr	;wreg free
  2290   00120A  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2291   00120C                     
  2292                           ;drivers/scr/API_MRF24J40.c: 348:  }
  2293   00120C  2A0E               	incf	MRF24TransmitirDato@i^0,f,c
  2294   00120E                     l2025:
  2295   00120E  C00E  F00C         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato
  2296   001212  6A0D               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2297   001214  BE0C               	btfsc	??_MRF24TransmitirDato^0,7,c
  2298   001216  060D               	decf	(??_MRF24TransmitirDato+1)^0,f,c
  2299   001218  500F               	movf	MRF24TransmitirDato@largo_mensaje^0,w,c
  2300   00121A  5C0C               	subwf	??_MRF24TransmitirDato^0,w,c
  2301   00121C  5010               	movf	(MRF24TransmitirDato@largo_mensaje+1)^0,w,c
  2302   00121E  580D               	subwfb	(??_MRF24TransmitirDato+1)^0,w,c
  2303   001220  A0D8               	btfss	status,0,c
  2304   001222  EF15  F009         	goto	u731
  2305   001226  EF17  F009         	goto	u730
  2306   00122A                     u731:
  2307   00122A  EFF8  F008         	goto	l2019
  2308   00122E                     u730:
  2309   00122E                     
  2310                           ;drivers/scr/API_MRF24J40.c: 349:  SetLongAddr(pos_mem++, (0X00));
  2311   00122E  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2312   001232  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2313   001234  0E00               	movlw	0
  2314   001236  6E08               	movwf	SetLongAddr@valor^0,c
  2315   001238  EC94  F00C         	call	_SetLongAddr	;wreg free
  2316   00123C  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2317   00123E                     
  2318                           ;drivers/scr/API_MRF24J40.c: 350:  SetShortAddr((0x1B), (0X04) | (0X01));
  2319   00123E  0E05               	movlw	5
  2320   001240  6E03               	movwf	SetShortAddr@valor^0,c
  2321   001242  0E1B               	movlw	27
  2322   001244  ECE6  F00D         	call	_SetShortAddr
  2323   001248                     l144:
  2324   001248  0012               	return		;funcret
  2325   00124A                     __end_of_MRF24TransmitirDato:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _strlen *****************
  2329 ;; Defined at:
  2330 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2333 ;;		 -> data_out_s$buffer(50), envio@data_out_s(56), 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2336 ;;		 -> data_out_s$buffer(50), envio@data_out_s(56), 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  2    0[COMRAM] unsigned int 
  2339 ;; Registers used:
  2340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;Total ram usage:        3 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; Hardware stack levels required when called: 1
  2353 ;; This function calls:
  2354 ;;		Nothing
  2355 ;; This function is called by:
  2356 ;;		_MRF24TransmitirDato
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text4
  2361   001AD2                     __ptext4:
  2362                           	callstack 0
  2363   001AD2                     _strlen:
  2364                           	callstack 27
  2365   001AD2  C001  F003         	movff	strlen@s,strlen@a
  2366   001AD6  EF6E  F00D         	goto	l1863
  2367   001ADA                     l1861:
  2368   001ADA  2A01               	incf	strlen@s^0,f,c
  2369   001ADC                     l1863:
  2370   001ADC  5001               	movf	strlen@s^0,w,c
  2371   001ADE  6ED9               	movwf	fsr2l,c
  2372   001AE0  6ADA               	clrf	fsr2h,c
  2373   001AE2  50DF               	movf	indf2,w,c
  2374   001AE4  A4D8               	btfss	status,2,c
  2375   001AE6  EF77  F00D         	goto	u601
  2376   001AEA  EF79  F00D         	goto	u600
  2377   001AEE                     u601:
  2378   001AEE  EF6D  F00D         	goto	l1861
  2379   001AF2                     u600:
  2380   001AF2  5003               	movf	strlen@a^0,w,c
  2381   001AF4  5C01               	subwf	strlen@s^0,w,c
  2382   001AF6  6E01               	movwf	?_strlen^0,c
  2383   001AF8  6A02               	clrf	(?_strlen+1)^0,c
  2384   001AFA  BE01               	btfsc	?_strlen^0,7,c
  2385   001AFC  0602               	decf	(?_strlen+1)^0,f,c
  2386   001AFE  0012               	return		;funcret
  2387   001B00                     __end_of_strlen:
  2388                           	callstack 0
  2389                           
  2390 ;; *************** function _MRF24ReciboPaquete *****************
  2391 ;; Defined at:
  2392 ;;		line 376 in file "drivers/scr/API_MRF24J40.c"
  2393 ;; Parameters:    Size  Location     Type
  2394 ;;		None
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  i               1   18[COMRAM] unsigned char 
  2397 ;;  add             2   16[COMRAM] unsigned short 
  2398 ;;  largo_mensaj    1   15[COMRAM] unsigned char 
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      enum E3263
  2401 ;; Registers used:
  2402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2409 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2410 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2411 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2412 ;;Total ram usage:        9 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 5
  2415 ;; This function calls:
  2416 ;;		_GetLongAddr
  2417 ;;		_GetShortAddr
  2418 ;;		_SetLongAddr
  2419 ;;		_SetShortAddr
  2420 ;; This function is called by:
  2421 ;;		_main
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           	psect	text5
  2426   001612                     __ptext5:
  2427                           	callstack 0
  2428   001612                     _MRF24ReciboPaquete:
  2429                           	callstack 25
  2430   001612                     
  2431                           ;drivers/scr/API_MRF24J40.c: 389:  if(estadoActual != INICIALIZACION_OK)
  2432   001612  5050               	movf	_estadoActual^0,w,c
  2433   001614  B4D8               	btfsc	status,2,c
  2434   001616  EF0F  F00B         	goto	u771
  2435   00161A  EF11  F00B         	goto	u770
  2436   00161E                     u771:
  2437   00161E  EF13  F00B         	goto	l2093
  2438   001622                     u770:
  2439   001622  EF78  F00B         	goto	l160
  2440   001626                     l2093:
  2441                           
  2442                           ;drivers/scr/API_MRF24J40.c: 391:  SetLongAddr((0x39), (0X04));
  2443   001626  0E00               	movlw	0
  2444   001628  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2445   00162A  0E39               	movlw	57
  2446   00162C  6E06               	movwf	SetLongAddr@reg_address^0,c
  2447   00162E  0E04               	movlw	4
  2448   001630  6E08               	movwf	SetLongAddr@valor^0,c
  2449   001632  EC94  F00C         	call	_SetLongAddr	;wreg free
  2450                           
  2451                           ;drivers/scr/API_MRF24J40.c: 392:  SetShortAddr((0x0D), (0X04));
  2452   001636  0E04               	movlw	4
  2453   001638  6E03               	movwf	SetShortAddr@valor^0,c
  2454   00163A  0E0D               	movlw	13
  2455   00163C  ECE6  F00D         	call	_SetShortAddr
  2456                           
  2457                           ;drivers/scr/API_MRF24J40.c: 393:  uint8_t largo_mensaje = GetLongAddr((0x300));
  2458   001640  0E03               	movlw	3
  2459   001642  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2460   001644  0E00               	movlw	0
  2461   001646  6E06               	movwf	GetLongAddr@reg_address^0,c
  2462   001648  EC72  F00C         	call	_GetLongAddr	;wreg free
  2463   00164C  6E10               	movwf	MRF24ReciboPaquete@largo_mensaje^0,c
  2464                           
  2465                           ;drivers/scr/API_MRF24J40.c: 394:  uint16_t add = GetLongAddr((0x300) + 9);
  2466   00164E  0E03               	movlw	3
  2467   001650  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2468   001652  0E09               	movlw	9
  2469   001654  6E06               	movwf	GetLongAddr@reg_address^0,c
  2470   001656  EC72  F00C         	call	_GetLongAddr	;wreg free
  2471   00165A  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  2472   00165C  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  2473   00165E  6E11               	movwf	MRF24ReciboPaquete@add^0,c
  2474   001660  6A12               	clrf	(MRF24ReciboPaquete@add+1)^0,c
  2475                           
  2476                           ;drivers/scr/API_MRF24J40.c: 395:  add = (add << (0X08)) | GetLongAddr((0x300) + 8);
  2477   001662  0E03               	movlw	3
  2478   001664  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2479   001666  0E08               	movlw	8
  2480   001668  6E06               	movwf	GetLongAddr@reg_address^0,c
  2481   00166A  EC72  F00C         	call	_GetLongAddr	;wreg free
  2482   00166E  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  2483   001670  5011               	movf	MRF24ReciboPaquete@add^0,w,c
  2484   001672  6E0C               	movwf	(??_MRF24ReciboPaquete+1)^0,c
  2485   001674  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  2486   001676  6E11               	movwf	MRF24ReciboPaquete@add^0,c
  2487   001678  C00C  F012         	movff	??_MRF24ReciboPaquete+1,MRF24ReciboPaquete@add+1
  2488   00167C                     
  2489                           ;drivers/scr/API_MRF24J40.c: 396:  data_in_s.source_address = add;
  2490   00167C  C011  F13A         	movff	MRF24ReciboPaquete@add,_data_in_s+2
  2491   001680  C012  F13B         	movff	MRF24ReciboPaquete@add+1,_data_in_s+3
  2492   001684                     
  2493                           ;drivers/scr/API_MRF24J40.c: 398:  for(uint8_t i = 0; i < largo_mensaje - (0x04); i++) {
  2494   001684  6A13               	clrf	MRF24ReciboPaquete@i^0,c
  2495   001686  EF55  F00B         	goto	l2103
  2496   00168A                     l2099:
  2497                           
  2498                           ;drivers/scr/API_MRF24J40.c: 400:   data_in_s.buffer[i] = GetLongAddr((0x300) + (0X0B) +
      +                           i - 1);
  2499   00168A  0E3E               	movlw	low (_data_in_s+6)
  2500   00168C  2413               	addwf	MRF24ReciboPaquete@i^0,w,c
  2501   00168E  6ED9               	movwf	fsr2l,c
  2502   001690  6ADA               	clrf	fsr2h,c
  2503   001692  0E01               	movlw	high (_data_in_s+6)
  2504   001694  22DA               	addwfc	fsr2h,f,c
  2505   001696  0E0A               	movlw	10
  2506   001698  2413               	addwf	MRF24ReciboPaquete@i^0,w,c
  2507   00169A  6E06               	movwf	GetLongAddr@reg_address^0,c
  2508   00169C  6A07               	clrf	(GetLongAddr@reg_address+1)^0,c
  2509   00169E  0E03               	movlw	3
  2510   0016A0  2207               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  2511   0016A2  EC72  F00C         	call	_GetLongAddr	;wreg free
  2512   0016A6  6EDF               	movwf	indf2,c
  2513   0016A8                     
  2514                           ;drivers/scr/API_MRF24J40.c: 401:  }
  2515   0016A8  2A13               	incf	MRF24ReciboPaquete@i^0,f,c
  2516   0016AA                     l2103:
  2517   0016AA  0EFC               	movlw	252
  2518   0016AC  2410               	addwf	MRF24ReciboPaquete@largo_mensaje^0,w,c
  2519   0016AE  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  2520   0016B0  6A0C               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  2521   0016B2  0EFF               	movlw	255
  2522   0016B4  220C               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  2523   0016B6  5013               	movf	MRF24ReciboPaquete@i^0,w,c
  2524   0016B8  6E0D               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  2525   0016BA  6A0E               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  2526   0016BC  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  2527   0016BE  5C0D               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  2528   0016C0  500E               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  2529   0016C2  0A80               	xorlw	128
  2530   0016C4  6E0F               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  2531   0016C6  500C               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  2532   0016C8  0A80               	xorlw	128
  2533   0016CA  580F               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  2534   0016CC  A0D8               	btfss	status,0,c
  2535   0016CE  EF6B  F00B         	goto	u781
  2536   0016D2  EF6D  F00B         	goto	u780
  2537   0016D6                     u781:
  2538   0016D6  EF45  F00B         	goto	l2099
  2539   0016DA                     u780:
  2540   0016DA                     
  2541                           ;drivers/scr/API_MRF24J40.c: 402:  SetLongAddr((0x39), (0X00));
  2542   0016DA  0E00               	movlw	0
  2543   0016DC  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2544   0016DE  0E39               	movlw	57
  2545   0016E0  6E06               	movwf	SetLongAddr@reg_address^0,c
  2546   0016E2  0E00               	movlw	0
  2547   0016E4  6E08               	movwf	SetLongAddr@valor^0,c
  2548   0016E6  EC94  F00C         	call	_SetLongAddr	;wreg free
  2549                           
  2550                           ;drivers/scr/API_MRF24J40.c: 403:  (void)GetShortAddr((0x31));
  2551   0016EA  0E31               	movlw	49
  2552   0016EC  ECC0  F00D         	call	_GetShortAddr
  2553   0016F0                     l160:
  2554   0016F0  0012               	return		;funcret
  2555   0016F2                     __end_of_MRF24ReciboPaquete:
  2556                           	callstack 0
  2557                           
  2558 ;; *************** function _MRF24J40Init *****************
  2559 ;; Defined at:
  2560 ;;		line 287 in file "drivers/scr/API_MRF24J40.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;		None
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      enum E3263
  2567 ;; Registers used:
  2568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;Total ram usage:        1 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 7
  2581 ;; This function calls:
  2582 ;;		_InicializoMRF24
  2583 ;;		_InicializoPines
  2584 ;;		_InicializoVariables
  2585 ;;		_SetResetPin
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           	psect	text6
  2592   00196A                     __ptext6:
  2593                           	callstack 0
  2594   00196A                     _MRF24J40Init:
  2595                           	callstack 23
  2596   00196A                     
  2597                           ;drivers/scr/API_MRF24J40.c: 289:  InicializoVariables();
  2598   00196A  EC0C  F00C         	call	_InicializoVariables	;wreg free
  2599   00196E                     
  2600                           ;drivers/scr/API_MRF24J40.c: 290:  InicializoPines();
  2601   00196E  EC19  F00E         	call	_InicializoPines	;wreg free
  2602   001972                     
  2603                           ;drivers/scr/API_MRF24J40.c: 291:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2604   001972  0E06               	movlw	6
  2605   001974  6E1B               	movwf	??_MRF24J40Init^0,c
  2606   001976  0E30               	movlw	48
  2607   001978                     u937:
  2608   001978  2EE8               	decfsz	wreg,f,c
  2609   00197A  D7FE               	bra	u937
  2610   00197C  2E1B               	decfsz	??_MRF24J40Init^0,f,c
  2611   00197E  D7FC               	bra	u937
  2612   001980  F000 F000          	nop2	
  2613   001984                     
  2614                           ;drivers/scr/API_MRF24J40.c: 292:  SetResetPin(1);
  2615   001984  0E01               	movlw	1
  2616   001986  EC34  F00E         	call	_SetResetPin
  2617   00198A                     
  2618                           ;drivers/scr/API_MRF24J40.c: 293:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2619   00198A  0E06               	movlw	6
  2620   00198C  6E1B               	movwf	??_MRF24J40Init^0,c
  2621   00198E  0E30               	movlw	48
  2622   001990                     u947:
  2623   001990  2EE8               	decfsz	wreg,f,c
  2624   001992  D7FE               	bra	u947
  2625   001994  2E1B               	decfsz	??_MRF24J40Init^0,f,c
  2626   001996  D7FC               	bra	u947
  2627   001998  F000 F000          	nop2	
  2628   00199C                     
  2629                           ;drivers/scr/API_MRF24J40.c: 294:  estadoActual = InicializoMRF24();
  2630   00199C  EC25  F009         	call	_InicializoMRF24	;wreg free
  2631   0019A0  6E50               	movwf	_estadoActual^0,c
  2632   0019A2  0012               	return		;funcret
  2633   0019A4                     __end_of_MRF24J40Init:
  2634                           	callstack 0
  2635                           
  2636 ;; *************** function _InicializoVariables *****************
  2637 ;; Defined at:
  2638 ;;		line 89 in file "drivers/scr/API_MRF24J40.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;		None
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;		None
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  1    wreg      void 
  2645 ;; Registers used:
  2646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2656 ;;Total ram usage:        0 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 2
  2659 ;; This function calls:
  2660 ;;		_strncpy
  2661 ;; This function is called by:
  2662 ;;		_MRF24J40Init
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text7
  2667   001818                     __ptext7:
  2668                           	callstack 0
  2669   001818                     _InicializoVariables:
  2670                           	callstack 27
  2671   001818                     
  2672                           ;drivers/scr/API_MRF24J40.c: 91:  if(data_config_s.my_address == 0 || data_config_s.my_p
      +                          anid == 0) {
  2673   001818  0100               	movlb	0	; () banked
  2674   00181A  51C8               	movf	(_data_config_s+28)& (0+255),w,b
  2675   00181C  11C9               	iorwf	(_data_config_s+29)& (0+255),w,b
  2676   00181E  B4D8               	btfsc	status,2,c
  2677   001820  EF14  F00C         	goto	u621
  2678   001824  EF16  F00C         	goto	u620
  2679   001828                     u621:
  2680   001828  EF1F  F00C         	goto	l1881
  2681   00182C                     u620:
  2682   00182C                     
  2683                           ; BSR set to: 0
  2684   00182C  51C6               	movf	(_data_config_s+26)& (0+255),w,b
  2685   00182E  11C7               	iorwf	(_data_config_s+27)& (0+255),w,b
  2686   001830  A4D8               	btfss	status,2,c
  2687   001832  EF1D  F00C         	goto	u631
  2688   001836  EF1F  F00C         	goto	u630
  2689   00183A                     u631:
  2690   00183A  EF40  F00C         	goto	l102
  2691   00183E                     u630:
  2692   00183E                     l1881:
  2693                           
  2694                           ; BSR set to: 0
  2695                           ;drivers/scr/API_MRF24J40.c: 93:   strncpy((char *)data_config_s.security_key,
  2696   00183E  0EAE               	movlw	low (_data_config_s+2)
  2697   001840  6E01               	movwf	strncpy@d^0,c
  2698   001842  0E01               	movlw	low _default_security_key
  2699   001844  6E02               	movwf	strncpy@s^0,c
  2700   001846  0E00               	movlw	0
  2701   001848  6E04               	movwf	(strncpy@n+1)^0,c
  2702   00184A  0E10               	movlw	16
  2703   00184C  6E03               	movwf	strncpy@n^0,c
  2704   00184E  ECCF  F00B         	call	_strncpy	;wreg free
  2705                           
  2706                           ;drivers/scr/API_MRF24J40.c: 96:   strncpy((char *)data_config_s.my_mac,
  2707   001852  0EBE               	movlw	low (_data_config_s+18)
  2708   001854  6E01               	movwf	strncpy@d^0,c
  2709   001856  0E11               	movlw	low _default_mac_address
  2710   001858  6E02               	movwf	strncpy@s^0,c
  2711   00185A  0E00               	movlw	0
  2712   00185C  6E04               	movwf	(strncpy@n+1)^0,c
  2713   00185E  0E08               	movlw	8
  2714   001860  6E03               	movwf	strncpy@n^0,c
  2715   001862  ECCF  F00B         	call	_strncpy	;wreg free
  2716   001866                     
  2717                           ;drivers/scr/API_MRF24J40.c: 99:   data_config_s.sequence_number = (0X01);
  2718   001866  0E01               	movlw	1
  2719   001868  0100               	movlb	0	; () banked
  2720   00186A  6FAC               	movwf	_data_config_s& (0+255),b
  2721   00186C                     
  2722                           ; BSR set to: 0
  2723                           ;drivers/scr/API_MRF24J40.c: 100:   data_config_s.my_channel = CH_11;
  2724   00186C  0E03               	movlw	3
  2725   00186E  6FAD               	movwf	(_data_config_s+1)& (0+255),b
  2726   001870                     
  2727                           ; BSR set to: 0
  2728                           ;drivers/scr/API_MRF24J40.c: 101:   data_config_s.my_panid = (0x1234);
  2729   001870  0E12               	movlw	18
  2730   001872  6FC7               	movwf	(_data_config_s+27)& (0+255),b
  2731   001874  0E34               	movlw	52
  2732   001876  6FC6               	movwf	(_data_config_s+26)& (0+255),b
  2733   001878                     
  2734                           ; BSR set to: 0
  2735                           ;drivers/scr/API_MRF24J40.c: 102:   data_config_s.my_address = (0x1112);
  2736   001878  0E11               	movlw	17
  2737   00187A  6FC9               	movwf	(_data_config_s+29)& (0+255),b
  2738   00187C  0E12               	movlw	18
  2739   00187E  6FC8               	movwf	(_data_config_s+28)& (0+255),b
  2740   001880                     l102:
  2741                           
  2742                           ; BSR set to: 0
  2743   001880  0012               	return		;funcret
  2744   001882                     __end_of_InicializoVariables:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _strncpy *****************
  2748 ;; Defined at:
  2749 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncpy.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  d               1    0[COMRAM] PTR unsigned char 
  2752 ;;		 -> data_config_s(32), 
  2753 ;;  s               1    1[COMRAM] PTR const unsigned char 
  2754 ;;		 -> default_mac_address(8), default_security_key(16), 
  2755 ;;  n               2    2[COMRAM] unsigned int 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  cp              1    5[COMRAM] PTR unsigned char 
  2758 ;;		 -> data_config_s(32), 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    0[COMRAM] PTR unsigned char 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2771 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2772 ;;Total ram usage:        6 bytes
  2773 ;; Hardware stack levels used: 1
  2774 ;; Hardware stack levels required when called: 1
  2775 ;; This function calls:
  2776 ;;		Nothing
  2777 ;; This function is called by:
  2778 ;;		_InicializoVariables
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text8
  2783   00179E                     __ptext8:
  2784                           	callstack 0
  2785   00179E                     _strncpy:
  2786                           	callstack 27
  2787   00179E  C001  F006         	movff	strncpy@d,strncpy@cp
  2788   0017A2  EFEE  F00B         	goto	l1771
  2789   0017A6                     l1765:
  2790   0017A6  0603               	decf	strncpy@n^0,f,c
  2791   0017A8  A0D8               	btfss	status,0,c
  2792   0017AA  0604               	decf	(strncpy@n+1)^0,f,c
  2793   0017AC  2A02               	incf	strncpy@s^0,f,c
  2794   0017AE  0402               	decf	strncpy@s^0,w,c
  2795   0017B0  6E05               	movwf	??_strncpy^0,c
  2796   0017B2  C005  FFF6         	movff	??_strncpy,tblptrl
  2797   0017B6                     	if	1	;There is more than 1 active tblptr byte
  2798   0017B6  0E10               	movlw	high __smallconst
  2799   0017B8  6EF7               	movwf	tblptrh,c
  2800   0017BA                     	endif
  2801   0017BA                     	if	0	;tblptru may be non-zero
  2802   0017BA                     	endif
  2803   0017BA                     	if	0	;tblptru may be non-zero
  2804   0017BA                     	endif
  2805   0017BA  2A06               	incf	strncpy@cp^0,f,c
  2806   0017BC  0406               	decf	strncpy@cp^0,w,c
  2807   0017BE  6ED9               	movwf	fsr2l,c
  2808   0017C0  6ADA               	clrf	fsr2h,c
  2809   0017C2  0008               	tblrd		*
  2810   0017C4  CFF5 FFDF          	movff	tablat,indf2
  2811   0017C8  50DF               	movf	indf2,w,c
  2812   0017CA  A4D8               	btfss	status,2,c
  2813   0017CC  EFEA  F00B         	goto	u531
  2814   0017D0  EFEC  F00B         	goto	u530
  2815   0017D4                     u531:
  2816   0017D4  EFEE  F00B         	goto	l1771
  2817   0017D8                     u530:
  2818   0017D8  EFFE  F00B         	goto	l1777
  2819   0017DC                     l1771:
  2820   0017DC  5003               	movf	strncpy@n^0,w,c
  2821   0017DE  1004               	iorwf	(strncpy@n+1)^0,w,c
  2822   0017E0  A4D8               	btfss	status,2,c
  2823   0017E2  EFF5  F00B         	goto	u541
  2824   0017E6  EFF7  F00B         	goto	u540
  2825   0017EA                     u541:
  2826   0017EA  EFD3  F00B         	goto	l1765
  2827   0017EE                     u540:
  2828   0017EE  EFFE  F00B         	goto	l1777
  2829   0017F2                     l1773:
  2830   0017F2  5006               	movf	strncpy@cp^0,w,c
  2831   0017F4  6ED9               	movwf	fsr2l,c
  2832   0017F6  6ADA               	clrf	fsr2h,c
  2833   0017F8  6ADF               	clrf	indf2,c
  2834   0017FA  2A06               	incf	strncpy@cp^0,f,c
  2835   0017FC                     l1777:
  2836   0017FC  0603               	decf	strncpy@n^0,f,c
  2837   0017FE  A0D8               	btfss	status,0,c
  2838   001800  0604               	decf	(strncpy@n+1)^0,f,c
  2839   001802  2803               	incf	strncpy@n^0,w,c
  2840   001804  E106               	bnz	u551
  2841   001806  2804               	incf	(strncpy@n+1)^0,w,c
  2842   001808  A4D8               	btfss	status,2,c
  2843   00180A  EF09  F00C         	goto	u551
  2844   00180E  EF0B  F00C         	goto	u550
  2845   001812                     u551:
  2846   001812  EFF9  F00B         	goto	l1773
  2847   001816                     u550:
  2848   001816  0012               	return		;funcret
  2849   001818                     __end_of_strncpy:
  2850                           	callstack 0
  2851                           
  2852 ;; *************** function _InicializoPines *****************
  2853 ;; Defined at:
  2854 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;		None
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;Total ram usage:        0 bytes
  2873 ;; Hardware stack levels used: 1
  2874 ;; Hardware stack levels required when called: 2
  2875 ;; This function calls:
  2876 ;;		_SetCSPin
  2877 ;;		_SetResetPin
  2878 ;;		_SetWakePin
  2879 ;; This function is called by:
  2880 ;;		_MRF24J40Init
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           	psect	text9
  2885   001C32                     __ptext9:
  2886                           	callstack 0
  2887   001C32                     _InicializoPines:
  2888                           	callstack 27
  2889   001C32                     
  2890                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  2891   001C32  0E01               	movlw	1
  2892   001C34  EC49  F00E         	call	_SetCSPin
  2893                           
  2894                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  2895   001C38  0E01               	movlw	1
  2896   001C3A  EC2D  F00E         	call	_SetWakePin
  2897                           
  2898                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  2899   001C3E  0E00               	movlw	0
  2900   001C40  EC34  F00E         	call	_SetResetPin
  2901   001C44  0012               	return		;funcret
  2902   001C46                     __end_of_InicializoPines:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _SetWakePin *****************
  2906 ;; Defined at:
  2907 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  estado          1    wreg     _Bool 
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  estado          1    0[COMRAM] _Bool 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;Total ram usage:        1 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 1
  2928 ;; This function calls:
  2929 ;;		Nothing
  2930 ;; This function is called by:
  2931 ;;		_InicializoPines
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text10
  2936   001C5A                     __ptext10:
  2937                           	callstack 0
  2938   001C5A                     _SetWakePin:
  2939                           	callstack 27
  2940                           
  2941                           ;incstack = 0
  2942                           ;SetWakePin@estado stored from wreg
  2943   001C5A  6E01               	movwf	SetWakePin@estado^0,c
  2944   001C5C                     
  2945                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  2946   001C5C  B001               	btfsc	SetWakePin@estado^0,0,c
  2947   001C5E  D002               	bra	u515
  2948   001C60  9E8B               	bcf	139,7,c	;volatile
  2949   001C62  D001               	bra	u516
  2950   001C64                     u515:
  2951   001C64  8E8B               	bsf	139,7,c	;volatile
  2952   001C66                     u516:
  2953   001C66  0012               	return		;funcret
  2954   001C68                     __end_of_SetWakePin:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function _SetResetPin *****************
  2958 ;; Defined at:
  2959 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  estado          1    wreg     _Bool 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  estado          1    0[COMRAM] _Bool 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;                  1    wreg      void 
  2966 ;; Registers used:
  2967 ;;		wreg
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;Total ram usage:        1 bytes
  2978 ;; Hardware stack levels used: 1
  2979 ;; Hardware stack levels required when called: 1
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_InicializoPines
  2984 ;;		_MRF24J40Init
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text11
  2989   001C68                     __ptext11:
  2990                           	callstack 0
  2991   001C68                     _SetResetPin:
  2992                           	callstack 28
  2993                           
  2994                           ;incstack = 0
  2995                           ;SetResetPin@estado stored from wreg
  2996   001C68  6E01               	movwf	SetResetPin@estado^0,c
  2997   001C6A                     
  2998                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  2999   001C6A  B001               	btfsc	SetResetPin@estado^0,0,c
  3000   001C6C  D002               	bra	u525
  3001   001C6E  988C               	bcf	140,4,c	;volatile
  3002   001C70  D001               	bra	u526
  3003   001C72                     u525:
  3004   001C72  888C               	bsf	140,4,c	;volatile
  3005   001C74                     u526:
  3006   001C74  0012               	return		;funcret
  3007   001C76                     __end_of_SetResetPin:
  3008                           	callstack 0
  3009                           
  3010 ;; *************** function _InicializoMRF24 *****************
  3011 ;; Defined at:
  3012 ;;		line 112 in file "drivers/scr/API_MRF24J40.c"
  3013 ;; Parameters:    Size  Location     Type
  3014 ;;		None
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  delay_time_o    9   17[COMRAM] struct .
  3017 ;;  lectura         1   16[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      enum E3263
  3020 ;; Registers used:
  3021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:       12 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 6
  3034 ;; This function calls:
  3035 ;;		_DelayInit
  3036 ;;		_DelayRead
  3037 ;;		_DelayReset
  3038 ;;		_GetLongAddr
  3039 ;;		_GetShortAddr
  3040 ;;		_SetChannel
  3041 ;;		_SetDeviceAddress
  3042 ;;		_SetDeviceMACAddress
  3043 ;;		_SetLongAddr
  3044 ;;		_SetShortAddr
  3045 ;; This function is called by:
  3046 ;;		_MRF24J40Init
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text12
  3051   00124A                     __ptext12:
  3052                           	callstack 0
  3053   00124A                     _InicializoMRF24:
  3054                           	callstack 23
  3055   00124A                     
  3056                           ;drivers/scr/API_MRF24J40.c: 114:  uint8_t lectura;;drivers/scr/API_MRF24J40.c: 115:  de
      +                          layNoBloqueanteData_t delay_time_out;;drivers/scr/API_MRF24J40.c: 116:  DelayInit(&delay
      +                          _time_out, 200);
  3057   00124A  0E12               	movlw	low InicializoMRF24@delay_time_out
  3058   00124C  6E01               	movwf	DelayInit@delay^0,c
  3059   00124E  0EC8               	movlw	200
  3060   001250  6E02               	movwf	DelayInit@duration^0,c
  3061   001252  0E00               	movlw	0
  3062   001254  6E03               	movwf	(DelayInit@duration+1)^0,c
  3063   001256  0E00               	movlw	0
  3064   001258  6E04               	movwf	(DelayInit@duration+2)^0,c
  3065   00125A  0E00               	movlw	0
  3066   00125C  6E05               	movwf	(DelayInit@duration+3)^0,c
  3067   00125E  ECAC  F00D         	call	_DelayInit	;wreg free
  3068   001262                     
  3069                           ;drivers/scr/API_MRF24J40.c: 117:  SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  3070   001262  0E07               	movlw	7
  3071   001264  6E03               	movwf	SetShortAddr@valor^0,c
  3072   001266  0E2A               	movlw	42
  3073   001268  ECE6  F00D         	call	_SetShortAddr
  3074   00126C                     
  3075                           ;drivers/scr/API_MRF24J40.c: 118:  DelayReset(&delay_time_out);
  3076   00126C  0E12               	movlw	low InicializoMRF24@delay_time_out
  3077   00126E  6E01               	movwf	DelayReset@delay^0,c
  3078   001270  ECD3  F00D         	call	_DelayReset	;wreg free
  3079   001274                     l105:
  3080                           
  3081                           ;drivers/scr/API_MRF24J40.c: 122:   lectura = GetShortAddr((0x2A));
  3082   001274  0E2A               	movlw	42
  3083   001276  ECC0  F00D         	call	_GetShortAddr
  3084   00127A  6E11               	movwf	InicializoMRF24@lectura^0,c
  3085   00127C                     
  3086                           ;drivers/scr/API_MRF24J40.c: 123:   if(DelayRead(&delay_time_out))
  3087   00127C  0E12               	movlw	low InicializoMRF24@delay_time_out
  3088   00127E  6E02               	movwf	DelayRead@delay^0,c
  3089   001280  EC79  F00B         	call	_DelayRead	;wreg free
  3090   001284  0900               	iorlw	0
  3091   001286  B4D8               	btfsc	status,2,c
  3092   001288  EF48  F009         	goto	u641
  3093   00128C  EF4A  F009         	goto	u640
  3094   001290                     u641:
  3095   001290  EF4D  F009         	goto	l1905
  3096   001294                     u640:
  3097   001294                     l1901:
  3098                           
  3099                           ;drivers/scr/API_MRF24J40.c: 124:    return TIME_OUT_OCURRIDO;
  3100   001294  0E05               	movlw	5
  3101   001296  EFF7  F009         	goto	l107
  3102   00129A                     l1905:
  3103                           
  3104                           ;drivers/scr/API_MRF24J40.c: 125:  }while((lectura & ((0X04) | (0X02) | (0X01))) != (0X0
      +                          0));
  3105   00129A  C011  F00F         	movff	InicializoMRF24@lectura,??_InicializoMRF24
  3106   00129E  0E07               	movlw	7
  3107   0012A0  160F               	andwf	??_InicializoMRF24^0,f,c
  3108   0012A2  A4D8               	btfss	status,2,c
  3109   0012A4  EF56  F009         	goto	u651
  3110   0012A8  EF58  F009         	goto	u650
  3111   0012AC                     u651:
  3112   0012AC  EF3A  F009         	goto	l105
  3113   0012B0                     u650:
  3114   0012B0                     
  3115                           ;drivers/scr/API_MRF24J40.c: 126:  _delay((unsigned long)((50)*(16000000/4000.0)));;
  3116   0012B0  0E02               	movlw	2
  3117   0012B2  6E10               	movwf	(??_InicializoMRF24+1)^0,c
  3118   0012B4  0E04               	movlw	4
  3119   0012B6  6E0F               	movwf	??_InicializoMRF24^0,c
  3120   0012B8  0EBA               	movlw	186
  3121   0012BA                     u957:
  3122   0012BA  2EE8               	decfsz	wreg,f,c
  3123   0012BC  D7FE               	bra	u957
  3124   0012BE  2E0F               	decfsz	??_InicializoMRF24^0,f,c
  3125   0012C0  D7FC               	bra	u957
  3126   0012C2  2E10               	decfsz	(??_InicializoMRF24+1)^0,f,c
  3127   0012C4  D7FA               	bra	u957
  3128   0012C6  F000 F000          	nop2	
  3129   0012CA                     
  3130                           ;drivers/scr/API_MRF24J40.c: 127:  SetShortAddr((0x0D), (0X01));
  3131   0012CA  0E01               	movlw	1
  3132   0012CC  6E03               	movwf	SetShortAddr@valor^0,c
  3133   0012CE  0E0D               	movlw	13
  3134   0012D0  ECE6  F00D         	call	_SetShortAddr
  3135   0012D4                     
  3136                           ;drivers/scr/API_MRF24J40.c: 128:  SetDeviceAddress();
  3137   0012D4  EC80  F00D         	call	_SetDeviceAddress	;wreg free
  3138   0012D8                     
  3139                           ;drivers/scr/API_MRF24J40.c: 129:  SetDeviceMACAddress();
  3140   0012D8  EC97  F00D         	call	_SetDeviceMACAddress	;wreg free
  3141   0012DC                     
  3142                           ;drivers/scr/API_MRF24J40.c: 130:  SetLongAddr((0x201), (0X02) | (0X01));
  3143   0012DC  0E02               	movlw	2
  3144   0012DE  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3145   0012E0  0E01               	movlw	1
  3146   0012E2  6E06               	movwf	SetLongAddr@reg_address^0,c
  3147   0012E4  0E03               	movlw	3
  3148   0012E6  6E08               	movwf	SetLongAddr@valor^0,c
  3149   0012E8  EC94  F00C         	call	_SetLongAddr	;wreg free
  3150   0012EC                     
  3151                           ;drivers/scr/API_MRF24J40.c: 131:  SetLongAddr((0x202), (0X80));
  3152   0012EC  0E02               	movlw	2
  3153   0012EE  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3154   0012F0  0E02               	movlw	2
  3155   0012F2  6E06               	movwf	SetLongAddr@reg_address^0,c
  3156   0012F4  0E80               	movlw	128
  3157   0012F6  6E08               	movwf	SetLongAddr@valor^0,c
  3158   0012F8  EC94  F00C         	call	_SetLongAddr	;wreg free
  3159   0012FC                     
  3160                           ;drivers/scr/API_MRF24J40.c: 132:  SetLongAddr((0x203), (0X80) | (0X00));
  3161   0012FC  0E02               	movlw	2
  3162   0012FE  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3163   001300  0E03               	movlw	3
  3164   001302  6E06               	movwf	SetLongAddr@reg_address^0,c
  3165   001304  0E80               	movlw	128
  3166   001306  6E08               	movwf	SetLongAddr@valor^0,c
  3167   001308  EC94  F00C         	call	_SetLongAddr	;wreg free
  3168   00130C                     
  3169                           ;drivers/scr/API_MRF24J40.c: 133:  SetLongAddr((0x206), (0X80) | (0X10));
  3170   00130C  0E02               	movlw	2
  3171   00130E  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3172   001310  0E06               	movlw	6
  3173   001312  6E06               	movwf	SetLongAddr@reg_address^0,c
  3174   001314  0E90               	movlw	144
  3175   001316  6E08               	movwf	SetLongAddr@valor^0,c
  3176   001318  EC94  F00C         	call	_SetLongAddr	;wreg free
  3177   00131C                     
  3178                           ;drivers/scr/API_MRF24J40.c: 134:  SetLongAddr((0x207), (0X80));
  3179   00131C  0E02               	movlw	2
  3180   00131E  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3181   001320  0E07               	movlw	7
  3182   001322  6E06               	movwf	SetLongAddr@reg_address^0,c
  3183   001324  0E80               	movlw	128
  3184   001326  6E08               	movwf	SetLongAddr@valor^0,c
  3185   001328  EC94  F00C         	call	_SetLongAddr	;wreg free
  3186   00132C                     
  3187                           ;drivers/scr/API_MRF24J40.c: 135:  SetLongAddr((0x208), (0X10));
  3188   00132C  0E02               	movlw	2
  3189   00132E  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3190   001330  0E08               	movlw	8
  3191   001332  6E06               	movwf	SetLongAddr@reg_address^0,c
  3192   001334  0E10               	movlw	16
  3193   001336  6E08               	movwf	SetLongAddr@valor^0,c
  3194   001338  EC94  F00C         	call	_SetLongAddr	;wreg free
  3195   00133C                     
  3196                           ;drivers/scr/API_MRF24J40.c: 136:  SetLongAddr((0x220), (0X20) | (0X01));
  3197   00133C  0E02               	movlw	2
  3198   00133E  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3199   001340  0E20               	movlw	32
  3200   001342  6E06               	movwf	SetLongAddr@reg_address^0,c
  3201   001344  0E21               	movlw	33
  3202   001346  6E08               	movwf	SetLongAddr@valor^0,c
  3203   001348  EC94  F00C         	call	_SetLongAddr	;wreg free
  3204   00134C                     
  3205                           ;drivers/scr/API_MRF24J40.c: 137:  SetShortAddr((0x3A), (0X80));
  3206   00134C  0E80               	movlw	128
  3207   00134E  6E03               	movwf	SetShortAddr@valor^0,c
  3208   001350  0E3A               	movlw	58
  3209   001352  ECE6  F00D         	call	_SetShortAddr
  3210   001356                     
  3211                           ;drivers/scr/API_MRF24J40.c: 138:  SetShortAddr((0x3E), (0X40));
  3212   001356  0E40               	movlw	64
  3213   001358  6E03               	movwf	SetShortAddr@valor^0,c
  3214   00135A  0E3E               	movlw	62
  3215   00135C  ECE6  F00D         	call	_SetShortAddr
  3216   001360                     
  3217                           ;drivers/scr/API_MRF24J40.c: 139:  SetShortAddr((0x3F), (0X04) | (0X02));
  3218   001360  0E06               	movlw	6
  3219   001362  6E03               	movwf	SetShortAddr@valor^0,c
  3220   001364  0E3F               	movlw	63
  3221   001366  ECE6  F00D         	call	_SetShortAddr
  3222   00136A                     
  3223                           ;drivers/scr/API_MRF24J40.c: 140:  SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  3224   00136A  0E98               	movlw	152
  3225   00136C  6E03               	movwf	SetShortAddr@valor^0,c
  3226   00136E  0E18               	movlw	24
  3227   001370  ECE6  F00D         	call	_SetShortAddr
  3228   001374                     
  3229                           ;drivers/scr/API_MRF24J40.c: 141:  SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0X01
      +                          ));
  3230   001374  0E95               	movlw	149
  3231   001376  6E03               	movwf	SetShortAddr@valor^0,c
  3232   001378  0E2E               	movlw	46
  3233   00137A  ECE6  F00D         	call	_SetShortAddr
  3234   00137E                     
  3235                           ;drivers/scr/API_MRF24J40.c: 142:  DelayReset(&delay_time_out);
  3236   00137E  0E12               	movlw	low InicializoMRF24@delay_time_out
  3237   001380  6E01               	movwf	DelayReset@delay^0,c
  3238   001382  ECD3  F00D         	call	_DelayReset	;wreg free
  3239   001386                     l1941:
  3240                           
  3241                           ;drivers/scr/API_MRF24J40.c: 146:   lectura = GetLongAddr((0x20f)) & (0XA0);
  3242   001386  0E02               	movlw	2
  3243   001388  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3244   00138A  0E0F               	movlw	15
  3245   00138C  6E06               	movwf	GetLongAddr@reg_address^0,c
  3246   00138E  EC72  F00C         	call	_GetLongAddr	;wreg free
  3247   001392  0BA0               	andlw	160
  3248   001394  6E11               	movwf	InicializoMRF24@lectura^0,c
  3249   001396                     
  3250                           ;drivers/scr/API_MRF24J40.c: 147:   if(DelayRead(&delay_time_out))
  3251   001396  0E12               	movlw	low InicializoMRF24@delay_time_out
  3252   001398  6E02               	movwf	DelayRead@delay^0,c
  3253   00139A  EC79  F00B         	call	_DelayRead	;wreg free
  3254   00139E  0900               	iorlw	0
  3255   0013A0  B4D8               	btfsc	status,2,c
  3256   0013A2  EFD5  F009         	goto	u661
  3257   0013A6  EFD7  F009         	goto	u660
  3258   0013AA                     u661:
  3259   0013AA  EFD9  F009         	goto	l1949
  3260   0013AE                     u660:
  3261   0013AE  EF4A  F009         	goto	l1901
  3262   0013B2                     l1949:
  3263                           
  3264                           ;drivers/scr/API_MRF24J40.c: 149:  }while(lectura != (0XA0));
  3265   0013B2  0EA0               	movlw	160
  3266   0013B4  1811               	xorwf	InicializoMRF24@lectura^0,w,c
  3267   0013B6  A4D8               	btfss	status,2,c
  3268   0013B8  EFE0  F009         	goto	u671
  3269   0013BC  EFE2  F009         	goto	u670
  3270   0013C0                     u671:
  3271   0013C0  EFC3  F009         	goto	l1941
  3272   0013C4                     u670:
  3273   0013C4                     
  3274                           ;drivers/scr/API_MRF24J40.c: 150:  SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0X10
      +                          )
  3275   0013C4  0EF5               	movlw	245
  3276   0013C6  6E03               	movwf	SetShortAddr@valor^0,c
  3277   0013C8  0E32               	movlw	50
  3278   0013CA  ECE6  F00D         	call	_SetShortAddr
  3279                           
  3280                           ;drivers/scr/API_MRF24J40.c: 152:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  3281   0013CE  0EB9               	movlw	185
  3282   0013D0  6E03               	movwf	SetShortAddr@valor^0,c
  3283   0013D2  0E12               	movlw	18
  3284   0013D4  ECE6  F00D         	call	_SetShortAddr
  3285                           
  3286                           ;drivers/scr/API_MRF24J40.c: 153:  SetChannel();
  3287   0013D8  ECD2  F00C         	call	_SetChannel	;wreg free
  3288                           
  3289                           ;drivers/scr/API_MRF24J40.c: 154:  SetShortAddr((0x00), (0X00));
  3290   0013DC  0E00               	movlw	0
  3291   0013DE  6E03               	movwf	SetShortAddr@valor^0,c
  3292   0013E0  0E00               	movlw	0
  3293   0013E2  ECE6  F00D         	call	_SetShortAddr
  3294                           
  3295                           ;drivers/scr/API_MRF24J40.c: 155:  (void)GetShortAddr((0x31));
  3296   0013E6  0E31               	movlw	49
  3297   0013E8  ECC0  F00D         	call	_GetShortAddr
  3298   0013EC                     
  3299                           ;drivers/scr/API_MRF24J40.c: 156:  return INICIALIZACION_OK;
  3300   0013EC  0E00               	movlw	0
  3301   0013EE                     l107:
  3302   0013EE  0012               	return		;funcret
  3303   0013F0                     __end_of_InicializoMRF24:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _SetDeviceMACAddress *****************
  3307 ;; Defined at:
  3308 ;;		line 272 in file "drivers/scr/API_MRF24J40.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;  i               1    4[COMRAM] unsigned char 
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        1 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 4
  3329 ;; This function calls:
  3330 ;;		_SetShortAddr
  3331 ;; This function is called by:
  3332 ;;		_InicializoMRF24
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text13
  3337   001B2E                     __ptext13:
  3338                           	callstack 0
  3339   001B2E                     _SetDeviceMACAddress:
  3340                           	callstack 24
  3341   001B2E                     
  3342                           ;drivers/scr/API_MRF24J40.c: 274:  for(uint8_t i = 0; i < 8; i++) {
  3343   001B2E  6A05               	clrf	SetDeviceMACAddress@i^0,c
  3344   001B30                     l1833:
  3345                           
  3346                           ;drivers/scr/API_MRF24J40.c: 276:   SetShortAddr(EADR0 + i, data_config_s.my_mac[i]);
  3347   001B30  5005               	movf	SetDeviceMACAddress@i^0,w,c
  3348   001B32  0FBE               	addlw	low (_data_config_s+18)
  3349   001B34  6ED9               	movwf	fsr2l,c
  3350   001B36  6ADA               	clrf	fsr2h,c
  3351   001B38  50DF               	movf	indf2,w,c
  3352   001B3A  6E03               	movwf	SetShortAddr@valor^0,c
  3353   001B3C  5005               	movf	SetDeviceMACAddress@i^0,w,c
  3354   001B3E  0F05               	addlw	5
  3355   001B40  ECE6  F00D         	call	_SetShortAddr
  3356   001B44                     
  3357                           ;drivers/scr/API_MRF24J40.c: 277:  }
  3358   001B44  2A05               	incf	SetDeviceMACAddress@i^0,f,c
  3359   001B46  0E07               	movlw	7
  3360   001B48  6405               	cpfsgt	SetDeviceMACAddress@i^0,c
  3361   001B4A  EFA9  F00D         	goto	u581
  3362   001B4E  EFAB  F00D         	goto	u580
  3363   001B52                     u581:
  3364   001B52  EF98  F00D         	goto	l1833
  3365   001B56                     u580:
  3366   001B56  0012               	return		;funcret
  3367   001B58                     __end_of_SetDeviceMACAddress:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function _SetDeviceAddress *****************
  3371 ;; Defined at:
  3372 ;;		line 258 in file "drivers/scr/API_MRF24J40.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 4
  3393 ;; This function calls:
  3394 ;;		_SetShortAddr
  3395 ;; This function is called by:
  3396 ;;		_InicializoMRF24
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text14
  3401   001B00                     __ptext14:
  3402                           	callstack 0
  3403   001B00                     _SetDeviceAddress:
  3404                           	callstack 24
  3405   001B00                     
  3406                           ;drivers/scr/API_MRF24J40.c: 260:  SetShortAddr((0x04), (uint8_t) (data_config_s.my_addr
      +                          ess >> (0X08)));
  3407   001B00  0100               	movlb	0	; () banked
  3408   001B02  51C9               	movf	(_data_config_s+29)& (0+255),w,b
  3409   001B04  6E03               	movwf	SetShortAddr@valor^0,c
  3410   001B06  0E04               	movlw	4
  3411   001B08  ECE6  F00D         	call	_SetShortAddr
  3412                           
  3413                           ;drivers/scr/API_MRF24J40.c: 261:  SetShortAddr((0x03), (uint8_t) (data_config_s.my_addr
      +                          ess));
  3414   001B0C  C0C8  F003         	movff	_data_config_s+28,SetShortAddr@valor
  3415   001B10  0E03               	movlw	3
  3416   001B12  ECE6  F00D         	call	_SetShortAddr
  3417                           
  3418                           ;drivers/scr/API_MRF24J40.c: 262:  SetShortAddr((0x02), (uint8_t) (data_config_s.my_pani
      +                          d >> (0X08)));
  3419   001B16  0100               	movlb	0	; () banked
  3420   001B18  51C7               	movf	(_data_config_s+27)& (0+255),w,b
  3421   001B1A  6E03               	movwf	SetShortAddr@valor^0,c
  3422   001B1C  0E02               	movlw	2
  3423   001B1E  ECE6  F00D         	call	_SetShortAddr
  3424                           
  3425                           ;drivers/scr/API_MRF24J40.c: 263:  SetShortAddr((0x01), (uint8_t) (data_config_s.my_pani
      +                          d));
  3426   001B22  C0C6  F003         	movff	_data_config_s+26,SetShortAddr@valor
  3427   001B26  0E01               	movlw	1
  3428   001B28  ECE6  F00D         	call	_SetShortAddr
  3429   001B2C  0012               	return		;funcret
  3430   001B2E                     __end_of_SetDeviceAddress:
  3431                           	callstack 0
  3432                           
  3433 ;; *************** function _SetChannel *****************
  3434 ;; Defined at:
  3435 ;;		line 244 in file "drivers/scr/API_MRF24J40.c"
  3436 ;; Parameters:    Size  Location     Type
  3437 ;;		None
  3438 ;; Auto vars:     Size  Location     Type
  3439 ;;		None
  3440 ;; Return value:  Size  Location     Type
  3441 ;;                  1    wreg      void 
  3442 ;; Registers used:
  3443 ;;		wreg, status,2, status,0, cstack
  3444 ;; Tracked objects:
  3445 ;;		On entry : 0/0
  3446 ;;		On exit  : 0/0
  3447 ;;		Unchanged: 0/0
  3448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;Total ram usage:        1 bytes
  3454 ;; Hardware stack levels used: 1
  3455 ;; Hardware stack levels required when called: 5
  3456 ;; This function calls:
  3457 ;;		_SetLongAddr
  3458 ;;		_SetShortAddr
  3459 ;; This function is called by:
  3460 ;;		_InicializoMRF24
  3461 ;; This function uses a non-reentrant model
  3462 ;;
  3463                           
  3464                           	psect	text15
  3465   0019A4                     __ptext15:
  3466                           	callstack 0
  3467   0019A4                     _SetChannel:
  3468                           	callstack 23
  3469   0019A4                     
  3470                           ;drivers/scr/API_MRF24J40.c: 246:  SetLongAddr((0x200), data_config_s.my_channel);
  3471   0019A4  0E02               	movlw	2
  3472   0019A6  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3473   0019A8  0E00               	movlw	0
  3474   0019AA  6E06               	movwf	SetLongAddr@reg_address^0,c
  3475   0019AC  C0AD  F008         	movff	_data_config_s+1,SetLongAddr@valor
  3476   0019B0  EC94  F00C         	call	_SetLongAddr	;wreg free
  3477                           
  3478                           ;drivers/scr/API_MRF24J40.c: 247:  SetShortAddr((0x36), (0X04));
  3479   0019B4  0E04               	movlw	4
  3480   0019B6  6E03               	movwf	SetShortAddr@valor^0,c
  3481   0019B8  0E36               	movlw	54
  3482   0019BA  ECE6  F00D         	call	_SetShortAddr
  3483                           
  3484                           ;drivers/scr/API_MRF24J40.c: 248:  SetShortAddr((0x36), (0X00));
  3485   0019BE  0E00               	movlw	0
  3486   0019C0  6E03               	movwf	SetShortAddr@valor^0,c
  3487   0019C2  0E36               	movlw	54
  3488   0019C4  ECE6  F00D         	call	_SetShortAddr
  3489   0019C8                     
  3490                           ;drivers/scr/API_MRF24J40.c: 249:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3491   0019C8  0E06               	movlw	6
  3492   0019CA  6E0B               	movwf	??_SetChannel^0,c
  3493   0019CC  0E30               	movlw	48
  3494   0019CE                     u967:
  3495   0019CE  2EE8               	decfsz	wreg,f,c
  3496   0019D0  D7FE               	bra	u967
  3497   0019D2  2E0B               	decfsz	??_SetChannel^0,f,c
  3498   0019D4  D7FC               	bra	u967
  3499   0019D6  F000 F000          	nop2	
  3500   0019DA  0012               	return		;funcret
  3501   0019DC                     __end_of_SetChannel:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function _SetShortAddr *****************
  3505 ;; Defined at:
  3506 ;;		line 168 in file "drivers/scr/API_MRF24J40.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  reg_address     1    wreg     unsigned char 
  3509 ;;  valor           1    2[COMRAM] unsigned char 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  reg_address     1    3[COMRAM] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg, status,2, status,0, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:        2 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 3
  3528 ;; This function calls:
  3529 ;;		_SetCSPin
  3530 ;;		_WriteByteSPIPort
  3531 ;; This function is called by:
  3532 ;;		_InicializoMRF24
  3533 ;;		_SetChannel
  3534 ;;		_SetDeviceAddress
  3535 ;;		_SetDeviceMACAddress
  3536 ;;		_MRF24TransmitirDato
  3537 ;;		_MRF24ReciboPaquete
  3538 ;;		_MRF24BuscarDispositivos
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text16
  3543   001BCC                     __ptext16:
  3544                           	callstack 0
  3545   001BCC                     _SetShortAddr:
  3546                           	callstack 25
  3547                           
  3548                           ;incstack = 0
  3549                           ;SetShortAddr@reg_address stored from wreg
  3550   001BCC  6E04               	movwf	SetShortAddr@reg_address^0,c
  3551   001BCE                     
  3552                           ;drivers/scr/API_MRF24J40.c: 170:  reg_address = (uint8_t) (reg_address << (0X01)) | (0x
      +                          01);
  3553   001BCE  80D8               	bsf	status,0,c
  3554   001BD0  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  3555   001BD2                     
  3556                           ;drivers/scr/API_MRF24J40.c: 171:  SetCSPin(0);
  3557   001BD2  0E00               	movlw	0
  3558   001BD4  EC49  F00E         	call	_SetCSPin
  3559   001BD8                     
  3560                           ;drivers/scr/API_MRF24J40.c: 172:  WriteByteSPIPort(reg_address);
  3561   001BD8  5004               	movf	SetShortAddr@reg_address^0,w,c
  3562   001BDA  EC57  F00E         	call	_WriteByteSPIPort
  3563   001BDE                     
  3564                           ;drivers/scr/API_MRF24J40.c: 173:  WriteByteSPIPort(valor);
  3565   001BDE  5003               	movf	SetShortAddr@valor^0,w,c
  3566   001BE0  EC57  F00E         	call	_WriteByteSPIPort
  3567   001BE4                     
  3568                           ;drivers/scr/API_MRF24J40.c: 174:  SetCSPin(1);
  3569   001BE4  0E01               	movlw	1
  3570   001BE6  EC49  F00E         	call	_SetCSPin
  3571   001BEA  0012               	return		;funcret
  3572   001BEC                     __end_of_SetShortAddr:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _SetLongAddr *****************
  3576 ;; Defined at:
  3577 ;;		line 208 in file "drivers/scr/API_MRF24J40.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  reg_address     2    5[COMRAM] unsigned short 
  3580 ;;  valor           1    7[COMRAM] unsigned char 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg, status,2, status,0, cstack
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3592 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;Total ram usage:        5 bytes
  3597 ;; Hardware stack levels used: 1
  3598 ;; Hardware stack levels required when called: 4
  3599 ;; This function calls:
  3600 ;;		_SetCSPin
  3601 ;;		_Write2ByteSPIPort
  3602 ;;		_WriteByteSPIPort
  3603 ;; This function is called by:
  3604 ;;		_InicializoMRF24
  3605 ;;		_SetChannel
  3606 ;;		_MRF24TransmitirDato
  3607 ;;		_MRF24ReciboPaquete
  3608 ;; This function uses a non-reentrant model
  3609 ;;
  3610                           
  3611                           	psect	text17
  3612   001928                     __ptext17:
  3613                           	callstack 0
  3614   001928                     _SetLongAddr:
  3615                           	callstack 24
  3616   001928                     
  3617                           ;drivers/scr/API_MRF24J40.c: 210:  reg_address = (reg_address << (0X05)) | (0X8010);
  3618   001928  C006  F009         	movff	SetLongAddr@reg_address,??_SetLongAddr
  3619   00192C  C007  F00A         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  3620   001930  0E05               	movlw	5
  3621   001932                     u505:
  3622   001932  90D8               	bcf	status,0,c
  3623   001934  3609               	rlcf	??_SetLongAddr^0,f,c
  3624   001936  360A               	rlcf	(??_SetLongAddr+1)^0,f,c
  3625   001938  2EE8               	decfsz	wreg,f,c
  3626   00193A  EF99  F00C         	goto	u505
  3627   00193E  0E10               	movlw	16
  3628   001940  1009               	iorwf	??_SetLongAddr^0,w,c
  3629   001942  6E06               	movwf	SetLongAddr@reg_address^0,c
  3630   001944  0E80               	movlw	128
  3631   001946  100A               	iorwf	(??_SetLongAddr+1)^0,w,c
  3632   001948  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3633   00194A                     
  3634                           ;drivers/scr/API_MRF24J40.c: 211:  SetCSPin(0);
  3635   00194A  0E00               	movlw	0
  3636   00194C  EC49  F00E         	call	_SetCSPin
  3637   001950                     
  3638                           ;drivers/scr/API_MRF24J40.c: 212:  Write2ByteSPIPort(reg_address);
  3639   001950  C006  F004         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  3640   001954  C007  F005         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3641   001958  EC3B  F00E         	call	_Write2ByteSPIPort	;wreg free
  3642   00195C                     
  3643                           ;drivers/scr/API_MRF24J40.c: 213:  WriteByteSPIPort(valor);
  3644   00195C  5008               	movf	SetLongAddr@valor^0,w,c
  3645   00195E  EC57  F00E         	call	_WriteByteSPIPort
  3646   001962                     
  3647                           ;drivers/scr/API_MRF24J40.c: 214:  SetCSPin(1);
  3648   001962  0E01               	movlw	1
  3649   001964  EC49  F00E         	call	_SetCSPin
  3650   001968  0012               	return		;funcret
  3651   00196A                     __end_of_SetLongAddr:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _GetShortAddr *****************
  3655 ;; Defined at:
  3656 ;;		line 187 in file "drivers/scr/API_MRF24J40.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;  reg_address     1    wreg     unsigned char 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  reg_address     1    3[COMRAM] unsigned char 
  3661 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      unsigned char 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;Total ram usage:        2 bytes
  3676 ;; Hardware stack levels used: 1
  3677 ;; Hardware stack levels required when called: 3
  3678 ;; This function calls:
  3679 ;;		_ReadByteSPIPort
  3680 ;;		_SetCSPin
  3681 ;;		_WriteByteSPIPort
  3682 ;; This function is called by:
  3683 ;;		_InicializoMRF24
  3684 ;;		_MRF24ReciboPaquete
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text18
  3689   001B80                     __ptext18:
  3690                           	callstack 0
  3691   001B80                     _GetShortAddr:
  3692                           	callstack 26
  3693                           
  3694                           ;incstack = 0
  3695                           ;GetShortAddr@reg_address stored from wreg
  3696   001B80  6E04               	movwf	GetShortAddr@reg_address^0,c
  3697   001B82                     
  3698                           ;drivers/scr/API_MRF24J40.c: 190:  reg_address = (uint8_t) (reg_address << (0X01)) & (0x
      +                          7E);
  3699   001B82  5004               	movf	GetShortAddr@reg_address^0,w,c
  3700   001B84  2404               	addwf	GetShortAddr@reg_address^0,w,c
  3701   001B86  0B7E               	andlw	126
  3702   001B88  6E04               	movwf	GetShortAddr@reg_address^0,c
  3703   001B8A                     
  3704                           ;drivers/scr/API_MRF24J40.c: 191:  SetCSPin(0);
  3705   001B8A  0E00               	movlw	0
  3706   001B8C  EC49  F00E         	call	_SetCSPin
  3707   001B90                     
  3708                           ;drivers/scr/API_MRF24J40.c: 192:  WriteByteSPIPort(reg_address);
  3709   001B90  5004               	movf	GetShortAddr@reg_address^0,w,c
  3710   001B92  EC57  F00E         	call	_WriteByteSPIPort
  3711   001B96                     
  3712                           ;drivers/scr/API_MRF24J40.c: 193:  leido_spi = ReadByteSPIPort();
  3713   001B96  EC61  F00E         	call	_ReadByteSPIPort	;wreg free
  3714   001B9A  6E03               	movwf	GetShortAddr@leido_spi^0,c
  3715   001B9C                     
  3716                           ;drivers/scr/API_MRF24J40.c: 194:  SetCSPin(1);
  3717   001B9C  0E01               	movlw	1
  3718   001B9E  EC49  F00E         	call	_SetCSPin
  3719   001BA2                     
  3720                           ;drivers/scr/API_MRF24J40.c: 195:  return leido_spi;
  3721   001BA2  5003               	movf	GetShortAddr@leido_spi^0,w,c
  3722   001BA4  0012               	return		;funcret
  3723   001BA6                     __end_of_GetShortAddr:
  3724                           	callstack 0
  3725                           
  3726 ;; *************** function _WriteByteSPIPort *****************
  3727 ;; Defined at:
  3728 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  dato            1    wreg     unsigned char 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;  dato            1    1[COMRAM] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;Total ram usage:        1 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 2
  3749 ;; This function calls:
  3750 ;;		_SPIWriteByte
  3751 ;; This function is called by:
  3752 ;;		_SetShortAddr
  3753 ;;		_GetShortAddr
  3754 ;;		_SetLongAddr
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text19
  3759   001CAE                     __ptext19:
  3760                           	callstack 0
  3761   001CAE                     _WriteByteSPIPort:
  3762                           	callstack 25
  3763                           
  3764                           ;incstack = 0
  3765                           ;WriteByteSPIPort@dato stored from wreg
  3766   001CAE  6E02               	movwf	WriteByteSPIPort@dato^0,c
  3767   001CB0                     
  3768                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  3769   001CB0  5002               	movf	WriteByteSPIPort@dato^0,w,c
  3770   001CB2  ECF6  F00D         	call	_SPIWriteByte
  3771   001CB6  0012               	return		;funcret
  3772   001CB8                     __end_of_WriteByteSPIPort:
  3773                           	callstack 0
  3774                           
  3775 ;; *************** function _GetLongAddr *****************
  3776 ;; Defined at:
  3777 ;;		line 228 in file "drivers/scr/API_MRF24J40.c"
  3778 ;; Parameters:    Size  Location     Type
  3779 ;;  reg_address     2    5[COMRAM] unsigned short 
  3780 ;; Auto vars:     Size  Location     Type
  3781 ;;  respuesta       1    9[COMRAM] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  1    wreg      unsigned char 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0, cstack
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;Total ram usage:        5 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 4
  3798 ;; This function calls:
  3799 ;;		_ReadByteSPIPort
  3800 ;;		_SetCSPin
  3801 ;;		_Write2ByteSPIPort
  3802 ;; This function is called by:
  3803 ;;		_InicializoMRF24
  3804 ;;		_MRF24ReciboPaquete
  3805 ;; This function uses a non-reentrant model
  3806 ;;
  3807                           
  3808                           	psect	text20
  3809   0018E4                     __ptext20:
  3810                           	callstack 0
  3811   0018E4                     _GetLongAddr:
  3812                           	callstack 25
  3813   0018E4                     
  3814                           ;drivers/scr/API_MRF24J40.c: 230:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 231:  
      +                          reg_address = (reg_address << (0X05)) | (0X8000);
  3815   0018E4  C006  F008         	movff	GetLongAddr@reg_address,??_GetLongAddr
  3816   0018E8  C007  F009         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  3817   0018EC  0E05               	movlw	5
  3818   0018EE                     u595:
  3819   0018EE  90D8               	bcf	status,0,c
  3820   0018F0  3608               	rlcf	??_GetLongAddr^0,f,c
  3821   0018F2  3609               	rlcf	(??_GetLongAddr+1)^0,f,c
  3822   0018F4  2EE8               	decfsz	wreg,f,c
  3823   0018F6  EF77  F00C         	goto	u595
  3824   0018FA  0E00               	movlw	0
  3825   0018FC  1008               	iorwf	??_GetLongAddr^0,w,c
  3826   0018FE  6E06               	movwf	GetLongAddr@reg_address^0,c
  3827   001900  0E80               	movlw	128
  3828   001902  1009               	iorwf	(??_GetLongAddr+1)^0,w,c
  3829   001904  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3830   001906                     
  3831                           ;drivers/scr/API_MRF24J40.c: 232:  SetCSPin(0);
  3832   001906  0E00               	movlw	0
  3833   001908  EC49  F00E         	call	_SetCSPin
  3834   00190C                     
  3835                           ;drivers/scr/API_MRF24J40.c: 233:  Write2ByteSPIPort(reg_address);
  3836   00190C  C006  F004         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  3837   001910  C007  F005         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3838   001914  EC3B  F00E         	call	_Write2ByteSPIPort	;wreg free
  3839   001918                     
  3840                           ;drivers/scr/API_MRF24J40.c: 234:  respuesta = ReadByteSPIPort();
  3841   001918  EC61  F00E         	call	_ReadByteSPIPort	;wreg free
  3842   00191C  6E0A               	movwf	GetLongAddr@respuesta^0,c
  3843   00191E                     
  3844                           ;drivers/scr/API_MRF24J40.c: 235:  SetCSPin(1);
  3845   00191E  0E01               	movlw	1
  3846   001920  EC49  F00E         	call	_SetCSPin
  3847   001924                     
  3848                           ;drivers/scr/API_MRF24J40.c: 236:  return respuesta;
  3849   001924  500A               	movf	GetLongAddr@respuesta^0,w,c
  3850   001926  0012               	return		;funcret
  3851   001928                     __end_of_GetLongAddr:
  3852                           	callstack 0
  3853                           
  3854 ;; *************** function _Write2ByteSPIPort *****************
  3855 ;; Defined at:
  3856 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  dato            2    3[COMRAM] unsigned short 
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      void 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;Total ram usage:        2 bytes
  3875 ;; Hardware stack levels used: 1
  3876 ;; Hardware stack levels required when called: 3
  3877 ;; This function calls:
  3878 ;;		_SPIWrite2Byte
  3879 ;; This function is called by:
  3880 ;;		_SetLongAddr
  3881 ;;		_GetLongAddr
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text21
  3886   001C76                     __ptext21:
  3887                           	callstack 0
  3888   001C76                     _Write2ByteSPIPort:
  3889                           	callstack 24
  3890   001C76                     
  3891                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  3892   001C76  C004  F002         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  3893   001C7A  C005  F003         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  3894   001C7E  EC42  F00E         	call	_SPIWrite2Byte	;wreg free
  3895   001C82  0012               	return		;funcret
  3896   001C84                     __end_of_Write2ByteSPIPort:
  3897                           	callstack 0
  3898                           
  3899 ;; *************** function _SPIWrite2Byte *****************
  3900 ;; Defined at:
  3901 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  dato            2    1[COMRAM] unsigned short 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, status,2, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;Total ram usage:        2 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 2
  3922 ;; This function calls:
  3923 ;;		_SPIWriteByte
  3924 ;; This function is called by:
  3925 ;;		_Write2ByteSPIPort
  3926 ;; This function uses a non-reentrant model
  3927 ;;
  3928                           
  3929                           	psect	text22
  3930   001C84                     __ptext22:
  3931                           	callstack 0
  3932   001C84                     _SPIWrite2Byte:
  3933                           	callstack 24
  3934   001C84                     
  3935                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  3936   001C84  5003               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  3937   001C86  ECF6  F00D         	call	_SPIWriteByte
  3938                           
  3939                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  3940   001C8A  5002               	movf	SPIWrite2Byte@dato^0,w,c
  3941   001C8C  ECF6  F00D         	call	_SPIWriteByte
  3942   001C90  0012               	return		;funcret
  3943   001C92                     __end_of_SPIWrite2Byte:
  3944                           	callstack 0
  3945                           
  3946 ;; *************** function _SPIWriteByte *****************
  3947 ;; Defined at:
  3948 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  dato            1    wreg     unsigned char 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  dato            1    0[COMRAM] unsigned char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  1    wreg      void 
  3955 ;; Registers used:
  3956 ;;		wreg
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;Total ram usage:        1 bytes
  3967 ;; Hardware stack levels used: 1
  3968 ;; Hardware stack levels required when called: 1
  3969 ;; This function calls:
  3970 ;;		Nothing
  3971 ;; This function is called by:
  3972 ;;		_WriteByteSPIPort
  3973 ;;		_SPIWrite2Byte
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text23
  3978   001BEC                     __ptext23:
  3979                           	callstack 0
  3980   001BEC                     _SPIWriteByte:
  3981                           	callstack 25
  3982                           
  3983                           ;incstack = 0
  3984                           ;SPIWriteByte@dato stored from wreg
  3985   001BEC  6E01               	movwf	SPIWriteByte@dato^0,c
  3986   001BEE                     
  3987                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  3988   001BEE  969E               	bcf	158,3,c	;volatile
  3989   001BF0                     
  3990                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  3991   001BF0  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  3992   001BF4                     l188:
  3993   001BF4  A69E               	btfss	158,3,c	;volatile
  3994   001BF6  EFFF  F00D         	goto	u471
  3995   001BFA  EF01  F00E         	goto	u470
  3996   001BFE                     u471:
  3997   001BFE  EFFA  F00D         	goto	l188
  3998   001C02                     u470:
  3999   001C02  0012               	return		;funcret
  4000   001C04                     __end_of_SPIWriteByte:
  4001                           	callstack 0
  4002                           
  4003 ;; *************** function _SetCSPin *****************
  4004 ;; Defined at:
  4005 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;  estado          1    wreg     _Bool 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  estado          1    0[COMRAM] _Bool 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;Total ram usage:        1 bytes
  4024 ;; Hardware stack levels used: 1
  4025 ;; Hardware stack levels required when called: 1
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		_InicializoPines
  4030 ;;		_SetShortAddr
  4031 ;;		_GetShortAddr
  4032 ;;		_SetLongAddr
  4033 ;;		_GetLongAddr
  4034 ;; This function uses a non-reentrant model
  4035 ;;
  4036                           
  4037                           	psect	text24
  4038   001C92                     __ptext24:
  4039                           	callstack 0
  4040   001C92                     _SetCSPin:
  4041                           	callstack 26
  4042                           
  4043                           ;incstack = 0
  4044                           ;SetCSPin@estado stored from wreg
  4045   001C92  6E01               	movwf	SetCSPin@estado^0,c
  4046   001C94                     
  4047                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  4048   001C94  B001               	btfsc	SetCSPin@estado^0,0,c
  4049   001C96  D002               	bra	u485
  4050   001C98  9C8B               	bcf	139,6,c	;volatile
  4051   001C9A  D001               	bra	u486
  4052   001C9C                     u485:
  4053   001C9C  8C8B               	bsf	139,6,c	;volatile
  4054   001C9E                     u486:
  4055   001C9E  0012               	return		;funcret
  4056   001CA0                     __end_of_SetCSPin:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _ReadByteSPIPort *****************
  4060 ;; Defined at:
  4061 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      unsigned char 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;Total ram usage:        0 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; Hardware stack levels required when called: 2
  4082 ;; This function calls:
  4083 ;;		_SPIRead
  4084 ;; This function is called by:
  4085 ;;		_GetShortAddr
  4086 ;;		_GetLongAddr
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           	psect	text25
  4091   001CC2                     __ptext25:
  4092                           	callstack 0
  4093   001CC2                     _ReadByteSPIPort:
  4094                           	callstack 26
  4095   001CC2                     
  4096                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  4097   001CC2  EC0E  F00E         	call	_SPIRead	;wreg free
  4098   001CC6  0012               	return		;funcret
  4099   001CC8                     __end_of_ReadByteSPIPort:
  4100                           	callstack 0
  4101                           
  4102 ;; *************** function _SPIRead *****************
  4103 ;; Defined at:
  4104 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      unsigned char 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;Total ram usage:        0 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; Hardware stack levels required when called: 1
  4125 ;; This function calls:
  4126 ;;		Nothing
  4127 ;; This function is called by:
  4128 ;;		_ReadByteSPIPort
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text26
  4133   001C1C                     __ptext26:
  4134                           	callstack 0
  4135   001C1C                     _SPIRead:
  4136                           	callstack 26
  4137   001C1C                     
  4138                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  4139   001C1C  9EC6               	bcf	198,7,c	;volatile
  4140                           
  4141                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  4142   001C1E  6AC9               	clrf	201,c	;volatile
  4143   001C20                     l197:
  4144   001C20  A0C7               	btfss	199,0,c	;volatile
  4145   001C22  EF15  F00E         	goto	u491
  4146   001C26  EF17  F00E         	goto	u490
  4147   001C2A                     u491:
  4148   001C2A  EF10  F00E         	goto	l197
  4149   001C2E                     u490:
  4150   001C2E                     
  4151                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  4152   001C2E  50C9               	movf	201,w,c	;volatile
  4153   001C30  0012               	return		;funcret
  4154   001C32                     __end_of_SPIRead:
  4155                           	callstack 0
  4156                           
  4157 ;; *************** function _DelayReset *****************
  4158 ;; Defined at:
  4159 ;;		line 68 in file "drivers/scr/API_delay.c"
  4160 ;; Parameters:    Size  Location     Type
  4161 ;;  delay           1    0[COMRAM] PTR struct .
  4162 ;;		 -> InicializoMRF24@delay_time_out(9), 
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  1    wreg      void 
  4167 ;; Registers used:
  4168 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4174 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;Total ram usage:        1 bytes
  4179 ;; Hardware stack levels used: 1
  4180 ;; Hardware stack levels required when called: 1
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_InicializoMRF24
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           	psect	text27
  4189   001BA6                     __ptext27:
  4190                           	callstack 0
  4191   001BA6                     _DelayReset:
  4192                           	callstack 27
  4193   001BA6                     
  4194                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  4195   001BA6  5001               	movf	DelayReset@delay^0,w,c
  4196   001BA8  6ED9               	movwf	fsr2l,c
  4197   001BAA  6ADA               	clrf	fsr2h,c
  4198   001BAC  C04C  FFDE         	movff	_timeStamp,postinc2
  4199   001BB0  C04D  FFDE         	movff	_timeStamp+1,postinc2
  4200   001BB4  C04E  FFDE         	movff	_timeStamp+2,postinc2
  4201   001BB8  C04F  FFDE         	movff	_timeStamp+3,postinc2
  4202   001BBC                     
  4203                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  4204   001BBC  5001               	movf	DelayReset@delay^0,w,c
  4205   001BBE  6ED9               	movwf	fsr2l,c
  4206   001BC0  6ADA               	clrf	fsr2h,c
  4207   001BC2  0E08               	movlw	8
  4208   001BC4  26D9               	addwf	fsr2l,f,c
  4209   001BC6  0E01               	movlw	1
  4210   001BC8  6EDF               	movwf	indf2,c
  4211   001BCA  0012               	return		;funcret
  4212   001BCC                     __end_of_DelayReset:
  4213                           	callstack 0
  4214                           
  4215 ;; *************** function _MRF24IsNewMsg *****************
  4216 ;; Defined at:
  4217 ;;		line 360 in file "drivers/scr/API_MRF24J40.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;		None
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;		None
  4222 ;; Return value:  Size  Location     Type
  4223 ;;                  1    wreg      enum E3263
  4224 ;; Registers used:
  4225 ;;		wreg, status,2, cstack
  4226 ;; Tracked objects:
  4227 ;;		On entry : 0/0
  4228 ;;		On exit  : 0/0
  4229 ;;		Unchanged: 0/0
  4230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;Total ram usage:        0 bytes
  4236 ;; Hardware stack levels used: 1
  4237 ;; Hardware stack levels required when called: 2
  4238 ;; This function calls:
  4239 ;;		_IsMRF24Interrup
  4240 ;; This function is called by:
  4241 ;;		_main
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           
  4245                           	psect	text28
  4246   0019DC                     __ptext28:
  4247                           	callstack 0
  4248   0019DC                     _MRF24IsNewMsg:
  4249                           	callstack 28
  4250   0019DC                     
  4251                           ;drivers/scr/API_MRF24J40.c: 362:  if(estadoActual != INICIALIZACION_OK)
  4252   0019DC  5050               	movf	_estadoActual^0,w,c
  4253   0019DE  B4D8               	btfsc	status,2,c
  4254   0019E0  EFF4  F00C         	goto	u751
  4255   0019E4  EFF6  F00C         	goto	u750
  4256   0019E8                     u751:
  4257   0019E8  EFF9  F00C         	goto	l2079
  4258   0019EC                     u750:
  4259   0019EC                     
  4260                           ;drivers/scr/API_MRF24J40.c: 363:   return ERROR_INESPERADO;
  4261   0019EC  0E08               	movlw	8
  4262   0019EE  EF07  F00D         	goto	l155
  4263   0019F2                     l2079:
  4264                           
  4265                           ;drivers/scr/API_MRF24J40.c: 365:  if(!IsMRF24Interrup())
  4266   0019F2  EC23  F00E         	call	_IsMRF24Interrup	;wreg free
  4267   0019F6  0900               	iorlw	0
  4268   0019F8  A4D8               	btfss	status,2,c
  4269   0019FA  EF01  F00D         	goto	u761
  4270   0019FE  EF03  F00D         	goto	u760
  4271   001A02                     u761:
  4272   001A02  EF06  F00D         	goto	l2085
  4273   001A06                     u760:
  4274   001A06                     
  4275                           ;drivers/scr/API_MRF24J40.c: 366:   return MSG_PRESENTE;
  4276   001A06  0E02               	movlw	2
  4277   001A08  EF07  F00D         	goto	l155
  4278   001A0C                     l2085:
  4279                           
  4280                           ;drivers/scr/API_MRF24J40.c: 367:  return MSG_NO_PRESENTE;
  4281   001A0C  0E03               	movlw	3
  4282   001A0E                     l155:
  4283   001A0E  0012               	return		;funcret
  4284   001A10                     __end_of_MRF24IsNewMsg:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function _IsMRF24Interrup *****************
  4288 ;; Defined at:
  4289 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      _Bool 
  4296 ;; Registers used:
  4297 ;;		wreg
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 1
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_MRF24IsNewMsg
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text29
  4318   001C46                     __ptext29:
  4319                           	callstack 0
  4320   001C46                     _IsMRF24Interrup:
  4321                           	callstack 28
  4322   001C46                     
  4323                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  4324   001C46  B081               	btfsc	129,0,c	;volatile
  4325   001C48  EF28  F00E         	goto	u611
  4326   001C4C  EF2B  F00E         	goto	u610
  4327   001C50                     u611:
  4328   001C50  0E01               	movlw	1
  4329   001C52  EF2C  F00E         	goto	u616
  4330   001C56                     u610:
  4331   001C56  0E00               	movlw	0
  4332   001C58                     u616:
  4333   001C58  0012               	return		;funcret
  4334   001C5A                     __end_of_IsMRF24Interrup:
  4335                           	callstack 0
  4336                           
  4337 ;; *************** function _MRF24GetDataIn *****************
  4338 ;; Defined at:
  4339 ;;		line 413 in file "drivers/scr/API_MRF24J40.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;		None
  4342 ;; Auto vars:     Size  Location     Type
  4343 ;;		None
  4344 ;; Return value:  Size  Location     Type
  4345 ;;                  2    0[COMRAM] PTR struct .
  4346 ;; Registers used:
  4347 ;;		wreg, status,2, status,0
  4348 ;; Tracked objects:
  4349 ;;		On entry : 0/0
  4350 ;;		On exit  : 0/0
  4351 ;;		Unchanged: 0/0
  4352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;Total ram usage:        2 bytes
  4358 ;; Hardware stack levels used: 1
  4359 ;; Hardware stack levels required when called: 1
  4360 ;; This function calls:
  4361 ;;		Nothing
  4362 ;; This function is called by:
  4363 ;;		_main
  4364 ;; This function uses a non-reentrant model
  4365 ;;
  4366                           
  4367                           	psect	text30
  4368   001CB8                     __ptext30:
  4369                           	callstack 0
  4370   001CB8                     _MRF24GetDataIn:
  4371                           	callstack 29
  4372   001CB8                     
  4373                           ;drivers/scr/API_MRF24J40.c: 415:  return &data_in_s;
  4374   001CB8  0E38               	movlw	low _data_in_s
  4375   001CBA  6E01               	movwf	?_MRF24GetDataIn^0,c
  4376   001CBC  0E01               	movlw	high _data_in_s
  4377   001CBE  6E02               	movwf	(?_MRF24GetDataIn+1)^0,c
  4378   001CC0  0012               	return		;funcret
  4379   001CC2                     __end_of_MRF24GetDataIn:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _DebounceFSMUpdate *****************
  4383 ;; Defined at:
  4384 ;;		line 34 in file "drivers/scr/API_debounce.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  antirrebote_    1   14[COMRAM] PTR struct .
  4387 ;;		 -> main@boton1(11), 
  4388 ;;  estado_pin      1   15[COMRAM] _Bool 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;		None
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      enum E2763
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;Total ram usage:        4 bytes
  4405 ;; Hardware stack levels used: 1
  4406 ;; Hardware stack levels required when called: 3
  4407 ;; This function calls:
  4408 ;;		_DebounceFSMInit
  4409 ;;		_DelayRead
  4410 ;; This function is called by:
  4411 ;;		_main
  4412 ;; This function uses a non-reentrant model
  4413 ;;
  4414                           
  4415                           	psect	text31
  4416   0013F0                     __ptext31:
  4417                           	callstack 0
  4418   0013F0                     _DebounceFSMUpdate:
  4419                           	callstack 27
  4420   0013F0                     
  4421                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  4422   0013F0  EF72  F00A         	goto	l2167
  4423   0013F4                     l2115:
  4424                           
  4425                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  4426   0013F4  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4427   0013F6  A4D8               	btfss	status,2,c
  4428   0013F8  EF00  F00A         	goto	u791
  4429   0013FC  EF02  F00A         	goto	u790
  4430   001400                     u791:
  4431   001400  EF94  F00A         	goto	l2169
  4432   001404                     u790:
  4433   001404                     
  4434                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  4435   001404  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4436   001406  6ED9               	movwf	fsr2l,c
  4437   001408  6ADA               	clrf	fsr2h,c
  4438   00140A  0E01               	movlw	1
  4439   00140C  26D9               	addwf	fsr2l,f,c
  4440   00140E  0E01               	movlw	1
  4441   001410  6EDF               	movwf	indf2,c
  4442   001412  EF94  F00A         	goto	l2169
  4443   001416                     l2119:
  4444                           
  4445                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4446   001416  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4447   001418  0F02               	addlw	2
  4448   00141A  6E02               	movwf	DelayRead@delay^0,c
  4449   00141C  EC79  F00B         	call	_DelayRead	;wreg free
  4450   001420  0900               	iorlw	0
  4451   001422  B4D8               	btfsc	status,2,c
  4452   001424  EF16  F00A         	goto	u801
  4453   001428  EF18  F00A         	goto	u800
  4454   00142C                     u801:
  4455   00142C  EF94  F00A         	goto	l2169
  4456   001430                     u800:
  4457   001430                     
  4458                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  4459   001430  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4460   001432  A4D8               	btfss	status,2,c
  4461   001434  EF1E  F00A         	goto	u811
  4462   001438  EF20  F00A         	goto	u810
  4463   00143C                     u811:
  4464   00143C  EF2A  F00A         	goto	l2131
  4465   001440                     u810:
  4466   001440                     
  4467                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4468   001440  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4469   001442  6ED9               	movwf	fsr2l,c
  4470   001444  6ADA               	clrf	fsr2h,c
  4471   001446  0E01               	movlw	1
  4472   001448  26D9               	addwf	fsr2l,f,c
  4473   00144A  0E02               	movlw	2
  4474   00144C  6EDF               	movwf	indf2,c
  4475   00144E                     
  4476                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  4477   00144E  0E01               	movlw	1
  4478   001450  EF95  F00A         	goto	l239
  4479   001454                     l2131:
  4480                           
  4481                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4482   001454  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4483   001456  6ED9               	movwf	fsr2l,c
  4484   001458  6ADA               	clrf	fsr2h,c
  4485   00145A  0E01               	movlw	1
  4486   00145C  26D9               	addwf	fsr2l,f,c
  4487   00145E  6ADF               	clrf	indf2,c
  4488   001460                     l2133:
  4489                           
  4490                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  4491   001460  0E04               	movlw	4
  4492   001462  EF95  F00A         	goto	l239
  4493   001466                     l2137:
  4494                           
  4495                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4496   001466  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4497   001468  0F02               	addlw	2
  4498   00146A  6E02               	movwf	DelayRead@delay^0,c
  4499   00146C  EC79  F00B         	call	_DelayRead	;wreg free
  4500   001470  0900               	iorlw	0
  4501   001472  B4D8               	btfsc	status,2,c
  4502   001474  EF3E  F00A         	goto	u821
  4503   001478  EF40  F00A         	goto	u820
  4504   00147C                     u821:
  4505   00147C  EF94  F00A         	goto	l2169
  4506   001480                     u820:
  4507   001480                     
  4508                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  4509   001480  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4510   001482  B4D8               	btfsc	status,2,c
  4511   001484  EF46  F00A         	goto	u831
  4512   001488  EF48  F00A         	goto	u830
  4513   00148C                     u831:
  4514   00148C  EF51  F00A         	goto	l2149
  4515   001490                     u830:
  4516   001490                     
  4517                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4518   001490  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4519   001492  6ED9               	movwf	fsr2l,c
  4520   001494  6ADA               	clrf	fsr2h,c
  4521   001496  0E01               	movlw	1
  4522   001498  26D9               	addwf	fsr2l,f,c
  4523   00149A  6ADF               	clrf	indf2,c
  4524   00149C                     
  4525                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  4526   00149C  0E02               	movlw	2
  4527   00149E  EF95  F00A         	goto	l239
  4528   0014A2                     l2149:
  4529                           
  4530                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4531   0014A2  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4532   0014A4  6ED9               	movwf	fsr2l,c
  4533   0014A6  6ADA               	clrf	fsr2h,c
  4534   0014A8  0E01               	movlw	1
  4535   0014AA  26D9               	addwf	fsr2l,f,c
  4536   0014AC  0E02               	movlw	2
  4537   0014AE  6EDF               	movwf	indf2,c
  4538   0014B0  EF30  F00A         	goto	l2133
  4539   0014B4                     l2155:
  4540                           
  4541                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  4542   0014B4  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4543   0014B6  B4D8               	btfsc	status,2,c
  4544   0014B8  EF60  F00A         	goto	u841
  4545   0014BC  EF62  F00A         	goto	u840
  4546   0014C0                     u841:
  4547   0014C0  EF94  F00A         	goto	l2169
  4548   0014C4                     u840:
  4549   0014C4                     
  4550                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  4551   0014C4  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4552   0014C6  6ED9               	movwf	fsr2l,c
  4553   0014C8  6ADA               	clrf	fsr2h,c
  4554   0014CA  0E01               	movlw	1
  4555   0014CC  26D9               	addwf	fsr2l,f,c
  4556   0014CE  0E03               	movlw	3
  4557   0014D0  6EDF               	movwf	indf2,c
  4558   0014D2  EF94  F00A         	goto	l2169
  4559   0014D6                     l2159:
  4560                           
  4561                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  4562   0014D6  C00F  F006         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  4563   0014DA  EC3A  F00D         	call	_DebounceFSMInit	;wreg free
  4564   0014DE                     
  4565                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  4566   0014DE  0E00               	movlw	0
  4567   0014E0  EF95  F00A         	goto	l239
  4568   0014E4                     l2167:
  4569   0014E4  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4570   0014E6  6ED9               	movwf	fsr2l,c
  4571   0014E8  6ADA               	clrf	fsr2h,c
  4572   0014EA  0E01               	movlw	1
  4573   0014EC  26D9               	addwf	fsr2l,f,c
  4574   0014EE  50DF               	movf	indf2,w,c
  4575   0014F0  6E11               	movwf	??_DebounceFSMUpdate^0,c
  4576   0014F2  6A12               	clrf	(??_DebounceFSMUpdate+1)^0,c
  4577                           
  4578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4579                           ; Switch size 1, requested type "simple"
  4580                           ; Number of cases is 1, Range of values is 0 to 0
  4581                           ; switch strategies available:
  4582                           ; Name         Instructions Cycles
  4583                           ; simple_byte            4     3 (average)
  4584                           ;	Chosen strategy is simple_byte
  4585   0014F4  5012               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  4586   0014F6  0A00               	xorlw	0	; case 0
  4587   0014F8  B4D8               	btfsc	status,2,c
  4588   0014FA  EF81  F00A         	goto	l2307
  4589   0014FE  EF6B  F00A         	goto	l2159
  4590   001502                     l2307:
  4591                           
  4592                           ; Switch size 1, requested type "simple"
  4593                           ; Number of cases is 4, Range of values is 0 to 3
  4594                           ; switch strategies available:
  4595                           ; Name         Instructions Cycles
  4596                           ; simple_byte           13     7 (average)
  4597                           ;	Chosen strategy is simple_byte
  4598   001502  5011               	movf	??_DebounceFSMUpdate^0,w,c
  4599   001504  0A00               	xorlw	0	; case 0
  4600   001506  B4D8               	btfsc	status,2,c
  4601   001508  EFFA  F009         	goto	l2115
  4602   00150C  0A01               	xorlw	1	; case 1
  4603   00150E  B4D8               	btfsc	status,2,c
  4604   001510  EF0B  F00A         	goto	l2119
  4605   001514  0A03               	xorlw	3	; case 2
  4606   001516  B4D8               	btfsc	status,2,c
  4607   001518  EF5A  F00A         	goto	l2155
  4608   00151C  0A01               	xorlw	1	; case 3
  4609   00151E  B4D8               	btfsc	status,2,c
  4610   001520  EF33  F00A         	goto	l2137
  4611   001524  EF6B  F00A         	goto	l2159
  4612   001528                     l2169:
  4613                           
  4614                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  4615   001528  0E03               	movlw	3
  4616   00152A                     l239:
  4617   00152A  0012               	return		;funcret
  4618   00152C                     __end_of_DebounceFSMUpdate:
  4619                           	callstack 0
  4620                           
  4621 ;; *************** function _DelayRead *****************
  4622 ;; Defined at:
  4623 ;;		line 34 in file "drivers/scr/API_delay.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;  delay           1    1[COMRAM] PTR struct .
  4626 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4627 ;; Auto vars:     Size  Location     Type
  4628 ;;		None
  4629 ;; Return value:  Size  Location     Type
  4630 ;;                  1    wreg      _Bool 
  4631 ;; Registers used:
  4632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4633 ;; Tracked objects:
  4634 ;;		On entry : 0/0
  4635 ;;		On exit  : 0/0
  4636 ;;		Unchanged: 0/0
  4637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4638 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4640 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;Total ram usage:       13 bytes
  4643 ;; Hardware stack levels used: 1
  4644 ;; Hardware stack levels required when called: 2
  4645 ;; This function calls:
  4646 ;;		_DelayIsRunning
  4647 ;; This function is called by:
  4648 ;;		_InicializoMRF24
  4649 ;;		_DebounceFSMUpdate
  4650 ;;		_main
  4651 ;; This function uses a non-reentrant model
  4652 ;;
  4653                           
  4654                           	psect	text32
  4655   0016F2                     __ptext32:
  4656                           	callstack 0
  4657   0016F2                     _DelayRead:
  4658                           	callstack 26
  4659   0016F2                     
  4660                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  4661   0016F2  C002  F001         	movff	DelayRead@delay,DelayIsRunning@delay
  4662   0016F6  EC50  F00E         	call	_DelayIsRunning	;wreg free
  4663   0016FA  0900               	iorlw	0
  4664   0016FC  A4D8               	btfss	status,2,c
  4665   0016FE  EF83  F00B         	goto	u561
  4666   001702  EF85  F00B         	goto	u560
  4667   001706                     u561:
  4668   001706  EF99  F00B         	goto	l1811
  4669   00170A                     u560:
  4670   00170A                     
  4671                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  4672   00170A  5002               	movf	DelayRead@delay^0,w,c
  4673   00170C  6ED9               	movwf	fsr2l,c
  4674   00170E  6ADA               	clrf	fsr2h,c
  4675   001710  C04C  FFDE         	movff	_timeStamp,postinc2
  4676   001714  C04D  FFDE         	movff	_timeStamp+1,postinc2
  4677   001718  C04E  FFDE         	movff	_timeStamp+2,postinc2
  4678   00171C  C04F  FFDE         	movff	_timeStamp+3,postinc2
  4679   001720                     
  4680                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  4681   001720  5002               	movf	DelayRead@delay^0,w,c
  4682   001722  6ED9               	movwf	fsr2l,c
  4683   001724  6ADA               	clrf	fsr2h,c
  4684   001726  0E08               	movlw	8
  4685   001728  26D9               	addwf	fsr2l,f,c
  4686   00172A  0E01               	movlw	1
  4687   00172C  6EDF               	movwf	indf2,c
  4688                           
  4689                           ;drivers/scr/API_delay.c: 40:  } else {
  4690   00172E  EFCD  F00B         	goto	l1819
  4691   001732                     l1811:
  4692                           
  4693                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  4694   001732  5002               	movf	DelayRead@delay^0,w,c
  4695   001734  6ED9               	movwf	fsr2l,c
  4696   001736  6ADA               	clrf	fsr2h,c
  4697   001738  0E04               	movlw	4
  4698   00173A  26D9               	addwf	fsr2l,f,c
  4699   00173C  5002               	movf	DelayRead@delay^0,w,c
  4700   00173E  6EE1               	movwf	fsr1l,c
  4701   001740  6AE2               	clrf	fsr1h,c
  4702   001742  CFE6 F007          	movff	postinc1,??_DelayRead+4
  4703   001746  CFE6 F008          	movff	postinc1,??_DelayRead+5
  4704   00174A  CFE6 F009          	movff	postinc1,??_DelayRead+6
  4705   00174E  CFE6 F00A          	movff	postinc1,??_DelayRead+7
  4706   001752  5007               	movf	(??_DelayRead+4)^0,w,c
  4707   001754  5C4C               	subwf	_timeStamp^0,w,c
  4708   001756  6E0B               	movwf	(??_DelayRead+8)^0,c
  4709   001758  5008               	movf	(??_DelayRead+5)^0,w,c
  4710   00175A  584D               	subwfb	(_timeStamp+1)^0,w,c
  4711   00175C  6E0C               	movwf	(??_DelayRead+9)^0,c
  4712   00175E  5009               	movf	(??_DelayRead+6)^0,w,c
  4713   001760  584E               	subwfb	(_timeStamp+2)^0,w,c
  4714   001762  6E0D               	movwf	(??_DelayRead+10)^0,c
  4715   001764  500A               	movf	(??_DelayRead+7)^0,w,c
  4716   001766  584F               	subwfb	(_timeStamp+3)^0,w,c
  4717   001768  6E0E               	movwf	(??_DelayRead+11)^0,c
  4718   00176A  50DE               	movf	postinc2,w,c
  4719   00176C  5C0B               	subwf	(??_DelayRead+8)^0,w,c
  4720   00176E  50DE               	movf	postinc2,w,c
  4721   001770  580C               	subwfb	(??_DelayRead+9)^0,w,c
  4722   001772  50DE               	movf	postinc2,w,c
  4723   001774  580D               	subwfb	(??_DelayRead+10)^0,w,c
  4724   001776  50DE               	movf	postinc2,w,c
  4725   001778  580E               	subwfb	(??_DelayRead+11)^0,w,c
  4726   00177A  A0D8               	btfss	status,0,c
  4727   00177C  EFC2  F00B         	goto	u571
  4728   001780  EFC4  F00B         	goto	u570
  4729   001784                     u571:
  4730   001784  EFCD  F00B         	goto	l1819
  4731   001788                     u570:
  4732   001788                     
  4733                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  4734   001788  5002               	movf	DelayRead@delay^0,w,c
  4735   00178A  6ED9               	movwf	fsr2l,c
  4736   00178C  6ADA               	clrf	fsr2h,c
  4737   00178E  0E08               	movlw	8
  4738   001790  26D9               	addwf	fsr2l,f,c
  4739   001792  6ADF               	clrf	indf2,c
  4740   001794                     
  4741                           ;drivers/scr/API_delay.c: 45:    return 1;
  4742   001794  0E01               	movlw	1
  4743   001796  EFCE  F00B         	goto	l213
  4744   00179A                     l1819:
  4745                           
  4746                           ;drivers/scr/API_delay.c: 48:  return 0;
  4747   00179A  0E00               	movlw	0
  4748   00179C                     l213:
  4749   00179C  0012               	return		;funcret
  4750   00179E                     __end_of_DelayRead:
  4751                           	callstack 0
  4752                           
  4753 ;; *************** function _DelayIsRunning *****************
  4754 ;; Defined at:
  4755 ;;		line 83 in file "drivers/scr/API_delay.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  delay           1    0[COMRAM] PTR struct .
  4758 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      _Bool 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4770 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;Total ram usage:        1 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 1
  4777 ;; This function calls:
  4778 ;;		Nothing
  4779 ;; This function is called by:
  4780 ;;		_DelayRead
  4781 ;; This function uses a non-reentrant model
  4782 ;;
  4783                           
  4784                           	psect	text33
  4785   001CA0                     __ptext33:
  4786                           	callstack 0
  4787   001CA0                     _DelayIsRunning:
  4788                           	callstack 26
  4789   001CA0                     
  4790                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  4791   001CA0  5001               	movf	DelayIsRunning@delay^0,w,c
  4792   001CA2  6ED9               	movwf	fsr2l,c
  4793   001CA4  6ADA               	clrf	fsr2h,c
  4794   001CA6  0E08               	movlw	8
  4795   001CA8  26D9               	addwf	fsr2l,f,c
  4796   001CAA  50DF               	movf	indf2,w,c
  4797   001CAC  0012               	return		;funcret
  4798   001CAE                     __end_of_DelayIsRunning:
  4799                           	callstack 0
  4800                           
  4801 ;; *************** function _DebounceFSMInit *****************
  4802 ;; Defined at:
  4803 ;;		line 19 in file "drivers/scr/API_debounce.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;  antirrebote_    1    5[COMRAM] PTR struct .
  4806 ;;		 -> main@boton1(11), 
  4807 ;; Auto vars:     Size  Location     Type
  4808 ;;		None
  4809 ;; Return value:  Size  Location     Type
  4810 ;;                  1    wreg      void 
  4811 ;; Registers used:
  4812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4813 ;; Tracked objects:
  4814 ;;		On entry : 0/0
  4815 ;;		On exit  : 0/0
  4816 ;;		Unchanged: 0/0
  4817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4818 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4822 ;;Total ram usage:        1 bytes
  4823 ;; Hardware stack levels used: 1
  4824 ;; Hardware stack levels required when called: 2
  4825 ;; This function calls:
  4826 ;;		_DelayInit
  4827 ;; This function is called by:
  4828 ;;		_DebounceFSMUpdate
  4829 ;;		_main
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text34
  4834   001A74                     __ptext34:
  4835                           	callstack 0
  4836   001A74                     _DebounceFSMInit:
  4837                           	callstack 27
  4838   001A74                     
  4839                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  4840   001A74  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4841   001A76  6ED9               	movwf	fsr2l,c
  4842   001A78  6ADA               	clrf	fsr2h,c
  4843   001A7A  0E01               	movlw	1
  4844   001A7C  26D9               	addwf	fsr2l,f,c
  4845   001A7E  6ADF               	clrf	indf2,c
  4846   001A80                     
  4847                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  4848   001A80  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4849   001A82  0F02               	addlw	2
  4850   001A84  6E01               	movwf	DelayInit@delay^0,c
  4851   001A86  0E28               	movlw	40
  4852   001A88  6E02               	movwf	DelayInit@duration^0,c
  4853   001A8A  0E00               	movlw	0
  4854   001A8C  6E03               	movwf	(DelayInit@duration+1)^0,c
  4855   001A8E  0E00               	movlw	0
  4856   001A90  6E04               	movwf	(DelayInit@duration+2)^0,c
  4857   001A92  0E00               	movlw	0
  4858   001A94  6E05               	movwf	(DelayInit@duration+3)^0,c
  4859   001A96  ECAC  F00D         	call	_DelayInit	;wreg free
  4860   001A9A                     
  4861                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  4862   001A9A  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4863   001A9C  6ED9               	movwf	fsr2l,c
  4864   001A9E  6ADA               	clrf	fsr2h,c
  4865   001AA0  6ADF               	clrf	indf2,c
  4866   001AA2  0012               	return		;funcret
  4867   001AA4                     __end_of_DebounceFSMInit:
  4868                           	callstack 0
  4869                           
  4870 ;; *************** function _DelayInit *****************
  4871 ;; Defined at:
  4872 ;;		line 22 in file "drivers/scr/API_delay.c"
  4873 ;; Parameters:    Size  Location     Type
  4874 ;;  delay           1    0[COMRAM] PTR struct .
  4875 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4876 ;;  duration        4    1[COMRAM] unsigned long 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4888 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;Total ram usage:        5 bytes
  4893 ;; Hardware stack levels used: 1
  4894 ;; Hardware stack levels required when called: 1
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_InicializoMRF24
  4899 ;;		_DebounceFSMInit
  4900 ;;		_main
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text35
  4905   001B58                     __ptext35:
  4906                           	callstack 0
  4907   001B58                     _DelayInit:
  4908                           	callstack 27
  4909   001B58                     
  4910                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  4911   001B58  5001               	movf	DelayInit@delay^0,w,c
  4912   001B5A  6ED9               	movwf	fsr2l,c
  4913   001B5C  6ADA               	clrf	fsr2h,c
  4914   001B5E  0E04               	movlw	4
  4915   001B60  26D9               	addwf	fsr2l,f,c
  4916   001B62  C002  FFDE         	movff	DelayInit@duration,postinc2
  4917   001B66  C003  FFDE         	movff	DelayInit@duration+1,postinc2
  4918   001B6A  C004  FFDE         	movff	DelayInit@duration+2,postinc2
  4919   001B6E  C005  FFDE         	movff	DelayInit@duration+3,postinc2
  4920                           
  4921                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  4922   001B72  5001               	movf	DelayInit@delay^0,w,c
  4923   001B74  6ED9               	movwf	fsr2l,c
  4924   001B76  6ADA               	clrf	fsr2h,c
  4925   001B78  0E08               	movlw	8
  4926   001B7A  26D9               	addwf	fsr2l,f,c
  4927   001B7C  6ADF               	clrf	indf2,c
  4928   001B7E  0012               	return		;funcret
  4929   001B80                     __end_of_DelayInit:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _BoardInit *****************
  4933 ;; Defined at:
  4934 ;;		line 21 in file "hardware_config.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;		None
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  1    wreg      void 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, cstack
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;Total ram usage:        0 bytes
  4953 ;; Hardware stack levels used: 1
  4954 ;; Hardware stack levels required when called: 2
  4955 ;; This function calls:
  4956 ;;		_SPIInit
  4957 ;; This function is called by:
  4958 ;;		_main
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text36
  4963   001882                     __ptext36:
  4964                           	callstack 0
  4965   001882                     _BoardInit:
  4966                           	callstack 28
  4967   001882                     
  4968                           ;hardware_config.c: 23:     PORTA = 0;
  4969   001882  6A80               	clrf	128,c	;volatile
  4970                           
  4971                           ;hardware_config.c: 24:     PORTB = 0;
  4972   001884  6A81               	clrf	129,c	;volatile
  4973                           
  4974                           ;hardware_config.c: 25:     PORTC = 0;
  4975   001886  6A82               	clrf	130,c	;volatile
  4976                           
  4977                           ;hardware_config.c: 26:     PORTD = 0;
  4978   001888  6A83               	clrf	131,c	;volatile
  4979                           
  4980                           ;hardware_config.c: 27:     PORTE = 0;
  4981   00188A  6A84               	clrf	132,c	;volatile
  4982                           
  4983                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  4984   00188C  8C93               	bsf	147,6,c	;volatile
  4985                           
  4986                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  4987   00188E  8E93               	bsf	147,7,c	;volatile
  4988                           
  4989                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  4990   001890  9496               	bcf	150,2,c	;volatile
  4991                           
  4992                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  4993   001892  9096               	bcf	150,0,c	;volatile
  4994                           
  4995                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  4996   001894  9296               	bcf	150,1,c	;volatile
  4997                           
  4998                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  4999   001896  8494               	bsf	148,2,c	;volatile
  5000                           
  5001                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  5002   001898  848D               	bsf	141,2,c	;volatile
  5003                           
  5004                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  5005   00189A  808D               	bsf	141,0,c	;volatile
  5006                           
  5007                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  5008   00189C  828D               	bsf	141,1,c	;volatile
  5009                           
  5010                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  5011   00189E  8093               	bsf	147,0,c	;volatile
  5012                           
  5013                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  5014   0018A0  9C94               	bcf	148,6,c	;volatile
  5015                           
  5016                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  5017   0018A2  9E94               	bcf	148,7,c	;volatile
  5018                           
  5019                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  5020   0018A4  9895               	bcf	149,4,c	;volatile
  5021                           
  5022                           ;hardware_config.c: 45:     IPEN = 0;
  5023   0018A6  9ED0               	bcf	4048,7,c	;volatile
  5024                           
  5025                           ;hardware_config.c: 46:  GIE = 1;
  5026   0018A8  8EF2               	bsf	4082,7,c	;volatile
  5027                           
  5028                           ;hardware_config.c: 47:  PEIE = 1;
  5029   0018AA  8CF2               	bsf	4082,6,c	;volatile
  5030                           
  5031                           ;hardware_config.c: 48:     INT0E = 0;
  5032   0018AC  98F2               	bcf	4082,4,c	;volatile
  5033                           
  5034                           ;hardware_config.c: 49:  RBIE = 0;
  5035   0018AE  96F2               	bcf	4082,3,c	;volatile
  5036                           
  5037                           ;hardware_config.c: 50:  T0IE = 0;
  5038   0018B0  9AF2               	bcf	4082,5,c	;volatile
  5039                           
  5040                           ;hardware_config.c: 51:  TMR1IE = 1;
  5041   0018B2  809D               	bsf	3997,0,c	;volatile
  5042                           
  5043                           ;hardware_config.c: 52:  TMR2IE = 0;
  5044   0018B4  929D               	bcf	3997,1,c	;volatile
  5045                           
  5046                           ;hardware_config.c: 53:  CCP1IE = 0;
  5047   0018B6  949D               	bcf	3997,2,c	;volatile
  5048                           
  5049                           ;hardware_config.c: 54:  CCP2IE = 0;
  5050   0018B8  90A0               	bcf	4000,0,c	;volatile
  5051                           
  5052                           ;hardware_config.c: 55:  EEIE = 0;
  5053   0018BA  98A0               	bcf	4000,4,c	;volatile
  5054                           
  5055                           ;hardware_config.c: 56:  SSPIE = 0;
  5056   0018BC  969D               	bcf	3997,3,c	;volatile
  5057                           
  5058                           ;hardware_config.c: 57:  BCLIE = 0;
  5059   0018BE  96A0               	bcf	4000,3,c	;volatile
  5060                           
  5061                           ;hardware_config.c: 58:  ADIE = 0;
  5062   0018C0  9C9D               	bcf	3997,6,c	;volatile
  5063                           
  5064                           ;hardware_config.c: 59:  RBIE = 0;
  5065   0018C2  96F2               	bcf	4082,3,c	;volatile
  5066                           
  5067                           ;hardware_config.c: 60:  RCIE = 0;
  5068   0018C4  9A9D               	bcf	3997,5,c	;volatile
  5069   0018C6                     
  5070                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  5071   0018C6  0E72               	movlw	114
  5072   0018C8  6ED3               	movwf	211,c	;volatile
  5073                           
  5074                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  5075   0018CA  0EDF               	movlw	223
  5076   0018CC  6E9B               	movwf	155,c	;volatile
  5077   0018CE                     
  5078                           ;hardware_config.c: 63:     RBPU = 1;
  5079   0018CE  8EF1               	bsf	4081,7,c	;volatile
  5080   0018D0                     
  5081                           ;hardware_config.c: 66:     T1RD16 = 0;
  5082   0018D0  9ECD               	bcf	4045,7,c	;volatile
  5083   0018D2                     
  5084                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  5085   0018D2  88CD               	bsf	4045,4,c	;volatile
  5086   0018D4                     
  5087                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  5088   0018D4  8ACD               	bsf	4045,5,c	;volatile
  5089   0018D6                     
  5090                           ;hardware_config.c: 69:  T1SYNC = 0;
  5091   0018D6  94CD               	bcf	4045,2,c	;volatile
  5092   0018D8                     
  5093                           ;hardware_config.c: 70:  T1OSCEN = 0;
  5094   0018D8  96CD               	bcf	4045,3,c	;volatile
  5095   0018DA                     
  5096                           ;hardware_config.c: 71:  TMR1CS = 0;
  5097   0018DA  92CD               	bcf	4045,1,c	;volatile
  5098   0018DC                     
  5099                           ;hardware_config.c: 72:  TMR1ON = 1;
  5100   0018DC  80CD               	bsf	4045,0,c	;volatile
  5101   0018DE                     
  5102                           ;hardware_config.c: 75:     SPIInit();
  5103   0018DE  EC02  F00E         	call	_SPIInit	;wreg free
  5104   0018E2  0012               	return		;funcret
  5105   0018E4                     __end_of_BoardInit:
  5106                           	callstack 0
  5107                           
  5108 ;; *************** function _SPIInit *****************
  5109 ;; Defined at:
  5110 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  5111 ;; Parameters:    Size  Location     Type
  5112 ;;		None
  5113 ;; Auto vars:     Size  Location     Type
  5114 ;;		None
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  1    wreg      void 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;Total ram usage:        0 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; Hardware stack levels required when called: 1
  5131 ;; This function calls:
  5132 ;;		Nothing
  5133 ;; This function is called by:
  5134 ;;		_BoardInit
  5135 ;; This function uses a non-reentrant model
  5136 ;;
  5137                           
  5138                           	psect	text37
  5139   001C04                     __ptext37:
  5140                           	callstack 0
  5141   001C04                     _SPIInit:
  5142                           	callstack 28
  5143   001C04                     
  5144                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  5145   001C04  9694               	bcf	148,3,c	;volatile
  5146                           
  5147                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  5148   001C06  9A94               	bcf	148,5,c	;volatile
  5149                           
  5150                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  5151   001C08  8894               	bsf	148,4,c	;volatile
  5152                           
  5153                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  5154   001C0A  8EC7               	bsf	199,7,c	;volatile
  5155                           
  5156                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  5157   001C0C  8CC7               	bsf	199,6,c	;volatile
  5158   001C0E                     
  5159                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  5160   001C0E  0E01               	movlw	1
  5161   001C10  6EC6               	movwf	198,c	;volatile
  5162   001C12                     
  5163                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  5164   001C12  8EC6               	bsf	198,7,c	;volatile
  5165   001C14                     
  5166                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  5167   001C14  9CC6               	bcf	198,6,c	;volatile
  5168   001C16                     
  5169                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  5170   001C16  8AC6               	bsf	198,5,c	;volatile
  5171   001C18                     
  5172                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  5173   001C18  98C6               	bcf	198,4,c	;volatile
  5174   001C1A  0012               	return		;funcret
  5175   001C1C                     __end_of_SPIInit:
  5176                           	callstack 0
  5177                           
  5178 ;; *************** function _isr *****************
  5179 ;; Defined at:
  5180 ;;		line 5 in file "drivers/inc/interrupciones.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;		None
  5183 ;; Auto vars:     Size  Location     Type
  5184 ;;		None
  5185 ;; Return value:  Size  Location     Type
  5186 ;;                  1    wreg      void 
  5187 ;; Registers used:
  5188 ;;		wreg, status,2, status,0
  5189 ;; Tracked objects:
  5190 ;;		On entry : 0/0
  5191 ;;		On exit  : 0/0
  5192 ;;		Unchanged: 0/0
  5193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5198 ;;Total ram usage:        0 bytes
  5199 ;; Hardware stack levels used: 1
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		Interrupt level 2
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	intcode
  5208   000008                     __pintcode:
  5209                           	callstack 0
  5210   000008                     _isr:
  5211                           	callstack 23
  5212                           
  5213                           ;incstack = 0
  5214   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5215   00000A                     
  5216                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  5217   00000A  A09D               	btfss	3997,0,c	;volatile
  5218   00000C  EF0A  F000         	goto	i2u91_41
  5219   000010  EF0C  F000         	goto	i2u91_40
  5220   000014                     i2u91_41:
  5221   000014  EF1E  F000         	goto	i2l383
  5222   000018                     i2u91_40:
  5223   000018  A09E               	btfss	3998,0,c	;volatile
  5224   00001A  EF11  F000         	goto	i2u92_41
  5225   00001E  EF13  F000         	goto	i2u92_40
  5226   000022                     i2u92_41:
  5227   000022  EF1E  F000         	goto	i2l383
  5228   000026                     i2u92_40:
  5229   000026                     
  5230                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  5231   000026  909E               	bcf	3998,0,c	;volatile
  5232   000028                     
  5233                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  5234   000028  0EF7               	movlw	247
  5235   00002A  6ECE               	movwf	206,c	;volatile
  5236                           
  5237                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  5238   00002C  0EFD               	movlw	253
  5239   00002E  6ECF               	movwf	207,c	;volatile
  5240   000030                     
  5241                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  5242   000030  0E01               	movlw	1
  5243   000032  264C               	addwf	_timeStamp^0,f,c
  5244   000034  0E00               	movlw	0
  5245   000036  224D               	addwfc	(_timeStamp+1)^0,f,c
  5246   000038  224E               	addwfc	(_timeStamp+2)^0,f,c
  5247   00003A  224F               	addwfc	(_timeStamp+3)^0,f,c
  5248   00003C                     i2l383:
  5249   00003C  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5250   00003E  0011               	retfie		f
  5251   000040                     __end_of_isr:
  5252                           	callstack 0
  5253                           
  5254                           	psect	rparam
  5255   000001                     ___rparam_used  equ	1
  5256   000000                     ___param_bank   equ	0
  5257   000000                     __Lparam        equ	__Lrparam
  5258   000000                     __Hparam        equ	__Hrparam
  5259                           
  5260                           	psect	temp
  5261   000052                     btemp:
  5262                           	callstack 0
  5263   000052                     	ds	1
  5264   000052                     int$flags       set	btemp
  5265   000053                     wtemp8          set	btemp+1
  5266   000053                     ttemp5          set	btemp+1
  5267   000056                     ttemp6          set	btemp+4
  5268   00005A                     ttemp7          set	btemp+8
  5269                           
  5270                           	psect	idloc
  5271                           
  5272                           ;Config register IDLOC0 @ 0x200000
  5273                           ;	unspecified, using default values
  5274   200000                     	org	2097152
  5275   200000  FF                 	db	255
  5276                           
  5277                           ;Config register IDLOC1 @ 0x200001
  5278                           ;	unspecified, using default values
  5279   200001                     	org	2097153
  5280   200001  FF                 	db	255
  5281                           
  5282                           ;Config register IDLOC2 @ 0x200002
  5283                           ;	unspecified, using default values
  5284   200002                     	org	2097154
  5285   200002  FF                 	db	255
  5286                           
  5287                           ;Config register IDLOC3 @ 0x200003
  5288                           ;	unspecified, using default values
  5289   200003                     	org	2097155
  5290   200003  FF                 	db	255
  5291                           
  5292                           ;Config register IDLOC4 @ 0x200004
  5293                           ;	unspecified, using default values
  5294   200004                     	org	2097156
  5295   200004  FF                 	db	255
  5296                           
  5297                           ;Config register IDLOC5 @ 0x200005
  5298                           ;	unspecified, using default values
  5299   200005                     	org	2097157
  5300   200005  FF                 	db	255
  5301                           
  5302                           ;Config register IDLOC6 @ 0x200006
  5303                           ;	unspecified, using default values
  5304   200006                     	org	2097158
  5305   200006  FF                 	db	255
  5306                           
  5307                           ;Config register IDLOC7 @ 0x200007
  5308                           ;	unspecified, using default values
  5309   200007                     	org	2097159
  5310   200007  FF                 	db	255
  5311                           
  5312                           	psect	config
  5313                           
  5314                           ; Padding undefined space
  5315   300000                     	org	3145728
  5316   300000  FF                 	db	255
  5317                           
  5318                           ;Config register CONFIG1H @ 0x300001
  5319                           ;	Oscillator Selection bits
  5320                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5321                           ;	Fail-Safe Clock Monitor Enable bit
  5322                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5323                           ;	Internal/External Oscillator Switchover bit
  5324                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5325   300001                     	org	3145729
  5326   300001  08                 	db	8
  5327                           
  5328                           ;Config register CONFIG2L @ 0x300002
  5329                           ;	Power-up Timer Enable bit
  5330                           ;	PWRT = 0x1, unprogrammed default
  5331                           ;	Brown-out Reset Enable bits
  5332                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5333                           ;	Brown Out Reset Voltage bits
  5334                           ;	BORV = 22, VBOR set to 2.2 V nominal
  5335   300002                     	org	3145730
  5336   300002  11                 	db	17
  5337                           
  5338                           ;Config register CONFIG2H @ 0x300003
  5339                           ;	Watchdog Timer Enable bit
  5340                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5341                           ;	Watchdog Timer Postscale Select bits
  5342                           ;	WDTPS = 8192, 1:8192
  5343   300003                     	org	3145731
  5344   300003  1A                 	db	26
  5345                           
  5346                           ; Padding undefined space
  5347   300004                     	org	3145732
  5348   300004  FF                 	db	255
  5349                           
  5350                           ;Config register CONFIG3H @ 0x300005
  5351                           ;	CCP2 MUX bit
  5352                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5353                           ;	PORTB A/D Enable bit
  5354                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5355                           ;	Low-Power Timer1 Oscillator Enable bit
  5356                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5357                           ;	HFINTOSC Fast Start-up
  5358                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  5359                           ;	MCLR Pin Enable bit
  5360                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5361   300005                     	org	3145733
  5362   300005  01                 	db	1
  5363                           
  5364                           ;Config register CONFIG4L @ 0x300006
  5365                           ;	Stack Full/Underflow Reset Enable bit
  5366                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5367                           ;	Single-Supply ICSP Enable bit
  5368                           ;	LVP = OFF, Single-Supply ICSP disabled
  5369                           ;	Extended Instruction Set Enable bit
  5370                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5371                           ;	Background Debugger Enable bit
  5372                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5373   300006                     	org	3145734
  5374   300006  80                 	db	128
  5375                           
  5376                           ; Padding undefined space
  5377   300007                     	org	3145735
  5378   300007  FF                 	db	255
  5379                           
  5380                           ;Config register CONFIG5L @ 0x300008
  5381                           ;	Code Protection Block 0
  5382                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5383                           ;	Code Protection Block 1
  5384                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5385                           ;	Code Protection Block 2
  5386                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5387                           ;	Code Protection Block 3
  5388                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5389   300008                     	org	3145736
  5390   300008  0F                 	db	15
  5391                           
  5392                           ;Config register CONFIG5H @ 0x300009
  5393                           ;	Boot Block Code Protection bit
  5394                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5395                           ;	Data EEPROM Code Protection bit
  5396                           ;	CPD = OFF, Data EEPROM not code-protected
  5397   300009                     	org	3145737
  5398   300009  C0                 	db	192
  5399                           
  5400                           ;Config register CONFIG6L @ 0x30000A
  5401                           ;	Write Protection Block 0
  5402                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5403                           ;	Write Protection Block 1
  5404                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5405                           ;	Write Protection Block 2
  5406                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5407                           ;	Write Protection Block 3
  5408                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5409   30000A                     	org	3145738
  5410   30000A  0F                 	db	15
  5411                           
  5412                           ;Config register CONFIG6H @ 0x30000B
  5413                           ;	Configuration Register Write Protection bit
  5414                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5415                           ;	Boot Block Write Protection bit
  5416                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5417                           ;	Data EEPROM Write Protection bit
  5418                           ;	WRTD = OFF, Data EEPROM not write-protected
  5419   30000B                     	org	3145739
  5420   30000B  E0                 	db	224
  5421                           
  5422                           ;Config register CONFIG7L @ 0x30000C
  5423                           ;	unspecified, using default values
  5424                           ;	Table Read Protection Block 0
  5425                           ;	EBTR0 = 0x1, unprogrammed default
  5426                           ;	Table Read Protection Block 1
  5427                           ;	EBTR1 = 0x1, unprogrammed default
  5428                           ;	Table Read Protection Block 2
  5429                           ;	EBTR2 = 0x1, unprogrammed default
  5430                           ;	Table Read Protection Block 3
  5431                           ;	EBTR3 = 0x1, unprogrammed default
  5432   30000C                     	org	3145740
  5433   30000C  0F                 	db	15
  5434                           
  5435                           ;Config register CONFIG7H @ 0x30000D
  5436                           ;	Boot Block Table Read Protection bit
  5437                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5438   30000D                     	org	3145741
  5439   30000D  40                 	db	64
  5440                           tosu	equ	0xFFF
  5441                           tosh	equ	0xFFE
  5442                           tosl	equ	0xFFD
  5443                           stkptr	equ	0xFFC
  5444                           pclatu	equ	0xFFB
  5445                           pclath	equ	0xFFA
  5446                           pcl	equ	0xFF9
  5447                           tblptru	equ	0xFF8
  5448                           tblptrh	equ	0xFF7
  5449                           tblptrl	equ	0xFF6
  5450                           tablat	equ	0xFF5
  5451                           prodh	equ	0xFF4
  5452                           prodl	equ	0xFF3
  5453                           indf0	equ	0xFEF
  5454                           postinc0	equ	0xFEE
  5455                           postdec0	equ	0xFED
  5456                           preinc0	equ	0xFEC
  5457                           plusw0	equ	0xFEB
  5458                           fsr0h	equ	0xFEA
  5459                           fsr0l	equ	0xFE9
  5460                           wreg	equ	0xFE8
  5461                           indf1	equ	0xFE7
  5462                           postinc1	equ	0xFE6
  5463                           postdec1	equ	0xFE5
  5464                           preinc1	equ	0xFE4
  5465                           plusw1	equ	0xFE3
  5466                           fsr1h	equ	0xFE2
  5467                           fsr1l	equ	0xFE1
  5468                           bsr	equ	0xFE0
  5469                           indf2	equ	0xFDF
  5470                           postinc2	equ	0xFDE
  5471                           postdec2	equ	0xFDD
  5472                           preinc2	equ	0xFDC
  5473                           plusw2	equ	0xFDB
  5474                           fsr2h	equ	0xFDA
  5475                           fsr2l	equ	0xFD9
  5476                           status	equ	0xFD8

Data Sizes:
    Strings     8
    Constant    24
    Data        0
    BSS         150
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      81
    BANK0           160     76     108
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(BANK0[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(BANK0[11]), 

    DelayInit@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(BANK0[11]), main@delay_parpadeo(BANK0[9]), 

    DelayIsRunning@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(BANK0[11]), main@delay_parpadeo(BANK0[9]), 

    DelayRead@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(BANK0[11]), main@delay_parpadeo(BANK0[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), 

    main@mrf24_data_in	PTR struct . size(2) Largest target is 56
		 -> data_in_s(BANK1[56]), 

    MRF24TransmitirDato@p_info_out_s	PTR struct . size(1) Largest target is 56
		 -> envio@data_out_s(COMRAM[56]), 

    sp__MRF24GetConfig	PTR struct . size(1) Largest target is 32
		 -> data_config_s(BANK0[32]), 

    sp__MRF24GetDataIn	PTR struct . size(2) Largest target is 56
		 -> data_in_s(BANK1[56]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 56
		 -> envio@data_out_s(COMRAM[56]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 32
		 -> data_config_s(BANK0[32]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 56
		 -> envio@data_out_s(COMRAM[56]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 56
		 -> envio@data_out_s(COMRAM[56]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 56
		 -> data_out_s$buffer(COMRAM[50]), envio@data_out_s(COMRAM[56]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 56
		 -> data_out_s$buffer(COMRAM[50]), envio@data_out_s(COMRAM[56]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 32
		 -> data_config_s(BANK0[32]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> data_config_s(BANK0[32]), 

    strncpy@s	PTR const unsigned char  size(1) Largest target is 16
		 -> default_mac_address(CODE[8]), default_security_key(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_envio
    _envio->_MRF24TransmitirDato
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_InicializoMRF24
    _InicializoVariables->_strncpy
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _InicializoMRF24->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _GetShortAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _GetLongAddr->_Write2ByteSPIPort
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                80    80      0    6151
                                             73 COMRAM     2     2      0
                                              0 BANK0     76    76      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
                     _MRF24GetDataIn
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
                              _envio
 ---------------------------------------------------------------------------------
 (1) _envio                                               56    56      0    1463
                                             17 COMRAM    56    56      0
                _MRF24TransmitirDato
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     2      2      75
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _MRF24TransmitirDato                                  7     6      1    1278
                                             10 COMRAM     7     6      1
                        _SetLongAddr
                       _SetShortAddr
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   9     9      0     995
                                             10 COMRAM     9     9      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         1     1      0    2528
                                             26 COMRAM     1     1      0
                    _InicializoMRF24
                    _InicializoPines
                _InicializoVariables
                        _SetResetPin
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  0     0      0     147
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              6     2      4     147
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      87
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InicializoMRF24                                     12    12      0    2265
                                             14 COMRAM    12    12      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceMACAddress                                  1     1      0     279
                                              4 COMRAM     1     1      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetChannel                                           1     1      0     487
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _SetLongAddr                                          5     2      3     298
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (4) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     200
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (4) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (5) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (5) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetDataIn                                       2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    4     2      2     610
                                             14 COMRAM     4     2      2
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (3) _DelayRead                                           13    12      1     160
                                              1 COMRAM    13    12      1
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (4) _DelayIsRunning                                       1     0      1      23
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      1     0      1     140
                                              5 COMRAM     1     0      1
                          _DelayInit
 ---------------------------------------------------------------------------------
 (3) _DelayInit                                            5     0      5      72
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24GetDataIn
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _InicializoMRF24
       _DelayInit
       _DelayRead
       _DelayReset
       _GetLongAddr
         _ReadByteSPIPort
           _SPIRead
         _SetCSPin
         _Write2ByteSPIPort
           _SPIWrite2Byte
             _SPIWriteByte
       _GetShortAddr
         _ReadByteSPIPort
         _SetCSPin
         _WriteByteSPIPort
           _SPIWriteByte
       _SetChannel
         _SetLongAddr
           _SetCSPin
           _Write2ByteSPIPort
           _WriteByteSPIPort
         _SetShortAddr
           _SetCSPin
           _WriteByteSPIPort
       _SetDeviceAddress
         _SetShortAddr
       _SetDeviceMACAddress
         _SetShortAddr
       _SetLongAddr
       _SetShortAddr
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
       _strncpy
     _SetResetPin
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _envio
     _MRF24TransmitirDato
       _SetLongAddr
       _SetShortAddr
       _strlen
     _strcpy

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     112     43.8%
BITBANK0           160      0       0      0.0%
BANK0              160     76     108     67.5%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     75      81     86.2%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     303      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Aug 07 12:40:14 2025

                         _SSPSTATbits 0FC7                                    l21 1C44  
                                  l30 1C74                                    l24 1C9E  
                                  l33 1C58                                    l42 1CC6  
                                  l27 1C66                                    l36 1CB6  
                                  l39 1C82                       _IsMRF24Interrup 1C46  
                       ?_MRF24J40Init 0001                                   l102 1880  
                                 l200 1C30                                   l120 1968  
                                 l105 1274                                   l114 1BEA  
                                 l123 1926                                   l107 13EE  
                                 l213 179C                                   l117 1BA4  
                                 l222 1CAC                                   l126 19DA  
                                 l134 1B56                                   l207 1B7E  
                                 l160 16F0                                   l144 1248  
                                 l129 1B2C                                   l137 19A2  
                                 l145 1056                                   l155 1A0E  
                                 l219 1BCA                                   l229 1AA2  
                                 l166 1CC0                                   l239 152A  
                                 l191 1C02                                   l280 156E  
                                 l185 1C1A                                   l194 1C90  
                                 l188 1BF4                                   l292 1AD0  
                                 l197 1C20                                   l367 18E2  
                                 _GIE 7F97                                   u600 1AF2  
                                 u505 1932                                   u601 1AEE  
                                 u610 1C56                                   u530 17D8  
                                 u611 1C50                                   u515 1C64  
                                 u531 17D4                                   u516 1C66  
                                 u540 17EE                                   u620 182C  
                                 u700 107C                                   u525 1C72  
                                 u541 17EA                                   u621 1828  
                                 u701 1078                                   u470 1C02  
                                 u526 1C74                                   u550 1816  
                                 u630 183E                                   u710 10F0  
                                 u471 1BFE                                   u551 1812  
                                 u631 183A                                   u711 10EC  
                                 u560 170A                                   u800 1430  
                                 u616 1C58                                   u640 1294  
                                 u720 1196                                   u561 1706  
                                 u801 142C                                   u641 1290  
                                 u721 1192                                   u570 1788  
                                 u810 1440                                   u490 1C2E  
                                 u650 12B0                                   u730 122E  
                                 u571 1784                                   u811 143C  
                                 u491 1C2A                                   u651 12AC  
                                 u731 122A                                   u820 1480  
                                 u580 1B56                                   u660 13AE  
                                 u740 1A72                                   u821 147C  
                                 u485 1C9C                                   u581 1B52  
                                 u661 13AA                                   u741 1A6E  
                                 u830 1490                                   u750 19EC  
                                 u486 1C9E                                   u670 13C4  
                                 u831 148C                                   u751 19E8  
                                 u671 13C0                                   u840 14C4  
                                 u760 1A06                                   u680 1032  
                                 u841 14C0                                   u761 1A02  
                                 u681 102E                                   u770 1622  
                                 u690 1052                                   u595 18EE  
                                 u771 161E                                   u691 104E  
                                 u780 16DA                                   u908 1600  
                                 u860 1590                                   u781 16D6  
                                 u861 158A                                   u790 1404  
                                 u870 15CC                                   u791 1400  
                                 u871 15C8                                   u880 15EC  
                                 u937 1978                                   u881 15E8  
                                 u890 15FE                                   u866 1592  
                                 u947 1990                                   u891 15F6  
                                 u957 12BA                                   u967 19CE  
                                 _isr 0008                                   wreg 0FE8  
                 __end_of_GetLongAddr 1928                                  l2001 1152  
                                l2011 11C0                                  l2003 1178  
                                l2101 16A8                                  l2021 120A  
                                l2013 11C2                                  l2005 117A  
                                l2103 16AA                                  l2031 123E  
                                l2023 120C                                  l2015 11E8  
                                l2007 1196                                  l1063 1A72  
                                l2041 1C14                                  l2121 1430  
                                l2113 13F0                                  l2105 16DA  
                                l2025 120E                                  l2017 11EA  
                                l2009 11A8                                  l2201 1AA4  
                                l2043 1C16                                  l2035 1C04  
                                l2051 1A80                                  l2123 1440  
                                l2131 1454                                  l2115 13F4  
                                l2027 122E                                  l2019 11F0  
                                l2203 1ABC                                  l2045 1C18  
                                l2037 1C0E                                  l2053 1A9A  
                                l2141 1490                                  l2133 1460  
                                l2125 144E                                  l2117 1404  
                                l2109 1CB8                                  l2061 196E  
                                l1069 1AFE                                  l2029 123C  
                                l2205 1AC8                                  l2221 1534  
                                l2039 1C12                                  l2143 149C  
                                l2119 1416                                  l1079 1816  
                                l2063 1972                                  l2055 1A42  
                                l2231 1566                                  l2223 1538  
                                l2049 1A74                                  l2161 14DE  
                                l2137 1466                                  l2081 1A06  
                                l2073 19DC                                  l2065 1984  
                                l2057 1A46                                  l2241 15CC  
                                l2305 15AA                                  l2233 1574  
                                l2225 153C                                  l2307 1502  
                                l2155 14B4                                  l2139 1480  
                                l2075 19EC                                  l2067 198A  
                                l2059 196A                                  l2243 15D0  
                                l2227 1554                                  l2219 152C  
                                l2181 18CE                                  l2157 14C4  
                                l2149 14A2                                  l2085 1A0C  
                                l1701 1C84                                  l2069 199C  
                                l2093 1626                                  l2245 15D4  
                                l2237 157C                                  l2229 155E  
                                l2191 18D8                                  l2183 18D0  
                                l2159 14D6                                  l2167 14E4  
                                l2079 19F2                                  l2095 167C  
                                l2247 15EC                                  l2239 15B8  
                                l2193 18DA                                  l2185 18D2  
                                l2177 1882                                  l2169 1528  
                                l1705 1C94                                  l1713 1C76  
                                l1801 1BA2                                  l2097 1684  
                                l2089 1612                                  l2195 18DC  
                                l2187 18D4                                  l2179 18C6  
                                l1811 1732                                  l1723 1CC2  
                                l1731 1BD8                                  l2099 168A  
                                l2197 18DE                                  l2189 18D6  
                                l1813 1788                                  l1805 16F2  
                                l1717 1C1C                                  l1709 1CB0  
                                l1741 194A                                  l1733 1BDE  
                                l1901 1294                                  l1751 1CA0  
                                l1815 1794                                  l1807 170A  
                                l1719 1C2E                                  l1743 1950  
                                l1735 1BE4                                  l1727 1BCE  
                                l1823 1B00                                  l1911 12D4  
                                l1809 1720                                  l1841 1906  
                                l1745 195C                                  l1729 1BD2  
                                l1833 1B30                                  l1921 130C  
                                l1913 12D8                                  l1905 129A  
                                l1819 179A                                  l1843 190C  
                                l1747 1962                                  l1739 1928  
                                l1835 1B44                                  l1827 1B2E  
                                l1931 1356                                  l1923 131C  
                                l1915 12DC                                  l1907 12B0  
                                l1755 1C5C                                  l1771 17DC  
                                l1763 179E                                  l1845 1918  
                                l1853 19A4                                  l1837 1B46  
                                l1941 1386                                  l1933 1360  
                                l1925 132C                                  l1917 12EC  
                                l1909 12CA                                  l1773 17F2  
                                l1765 17A6                                  l1861 1ADA  
                                l1783 1BA6                                  l1847 191E  
                                l1839 18E4                                  l1791 1B82  
                                l1855 19C8                                  l1951 13C4  
                                l1943 1396                                  l1935 136A  
                                l1927 133C                                  l1919 12FC  
                                l1759 1C6A                                  l1775 17FA  
                                l1767 17AC                                  l1863 1ADC  
                                l1873 1C46                                  l1785 1BBC  
                                l1697 1BEE                                  l1849 1924  
                                l1793 1B8A                                  l1953 13EC  
                                l1937 1374                                  l1929 134C  
                                l1777 17FC                                  l1881 183E  
                                l1865 1AF2                                  l1961 1036  
                                l1779 1B58                                  l1699 1BF0  
                                l1795 1B90                                  l1939 137E  
                                l1883 1866                                  l1859 1AD2  
                                l1971 1080                                  l1797 1B96  
                                l1789 1B82                                  l1949 13B2  
                                l1893 124A                                  l1869 1C32  
                                l1885 186C                                  l1877 1818  
                                l1981 10C2                                  l1973 1090  
                                l1965 1058                                  l1957 1022  
                                l1799 1B9C                                  l1895 1262  
                                l1887 1870                                  l1879 182C  
                                l1991 1112                                  l1983 10C4  
                                l1975 1092                                  l1967 106A  
                                l1897 126C                                  l1889 1878  
                                l1993 1114                                  l1985 10D8  
                                l1977 10A4                                  l1899 127C  
                                l1995 1136                                  l1987 10F0  
                                l1979 10B2                                  l1997 1138  
                                l1989 10FE                                  l1999 1150  
                                _ADIE 7CEE                                  ?_isr 0001  
                                _EEIE 7D04                                  STR_1 1019  
                                _T0IE 7F95                                  _IPEN 7E87  
                                _PEIE 7F96                                  _RBIE 7F93  
                                _RCIE 7CED                                  _RBPU 7F8F  
                        _SPIWriteByte 1BEC                                  _main 152C  
                     __end_of_SPIInit 1C1C                       __end_of_SPIRead 1C32  
                                fsr1h 0FE2                                  fsr2h 0FDA  
                                indf2 0FDF                                  fsr1l 0FE1  
                                fsr2l 0FD9                                  btemp 0052  
                       _MRF24IsNewMsg 19DC                            _DelayReset 1BA6  
             GetShortAddr@reg_address 0004                                  start 0040  
                   DelayInit@duration 0002                          ___param_bank 0000  
                   ??_ReadByteSPIPort 0001                                 ??_isr 0001  
                      ??_MRF24J40Init 001B           __end_of_InicializoVariables 1882  
                       _SPIWrite2Byte 1C84                                 ?_main 0001  
                               _BCLIE 7D03                                 _INT0E 7F94  
                               i2l383 003C                  SetDeviceMACAddress@i 0005  
                      _MRF24GetDataIn 1CB8                                 _TMR1H 0FCF  
                               _TMR1L 0FCE                                 _PORTA 0F80  
                               _PORTB 0F81                                 _PORTC 0F82  
                               _PORTD 0F83                                 _PORTE 0F84  
                               _SSPIE 7CEB                  __end_of_GetShortAddr 1BA6  
                     _InicializoMRF24 124A                       _InicializoPines 1C32  
             SetShortAddr@reg_address 0004                                 _envio 1AA4  
                               tablat 0FF5                        ?_MRF24IsNewMsg 0001  
                               ttemp5 0053                                 ttemp6 0056  
                               ttemp7 005A                                 status 0FD8  
                               wtemp8 0053                       __end_of_strncpy 1818  
             __end_of_IsMRF24Interrup 1C5A                   _SetDeviceMACAddress 1B2E  
                     __initialization 1A10                          __end_of_main 1612  
DebounceFSMUpdate@antirrebote_boton_n 000F                        ?_SPIWrite2Byte 0002  
                    __end_of_SetCSPin 1CA0                       envio@data_out_s 0012  
                         _GetLongAddr 18E4                         ??_SetLongAddr 0009  
              __end_of_MRF24GetDataIn 1CC2                                ??_main 004A  
                       __activetblptr 0002                         ??_SetResetPin 0001  
                ?_SetDeviceMACAddress 0001                            _SetChannel 19A4  
       InicializoMRF24@delay_time_out 0012                     ?_SetDeviceAddress 0001  
                              _CCP1IE 7CEA                                _CCP2IE 7D00  
                              ?_envio 0001                             ??_SPIInit 0001  
                           ??_SPIRead 0001                    ??_SetDeviceAddress 0005  
                              _T1RD16 7E6F                                _T1SYNC 7E6A  
                              i2l2261 0030                                i2l2253 000A  
                              i2l2255 0018                                i2l2257 0026  
                              i2l2259 0028                            _SetWakePin 1C5A  
                              _OSCCON 0FD3                                _TMR1IE 7CE8  
                              _TMR1IF 7CF0                                _TMR1CS 7E69  
                              _TMR2IE 7CE9                                _TMR1ON 7E68  
        __end_of_default_security_key 1011                                _SSPBUF 0FC9  
                         ?_DelayReset 0001                   DelayIsRunning@delay 0001  
             __end_of_InicializoMRF24 13F0                                clear_0 1A16  
                              clear_1 1A22                                isa$std 0001  
                     ?_MRF24GetDataIn 0001                        SetCSPin@estado 0001  
             __end_of_InicializoPines 1C46                                _strcpy 1A42  
                              _strlen 1AD2                   MRF24ReciboPaquete@i 0013  
               ??_SetDeviceMACAddress 0005                          __mediumconst 0000  
                              tblptrh 0FF7                                tblptrl 0FF6  
                              tblptru 0FF8                   __end_of_SetLongAddr 196A  
                  _MRF24ReciboPaquete 1612                      ??_DelayIsRunning 0002  
                           ??_strncpy 0005                       ??_MRF24IsNewMsg 0001  
                 __end_of_SetResetPin 1C76                 GetShortAddr@leido_spi 0003  
                   __end_of_DelayInit 1B80                     __end_of_DelayRead 179E  
                __end_of_MRF24J40Init 19A4                            __accesstop 0060  
             __end_of__initialization 1A34                   ?_MRF24ReciboPaquete 0001  
         __end_of_MRF24TransmitirDato 124A                     __end_of_BoardInit 18E4  
                      DelayInit@delay 0001                         ___rparam_used 0001  
                      DelayRead@delay 0002                      SetWakePin@estado 0001  
                    ?_IsMRF24Interrup 0001                         ?_SetShortAddr 0003  
                      __pcstackCOMRAM 0001                       ??_SPIWrite2Byte 0004  
                  _long_mac_address_e 0051                         __end_of_envio 1AD2  
                ??_MRF24ReciboPaquete 000B                        main@data_out_s 0060  
                         ?_SetChannel 0001                               ??_envio 0012  
                          __pbssBANK0 00AC                            __pbssBANK1 0100  
                         ?_SetWakePin 0001                             ?_SetCSPin 0001  
                     _ReadByteSPIPort 1CC2                InicializoMRF24@lectura 0011  
                          _data_out_s 0100                          _GetShortAddr 1B80  
                      ??_SetShortAddr 0004      MRF24TransmitirDato@largo_mensaje 000F  
                    ?_InicializoMRF24 0001                           _SetLongAddr 1928  
                             _T1CKPS0 7E6C                               _T1CKPS1 7E6D  
                             ?_strcpy 0001                               ?_strlen 0001  
                    ?_InicializoPines 0001                  _default_security_key 1001  
                             _T1OSCEN 7E6B                           _SetResetPin 1C68  
                             _OSCTUNE 0F9B                               i2u91_40 0018  
                             i2u91_41 0014                               i2u92_40 0026  
                             i2u92_41 0022                               _SSPCON1 0FC6  
                             _SPIInit 1C04                               _SPIRead 1C1C  
                          ??_SetCSPin 0001                     SetShortAddr@valor 0003  
                             __Hparam 0000                               __Lparam 0000  
                   ??_DebounceFSMInit 0007                          __psmallconst 1000  
                             __pcinit 1A10                          ?_GetLongAddr 0006  
                             __ramtop 1000                               __ptext0 152C  
                             __ptext1 1AA4                               __ptext2 1A42  
                             __ptext3 1022                               __ptext4 1AD2  
                             __ptext5 1612                               __ptext6 196A  
                             __ptext7 1818                               __ptext8 179E  
                             __ptext9 1C32                      _WriteByteSPIPort 1CAE  
             __end_of_ReadByteSPIPort 1CC8                               _strncpy 179E  
                end_of_initialization 1A34                         __Lmediumconst 0000  
                        ??_DelayReset 0002                      ??_MRF24GetDataIn 0003  
                 _default_mac_address 1011                               postdec2 0FDD  
                             postinc0 0FEE                               postinc1 0FE6  
                             postinc2 0FDE                               strcpy@d 0004  
                             strlen@a 0003                               strlen@s 0001  
                        _MRF24J40Init 196A                             _PORTBbits 0F81  
                           _PORTCbits 0F82                    __end_of_DelayReset 1BCC  
                WriteByteSPIPort@dato 0002                             _TRISBbits 0F93  
                           _TRISCbits 0F94                             _TRISDbits 0F95  
                           _TRISEbits 0F96                  __end_of_SetShortAddr 1BEC  
               Write2ByteSPIPort@dato 0004                  GetLongAddr@respuesta 000A  
                          main@boton1 00A1                             _DelayInit 1B58  
                           _DelayRead 16F2                             _BoardInit 1882  
                   _Write2ByteSPIPort 1C76           __end_of_SetDeviceMACAddress 1B58  
                       _data_config_s 00AC                    ?_Write2ByteSPIPort 0004  
                      __end_of_strcpy 1A74                        __end_of_strlen 1B00  
                        ??_SetChannel 000B                   start_initialization 1A10  
                 ??_Write2ByteSPIPort 0006                           __end_of_isr 0040  
                    ?_ReadByteSPIPort 0001                         ?_SPIWriteByte 0001  
                        ??_SetWakePin 0001                 __end_of_MRF24IsNewMsg 1A10  
                          ?_DelayInit 0001                            ?_DelayRead 0002  
                          ?_BoardInit 0001             __end_of_Write2ByteSPIPort 1C84  
                  __end_of_SetChannel 19DC                          _estadoActual 0050  
               __end_of_SPIWrite2Byte 1C92                          ?_SetLongAddr 0006  
                            ??_strcpy 0003                              ??_strlen 0003  
                  __end_of_SetWakePin 1C68                     _DebounceFSMUpdate 13F0  
                        ?_SetResetPin 0001                           __pbssCOMRAM 004C  
                  ?_DebounceFSMUpdate 000F                         __pcstackBANK0 0060  
                     DelayReset@delay 0001                              ?_SPIInit 0001  
                            ?_SPIRead 0001                        ??_SPIWriteByte 0001  
                 ??_DebounceFSMUpdate 0011                      SPIWriteByte@dato 0001  
                     _DebounceFSMInit 1A74                             _data_in_s 0138  
                    _SetDeviceAddress 1B00                   _InicializoVariables 1818  
            __end_of_WriteByteSPIPort 1CB8                             __pintcode 0008  
           __end_of_DebounceFSMUpdate 152C                     SetResetPin@estado 0001  
                         __smallconst 1000                  ?_InicializoVariables 0001  
                            ?_strncpy 0001                      SetLongAddr@valor 0008  
                            _LATCbits 0F8B                              _LATDbits 0F8C  
                            _LATEbits 0F8D                           ??_DelayInit 0006  
                         ??_DelayRead 0003                           ??_BoardInit 0001  
                            _PIR1bits 0F9E                          _SetShortAddr 1BCC  
                           _timeStamp 004C                    main@delay_parpadeo 0098  
               ??_InicializoVariables 0007                     ??_IsMRF24Interrup 0001  
             __end_of_DebounceFSMInit 1AA4                              _SetCSPin 1C92  
                            __Hrparam 0000                              __Lrparam 0000  
     MRF24ReciboPaquete@largo_mensaje 0010                  __end_of_SPIWriteByte 1C04  
                            __ptext10 1C5A                              __ptext11 1C68  
                            __ptext20 18E4                              __ptext12 124A  
                            __ptext21 1C76                              __ptext13 1B2E  
                            __ptext30 1CB8                              __ptext22 1C84  
                            __ptext14 1B00                              __ptext31 13F0  
                            __ptext23 1BEC                              __ptext15 19A4  
                            __ptext32 16F2                              __ptext24 1C92  
                            __ptext16 1BCC                              __ptext33 1CA0  
                            __ptext25 1CC2                              __ptext17 1928  
                            __ptext34 1A74                              __ptext26 1C1C  
                            __ptext18 1B80                   _MRF24TransmitirDato 1022  
                            __ptext35 1B58                              __ptext27 1BA6  
                            __ptext19 1CAE                              __ptext36 1882  
                            __ptext28 19DC                              __ptext37 1C04  
                            __ptext29 1C46                            strcpy@dest 0001  
                   ??_InicializoMRF24 000F                        _DelayIsRunning 1CA0  
                   ??_InicializoPines 0002                         ?_GetShortAddr 0001  
                ?_MRF24TransmitirDato 000B                              isa$xinst 0000  
                            int$flags 0052    DebounceFSMInit@antirrebote_boton_n 0006  
         __end_of_default_mac_address 1019              __end_of_SetDeviceAddress 1B2E  
               MRF24ReciboPaquete@add 0011                      ?_DebounceFSMInit 0006  
                            intlevel2 0000                __end_of_DelayIsRunning 1CAE  
                MRF24TransmitirDato@i 000E       MRF24TransmitirDato@p_info_out_s 000B  
                      ??_GetShortAddr 0003                             strcpy@src 0002  
                           strncpy@cp 0006                 ??_MRF24TransmitirDato 000C  
                   ?_WriteByteSPIPort 0001            __end_of_MRF24ReciboPaquete 16F2  
                       ??_GetLongAddr 0008                    ??_WriteByteSPIPort 0002  
              GetLongAddr@reg_address 0006                              strncpy@d 0001  
                            strncpy@n 0003                              strncpy@s 0002  
                         _SSPCON1bits 0FC6           DebounceFSMUpdate@estado_pin 0010  
                   SPIWrite2Byte@dato 0002                SetLongAddr@reg_address 0006  
                     ?_DelayIsRunning 0001            MRF24TransmitirDato@pos_mem 0011  
