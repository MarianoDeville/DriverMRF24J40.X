

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Mar 30 09:09:10 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 13/12/2024 GMT
    39                           ; 
    40                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F46K20 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F77                     SSPMSK          equ	3959	;# 
   114   000F78                     SLRCON          equ	3960	;# 
   115   000F79                     CM2CON1         equ	3961	;# 
   116   000F7A                     CM2CON0         equ	3962	;# 
   117   000F7B                     CM1CON0         equ	3963	;# 
   118   000F7C                     WPUB            equ	3964	;# 
   119   000F7D                     IOCB            equ	3965	;# 
   120   000F7E                     ANSEL           equ	3966	;# 
   121   000F7F                     ANSELH          equ	3967	;# 
   122   000F80                     PORTA           equ	3968	;# 
   123   000F81                     PORTB           equ	3969	;# 
   124   000F82                     PORTC           equ	3970	;# 
   125   000F83                     PORTD           equ	3971	;# 
   126   000F84                     PORTE           equ	3972	;# 
   127   000F89                     LATA            equ	3977	;# 
   128   000F8A                     LATB            equ	3978	;# 
   129   000F8B                     LATC            equ	3979	;# 
   130   000F8C                     LATD            equ	3980	;# 
   131   000F8D                     LATE            equ	3981	;# 
   132   000F92                     TRISA           equ	3986	;# 
   133   000F92                     DDRA            equ	3986	;# 
   134   000F93                     TRISB           equ	3987	;# 
   135   000F93                     DDRB            equ	3987	;# 
   136   000F94                     TRISC           equ	3988	;# 
   137   000F94                     DDRC            equ	3988	;# 
   138   000F95                     TRISD           equ	3989	;# 
   139   000F95                     DDRD            equ	3989	;# 
   140   000F96                     TRISE           equ	3990	;# 
   141   000F96                     DDRE            equ	3990	;# 
   142   000F9B                     OSCTUNE         equ	3995	;# 
   143   000F9D                     PIE1            equ	3997	;# 
   144   000F9E                     PIR1            equ	3998	;# 
   145   000F9F                     IPR1            equ	3999	;# 
   146   000FA0                     PIE2            equ	4000	;# 
   147   000FA1                     PIR2            equ	4001	;# 
   148   000FA2                     IPR2            equ	4002	;# 
   149   000FA6                     EECON1          equ	4006	;# 
   150   000FA7                     EECON2          equ	4007	;# 
   151   000FA8                     EEDATA          equ	4008	;# 
   152   000FA9                     EEADR           equ	4009	;# 
   153   000FAA                     EEADRH          equ	4010	;# 
   154   000FAB                     RCSTA           equ	4011	;# 
   155   000FAB                     RCSTA1          equ	4011	;# 
   156   000FAC                     TXSTA           equ	4012	;# 
   157   000FAC                     TXSTA1          equ	4012	;# 
   158   000FAD                     TXREG           equ	4013	;# 
   159   000FAD                     TXREG1          equ	4013	;# 
   160   000FAE                     RCREG           equ	4014	;# 
   161   000FAE                     RCREG1          equ	4014	;# 
   162   000FAF                     SPBRG           equ	4015	;# 
   163   000FAF                     SPBRG1          equ	4015	;# 
   164   000FB0                     SPBRGH          equ	4016	;# 
   165   000FB1                     T3CON           equ	4017	;# 
   166   000FB2                     TMR3            equ	4018	;# 
   167   000FB2                     TMR3L           equ	4018	;# 
   168   000FB3                     TMR3H           equ	4019	;# 
   169   000FB4                     CVRCON2         equ	4020	;# 
   170   000FB5                     CVRCON          equ	4021	;# 
   171   000FB6                     ECCP1AS         equ	4022	;# 
   172   000FB7                     PWM1CON         equ	4023	;# 
   173   000FB8                     BAUDCON         equ	4024	;# 
   174   000FB8                     BAUDCTL         equ	4024	;# 
   175   000FB9                     PSTRCON         equ	4025	;# 
   176   000FBA                     CCP2CON         equ	4026	;# 
   177   000FBB                     CCPR2           equ	4027	;# 
   178   000FBB                     CCPR2L          equ	4027	;# 
   179   000FBC                     CCPR2H          equ	4028	;# 
   180   000FBD                     CCP1CON         equ	4029	;# 
   181   000FBE                     CCPR1           equ	4030	;# 
   182   000FBE                     CCPR1L          equ	4030	;# 
   183   000FBF                     CCPR1H          equ	4031	;# 
   184   000FC0                     ADCON2          equ	4032	;# 
   185   000FC1                     ADCON1          equ	4033	;# 
   186   000FC2                     ADCON0          equ	4034	;# 
   187   000FC3                     ADRES           equ	4035	;# 
   188   000FC3                     ADRESL          equ	4035	;# 
   189   000FC4                     ADRESH          equ	4036	;# 
   190   000FC5                     SSPCON2         equ	4037	;# 
   191   000FC6                     SSPCON1         equ	4038	;# 
   192   000FC7                     SSPSTAT         equ	4039	;# 
   193   000FC8                     SSPADD          equ	4040	;# 
   194   000FC9                     SSPBUF          equ	4041	;# 
   195   000FCA                     T2CON           equ	4042	;# 
   196   000FCB                     PR2             equ	4043	;# 
   197   000FCB                     MEMCON          equ	4043	;# 
   198   000FCC                     TMR2            equ	4044	;# 
   199   000FCD                     T1CON           equ	4045	;# 
   200   000FCE                     TMR1            equ	4046	;# 
   201   000FCE                     TMR1L           equ	4046	;# 
   202   000FCF                     TMR1H           equ	4047	;# 
   203   000FD0                     RCON            equ	4048	;# 
   204   000FD1                     WDTCON          equ	4049	;# 
   205   000FD2                     HLVDCON         equ	4050	;# 
   206   000FD2                     LVDCON          equ	4050	;# 
   207   000FD3                     OSCCON          equ	4051	;# 
   208   000FD5                     T0CON           equ	4053	;# 
   209   000FD6                     TMR0            equ	4054	;# 
   210   000FD6                     TMR0L           equ	4054	;# 
   211   000FD7                     TMR0H           equ	4055	;# 
   212   000FD8                     STATUS          equ	4056	;# 
   213   000FD9                     FSR2            equ	4057	;# 
   214   000FD9                     FSR2L           equ	4057	;# 
   215   000FDA                     FSR2H           equ	4058	;# 
   216   000FDB                     PLUSW2          equ	4059	;# 
   217   000FDC                     PREINC2         equ	4060	;# 
   218   000FDD                     POSTDEC2        equ	4061	;# 
   219   000FDE                     POSTINC2        equ	4062	;# 
   220   000FDF                     INDF2           equ	4063	;# 
   221   000FE0                     BSR             equ	4064	;# 
   222   000FE1                     FSR1            equ	4065	;# 
   223   000FE1                     FSR1L           equ	4065	;# 
   224   000FE2                     FSR1H           equ	4066	;# 
   225   000FE3                     PLUSW1          equ	4067	;# 
   226   000FE4                     PREINC1         equ	4068	;# 
   227   000FE5                     POSTDEC1        equ	4069	;# 
   228   000FE6                     POSTINC1        equ	4070	;# 
   229   000FE7                     INDF1           equ	4071	;# 
   230   000FE8                     WREG            equ	4072	;# 
   231   000FE9                     FSR0            equ	4073	;# 
   232   000FE9                     FSR0L           equ	4073	;# 
   233   000FEA                     FSR0H           equ	4074	;# 
   234   000FEB                     PLUSW0          equ	4075	;# 
   235   000FEC                     PREINC0         equ	4076	;# 
   236   000FED                     POSTDEC0        equ	4077	;# 
   237   000FEE                     POSTINC0        equ	4078	;# 
   238   000FEF                     INDF0           equ	4079	;# 
   239   000FF0                     INTCON3         equ	4080	;# 
   240   000FF1                     INTCON2         equ	4081	;# 
   241   000FF2                     INTCON          equ	4082	;# 
   242   000FF3                     PROD            equ	4083	;# 
   243   000FF3                     PRODL           equ	4083	;# 
   244   000FF4                     PRODH           equ	4084	;# 
   245   000FF5                     TABLAT          equ	4085	;# 
   246   000FF6                     TBLPTR          equ	4086	;# 
   247   000FF6                     TBLPTRL         equ	4086	;# 
   248   000FF7                     TBLPTRH         equ	4087	;# 
   249   000FF8                     TBLPTRU         equ	4088	;# 
   250   000FF9                     PCLAT           equ	4089	;# 
   251   000FF9                     PC              equ	4089	;# 
   252   000FF9                     PCL             equ	4089	;# 
   253   000FFA                     PCLATH          equ	4090	;# 
   254   000FFB                     PCLATU          equ	4091	;# 
   255   000FFC                     STKPTR          equ	4092	;# 
   256   000FFD                     TOS             equ	4093	;# 
   257   000FFD                     TOSL            equ	4093	;# 
   258   000FFE                     TOSH            equ	4094	;# 
   259   000FFF                     TOSU            equ	4095	;# 
   260   000F77                     SSPMSK          equ	3959	;# 
   261   000F78                     SLRCON          equ	3960	;# 
   262   000F79                     CM2CON1         equ	3961	;# 
   263   000F7A                     CM2CON0         equ	3962	;# 
   264   000F7B                     CM1CON0         equ	3963	;# 
   265   000F7C                     WPUB            equ	3964	;# 
   266   000F7D                     IOCB            equ	3965	;# 
   267   000F7E                     ANSEL           equ	3966	;# 
   268   000F7F                     ANSELH          equ	3967	;# 
   269   000F80                     PORTA           equ	3968	;# 
   270   000F81                     PORTB           equ	3969	;# 
   271   000F82                     PORTC           equ	3970	;# 
   272   000F83                     PORTD           equ	3971	;# 
   273   000F84                     PORTE           equ	3972	;# 
   274   000F89                     LATA            equ	3977	;# 
   275   000F8A                     LATB            equ	3978	;# 
   276   000F8B                     LATC            equ	3979	;# 
   277   000F8C                     LATD            equ	3980	;# 
   278   000F8D                     LATE            equ	3981	;# 
   279   000F92                     TRISA           equ	3986	;# 
   280   000F92                     DDRA            equ	3986	;# 
   281   000F93                     TRISB           equ	3987	;# 
   282   000F93                     DDRB            equ	3987	;# 
   283   000F94                     TRISC           equ	3988	;# 
   284   000F94                     DDRC            equ	3988	;# 
   285   000F95                     TRISD           equ	3989	;# 
   286   000F95                     DDRD            equ	3989	;# 
   287   000F96                     TRISE           equ	3990	;# 
   288   000F96                     DDRE            equ	3990	;# 
   289   000F9B                     OSCTUNE         equ	3995	;# 
   290   000F9D                     PIE1            equ	3997	;# 
   291   000F9E                     PIR1            equ	3998	;# 
   292   000F9F                     IPR1            equ	3999	;# 
   293   000FA0                     PIE2            equ	4000	;# 
   294   000FA1                     PIR2            equ	4001	;# 
   295   000FA2                     IPR2            equ	4002	;# 
   296   000FA6                     EECON1          equ	4006	;# 
   297   000FA7                     EECON2          equ	4007	;# 
   298   000FA8                     EEDATA          equ	4008	;# 
   299   000FA9                     EEADR           equ	4009	;# 
   300   000FAA                     EEADRH          equ	4010	;# 
   301   000FAB                     RCSTA           equ	4011	;# 
   302   000FAB                     RCSTA1          equ	4011	;# 
   303   000FAC                     TXSTA           equ	4012	;# 
   304   000FAC                     TXSTA1          equ	4012	;# 
   305   000FAD                     TXREG           equ	4013	;# 
   306   000FAD                     TXREG1          equ	4013	;# 
   307   000FAE                     RCREG           equ	4014	;# 
   308   000FAE                     RCREG1          equ	4014	;# 
   309   000FAF                     SPBRG           equ	4015	;# 
   310   000FAF                     SPBRG1          equ	4015	;# 
   311   000FB0                     SPBRGH          equ	4016	;# 
   312   000FB1                     T3CON           equ	4017	;# 
   313   000FB2                     TMR3            equ	4018	;# 
   314   000FB2                     TMR3L           equ	4018	;# 
   315   000FB3                     TMR3H           equ	4019	;# 
   316   000FB4                     CVRCON2         equ	4020	;# 
   317   000FB5                     CVRCON          equ	4021	;# 
   318   000FB6                     ECCP1AS         equ	4022	;# 
   319   000FB7                     PWM1CON         equ	4023	;# 
   320   000FB8                     BAUDCON         equ	4024	;# 
   321   000FB8                     BAUDCTL         equ	4024	;# 
   322   000FB9                     PSTRCON         equ	4025	;# 
   323   000FBA                     CCP2CON         equ	4026	;# 
   324   000FBB                     CCPR2           equ	4027	;# 
   325   000FBB                     CCPR2L          equ	4027	;# 
   326   000FBC                     CCPR2H          equ	4028	;# 
   327   000FBD                     CCP1CON         equ	4029	;# 
   328   000FBE                     CCPR1           equ	4030	;# 
   329   000FBE                     CCPR1L          equ	4030	;# 
   330   000FBF                     CCPR1H          equ	4031	;# 
   331   000FC0                     ADCON2          equ	4032	;# 
   332   000FC1                     ADCON1          equ	4033	;# 
   333   000FC2                     ADCON0          equ	4034	;# 
   334   000FC3                     ADRES           equ	4035	;# 
   335   000FC3                     ADRESL          equ	4035	;# 
   336   000FC4                     ADRESH          equ	4036	;# 
   337   000FC5                     SSPCON2         equ	4037	;# 
   338   000FC6                     SSPCON1         equ	4038	;# 
   339   000FC7                     SSPSTAT         equ	4039	;# 
   340   000FC8                     SSPADD          equ	4040	;# 
   341   000FC9                     SSPBUF          equ	4041	;# 
   342   000FCA                     T2CON           equ	4042	;# 
   343   000FCB                     PR2             equ	4043	;# 
   344   000FCB                     MEMCON          equ	4043	;# 
   345   000FCC                     TMR2            equ	4044	;# 
   346   000FCD                     T1CON           equ	4045	;# 
   347   000FCE                     TMR1            equ	4046	;# 
   348   000FCE                     TMR1L           equ	4046	;# 
   349   000FCF                     TMR1H           equ	4047	;# 
   350   000FD0                     RCON            equ	4048	;# 
   351   000FD1                     WDTCON          equ	4049	;# 
   352   000FD2                     HLVDCON         equ	4050	;# 
   353   000FD2                     LVDCON          equ	4050	;# 
   354   000FD3                     OSCCON          equ	4051	;# 
   355   000FD5                     T0CON           equ	4053	;# 
   356   000FD6                     TMR0            equ	4054	;# 
   357   000FD6                     TMR0L           equ	4054	;# 
   358   000FD7                     TMR0H           equ	4055	;# 
   359   000FD8                     STATUS          equ	4056	;# 
   360   000FD9                     FSR2            equ	4057	;# 
   361   000FD9                     FSR2L           equ	4057	;# 
   362   000FDA                     FSR2H           equ	4058	;# 
   363   000FDB                     PLUSW2          equ	4059	;# 
   364   000FDC                     PREINC2         equ	4060	;# 
   365   000FDD                     POSTDEC2        equ	4061	;# 
   366   000FDE                     POSTINC2        equ	4062	;# 
   367   000FDF                     INDF2           equ	4063	;# 
   368   000FE0                     BSR             equ	4064	;# 
   369   000FE1                     FSR1            equ	4065	;# 
   370   000FE1                     FSR1L           equ	4065	;# 
   371   000FE2                     FSR1H           equ	4066	;# 
   372   000FE3                     PLUSW1          equ	4067	;# 
   373   000FE4                     PREINC1         equ	4068	;# 
   374   000FE5                     POSTDEC1        equ	4069	;# 
   375   000FE6                     POSTINC1        equ	4070	;# 
   376   000FE7                     INDF1           equ	4071	;# 
   377   000FE8                     WREG            equ	4072	;# 
   378   000FE9                     FSR0            equ	4073	;# 
   379   000FE9                     FSR0L           equ	4073	;# 
   380   000FEA                     FSR0H           equ	4074	;# 
   381   000FEB                     PLUSW0          equ	4075	;# 
   382   000FEC                     PREINC0         equ	4076	;# 
   383   000FED                     POSTDEC0        equ	4077	;# 
   384   000FEE                     POSTINC0        equ	4078	;# 
   385   000FEF                     INDF0           equ	4079	;# 
   386   000FF0                     INTCON3         equ	4080	;# 
   387   000FF1                     INTCON2         equ	4081	;# 
   388   000FF2                     INTCON          equ	4082	;# 
   389   000FF3                     PROD            equ	4083	;# 
   390   000FF3                     PRODL           equ	4083	;# 
   391   000FF4                     PRODH           equ	4084	;# 
   392   000FF5                     TABLAT          equ	4085	;# 
   393   000FF6                     TBLPTR          equ	4086	;# 
   394   000FF6                     TBLPTRL         equ	4086	;# 
   395   000FF7                     TBLPTRH         equ	4087	;# 
   396   000FF8                     TBLPTRU         equ	4088	;# 
   397   000FF9                     PCLAT           equ	4089	;# 
   398   000FF9                     PC              equ	4089	;# 
   399   000FF9                     PCL             equ	4089	;# 
   400   000FFA                     PCLATH          equ	4090	;# 
   401   000FFB                     PCLATU          equ	4091	;# 
   402   000FFC                     STKPTR          equ	4092	;# 
   403   000FFD                     TOS             equ	4093	;# 
   404   000FFD                     TOSL            equ	4093	;# 
   405   000FFE                     TOSH            equ	4094	;# 
   406   000FFF                     TOSU            equ	4095	;# 
   407   000F77                     SSPMSK          equ	3959	;# 
   408   000F78                     SLRCON          equ	3960	;# 
   409   000F79                     CM2CON1         equ	3961	;# 
   410   000F7A                     CM2CON0         equ	3962	;# 
   411   000F7B                     CM1CON0         equ	3963	;# 
   412   000F7C                     WPUB            equ	3964	;# 
   413   000F7D                     IOCB            equ	3965	;# 
   414   000F7E                     ANSEL           equ	3966	;# 
   415   000F7F                     ANSELH          equ	3967	;# 
   416   000F80                     PORTA           equ	3968	;# 
   417   000F81                     PORTB           equ	3969	;# 
   418   000F82                     PORTC           equ	3970	;# 
   419   000F83                     PORTD           equ	3971	;# 
   420   000F84                     PORTE           equ	3972	;# 
   421   000F89                     LATA            equ	3977	;# 
   422   000F8A                     LATB            equ	3978	;# 
   423   000F8B                     LATC            equ	3979	;# 
   424   000F8C                     LATD            equ	3980	;# 
   425   000F8D                     LATE            equ	3981	;# 
   426   000F92                     TRISA           equ	3986	;# 
   427   000F92                     DDRA            equ	3986	;# 
   428   000F93                     TRISB           equ	3987	;# 
   429   000F93                     DDRB            equ	3987	;# 
   430   000F94                     TRISC           equ	3988	;# 
   431   000F94                     DDRC            equ	3988	;# 
   432   000F95                     TRISD           equ	3989	;# 
   433   000F95                     DDRD            equ	3989	;# 
   434   000F96                     TRISE           equ	3990	;# 
   435   000F96                     DDRE            equ	3990	;# 
   436   000F9B                     OSCTUNE         equ	3995	;# 
   437   000F9D                     PIE1            equ	3997	;# 
   438   000F9E                     PIR1            equ	3998	;# 
   439   000F9F                     IPR1            equ	3999	;# 
   440   000FA0                     PIE2            equ	4000	;# 
   441   000FA1                     PIR2            equ	4001	;# 
   442   000FA2                     IPR2            equ	4002	;# 
   443   000FA6                     EECON1          equ	4006	;# 
   444   000FA7                     EECON2          equ	4007	;# 
   445   000FA8                     EEDATA          equ	4008	;# 
   446   000FA9                     EEADR           equ	4009	;# 
   447   000FAA                     EEADRH          equ	4010	;# 
   448   000FAB                     RCSTA           equ	4011	;# 
   449   000FAB                     RCSTA1          equ	4011	;# 
   450   000FAC                     TXSTA           equ	4012	;# 
   451   000FAC                     TXSTA1          equ	4012	;# 
   452   000FAD                     TXREG           equ	4013	;# 
   453   000FAD                     TXREG1          equ	4013	;# 
   454   000FAE                     RCREG           equ	4014	;# 
   455   000FAE                     RCREG1          equ	4014	;# 
   456   000FAF                     SPBRG           equ	4015	;# 
   457   000FAF                     SPBRG1          equ	4015	;# 
   458   000FB0                     SPBRGH          equ	4016	;# 
   459   000FB1                     T3CON           equ	4017	;# 
   460   000FB2                     TMR3            equ	4018	;# 
   461   000FB2                     TMR3L           equ	4018	;# 
   462   000FB3                     TMR3H           equ	4019	;# 
   463   000FB4                     CVRCON2         equ	4020	;# 
   464   000FB5                     CVRCON          equ	4021	;# 
   465   000FB6                     ECCP1AS         equ	4022	;# 
   466   000FB7                     PWM1CON         equ	4023	;# 
   467   000FB8                     BAUDCON         equ	4024	;# 
   468   000FB8                     BAUDCTL         equ	4024	;# 
   469   000FB9                     PSTRCON         equ	4025	;# 
   470   000FBA                     CCP2CON         equ	4026	;# 
   471   000FBB                     CCPR2           equ	4027	;# 
   472   000FBB                     CCPR2L          equ	4027	;# 
   473   000FBC                     CCPR2H          equ	4028	;# 
   474   000FBD                     CCP1CON         equ	4029	;# 
   475   000FBE                     CCPR1           equ	4030	;# 
   476   000FBE                     CCPR1L          equ	4030	;# 
   477   000FBF                     CCPR1H          equ	4031	;# 
   478   000FC0                     ADCON2          equ	4032	;# 
   479   000FC1                     ADCON1          equ	4033	;# 
   480   000FC2                     ADCON0          equ	4034	;# 
   481   000FC3                     ADRES           equ	4035	;# 
   482   000FC3                     ADRESL          equ	4035	;# 
   483   000FC4                     ADRESH          equ	4036	;# 
   484   000FC5                     SSPCON2         equ	4037	;# 
   485   000FC6                     SSPCON1         equ	4038	;# 
   486   000FC7                     SSPSTAT         equ	4039	;# 
   487   000FC8                     SSPADD          equ	4040	;# 
   488   000FC9                     SSPBUF          equ	4041	;# 
   489   000FCA                     T2CON           equ	4042	;# 
   490   000FCB                     PR2             equ	4043	;# 
   491   000FCB                     MEMCON          equ	4043	;# 
   492   000FCC                     TMR2            equ	4044	;# 
   493   000FCD                     T1CON           equ	4045	;# 
   494   000FCE                     TMR1            equ	4046	;# 
   495   000FCE                     TMR1L           equ	4046	;# 
   496   000FCF                     TMR1H           equ	4047	;# 
   497   000FD0                     RCON            equ	4048	;# 
   498   000FD1                     WDTCON          equ	4049	;# 
   499   000FD2                     HLVDCON         equ	4050	;# 
   500   000FD2                     LVDCON          equ	4050	;# 
   501   000FD3                     OSCCON          equ	4051	;# 
   502   000FD5                     T0CON           equ	4053	;# 
   503   000FD6                     TMR0            equ	4054	;# 
   504   000FD6                     TMR0L           equ	4054	;# 
   505   000FD7                     TMR0H           equ	4055	;# 
   506   000FD8                     STATUS          equ	4056	;# 
   507   000FD9                     FSR2            equ	4057	;# 
   508   000FD9                     FSR2L           equ	4057	;# 
   509   000FDA                     FSR2H           equ	4058	;# 
   510   000FDB                     PLUSW2          equ	4059	;# 
   511   000FDC                     PREINC2         equ	4060	;# 
   512   000FDD                     POSTDEC2        equ	4061	;# 
   513   000FDE                     POSTINC2        equ	4062	;# 
   514   000FDF                     INDF2           equ	4063	;# 
   515   000FE0                     BSR             equ	4064	;# 
   516   000FE1                     FSR1            equ	4065	;# 
   517   000FE1                     FSR1L           equ	4065	;# 
   518   000FE2                     FSR1H           equ	4066	;# 
   519   000FE3                     PLUSW1          equ	4067	;# 
   520   000FE4                     PREINC1         equ	4068	;# 
   521   000FE5                     POSTDEC1        equ	4069	;# 
   522   000FE6                     POSTINC1        equ	4070	;# 
   523   000FE7                     INDF1           equ	4071	;# 
   524   000FE8                     WREG            equ	4072	;# 
   525   000FE9                     FSR0            equ	4073	;# 
   526   000FE9                     FSR0L           equ	4073	;# 
   527   000FEA                     FSR0H           equ	4074	;# 
   528   000FEB                     PLUSW0          equ	4075	;# 
   529   000FEC                     PREINC0         equ	4076	;# 
   530   000FED                     POSTDEC0        equ	4077	;# 
   531   000FEE                     POSTINC0        equ	4078	;# 
   532   000FEF                     INDF0           equ	4079	;# 
   533   000FF0                     INTCON3         equ	4080	;# 
   534   000FF1                     INTCON2         equ	4081	;# 
   535   000FF2                     INTCON          equ	4082	;# 
   536   000FF3                     PROD            equ	4083	;# 
   537   000FF3                     PRODL           equ	4083	;# 
   538   000FF4                     PRODH           equ	4084	;# 
   539   000FF5                     TABLAT          equ	4085	;# 
   540   000FF6                     TBLPTR          equ	4086	;# 
   541   000FF6                     TBLPTRL         equ	4086	;# 
   542   000FF7                     TBLPTRH         equ	4087	;# 
   543   000FF8                     TBLPTRU         equ	4088	;# 
   544   000FF9                     PCLAT           equ	4089	;# 
   545   000FF9                     PC              equ	4089	;# 
   546   000FF9                     PCL             equ	4089	;# 
   547   000FFA                     PCLATH          equ	4090	;# 
   548   000FFB                     PCLATU          equ	4091	;# 
   549   000FFC                     STKPTR          equ	4092	;# 
   550   000FFD                     TOS             equ	4093	;# 
   551   000FFD                     TOSL            equ	4093	;# 
   552   000FFE                     TOSH            equ	4094	;# 
   553   000FFF                     TOSU            equ	4095	;# 
   554   000F77                     SSPMSK          equ	3959	;# 
   555   000F78                     SLRCON          equ	3960	;# 
   556   000F79                     CM2CON1         equ	3961	;# 
   557   000F7A                     CM2CON0         equ	3962	;# 
   558   000F7B                     CM1CON0         equ	3963	;# 
   559   000F7C                     WPUB            equ	3964	;# 
   560   000F7D                     IOCB            equ	3965	;# 
   561   000F7E                     ANSEL           equ	3966	;# 
   562   000F7F                     ANSELH          equ	3967	;# 
   563   000F80                     PORTA           equ	3968	;# 
   564   000F81                     PORTB           equ	3969	;# 
   565   000F82                     PORTC           equ	3970	;# 
   566   000F83                     PORTD           equ	3971	;# 
   567   000F84                     PORTE           equ	3972	;# 
   568   000F89                     LATA            equ	3977	;# 
   569   000F8A                     LATB            equ	3978	;# 
   570   000F8B                     LATC            equ	3979	;# 
   571   000F8C                     LATD            equ	3980	;# 
   572   000F8D                     LATE            equ	3981	;# 
   573   000F92                     TRISA           equ	3986	;# 
   574   000F92                     DDRA            equ	3986	;# 
   575   000F93                     TRISB           equ	3987	;# 
   576   000F93                     DDRB            equ	3987	;# 
   577   000F94                     TRISC           equ	3988	;# 
   578   000F94                     DDRC            equ	3988	;# 
   579   000F95                     TRISD           equ	3989	;# 
   580   000F95                     DDRD            equ	3989	;# 
   581   000F96                     TRISE           equ	3990	;# 
   582   000F96                     DDRE            equ	3990	;# 
   583   000F9B                     OSCTUNE         equ	3995	;# 
   584   000F9D                     PIE1            equ	3997	;# 
   585   000F9E                     PIR1            equ	3998	;# 
   586   000F9F                     IPR1            equ	3999	;# 
   587   000FA0                     PIE2            equ	4000	;# 
   588   000FA1                     PIR2            equ	4001	;# 
   589   000FA2                     IPR2            equ	4002	;# 
   590   000FA6                     EECON1          equ	4006	;# 
   591   000FA7                     EECON2          equ	4007	;# 
   592   000FA8                     EEDATA          equ	4008	;# 
   593   000FA9                     EEADR           equ	4009	;# 
   594   000FAA                     EEADRH          equ	4010	;# 
   595   000FAB                     RCSTA           equ	4011	;# 
   596   000FAB                     RCSTA1          equ	4011	;# 
   597   000FAC                     TXSTA           equ	4012	;# 
   598   000FAC                     TXSTA1          equ	4012	;# 
   599   000FAD                     TXREG           equ	4013	;# 
   600   000FAD                     TXREG1          equ	4013	;# 
   601   000FAE                     RCREG           equ	4014	;# 
   602   000FAE                     RCREG1          equ	4014	;# 
   603   000FAF                     SPBRG           equ	4015	;# 
   604   000FAF                     SPBRG1          equ	4015	;# 
   605   000FB0                     SPBRGH          equ	4016	;# 
   606   000FB1                     T3CON           equ	4017	;# 
   607   000FB2                     TMR3            equ	4018	;# 
   608   000FB2                     TMR3L           equ	4018	;# 
   609   000FB3                     TMR3H           equ	4019	;# 
   610   000FB4                     CVRCON2         equ	4020	;# 
   611   000FB5                     CVRCON          equ	4021	;# 
   612   000FB6                     ECCP1AS         equ	4022	;# 
   613   000FB7                     PWM1CON         equ	4023	;# 
   614   000FB8                     BAUDCON         equ	4024	;# 
   615   000FB8                     BAUDCTL         equ	4024	;# 
   616   000FB9                     PSTRCON         equ	4025	;# 
   617   000FBA                     CCP2CON         equ	4026	;# 
   618   000FBB                     CCPR2           equ	4027	;# 
   619   000FBB                     CCPR2L          equ	4027	;# 
   620   000FBC                     CCPR2H          equ	4028	;# 
   621   000FBD                     CCP1CON         equ	4029	;# 
   622   000FBE                     CCPR1           equ	4030	;# 
   623   000FBE                     CCPR1L          equ	4030	;# 
   624   000FBF                     CCPR1H          equ	4031	;# 
   625   000FC0                     ADCON2          equ	4032	;# 
   626   000FC1                     ADCON1          equ	4033	;# 
   627   000FC2                     ADCON0          equ	4034	;# 
   628   000FC3                     ADRES           equ	4035	;# 
   629   000FC3                     ADRESL          equ	4035	;# 
   630   000FC4                     ADRESH          equ	4036	;# 
   631   000FC5                     SSPCON2         equ	4037	;# 
   632   000FC6                     SSPCON1         equ	4038	;# 
   633   000FC7                     SSPSTAT         equ	4039	;# 
   634   000FC8                     SSPADD          equ	4040	;# 
   635   000FC9                     SSPBUF          equ	4041	;# 
   636   000FCA                     T2CON           equ	4042	;# 
   637   000FCB                     PR2             equ	4043	;# 
   638   000FCB                     MEMCON          equ	4043	;# 
   639   000FCC                     TMR2            equ	4044	;# 
   640   000FCD                     T1CON           equ	4045	;# 
   641   000FCE                     TMR1            equ	4046	;# 
   642   000FCE                     TMR1L           equ	4046	;# 
   643   000FCF                     TMR1H           equ	4047	;# 
   644   000FD0                     RCON            equ	4048	;# 
   645   000FD1                     WDTCON          equ	4049	;# 
   646   000FD2                     HLVDCON         equ	4050	;# 
   647   000FD2                     LVDCON          equ	4050	;# 
   648   000FD3                     OSCCON          equ	4051	;# 
   649   000FD5                     T0CON           equ	4053	;# 
   650   000FD6                     TMR0            equ	4054	;# 
   651   000FD6                     TMR0L           equ	4054	;# 
   652   000FD7                     TMR0H           equ	4055	;# 
   653   000FD8                     STATUS          equ	4056	;# 
   654   000FD9                     FSR2            equ	4057	;# 
   655   000FD9                     FSR2L           equ	4057	;# 
   656   000FDA                     FSR2H           equ	4058	;# 
   657   000FDB                     PLUSW2          equ	4059	;# 
   658   000FDC                     PREINC2         equ	4060	;# 
   659   000FDD                     POSTDEC2        equ	4061	;# 
   660   000FDE                     POSTINC2        equ	4062	;# 
   661   000FDF                     INDF2           equ	4063	;# 
   662   000FE0                     BSR             equ	4064	;# 
   663   000FE1                     FSR1            equ	4065	;# 
   664   000FE1                     FSR1L           equ	4065	;# 
   665   000FE2                     FSR1H           equ	4066	;# 
   666   000FE3                     PLUSW1          equ	4067	;# 
   667   000FE4                     PREINC1         equ	4068	;# 
   668   000FE5                     POSTDEC1        equ	4069	;# 
   669   000FE6                     POSTINC1        equ	4070	;# 
   670   000FE7                     INDF1           equ	4071	;# 
   671   000FE8                     WREG            equ	4072	;# 
   672   000FE9                     FSR0            equ	4073	;# 
   673   000FE9                     FSR0L           equ	4073	;# 
   674   000FEA                     FSR0H           equ	4074	;# 
   675   000FEB                     PLUSW0          equ	4075	;# 
   676   000FEC                     PREINC0         equ	4076	;# 
   677   000FED                     POSTDEC0        equ	4077	;# 
   678   000FEE                     POSTINC0        equ	4078	;# 
   679   000FEF                     INDF0           equ	4079	;# 
   680   000FF0                     INTCON3         equ	4080	;# 
   681   000FF1                     INTCON2         equ	4081	;# 
   682   000FF2                     INTCON          equ	4082	;# 
   683   000FF3                     PROD            equ	4083	;# 
   684   000FF3                     PRODL           equ	4083	;# 
   685   000FF4                     PRODH           equ	4084	;# 
   686   000FF5                     TABLAT          equ	4085	;# 
   687   000FF6                     TBLPTR          equ	4086	;# 
   688   000FF6                     TBLPTRL         equ	4086	;# 
   689   000FF7                     TBLPTRH         equ	4087	;# 
   690   000FF8                     TBLPTRU         equ	4088	;# 
   691   000FF9                     PCLAT           equ	4089	;# 
   692   000FF9                     PC              equ	4089	;# 
   693   000FF9                     PCL             equ	4089	;# 
   694   000FFA                     PCLATH          equ	4090	;# 
   695   000FFB                     PCLATU          equ	4091	;# 
   696   000FFC                     STKPTR          equ	4092	;# 
   697   000FFD                     TOS             equ	4093	;# 
   698   000FFD                     TOSL            equ	4093	;# 
   699   000FFE                     TOSH            equ	4094	;# 
   700   000FFF                     TOSU            equ	4095	;# 
   701   000F77                     SSPMSK          equ	3959	;# 
   702   000F78                     SLRCON          equ	3960	;# 
   703   000F79                     CM2CON1         equ	3961	;# 
   704   000F7A                     CM2CON0         equ	3962	;# 
   705   000F7B                     CM1CON0         equ	3963	;# 
   706   000F7C                     WPUB            equ	3964	;# 
   707   000F7D                     IOCB            equ	3965	;# 
   708   000F7E                     ANSEL           equ	3966	;# 
   709   000F7F                     ANSELH          equ	3967	;# 
   710   000F80                     PORTA           equ	3968	;# 
   711   000F81                     PORTB           equ	3969	;# 
   712   000F82                     PORTC           equ	3970	;# 
   713   000F83                     PORTD           equ	3971	;# 
   714   000F84                     PORTE           equ	3972	;# 
   715   000F89                     LATA            equ	3977	;# 
   716   000F8A                     LATB            equ	3978	;# 
   717   000F8B                     LATC            equ	3979	;# 
   718   000F8C                     LATD            equ	3980	;# 
   719   000F8D                     LATE            equ	3981	;# 
   720   000F92                     TRISA           equ	3986	;# 
   721   000F92                     DDRA            equ	3986	;# 
   722   000F93                     TRISB           equ	3987	;# 
   723   000F93                     DDRB            equ	3987	;# 
   724   000F94                     TRISC           equ	3988	;# 
   725   000F94                     DDRC            equ	3988	;# 
   726   000F95                     TRISD           equ	3989	;# 
   727   000F95                     DDRD            equ	3989	;# 
   728   000F96                     TRISE           equ	3990	;# 
   729   000F96                     DDRE            equ	3990	;# 
   730   000F9B                     OSCTUNE         equ	3995	;# 
   731   000F9D                     PIE1            equ	3997	;# 
   732   000F9E                     PIR1            equ	3998	;# 
   733   000F9F                     IPR1            equ	3999	;# 
   734   000FA0                     PIE2            equ	4000	;# 
   735   000FA1                     PIR2            equ	4001	;# 
   736   000FA2                     IPR2            equ	4002	;# 
   737   000FA6                     EECON1          equ	4006	;# 
   738   000FA7                     EECON2          equ	4007	;# 
   739   000FA8                     EEDATA          equ	4008	;# 
   740   000FA9                     EEADR           equ	4009	;# 
   741   000FAA                     EEADRH          equ	4010	;# 
   742   000FAB                     RCSTA           equ	4011	;# 
   743   000FAB                     RCSTA1          equ	4011	;# 
   744   000FAC                     TXSTA           equ	4012	;# 
   745   000FAC                     TXSTA1          equ	4012	;# 
   746   000FAD                     TXREG           equ	4013	;# 
   747   000FAD                     TXREG1          equ	4013	;# 
   748   000FAE                     RCREG           equ	4014	;# 
   749   000FAE                     RCREG1          equ	4014	;# 
   750   000FAF                     SPBRG           equ	4015	;# 
   751   000FAF                     SPBRG1          equ	4015	;# 
   752   000FB0                     SPBRGH          equ	4016	;# 
   753   000FB1                     T3CON           equ	4017	;# 
   754   000FB2                     TMR3            equ	4018	;# 
   755   000FB2                     TMR3L           equ	4018	;# 
   756   000FB3                     TMR3H           equ	4019	;# 
   757   000FB4                     CVRCON2         equ	4020	;# 
   758   000FB5                     CVRCON          equ	4021	;# 
   759   000FB6                     ECCP1AS         equ	4022	;# 
   760   000FB7                     PWM1CON         equ	4023	;# 
   761   000FB8                     BAUDCON         equ	4024	;# 
   762   000FB8                     BAUDCTL         equ	4024	;# 
   763   000FB9                     PSTRCON         equ	4025	;# 
   764   000FBA                     CCP2CON         equ	4026	;# 
   765   000FBB                     CCPR2           equ	4027	;# 
   766   000FBB                     CCPR2L          equ	4027	;# 
   767   000FBC                     CCPR2H          equ	4028	;# 
   768   000FBD                     CCP1CON         equ	4029	;# 
   769   000FBE                     CCPR1           equ	4030	;# 
   770   000FBE                     CCPR1L          equ	4030	;# 
   771   000FBF                     CCPR1H          equ	4031	;# 
   772   000FC0                     ADCON2          equ	4032	;# 
   773   000FC1                     ADCON1          equ	4033	;# 
   774   000FC2                     ADCON0          equ	4034	;# 
   775   000FC3                     ADRES           equ	4035	;# 
   776   000FC3                     ADRESL          equ	4035	;# 
   777   000FC4                     ADRESH          equ	4036	;# 
   778   000FC5                     SSPCON2         equ	4037	;# 
   779   000FC6                     SSPCON1         equ	4038	;# 
   780   000FC7                     SSPSTAT         equ	4039	;# 
   781   000FC8                     SSPADD          equ	4040	;# 
   782   000FC9                     SSPBUF          equ	4041	;# 
   783   000FCA                     T2CON           equ	4042	;# 
   784   000FCB                     PR2             equ	4043	;# 
   785   000FCB                     MEMCON          equ	4043	;# 
   786   000FCC                     TMR2            equ	4044	;# 
   787   000FCD                     T1CON           equ	4045	;# 
   788   000FCE                     TMR1            equ	4046	;# 
   789   000FCE                     TMR1L           equ	4046	;# 
   790   000FCF                     TMR1H           equ	4047	;# 
   791   000FD0                     RCON            equ	4048	;# 
   792   000FD1                     WDTCON          equ	4049	;# 
   793   000FD2                     HLVDCON         equ	4050	;# 
   794   000FD2                     LVDCON          equ	4050	;# 
   795   000FD3                     OSCCON          equ	4051	;# 
   796   000FD5                     T0CON           equ	4053	;# 
   797   000FD6                     TMR0            equ	4054	;# 
   798   000FD6                     TMR0L           equ	4054	;# 
   799   000FD7                     TMR0H           equ	4055	;# 
   800   000FD8                     STATUS          equ	4056	;# 
   801   000FD9                     FSR2            equ	4057	;# 
   802   000FD9                     FSR2L           equ	4057	;# 
   803   000FDA                     FSR2H           equ	4058	;# 
   804   000FDB                     PLUSW2          equ	4059	;# 
   805   000FDC                     PREINC2         equ	4060	;# 
   806   000FDD                     POSTDEC2        equ	4061	;# 
   807   000FDE                     POSTINC2        equ	4062	;# 
   808   000FDF                     INDF2           equ	4063	;# 
   809   000FE0                     BSR             equ	4064	;# 
   810   000FE1                     FSR1            equ	4065	;# 
   811   000FE1                     FSR1L           equ	4065	;# 
   812   000FE2                     FSR1H           equ	4066	;# 
   813   000FE3                     PLUSW1          equ	4067	;# 
   814   000FE4                     PREINC1         equ	4068	;# 
   815   000FE5                     POSTDEC1        equ	4069	;# 
   816   000FE6                     POSTINC1        equ	4070	;# 
   817   000FE7                     INDF1           equ	4071	;# 
   818   000FE8                     WREG            equ	4072	;# 
   819   000FE9                     FSR0            equ	4073	;# 
   820   000FE9                     FSR0L           equ	4073	;# 
   821   000FEA                     FSR0H           equ	4074	;# 
   822   000FEB                     PLUSW0          equ	4075	;# 
   823   000FEC                     PREINC0         equ	4076	;# 
   824   000FED                     POSTDEC0        equ	4077	;# 
   825   000FEE                     POSTINC0        equ	4078	;# 
   826   000FEF                     INDF0           equ	4079	;# 
   827   000FF0                     INTCON3         equ	4080	;# 
   828   000FF1                     INTCON2         equ	4081	;# 
   829   000FF2                     INTCON          equ	4082	;# 
   830   000FF3                     PROD            equ	4083	;# 
   831   000FF3                     PRODL           equ	4083	;# 
   832   000FF4                     PRODH           equ	4084	;# 
   833   000FF5                     TABLAT          equ	4085	;# 
   834   000FF6                     TBLPTR          equ	4086	;# 
   835   000FF6                     TBLPTRL         equ	4086	;# 
   836   000FF7                     TBLPTRH         equ	4087	;# 
   837   000FF8                     TBLPTRU         equ	4088	;# 
   838   000FF9                     PCLAT           equ	4089	;# 
   839   000FF9                     PC              equ	4089	;# 
   840   000FF9                     PCL             equ	4089	;# 
   841   000FFA                     PCLATH          equ	4090	;# 
   842   000FFB                     PCLATU          equ	4091	;# 
   843   000FFC                     STKPTR          equ	4092	;# 
   844   000FFD                     TOS             equ	4093	;# 
   845   000FFD                     TOSL            equ	4093	;# 
   846   000FFE                     TOSH            equ	4094	;# 
   847   000FFF                     TOSU            equ	4095	;# 
   848                           
   849                           	psect	smallconst
   850   001000                     __psmallconst:
   851                           	callstack 0
   852   001000  00                 	db	0
   853   001001                     _default_security_key:
   854                           	callstack 0
   855   001001  00                 	db	0
   856   001002  10                 	db	16
   857   001003  25                 	db	37
   858   001004  37                 	db	55
   859   001005  04                 	db	4
   860   001006  55                 	db	85
   861   001007  06                 	db	6
   862   001008  79                 	db	121
   863   001009  08                 	db	8
   864   00100A  09                 	db	9
   865   00100B  10                 	db	16
   866   00100C  11                 	db	17
   867   00100D  12                 	db	18
   868   00100E  13                 	db	19
   869   00100F  14                 	db	20
   870   001010  15                 	db	21
   871   001011                     __end_of_default_security_key:
   872                           	callstack 0
   873   001011                     _default_mac_address:
   874                           	callstack 0
   875   001011  11                 	db	17
   876   001012  28                 	db	40
   877   001013  35                 	db	53
   878   001014  44                 	db	68
   879   001015  56                 	db	86
   880   001016  66                 	db	102
   881   001017  77                 	db	119
   882   001018  01                 	db	1
   883   001019                     __end_of_default_mac_address:
   884                           	callstack 0
   885   007CED                     _RCIE           set	31981
   886   007CEE                     _ADIE           set	31982
   887   007D03                     _BCLIE          set	32003
   888   007CEB                     _SSPIE          set	31979
   889   007D04                     _EEIE           set	32004
   890   007D00                     _CCP2IE         set	32000
   891   007CEA                     _CCP1IE         set	31978
   892   007CE9                     _TMR2IE         set	31977
   893   007CE8                     _TMR1IE         set	31976
   894   007F95                     _T0IE           set	32661
   895   007F93                     _RBIE           set	32659
   896   007F96                     _PEIE           set	32662
   897   007F97                     _GIE            set	32663
   898   000F9B                     _OSCTUNE        set	3995
   899   000FD3                     _OSCCON         set	4051
   900   000F96                     _TRISEbits      set	3990
   901   000F84                     _PORTE          set	3972
   902   000F83                     _PORTD          set	3971
   903   000F82                     _PORTC          set	3970
   904   000F81                     _PORTB          set	3969
   905   000F80                     _PORTA          set	3968
   906   000F8D                     _LATEbits       set	3981
   907   000FC9                     _SSPBUF         set	4041
   908   000F9E                     _PIR1bits       set	3998
   909   000FC6                     _SSPCON1bits    set	4038
   910   000FC7                     _SSPSTATbits    set	4039
   911   000F8C                     _LATDbits       set	3980
   912   000F8B                     _LATCbits       set	3979
   913   000F95                     _TRISDbits      set	3989
   914   000F94                     _TRISCbits      set	3988
   915   000F93                     _TRISBbits      set	3987
   916   001019                     STR_1:
   917   001019  68                 	db	104	;'h'
   918   00101A  6F                 	db	111	;'o'
   919   00101B  6C                 	db	108	;'l'
   920   00101C  61                 	db	97	;'a'
   921   00101D  20                 	db	32
   922   00101E  6D                 	db	109	;'m'
   923   00101F  75                 	db	117	;'u'
   924   001020  6E                 	db	110	;'n'
   925   001021  64                 	db	100	;'d'
   926   001022  6F                 	db	111	;'o'
   927   001023  2E                 	db	46
   928   001024  20                 	db	32
   929   001025  63                 	db	99	;'c'
   930   001026  61                 	db	97	;'a'
   931   001027  72                 	db	114	;'r'
   932   001028  61                 	db	97	;'a'
   933   001029  6A                 	db	106	;'j'
   934   00102A  6F                 	db	111	;'o'
   935   00102B  2C                 	db	44
   936   00102C  20                 	db	32
   937   00102D  6F                 	db	111	;'o'
   938   00102E  74                 	db	116	;'t'
   939   00102F  72                 	db	114	;'r'
   940   001030  61                 	db	97	;'a'
   941   001031  20                 	db	32
   942   001032  76                 	db	118	;'v'
   943   001033  65                 	db	101	;'e'
   944   001034  7A                 	db	122	;'z'
   945   001035  21                 	db	33
   946   001036  21                 	db	33
   947   001037  21                 	db	33
   948   001038  21                 	db	33
   949   001039  00                 	db	0
   950   00103A  00                 	db	0	; dummy byte at the end
   951   000001                     __activetblptr  equ	1
   952                           
   953                           ; #config settings
   954                           
   955                           	psect	cinit
   956   0015C0                     __pcinit:
   957                           	callstack 0
   958   0015C0                     start_initialization:
   959                           	callstack 0
   960   0015C0                     __initialization:
   961                           	callstack 0
   962                           
   963                           ; Clear objects allocated to BANK0 (55 bytes)
   964   0015C0  EE00  F060         	lfsr	0,__pbssBANK0
   965   0015C4  0E37               	movlw	55
   966   0015C6                     clear_0:
   967   0015C6  6AEE               	clrf	postinc0,c
   968   0015C8  06E8               	decf	wreg,f,c
   969   0015CA  E1FD               	bnz	clear_0
   970                           
   971                           ; Clear objects allocated to COMRAM (41 bytes)
   972   0015CC  EE00  F001         	lfsr	0,__pbssCOMRAM
   973   0015D0  0E29               	movlw	41
   974   0015D2                     clear_1:
   975   0015D2  6AEE               	clrf	postinc0,c
   976   0015D4  06E8               	decf	wreg,f,c
   977   0015D6  E1FD               	bnz	clear_1
   978   0015D8                     end_of_initialization:
   979                           	callstack 0
   980   0015D8                     __end_of__initialization:
   981                           	callstack 0
   982   0015D8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   983   0015DA  6EF8               	movwf	tblptru,c
   984   0015DC  0E10               	movlw	high __Lsmallconst
   985   0015DE  6EF7               	movwf	tblptrh,c
   986   0015E0  0100               	movlb	0
   987   0015E2  EF62  F009         	goto	_main	;jump to C main() function
   988                           
   989                           	psect	bssCOMRAM
   990   000001                     __pbssCOMRAM:
   991                           	callstack 0
   992   000001                     _mrf24_data_config:
   993                           	callstack 0
   994   000001                     	ds	34
   995   000023                     _mrf24_data_out:
   996                           	callstack 0
   997   000023                     	ds	6
   998   000029                     _my_default_mac_address:
   999                           	callstack 0
  1000   000029                     	ds	1
  1001                           
  1002                           	psect	bssBANK0
  1003   000060                     __pbssBANK0:
  1004                           	callstack 0
  1005   000060                     _mrf24_data_in:
  1006                           	callstack 0
  1007   000060                     	ds	55
  1008                           
  1009                           	psect	cstackCOMRAM
  1010   00002A                     __pcstackCOMRAM:
  1011                           	callstack 0
  1012   00002A                     ?_strlen:
  1013                           	callstack 0
  1014   00002A                     SetCSPin@estado:
  1015                           	callstack 0
  1016   00002A                     SetWakePin@estado:
  1017                           	callstack 0
  1018   00002A                     SetResetPin@estado:
  1019                           	callstack 0
  1020   00002A                     SPIWriteByte@dato:
  1021                           	callstack 0
  1022   00002A                     strlen@s:
  1023                           	callstack 0
  1024   00002A                     ??_InicializoVariables:
  1025   00002A                     
  1026                           ; 1 bytes @ 0x0
  1027   00002A                     	ds	1
  1028   00002B                     WriteByteSPIPort@dato:
  1029                           	callstack 0
  1030   00002B                     InicializoVariables@i:
  1031                           	callstack 0
  1032   00002B                     
  1033                           ; 1 bytes @ 0x1
  1034   00002B                     	ds	1
  1035   00002C                     SetShortAddr@value:
  1036                           	callstack 0
  1037   00002C                     GetShortAddr@leido_spi:
  1038                           	callstack 0
  1039   00002C                     strlen@a:
  1040                           	callstack 0
  1041   00002C                     SetLongAddr@reg_address:
  1042                           	callstack 0
  1043   00002C                     GetLongAddr@reg_address:
  1044                           	callstack 0
  1045   00002C                     
  1046                           ; 1 bytes @ 0x2
  1047   00002C                     	ds	1
  1048   00002D                     SetShortAddr@reg_address:
  1049                           	callstack 0
  1050   00002D                     GetShortAddr@reg_address:
  1051                           	callstack 0
  1052   00002D                     SetMensajeSalida@mensaje:
  1053                           	callstack 0
  1054   00002D                     
  1055                           ; 1 bytes @ 0x3
  1056   00002D                     	ds	1
  1057   00002E                     SetLongAddr@value:
  1058                           	callstack 0
  1059   00002E                     SetDeviceMACAddress@i:
  1060                           	callstack 0
  1061   00002E                     ??_GetLongAddr:
  1062   00002E                     
  1063                           ; 1 bytes @ 0x4
  1064   00002E                     	ds	1
  1065   00002F                     ??_SetLongAddr:
  1066                           
  1067                           ; 1 bytes @ 0x5
  1068   00002F                     	ds	1
  1069   000030                     GetLongAddr@toReturn:
  1070                           	callstack 0
  1071                           
  1072                           ; 1 bytes @ 0x6
  1073   000030                     	ds	1
  1074   000031                     ??_MRF24J40Init:
  1075   000031                     ??_EnviarDato:
  1076                           
  1077                           ; 1 bytes @ 0x7
  1078   000031                     	ds	1
  1079   000032                     MRF24J40Init@lectura:
  1080                           	callstack 0
  1081   000032                     EnviarDato@i:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x8
  1085   000032                     	ds	1
  1086   000033                     EnviarDato@pos:
  1087                           	callstack 0
  1088                           
  1089                           ; 1 bytes @ 0x9
  1090   000033                     	ds	1
  1091   000034                     ??_main:
  1092                           
  1093                           ; 1 bytes @ 0xA
  1094   000034                     	ds	2
  1095                           
  1096 ;;
  1097 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1098 ;;
  1099 ;; *************** function _main *****************
  1100 ;; Defined at:
  1101 ;;		line 23 in file "main.c"
  1102 ;; Parameters:    Size  Location     Type
  1103 ;;		None
  1104 ;; Auto vars:     Size  Location     Type
  1105 ;;		None
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;Total ram usage:        2 bytes
  1120 ;; Hardware stack levels required when called: 5
  1121 ;; This function calls:
  1122 ;;		_BoardInit
  1123 ;;		_EnviarDato
  1124 ;;		_MRF24J40Init
  1125 ;;		_SetMensajeSalida
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text0
  1132   0012C4                     __ptext0:
  1133                           	callstack 0
  1134   0012C4                     _main:
  1135                           	callstack 26
  1136   0012C4                     
  1137                           ;main.c: 25:     BoardInit();
  1138   0012C4  EC7E  F00A         	call	_BoardInit	;wreg free
  1139   0012C8                     
  1140                           ;main.c: 26:     MRF24J40Init();
  1141   0012C8  EC1E  F008         	call	_MRF24J40Init	;wreg free
  1142   0012CC                     
  1143                           ;main.c: 28:     SetMensajeSalida("hola mundo. carajo, otra vez!!!!");
  1144   0012CC  0E19               	movlw	low STR_1
  1145   0012CE  6E2D               	movwf	SetMensajeSalida@mensaje^0,c
  1146   0012D0  EC49  F00B         	call	_SetMensajeSalida	;wreg free
  1147   0012D4                     l209:
  1148   0012D4  0004               	clrwdt		;# 
  1149   0012D6                     
  1150                           ;main.c: 34:         LATEbits.LATE2 = !LATEbits.LATE2;
  1151   0012D6  A48D               	btfss	141,2,c	;volatile
  1152   0012D8  EF70  F009         	goto	u491
  1153   0012DC  EF74  F009         	goto	u490
  1154   0012E0                     u491:
  1155   0012E0  6A34               	clrf	??_main^0,c
  1156   0012E2  2A34               	incf	??_main^0,f,c
  1157   0012E4  EF75  F009         	goto	u508
  1158   0012E8                     u490:
  1159   0012E8  6A34               	clrf	??_main^0,c
  1160   0012EA                     u508:
  1161   0012EA  4634               	rlncf	??_main^0,f,c
  1162   0012EC  4634               	rlncf	??_main^0,f,c
  1163   0012EE  508D               	movf	141,w,c	;volatile
  1164   0012F0  1834               	xorwf	??_main^0,w,c
  1165   0012F2  0BFB               	andlw	-5
  1166   0012F4  1834               	xorwf	??_main^0,w,c
  1167   0012F6  6E8D               	movwf	141,c	;volatile
  1168   0012F8                     
  1169                           ;main.c: 35:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1170   0012F8  0E06               	movlw	6
  1171   0012FA  6E35               	movwf	(??_main+1)^0,c
  1172   0012FC  0E13               	movlw	19
  1173   0012FE  6E34               	movwf	??_main^0,c
  1174   001300  0EAE               	movlw	174
  1175   001302                     u557:
  1176   001302  2EE8               	decfsz	wreg,f,c
  1177   001304  D7FE               	bra	u557
  1178   001306  2E34               	decfsz	??_main^0,f,c
  1179   001308  D7FC               	bra	u557
  1180   00130A  2E35               	decfsz	(??_main+1)^0,f,c
  1181   00130C  D7FA               	bra	u557
  1182   00130E                     
  1183                           ;main.c: 36:         LATEbits.LATE1 = !LATEbits.LATE1;
  1184   00130E  A28D               	btfss	141,1,c	;volatile
  1185   001310  EF8C  F009         	goto	u511
  1186   001314  EF90  F009         	goto	u510
  1187   001318                     u511:
  1188   001318  6A34               	clrf	??_main^0,c
  1189   00131A  2A34               	incf	??_main^0,f,c
  1190   00131C  EF91  F009         	goto	u528
  1191   001320                     u510:
  1192   001320  6A34               	clrf	??_main^0,c
  1193   001322                     u528:
  1194   001322  4634               	rlncf	??_main^0,f,c
  1195   001324  508D               	movf	141,w,c	;volatile
  1196   001326  1834               	xorwf	??_main^0,w,c
  1197   001328  0BFD               	andlw	-3
  1198   00132A  1834               	xorwf	??_main^0,w,c
  1199   00132C  6E8D               	movwf	141,c	;volatile
  1200   00132E                     
  1201                           ;main.c: 37:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1202   00132E  0E06               	movlw	6
  1203   001330  6E35               	movwf	(??_main+1)^0,c
  1204   001332  0E13               	movlw	19
  1205   001334  6E34               	movwf	??_main^0,c
  1206   001336  0EAE               	movlw	174
  1207   001338                     u567:
  1208   001338  2EE8               	decfsz	wreg,f,c
  1209   00133A  D7FE               	bra	u567
  1210   00133C  2E34               	decfsz	??_main^0,f,c
  1211   00133E  D7FC               	bra	u567
  1212   001340  2E35               	decfsz	(??_main+1)^0,f,c
  1213   001342  D7FA               	bra	u567
  1214   001344                     
  1215                           ;main.c: 38:         LATEbits.LATE0 = !LATEbits.LATE0;
  1216   001344  A08D               	btfss	141,0,c	;volatile
  1217   001346  EFA7  F009         	goto	u531
  1218   00134A  EFAB  F009         	goto	u530
  1219   00134E                     u531:
  1220   00134E  6A34               	clrf	??_main^0,c
  1221   001350  2A34               	incf	??_main^0,f,c
  1222   001352  EFAC  F009         	goto	u548
  1223   001356                     u530:
  1224   001356  6A34               	clrf	??_main^0,c
  1225   001358                     u548:
  1226   001358  508D               	movf	141,w,c	;volatile
  1227   00135A  1834               	xorwf	??_main^0,w,c
  1228   00135C  0BFE               	andlw	-2
  1229   00135E  1834               	xorwf	??_main^0,w,c
  1230   001360  6E8D               	movwf	141,c	;volatile
  1231   001362                     
  1232                           ;main.c: 39:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1233   001362  0E06               	movlw	6
  1234   001364  6E35               	movwf	(??_main+1)^0,c
  1235   001366  0E13               	movlw	19
  1236   001368  6E34               	movwf	??_main^0,c
  1237   00136A  0EAE               	movlw	174
  1238   00136C                     u577:
  1239   00136C  2EE8               	decfsz	wreg,f,c
  1240   00136E  D7FE               	bra	u577
  1241   001370  2E34               	decfsz	??_main^0,f,c
  1242   001372  D7FC               	bra	u577
  1243   001374  2E35               	decfsz	(??_main+1)^0,f,c
  1244   001376  D7FA               	bra	u577
  1245   001378                     
  1246                           ;main.c: 41:         EnviarDato();
  1247   001378  ECD7  F008         	call	_EnviarDato	;wreg free
  1248   00137C  EF6A  F009         	goto	l209
  1249   001380  EF00  F000         	goto	start
  1250   001384                     __end_of_main:
  1251                           	callstack 0
  1252                           
  1253 ;; *************** function _SetMensajeSalida *****************
  1254 ;; Defined at:
  1255 ;;		line 632 in file "drivers/scr/drv_mrf24j40.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  1258 ;;		 -> STR_1(33), 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;		None
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1270 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;Total ram usage:        1 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 1
  1277 ;; This function calls:
  1278 ;;		_strlen
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text1
  1285   001692                     __ptext1:
  1286                           	callstack 0
  1287   001692                     _SetMensajeSalida:
  1288                           	callstack 29
  1289   001692                     
  1290                           ;drivers/scr/drv_mrf24j40.c: 635: mrf24_data_out.buffer_salida = mensaje;
  1291   001692  C02D  F028         	movff	SetMensajeSalida@mensaje,_mrf24_data_out+5
  1292   001696                     
  1293                           ;drivers/scr/drv_mrf24j40.c: 636: mrf24_data_out.tamano_mensaje = (uint8_t) strlen(mensa
      +                          je);
  1294   001696  C02D  F02A         	movff	SetMensajeSalida@mensaje,strlen@s
  1295   00169A  EC9D  F00A         	call	_strlen	;wreg free
  1296   00169E  502A               	movf	?_strlen^0,w,c
  1297   0016A0  6E27               	movwf	(_mrf24_data_out+4)^0,c
  1298   0016A2  0012               	return		;funcret
  1299   0016A4                     __end_of_SetMensajeSalida:
  1300                           	callstack 0
  1301                           
  1302 ;; *************** function _strlen *****************
  1303 ;; Defined at:
  1304 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1307 ;;		 -> STR_1(33), 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1310 ;;		 -> STR_1(33), 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  2    0[COMRAM] unsigned int 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1324 ;;Total ram usage:        3 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_SetMensajeSalida
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text2
  1334   00153A                     __ptext2:
  1335                           	callstack 0
  1336   00153A                     _strlen:
  1337                           	callstack 29
  1338   00153A  C02A  F02C         	movff	strlen@s,strlen@a
  1339   00153E  EFA2  F00A         	goto	l1579
  1340   001542                     l1577:
  1341   001542  2A2A               	incf	strlen@s^0,f,c
  1342   001544                     l1579:
  1343   001544  C02A  FFF6         	movff	strlen@s,tblptrl
  1344   001548                     	if	0	;There is only one active tblptr byte
  1345   001548                     	endif
  1346   001548                     	if	0	;tblptru may be non-zero
  1347   001548                     	endif
  1348   001548                     	if	0	;tblptru may be non-zero
  1349   001548                     	endif
  1350   001548  0008               	tblrd		*
  1351   00154A  50F5               	movf	tablat,w,c
  1352   00154C  0900               	iorlw	0
  1353   00154E  A4D8               	btfss	status,2,c
  1354   001550  EFAC  F00A         	goto	u381
  1355   001554  EFAE  F00A         	goto	u380
  1356   001558                     u381:
  1357   001558  EFA1  F00A         	goto	l1577
  1358   00155C                     u380:
  1359   00155C  502C               	movf	strlen@a^0,w,c
  1360   00155E  5C2A               	subwf	strlen@s^0,w,c
  1361   001560  6E2A               	movwf	?_strlen^0,c
  1362   001562  6A2B               	clrf	(?_strlen+1)^0,c
  1363   001564  BE2A               	btfsc	?_strlen^0,7,c
  1364   001566  062B               	decf	(?_strlen+1)^0,f,c
  1365   001568  0012               	return		;funcret
  1366   00156A                     __end_of_strlen:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _MRF24J40Init *****************
  1370 ;; Defined at:
  1371 ;;		line 277 in file "drivers/scr/drv_mrf24j40.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;		None
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  lectura         1    8[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;Total ram usage:        2 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 4
  1392 ;; This function calls:
  1393 ;;		_GetLongAddr
  1394 ;;		_GetShortAddr
  1395 ;;		_InicializoPines
  1396 ;;		_InicializoVariables
  1397 ;;		_SetChannel
  1398 ;;		_SetDeviceAddress
  1399 ;;		_SetDeviceMACAddress
  1400 ;;		_SetLongAddr
  1401 ;;		_SetResetPin
  1402 ;;		_SetShortAddr
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text3
  1409   00103C                     __ptext3:
  1410                           	callstack 0
  1411   00103C                     _MRF24J40Init:
  1412                           	callstack 26
  1413   00103C                     
  1414                           ;drivers/scr/drv_mrf24j40.c: 279:     uint8_t lectura;;drivers/scr/drv_mrf24j40.c: 280: 
      +                              InicializoVariables();
  1415   00103C  ECC2  F009         	call	_InicializoVariables	;wreg free
  1416   001040                     
  1417                           ;drivers/scr/drv_mrf24j40.c: 281:     InicializoPines();
  1418   001040  EC16  F00B         	call	_InicializoPines	;wreg free
  1419   001044                     
  1420                           ;drivers/scr/drv_mrf24j40.c: 282:   _delay((unsigned long)((5)*(16000000/4000.0)));;
  1421   001044  0E1A               	movlw	26
  1422   001046  6E31               	movwf	??_MRF24J40Init^0,c
  1423   001048  0EF8               	movlw	248
  1424   00104A                     u587:
  1425   00104A  2EE8               	decfsz	wreg,f,c
  1426   00104C  D7FE               	bra	u587
  1427   00104E  2E31               	decfsz	??_MRF24J40Init^0,f,c
  1428   001050  D7FC               	bra	u587
  1429   001052  F000 F000          	nop2	
  1430   001056                     
  1431                           ;drivers/scr/drv_mrf24j40.c: 283:     SetResetPin(1);
  1432   001056  0E01               	movlw	1
  1433   001058  EC59  F00B         	call	_SetResetPin
  1434   00105C                     
  1435                           ;drivers/scr/drv_mrf24j40.c: 284:  _delay((unsigned long)((5)*(16000000/4000.0)));;
  1436   00105C  0E1A               	movlw	26
  1437   00105E  6E31               	movwf	??_MRF24J40Init^0,c
  1438   001060  0EF8               	movlw	248
  1439   001062                     u597:
  1440   001062  2EE8               	decfsz	wreg,f,c
  1441   001064  D7FE               	bra	u597
  1442   001066  2E31               	decfsz	??_MRF24J40Init^0,f,c
  1443   001068  D7FC               	bra	u597
  1444   00106A  F000 F000          	nop2	
  1445   00106E                     
  1446                           ;drivers/scr/drv_mrf24j40.c: 285:     SetShortAddr((0x2A),0x07);
  1447   00106E  0E07               	movlw	7
  1448   001070  6E2C               	movwf	SetShortAddr@value^0,c
  1449   001072  0E2A               	movlw	42
  1450   001074  EC06  F00B         	call	_SetShortAddr
  1451   001078                     l1597:
  1452                           
  1453                           ;drivers/scr/drv_mrf24j40.c: 288:         lectura = GetShortAddr((0x2A));
  1454   001078  0E2A               	movlw	42
  1455   00107A  ECF3  F00A         	call	_GetShortAddr
  1456   00107E  6E32               	movwf	MRF24J40Init@lectura^0,c
  1457   001080                     
  1458                           ;drivers/scr/drv_mrf24j40.c: 289:     }while((lectura&0x07) != 0x00);
  1459   001080  C032  F031         	movff	MRF24J40Init@lectura,??_MRF24J40Init
  1460   001084  0E07               	movlw	7
  1461   001086  1631               	andwf	??_MRF24J40Init^0,f,c
  1462   001088  A4D8               	btfss	status,2,c
  1463   00108A  EF49  F008         	goto	u391
  1464   00108E  EF4B  F008         	goto	u390
  1465   001092                     u391:
  1466   001092  EF3C  F008         	goto	l1597
  1467   001096                     u390:
  1468   001096                     
  1469                           ;drivers/scr/drv_mrf24j40.c: 290:     _delay((unsigned long)((10)*(16000000/4000.0)));;
  1470   001096  0E34               	movlw	52
  1471   001098  6E31               	movwf	??_MRF24J40Init^0,c
  1472   00109A  0EF2               	movlw	242
  1473   00109C                     u607:
  1474   00109C  2EE8               	decfsz	wreg,f,c
  1475   00109E  D7FE               	bra	u607
  1476   0010A0  2E31               	decfsz	??_MRF24J40Init^0,f,c
  1477   0010A2  D7FC               	bra	u607
  1478   0010A4                     
  1479                           ;drivers/scr/drv_mrf24j40.c: 291:     SetShortAddr((0x0D), 0x01);
  1480   0010A4  0E01               	movlw	1
  1481   0010A6  6E2C               	movwf	SetShortAddr@value^0,c
  1482   0010A8  0E0D               	movlw	13
  1483   0010AA  EC06  F00B         	call	_SetShortAddr
  1484   0010AE                     
  1485                           ;drivers/scr/drv_mrf24j40.c: 292:     SetDeviceAddress();
  1486   0010AE  ECCB  F00A         	call	_SetDeviceAddress	;wreg free
  1487   0010B2                     
  1488                           ;drivers/scr/drv_mrf24j40.c: 293:     SetDeviceMACAddress();
  1489   0010B2  EC3C  F00A         	call	_SetDeviceMACAddress	;wreg free
  1490   0010B6                     
  1491                           ;drivers/scr/drv_mrf24j40.c: 294:     SetLongAddr((0x202), 0x80);
  1492   0010B6  0E02               	movlw	2
  1493   0010B8  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1494   0010BA  0E02               	movlw	2
  1495   0010BC  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1496   0010BE  0E80               	movlw	128
  1497   0010C0  6E2E               	movwf	SetLongAddr@value^0,c
  1498   0010C2  EC5D  F00A         	call	_SetLongAddr	;wreg free
  1499   0010C6                     
  1500                           ;drivers/scr/drv_mrf24j40.c: 295:     SetLongAddr((0x203), (0XC0) | (0X38));
  1501   0010C6  0E02               	movlw	2
  1502   0010C8  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1503   0010CA  0E03               	movlw	3
  1504   0010CC  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1505   0010CE  0EF8               	movlw	248
  1506   0010D0  6E2E               	movwf	SetLongAddr@value^0,c
  1507   0010D2  EC5D  F00A         	call	_SetLongAddr	;wreg free
  1508   0010D6                     
  1509                           ;drivers/scr/drv_mrf24j40.c: 296:  SetLongAddr((0x206), 0x90);
  1510   0010D6  0E02               	movlw	2
  1511   0010D8  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1512   0010DA  0E06               	movlw	6
  1513   0010DC  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1514   0010DE  0E90               	movlw	144
  1515   0010E0  6E2E               	movwf	SetLongAddr@value^0,c
  1516   0010E2  EC5D  F00A         	call	_SetLongAddr	;wreg free
  1517   0010E6                     
  1518                           ;drivers/scr/drv_mrf24j40.c: 297:  SetLongAddr((0x207), 0x80);
  1519   0010E6  0E02               	movlw	2
  1520   0010E8  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1521   0010EA  0E07               	movlw	7
  1522   0010EC  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1523   0010EE  0E80               	movlw	128
  1524   0010F0  6E2E               	movwf	SetLongAddr@value^0,c
  1525   0010F2  EC5D  F00A         	call	_SetLongAddr	;wreg free
  1526   0010F6                     
  1527                           ;drivers/scr/drv_mrf24j40.c: 298:  SetLongAddr((0x208), 0x10);
  1528   0010F6  0E02               	movlw	2
  1529   0010F8  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1530   0010FA  0E08               	movlw	8
  1531   0010FC  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1532   0010FE  0E10               	movlw	16
  1533   001100  6E2E               	movwf	SetLongAddr@value^0,c
  1534   001102  EC5D  F00A         	call	_SetLongAddr	;wreg free
  1535   001106                     
  1536                           ;drivers/scr/drv_mrf24j40.c: 299:  SetLongAddr((0x220), 0x21);
  1537   001106  0E02               	movlw	2
  1538   001108  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1539   00110A  0E20               	movlw	32
  1540   00110C  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1541   00110E  0E21               	movlw	33
  1542   001110  6E2E               	movwf	SetLongAddr@value^0,c
  1543   001112  EC5D  F00A         	call	_SetLongAddr	;wreg free
  1544   001116                     
  1545                           ;drivers/scr/drv_mrf24j40.c: 300:     SetShortAddr((0x3A), 0x80);
  1546   001116  0E80               	movlw	128
  1547   001118  6E2C               	movwf	SetShortAddr@value^0,c
  1548   00111A  0E3A               	movlw	58
  1549   00111C  EC06  F00B         	call	_SetShortAddr
  1550   001120                     
  1551                           ;drivers/scr/drv_mrf24j40.c: 301:     SetShortAddr((0x3E), 0x40);
  1552   001120  0E40               	movlw	64
  1553   001122  6E2C               	movwf	SetShortAddr@value^0,c
  1554   001124  0E3E               	movlw	62
  1555   001126  EC06  F00B         	call	_SetShortAddr
  1556   00112A                     
  1557                           ;drivers/scr/drv_mrf24j40.c: 302:     SetShortAddr((0x3F), 0x60);
  1558   00112A  0E60               	movlw	96
  1559   00112C  6E2C               	movwf	SetShortAddr@value^0,c
  1560   00112E  0E3F               	movlw	63
  1561   001130  EC06  F00B         	call	_SetShortAddr
  1562   001134                     
  1563                           ;drivers/scr/drv_mrf24j40.c: 303:     SetShortAddr((0x18), 0x98);
  1564   001134  0E98               	movlw	152
  1565   001136  6E2C               	movwf	SetShortAddr@value^0,c
  1566   001138  0E18               	movlw	24
  1567   00113A  EC06  F00B         	call	_SetShortAddr
  1568   00113E                     
  1569                           ;drivers/scr/drv_mrf24j40.c: 304:     SetShortAddr((0x2E), 0x95);
  1570   00113E  0E95               	movlw	149
  1571   001140  6E2C               	movwf	SetShortAddr@value^0,c
  1572   001142  0E2E               	movlw	46
  1573   001144  EC06  F00B         	call	_SetShortAddr
  1574   001148                     l1631:
  1575                           
  1576                           ;drivers/scr/drv_mrf24j40.c: 307:   lectura = GetLongAddr((0x20f));
  1577   001148  0E02               	movlw	2
  1578   00114A  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  1579   00114C  0E0F               	movlw	15
  1580   00114E  6E2C               	movwf	GetLongAddr@reg_address^0,c
  1581   001150  EC1A  F00A         	call	_GetLongAddr	;wreg free
  1582   001154  6E32               	movwf	MRF24J40Init@lectura^0,c
  1583   001156                     
  1584                           ;drivers/scr/drv_mrf24j40.c: 308:  }while((lectura & 0xA0) != 0xA0);
  1585   001156  5032               	movf	MRF24J40Init@lectura^0,w,c
  1586   001158  0BA0               	andlw	160
  1587   00115A  0AA0               	xorlw	160
  1588   00115C  A4D8               	btfss	status,2,c
  1589   00115E  EFB3  F008         	goto	u401
  1590   001162  EFB5  F008         	goto	u400
  1591   001166                     u401:
  1592   001166  EFA4  F008         	goto	l1631
  1593   00116A                     u400:
  1594   00116A                     
  1595                           ;drivers/scr/drv_mrf24j40.c: 309:     SetShortAddr((0x32), 0xE6);
  1596   00116A  0EE6               	movlw	230
  1597   00116C  6E2C               	movwf	SetShortAddr@value^0,c
  1598   00116E  0E32               	movlw	50
  1599   001170  EC06  F00B         	call	_SetShortAddr
  1600                           
  1601                           ;drivers/scr/drv_mrf24j40.c: 310:  SetShortAddr((0x12), 0xB9);
  1602   001174  0EB9               	movlw	185
  1603   001176  6E2C               	movwf	SetShortAddr@value^0,c
  1604   001178  0E12               	movlw	18
  1605   00117A  EC06  F00B         	call	_SetShortAddr
  1606                           
  1607                           ;drivers/scr/drv_mrf24j40.c: 311:     SetLongAddr((0x200), 0x03);
  1608   00117E  0E02               	movlw	2
  1609   001180  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1610   001182  0E00               	movlw	0
  1611   001184  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1612   001186  0E03               	movlw	3
  1613   001188  6E2E               	movwf	SetLongAddr@value^0,c
  1614   00118A  EC5D  F00A         	call	_SetLongAddr	;wreg free
  1615                           
  1616                           ;drivers/scr/drv_mrf24j40.c: 312:  SetLongAddr((0x201), 0x02);
  1617   00118E  0E02               	movlw	2
  1618   001190  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1619   001192  0E01               	movlw	1
  1620   001194  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1621   001196  0E02               	movlw	2
  1622   001198  6E2E               	movwf	SetLongAddr@value^0,c
  1623   00119A  EC5D  F00A         	call	_SetLongAddr	;wreg free
  1624                           
  1625                           ;drivers/scr/drv_mrf24j40.c: 313:  SetChannel();
  1626   00119E  ECB5  F00A         	call	_SetChannel	;wreg free
  1627                           
  1628                           ;drivers/scr/drv_mrf24j40.c: 322:  SetShortAddr((0x00),0x00);
  1629   0011A2  0E00               	movlw	0
  1630   0011A4  6E2C               	movwf	SetShortAddr@value^0,c
  1631   0011A6  0E00               	movlw	0
  1632   0011A8  EC06  F00B         	call	_SetShortAddr
  1633   0011AC  0012               	return		;funcret
  1634   0011AE                     __end_of_MRF24J40Init:
  1635                           	callstack 0
  1636                           
  1637 ;; *************** function _SetDeviceMACAddress *****************
  1638 ;; Defined at:
  1639 ;;		line 454 in file "drivers/scr/drv_mrf24j40.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  i               2    4[COMRAM] int 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;Total ram usage:        2 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 3
  1660 ;; This function calls:
  1661 ;;		_SetShortAddr
  1662 ;; This function is called by:
  1663 ;;		_MRF24J40Init
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text4
  1668   001478                     __ptext4:
  1669                           	callstack 0
  1670   001478                     _SetDeviceMACAddress:
  1671                           	callstack 26
  1672   001478                     
  1673                           ;drivers/scr/drv_mrf24j40.c: 456:     my_default_mac_address = EADR0;
  1674   001478  0E05               	movlw	5
  1675   00147A  6E29               	movwf	_my_default_mac_address^0,c
  1676                           
  1677                           ;drivers/scr/drv_mrf24j40.c: 458:     for(int i = 0; i < 8; i++) {
  1678   00147C  0E00               	movlw	0
  1679   00147E  6E2F               	movwf	(SetDeviceMACAddress@i+1)^0,c
  1680   001480  0E00               	movlw	0
  1681   001482  6E2E               	movwf	SetDeviceMACAddress@i^0,c
  1682   001484                     l1545:
  1683                           
  1684                           ;drivers/scr/drv_mrf24j40.c: 460:         SetShortAddr(my_default_mac_address++, mrf24_d
      +                          ata_config.my_mac[i]);
  1685   001484  502E               	movf	SetDeviceMACAddress@i^0,w,c
  1686   001486  0F15               	addlw	low (_mrf24_data_config+20)
  1687   001488  6ED9               	movwf	fsr2l,c
  1688   00148A  6ADA               	clrf	fsr2h,c
  1689   00148C  50DF               	movf	indf2,w,c
  1690   00148E  6E2C               	movwf	SetShortAddr@value^0,c
  1691   001490  5029               	movf	_my_default_mac_address^0,w,c
  1692   001492  EC06  F00B         	call	_SetShortAddr
  1693   001496  2A29               	incf	_my_default_mac_address^0,f,c
  1694   001498                     
  1695                           ;drivers/scr/drv_mrf24j40.c: 461:     }
  1696   001498  4A2E               	infsnz	SetDeviceMACAddress@i^0,f,c
  1697   00149A  2A2F               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  1698   00149C  BE2F               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  1699   00149E  EF5A  F00A         	goto	u361
  1700   0014A2  502F               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  1701   0014A4  E109               	bnz	u360
  1702   0014A6  0E08               	movlw	8
  1703   0014A8  5C2E               	subwf	SetDeviceMACAddress@i^0,w,c
  1704   0014AA  A0D8               	btfss	status,0,c
  1705   0014AC  EF5A  F00A         	goto	u361
  1706   0014B0  EF5C  F00A         	goto	u360
  1707   0014B4                     u361:
  1708   0014B4  EF42  F00A         	goto	l1545
  1709   0014B8                     u360:
  1710   0014B8  0012               	return		;funcret
  1711   0014BA                     __end_of_SetDeviceMACAddress:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _SetDeviceAddress *****************
  1715 ;; Defined at:
  1716 ;;		line 440 in file "drivers/scr/drv_mrf24j40.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;		None
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, status,2, status,0, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;Total ram usage:        0 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 3
  1737 ;; This function calls:
  1738 ;;		_SetShortAddr
  1739 ;; This function is called by:
  1740 ;;		_MRF24J40Init
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text5
  1745   001596                     __ptext5:
  1746                           	callstack 0
  1747   001596                     _SetDeviceAddress:
  1748                           	callstack 26
  1749   001596                     
  1750                           ;drivers/scr/drv_mrf24j40.c: 442:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> 8));
  1751   001596  5020               	movf	(_mrf24_data_config+31)^0,w,c
  1752   001598  6E2C               	movwf	SetShortAddr@value^0,c
  1753   00159A  0E04               	movlw	4
  1754   00159C  EC06  F00B         	call	_SetShortAddr
  1755                           
  1756                           ;drivers/scr/drv_mrf24j40.c: 443:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  1757   0015A0  C01F  F02C         	movff	_mrf24_data_config+30,SetShortAddr@value
  1758   0015A4  0E03               	movlw	3
  1759   0015A6  EC06  F00B         	call	_SetShortAddr
  1760                           
  1761                           ;drivers/scr/drv_mrf24j40.c: 444:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> 8));
  1762   0015AA  501E               	movf	(_mrf24_data_config+29)^0,w,c
  1763   0015AC  6E2C               	movwf	SetShortAddr@value^0,c
  1764   0015AE  0E02               	movlw	2
  1765   0015B0  EC06  F00B         	call	_SetShortAddr
  1766                           
  1767                           ;drivers/scr/drv_mrf24j40.c: 445:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  1768   0015B4  C01D  F02C         	movff	_mrf24_data_config+28,SetShortAddr@value
  1769   0015B8  0E01               	movlw	1
  1770   0015BA  EC06  F00B         	call	_SetShortAddr
  1771   0015BE  0012               	return		;funcret
  1772   0015C0                     __end_of_SetDeviceAddress:
  1773                           	callstack 0
  1774                           
  1775 ;; *************** function _SetChannel *****************
  1776 ;; Defined at:
  1777 ;;		line 426 in file "drivers/scr/drv_mrf24j40.c"
  1778 ;; Parameters:    Size  Location     Type
  1779 ;;		None
  1780 ;; Auto vars:     Size  Location     Type
  1781 ;;		None
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  1    wreg      void 
  1784 ;; Registers used:
  1785 ;;		wreg, status,2, status,0, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1795 ;;Total ram usage:        0 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 3
  1798 ;; This function calls:
  1799 ;;		_SetLongAddr
  1800 ;;		_SetShortAddr
  1801 ;; This function is called by:
  1802 ;;		_MRF24J40Init
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806                           	psect	text6
  1807   00156A                     __ptext6:
  1808                           	callstack 0
  1809   00156A                     _SetChannel:
  1810                           	callstack 26
  1811   00156A                     
  1812                           ;drivers/scr/drv_mrf24j40.c: 428:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  1813   00156A  0E02               	movlw	2
  1814   00156C  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1815   00156E  0E00               	movlw	0
  1816   001570  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1817   001572  C004  F02E         	movff	_mrf24_data_config+3,SetLongAddr@value
  1818   001576  EC5D  F00A         	call	_SetLongAddr	;wreg free
  1819                           
  1820                           ;drivers/scr/drv_mrf24j40.c: 429:  SetShortAddr((0x36), 0x04);
  1821   00157A  0E04               	movlw	4
  1822   00157C  6E2C               	movwf	SetShortAddr@value^0,c
  1823   00157E  0E36               	movlw	54
  1824   001580  EC06  F00B         	call	_SetShortAddr
  1825                           
  1826                           ;drivers/scr/drv_mrf24j40.c: 430:  SetShortAddr((0x36), 0x00);
  1827   001584  0E00               	movlw	0
  1828   001586  6E2C               	movwf	SetShortAddr@value^0,c
  1829   001588  0E36               	movlw	54
  1830   00158A  EC06  F00B         	call	_SetShortAddr
  1831   00158E                     
  1832                           ;drivers/scr/drv_mrf24j40.c: 431:  _delay((unsigned long)((192)*(16000000/4000000.0)));;
  1833   00158E  0E00               	movlw	0
  1834   001590                     u617:
  1835   001590  2EE8               	decfsz	wreg,f,c
  1836   001592  D7FE               	bra	u617
  1837   001594  0012               	return		;funcret
  1838   001596                     __end_of_SetChannel:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _InicializoVariables *****************
  1842 ;; Defined at:
  1843 ;;		line 332 in file "drivers/scr/drv_mrf24j40.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;  i               2    1[COMRAM] int 
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;Total ram usage:        3 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; This function calls:
  1864 ;;		Nothing
  1865 ;; This function is called by:
  1866 ;;		_MRF24J40Init
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text7
  1871   001384                     __ptext7:
  1872                           	callstack 0
  1873   001384                     _InicializoVariables:
  1874                           	callstack 29
  1875   001384                     
  1876                           ;drivers/scr/drv_mrf24j40.c: 334:     for(int i = 0; i < 16; i++){
  1877   001384  0E00               	movlw	0
  1878   001386  6E2C               	movwf	(InicializoVariables@i+1)^0,c
  1879   001388  0E00               	movlw	0
  1880   00138A  6E2B               	movwf	InicializoVariables@i^0,c
  1881   00138C                     l1493:
  1882                           
  1883                           ;drivers/scr/drv_mrf24j40.c: 336:         if(i < 8)
  1884   00138C  BE2C               	btfsc	(InicializoVariables@i+1)^0,7,c
  1885   00138E  EFD4  F009         	goto	u340
  1886   001392  502C               	movf	(InicializoVariables@i+1)^0,w,c
  1887   001394  E107               	bnz	u341
  1888   001396  0E08               	movlw	8
  1889   001398  5C2B               	subwf	InicializoVariables@i^0,w,c
  1890   00139A  B0D8               	btfsc	status,0,c
  1891   00139C  EFD2  F009         	goto	u341
  1892   0013A0  EFD4  F009         	goto	u340
  1893   0013A4                     u341:
  1894   0013A4  EFE0  F009         	goto	l54
  1895   0013A8                     u340:
  1896   0013A8                     
  1897                           ;drivers/scr/drv_mrf24j40.c: 337:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  1898   0013A8  502B               	movf	InicializoVariables@i^0,w,c
  1899   0013AA  0F11               	addlw	low _default_mac_address
  1900   0013AC  6E2A               	movwf	??_InicializoVariables^0,c
  1901   0013AE  C02A  FFF6         	movff	??_InicializoVariables,tblptrl
  1902   0013B2                     	if	0	;There is only one active tblptr byte
  1903   0013B2                     	endif
  1904   0013B2                     	if	0	;tblptru may be non-zero
  1905   0013B2                     	endif
  1906   0013B2                     	if	0	;tblptru may be non-zero
  1907   0013B2                     	endif
  1908   0013B2  502B               	movf	InicializoVariables@i^0,w,c
  1909   0013B4  0F15               	addlw	low (_mrf24_data_config+20)
  1910   0013B6  6ED9               	movwf	fsr2l,c
  1911   0013B8  6ADA               	clrf	fsr2h,c
  1912   0013BA  0008               	tblrd		*
  1913   0013BC  CFF5 FFDF          	movff	tablat,indf2
  1914   0013C0                     l54:
  1915                           
  1916                           ;drivers/scr/drv_mrf24j40.c: 338:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  1917   0013C0  502B               	movf	InicializoVariables@i^0,w,c
  1918   0013C2  0F01               	addlw	low _default_security_key
  1919   0013C4  6E2A               	movwf	??_InicializoVariables^0,c
  1920   0013C6  C02A  FFF6         	movff	??_InicializoVariables,tblptrl
  1921   0013CA                     	if	0	;There is only one active tblptr byte
  1922   0013CA                     	endif
  1923   0013CA                     	if	0	;tblptru may be non-zero
  1924   0013CA                     	endif
  1925   0013CA                     	if	0	;tblptru may be non-zero
  1926   0013CA                     	endif
  1927   0013CA  502B               	movf	InicializoVariables@i^0,w,c
  1928   0013CC  0F05               	addlw	low (_mrf24_data_config+4)
  1929   0013CE  6ED9               	movwf	fsr2l,c
  1930   0013D0  6ADA               	clrf	fsr2h,c
  1931   0013D2  0008               	tblrd		*
  1932   0013D4  CFF5 FFDF          	movff	tablat,indf2
  1933   0013D8                     
  1934                           ;drivers/scr/drv_mrf24j40.c: 339:     }
  1935   0013D8  4A2B               	infsnz	InicializoVariables@i^0,f,c
  1936   0013DA  2A2C               	incf	(InicializoVariables@i+1)^0,f,c
  1937   0013DC  BE2C               	btfsc	(InicializoVariables@i+1)^0,7,c
  1938   0013DE  EFFA  F009         	goto	u351
  1939   0013E2  502C               	movf	(InicializoVariables@i+1)^0,w,c
  1940   0013E4  E109               	bnz	u350
  1941   0013E6  0E10               	movlw	16
  1942   0013E8  5C2B               	subwf	InicializoVariables@i^0,w,c
  1943   0013EA  A0D8               	btfss	status,0,c
  1944   0013EC  EFFA  F009         	goto	u351
  1945   0013F0  EFFC  F009         	goto	u350
  1946   0013F4                     u351:
  1947   0013F4  EFC6  F009         	goto	l1493
  1948   0013F8                     u350:
  1949   0013F8                     
  1950                           ;drivers/scr/drv_mrf24j40.c: 340:     mrf24_data_config.sequence_number = 0x68;
  1951   0013F8  0E68               	movlw	104
  1952   0013FA  6E03               	movwf	(_mrf24_data_config+2)^0,c
  1953                           
  1954                           ;drivers/scr/drv_mrf24j40.c: 341:     mrf24_data_config.my_channel = CH_11;
  1955   0013FC  0E03               	movlw	3
  1956   0013FE  6E04               	movwf	(_mrf24_data_config+3)^0,c
  1957   001400                     
  1958                           ;drivers/scr/drv_mrf24j40.c: 342:     mrf24_data_config.get_new_msg = 0;
  1959   001400  6A01               	clrf	_mrf24_data_config^0,c
  1960   001402                     
  1961                           ;drivers/scr/drv_mrf24j40.c: 343:     mrf24_data_config.put_new_msg = 0;
  1962   001402  6A02               	clrf	(_mrf24_data_config+1)^0,c
  1963                           
  1964                           ;drivers/scr/drv_mrf24j40.c: 344:     mrf24_data_config.my_panid = 0x1234;
  1965   001404  0E12               	movlw	18
  1966   001406  6E1E               	movwf	(_mrf24_data_config+29)^0,c
  1967   001408  0E34               	movlw	52
  1968   00140A  6E1D               	movwf	(_mrf24_data_config+28)^0,c
  1969                           
  1970                           ;drivers/scr/drv_mrf24j40.c: 345:     mrf24_data_config.my_address = 0x0001;
  1971   00140C  0E00               	movlw	0
  1972   00140E  6E20               	movwf	(_mrf24_data_config+31)^0,c
  1973   001410  0E01               	movlw	1
  1974   001412  6E1F               	movwf	(_mrf24_data_config+30)^0,c
  1975                           
  1976                           ;drivers/scr/drv_mrf24j40.c: 346:     mrf24_data_config.intervalo = 0x2222;
  1977   001414  0E22               	movlw	34
  1978   001416  6E22               	movwf	(_mrf24_data_config+33)^0,c
  1979   001418  0E22               	movlw	34
  1980   00141A  6E21               	movwf	(_mrf24_data_config+32)^0,c
  1981                           
  1982                           ;drivers/scr/drv_mrf24j40.c: 347:     mrf24_data_in.source_address = 0;
  1983   00141C  0E00               	movlw	0
  1984   00141E  0100               	movlb	0	; () banked
  1985   001420  6F63               	movwf	(_mrf24_data_in+3)& (0+255),b
  1986   001422  0E00               	movlw	0
  1987   001424  6F62               	movwf	(_mrf24_data_in+2)& (0+255),b
  1988                           
  1989                           ;drivers/scr/drv_mrf24j40.c: 348:     mrf24_data_in.source_panid = 0;
  1990   001426  0E00               	movlw	0
  1991   001428  6F61               	movwf	(_mrf24_data_in+1)& (0+255),b
  1992   00142A  0E00               	movlw	0
  1993   00142C  6F60               	movwf	_mrf24_data_in& (0+255),b
  1994   00142E                     
  1995                           ; BSR set to: 0
  1996                           ;drivers/scr/drv_mrf24j40.c: 349:     mrf24_data_in.tamano_mensaje = 0;
  1997   00142E  6B64               	clrf	(_mrf24_data_in+4)& (0+255),b
  1998   001430                     
  1999                           ; BSR set to: 0
  2000                           ;drivers/scr/drv_mrf24j40.c: 350:     mrf24_data_in.buffer_entrada[0] = 0;
  2001   001430  6B65               	clrf	(_mrf24_data_in+5)& (0+255),b
  2002   001432                     
  2003                           ; BSR set to: 0
  2004   001432  0012               	return		;funcret
  2005   001434                     __end_of_InicializoVariables:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function _InicializoPines *****************
  2009 ;; Defined at:
  2010 ;;		line 21 in file "drivers/scr/drv_mrf24j40_port.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;		None
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;		None
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      void 
  2017 ;; Registers used:
  2018 ;;		wreg, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;Total ram usage:        0 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 1
  2031 ;; This function calls:
  2032 ;;		_SetCSPin
  2033 ;;		_SetResetPin
  2034 ;;		_SetWakePin
  2035 ;; This function is called by:
  2036 ;;		_MRF24J40Init
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text8
  2041   00162C                     __ptext8:
  2042                           	callstack 0
  2043   00162C                     _InicializoPines:
  2044                           	callstack 28
  2045   00162C                     
  2046                           ;drivers/scr/drv_mrf24j40_port.c: 23:     TRISBbits.TRISB0 = 1;
  2047   00162C  8093               	bsf	147,0,c	;volatile
  2048                           
  2049                           ;drivers/scr/drv_mrf24j40_port.c: 24:     TRISCbits.TRISC6 = 0;
  2050   00162E  9C94               	bcf	148,6,c	;volatile
  2051                           
  2052                           ;drivers/scr/drv_mrf24j40_port.c: 25:     TRISCbits.TRISC7 = 0;
  2053   001630  9E94               	bcf	148,7,c	;volatile
  2054                           
  2055                           ;drivers/scr/drv_mrf24j40_port.c: 26:     TRISDbits.TRISD4 = 0;
  2056   001632  9895               	bcf	149,4,c	;volatile
  2057   001634                     
  2058                           ;drivers/scr/drv_mrf24j40_port.c: 27:     SetCSPin(1);
  2059   001634  0E01               	movlw	1
  2060   001636  EC60  F00B         	call	_SetCSPin
  2061                           
  2062                           ;drivers/scr/drv_mrf24j40_port.c: 28:     SetWakePin(1);
  2063   00163A  0E01               	movlw	1
  2064   00163C  EC52  F00B         	call	_SetWakePin
  2065                           
  2066                           ;drivers/scr/drv_mrf24j40_port.c: 29:     SetResetPin(0);
  2067   001640  0E00               	movlw	0
  2068   001642  EC59  F00B         	call	_SetResetPin
  2069   001646  0012               	return		;funcret
  2070   001648                     __end_of_InicializoPines:
  2071                           	callstack 0
  2072                           
  2073 ;; *************** function _SetWakePin *****************
  2074 ;; Defined at:
  2075 ;;		line 49 in file "drivers/scr/drv_mrf24j40_port.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  estado          1    wreg     _Bool 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  estado          1    0[COMRAM] _Bool 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;Total ram usage:        1 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_InicializoPines
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           	psect	text9
  2103   0016A4                     __ptext9:
  2104                           	callstack 0
  2105   0016A4                     _SetWakePin:
  2106                           	callstack 28
  2107                           
  2108                           ;incstack = 0
  2109                           ;SetWakePin@estado stored from wreg
  2110   0016A4  6E2A               	movwf	SetWakePin@estado^0,c
  2111   0016A6                     
  2112                           ;drivers/scr/drv_mrf24j40_port.c: 51:     LATCbits.LATC7 = estado;
  2113   0016A6  B02A               	btfsc	SetWakePin@estado^0,0,c
  2114   0016A8  D002               	bra	u65
  2115   0016AA  9E8B               	bcf	139,7,c	;volatile
  2116   0016AC  D001               	bra	u66
  2117   0016AE                     u65:
  2118   0016AE  8E8B               	bsf	139,7,c	;volatile
  2119   0016B0                     u66:
  2120   0016B0  0012               	return		;funcret
  2121   0016B2                     __end_of_SetWakePin:
  2122                           	callstack 0
  2123                           
  2124 ;; *************** function _SetResetPin *****************
  2125 ;; Defined at:
  2126 ;;		line 60 in file "drivers/scr/drv_mrf24j40_port.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  estado          1    wreg     _Bool 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  estado          1    0[COMRAM] _Bool 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;Total ram usage:        1 bytes
  2145 ;; Hardware stack levels used: 1
  2146 ;; This function calls:
  2147 ;;		Nothing
  2148 ;; This function is called by:
  2149 ;;		_MRF24J40Init
  2150 ;;		_InicializoPines
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           
  2154                           	psect	text10
  2155   0016B2                     __ptext10:
  2156                           	callstack 0
  2157   0016B2                     _SetResetPin:
  2158                           	callstack 29
  2159                           
  2160                           ;incstack = 0
  2161                           ;SetResetPin@estado stored from wreg
  2162   0016B2  6E2A               	movwf	SetResetPin@estado^0,c
  2163   0016B4                     
  2164                           ;drivers/scr/drv_mrf24j40_port.c: 62:     LATDbits.LATD4 = estado;
  2165   0016B4  B02A               	btfsc	SetResetPin@estado^0,0,c
  2166   0016B6  D002               	bra	u45
  2167   0016B8  988C               	bcf	140,4,c	;volatile
  2168   0016BA  D001               	bra	u46
  2169   0016BC                     u45:
  2170   0016BC  888C               	bsf	140,4,c	;volatile
  2171   0016BE                     u46:
  2172   0016BE  0012               	return		;funcret
  2173   0016C0                     __end_of_SetResetPin:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _GetShortAddr *****************
  2177 ;; Defined at:
  2178 ;;		line 375 in file "drivers/scr/drv_mrf24j40.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  reg_address     1    wreg     unsigned char 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  reg_address     1    3[COMRAM] unsigned char 
  2183 ;;  leido_spi       1    2[COMRAM] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  1    wreg      unsigned char 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0, cstack
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;Total ram usage:        2 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 2
  2200 ;; This function calls:
  2201 ;;		_ReadByteSPIPort
  2202 ;;		_SetCSPin
  2203 ;;		_WriteByteSPIPort
  2204 ;; This function is called by:
  2205 ;;		_MRF24J40Init
  2206 ;; This function uses a non-reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text11
  2210   0015E6                     __ptext11:
  2211                           	callstack 0
  2212   0015E6                     _GetShortAddr:
  2213                           	callstack 27
  2214                           
  2215                           ;incstack = 0
  2216                           ;GetShortAddr@reg_address stored from wreg
  2217   0015E6  6E2D               	movwf	GetShortAddr@reg_address^0,c
  2218   0015E8                     
  2219                           ;drivers/scr/drv_mrf24j40.c: 378:     reg_address = (uint8_t) (reg_address << 1) & 0x7E;
  2220   0015E8  502D               	movf	GetShortAddr@reg_address^0,w,c
  2221   0015EA  242D               	addwf	GetShortAddr@reg_address^0,w,c
  2222   0015EC  0B7E               	andlw	126
  2223   0015EE  6E2D               	movwf	GetShortAddr@reg_address^0,c
  2224   0015F0                     
  2225                           ;drivers/scr/drv_mrf24j40.c: 379:     SetCSPin(0);
  2226   0015F0  0E00               	movlw	0
  2227   0015F2  EC60  F00B         	call	_SetCSPin
  2228   0015F6                     
  2229                           ;drivers/scr/drv_mrf24j40.c: 380:     WriteByteSPIPort(reg_address);
  2230   0015F6  502D               	movf	GetShortAddr@reg_address^0,w,c
  2231   0015F8  EC67  F00B         	call	_WriteByteSPIPort
  2232   0015FC                     
  2233                           ;drivers/scr/drv_mrf24j40.c: 381:     leido_spi = ReadByteSPIPort();
  2234   0015FC  EC6C  F00B         	call	_ReadByteSPIPort	;wreg free
  2235   001600  6E2C               	movwf	GetShortAddr@leido_spi^0,c
  2236   001602                     
  2237                           ;drivers/scr/drv_mrf24j40.c: 382:     SetCSPin(1);
  2238   001602  0E01               	movlw	1
  2239   001604  EC60  F00B         	call	_SetCSPin
  2240   001608                     
  2241                           ;drivers/scr/drv_mrf24j40.c: 383:  return leido_spi;
  2242   001608  502C               	movf	GetShortAddr@leido_spi^0,w,c
  2243   00160A  0012               	return		;funcret
  2244   00160C                     __end_of_GetShortAddr:
  2245                           	callstack 0
  2246                           
  2247 ;; *************** function _GetLongAddr *****************
  2248 ;; Defined at:
  2249 ;;		line 408 in file "drivers/scr/drv_mrf24j40.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  reg_address     2    2[COMRAM] unsigned short 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  toReturn        1    6[COMRAM] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      unsigned char 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;Total ram usage:        5 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 2
  2270 ;; This function calls:
  2271 ;;		_ReadByteSPIPort
  2272 ;;		_SetCSPin
  2273 ;;		_WriteByteSPIPort
  2274 ;; This function is called by:
  2275 ;;		_MRF24J40Init
  2276 ;;		_ReciboPaquete
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text12
  2281   001434                     __ptext12:
  2282                           	callstack 0
  2283   001434                     _GetLongAddr:
  2284                           	callstack 27
  2285   001434                     
  2286                           ;drivers/scr/drv_mrf24j40.c: 410:  uint8_t toReturn;;drivers/scr/drv_mrf24j40.c: 411:   
      +                            reg_address = (reg_address << 5) | 0x8000;
  2287   001434  C02C  F02E         	movff	GetLongAddr@reg_address,??_GetLongAddr
  2288   001438  C02D  F02F         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  2289   00143C  0E05               	movlw	5
  2290   00143E                     u375:
  2291   00143E  90D8               	bcf	status,0,c
  2292   001440  362E               	rlcf	??_GetLongAddr^0,f,c
  2293   001442  362F               	rlcf	(??_GetLongAddr+1)^0,f,c
  2294   001444  2EE8               	decfsz	wreg,f,c
  2295   001446  EF1F  F00A         	goto	u375
  2296   00144A  0E00               	movlw	0
  2297   00144C  102E               	iorwf	??_GetLongAddr^0,w,c
  2298   00144E  6E2C               	movwf	GetLongAddr@reg_address^0,c
  2299   001450  0E80               	movlw	128
  2300   001452  102F               	iorwf	(??_GetLongAddr+1)^0,w,c
  2301   001454  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  2302   001456                     
  2303                           ;drivers/scr/drv_mrf24j40.c: 412:     SetCSPin(0);
  2304   001456  0E00               	movlw	0
  2305   001458  EC60  F00B         	call	_SetCSPin
  2306   00145C                     
  2307                           ;drivers/scr/drv_mrf24j40.c: 413:     WriteByteSPIPort((uint8_t) (reg_address >> 8));
  2308   00145C  502D               	movf	(GetLongAddr@reg_address+1)^0,w,c
  2309   00145E  EC67  F00B         	call	_WriteByteSPIPort
  2310   001462                     
  2311                           ;drivers/scr/drv_mrf24j40.c: 414:  WriteByteSPIPort((uint8_t) reg_address );
  2312   001462  502C               	movf	GetLongAddr@reg_address^0,w,c
  2313   001464  EC67  F00B         	call	_WriteByteSPIPort
  2314   001468                     
  2315                           ;drivers/scr/drv_mrf24j40.c: 416:  toReturn = ReadByteSPIPort();
  2316   001468  EC6C  F00B         	call	_ReadByteSPIPort	;wreg free
  2317   00146C  6E30               	movwf	GetLongAddr@toReturn^0,c
  2318   00146E                     
  2319                           ;drivers/scr/drv_mrf24j40.c: 417:     SetCSPin(1);
  2320   00146E  0E01               	movlw	1
  2321   001470  EC60  F00B         	call	_SetCSPin
  2322   001474                     
  2323                           ;drivers/scr/drv_mrf24j40.c: 418:  return toReturn;
  2324   001474  5030               	movf	GetLongAddr@toReturn^0,w,c
  2325   001476  0012               	return		;funcret
  2326   001478                     __end_of_GetLongAddr:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _ReadByteSPIPort *****************
  2330 ;; Defined at:
  2331 ;;		line 93 in file "drivers/scr/drv_mrf24j40_port.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;		None
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;		None
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      unsigned char 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;Total ram usage:        0 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 1
  2352 ;; This function calls:
  2353 ;;		_SPIRead
  2354 ;; This function is called by:
  2355 ;;		_GetShortAddr
  2356 ;;		_GetLongAddr
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text13
  2361   0016D8                     __ptext13:
  2362                           	callstack 0
  2363   0016D8                     _ReadByteSPIPort:
  2364                           	callstack 27
  2365   0016D8                     
  2366                           ;drivers/scr/drv_mrf24j40_port.c: 95:     return SPIRead();
  2367   0016D8  EC3E  F00B         	call	_SPIRead	;wreg free
  2368   0016DC  0012               	return		;funcret
  2369   0016DE                     __end_of_ReadByteSPIPort:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function _SPIRead *****************
  2373 ;; Defined at:
  2374 ;;		line 82 in file "drivers/scr/drv_mspi_port.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;		None
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;		None
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      unsigned char 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2392 ;;Total ram usage:        0 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; This function calls:
  2395 ;;		Nothing
  2396 ;; This function is called by:
  2397 ;;		_ReadByteSPIPort
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text14
  2402   00167C                     __ptext14:
  2403                           	callstack 0
  2404   00167C                     _SPIRead:
  2405                           	callstack 27
  2406   00167C                     
  2407                           ;drivers/scr/drv_mspi_port.c: 84:     SSPCON1bits.WCOL = 0;
  2408   00167C  9EC6               	bcf	198,7,c	;volatile
  2409                           
  2410                           ;drivers/scr/drv_mspi_port.c: 85:     SSPBUF = 0x00;
  2411   00167E  6AC9               	clrf	201,c	;volatile
  2412   001680                     l189:
  2413   001680  A0C7               	btfss	199,0,c	;volatile
  2414   001682  EF45  F00B         	goto	u321
  2415   001686  EF47  F00B         	goto	u320
  2416   00168A                     u321:
  2417   00168A  EF40  F00B         	goto	l189
  2418   00168E                     u320:
  2419   00168E                     
  2420                           ;drivers/scr/drv_mspi_port.c: 87:     return SSPBUF;
  2421   00168E  50C9               	movf	201,w,c	;volatile
  2422   001690  0012               	return		;funcret
  2423   001692                     __end_of_SPIRead:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function _EnviarDato *****************
  2427 ;; Defined at:
  2428 ;;		line 535 in file "drivers/scr/drv_mrf24j40.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  pos             1    9[COMRAM] unsigned char 
  2433 ;;  i               1    8[COMRAM] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      void 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2447 ;;Total ram usage:        3 bytes
  2448 ;; Hardware stack levels used: 1
  2449 ;; Hardware stack levels required when called: 3
  2450 ;; This function calls:
  2451 ;;		_SetLongAddr
  2452 ;;		_SetShortAddr
  2453 ;; This function is called by:
  2454 ;;		_main
  2455 ;; This function uses a non-reentrant model
  2456 ;;
  2457                           
  2458                           	psect	text15
  2459   0011AE                     __ptext15:
  2460                           	callstack 0
  2461   0011AE                     _EnviarDato:
  2462                           	callstack 27
  2463   0011AE                     
  2464                           ;drivers/scr/drv_mrf24j40.c: 537:  uint8_t pos = 0;
  2465   0011AE  6A33               	clrf	EnviarDato@pos^0,c
  2466   0011B0                     
  2467                           ;drivers/scr/drv_mrf24j40.c: 540:  SetLongAddr(pos++, i);
  2468   0011B0  0E00               	movlw	0
  2469   0011B2  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  2470   0011B4  0E00               	movlw	0
  2471   0011B6  6E2C               	movwf	SetLongAddr@reg_address^0,c
  2472   0011B8  0E0F               	movlw	15
  2473   0011BA  6E2E               	movwf	SetLongAddr@value^0,c
  2474   0011BC  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2475   0011C0  2A33               	incf	EnviarDato@pos^0,f,c
  2476   0011C2                     
  2477                           ;drivers/scr/drv_mrf24j40.c: 541:  SetLongAddr(pos++, mrf24_data_out.tamano_mensaje + i)
      +                          ;
  2478   0011C2  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2479   0011C6  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2480   0011C8  5027               	movf	(_mrf24_data_out+4)^0,w,c
  2481   0011CA  0F0F               	addlw	15
  2482   0011CC  6E2E               	movwf	SetLongAddr@value^0,c
  2483   0011CE  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2484   0011D2  2A33               	incf	EnviarDato@pos^0,f,c
  2485   0011D4                     
  2486                           ;drivers/scr/drv_mrf24j40.c: 542:  SetLongAddr(pos++, (0X01)|(0X20)|(0X40));
  2487   0011D4  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2488   0011D8  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2489   0011DA  0E61               	movlw	97
  2490   0011DC  6E2E               	movwf	SetLongAddr@value^0,c
  2491   0011DE  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2492   0011E2  2A33               	incf	EnviarDato@pos^0,f,c
  2493   0011E4                     
  2494                           ;drivers/scr/drv_mrf24j40.c: 543:  SetLongAddr(pos++, (0XC0)|(0X08));
  2495   0011E4  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2496   0011E8  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2497   0011EA  0EC8               	movlw	200
  2498   0011EC  6E2E               	movwf	SetLongAddr@value^0,c
  2499   0011EE  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2500   0011F2  2A33               	incf	EnviarDato@pos^0,f,c
  2501   0011F4                     
  2502                           ;drivers/scr/drv_mrf24j40.c: 544:  SetLongAddr(pos++, mrf24_data_config.sequence_number+
      +                          +);
  2503   0011F4  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2504   0011F8  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2505   0011FA  EE20  F003         	lfsr	2,_mrf24_data_config+2
  2506   0011FE  50DF               	movf	indf2,w,c
  2507   001200  2ADF               	incf	indf2,f,c
  2508   001202  6E2E               	movwf	SetLongAddr@value^0,c
  2509   001204  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2510   001208  2A33               	incf	EnviarDato@pos^0,f,c
  2511   00120A                     
  2512                           ;drivers/scr/drv_mrf24j40.c: 545:  SetLongAddr(pos++, (uint8_t) mrf24_data_out.destinity
      +                          _panid);
  2513   00120A  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2514   00120E  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2515   001210  C023  F02E         	movff	_mrf24_data_out,SetLongAddr@value
  2516   001214  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2517   001218  2A33               	incf	EnviarDato@pos^0,f,c
  2518   00121A                     
  2519                           ;drivers/scr/drv_mrf24j40.c: 546:  SetLongAddr(pos++, (uint8_t) (mrf24_data_out.destinit
      +                          y_panid >> 8));
  2520   00121A  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2521   00121E  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2522   001220  5024               	movf	(_mrf24_data_out+1)^0,w,c
  2523   001222  6E2E               	movwf	SetLongAddr@value^0,c
  2524   001224  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2525   001228  2A33               	incf	EnviarDato@pos^0,f,c
  2526   00122A                     
  2527                           ;drivers/scr/drv_mrf24j40.c: 547:  SetLongAddr(pos++, (uint8_t) mrf24_data_out.destinity
      +                          _address);
  2528   00122A  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2529   00122E  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2530   001230  C025  F02E         	movff	_mrf24_data_out+2,SetLongAddr@value
  2531   001234  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2532   001238  2A33               	incf	EnviarDato@pos^0,f,c
  2533   00123A                     
  2534                           ;drivers/scr/drv_mrf24j40.c: 548:  SetLongAddr(pos++, (uint8_t) (mrf24_data_out.destinit
      +                          y_address >> 8));
  2535   00123A  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2536   00123E  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2537   001240  5026               	movf	(_mrf24_data_out+3)^0,w,c
  2538   001242  6E2E               	movwf	SetLongAddr@value^0,c
  2539   001244  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2540   001248  2A33               	incf	EnviarDato@pos^0,f,c
  2541   00124A                     
  2542                           ;drivers/scr/drv_mrf24j40.c: 550:  for(i = 0; i < 8; i++) {
  2543   00124A  6A32               	clrf	EnviarDato@i^0,c
  2544   00124C                     l1685:
  2545                           
  2546                           ;drivers/scr/drv_mrf24j40.c: 552:   SetLongAddr(pos++, mrf24_data_config.my_mac[i]);
  2547   00124C  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2548   001250  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2549   001252  5032               	movf	EnviarDato@i^0,w,c
  2550   001254  0F15               	addlw	low (_mrf24_data_config+20)
  2551   001256  6ED9               	movwf	fsr2l,c
  2552   001258  6ADA               	clrf	fsr2h,c
  2553   00125A  50DF               	movf	indf2,w,c
  2554   00125C  6E2E               	movwf	SetLongAddr@value^0,c
  2555   00125E  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2556   001262  2A33               	incf	EnviarDato@pos^0,f,c
  2557   001264                     
  2558                           ;drivers/scr/drv_mrf24j40.c: 553:  }
  2559   001264  2A32               	incf	EnviarDato@i^0,f,c
  2560   001266  0E07               	movlw	7
  2561   001268  6432               	cpfsgt	EnviarDato@i^0,c
  2562   00126A  EF39  F009         	goto	u411
  2563   00126E  EF3B  F009         	goto	u410
  2564   001272                     u411:
  2565   001272  EF26  F009         	goto	l1685
  2566   001276                     u410:
  2567   001276  EF4E  F009         	goto	l1697
  2568   00127A                     l1693:
  2569                           
  2570                           ;drivers/scr/drv_mrf24j40.c: 557:   SetLongAddr(pos++, *mrf24_data_out.buffer_salida++);
  2571   00127A  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2572   00127E  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2573   001280  EE20  F028         	lfsr	2,_mrf24_data_out+5
  2574   001284  CFDF F031          	movff	indf2,??_EnviarDato
  2575   001288  0E01               	movlw	1
  2576   00128A  26DF               	addwf	indf2,f,c
  2577   00128C  C031  FFF6         	movff	??_EnviarDato,tblptrl
  2578   001290                     	if	0	;There is only one active tblptr byte
  2579   001290                     	endif
  2580   001290                     	if	0	;tblptru may be non-zero
  2581   001290                     	endif
  2582   001290                     	if	0	;tblptru may be non-zero
  2583   001290                     	endif
  2584   001290  0008               	tblrd		*
  2585   001292  CFF5 F02E          	movff	tablat,SetLongAddr@value
  2586   001296  EC5D  F00A         	call	_SetLongAddr	;wreg free
  2587   00129A  2A33               	incf	EnviarDato@pos^0,f,c
  2588   00129C                     l1697:
  2589                           
  2590                           ;drivers/scr/drv_mrf24j40.c: 555:  while(*mrf24_data_out.buffer_salida) {
  2591   00129C  EE20  F028         	lfsr	2,_mrf24_data_out+5
  2592   0012A0  CFDF FFF6          	movff	indf2,tblptrl
  2593   0012A4                     	if	0	;There is only one active tblptr byte
  2594   0012A4                     	endif
  2595   0012A4                     	if	0	;tblptru may be non-zero
  2596   0012A4                     	endif
  2597   0012A4                     	if	0	;tblptru may be non-zero
  2598   0012A4                     	endif
  2599   0012A4  0008               	tblrd		*
  2600   0012A6  50F5               	movf	tablat,w,c
  2601   0012A8  0900               	iorlw	0
  2602   0012AA  A4D8               	btfss	status,2,c
  2603   0012AC  EF5A  F009         	goto	u421
  2604   0012B0  EF5C  F009         	goto	u420
  2605   0012B4                     u421:
  2606   0012B4  EF3D  F009         	goto	l1693
  2607   0012B8                     u420:
  2608   0012B8                     
  2609                           ;drivers/scr/drv_mrf24j40.c: 559:  SetShortAddr((0x1B), 1 | (0X04));
  2610   0012B8  0E05               	movlw	5
  2611   0012BA  6E2C               	movwf	SetShortAddr@value^0,c
  2612   0012BC  0E1B               	movlw	27
  2613   0012BE  EC06  F00B         	call	_SetShortAddr
  2614   0012C2  0012               	return		;funcret
  2615   0012C4                     __end_of_EnviarDato:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _SetShortAddr *****************
  2619 ;; Defined at:
  2620 ;;		line 360 in file "drivers/scr/drv_mrf24j40.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  reg_address     1    wreg     unsigned char 
  2623 ;;  value           1    2[COMRAM] unsigned char 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  reg_address     1    3[COMRAM] unsigned char 
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, status,2, status,0, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2635 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;Total ram usage:        2 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 2
  2642 ;; This function calls:
  2643 ;;		_SetCSPin
  2644 ;;		_WriteByteSPIPort
  2645 ;; This function is called by:
  2646 ;;		_MRF24J40Init
  2647 ;;		_SetChannel
  2648 ;;		_SetDeviceAddress
  2649 ;;		_SetDeviceMACAddress
  2650 ;;		_EnviarDato
  2651 ;;		_EnviarDatoEncriptado
  2652 ;;		_EnviarComando
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text16
  2657   00160C                     __ptext16:
  2658                           	callstack 0
  2659   00160C                     _SetShortAddr:
  2660                           	callstack 27
  2661                           
  2662                           ;incstack = 0
  2663                           ;SetShortAddr@reg_address stored from wreg
  2664   00160C  6E2D               	movwf	SetShortAddr@reg_address^0,c
  2665   00160E                     
  2666                           ;drivers/scr/drv_mrf24j40.c: 362:     reg_address = (uint8_t) (reg_address << 1) | 0x01;
  2667   00160E  80D8               	bsf	status,0,c
  2668   001610  362D               	rlcf	SetShortAddr@reg_address^0,f,c
  2669   001612                     
  2670                           ;drivers/scr/drv_mrf24j40.c: 363:     SetCSPin(0);
  2671   001612  0E00               	movlw	0
  2672   001614  EC60  F00B         	call	_SetCSPin
  2673   001618                     
  2674                           ;drivers/scr/drv_mrf24j40.c: 364:  WriteByteSPIPort(reg_address);
  2675   001618  502D               	movf	SetShortAddr@reg_address^0,w,c
  2676   00161A  EC67  F00B         	call	_WriteByteSPIPort
  2677   00161E                     
  2678                           ;drivers/scr/drv_mrf24j40.c: 365:  WriteByteSPIPort(value);
  2679   00161E  502C               	movf	SetShortAddr@value^0,w,c
  2680   001620  EC67  F00B         	call	_WriteByteSPIPort
  2681   001624                     
  2682                           ;drivers/scr/drv_mrf24j40.c: 366:     SetCSPin(1);
  2683   001624  0E01               	movlw	1
  2684   001626  EC60  F00B         	call	_SetCSPin
  2685   00162A  0012               	return		;funcret
  2686   00162C                     __end_of_SetShortAddr:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function _SetLongAddr *****************
  2690 ;; Defined at:
  2691 ;;		line 391 in file "drivers/scr/drv_mrf24j40.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  reg_address     2    2[COMRAM] unsigned short 
  2694 ;;  value           1    4[COMRAM] unsigned char 
  2695 ;; Auto vars:     Size  Location     Type
  2696 ;;		None
  2697 ;; Return value:  Size  Location     Type
  2698 ;;                  1    wreg      void 
  2699 ;; Registers used:
  2700 ;;		wreg, status,2, status,0, cstack
  2701 ;; Tracked objects:
  2702 ;;		On entry : 0/0
  2703 ;;		On exit  : 0/0
  2704 ;;		Unchanged: 0/0
  2705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2706 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;Total ram usage:        5 bytes
  2711 ;; Hardware stack levels used: 1
  2712 ;; Hardware stack levels required when called: 2
  2713 ;; This function calls:
  2714 ;;		_SetCSPin
  2715 ;;		_WriteByteSPIPort
  2716 ;; This function is called by:
  2717 ;;		_MRF24J40Init
  2718 ;;		_SetChannel
  2719 ;;		_EnviarDato
  2720 ;;		_EnviarDatoEncriptado
  2721 ;;		_EnviarComando
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text17
  2726   0014BA                     __ptext17:
  2727                           	callstack 0
  2728   0014BA                     _SetLongAddr:
  2729                           	callstack 27
  2730   0014BA                     
  2731                           ;drivers/scr/drv_mrf24j40.c: 393:     reg_address = (reg_address << 5) | 0x8010;
  2732   0014BA  C02C  F02F         	movff	SetLongAddr@reg_address,??_SetLongAddr
  2733   0014BE  C02D  F030         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  2734   0014C2  0E05               	movlw	5
  2735   0014C4                     u335:
  2736   0014C4  90D8               	bcf	status,0,c
  2737   0014C6  362F               	rlcf	??_SetLongAddr^0,f,c
  2738   0014C8  3630               	rlcf	(??_SetLongAddr+1)^0,f,c
  2739   0014CA  2EE8               	decfsz	wreg,f,c
  2740   0014CC  EF62  F00A         	goto	u335
  2741   0014D0  0E10               	movlw	16
  2742   0014D2  102F               	iorwf	??_SetLongAddr^0,w,c
  2743   0014D4  6E2C               	movwf	SetLongAddr@reg_address^0,c
  2744   0014D6  0E80               	movlw	128
  2745   0014D8  1030               	iorwf	(??_SetLongAddr+1)^0,w,c
  2746   0014DA  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  2747   0014DC                     
  2748                           ;drivers/scr/drv_mrf24j40.c: 394:     SetCSPin(0);
  2749   0014DC  0E00               	movlw	0
  2750   0014DE  EC60  F00B         	call	_SetCSPin
  2751   0014E2                     
  2752                           ;drivers/scr/drv_mrf24j40.c: 395:  WriteByteSPIPort((uint8_t) (reg_address >> 8));
  2753   0014E2  502D               	movf	(SetLongAddr@reg_address+1)^0,w,c
  2754   0014E4  EC67  F00B         	call	_WriteByteSPIPort
  2755   0014E8                     
  2756                           ;drivers/scr/drv_mrf24j40.c: 396:  WriteByteSPIPort((uint8_t) reg_address );
  2757   0014E8  502C               	movf	SetLongAddr@reg_address^0,w,c
  2758   0014EA  EC67  F00B         	call	_WriteByteSPIPort
  2759   0014EE                     
  2760                           ;drivers/scr/drv_mrf24j40.c: 398:  WriteByteSPIPort(value);
  2761   0014EE  502E               	movf	SetLongAddr@value^0,w,c
  2762   0014F0  EC67  F00B         	call	_WriteByteSPIPort
  2763   0014F4                     
  2764                           ;drivers/scr/drv_mrf24j40.c: 399:     SetCSPin(1);
  2765   0014F4  0E01               	movlw	1
  2766   0014F6  EC60  F00B         	call	_SetCSPin
  2767   0014FA  0012               	return		;funcret
  2768   0014FC                     __end_of_SetLongAddr:
  2769                           	callstack 0
  2770                           
  2771 ;; *************** function _WriteByteSPIPort *****************
  2772 ;; Defined at:
  2773 ;;		line 71 in file "drivers/scr/drv_mrf24j40_port.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  dato            1    wreg     unsigned char 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  dato            1    1[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;Total ram usage:        1 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 1
  2794 ;; This function calls:
  2795 ;;		_SPIWriteByte
  2796 ;; This function is called by:
  2797 ;;		_SetShortAddr
  2798 ;;		_GetShortAddr
  2799 ;;		_SetLongAddr
  2800 ;;		_GetLongAddr
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text18
  2805   0016CE                     __ptext18:
  2806                           	callstack 0
  2807   0016CE                     _WriteByteSPIPort:
  2808                           	callstack 27
  2809                           
  2810                           ;incstack = 0
  2811                           ;WriteByteSPIPort@dato stored from wreg
  2812   0016CE  6E2B               	movwf	WriteByteSPIPort@dato^0,c
  2813   0016D0                     
  2814                           ;drivers/scr/drv_mrf24j40_port.c: 73:     SPIWriteByte(dato);
  2815   0016D0  502B               	movf	WriteByteSPIPort@dato^0,w,c
  2816   0016D2  EC32  F00B         	call	_SPIWriteByte
  2817   0016D6  0012               	return		;funcret
  2818   0016D8                     __end_of_WriteByteSPIPort:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _SPIWriteByte *****************
  2822 ;; Defined at:
  2823 ;;		line 54 in file "drivers/scr/drv_mspi_port.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;  dato            1    wreg     unsigned char 
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;  dato            1    0[COMRAM] unsigned char 
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;Total ram usage:        1 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; This function calls:
  2844 ;;		Nothing
  2845 ;; This function is called by:
  2846 ;;		_WriteByteSPIPort
  2847 ;; This function uses a non-reentrant model
  2848 ;;
  2849                           
  2850                           	psect	text19
  2851   001664                     __ptext19:
  2852                           	callstack 0
  2853   001664                     _SPIWriteByte:
  2854                           	callstack 27
  2855                           
  2856                           ;incstack = 0
  2857                           ;SPIWriteByte@dato stored from wreg
  2858   001664  6E2A               	movwf	SPIWriteByte@dato^0,c
  2859   001666                     
  2860                           ;drivers/scr/drv_mspi_port.c: 56:     PIR1bits.SSPIF = 0;
  2861   001666  969E               	bcf	158,3,c	;volatile
  2862   001668                     
  2863                           ;drivers/scr/drv_mspi_port.c: 57:     SSPBUF = dato;
  2864   001668  C02A  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  2865   00166C                     l174:
  2866   00166C  A69E               	btfss	158,3,c	;volatile
  2867   00166E  EF3B  F00B         	goto	u301
  2868   001672  EF3D  F00B         	goto	u300
  2869   001676                     u301:
  2870   001676  EF36  F00B         	goto	l174
  2871   00167A                     u300:
  2872   00167A  0012               	return		;funcret
  2873   00167C                     __end_of_SPIWriteByte:
  2874                           	callstack 0
  2875                           
  2876 ;; *************** function _SetCSPin *****************
  2877 ;; Defined at:
  2878 ;;		line 38 in file "drivers/scr/drv_mrf24j40_port.c"
  2879 ;; Parameters:    Size  Location     Type
  2880 ;;  estado          1    wreg     _Bool 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  estado          1    0[COMRAM] _Bool 
  2883 ;; Return value:  Size  Location     Type
  2884 ;;                  1    wreg      void 
  2885 ;; Registers used:
  2886 ;;		wreg
  2887 ;; Tracked objects:
  2888 ;;		On entry : 0/0
  2889 ;;		On exit  : 0/0
  2890 ;;		Unchanged: 0/0
  2891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;Total ram usage:        1 bytes
  2897 ;; Hardware stack levels used: 1
  2898 ;; This function calls:
  2899 ;;		Nothing
  2900 ;; This function is called by:
  2901 ;;		_SetShortAddr
  2902 ;;		_GetShortAddr
  2903 ;;		_SetLongAddr
  2904 ;;		_GetLongAddr
  2905 ;;		_InicializoPines
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text20
  2910   0016C0                     __ptext20:
  2911                           	callstack 0
  2912   0016C0                     _SetCSPin:
  2913                           	callstack 28
  2914                           
  2915                           ;incstack = 0
  2916                           ;SetCSPin@estado stored from wreg
  2917   0016C0  6E2A               	movwf	SetCSPin@estado^0,c
  2918   0016C2                     
  2919                           ;drivers/scr/drv_mrf24j40_port.c: 40:     LATCbits.LATC6 = estado;
  2920   0016C2  B02A               	btfsc	SetCSPin@estado^0,0,c
  2921   0016C4  D002               	bra	u315
  2922   0016C6  9C8B               	bcf	139,6,c	;volatile
  2923   0016C8  D001               	bra	u316
  2924   0016CA                     u315:
  2925   0016CA  8C8B               	bsf	139,6,c	;volatile
  2926   0016CC                     u316:
  2927   0016CC  0012               	return		;funcret
  2928   0016CE                     __end_of_SetCSPin:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _BoardInit *****************
  2932 ;; Defined at:
  2933 ;;		line 21 in file "hardware_config.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;		None
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;		None
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1    wreg      void 
  2940 ;; Registers used:
  2941 ;;		wreg, status,2, cstack
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used: 1
  2953 ;; Hardware stack levels required when called: 1
  2954 ;; This function calls:
  2955 ;;		_SPIInit
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text21
  2962   0014FC                     __ptext21:
  2963                           	callstack 0
  2964   0014FC                     _BoardInit:
  2965                           	callstack 29
  2966   0014FC                     
  2967                           ;hardware_config.c: 23:     PORTA = 0;
  2968   0014FC  6A80               	clrf	128,c	;volatile
  2969                           
  2970                           ;hardware_config.c: 24:     PORTB = 0;
  2971   0014FE  6A81               	clrf	129,c	;volatile
  2972                           
  2973                           ;hardware_config.c: 25:     PORTC = 0;
  2974   001500  6A82               	clrf	130,c	;volatile
  2975                           
  2976                           ;hardware_config.c: 26:     PORTD = 0;
  2977   001502  6A83               	clrf	131,c	;volatile
  2978                           
  2979                           ;hardware_config.c: 27:     PORTE = 0;
  2980   001504  6A84               	clrf	132,c	;volatile
  2981                           
  2982                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  2983   001506  8C93               	bsf	147,6,c	;volatile
  2984                           
  2985                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  2986   001508  8E93               	bsf	147,7,c	;volatile
  2987                           
  2988                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  2989   00150A  9496               	bcf	150,2,c	;volatile
  2990                           
  2991                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  2992   00150C  9096               	bcf	150,0,c	;volatile
  2993                           
  2994                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  2995   00150E  9296               	bcf	150,1,c	;volatile
  2996                           
  2997                           ;hardware_config.c: 37:  GIE = 0;
  2998   001510  9EF2               	bcf	4082,7,c	;volatile
  2999                           
  3000                           ;hardware_config.c: 38:  PEIE = 0;
  3001   001512  9CF2               	bcf	4082,6,c	;volatile
  3002                           
  3003                           ;hardware_config.c: 39:  RBIE = 0;
  3004   001514  96F2               	bcf	4082,3,c	;volatile
  3005                           
  3006                           ;hardware_config.c: 40:  T0IE = 0;
  3007   001516  9AF2               	bcf	4082,5,c	;volatile
  3008                           
  3009                           ;hardware_config.c: 41:  TMR1IE = 0;
  3010   001518  909D               	bcf	3997,0,c	;volatile
  3011                           
  3012                           ;hardware_config.c: 42:  TMR2IE = 0;
  3013   00151A  929D               	bcf	3997,1,c	;volatile
  3014                           
  3015                           ;hardware_config.c: 43:  CCP1IE = 0;
  3016   00151C  949D               	bcf	3997,2,c	;volatile
  3017                           
  3018                           ;hardware_config.c: 44:  CCP2IE = 0;
  3019   00151E  90A0               	bcf	4000,0,c	;volatile
  3020                           
  3021                           ;hardware_config.c: 45:  EEIE = 0;
  3022   001520  98A0               	bcf	4000,4,c	;volatile
  3023                           
  3024                           ;hardware_config.c: 46:  SSPIE = 0;
  3025   001522  969D               	bcf	3997,3,c	;volatile
  3026                           
  3027                           ;hardware_config.c: 47:  BCLIE = 0;
  3028   001524  96A0               	bcf	4000,3,c	;volatile
  3029                           
  3030                           ;hardware_config.c: 48:  ADIE = 0;
  3031   001526  9C9D               	bcf	3997,6,c	;volatile
  3032                           
  3033                           ;hardware_config.c: 49:  RBIE = 0;
  3034   001528  96F2               	bcf	4082,3,c	;volatile
  3035                           
  3036                           ;hardware_config.c: 50:  RCIE = 0;
  3037   00152A  9A9D               	bcf	3997,5,c	;volatile
  3038   00152C                     
  3039                           ;hardware_config.c: 51:     OSCCON = 0b01110010;
  3040   00152C  0E72               	movlw	114
  3041   00152E  6ED3               	movwf	211,c	;volatile
  3042                           
  3043                           ;hardware_config.c: 52:     OSCTUNE = 0b11011111;
  3044   001530  0EDF               	movlw	223
  3045   001532  6E9B               	movwf	155,c	;volatile
  3046   001534                     
  3047                           ;hardware_config.c: 55:     SPIInit();
  3048   001534  EC24  F00B         	call	_SPIInit	;wreg free
  3049   001538  0012               	return		;funcret
  3050   00153A                     __end_of_BoardInit:
  3051                           	callstack 0
  3052                           
  3053 ;; *************** function _SPIInit *****************
  3054 ;; Defined at:
  3055 ;;		line 31 in file "drivers/scr/drv_mspi_port.c"
  3056 ;; Parameters:    Size  Location     Type
  3057 ;;		None
  3058 ;; Auto vars:     Size  Location     Type
  3059 ;;		None
  3060 ;; Return value:  Size  Location     Type
  3061 ;;                  1    wreg      void 
  3062 ;; Registers used:
  3063 ;;		None
  3064 ;; Tracked objects:
  3065 ;;		On entry : 0/0
  3066 ;;		On exit  : 0/0
  3067 ;;		Unchanged: 0/0
  3068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3073 ;;Total ram usage:        0 bytes
  3074 ;; Hardware stack levels used: 1
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_BoardInit
  3079 ;; This function uses a non-reentrant model
  3080 ;;
  3081                           
  3082                           	psect	text22
  3083   001648                     __ptext22:
  3084                           	callstack 0
  3085   001648                     _SPIInit:
  3086                           	callstack 29
  3087   001648                     
  3088                           ;drivers/scr/drv_mspi_port.c: 33:     TRISCbits.TRISC3 = 0;
  3089   001648  9694               	bcf	148,3,c	;volatile
  3090                           
  3091                           ;drivers/scr/drv_mspi_port.c: 34:     TRISCbits.TRISC5 = 0;
  3092   00164A  9A94               	bcf	148,5,c	;volatile
  3093                           
  3094                           ;drivers/scr/drv_mspi_port.c: 35:     TRISCbits.TRISC4 = 1;
  3095   00164C  8894               	bsf	148,4,c	;volatile
  3096                           
  3097                           ;drivers/scr/drv_mspi_port.c: 36:  SSPSTATbits.CKE = 1;
  3098   00164E  8CC7               	bsf	199,6,c	;volatile
  3099                           
  3100                           ;drivers/scr/drv_mspi_port.c: 37:  SSPCON1bits.WCOL = 1;
  3101   001650  8EC6               	bsf	198,7,c	;volatile
  3102                           
  3103                           ;drivers/scr/drv_mspi_port.c: 38:  SSPCON1bits.SSPOV = 0;
  3104   001652  9CC6               	bcf	198,6,c	;volatile
  3105                           
  3106                           ;drivers/scr/drv_mspi_port.c: 39:  SSPCON1bits.SSPEN = 1;
  3107   001654  8AC6               	bsf	198,5,c	;volatile
  3108                           
  3109                           ;drivers/scr/drv_mspi_port.c: 40:  SSPCON1bits.CKP = 0;
  3110   001656  98C6               	bcf	198,4,c	;volatile
  3111                           
  3112                           ;drivers/scr/drv_mspi_port.c: 41:  SSPSTATbits.SMP = 1;
  3113   001658  8EC7               	bsf	199,7,c	;volatile
  3114                           
  3115                           ;drivers/scr/drv_mspi_port.c: 42:  SSPCON1bits.SSPM3 = 0;
  3116   00165A  96C6               	bcf	198,3,c	;volatile
  3117                           
  3118                           ;drivers/scr/drv_mspi_port.c: 43:  SSPCON1bits.SSPM2 = 0;
  3119   00165C  94C6               	bcf	198,2,c	;volatile
  3120                           
  3121                           ;drivers/scr/drv_mspi_port.c: 44:  SSPCON1bits.SSPM1 = 0;
  3122   00165E  92C6               	bcf	198,1,c	;volatile
  3123                           
  3124                           ;drivers/scr/drv_mspi_port.c: 45:  SSPCON1bits.SSPM0 = 1;
  3125   001660  80C6               	bsf	198,0,c	;volatile
  3126   001662  0012               	return		;funcret
  3127   001664                     __end_of_SPIInit:
  3128                           	callstack 0
  3129                           
  3130                           	psect	rparam
  3131   000001                     ___rparam_used  equ	1
  3132   000000                     ___param_bank   equ	0
  3133   000000                     __Lparam        equ	__Lrparam
  3134   000000                     __Hparam        equ	__Hrparam
  3135                           
  3136                           	psect	idloc
  3137                           
  3138                           ;Config register IDLOC0 @ 0x200000
  3139                           ;	unspecified, using default values
  3140   200000                     	org	2097152
  3141   200000  FF                 	db	255
  3142                           
  3143                           ;Config register IDLOC1 @ 0x200001
  3144                           ;	unspecified, using default values
  3145   200001                     	org	2097153
  3146   200001  FF                 	db	255
  3147                           
  3148                           ;Config register IDLOC2 @ 0x200002
  3149                           ;	unspecified, using default values
  3150   200002                     	org	2097154
  3151   200002  FF                 	db	255
  3152                           
  3153                           ;Config register IDLOC3 @ 0x200003
  3154                           ;	unspecified, using default values
  3155   200003                     	org	2097155
  3156   200003  FF                 	db	255
  3157                           
  3158                           ;Config register IDLOC4 @ 0x200004
  3159                           ;	unspecified, using default values
  3160   200004                     	org	2097156
  3161   200004  FF                 	db	255
  3162                           
  3163                           ;Config register IDLOC5 @ 0x200005
  3164                           ;	unspecified, using default values
  3165   200005                     	org	2097157
  3166   200005  FF                 	db	255
  3167                           
  3168                           ;Config register IDLOC6 @ 0x200006
  3169                           ;	unspecified, using default values
  3170   200006                     	org	2097158
  3171   200006  FF                 	db	255
  3172                           
  3173                           ;Config register IDLOC7 @ 0x200007
  3174                           ;	unspecified, using default values
  3175   200007                     	org	2097159
  3176   200007  FF                 	db	255
  3177                           
  3178                           	psect	config
  3179                           
  3180                           ; Padding undefined space
  3181   300000                     	org	3145728
  3182   300000  FF                 	db	255
  3183                           
  3184                           ;Config register CONFIG1H @ 0x300001
  3185                           ;	Oscillator Selection bits
  3186                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3187                           ;	Fail-Safe Clock Monitor Enable bit
  3188                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3189                           ;	Internal/External Oscillator Switchover bit
  3190                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3191   300001                     	org	3145729
  3192   300001  08                 	db	8
  3193                           
  3194                           ;Config register CONFIG2L @ 0x300002
  3195                           ;	Power-up Timer Enable bit
  3196                           ;	PWRTEN = OFF, PWRT disabled
  3197                           ;	Brown-out Reset Enable bits
  3198                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3199                           ;	Brown Out Reset Voltage bits
  3200                           ;	BORV = 22, VBOR set to 2.2 V nominal
  3201   300002                     	org	3145730
  3202   300002  11                 	db	17
  3203                           
  3204                           ;Config register CONFIG2H @ 0x300003
  3205                           ;	Watchdog Timer Enable bit
  3206                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3207                           ;	Watchdog Timer Postscale Select bits
  3208                           ;	WDTPS = 8192, 1:8192
  3209   300003                     	org	3145731
  3210   300003  1A                 	db	26
  3211                           
  3212                           ; Padding undefined space
  3213   300004                     	org	3145732
  3214   300004  FF                 	db	255
  3215                           
  3216                           ;Config register CONFIG3H @ 0x300005
  3217                           ;	CCP2 MUX bit
  3218                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3219                           ;	PORTB A/D Enable bit
  3220                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3221                           ;	Low-Power Timer1 Oscillator Enable bit
  3222                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3223                           ;	HFINTOSC Fast Start-up
  3224                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  3225                           ;	MCLR Pin Enable bit
  3226                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3227   300005                     	org	3145733
  3228   300005  81                 	db	129
  3229                           
  3230                           ;Config register CONFIG4L @ 0x300006
  3231                           ;	Stack Full/Underflow Reset Enable bit
  3232                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3233                           ;	Single-Supply ICSP Enable bit
  3234                           ;	LVP = OFF, Single-Supply ICSP disabled
  3235                           ;	Extended Instruction Set Enable bit
  3236                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3237                           ;	Background Debugger Enable bit
  3238                           ;	DEBUG = ON, Background debugger enabled, RB6 and RB7 are dedicated to In-Circuit Debug
  3239   300006                     	org	3145734
  3240   300006  00                 	db	0
  3241                           
  3242                           ; Padding undefined space
  3243   300007                     	org	3145735
  3244   300007  FF                 	db	255
  3245                           
  3246                           ;Config register CONFIG5L @ 0x300008
  3247                           ;	Code Protection Block 0
  3248                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3249                           ;	Code Protection Block 1
  3250                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3251                           ;	Code Protection Block 2
  3252                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3253                           ;	Code Protection Block 3
  3254                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3255   300008                     	org	3145736
  3256   300008  0F                 	db	15
  3257                           
  3258                           ;Config register CONFIG5H @ 0x300009
  3259                           ;	Boot Block Code Protection bit
  3260                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3261                           ;	Data EEPROM Code Protection bit
  3262                           ;	CPD = OFF, Data EEPROM not code-protected
  3263   300009                     	org	3145737
  3264   300009  C0                 	db	192
  3265                           
  3266                           ;Config register CONFIG6L @ 0x30000A
  3267                           ;	Write Protection Block 0
  3268                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3269                           ;	Write Protection Block 1
  3270                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3271                           ;	Write Protection Block 2
  3272                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3273                           ;	Write Protection Block 3
  3274                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3275   30000A                     	org	3145738
  3276   30000A  0F                 	db	15
  3277                           
  3278                           ;Config register CONFIG6H @ 0x30000B
  3279                           ;	Configuration Register Write Protection bit
  3280                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3281                           ;	Boot Block Write Protection bit
  3282                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3283                           ;	Data EEPROM Write Protection bit
  3284                           ;	WRTD = OFF, Data EEPROM not write-protected
  3285   30000B                     	org	3145739
  3286   30000B  E0                 	db	224
  3287                           
  3288                           ;Config register CONFIG7L @ 0x30000C
  3289                           ;	unspecified, using default values
  3290                           ;	Table Read Protection Block 0
  3291                           ;	EBTR0 = 0x1, unprogrammed default
  3292                           ;	Table Read Protection Block 1
  3293                           ;	EBTR1 = 0x1, unprogrammed default
  3294                           ;	Table Read Protection Block 2
  3295                           ;	EBTR2 = 0x1, unprogrammed default
  3296                           ;	Table Read Protection Block 3
  3297                           ;	EBTR3 = 0x1, unprogrammed default
  3298   30000C                     	org	3145740
  3299   30000C  0F                 	db	15
  3300                           
  3301                           ;Config register CONFIG7H @ 0x30000D
  3302                           ;	Boot Block Table Read Protection bit
  3303                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3304   30000D                     	org	3145741
  3305   30000D  40                 	db	64
  3306                           tosu	equ	0xFFF
  3307                           tosh	equ	0xFFE
  3308                           tosl	equ	0xFFD
  3309                           stkptr	equ	0xFFC
  3310                           pclatu	equ	0xFFB
  3311                           pclath	equ	0xFFA
  3312                           pcl	equ	0xFF9
  3313                           tblptru	equ	0xFF8
  3314                           tblptrh	equ	0xFF7
  3315                           tblptrl	equ	0xFF6
  3316                           tablat	equ	0xFF5
  3317                           prodh	equ	0xFF4
  3318                           prodl	equ	0xFF3
  3319                           indf0	equ	0xFEF
  3320                           postinc0	equ	0xFEE
  3321                           postdec0	equ	0xFED
  3322                           preinc0	equ	0xFEC
  3323                           plusw0	equ	0xFEB
  3324                           fsr0h	equ	0xFEA
  3325                           fsr0l	equ	0xFE9
  3326                           wreg	equ	0xFE8
  3327                           indf1	equ	0xFE7
  3328                           postinc1	equ	0xFE6
  3329                           postdec1	equ	0xFE5
  3330                           preinc1	equ	0xFE4
  3331                           plusw1	equ	0xFE3
  3332                           fsr1h	equ	0xFE2
  3333                           fsr1l	equ	0xFE1
  3334                           bsr	equ	0xFE0
  3335                           indf2	equ	0xFDF
  3336                           postinc2	equ	0xFDE
  3337                           postdec2	equ	0xFDD
  3338                           preinc2	equ	0xFDC
  3339                           plusw2	equ	0xFDB
  3340                           fsr2h	equ	0xFDA
  3341                           fsr2l	equ	0xFD9
  3342                           status	equ	0xFD8

Data Sizes:
    Strings     33
    Constant    24
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      53
    BANK0           160      0      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[33]), 

    S34$buffer_salida	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[33]), 

    SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[33]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[33]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 33
		 -> STR_1(CODE[33]), 


Critical Paths under _main in COMRAM

    _main->_EnviarDato
    _SetMensajeSalida->_strlen
    _MRF24J40Init->_GetLongAddr
    _MRF24J40Init->_SetLongAddr
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _GetShortAddr->_WriteByteSPIPort
    _GetLongAddr->_WriteByteSPIPort
    _EnviarDato->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2978
                                             10 COMRAM     2     2      0
                          _BoardInit
                         _EnviarDato
                       _MRF24J40Init
                   _SetMensajeSalida
 ---------------------------------------------------------------------------------
 (1) _SetMensajeSalida                                     1     0      1     136
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         2     2      0    2008
                                              7 COMRAM     2     2      0
                        _GetLongAddr
                       _GetShortAddr
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  2     2      0     257
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           0     0      0     467
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     181
                                              2 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnviarDato                                           3     3      0     834
                                              7 COMRAM     3     3      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     278
                                              2 COMRAM     5     2      3
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _EnviarDato
     _SetLongAddr
       _SetCSPin
       _WriteByteSPIPort
         _SPIWriteByte
     _SetShortAddr
       _SetCSPin
       _WriteByteSPIPort
   _MRF24J40Init
     _GetLongAddr
       _ReadByteSPIPort
         _SPIRead
       _SetCSPin
       _WriteByteSPIPort
     _GetShortAddr
       _ReadByteSPIPort
       _SetCSPin
       _WriteByteSPIPort
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _SetLongAddr
       _SetShortAddr
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr
   _SetMensajeSalida
     _strlen

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      55     34.4%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     12      53     55.8%
BITBIGSFRlll        32      0       0      0.0%
BITBIGSFRlh         16      0       0      0.0%
BITBIGSFRllh        11      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     108      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Mar 30 09:09:10 2025

                 _SSPSTATbits 0FC7                            l61 160A                            l54 13C0  
                          l70 1594                            l55 1432                            l64 14FA  
                          l73 15BE                            l49 11AC                            l58 162A  
                          l67 1476                            l78 14B8                            l98 12C2  
                          u45 16BC                            u46 16BE                            u65 16AE  
                          u66 16B0                 ?_MRF24J40Init 002A                           l115 16A2  
                         l140 1646                           l143 16CC                           l152 16D6  
                         l209 12D4                           l146 16B0                           l171 1662  
                         l261 1538                           l149 16BE                           l174 166C  
                         l158 16DC                           l192 1690                           l177 167A  
                         l189 1680                           l941 1568                           l961 16B4  
                         l995 16A6                           _GIE 7F97                           u300 167A  
                         u301 1676                           u320 168E                           u400 116A  
                         u321 168A                           u401 1166                           u410 1276  
                         u315 16CA                           u411 1272                           u316 16CC  
                         u420 12B8                           u340 13A8                           u421 12B4  
                         u341 13A4                           u350 13F8                           u510 1320  
                         u335 14C4                           u351 13F4                           u511 1318  
                         u360 14B8                           u361 14B4                           u530 1356  
                         u531 134E                           u380 155C                           u508 12EA  
                         u381 1558                           u390 1096                           u375 143E  
                         u607 109C                           u391 1092                           u528 1322  
                         u617 1590                           u490 12E8                           u491 12E0  
                         u548 1358                           u557 1302                           u567 1338  
                         u577 136C                           u587 104A                           u597 1062  
                         wreg 0FE8           __end_of_GetLongAddr 1478                          l1221 14FC  
                        l1223 152C                          l1225 1534                          l1501 13F8  
                        l1503 1400                          l1097 1648                          l1441 1668  
                        l1521 15E8                          l1513 162C                          l1505 1402  
                        l1601 1096                          l1443 16C2                          l1451 167C  
                        l1531 1608                          l1523 15F0                          l1515 1634  
                        l1507 142E                          l1611 10C6                          l1603 10A4  
                        l1461 1618                          l1453 168E                          l1525 15F6  
                        l1509 1430                          l1621 1116                          l1613 10D6  
                        l1605 10AE                          l1439 1666                          l1447 16D0  
                        l1471 14DC                          l1463 161E                          l1527 15FC  
                        l1519 15E8                          l1535 1596                          l1551 149C  
                        l1631 1148                          l1623 1120                          l1615 10E6  
                        l1607 10B2                          l1703 1692                          l1473 14E2  
                        l1465 1624                          l1457 160E                          l1641 11B0  
                        l1561 1468                          l1553 1434                          l1529 1602  
                        l1545 1484                          l1633 1156                          l1625 112A  
                        l1617 10F6                          l1609 10B6                          l1705 1696  
                        l1475 14E8                          l1459 1612                          l1651 11D4  
                        l1643 11B0                          l1483 16D8                          l1563 146E  
                        l1555 1456                          l1571 158E                          l1547 1496  
                        l1539 1478                          l1635 116A                          l1627 1134  
                        l1619 1106                          l1477 14EE                          l1469 14BA  
                        l1661 1208                          l1653 11E2                          l1645 11C0  
                        l1565 1474                          l1557 145C                          l1493 138C  
                        l1549 1498                          l1629 113E                          l1581 155C  
                        l1901 1344                          l1479 14F4                          l1671 122A  
                        l1663 120A                          l1655 11E4                          l1647 11C2  
                        l1639 11AE                          l1559 1462                          l1495 13A8  
                        l1487 1384                          l1591 1056                          l1575 153A  
                        l1903 1362                          l1673 1238                          l1665 1218  
                        l1657 11F2                          l1649 11D2                          l1497 13D8  
                        l1569 156A                          l1593 105C                          l1585 103C  
                        l1577 1542                          l1905 1378                          l1691 1266  
                        l1675 123A                          l1667 121A                          l1659 11F4  
                        l1499 13DC                          l1595 106E                          l1587 1040  
                        l1579 1544                          l1693 127A                          l1685 124C  
                        l1677 1248                          l1669 1228                          l1597 1078  
                        l1589 1044                          l1695 129A                          l1687 1262  
                        l1679 124A                          l1599 1080                          l1697 129C  
                        l1689 1264                          l1699 12B8                          l1891 12CC  
                        l1893 12D6                          l1895 12F8                          l1887 12C4  
                        l1897 130E                          l1889 12C8                          l1899 132E  
                        _ADIE 7CEE                          _EEIE 7D04                          STR_1 1019  
                        _T0IE 7F95                          _PEIE 7F96                          _RBIE 7F93  
                        _RCIE 7CED                  _SPIWriteByte 1664                          _main 12C4  
             __end_of_SPIInit 1664               __end_of_SPIRead 1692                          fsr2h 0FDA  
                        indf2 0FDF                          fsr2l 0FD9                   EnviarDato@i 0032  
     GetShortAddr@reg_address 002D                          start 0000                  ___param_bank 0000  
           ??_ReadByteSPIPort 002A                ??_MRF24J40Init 0031   __end_of_InicializoVariables 1434  
                       ?_main 002A                         _BCLIE 7D03          SetDeviceMACAddress@i 002E  
                       _PORTA 0F80                         _PORTB 0F81                         _PORTC 0F82  
                       _PORTD 0F83                         _PORTE 0F84                         _SSPIE 7CEB  
        __end_of_GetShortAddr 160C               _InicializoPines 162C       SetShortAddr@reg_address 002D  
         MRF24J40Init@lectura 0032                         tablat 0FF5                         status 0FD8  
                  _EnviarDato 11AE           _SetDeviceMACAddress 1478               __initialization 15C0  
                __end_of_main 1384              __end_of_SetCSPin 16CE                   _GetLongAddr 1434  
               ??_SetLongAddr 002F                        ??_main 0034                 __activetblptr 0001  
               ??_SetResetPin 002A          ?_SetDeviceMACAddress 002A                    _SetChannel 156A  
           ?_SetDeviceAddress 002A                        _CCP1IE 7CEA                        _CCP2IE 7D00  
                   ??_SPIInit 002A                     ??_SPIRead 002A            ??_SetDeviceAddress 002E  
                  _SetWakePin 16A4                        _OSCCON 0FD3                        _TMR1IE 7CE8  
                      _TMR2IE 7CE9  __end_of_default_security_key 1011                        _SSPBUF 0FC9  
                      clear_0 15C6                        clear_1 15D2                        isa$std 0001  
              SetCSPin@estado 002A       __end_of_InicializoPines 1648                        _strlen 153A  
       ??_SetDeviceMACAddress 002E          InicializoVariables@i 002B                 EnviarDato@pos 0033  
                __mediumconst 0000             _mrf24_data_config 0001                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8           __end_of_SetLongAddr 14FC  
         __end_of_SetResetPin 16C0         GetShortAddr@leido_spi 002C          __end_of_MRF24J40Init 11AE  
            _SetMensajeSalida 1692                    __accesstop 0060       __end_of__initialization 15D8  
           __end_of_BoardInit 153A                   ?_EnviarDato 002A                 ___rparam_used 0001  
            SetWakePin@estado 002A                 ?_SetShortAddr 002C                __pcstackCOMRAM 002A  
                 ?_SetChannel 002A                    __pbssBANK0 0060                   ?_SetWakePin 002A  
                   ?_SetCSPin 002A               _ReadByteSPIPort 16D8                  _GetShortAddr 15E6  
              ??_SetShortAddr 002D                   _SetLongAddr 14BA                       ?_strlen 002A  
            ?_InicializoPines 002A          _default_security_key 1001                   _SetResetPin 16B2  
                     _OSCTUNE 0F9B                       _SPIInit 1648                       _SPIRead 167C  
                  ??_SetCSPin 002A             SetShortAddr@value 002C                       __Hparam 0000  
                     __Lparam 0000                  __psmallconst 1000                       __pcinit 15C0  
                ?_GetLongAddr 002C                       __ramtop 1000                       __ptext0 12C4  
                     __ptext1 1692                       __ptext2 153A                       __ptext3 103C  
                     __ptext4 1478                       __ptext5 1596                       __ptext6 156A  
                     __ptext7 1384                       __ptext8 162C                       __ptext9 16A4  
            _WriteByteSPIPort 16CE       __end_of_ReadByteSPIPort 16DE          end_of_initialization 15D8  
         _default_mac_address 1011                       postinc0 0FEE                       strlen@a 002C  
                     strlen@s 002A                  _MRF24J40Init 103C      __end_of_SetMensajeSalida 16A4  
        WriteByteSPIPort@dato 002B                     _TRISBbits 0F93                     _TRISCbits 0F94  
                   _TRISDbits 0F95                     _TRISEbits 0F96          __end_of_SetShortAddr 162C  
      _my_default_mac_address 0029                  ??_EnviarDato 0031                     _BoardInit 14FC  
 __end_of_SetDeviceMACAddress 14BA                __end_of_strlen 156A                  ??_SetChannel 0031  
         start_initialization 15C0            __end_of_EnviarDato 12C4              ?_ReadByteSPIPort 002A  
               ?_SPIWriteByte 002A                  ??_SetWakePin 002A                    ?_BoardInit 002A  
          __end_of_SetChannel 1596                  ?_SetLongAddr 002C                      ??_strlen 002C  
          __end_of_SetWakePin 16B2                  ?_SetResetPin 002A                   __pbssCOMRAM 0001  
     SetMensajeSalida@mensaje 002D                      ?_SPIInit 002A                      ?_SPIRead 002A  
              ??_SPIWriteByte 002A              SPIWriteByte@dato 002A              _SetDeviceAddress 1596  
         _InicializoVariables 1384      __end_of_WriteByteSPIPort 16D8             SetResetPin@estado 002A  
                 __smallconst 1000          ?_InicializoVariables 002A              SetLongAddr@value 002E  
                    _LATCbits 0F8B                      _LATDbits 0F8C                      _LATEbits 0F8D  
                 ??_BoardInit 002A                      _PIR1bits 0F9E                  _SetShortAddr 160C  
         GetLongAddr@toReturn 0030             ?_SetMensajeSalida 002D         ??_InicializoVariables 002A  
          ??_SetMensajeSalida 002E                _mrf24_data_out 0023                      _SetCSPin 16C0  
                    __Hrparam 0000                      __Lrparam 0000                  __Lsmallconst 1000  
        __end_of_SPIWriteByte 167C                      __ptext10 16B2                      __ptext11 15E6  
                    __ptext20 16C0                      __ptext12 1434                      __ptext21 14FC  
                    __ptext13 16D8                      __ptext22 1648                      __ptext14 167C  
                    __ptext15 11AE                      __ptext16 160C                      __ptext17 14BA  
                    __ptext18 16CE                      __ptext19 1664             ??_InicializoPines 002B  
               ?_GetShortAddr 002A                      isa$xinst 0000   __end_of_default_mac_address 1019  
               _mrf24_data_in 0060      __end_of_SetDeviceAddress 15C0                ??_GetShortAddr 002C  
           ?_WriteByteSPIPort 002A                 ??_GetLongAddr 002E            ??_WriteByteSPIPort 002B  
      GetLongAddr@reg_address 002C                   _SSPCON1bits 0FC6        SetLongAddr@reg_address 002C  
