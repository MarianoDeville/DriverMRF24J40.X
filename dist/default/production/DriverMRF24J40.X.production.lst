

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Wed Jul 23 22:16:47 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Version 2.20
    58                           ; Generated 05/05/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F46K20 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000FE0                     bsr             equ	4064
    92   000FE9                     fsr0            equ	4073
    93   000FEA                     fsr0h           equ	4074
    94   000FE9                     fsr0l           equ	4073
    95   000FE1                     fsr1            equ	4065
    96   000FE2                     fsr1h           equ	4066
    97   000FE1                     fsr1l           equ	4065
    98   000FD9                     fsr2            equ	4057
    99   000FDA                     fsr2h           equ	4058
   100   000FD9                     fsr2l           equ	4057
   101   000FEF                     indf0           equ	4079
   102   000FE7                     indf1           equ	4071
   103   000FDF                     indf2           equ	4063
   104   000FF2                     intcon          equ	4082
   105   000000                     nvmcon          equ	0
   106   000FF9                     pcl             equ	4089
   107   000FFA                     pclath          equ	4090
   108   000FFB                     pclatu          equ	4091
   109   000FEB                     plusw0          equ	4075
   110   000FE3                     plusw1          equ	4067
   111   000FDB                     plusw2          equ	4059
   112   000FED                     postdec0        equ	4077
   113   000FE5                     postdec1        equ	4069
   114   000FDD                     postdec2        equ	4061
   115   000FEE                     postinc0        equ	4078
   116   000FE6                     postinc1        equ	4070
   117   000FDE                     postinc2        equ	4062
   118   000FEC                     preinc0         equ	4076
   119   000FE4                     preinc1         equ	4068
   120   000FDC                     preinc2         equ	4060
   121   000FF3                     prod            equ	4083
   122   000FF4                     prodh           equ	4084
   123   000FF3                     prodl           equ	4083
   124   000FD8                     status          equ	4056
   125   000FF5                     tablat          equ	4085
   126   000FF6                     tblptr          equ	4086
   127   000FF7                     tblptrh         equ	4087
   128   000FF6                     tblptrl         equ	4086
   129   000FF8                     tblptru         equ	4088
   130   000FFD                     tosl            equ	4093
   131   000FE8                     wreg            equ	4072
   132   000F77                     SSPMSK          equ	3959	;# 
   133   000F78                     SLRCON          equ	3960	;# 
   134   000F79                     CM2CON1         equ	3961	;# 
   135   000F7A                     CM2CON0         equ	3962	;# 
   136   000F7B                     CM1CON0         equ	3963	;# 
   137   000F7C                     WPUB            equ	3964	;# 
   138   000F7D                     IOCB            equ	3965	;# 
   139   000F7E                     ANSEL           equ	3966	;# 
   140   000F7F                     ANSELH          equ	3967	;# 
   141   000F80                     PORTA           equ	3968	;# 
   142   000F81                     PORTB           equ	3969	;# 
   143   000F82                     PORTC           equ	3970	;# 
   144   000F83                     PORTD           equ	3971	;# 
   145   000F84                     PORTE           equ	3972	;# 
   146   000F89                     LATA            equ	3977	;# 
   147   000F8A                     LATB            equ	3978	;# 
   148   000F8B                     LATC            equ	3979	;# 
   149   000F8C                     LATD            equ	3980	;# 
   150   000F8D                     LATE            equ	3981	;# 
   151   000F92                     TRISA           equ	3986	;# 
   152   000F92                     DDRA            equ	3986	;# 
   153   000F93                     TRISB           equ	3987	;# 
   154   000F93                     DDRB            equ	3987	;# 
   155   000F94                     TRISC           equ	3988	;# 
   156   000F94                     DDRC            equ	3988	;# 
   157   000F95                     TRISD           equ	3989	;# 
   158   000F95                     DDRD            equ	3989	;# 
   159   000F96                     TRISE           equ	3990	;# 
   160   000F96                     DDRE            equ	3990	;# 
   161   000F9B                     OSCTUNE         equ	3995	;# 
   162   000F9D                     PIE1            equ	3997	;# 
   163   000F9E                     PIR1            equ	3998	;# 
   164   000F9F                     IPR1            equ	3999	;# 
   165   000FA0                     PIE2            equ	4000	;# 
   166   000FA1                     PIR2            equ	4001	;# 
   167   000FA2                     IPR2            equ	4002	;# 
   168   000FA6                     EECON1          equ	4006	;# 
   169   000FA7                     EECON2          equ	4007	;# 
   170   000FA8                     EEDATA          equ	4008	;# 
   171   000FA9                     EEADR           equ	4009	;# 
   172   000FAA                     EEADRH          equ	4010	;# 
   173   000FAB                     RCSTA           equ	4011	;# 
   174   000FAB                     RCSTA1          equ	4011	;# 
   175   000FAC                     TXSTA           equ	4012	;# 
   176   000FAC                     TXSTA1          equ	4012	;# 
   177   000FAD                     TXREG           equ	4013	;# 
   178   000FAD                     TXREG1          equ	4013	;# 
   179   000FAE                     RCREG           equ	4014	;# 
   180   000FAE                     RCREG1          equ	4014	;# 
   181   000FAF                     SPBRG           equ	4015	;# 
   182   000FAF                     SPBRG1          equ	4015	;# 
   183   000FB0                     SPBRGH          equ	4016	;# 
   184   000FB1                     T3CON           equ	4017	;# 
   185   000FB2                     TMR3            equ	4018	;# 
   186   000FB2                     TMR3L           equ	4018	;# 
   187   000FB3                     TMR3H           equ	4019	;# 
   188   000FB4                     CVRCON2         equ	4020	;# 
   189   000FB5                     CVRCON          equ	4021	;# 
   190   000FB6                     ECCP1AS         equ	4022	;# 
   191   000FB7                     PWM1CON         equ	4023	;# 
   192   000FB8                     BAUDCON         equ	4024	;# 
   193   000FB8                     BAUDCTL         equ	4024	;# 
   194   000FB9                     PSTRCON         equ	4025	;# 
   195   000FBA                     CCP2CON         equ	4026	;# 
   196   000FBB                     CCPR2           equ	4027	;# 
   197   000FBB                     CCPR2L          equ	4027	;# 
   198   000FBC                     CCPR2H          equ	4028	;# 
   199   000FBD                     CCP1CON         equ	4029	;# 
   200   000FBE                     CCPR1           equ	4030	;# 
   201   000FBE                     CCPR1L          equ	4030	;# 
   202   000FBF                     CCPR1H          equ	4031	;# 
   203   000FC0                     ADCON2          equ	4032	;# 
   204   000FC1                     ADCON1          equ	4033	;# 
   205   000FC2                     ADCON0          equ	4034	;# 
   206   000FC3                     ADRES           equ	4035	;# 
   207   000FC3                     ADRESL          equ	4035	;# 
   208   000FC4                     ADRESH          equ	4036	;# 
   209   000FC5                     SSPCON2         equ	4037	;# 
   210   000FC6                     SSPCON1         equ	4038	;# 
   211   000FC7                     SSPSTAT         equ	4039	;# 
   212   000FC8                     SSPADD          equ	4040	;# 
   213   000FC9                     SSPBUF          equ	4041	;# 
   214   000FCA                     T2CON           equ	4042	;# 
   215   000FCB                     PR2             equ	4043	;# 
   216   000FCB                     MEMCON          equ	4043	;# 
   217   000FCC                     TMR2            equ	4044	;# 
   218   000FCD                     T1CON           equ	4045	;# 
   219   000FCE                     TMR1            equ	4046	;# 
   220   000FCE                     TMR1L           equ	4046	;# 
   221   000FCF                     TMR1H           equ	4047	;# 
   222   000FD0                     RCON            equ	4048	;# 
   223   000FD1                     WDTCON          equ	4049	;# 
   224   000FD2                     HLVDCON         equ	4050	;# 
   225   000FD2                     LVDCON          equ	4050	;# 
   226   000FD3                     OSCCON          equ	4051	;# 
   227   000FD5                     T0CON           equ	4053	;# 
   228   000FD6                     TMR0            equ	4054	;# 
   229   000FD6                     TMR0L           equ	4054	;# 
   230   000FD7                     TMR0H           equ	4055	;# 
   231   000FD8                     STATUS          equ	4056	;# 
   232   000FD9                     FSR2            equ	4057	;# 
   233   000FD9                     FSR2L           equ	4057	;# 
   234   000FDA                     FSR2H           equ	4058	;# 
   235   000FDB                     PLUSW2          equ	4059	;# 
   236   000FDC                     PREINC2         equ	4060	;# 
   237   000FDD                     POSTDEC2        equ	4061	;# 
   238   000FDE                     POSTINC2        equ	4062	;# 
   239   000FDF                     INDF2           equ	4063	;# 
   240   000FE0                     BSR             equ	4064	;# 
   241   000FE1                     FSR1            equ	4065	;# 
   242   000FE1                     FSR1L           equ	4065	;# 
   243   000FE2                     FSR1H           equ	4066	;# 
   244   000FE3                     PLUSW1          equ	4067	;# 
   245   000FE4                     PREINC1         equ	4068	;# 
   246   000FE5                     POSTDEC1        equ	4069	;# 
   247   000FE6                     POSTINC1        equ	4070	;# 
   248   000FE7                     INDF1           equ	4071	;# 
   249   000FE8                     WREG            equ	4072	;# 
   250   000FE9                     FSR0            equ	4073	;# 
   251   000FE9                     FSR0L           equ	4073	;# 
   252   000FEA                     FSR0H           equ	4074	;# 
   253   000FEB                     PLUSW0          equ	4075	;# 
   254   000FEC                     PREINC0         equ	4076	;# 
   255   000FED                     POSTDEC0        equ	4077	;# 
   256   000FEE                     POSTINC0        equ	4078	;# 
   257   000FEF                     INDF0           equ	4079	;# 
   258   000FF0                     INTCON3         equ	4080	;# 
   259   000FF1                     INTCON2         equ	4081	;# 
   260   000FF2                     INTCON          equ	4082	;# 
   261   000FF3                     PROD            equ	4083	;# 
   262   000FF3                     PRODL           equ	4083	;# 
   263   000FF4                     PRODH           equ	4084	;# 
   264   000FF5                     TABLAT          equ	4085	;# 
   265   000FF6                     TBLPTR          equ	4086	;# 
   266   000FF6                     TBLPTRL         equ	4086	;# 
   267   000FF7                     TBLPTRH         equ	4087	;# 
   268   000FF8                     TBLPTRU         equ	4088	;# 
   269   000FF9                     PCLAT           equ	4089	;# 
   270   000FF9                     PC              equ	4089	;# 
   271   000FF9                     PCL             equ	4089	;# 
   272   000FFA                     PCLATH          equ	4090	;# 
   273   000FFB                     PCLATU          equ	4091	;# 
   274   000FFC                     STKPTR          equ	4092	;# 
   275   000FFD                     TOS             equ	4093	;# 
   276   000FFD                     TOSL            equ	4093	;# 
   277   000FFE                     TOSH            equ	4094	;# 
   278   000FFF                     TOSU            equ	4095	;# 
   279   000F77                     SSPMSK          equ	3959	;# 
   280   000F78                     SLRCON          equ	3960	;# 
   281   000F79                     CM2CON1         equ	3961	;# 
   282   000F7A                     CM2CON0         equ	3962	;# 
   283   000F7B                     CM1CON0         equ	3963	;# 
   284   000F7C                     WPUB            equ	3964	;# 
   285   000F7D                     IOCB            equ	3965	;# 
   286   000F7E                     ANSEL           equ	3966	;# 
   287   000F7F                     ANSELH          equ	3967	;# 
   288   000F80                     PORTA           equ	3968	;# 
   289   000F81                     PORTB           equ	3969	;# 
   290   000F82                     PORTC           equ	3970	;# 
   291   000F83                     PORTD           equ	3971	;# 
   292   000F84                     PORTE           equ	3972	;# 
   293   000F89                     LATA            equ	3977	;# 
   294   000F8A                     LATB            equ	3978	;# 
   295   000F8B                     LATC            equ	3979	;# 
   296   000F8C                     LATD            equ	3980	;# 
   297   000F8D                     LATE            equ	3981	;# 
   298   000F92                     TRISA           equ	3986	;# 
   299   000F92                     DDRA            equ	3986	;# 
   300   000F93                     TRISB           equ	3987	;# 
   301   000F93                     DDRB            equ	3987	;# 
   302   000F94                     TRISC           equ	3988	;# 
   303   000F94                     DDRC            equ	3988	;# 
   304   000F95                     TRISD           equ	3989	;# 
   305   000F95                     DDRD            equ	3989	;# 
   306   000F96                     TRISE           equ	3990	;# 
   307   000F96                     DDRE            equ	3990	;# 
   308   000F9B                     OSCTUNE         equ	3995	;# 
   309   000F9D                     PIE1            equ	3997	;# 
   310   000F9E                     PIR1            equ	3998	;# 
   311   000F9F                     IPR1            equ	3999	;# 
   312   000FA0                     PIE2            equ	4000	;# 
   313   000FA1                     PIR2            equ	4001	;# 
   314   000FA2                     IPR2            equ	4002	;# 
   315   000FA6                     EECON1          equ	4006	;# 
   316   000FA7                     EECON2          equ	4007	;# 
   317   000FA8                     EEDATA          equ	4008	;# 
   318   000FA9                     EEADR           equ	4009	;# 
   319   000FAA                     EEADRH          equ	4010	;# 
   320   000FAB                     RCSTA           equ	4011	;# 
   321   000FAB                     RCSTA1          equ	4011	;# 
   322   000FAC                     TXSTA           equ	4012	;# 
   323   000FAC                     TXSTA1          equ	4012	;# 
   324   000FAD                     TXREG           equ	4013	;# 
   325   000FAD                     TXREG1          equ	4013	;# 
   326   000FAE                     RCREG           equ	4014	;# 
   327   000FAE                     RCREG1          equ	4014	;# 
   328   000FAF                     SPBRG           equ	4015	;# 
   329   000FAF                     SPBRG1          equ	4015	;# 
   330   000FB0                     SPBRGH          equ	4016	;# 
   331   000FB1                     T3CON           equ	4017	;# 
   332   000FB2                     TMR3            equ	4018	;# 
   333   000FB2                     TMR3L           equ	4018	;# 
   334   000FB3                     TMR3H           equ	4019	;# 
   335   000FB4                     CVRCON2         equ	4020	;# 
   336   000FB5                     CVRCON          equ	4021	;# 
   337   000FB6                     ECCP1AS         equ	4022	;# 
   338   000FB7                     PWM1CON         equ	4023	;# 
   339   000FB8                     BAUDCON         equ	4024	;# 
   340   000FB8                     BAUDCTL         equ	4024	;# 
   341   000FB9                     PSTRCON         equ	4025	;# 
   342   000FBA                     CCP2CON         equ	4026	;# 
   343   000FBB                     CCPR2           equ	4027	;# 
   344   000FBB                     CCPR2L          equ	4027	;# 
   345   000FBC                     CCPR2H          equ	4028	;# 
   346   000FBD                     CCP1CON         equ	4029	;# 
   347   000FBE                     CCPR1           equ	4030	;# 
   348   000FBE                     CCPR1L          equ	4030	;# 
   349   000FBF                     CCPR1H          equ	4031	;# 
   350   000FC0                     ADCON2          equ	4032	;# 
   351   000FC1                     ADCON1          equ	4033	;# 
   352   000FC2                     ADCON0          equ	4034	;# 
   353   000FC3                     ADRES           equ	4035	;# 
   354   000FC3                     ADRESL          equ	4035	;# 
   355   000FC4                     ADRESH          equ	4036	;# 
   356   000FC5                     SSPCON2         equ	4037	;# 
   357   000FC6                     SSPCON1         equ	4038	;# 
   358   000FC7                     SSPSTAT         equ	4039	;# 
   359   000FC8                     SSPADD          equ	4040	;# 
   360   000FC9                     SSPBUF          equ	4041	;# 
   361   000FCA                     T2CON           equ	4042	;# 
   362   000FCB                     PR2             equ	4043	;# 
   363   000FCB                     MEMCON          equ	4043	;# 
   364   000FCC                     TMR2            equ	4044	;# 
   365   000FCD                     T1CON           equ	4045	;# 
   366   000FCE                     TMR1            equ	4046	;# 
   367   000FCE                     TMR1L           equ	4046	;# 
   368   000FCF                     TMR1H           equ	4047	;# 
   369   000FD0                     RCON            equ	4048	;# 
   370   000FD1                     WDTCON          equ	4049	;# 
   371   000FD2                     HLVDCON         equ	4050	;# 
   372   000FD2                     LVDCON          equ	4050	;# 
   373   000FD3                     OSCCON          equ	4051	;# 
   374   000FD5                     T0CON           equ	4053	;# 
   375   000FD6                     TMR0            equ	4054	;# 
   376   000FD6                     TMR0L           equ	4054	;# 
   377   000FD7                     TMR0H           equ	4055	;# 
   378   000FD8                     STATUS          equ	4056	;# 
   379   000FD9                     FSR2            equ	4057	;# 
   380   000FD9                     FSR2L           equ	4057	;# 
   381   000FDA                     FSR2H           equ	4058	;# 
   382   000FDB                     PLUSW2          equ	4059	;# 
   383   000FDC                     PREINC2         equ	4060	;# 
   384   000FDD                     POSTDEC2        equ	4061	;# 
   385   000FDE                     POSTINC2        equ	4062	;# 
   386   000FDF                     INDF2           equ	4063	;# 
   387   000FE0                     BSR             equ	4064	;# 
   388   000FE1                     FSR1            equ	4065	;# 
   389   000FE1                     FSR1L           equ	4065	;# 
   390   000FE2                     FSR1H           equ	4066	;# 
   391   000FE3                     PLUSW1          equ	4067	;# 
   392   000FE4                     PREINC1         equ	4068	;# 
   393   000FE5                     POSTDEC1        equ	4069	;# 
   394   000FE6                     POSTINC1        equ	4070	;# 
   395   000FE7                     INDF1           equ	4071	;# 
   396   000FE8                     WREG            equ	4072	;# 
   397   000FE9                     FSR0            equ	4073	;# 
   398   000FE9                     FSR0L           equ	4073	;# 
   399   000FEA                     FSR0H           equ	4074	;# 
   400   000FEB                     PLUSW0          equ	4075	;# 
   401   000FEC                     PREINC0         equ	4076	;# 
   402   000FED                     POSTDEC0        equ	4077	;# 
   403   000FEE                     POSTINC0        equ	4078	;# 
   404   000FEF                     INDF0           equ	4079	;# 
   405   000FF0                     INTCON3         equ	4080	;# 
   406   000FF1                     INTCON2         equ	4081	;# 
   407   000FF2                     INTCON          equ	4082	;# 
   408   000FF3                     PROD            equ	4083	;# 
   409   000FF3                     PRODL           equ	4083	;# 
   410   000FF4                     PRODH           equ	4084	;# 
   411   000FF5                     TABLAT          equ	4085	;# 
   412   000FF6                     TBLPTR          equ	4086	;# 
   413   000FF6                     TBLPTRL         equ	4086	;# 
   414   000FF7                     TBLPTRH         equ	4087	;# 
   415   000FF8                     TBLPTRU         equ	4088	;# 
   416   000FF9                     PCLAT           equ	4089	;# 
   417   000FF9                     PC              equ	4089	;# 
   418   000FF9                     PCL             equ	4089	;# 
   419   000FFA                     PCLATH          equ	4090	;# 
   420   000FFB                     PCLATU          equ	4091	;# 
   421   000FFC                     STKPTR          equ	4092	;# 
   422   000FFD                     TOS             equ	4093	;# 
   423   000FFD                     TOSL            equ	4093	;# 
   424   000FFE                     TOSH            equ	4094	;# 
   425   000FFF                     TOSU            equ	4095	;# 
   426   000F77                     SSPMSK          equ	3959	;# 
   427   000F78                     SLRCON          equ	3960	;# 
   428   000F79                     CM2CON1         equ	3961	;# 
   429   000F7A                     CM2CON0         equ	3962	;# 
   430   000F7B                     CM1CON0         equ	3963	;# 
   431   000F7C                     WPUB            equ	3964	;# 
   432   000F7D                     IOCB            equ	3965	;# 
   433   000F7E                     ANSEL           equ	3966	;# 
   434   000F7F                     ANSELH          equ	3967	;# 
   435   000F80                     PORTA           equ	3968	;# 
   436   000F81                     PORTB           equ	3969	;# 
   437   000F82                     PORTC           equ	3970	;# 
   438   000F83                     PORTD           equ	3971	;# 
   439   000F84                     PORTE           equ	3972	;# 
   440   000F89                     LATA            equ	3977	;# 
   441   000F8A                     LATB            equ	3978	;# 
   442   000F8B                     LATC            equ	3979	;# 
   443   000F8C                     LATD            equ	3980	;# 
   444   000F8D                     LATE            equ	3981	;# 
   445   000F92                     TRISA           equ	3986	;# 
   446   000F92                     DDRA            equ	3986	;# 
   447   000F93                     TRISB           equ	3987	;# 
   448   000F93                     DDRB            equ	3987	;# 
   449   000F94                     TRISC           equ	3988	;# 
   450   000F94                     DDRC            equ	3988	;# 
   451   000F95                     TRISD           equ	3989	;# 
   452   000F95                     DDRD            equ	3989	;# 
   453   000F96                     TRISE           equ	3990	;# 
   454   000F96                     DDRE            equ	3990	;# 
   455   000F9B                     OSCTUNE         equ	3995	;# 
   456   000F9D                     PIE1            equ	3997	;# 
   457   000F9E                     PIR1            equ	3998	;# 
   458   000F9F                     IPR1            equ	3999	;# 
   459   000FA0                     PIE2            equ	4000	;# 
   460   000FA1                     PIR2            equ	4001	;# 
   461   000FA2                     IPR2            equ	4002	;# 
   462   000FA6                     EECON1          equ	4006	;# 
   463   000FA7                     EECON2          equ	4007	;# 
   464   000FA8                     EEDATA          equ	4008	;# 
   465   000FA9                     EEADR           equ	4009	;# 
   466   000FAA                     EEADRH          equ	4010	;# 
   467   000FAB                     RCSTA           equ	4011	;# 
   468   000FAB                     RCSTA1          equ	4011	;# 
   469   000FAC                     TXSTA           equ	4012	;# 
   470   000FAC                     TXSTA1          equ	4012	;# 
   471   000FAD                     TXREG           equ	4013	;# 
   472   000FAD                     TXREG1          equ	4013	;# 
   473   000FAE                     RCREG           equ	4014	;# 
   474   000FAE                     RCREG1          equ	4014	;# 
   475   000FAF                     SPBRG           equ	4015	;# 
   476   000FAF                     SPBRG1          equ	4015	;# 
   477   000FB0                     SPBRGH          equ	4016	;# 
   478   000FB1                     T3CON           equ	4017	;# 
   479   000FB2                     TMR3            equ	4018	;# 
   480   000FB2                     TMR3L           equ	4018	;# 
   481   000FB3                     TMR3H           equ	4019	;# 
   482   000FB4                     CVRCON2         equ	4020	;# 
   483   000FB5                     CVRCON          equ	4021	;# 
   484   000FB6                     ECCP1AS         equ	4022	;# 
   485   000FB7                     PWM1CON         equ	4023	;# 
   486   000FB8                     BAUDCON         equ	4024	;# 
   487   000FB8                     BAUDCTL         equ	4024	;# 
   488   000FB9                     PSTRCON         equ	4025	;# 
   489   000FBA                     CCP2CON         equ	4026	;# 
   490   000FBB                     CCPR2           equ	4027	;# 
   491   000FBB                     CCPR2L          equ	4027	;# 
   492   000FBC                     CCPR2H          equ	4028	;# 
   493   000FBD                     CCP1CON         equ	4029	;# 
   494   000FBE                     CCPR1           equ	4030	;# 
   495   000FBE                     CCPR1L          equ	4030	;# 
   496   000FBF                     CCPR1H          equ	4031	;# 
   497   000FC0                     ADCON2          equ	4032	;# 
   498   000FC1                     ADCON1          equ	4033	;# 
   499   000FC2                     ADCON0          equ	4034	;# 
   500   000FC3                     ADRES           equ	4035	;# 
   501   000FC3                     ADRESL          equ	4035	;# 
   502   000FC4                     ADRESH          equ	4036	;# 
   503   000FC5                     SSPCON2         equ	4037	;# 
   504   000FC6                     SSPCON1         equ	4038	;# 
   505   000FC7                     SSPSTAT         equ	4039	;# 
   506   000FC8                     SSPADD          equ	4040	;# 
   507   000FC9                     SSPBUF          equ	4041	;# 
   508   000FCA                     T2CON           equ	4042	;# 
   509   000FCB                     PR2             equ	4043	;# 
   510   000FCB                     MEMCON          equ	4043	;# 
   511   000FCC                     TMR2            equ	4044	;# 
   512   000FCD                     T1CON           equ	4045	;# 
   513   000FCE                     TMR1            equ	4046	;# 
   514   000FCE                     TMR1L           equ	4046	;# 
   515   000FCF                     TMR1H           equ	4047	;# 
   516   000FD0                     RCON            equ	4048	;# 
   517   000FD1                     WDTCON          equ	4049	;# 
   518   000FD2                     HLVDCON         equ	4050	;# 
   519   000FD2                     LVDCON          equ	4050	;# 
   520   000FD3                     OSCCON          equ	4051	;# 
   521   000FD5                     T0CON           equ	4053	;# 
   522   000FD6                     TMR0            equ	4054	;# 
   523   000FD6                     TMR0L           equ	4054	;# 
   524   000FD7                     TMR0H           equ	4055	;# 
   525   000FD8                     STATUS          equ	4056	;# 
   526   000FD9                     FSR2            equ	4057	;# 
   527   000FD9                     FSR2L           equ	4057	;# 
   528   000FDA                     FSR2H           equ	4058	;# 
   529   000FDB                     PLUSW2          equ	4059	;# 
   530   000FDC                     PREINC2         equ	4060	;# 
   531   000FDD                     POSTDEC2        equ	4061	;# 
   532   000FDE                     POSTINC2        equ	4062	;# 
   533   000FDF                     INDF2           equ	4063	;# 
   534   000FE0                     BSR             equ	4064	;# 
   535   000FE1                     FSR1            equ	4065	;# 
   536   000FE1                     FSR1L           equ	4065	;# 
   537   000FE2                     FSR1H           equ	4066	;# 
   538   000FE3                     PLUSW1          equ	4067	;# 
   539   000FE4                     PREINC1         equ	4068	;# 
   540   000FE5                     POSTDEC1        equ	4069	;# 
   541   000FE6                     POSTINC1        equ	4070	;# 
   542   000FE7                     INDF1           equ	4071	;# 
   543   000FE8                     WREG            equ	4072	;# 
   544   000FE9                     FSR0            equ	4073	;# 
   545   000FE9                     FSR0L           equ	4073	;# 
   546   000FEA                     FSR0H           equ	4074	;# 
   547   000FEB                     PLUSW0          equ	4075	;# 
   548   000FEC                     PREINC0         equ	4076	;# 
   549   000FED                     POSTDEC0        equ	4077	;# 
   550   000FEE                     POSTINC0        equ	4078	;# 
   551   000FEF                     INDF0           equ	4079	;# 
   552   000FF0                     INTCON3         equ	4080	;# 
   553   000FF1                     INTCON2         equ	4081	;# 
   554   000FF2                     INTCON          equ	4082	;# 
   555   000FF3                     PROD            equ	4083	;# 
   556   000FF3                     PRODL           equ	4083	;# 
   557   000FF4                     PRODH           equ	4084	;# 
   558   000FF5                     TABLAT          equ	4085	;# 
   559   000FF6                     TBLPTR          equ	4086	;# 
   560   000FF6                     TBLPTRL         equ	4086	;# 
   561   000FF7                     TBLPTRH         equ	4087	;# 
   562   000FF8                     TBLPTRU         equ	4088	;# 
   563   000FF9                     PCLAT           equ	4089	;# 
   564   000FF9                     PC              equ	4089	;# 
   565   000FF9                     PCL             equ	4089	;# 
   566   000FFA                     PCLATH          equ	4090	;# 
   567   000FFB                     PCLATU          equ	4091	;# 
   568   000FFC                     STKPTR          equ	4092	;# 
   569   000FFD                     TOS             equ	4093	;# 
   570   000FFD                     TOSL            equ	4093	;# 
   571   000FFE                     TOSH            equ	4094	;# 
   572   000FFF                     TOSU            equ	4095	;# 
   573   000F77                     SSPMSK          equ	3959	;# 
   574   000F78                     SLRCON          equ	3960	;# 
   575   000F79                     CM2CON1         equ	3961	;# 
   576   000F7A                     CM2CON0         equ	3962	;# 
   577   000F7B                     CM1CON0         equ	3963	;# 
   578   000F7C                     WPUB            equ	3964	;# 
   579   000F7D                     IOCB            equ	3965	;# 
   580   000F7E                     ANSEL           equ	3966	;# 
   581   000F7F                     ANSELH          equ	3967	;# 
   582   000F80                     PORTA           equ	3968	;# 
   583   000F81                     PORTB           equ	3969	;# 
   584   000F82                     PORTC           equ	3970	;# 
   585   000F83                     PORTD           equ	3971	;# 
   586   000F84                     PORTE           equ	3972	;# 
   587   000F89                     LATA            equ	3977	;# 
   588   000F8A                     LATB            equ	3978	;# 
   589   000F8B                     LATC            equ	3979	;# 
   590   000F8C                     LATD            equ	3980	;# 
   591   000F8D                     LATE            equ	3981	;# 
   592   000F92                     TRISA           equ	3986	;# 
   593   000F92                     DDRA            equ	3986	;# 
   594   000F93                     TRISB           equ	3987	;# 
   595   000F93                     DDRB            equ	3987	;# 
   596   000F94                     TRISC           equ	3988	;# 
   597   000F94                     DDRC            equ	3988	;# 
   598   000F95                     TRISD           equ	3989	;# 
   599   000F95                     DDRD            equ	3989	;# 
   600   000F96                     TRISE           equ	3990	;# 
   601   000F96                     DDRE            equ	3990	;# 
   602   000F9B                     OSCTUNE         equ	3995	;# 
   603   000F9D                     PIE1            equ	3997	;# 
   604   000F9E                     PIR1            equ	3998	;# 
   605   000F9F                     IPR1            equ	3999	;# 
   606   000FA0                     PIE2            equ	4000	;# 
   607   000FA1                     PIR2            equ	4001	;# 
   608   000FA2                     IPR2            equ	4002	;# 
   609   000FA6                     EECON1          equ	4006	;# 
   610   000FA7                     EECON2          equ	4007	;# 
   611   000FA8                     EEDATA          equ	4008	;# 
   612   000FA9                     EEADR           equ	4009	;# 
   613   000FAA                     EEADRH          equ	4010	;# 
   614   000FAB                     RCSTA           equ	4011	;# 
   615   000FAB                     RCSTA1          equ	4011	;# 
   616   000FAC                     TXSTA           equ	4012	;# 
   617   000FAC                     TXSTA1          equ	4012	;# 
   618   000FAD                     TXREG           equ	4013	;# 
   619   000FAD                     TXREG1          equ	4013	;# 
   620   000FAE                     RCREG           equ	4014	;# 
   621   000FAE                     RCREG1          equ	4014	;# 
   622   000FAF                     SPBRG           equ	4015	;# 
   623   000FAF                     SPBRG1          equ	4015	;# 
   624   000FB0                     SPBRGH          equ	4016	;# 
   625   000FB1                     T3CON           equ	4017	;# 
   626   000FB2                     TMR3            equ	4018	;# 
   627   000FB2                     TMR3L           equ	4018	;# 
   628   000FB3                     TMR3H           equ	4019	;# 
   629   000FB4                     CVRCON2         equ	4020	;# 
   630   000FB5                     CVRCON          equ	4021	;# 
   631   000FB6                     ECCP1AS         equ	4022	;# 
   632   000FB7                     PWM1CON         equ	4023	;# 
   633   000FB8                     BAUDCON         equ	4024	;# 
   634   000FB8                     BAUDCTL         equ	4024	;# 
   635   000FB9                     PSTRCON         equ	4025	;# 
   636   000FBA                     CCP2CON         equ	4026	;# 
   637   000FBB                     CCPR2           equ	4027	;# 
   638   000FBB                     CCPR2L          equ	4027	;# 
   639   000FBC                     CCPR2H          equ	4028	;# 
   640   000FBD                     CCP1CON         equ	4029	;# 
   641   000FBE                     CCPR1           equ	4030	;# 
   642   000FBE                     CCPR1L          equ	4030	;# 
   643   000FBF                     CCPR1H          equ	4031	;# 
   644   000FC0                     ADCON2          equ	4032	;# 
   645   000FC1                     ADCON1          equ	4033	;# 
   646   000FC2                     ADCON0          equ	4034	;# 
   647   000FC3                     ADRES           equ	4035	;# 
   648   000FC3                     ADRESL          equ	4035	;# 
   649   000FC4                     ADRESH          equ	4036	;# 
   650   000FC5                     SSPCON2         equ	4037	;# 
   651   000FC6                     SSPCON1         equ	4038	;# 
   652   000FC7                     SSPSTAT         equ	4039	;# 
   653   000FC8                     SSPADD          equ	4040	;# 
   654   000FC9                     SSPBUF          equ	4041	;# 
   655   000FCA                     T2CON           equ	4042	;# 
   656   000FCB                     PR2             equ	4043	;# 
   657   000FCB                     MEMCON          equ	4043	;# 
   658   000FCC                     TMR2            equ	4044	;# 
   659   000FCD                     T1CON           equ	4045	;# 
   660   000FCE                     TMR1            equ	4046	;# 
   661   000FCE                     TMR1L           equ	4046	;# 
   662   000FCF                     TMR1H           equ	4047	;# 
   663   000FD0                     RCON            equ	4048	;# 
   664   000FD1                     WDTCON          equ	4049	;# 
   665   000FD2                     HLVDCON         equ	4050	;# 
   666   000FD2                     LVDCON          equ	4050	;# 
   667   000FD3                     OSCCON          equ	4051	;# 
   668   000FD5                     T0CON           equ	4053	;# 
   669   000FD6                     TMR0            equ	4054	;# 
   670   000FD6                     TMR0L           equ	4054	;# 
   671   000FD7                     TMR0H           equ	4055	;# 
   672   000FD8                     STATUS          equ	4056	;# 
   673   000FD9                     FSR2            equ	4057	;# 
   674   000FD9                     FSR2L           equ	4057	;# 
   675   000FDA                     FSR2H           equ	4058	;# 
   676   000FDB                     PLUSW2          equ	4059	;# 
   677   000FDC                     PREINC2         equ	4060	;# 
   678   000FDD                     POSTDEC2        equ	4061	;# 
   679   000FDE                     POSTINC2        equ	4062	;# 
   680   000FDF                     INDF2           equ	4063	;# 
   681   000FE0                     BSR             equ	4064	;# 
   682   000FE1                     FSR1            equ	4065	;# 
   683   000FE1                     FSR1L           equ	4065	;# 
   684   000FE2                     FSR1H           equ	4066	;# 
   685   000FE3                     PLUSW1          equ	4067	;# 
   686   000FE4                     PREINC1         equ	4068	;# 
   687   000FE5                     POSTDEC1        equ	4069	;# 
   688   000FE6                     POSTINC1        equ	4070	;# 
   689   000FE7                     INDF1           equ	4071	;# 
   690   000FE8                     WREG            equ	4072	;# 
   691   000FE9                     FSR0            equ	4073	;# 
   692   000FE9                     FSR0L           equ	4073	;# 
   693   000FEA                     FSR0H           equ	4074	;# 
   694   000FEB                     PLUSW0          equ	4075	;# 
   695   000FEC                     PREINC0         equ	4076	;# 
   696   000FED                     POSTDEC0        equ	4077	;# 
   697   000FEE                     POSTINC0        equ	4078	;# 
   698   000FEF                     INDF0           equ	4079	;# 
   699   000FF0                     INTCON3         equ	4080	;# 
   700   000FF1                     INTCON2         equ	4081	;# 
   701   000FF2                     INTCON          equ	4082	;# 
   702   000FF3                     PROD            equ	4083	;# 
   703   000FF3                     PRODL           equ	4083	;# 
   704   000FF4                     PRODH           equ	4084	;# 
   705   000FF5                     TABLAT          equ	4085	;# 
   706   000FF6                     TBLPTR          equ	4086	;# 
   707   000FF6                     TBLPTRL         equ	4086	;# 
   708   000FF7                     TBLPTRH         equ	4087	;# 
   709   000FF8                     TBLPTRU         equ	4088	;# 
   710   000FF9                     PCLAT           equ	4089	;# 
   711   000FF9                     PC              equ	4089	;# 
   712   000FF9                     PCL             equ	4089	;# 
   713   000FFA                     PCLATH          equ	4090	;# 
   714   000FFB                     PCLATU          equ	4091	;# 
   715   000FFC                     STKPTR          equ	4092	;# 
   716   000FFD                     TOS             equ	4093	;# 
   717   000FFD                     TOSL            equ	4093	;# 
   718   000FFE                     TOSH            equ	4094	;# 
   719   000FFF                     TOSU            equ	4095	;# 
   720   000F77                     SSPMSK          equ	3959	;# 
   721   000F78                     SLRCON          equ	3960	;# 
   722   000F79                     CM2CON1         equ	3961	;# 
   723   000F7A                     CM2CON0         equ	3962	;# 
   724   000F7B                     CM1CON0         equ	3963	;# 
   725   000F7C                     WPUB            equ	3964	;# 
   726   000F7D                     IOCB            equ	3965	;# 
   727   000F7E                     ANSEL           equ	3966	;# 
   728   000F7F                     ANSELH          equ	3967	;# 
   729   000F80                     PORTA           equ	3968	;# 
   730   000F81                     PORTB           equ	3969	;# 
   731   000F82                     PORTC           equ	3970	;# 
   732   000F83                     PORTD           equ	3971	;# 
   733   000F84                     PORTE           equ	3972	;# 
   734   000F89                     LATA            equ	3977	;# 
   735   000F8A                     LATB            equ	3978	;# 
   736   000F8B                     LATC            equ	3979	;# 
   737   000F8C                     LATD            equ	3980	;# 
   738   000F8D                     LATE            equ	3981	;# 
   739   000F92                     TRISA           equ	3986	;# 
   740   000F92                     DDRA            equ	3986	;# 
   741   000F93                     TRISB           equ	3987	;# 
   742   000F93                     DDRB            equ	3987	;# 
   743   000F94                     TRISC           equ	3988	;# 
   744   000F94                     DDRC            equ	3988	;# 
   745   000F95                     TRISD           equ	3989	;# 
   746   000F95                     DDRD            equ	3989	;# 
   747   000F96                     TRISE           equ	3990	;# 
   748   000F96                     DDRE            equ	3990	;# 
   749   000F9B                     OSCTUNE         equ	3995	;# 
   750   000F9D                     PIE1            equ	3997	;# 
   751   000F9E                     PIR1            equ	3998	;# 
   752   000F9F                     IPR1            equ	3999	;# 
   753   000FA0                     PIE2            equ	4000	;# 
   754   000FA1                     PIR2            equ	4001	;# 
   755   000FA2                     IPR2            equ	4002	;# 
   756   000FA6                     EECON1          equ	4006	;# 
   757   000FA7                     EECON2          equ	4007	;# 
   758   000FA8                     EEDATA          equ	4008	;# 
   759   000FA9                     EEADR           equ	4009	;# 
   760   000FAA                     EEADRH          equ	4010	;# 
   761   000FAB                     RCSTA           equ	4011	;# 
   762   000FAB                     RCSTA1          equ	4011	;# 
   763   000FAC                     TXSTA           equ	4012	;# 
   764   000FAC                     TXSTA1          equ	4012	;# 
   765   000FAD                     TXREG           equ	4013	;# 
   766   000FAD                     TXREG1          equ	4013	;# 
   767   000FAE                     RCREG           equ	4014	;# 
   768   000FAE                     RCREG1          equ	4014	;# 
   769   000FAF                     SPBRG           equ	4015	;# 
   770   000FAF                     SPBRG1          equ	4015	;# 
   771   000FB0                     SPBRGH          equ	4016	;# 
   772   000FB1                     T3CON           equ	4017	;# 
   773   000FB2                     TMR3            equ	4018	;# 
   774   000FB2                     TMR3L           equ	4018	;# 
   775   000FB3                     TMR3H           equ	4019	;# 
   776   000FB4                     CVRCON2         equ	4020	;# 
   777   000FB5                     CVRCON          equ	4021	;# 
   778   000FB6                     ECCP1AS         equ	4022	;# 
   779   000FB7                     PWM1CON         equ	4023	;# 
   780   000FB8                     BAUDCON         equ	4024	;# 
   781   000FB8                     BAUDCTL         equ	4024	;# 
   782   000FB9                     PSTRCON         equ	4025	;# 
   783   000FBA                     CCP2CON         equ	4026	;# 
   784   000FBB                     CCPR2           equ	4027	;# 
   785   000FBB                     CCPR2L          equ	4027	;# 
   786   000FBC                     CCPR2H          equ	4028	;# 
   787   000FBD                     CCP1CON         equ	4029	;# 
   788   000FBE                     CCPR1           equ	4030	;# 
   789   000FBE                     CCPR1L          equ	4030	;# 
   790   000FBF                     CCPR1H          equ	4031	;# 
   791   000FC0                     ADCON2          equ	4032	;# 
   792   000FC1                     ADCON1          equ	4033	;# 
   793   000FC2                     ADCON0          equ	4034	;# 
   794   000FC3                     ADRES           equ	4035	;# 
   795   000FC3                     ADRESL          equ	4035	;# 
   796   000FC4                     ADRESH          equ	4036	;# 
   797   000FC5                     SSPCON2         equ	4037	;# 
   798   000FC6                     SSPCON1         equ	4038	;# 
   799   000FC7                     SSPSTAT         equ	4039	;# 
   800   000FC8                     SSPADD          equ	4040	;# 
   801   000FC9                     SSPBUF          equ	4041	;# 
   802   000FCA                     T2CON           equ	4042	;# 
   803   000FCB                     PR2             equ	4043	;# 
   804   000FCB                     MEMCON          equ	4043	;# 
   805   000FCC                     TMR2            equ	4044	;# 
   806   000FCD                     T1CON           equ	4045	;# 
   807   000FCE                     TMR1            equ	4046	;# 
   808   000FCE                     TMR1L           equ	4046	;# 
   809   000FCF                     TMR1H           equ	4047	;# 
   810   000FD0                     RCON            equ	4048	;# 
   811   000FD1                     WDTCON          equ	4049	;# 
   812   000FD2                     HLVDCON         equ	4050	;# 
   813   000FD2                     LVDCON          equ	4050	;# 
   814   000FD3                     OSCCON          equ	4051	;# 
   815   000FD5                     T0CON           equ	4053	;# 
   816   000FD6                     TMR0            equ	4054	;# 
   817   000FD6                     TMR0L           equ	4054	;# 
   818   000FD7                     TMR0H           equ	4055	;# 
   819   000FD8                     STATUS          equ	4056	;# 
   820   000FD9                     FSR2            equ	4057	;# 
   821   000FD9                     FSR2L           equ	4057	;# 
   822   000FDA                     FSR2H           equ	4058	;# 
   823   000FDB                     PLUSW2          equ	4059	;# 
   824   000FDC                     PREINC2         equ	4060	;# 
   825   000FDD                     POSTDEC2        equ	4061	;# 
   826   000FDE                     POSTINC2        equ	4062	;# 
   827   000FDF                     INDF2           equ	4063	;# 
   828   000FE0                     BSR             equ	4064	;# 
   829   000FE1                     FSR1            equ	4065	;# 
   830   000FE1                     FSR1L           equ	4065	;# 
   831   000FE2                     FSR1H           equ	4066	;# 
   832   000FE3                     PLUSW1          equ	4067	;# 
   833   000FE4                     PREINC1         equ	4068	;# 
   834   000FE5                     POSTDEC1        equ	4069	;# 
   835   000FE6                     POSTINC1        equ	4070	;# 
   836   000FE7                     INDF1           equ	4071	;# 
   837   000FE8                     WREG            equ	4072	;# 
   838   000FE9                     FSR0            equ	4073	;# 
   839   000FE9                     FSR0L           equ	4073	;# 
   840   000FEA                     FSR0H           equ	4074	;# 
   841   000FEB                     PLUSW0          equ	4075	;# 
   842   000FEC                     PREINC0         equ	4076	;# 
   843   000FED                     POSTDEC0        equ	4077	;# 
   844   000FEE                     POSTINC0        equ	4078	;# 
   845   000FEF                     INDF0           equ	4079	;# 
   846   000FF0                     INTCON3         equ	4080	;# 
   847   000FF1                     INTCON2         equ	4081	;# 
   848   000FF2                     INTCON          equ	4082	;# 
   849   000FF3                     PROD            equ	4083	;# 
   850   000FF3                     PRODL           equ	4083	;# 
   851   000FF4                     PRODH           equ	4084	;# 
   852   000FF5                     TABLAT          equ	4085	;# 
   853   000FF6                     TBLPTR          equ	4086	;# 
   854   000FF6                     TBLPTRL         equ	4086	;# 
   855   000FF7                     TBLPTRH         equ	4087	;# 
   856   000FF8                     TBLPTRU         equ	4088	;# 
   857   000FF9                     PCLAT           equ	4089	;# 
   858   000FF9                     PC              equ	4089	;# 
   859   000FF9                     PCL             equ	4089	;# 
   860   000FFA                     PCLATH          equ	4090	;# 
   861   000FFB                     PCLATU          equ	4091	;# 
   862   000FFC                     STKPTR          equ	4092	;# 
   863   000FFD                     TOS             equ	4093	;# 
   864   000FFD                     TOSL            equ	4093	;# 
   865   000FFE                     TOSH            equ	4094	;# 
   866   000FFF                     TOSU            equ	4095	;# 
   867   000F77                     SSPMSK          equ	3959	;# 
   868   000F78                     SLRCON          equ	3960	;# 
   869   000F79                     CM2CON1         equ	3961	;# 
   870   000F7A                     CM2CON0         equ	3962	;# 
   871   000F7B                     CM1CON0         equ	3963	;# 
   872   000F7C                     WPUB            equ	3964	;# 
   873   000F7D                     IOCB            equ	3965	;# 
   874   000F7E                     ANSEL           equ	3966	;# 
   875   000F7F                     ANSELH          equ	3967	;# 
   876   000F80                     PORTA           equ	3968	;# 
   877   000F81                     PORTB           equ	3969	;# 
   878   000F82                     PORTC           equ	3970	;# 
   879   000F83                     PORTD           equ	3971	;# 
   880   000F84                     PORTE           equ	3972	;# 
   881   000F89                     LATA            equ	3977	;# 
   882   000F8A                     LATB            equ	3978	;# 
   883   000F8B                     LATC            equ	3979	;# 
   884   000F8C                     LATD            equ	3980	;# 
   885   000F8D                     LATE            equ	3981	;# 
   886   000F92                     TRISA           equ	3986	;# 
   887   000F92                     DDRA            equ	3986	;# 
   888   000F93                     TRISB           equ	3987	;# 
   889   000F93                     DDRB            equ	3987	;# 
   890   000F94                     TRISC           equ	3988	;# 
   891   000F94                     DDRC            equ	3988	;# 
   892   000F95                     TRISD           equ	3989	;# 
   893   000F95                     DDRD            equ	3989	;# 
   894   000F96                     TRISE           equ	3990	;# 
   895   000F96                     DDRE            equ	3990	;# 
   896   000F9B                     OSCTUNE         equ	3995	;# 
   897   000F9D                     PIE1            equ	3997	;# 
   898   000F9E                     PIR1            equ	3998	;# 
   899   000F9F                     IPR1            equ	3999	;# 
   900   000FA0                     PIE2            equ	4000	;# 
   901   000FA1                     PIR2            equ	4001	;# 
   902   000FA2                     IPR2            equ	4002	;# 
   903   000FA6                     EECON1          equ	4006	;# 
   904   000FA7                     EECON2          equ	4007	;# 
   905   000FA8                     EEDATA          equ	4008	;# 
   906   000FA9                     EEADR           equ	4009	;# 
   907   000FAA                     EEADRH          equ	4010	;# 
   908   000FAB                     RCSTA           equ	4011	;# 
   909   000FAB                     RCSTA1          equ	4011	;# 
   910   000FAC                     TXSTA           equ	4012	;# 
   911   000FAC                     TXSTA1          equ	4012	;# 
   912   000FAD                     TXREG           equ	4013	;# 
   913   000FAD                     TXREG1          equ	4013	;# 
   914   000FAE                     RCREG           equ	4014	;# 
   915   000FAE                     RCREG1          equ	4014	;# 
   916   000FAF                     SPBRG           equ	4015	;# 
   917   000FAF                     SPBRG1          equ	4015	;# 
   918   000FB0                     SPBRGH          equ	4016	;# 
   919   000FB1                     T3CON           equ	4017	;# 
   920   000FB2                     TMR3            equ	4018	;# 
   921   000FB2                     TMR3L           equ	4018	;# 
   922   000FB3                     TMR3H           equ	4019	;# 
   923   000FB4                     CVRCON2         equ	4020	;# 
   924   000FB5                     CVRCON          equ	4021	;# 
   925   000FB6                     ECCP1AS         equ	4022	;# 
   926   000FB7                     PWM1CON         equ	4023	;# 
   927   000FB8                     BAUDCON         equ	4024	;# 
   928   000FB8                     BAUDCTL         equ	4024	;# 
   929   000FB9                     PSTRCON         equ	4025	;# 
   930   000FBA                     CCP2CON         equ	4026	;# 
   931   000FBB                     CCPR2           equ	4027	;# 
   932   000FBB                     CCPR2L          equ	4027	;# 
   933   000FBC                     CCPR2H          equ	4028	;# 
   934   000FBD                     CCP1CON         equ	4029	;# 
   935   000FBE                     CCPR1           equ	4030	;# 
   936   000FBE                     CCPR1L          equ	4030	;# 
   937   000FBF                     CCPR1H          equ	4031	;# 
   938   000FC0                     ADCON2          equ	4032	;# 
   939   000FC1                     ADCON1          equ	4033	;# 
   940   000FC2                     ADCON0          equ	4034	;# 
   941   000FC3                     ADRES           equ	4035	;# 
   942   000FC3                     ADRESL          equ	4035	;# 
   943   000FC4                     ADRESH          equ	4036	;# 
   944   000FC5                     SSPCON2         equ	4037	;# 
   945   000FC6                     SSPCON1         equ	4038	;# 
   946   000FC7                     SSPSTAT         equ	4039	;# 
   947   000FC8                     SSPADD          equ	4040	;# 
   948   000FC9                     SSPBUF          equ	4041	;# 
   949   000FCA                     T2CON           equ	4042	;# 
   950   000FCB                     PR2             equ	4043	;# 
   951   000FCB                     MEMCON          equ	4043	;# 
   952   000FCC                     TMR2            equ	4044	;# 
   953   000FCD                     T1CON           equ	4045	;# 
   954   000FCE                     TMR1            equ	4046	;# 
   955   000FCE                     TMR1L           equ	4046	;# 
   956   000FCF                     TMR1H           equ	4047	;# 
   957   000FD0                     RCON            equ	4048	;# 
   958   000FD1                     WDTCON          equ	4049	;# 
   959   000FD2                     HLVDCON         equ	4050	;# 
   960   000FD2                     LVDCON          equ	4050	;# 
   961   000FD3                     OSCCON          equ	4051	;# 
   962   000FD5                     T0CON           equ	4053	;# 
   963   000FD6                     TMR0            equ	4054	;# 
   964   000FD6                     TMR0L           equ	4054	;# 
   965   000FD7                     TMR0H           equ	4055	;# 
   966   000FD8                     STATUS          equ	4056	;# 
   967   000FD9                     FSR2            equ	4057	;# 
   968   000FD9                     FSR2L           equ	4057	;# 
   969   000FDA                     FSR2H           equ	4058	;# 
   970   000FDB                     PLUSW2          equ	4059	;# 
   971   000FDC                     PREINC2         equ	4060	;# 
   972   000FDD                     POSTDEC2        equ	4061	;# 
   973   000FDE                     POSTINC2        equ	4062	;# 
   974   000FDF                     INDF2           equ	4063	;# 
   975   000FE0                     BSR             equ	4064	;# 
   976   000FE1                     FSR1            equ	4065	;# 
   977   000FE1                     FSR1L           equ	4065	;# 
   978   000FE2                     FSR1H           equ	4066	;# 
   979   000FE3                     PLUSW1          equ	4067	;# 
   980   000FE4                     PREINC1         equ	4068	;# 
   981   000FE5                     POSTDEC1        equ	4069	;# 
   982   000FE6                     POSTINC1        equ	4070	;# 
   983   000FE7                     INDF1           equ	4071	;# 
   984   000FE8                     WREG            equ	4072	;# 
   985   000FE9                     FSR0            equ	4073	;# 
   986   000FE9                     FSR0L           equ	4073	;# 
   987   000FEA                     FSR0H           equ	4074	;# 
   988   000FEB                     PLUSW0          equ	4075	;# 
   989   000FEC                     PREINC0         equ	4076	;# 
   990   000FED                     POSTDEC0        equ	4077	;# 
   991   000FEE                     POSTINC0        equ	4078	;# 
   992   000FEF                     INDF0           equ	4079	;# 
   993   000FF0                     INTCON3         equ	4080	;# 
   994   000FF1                     INTCON2         equ	4081	;# 
   995   000FF2                     INTCON          equ	4082	;# 
   996   000FF3                     PROD            equ	4083	;# 
   997   000FF3                     PRODL           equ	4083	;# 
   998   000FF4                     PRODH           equ	4084	;# 
   999   000FF5                     TABLAT          equ	4085	;# 
  1000   000FF6                     TBLPTR          equ	4086	;# 
  1001   000FF6                     TBLPTRL         equ	4086	;# 
  1002   000FF7                     TBLPTRH         equ	4087	;# 
  1003   000FF8                     TBLPTRU         equ	4088	;# 
  1004   000FF9                     PCLAT           equ	4089	;# 
  1005   000FF9                     PC              equ	4089	;# 
  1006   000FF9                     PCL             equ	4089	;# 
  1007   000FFA                     PCLATH          equ	4090	;# 
  1008   000FFB                     PCLATU          equ	4091	;# 
  1009   000FFC                     STKPTR          equ	4092	;# 
  1010   000FFD                     TOS             equ	4093	;# 
  1011   000FFD                     TOSL            equ	4093	;# 
  1012   000FFE                     TOSH            equ	4094	;# 
  1013   000FFF                     TOSU            equ	4095	;# 
  1014   000F77                     SSPMSK          equ	3959	;# 
  1015   000F78                     SLRCON          equ	3960	;# 
  1016   000F79                     CM2CON1         equ	3961	;# 
  1017   000F7A                     CM2CON0         equ	3962	;# 
  1018   000F7B                     CM1CON0         equ	3963	;# 
  1019   000F7C                     WPUB            equ	3964	;# 
  1020   000F7D                     IOCB            equ	3965	;# 
  1021   000F7E                     ANSEL           equ	3966	;# 
  1022   000F7F                     ANSELH          equ	3967	;# 
  1023   000F80                     PORTA           equ	3968	;# 
  1024   000F81                     PORTB           equ	3969	;# 
  1025   000F82                     PORTC           equ	3970	;# 
  1026   000F83                     PORTD           equ	3971	;# 
  1027   000F84                     PORTE           equ	3972	;# 
  1028   000F89                     LATA            equ	3977	;# 
  1029   000F8A                     LATB            equ	3978	;# 
  1030   000F8B                     LATC            equ	3979	;# 
  1031   000F8C                     LATD            equ	3980	;# 
  1032   000F8D                     LATE            equ	3981	;# 
  1033   000F92                     TRISA           equ	3986	;# 
  1034   000F92                     DDRA            equ	3986	;# 
  1035   000F93                     TRISB           equ	3987	;# 
  1036   000F93                     DDRB            equ	3987	;# 
  1037   000F94                     TRISC           equ	3988	;# 
  1038   000F94                     DDRC            equ	3988	;# 
  1039   000F95                     TRISD           equ	3989	;# 
  1040   000F95                     DDRD            equ	3989	;# 
  1041   000F96                     TRISE           equ	3990	;# 
  1042   000F96                     DDRE            equ	3990	;# 
  1043   000F9B                     OSCTUNE         equ	3995	;# 
  1044   000F9D                     PIE1            equ	3997	;# 
  1045   000F9E                     PIR1            equ	3998	;# 
  1046   000F9F                     IPR1            equ	3999	;# 
  1047   000FA0                     PIE2            equ	4000	;# 
  1048   000FA1                     PIR2            equ	4001	;# 
  1049   000FA2                     IPR2            equ	4002	;# 
  1050   000FA6                     EECON1          equ	4006	;# 
  1051   000FA7                     EECON2          equ	4007	;# 
  1052   000FA8                     EEDATA          equ	4008	;# 
  1053   000FA9                     EEADR           equ	4009	;# 
  1054   000FAA                     EEADRH          equ	4010	;# 
  1055   000FAB                     RCSTA           equ	4011	;# 
  1056   000FAB                     RCSTA1          equ	4011	;# 
  1057   000FAC                     TXSTA           equ	4012	;# 
  1058   000FAC                     TXSTA1          equ	4012	;# 
  1059   000FAD                     TXREG           equ	4013	;# 
  1060   000FAD                     TXREG1          equ	4013	;# 
  1061   000FAE                     RCREG           equ	4014	;# 
  1062   000FAE                     RCREG1          equ	4014	;# 
  1063   000FAF                     SPBRG           equ	4015	;# 
  1064   000FAF                     SPBRG1          equ	4015	;# 
  1065   000FB0                     SPBRGH          equ	4016	;# 
  1066   000FB1                     T3CON           equ	4017	;# 
  1067   000FB2                     TMR3            equ	4018	;# 
  1068   000FB2                     TMR3L           equ	4018	;# 
  1069   000FB3                     TMR3H           equ	4019	;# 
  1070   000FB4                     CVRCON2         equ	4020	;# 
  1071   000FB5                     CVRCON          equ	4021	;# 
  1072   000FB6                     ECCP1AS         equ	4022	;# 
  1073   000FB7                     PWM1CON         equ	4023	;# 
  1074   000FB8                     BAUDCON         equ	4024	;# 
  1075   000FB8                     BAUDCTL         equ	4024	;# 
  1076   000FB9                     PSTRCON         equ	4025	;# 
  1077   000FBA                     CCP2CON         equ	4026	;# 
  1078   000FBB                     CCPR2           equ	4027	;# 
  1079   000FBB                     CCPR2L          equ	4027	;# 
  1080   000FBC                     CCPR2H          equ	4028	;# 
  1081   000FBD                     CCP1CON         equ	4029	;# 
  1082   000FBE                     CCPR1           equ	4030	;# 
  1083   000FBE                     CCPR1L          equ	4030	;# 
  1084   000FBF                     CCPR1H          equ	4031	;# 
  1085   000FC0                     ADCON2          equ	4032	;# 
  1086   000FC1                     ADCON1          equ	4033	;# 
  1087   000FC2                     ADCON0          equ	4034	;# 
  1088   000FC3                     ADRES           equ	4035	;# 
  1089   000FC3                     ADRESL          equ	4035	;# 
  1090   000FC4                     ADRESH          equ	4036	;# 
  1091   000FC5                     SSPCON2         equ	4037	;# 
  1092   000FC6                     SSPCON1         equ	4038	;# 
  1093   000FC7                     SSPSTAT         equ	4039	;# 
  1094   000FC8                     SSPADD          equ	4040	;# 
  1095   000FC9                     SSPBUF          equ	4041	;# 
  1096   000FCA                     T2CON           equ	4042	;# 
  1097   000FCB                     PR2             equ	4043	;# 
  1098   000FCB                     MEMCON          equ	4043	;# 
  1099   000FCC                     TMR2            equ	4044	;# 
  1100   000FCD                     T1CON           equ	4045	;# 
  1101   000FCE                     TMR1            equ	4046	;# 
  1102   000FCE                     TMR1L           equ	4046	;# 
  1103   000FCF                     TMR1H           equ	4047	;# 
  1104   000FD0                     RCON            equ	4048	;# 
  1105   000FD1                     WDTCON          equ	4049	;# 
  1106   000FD2                     HLVDCON         equ	4050	;# 
  1107   000FD2                     LVDCON          equ	4050	;# 
  1108   000FD3                     OSCCON          equ	4051	;# 
  1109   000FD5                     T0CON           equ	4053	;# 
  1110   000FD6                     TMR0            equ	4054	;# 
  1111   000FD6                     TMR0L           equ	4054	;# 
  1112   000FD7                     TMR0H           equ	4055	;# 
  1113   000FD8                     STATUS          equ	4056	;# 
  1114   000FD9                     FSR2            equ	4057	;# 
  1115   000FD9                     FSR2L           equ	4057	;# 
  1116   000FDA                     FSR2H           equ	4058	;# 
  1117   000FDB                     PLUSW2          equ	4059	;# 
  1118   000FDC                     PREINC2         equ	4060	;# 
  1119   000FDD                     POSTDEC2        equ	4061	;# 
  1120   000FDE                     POSTINC2        equ	4062	;# 
  1121   000FDF                     INDF2           equ	4063	;# 
  1122   000FE0                     BSR             equ	4064	;# 
  1123   000FE1                     FSR1            equ	4065	;# 
  1124   000FE1                     FSR1L           equ	4065	;# 
  1125   000FE2                     FSR1H           equ	4066	;# 
  1126   000FE3                     PLUSW1          equ	4067	;# 
  1127   000FE4                     PREINC1         equ	4068	;# 
  1128   000FE5                     POSTDEC1        equ	4069	;# 
  1129   000FE6                     POSTINC1        equ	4070	;# 
  1130   000FE7                     INDF1           equ	4071	;# 
  1131   000FE8                     WREG            equ	4072	;# 
  1132   000FE9                     FSR0            equ	4073	;# 
  1133   000FE9                     FSR0L           equ	4073	;# 
  1134   000FEA                     FSR0H           equ	4074	;# 
  1135   000FEB                     PLUSW0          equ	4075	;# 
  1136   000FEC                     PREINC0         equ	4076	;# 
  1137   000FED                     POSTDEC0        equ	4077	;# 
  1138   000FEE                     POSTINC0        equ	4078	;# 
  1139   000FEF                     INDF0           equ	4079	;# 
  1140   000FF0                     INTCON3         equ	4080	;# 
  1141   000FF1                     INTCON2         equ	4081	;# 
  1142   000FF2                     INTCON          equ	4082	;# 
  1143   000FF3                     PROD            equ	4083	;# 
  1144   000FF3                     PRODL           equ	4083	;# 
  1145   000FF4                     PRODH           equ	4084	;# 
  1146   000FF5                     TABLAT          equ	4085	;# 
  1147   000FF6                     TBLPTR          equ	4086	;# 
  1148   000FF6                     TBLPTRL         equ	4086	;# 
  1149   000FF7                     TBLPTRH         equ	4087	;# 
  1150   000FF8                     TBLPTRU         equ	4088	;# 
  1151   000FF9                     PCLAT           equ	4089	;# 
  1152   000FF9                     PC              equ	4089	;# 
  1153   000FF9                     PCL             equ	4089	;# 
  1154   000FFA                     PCLATH          equ	4090	;# 
  1155   000FFB                     PCLATU          equ	4091	;# 
  1156   000FFC                     STKPTR          equ	4092	;# 
  1157   000FFD                     TOS             equ	4093	;# 
  1158   000FFD                     TOSL            equ	4093	;# 
  1159   000FFE                     TOSH            equ	4094	;# 
  1160   000FFF                     TOSU            equ	4095	;# 
  1161   000F77                     SSPMSK          equ	3959	;# 
  1162   000F78                     SLRCON          equ	3960	;# 
  1163   000F79                     CM2CON1         equ	3961	;# 
  1164   000F7A                     CM2CON0         equ	3962	;# 
  1165   000F7B                     CM1CON0         equ	3963	;# 
  1166   000F7C                     WPUB            equ	3964	;# 
  1167   000F7D                     IOCB            equ	3965	;# 
  1168   000F7E                     ANSEL           equ	3966	;# 
  1169   000F7F                     ANSELH          equ	3967	;# 
  1170   000F80                     PORTA           equ	3968	;# 
  1171   000F81                     PORTB           equ	3969	;# 
  1172   000F82                     PORTC           equ	3970	;# 
  1173   000F83                     PORTD           equ	3971	;# 
  1174   000F84                     PORTE           equ	3972	;# 
  1175   000F89                     LATA            equ	3977	;# 
  1176   000F8A                     LATB            equ	3978	;# 
  1177   000F8B                     LATC            equ	3979	;# 
  1178   000F8C                     LATD            equ	3980	;# 
  1179   000F8D                     LATE            equ	3981	;# 
  1180   000F92                     TRISA           equ	3986	;# 
  1181   000F92                     DDRA            equ	3986	;# 
  1182   000F93                     TRISB           equ	3987	;# 
  1183   000F93                     DDRB            equ	3987	;# 
  1184   000F94                     TRISC           equ	3988	;# 
  1185   000F94                     DDRC            equ	3988	;# 
  1186   000F95                     TRISD           equ	3989	;# 
  1187   000F95                     DDRD            equ	3989	;# 
  1188   000F96                     TRISE           equ	3990	;# 
  1189   000F96                     DDRE            equ	3990	;# 
  1190   000F9B                     OSCTUNE         equ	3995	;# 
  1191   000F9D                     PIE1            equ	3997	;# 
  1192   000F9E                     PIR1            equ	3998	;# 
  1193   000F9F                     IPR1            equ	3999	;# 
  1194   000FA0                     PIE2            equ	4000	;# 
  1195   000FA1                     PIR2            equ	4001	;# 
  1196   000FA2                     IPR2            equ	4002	;# 
  1197   000FA6                     EECON1          equ	4006	;# 
  1198   000FA7                     EECON2          equ	4007	;# 
  1199   000FA8                     EEDATA          equ	4008	;# 
  1200   000FA9                     EEADR           equ	4009	;# 
  1201   000FAA                     EEADRH          equ	4010	;# 
  1202   000FAB                     RCSTA           equ	4011	;# 
  1203   000FAB                     RCSTA1          equ	4011	;# 
  1204   000FAC                     TXSTA           equ	4012	;# 
  1205   000FAC                     TXSTA1          equ	4012	;# 
  1206   000FAD                     TXREG           equ	4013	;# 
  1207   000FAD                     TXREG1          equ	4013	;# 
  1208   000FAE                     RCREG           equ	4014	;# 
  1209   000FAE                     RCREG1          equ	4014	;# 
  1210   000FAF                     SPBRG           equ	4015	;# 
  1211   000FAF                     SPBRG1          equ	4015	;# 
  1212   000FB0                     SPBRGH          equ	4016	;# 
  1213   000FB1                     T3CON           equ	4017	;# 
  1214   000FB2                     TMR3            equ	4018	;# 
  1215   000FB2                     TMR3L           equ	4018	;# 
  1216   000FB3                     TMR3H           equ	4019	;# 
  1217   000FB4                     CVRCON2         equ	4020	;# 
  1218   000FB5                     CVRCON          equ	4021	;# 
  1219   000FB6                     ECCP1AS         equ	4022	;# 
  1220   000FB7                     PWM1CON         equ	4023	;# 
  1221   000FB8                     BAUDCON         equ	4024	;# 
  1222   000FB8                     BAUDCTL         equ	4024	;# 
  1223   000FB9                     PSTRCON         equ	4025	;# 
  1224   000FBA                     CCP2CON         equ	4026	;# 
  1225   000FBB                     CCPR2           equ	4027	;# 
  1226   000FBB                     CCPR2L          equ	4027	;# 
  1227   000FBC                     CCPR2H          equ	4028	;# 
  1228   000FBD                     CCP1CON         equ	4029	;# 
  1229   000FBE                     CCPR1           equ	4030	;# 
  1230   000FBE                     CCPR1L          equ	4030	;# 
  1231   000FBF                     CCPR1H          equ	4031	;# 
  1232   000FC0                     ADCON2          equ	4032	;# 
  1233   000FC1                     ADCON1          equ	4033	;# 
  1234   000FC2                     ADCON0          equ	4034	;# 
  1235   000FC3                     ADRES           equ	4035	;# 
  1236   000FC3                     ADRESL          equ	4035	;# 
  1237   000FC4                     ADRESH          equ	4036	;# 
  1238   000FC5                     SSPCON2         equ	4037	;# 
  1239   000FC6                     SSPCON1         equ	4038	;# 
  1240   000FC7                     SSPSTAT         equ	4039	;# 
  1241   000FC8                     SSPADD          equ	4040	;# 
  1242   000FC9                     SSPBUF          equ	4041	;# 
  1243   000FCA                     T2CON           equ	4042	;# 
  1244   000FCB                     PR2             equ	4043	;# 
  1245   000FCB                     MEMCON          equ	4043	;# 
  1246   000FCC                     TMR2            equ	4044	;# 
  1247   000FCD                     T1CON           equ	4045	;# 
  1248   000FCE                     TMR1            equ	4046	;# 
  1249   000FCE                     TMR1L           equ	4046	;# 
  1250   000FCF                     TMR1H           equ	4047	;# 
  1251   000FD0                     RCON            equ	4048	;# 
  1252   000FD1                     WDTCON          equ	4049	;# 
  1253   000FD2                     HLVDCON         equ	4050	;# 
  1254   000FD2                     LVDCON          equ	4050	;# 
  1255   000FD3                     OSCCON          equ	4051	;# 
  1256   000FD5                     T0CON           equ	4053	;# 
  1257   000FD6                     TMR0            equ	4054	;# 
  1258   000FD6                     TMR0L           equ	4054	;# 
  1259   000FD7                     TMR0H           equ	4055	;# 
  1260   000FD8                     STATUS          equ	4056	;# 
  1261   000FD9                     FSR2            equ	4057	;# 
  1262   000FD9                     FSR2L           equ	4057	;# 
  1263   000FDA                     FSR2H           equ	4058	;# 
  1264   000FDB                     PLUSW2          equ	4059	;# 
  1265   000FDC                     PREINC2         equ	4060	;# 
  1266   000FDD                     POSTDEC2        equ	4061	;# 
  1267   000FDE                     POSTINC2        equ	4062	;# 
  1268   000FDF                     INDF2           equ	4063	;# 
  1269   000FE0                     BSR             equ	4064	;# 
  1270   000FE1                     FSR1            equ	4065	;# 
  1271   000FE1                     FSR1L           equ	4065	;# 
  1272   000FE2                     FSR1H           equ	4066	;# 
  1273   000FE3                     PLUSW1          equ	4067	;# 
  1274   000FE4                     PREINC1         equ	4068	;# 
  1275   000FE5                     POSTDEC1        equ	4069	;# 
  1276   000FE6                     POSTINC1        equ	4070	;# 
  1277   000FE7                     INDF1           equ	4071	;# 
  1278   000FE8                     WREG            equ	4072	;# 
  1279   000FE9                     FSR0            equ	4073	;# 
  1280   000FE9                     FSR0L           equ	4073	;# 
  1281   000FEA                     FSR0H           equ	4074	;# 
  1282   000FEB                     PLUSW0          equ	4075	;# 
  1283   000FEC                     PREINC0         equ	4076	;# 
  1284   000FED                     POSTDEC0        equ	4077	;# 
  1285   000FEE                     POSTINC0        equ	4078	;# 
  1286   000FEF                     INDF0           equ	4079	;# 
  1287   000FF0                     INTCON3         equ	4080	;# 
  1288   000FF1                     INTCON2         equ	4081	;# 
  1289   000FF2                     INTCON          equ	4082	;# 
  1290   000FF3                     PROD            equ	4083	;# 
  1291   000FF3                     PRODL           equ	4083	;# 
  1292   000FF4                     PRODH           equ	4084	;# 
  1293   000FF5                     TABLAT          equ	4085	;# 
  1294   000FF6                     TBLPTR          equ	4086	;# 
  1295   000FF6                     TBLPTRL         equ	4086	;# 
  1296   000FF7                     TBLPTRH         equ	4087	;# 
  1297   000FF8                     TBLPTRU         equ	4088	;# 
  1298   000FF9                     PCLAT           equ	4089	;# 
  1299   000FF9                     PC              equ	4089	;# 
  1300   000FF9                     PCL             equ	4089	;# 
  1301   000FFA                     PCLATH          equ	4090	;# 
  1302   000FFB                     PCLATU          equ	4091	;# 
  1303   000FFC                     STKPTR          equ	4092	;# 
  1304   000FFD                     TOS             equ	4093	;# 
  1305   000FFD                     TOSL            equ	4093	;# 
  1306   000FFE                     TOSH            equ	4094	;# 
  1307   000FFF                     TOSU            equ	4095	;# 
  1308                           
  1309                           	psect	smallconst
  1310   001000                     __psmallconst:
  1311                           	callstack 0
  1312   001000  00                 	db	0
  1313   001001                     _default_security_key:
  1314                           	callstack 0
  1315   001001  00                 	db	0
  1316   001002  10                 	db	16
  1317   001003  25                 	db	37
  1318   001004  37                 	db	55
  1319   001005  04                 	db	4
  1320   001006  55                 	db	85
  1321   001007  06                 	db	6
  1322   001008  79                 	db	121
  1323   001009  08                 	db	8
  1324   00100A  09                 	db	9
  1325   00100B  10                 	db	16
  1326   00100C  11                 	db	17
  1327   00100D  12                 	db	18
  1328   00100E  13                 	db	19
  1329   00100F  14                 	db	20
  1330   001010  15                 	db	21
  1331   001011                     __end_of_default_security_key:
  1332                           	callstack 0
  1333   001011                     _default_mac_address:
  1334                           	callstack 0
  1335   001011  11                 	db	17
  1336   001012  28                 	db	40
  1337   001013  35                 	db	53
  1338   001014  44                 	db	68
  1339   001015  56                 	db	86
  1340   001016  66                 	db	102
  1341   001017  77                 	db	119
  1342   001018  01                 	db	1
  1343   001019                     __end_of_default_mac_address:
  1344                           	callstack 0
  1345   007CF0                     _TMR1IF         set	31984
  1346   007E68                     _TMR1ON         set	32360
  1347   007E69                     _TMR1CS         set	32361
  1348   007E6B                     _T1OSCEN        set	32363
  1349   007E6A                     _T1SYNC         set	32362
  1350   007E6D                     _T1CKPS1        set	32365
  1351   007E6C                     _T1CKPS0        set	32364
  1352   007E6F                     _T1RD16         set	32367
  1353   007F8F                     _RBPU           set	32655
  1354   007CED                     _RCIE           set	31981
  1355   007CEE                     _ADIE           set	31982
  1356   007D03                     _BCLIE          set	32003
  1357   007CEB                     _SSPIE          set	31979
  1358   007D04                     _EEIE           set	32004
  1359   007D00                     _CCP2IE         set	32000
  1360   007CEA                     _CCP1IE         set	31978
  1361   007CE9                     _TMR2IE         set	31977
  1362   007CE8                     _TMR1IE         set	31976
  1363   007F95                     _T0IE           set	32661
  1364   007F93                     _RBIE           set	32659
  1365   007F94                     _INT0E          set	32660
  1366   007F96                     _PEIE           set	32662
  1367   007F97                     _GIE            set	32663
  1368   007E87                     _IPEN           set	32391
  1369   000FCF                     _TMR1H          set	4047
  1370   000FCE                     _TMR1L          set	4046
  1371   000F9B                     _OSCTUNE        set	3995
  1372   000FD3                     _OSCCON         set	4051
  1373   000F95                     _TRISDbits      set	3989
  1374   000F96                     _TRISEbits      set	3990
  1375   000F93                     _TRISBbits      set	3987
  1376   000F84                     _PORTE          set	3972
  1377   000F83                     _PORTD          set	3971
  1378   000F82                     _PORTC          set	3970
  1379   000F81                     _PORTB          set	3969
  1380   000F80                     _PORTA          set	3968
  1381   000F8D                     _LATEbits       set	3981
  1382   000F82                     _PORTCbits      set	3970
  1383   000FC9                     _SSPBUF         set	4041
  1384   000F9E                     _PIR1bits       set	3998
  1385   000FC6                     _SSPCON1bits    set	4038
  1386   000FC6                     _SSPCON1        set	4038
  1387   000FC7                     _SSPSTATbits    set	4039
  1388   000F94                     _TRISCbits      set	3988
  1389   000F81                     _PORTBbits      set	3969
  1390   000F8C                     _LATDbits       set	3980
  1391   000F8B                     _LATCbits       set	3979
  1392   001019                     STR_5:
  1393   001019  4C                 	db	76	;'L'
  1394   00101A  65                 	db	101	;'e'
  1395   00101B  64                 	db	100	;'d'
  1396   00101C  20                 	db	32
  1397   00101D  65                 	db	101	;'e'
  1398   00101E  6E                 	db	110	;'n'
  1399   00101F  63                 	db	99	;'c'
  1400   001020  65                 	db	101	;'e'
  1401   001021  6E                 	db	110	;'n'
  1402   001022  64                 	db	100	;'d'
  1403   001023  69                 	db	105	;'i'
  1404   001024  64                 	db	100	;'d'
  1405   001025  6F                 	db	111	;'o'
  1406   001026  00                 	db	0
  1407   001027                     STR_8:
  1408   001027  4C                 	db	76	;'L'
  1409   001028  65                 	db	101	;'e'
  1410   001029  64                 	db	100	;'d'
  1411   00102A  20                 	db	32
  1412   00102B  61                 	db	97	;'a'
  1413   00102C  70                 	db	112	;'p'
  1414   00102D  61                 	db	97	;'a'
  1415   00102E  67                 	db	103	;'g'
  1416   00102F  61                 	db	97	;'a'
  1417   001030  64                 	db	100	;'d'
  1418   001031  6F                 	db	111	;'o'
  1419   001032  00                 	db	0
  1420   001033                     STR_15:
  1421   001033  43                 	db	67	;'C'
  1422   001034  6D                 	db	109	;'m'
  1423   001035  64                 	db	100	;'d'
  1424   001036  20                 	db	32
  1425   001037  65                 	db	101	;'e'
  1426   001038  72                 	db	114	;'r'
  1427   001039  72                 	db	114	;'r'
  1428   00103A  6F                 	db	111	;'o'
  1429   00103B  72                 	db	114	;'r'
  1430   00103C  2E                 	db	46
  1431   00103D  00                 	db	0
  1432   00103E                     STR_6:
  1433   00103E  43                 	db	67	;'C'
  1434   00103F  4D                 	db	77	;'M'
  1435   001040  44                 	db	68	;'D'
  1436   001041  3A                 	db	58	;':'
  1437   001042  41                 	db	65	;'A'
  1438   001043  4C                 	db	76	;'L'
  1439   001044  41                 	db	65	;'A'
  1440   001045  00                 	db	0
  1441   001046                     STR_3:
  1442   001046  43                 	db	67	;'C'
  1443   001047  4D                 	db	77	;'M'
  1444   001048  44                 	db	68	;'D'
  1445   001049  3A                 	db	58	;':'
  1446   00104A  50                 	db	80	;'P'
  1447   00104B  4C                 	db	76	;'L'
  1448   00104C  41                 	db	65	;'A'
  1449   00104D  00                 	db	0
  1450   00104E                     STR_12:
  1451   00104E  43                 	db	67	;'C'
  1452   00104F  4D                 	db	77	;'M'
  1453   001050  44                 	db	68	;'D'
  1454   001051  3A                 	db	58	;':'
  1455   001052  41                 	db	65	;'A'
  1456   001053  4C                 	db	76	;'L'
  1457   001054  52                 	db	82	;'R'
  1458   001055  00                 	db	0
  1459   001056                     STR_9:
  1460   001056  43                 	db	67	;'C'
  1461   001057  4D                 	db	77	;'M'
  1462   001058  44                 	db	68	;'D'
  1463   001059  3A                 	db	58	;':'
  1464   00105A  50                 	db	80	;'P'
  1465   00105B  4C                 	db	76	;'L'
  1466   00105C  52                 	db	82	;'R'
  1467   00105D  00                 	db	0
  1468   00105E                     STR_2:
  1469   00105E  43                 	db	67	;'C'
  1470   00105F  4D                 	db	77	;'M'
  1471   001060  44                 	db	68	;'D'
  1472   001061  3A                 	db	58	;':'
  1473   001062  41                 	db	65	;'A'
  1474   001063  4C                 	db	76	;'L'
  1475   001064  56                 	db	86	;'V'
  1476   001065  00                 	db	0
  1477   001066                     STR_1:
  1478   001066  43                 	db	67	;'C'
  1479   001067  4D                 	db	77	;'M'
  1480   001068  44                 	db	68	;'D'
  1481   001069  3A                 	db	58	;':'
  1482   00106A  50                 	db	80	;'P'
  1483   00106B  4C                 	db	76	;'L'
  1484   00106C  56                 	db	86	;'V'
  1485   00106D  00                 	db	0
  1486   001019                     STR_11          equ	STR_5
  1487   001027                     STR_14          equ	STR_8
  1488   001056                     STR_10          equ	STR_9
  1489   00104E                     STR_13          equ	STR_12
  1490   001046                     STR_4           equ	STR_3
  1491   00103E                     STR_7           equ	STR_6
  1492   00106E  00                 	db	0	; dummy byte at the end
  1493   000002                     __activetblptr  equ	2
  1494                           
  1495                           ; #config settings
  1496                           
  1497                           	psect	cinit
  1498   001BAA                     __pcinit:
  1499                           	callstack 0
  1500   001BAA                     start_initialization:
  1501                           	callstack 0
  1502   001BAA                     __initialization:
  1503                           	callstack 0
  1504                           
  1505                           ; Clear objects allocated to BANK0 (90 bytes)
  1506   001BAA  EE00  F060         	lfsr	0,__pbssBANK0
  1507   001BAE  0E5A               	movlw	90
  1508   001BB0                     clear_0:
  1509   001BB0  6AEE               	clrf	postinc0,c
  1510   001BB2  06E8               	decf	wreg,f,c
  1511   001BB4  E1FD               	bnz	clear_0
  1512                           
  1513                           ; Clear objects allocated to COMRAM (12 bytes)
  1514   001BB6  EE00  F032         	lfsr	0,__pbssCOMRAM
  1515   001BBA  0E0C               	movlw	12
  1516   001BBC                     clear_1:
  1517   001BBC  6AEE               	clrf	postinc0,c
  1518   001BBE  06E8               	decf	wreg,f,c
  1519   001BC0  E1FD               	bnz	clear_1
  1520   001BC2                     end_of_initialization:
  1521                           	callstack 0
  1522   001BC2                     __end_of__initialization:
  1523                           	callstack 0
  1524   001BC2  903E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1525   001BC4  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1526   001BC6  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1527   001BC8  6EF8               	movwf	tblptru,c
  1528   001BCA  0100               	movlb	0
  1529   001BCC  EF38  F008         	goto	_main	;jump to C main() function
  1530                           
  1531                           	psect	bssCOMRAM
  1532   000032                     __pbssCOMRAM:
  1533                           	callstack 0
  1534   000032                     _data_out_s:
  1535                           	callstack 0
  1536   000032                     	ds	6
  1537   000038                     _timeStamp:
  1538                           	callstack 0
  1539   000038                     	ds	4
  1540   00003C                     _estadoActual:
  1541                           	callstack 0
  1542   00003C                     	ds	1
  1543   00003D                     _long_mac_address_e:
  1544                           	callstack 0
  1545   00003D                     	ds	1
  1546                           
  1547                           	psect	bssBANK0
  1548   000060                     __pbssBANK0:
  1549                           	callstack 0
  1550   000060                     _data_in_s:
  1551                           	callstack 0
  1552   000060                     	ds	56
  1553   000098                     _data_config_s:
  1554                           	callstack 0
  1555   000098                     	ds	34
  1556                           
  1557                           	psect	cstackCOMRAM
  1558   000001                     __pcstackCOMRAM:
  1559                           	callstack 0
  1560   000001                     ?_strlen:
  1561                           	callstack 0
  1562   000001                     SetCSPin@estado:
  1563                           	callstack 0
  1564   000001                     SetWakePin@estado:
  1565                           	callstack 0
  1566   000001                     SetResetPin@estado:
  1567                           	callstack 0
  1568   000001                     SPIWriteByte@dato:
  1569                           	callstack 0
  1570   000001                     DelayInit@delay:
  1571                           	callstack 0
  1572   000001                     DelayReset@delay:
  1573                           	callstack 0
  1574   000001                     DelayIsRunning@delay:
  1575                           	callstack 0
  1576   000001                     strlen@s:
  1577                           	callstack 0
  1578   000001                     strncpy@d:
  1579                           	callstack 0
  1580   000001                     MRF24SetDireccionDestino@direccion:
  1581                           	callstack 0
  1582   000001                     MRF24SetPANIDDestino@panid:
  1583                           	callstack 0
  1584   000001                     
  1585                           ; 1 bytes @ 0x0
  1586   000001                     	ds	1
  1587   000002                     WriteByteSPIPort@dato:
  1588                           	callstack 0
  1589   000002                     DelayRead@delay:
  1590                           	callstack 0
  1591   000002                     strncpy@s:
  1592                           	callstack 0
  1593   000002                     SPIWrite2Byte@dato:
  1594                           	callstack 0
  1595   000002                     DelayInit@duration:
  1596                           	callstack 0
  1597   000002                     
  1598                           ; 1 bytes @ 0x1
  1599   000002                     	ds	1
  1600   000003                     ?_strcmp:
  1601                           	callstack 0
  1602   000003                     SetShortAddr@valor:
  1603                           	callstack 0
  1604   000003                     GetShortAddr@leido_spi:
  1605                           	callstack 0
  1606   000003                     strcmp@l:
  1607                           	callstack 0
  1608   000003                     strlen@a:
  1609                           	callstack 0
  1610   000003                     strncpy@n:
  1611                           	callstack 0
  1612   000003                     ??_DelayRead:
  1613   000003                     
  1614                           ; 1 bytes @ 0x2
  1615   000003                     	ds	1
  1616   000004                     SetShortAddr@reg_address:
  1617                           	callstack 0
  1618   000004                     GetShortAddr@reg_address:
  1619                           	callstack 0
  1620   000004                     MRF24SetMensajeSalida@mensaje:
  1621                           	callstack 0
  1622   000004                     strcmp@r:
  1623                           	callstack 0
  1624   000004                     Write2ByteSPIPort@dato:
  1625                           	callstack 0
  1626   000004                     
  1627                           ; 1 bytes @ 0x3
  1628   000004                     	ds	1
  1629   000005                     SetDeviceMACAddress@i:
  1630                           	callstack 0
  1631   000005                     ??_strncpy:
  1632   000005                     ??_strcmp:
  1633   000005                     
  1634                           ; 1 bytes @ 0x4
  1635   000005                     	ds	1
  1636   000006                     DebounceFSMInit@antirrebote_boton_n:
  1637                           	callstack 0
  1638   000006                     strncpy@cp:
  1639                           	callstack 0
  1640   000006                     SetLongAddr@reg_address:
  1641                           	callstack 0
  1642   000006                     GetLongAddr@reg_address:
  1643                           	callstack 0
  1644   000006                     
  1645                           ; 1 bytes @ 0x5
  1646   000006                     	ds	1
  1647   000007                     
  1648                           ; 1 bytes @ 0x6
  1649   000007                     	ds	1
  1650   000008                     SetLongAddr@valor:
  1651                           	callstack 0
  1652   000008                     ??_GetLongAddr:
  1653                           
  1654                           ; 1 bytes @ 0x7
  1655   000008                     	ds	1
  1656   000009                     ??_SetLongAddr:
  1657                           
  1658                           ; 1 bytes @ 0x8
  1659   000009                     	ds	1
  1660   00000A                     GetLongAddr@respuesta:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x9
  1664   00000A                     	ds	1
  1665   00000B                     ??_SetChannel:
  1666   00000B                     ??_MRF24TransmitirDato:
  1667   00000B                     ??_MRF24ReciboPaquete:
  1668                           
  1669                           ; 1 bytes @ 0xA
  1670   00000B                     	ds	4
  1671   00000F                     DebounceFSMUpdate@antirrebote_boton_n:
  1672                           	callstack 0
  1673   00000F                     ??_InicializoMRF24:
  1674                           
  1675                           ; 1 bytes @ 0xE
  1676   00000F                     	ds	1
  1677   000010                     MRF24TransmitirDato@i:
  1678                           	callstack 0
  1679   000010                     MRF24ReciboPaquete@largo_mensaje:
  1680                           	callstack 0
  1681   000010                     DebounceFSMUpdate@estado_pin:
  1682                           	callstack 0
  1683                           
  1684                           ; 1 bytes @ 0xF
  1685   000010                     	ds	1
  1686   000011                     InicializoMRF24@lectura:
  1687                           	callstack 0
  1688   000011                     MRF24TransmitirDato@pos_mem:
  1689                           	callstack 0
  1690   000011                     MRF24ReciboPaquete@index:
  1691                           	callstack 0
  1692   000011                     ??_DebounceFSMUpdate:
  1693                           
  1694                           ; 1 bytes @ 0x10
  1695   000011                     	ds	1
  1696   000012                     InicializoMRF24@delay_time_out:
  1697                           	callstack 0
  1698                           
  1699                           ; 9 bytes @ 0x11
  1700   000012                     	ds	9
  1701   00001B                     ??_MRF24J40Init:
  1702                           
  1703                           ; 1 bytes @ 0x1A
  1704   00001B                     	ds	1
  1705   00001C                     ??_main:
  1706                           
  1707                           ; 1 bytes @ 0x1B
  1708   00001C                     	ds	2
  1709   00001E                     main@delay_parpadeo:
  1710                           	callstack 0
  1711                           
  1712                           ; 9 bytes @ 0x1D
  1713   00001E                     	ds	9
  1714   000027                     main@boton1:
  1715                           	callstack 0
  1716                           
  1717                           ; 11 bytes @ 0x26
  1718   000027                     	ds	11
  1719                           
  1720 ;;
  1721 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1722 ;;
  1723 ;; *************** function _main *****************
  1724 ;; Defined at:
  1725 ;;		line 28 in file "main.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  boton1         11   38[COMRAM] struct .
  1730 ;;  delay_parpad    9   29[COMRAM] struct .
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1743 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;Total ram usage:       22 bytes
  1745 ;; Hardware stack levels required when called: 8
  1746 ;; This function calls:
  1747 ;;		_BoardInit
  1748 ;;		_DebounceFSMInit
  1749 ;;		_DebounceFSMUpdate
  1750 ;;		_DelayInit
  1751 ;;		_DelayRead
  1752 ;;		_MRF24GetMensajeEntrada
  1753 ;;		_MRF24IsNewMsg
  1754 ;;		_MRF24J40Init
  1755 ;;		_MRF24ReciboPaquete
  1756 ;;		_MRF24SetDireccionDestino
  1757 ;;		_MRF24SetMensajeSalida
  1758 ;;		_MRF24SetPANIDDestino
  1759 ;;		_MRF24TransmitirDato
  1760 ;;		_strcmp
  1761 ;; This function is called by:
  1762 ;;		Startup code after reset
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text0
  1767   001070                     __ptext0:
  1768                           	callstack 0
  1769   001070                     _main:
  1770                           	callstack 23
  1771   001070                     
  1772                           ;main.c: 30:     delayNoBloqueanteData delay_parpadeo;;main.c: 31:     debounceData_t bo
      +                          ton1;;main.c: 32:  DebounceFSMInit(&boton1);
  1773   001070  0E27               	movlw	low main@boton1
  1774   001072  6E06               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  1775   001074  EC7D  F00D         	call	_DebounceFSMInit	;wreg free
  1776   001078                     
  1777                           ;main.c: 33:     BoardInit();
  1778   001078  EC7C  F00C         	call	_BoardInit	;wreg free
  1779   00107C                     
  1780                           ;main.c: 34:     MRF24J40Init();
  1781   00107C  EC10  F00D         	call	_MRF24J40Init	;wreg free
  1782   001080                     
  1783                           ;main.c: 35:     DelayInit(&delay_parpadeo, 1000);
  1784   001080  0E1E               	movlw	low main@delay_parpadeo
  1785   001082  6E01               	movwf	DelayInit@delay^0,c
  1786   001084  0EE8               	movlw	232
  1787   001086  6E02               	movwf	DelayInit@duration^0,c
  1788   001088  0E03               	movlw	3
  1789   00108A  6E03               	movwf	(DelayInit@duration+1)^0,c
  1790   00108C  0E00               	movlw	0
  1791   00108E  6E04               	movwf	(DelayInit@duration+2)^0,c
  1792   001090  0E00               	movlw	0
  1793   001092  6E05               	movwf	(DelayInit@duration+3)^0,c
  1794   001094  ECC1  F00D         	call	_DelayInit	;wreg free
  1795   001098                     
  1796                           ;main.c: 36:     MRF24SetDireccionDestino(0x1111);
  1797   001098  0E11               	movlw	17
  1798   00109A  6E02               	movwf	(MRF24SetDireccionDestino@direccion+1)^0,c
  1799   00109C  0E11               	movlw	17
  1800   00109E  6E01               	movwf	MRF24SetDireccionDestino@direccion^0,c
  1801   0010A0  EC2D  F00E         	call	_MRF24SetDireccionDestino	;wreg free
  1802   0010A4                     
  1803                           ;main.c: 37:     MRF24SetPANIDDestino(0X1234);
  1804   0010A4  0E12               	movlw	18
  1805   0010A6  6E02               	movwf	(MRF24SetPANIDDestino@panid+1)^0,c
  1806   0010A8  0E34               	movlw	52
  1807   0010AA  6E01               	movwf	MRF24SetPANIDDestino@panid^0,c
  1808   0010AC  EC1E  F00E         	call	_MRF24SetPANIDDestino	;wreg free
  1809   0010B0                     l294:
  1810   0010B0  0004               	clrwdt		;# 
  1811                           
  1812                           ;main.c: 42:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  1813   0010B2  EF69  F008         	goto	l2331
  1814   0010B6                     l2321:
  1815                           
  1816                           ;main.c: 46:                 MRF24SetMensajeSalida("CMD:PLV");
  1817   0010B6  0E66               	movlw	low STR_1
  1818   0010B8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1819   0010BA  ECF0  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1820   0010BE                     l2323:
  1821                           
  1822                           ;main.c: 47:                 MRF24TransmitirDato();
  1823   0010BE  ECEB  F009         	call	_MRF24TransmitirDato	;wreg free
  1824                           
  1825                           ;main.c: 48:     break;
  1826   0010C2  EF8B  F008         	goto	l2333
  1827   0010C6                     l2325:
  1828                           
  1829                           ;main.c: 52:                 MRF24SetMensajeSalida("CMD:ALV");
  1830   0010C6  0E5E               	movlw	low STR_2
  1831   0010C8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1832   0010CA  ECF0  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1833   0010CE  EF5F  F008         	goto	l2323
  1834   0010D2                     l2331:
  1835   0010D2  0E27               	movlw	low main@boton1
  1836   0010D4  6E0F               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  1837   0010D6  B482               	btfsc	130,2,c	;volatile
  1838   0010D8  EF70  F008         	goto	u851
  1839   0010DC  EF73  F008         	goto	u850
  1840   0010E0                     u851:
  1841   0010E0  0E01               	movlw	1
  1842   0010E2  EF74  F008         	goto	u856
  1843   0010E6                     u850:
  1844   0010E6  0E00               	movlw	0
  1845   0010E8                     u856:
  1846   0010E8  6E10               	movwf	DebounceFSMUpdate@estado_pin^0,c
  1847   0010EA  EC8D  F00A         	call	_DebounceFSMUpdate	;wreg free
  1848   0010EE  6E1C               	movwf	??_main^0,c
  1849   0010F0  6A1D               	clrf	(??_main+1)^0,c
  1850                           
  1851                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1852                           ; Switch size 1, requested type "simple"
  1853                           ; Number of cases is 1, Range of values is 0 to 0
  1854                           ; switch strategies available:
  1855                           ; Name         Instructions Cycles
  1856                           ; simple_byte            4     3 (average)
  1857                           ;	Chosen strategy is simple_byte
  1858   0010F2  501D               	movf	(??_main+1)^0,w,c
  1859   0010F4  0A00               	xorlw	0	; case 0
  1860   0010F6  B4D8               	btfsc	status,2,c
  1861   0010F8  EF80  F008         	goto	l2425
  1862   0010FC  EF8B  F008         	goto	l2333
  1863   001100                     l2425:
  1864                           
  1865                           ; Switch size 1, requested type "simple"
  1866                           ; Number of cases is 2, Range of values is 1 to 2
  1867                           ; switch strategies available:
  1868                           ; Name         Instructions Cycles
  1869                           ; simple_byte            7     4 (average)
  1870                           ;	Chosen strategy is simple_byte
  1871   001100  501C               	movf	??_main^0,w,c
  1872   001102  0A01               	xorlw	1	; case 1
  1873   001104  B4D8               	btfsc	status,2,c
  1874   001106  EF5B  F008         	goto	l2321
  1875   00110A  0A03               	xorlw	3	; case 2
  1876   00110C  B4D8               	btfsc	status,2,c
  1877   00110E  EF63  F008         	goto	l2325
  1878   001112  EF8B  F008         	goto	l2333
  1879   001116                     l2333:
  1880                           
  1881                           ;main.c: 61:         if(MRF24IsNewMsg() == MSG_PRESENTE) {
  1882   001116  EC63  F00D         	call	_MRF24IsNewMsg	;wreg free
  1883   00111A  0A03               	xorlw	3
  1884   00111C  A4D8               	btfss	status,2,c
  1885   00111E  EF93  F008         	goto	u861
  1886   001122  EF95  F008         	goto	u860
  1887   001126                     u861:
  1888   001126  EFF9  F008         	goto	l2365
  1889   00112A                     u860:
  1890   00112A                     
  1891                           ;main.c: 63:             MRF24ReciboPaquete();
  1892   00112A  EC81  F00B         	call	_MRF24ReciboPaquete	;wreg free
  1893   00112E                     
  1894                           ;main.c: 65:    if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLA")) {
  1895   00112E  ECA5  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1896   001132  6E03               	movwf	strcmp@l^0,c
  1897   001134  0E46               	movlw	low STR_3
  1898   001136  6E04               	movwf	strcmp@r^0,c
  1899   001138  EC49  F00C         	call	_strcmp	;wreg free
  1900   00113C  5003               	movf	?_strcmp^0,w,c
  1901   00113E  1004               	iorwf	(?_strcmp+1)^0,w,c
  1902   001140  A4D8               	btfss	status,2,c
  1903   001142  EFA5  F008         	goto	u871
  1904   001146  EFA7  F008         	goto	u870
  1905   00114A                     u871:
  1906   00114A  EFAE  F008         	goto	l2343
  1907   00114E                     u870:
  1908   00114E                     
  1909                           ;main.c: 67:     LATEbits.LATE1 = 0;
  1910   00114E  928D               	bcf	141,1,c	;volatile
  1911   001150                     
  1912                           ;main.c: 68:                 MRF24SetMensajeSalida("Led encendido");
  1913   001150  0E19               	movlw	low STR_5
  1914   001152  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1915   001154  ECF0  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1916                           
  1917                           ;main.c: 69:    } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALA")) {
  1918   001158  EFF7  F008         	goto	l2363
  1919   00115C                     l2343:
  1920   00115C  ECA5  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1921   001160  6E03               	movwf	strcmp@l^0,c
  1922   001162  0E3E               	movlw	low STR_6
  1923   001164  6E04               	movwf	strcmp@r^0,c
  1924   001166  EC49  F00C         	call	_strcmp	;wreg free
  1925   00116A  5003               	movf	?_strcmp^0,w,c
  1926   00116C  1004               	iorwf	(?_strcmp+1)^0,w,c
  1927   00116E  A4D8               	btfss	status,2,c
  1928   001170  EFBC  F008         	goto	u881
  1929   001174  EFBE  F008         	goto	u880
  1930   001178                     u881:
  1931   001178  EFC5  F008         	goto	l2349
  1932   00117C                     u880:
  1933   00117C                     
  1934                           ;main.c: 71:     LATEbits.LATE1 = 1;
  1935   00117C  828D               	bsf	141,1,c	;volatile
  1936   00117E                     
  1937                           ;main.c: 72:                 MRF24SetMensajeSalida("Led apagado");
  1938   00117E  0E27               	movlw	low STR_8
  1939   001180  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1940   001182  ECF0  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1941                           
  1942                           ;main.c: 73:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLR")) 
      +                          {
  1943   001186  EFF7  F008         	goto	l2363
  1944   00118A                     l2349:
  1945   00118A  ECA5  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1946   00118E  6E03               	movwf	strcmp@l^0,c
  1947   001190  0E56               	movlw	low STR_9
  1948   001192  6E04               	movwf	strcmp@r^0,c
  1949   001194  EC49  F00C         	call	_strcmp	;wreg free
  1950   001198  5003               	movf	?_strcmp^0,w,c
  1951   00119A  1004               	iorwf	(?_strcmp+1)^0,w,c
  1952   00119C  A4D8               	btfss	status,2,c
  1953   00119E  EFD3  F008         	goto	u891
  1954   0011A2  EFD5  F008         	goto	u890
  1955   0011A6                     u891:
  1956   0011A6  EFDC  F008         	goto	l2355
  1957   0011AA                     u890:
  1958   0011AA                     
  1959                           ;main.c: 75:     LATEbits.LATE2 = 0;
  1960   0011AA  948D               	bcf	141,2,c	;volatile
  1961   0011AC                     
  1962                           ;main.c: 76:                 MRF24SetMensajeSalida("Led encendido");
  1963   0011AC  0E19               	movlw	low STR_5
  1964   0011AE  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1965   0011B0  ECF0  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1966                           
  1967                           ;main.c: 77:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALR")) 
      +                          {
  1968   0011B4  EFF7  F008         	goto	l2363
  1969   0011B8                     l2355:
  1970   0011B8  ECA5  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1971   0011BC  6E03               	movwf	strcmp@l^0,c
  1972   0011BE  0E4E               	movlw	low STR_12
  1973   0011C0  6E04               	movwf	strcmp@r^0,c
  1974   0011C2  EC49  F00C         	call	_strcmp	;wreg free
  1975   0011C6  5003               	movf	?_strcmp^0,w,c
  1976   0011C8  1004               	iorwf	(?_strcmp+1)^0,w,c
  1977   0011CA  A4D8               	btfss	status,2,c
  1978   0011CC  EFEA  F008         	goto	u901
  1979   0011D0  EFEC  F008         	goto	u900
  1980   0011D4                     u901:
  1981   0011D4  EFF3  F008         	goto	l2361
  1982   0011D8                     u900:
  1983   0011D8                     
  1984                           ;main.c: 79:     LATEbits.LATE2 = 1;
  1985   0011D8  848D               	bsf	141,2,c	;volatile
  1986   0011DA                     
  1987                           ;main.c: 80:                 MRF24SetMensajeSalida("Led apagado");
  1988   0011DA  0E27               	movlw	low STR_8
  1989   0011DC  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1990   0011DE  ECF0  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1991                           
  1992                           ;main.c: 81:             } else {
  1993   0011E2  EFF7  F008         	goto	l2363
  1994   0011E6                     l2361:
  1995                           
  1996                           ;main.c: 83:                 MRF24SetMensajeSalida("Cmd error.");
  1997   0011E6  0E33               	movlw	low STR_15
  1998   0011E8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1999   0011EA  ECF0  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  2000   0011EE                     l2363:
  2001                           
  2002                           ;main.c: 85:             MRF24TransmitirDato();
  2003   0011EE  ECEB  F009         	call	_MRF24TransmitirDato	;wreg free
  2004   0011F2                     l2365:
  2005                           
  2006                           ;main.c: 88:         if(DelayRead(&delay_parpadeo)) {
  2007   0011F2  0E1E               	movlw	low main@delay_parpadeo
  2008   0011F4  6E02               	movwf	DelayRead@delay^0,c
  2009   0011F6  EC2B  F00B         	call	_DelayRead	;wreg free
  2010   0011FA  0900               	iorlw	0
  2011   0011FC  B4D8               	btfsc	status,2,c
  2012   0011FE  EF03  F009         	goto	u911
  2013   001202  EF05  F009         	goto	u910
  2014   001206                     u911:
  2015   001206  EF58  F008         	goto	l294
  2016   00120A                     u910:
  2017   00120A                     
  2018                           ;main.c: 89:             LATEbits.LATE0 = !LATEbits.LATE0;
  2019   00120A  A08D               	btfss	141,0,c	;volatile
  2020   00120C  EF0A  F009         	goto	u921
  2021   001210  EF0E  F009         	goto	u920
  2022   001214                     u921:
  2023   001214  6A1C               	clrf	??_main^0,c
  2024   001216  2A1C               	incf	??_main^0,f,c
  2025   001218  EF0F  F009         	goto	u938
  2026   00121C                     u920:
  2027   00121C  6A1C               	clrf	??_main^0,c
  2028   00121E                     u938:
  2029   00121E  508D               	movf	141,w,c	;volatile
  2030   001220  181C               	xorwf	??_main^0,w,c
  2031   001222  0BFE               	andlw	-2
  2032   001224  181C               	xorwf	??_main^0,w,c
  2033   001226  6E8D               	movwf	141,c	;volatile
  2034   001228  EF58  F008         	goto	l294
  2035   00122C  EF20  F000         	goto	start
  2036   001230                     __end_of_main:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _strcmp *****************
  2040 ;; Defined at:
  2041 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  l               1    2[COMRAM] PTR const unsigned char 
  2044 ;;		 -> data_in_s$buffer(50), data_in_s(56), 
  2045 ;;  r               1    3[COMRAM] PTR const unsigned char 
  2046 ;;		 -> STR_13(8), STR_10(8), STR_7(8), STR_4(8), 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;		None
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  2    2[COMRAM] int 
  2051 ;; Registers used:
  2052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;Total ram usage:        3 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 1
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_main
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text1
  2073   001892                     __ptext1:
  2074                           	callstack 0
  2075   001892                     _strcmp:
  2076                           	callstack 29
  2077   001892  EF4D  F00C         	goto	l2239
  2078   001896                     l2237:
  2079   001896  2A03               	incf	strcmp@l^0,f,c
  2080   001898  2A04               	incf	strcmp@r^0,f,c
  2081   00189A                     l2239:
  2082   00189A  5003               	movf	strcmp@l^0,w,c
  2083   00189C  6ED9               	movwf	fsr2l,c
  2084   00189E  6ADA               	clrf	fsr2h,c
  2085   0018A0  50DF               	movf	indf2,w,c
  2086   0018A2  6E05               	movwf	??_strcmp^0,c
  2087   0018A4  C004  FFF6         	movff	strcmp@r,tblptrl
  2088   0018A8                     	if	1	;There is more than 1 active tblptr byte
  2089   0018A8  0E10               	movlw	high __smallconst
  2090   0018AA  6EF7               	movwf	tblptrh,c
  2091   0018AC                     	endif
  2092   0018AC                     	if	0	;tblptru may be non-zero
  2093   0018AC                     	endif
  2094   0018AC                     	if	0	;tblptru may be non-zero
  2095   0018AC                     	endif
  2096   0018AC  0008               	tblrd		*
  2097   0018AE  50F5               	movf	tablat,w,c
  2098   0018B0  1805               	xorwf	??_strcmp^0,w,c
  2099   0018B2  A4D8               	btfss	status,2,c
  2100   0018B4  EF5E  F00C         	goto	u811
  2101   0018B8  EF60  F00C         	goto	u810
  2102   0018BC                     u811:
  2103   0018BC  EF6B  F00C         	goto	l2243
  2104   0018C0                     u810:
  2105   0018C0  5003               	movf	strcmp@l^0,w,c
  2106   0018C2  6ED9               	movwf	fsr2l,c
  2107   0018C4  6ADA               	clrf	fsr2h,c
  2108   0018C6  50DF               	movf	indf2,w,c
  2109   0018C8  A4D8               	btfss	status,2,c
  2110   0018CA  EF69  F00C         	goto	u821
  2111   0018CE  EF6B  F00C         	goto	u820
  2112   0018D2                     u821:
  2113   0018D2  EF4B  F00C         	goto	l2237
  2114   0018D6                     u820:
  2115   0018D6                     l2243:
  2116   0018D6  5003               	movf	strcmp@l^0,w,c
  2117   0018D8  6ED9               	movwf	fsr2l,c
  2118   0018DA  6ADA               	clrf	fsr2h,c
  2119   0018DC  50DF               	movf	indf2,w,c
  2120   0018DE  6E05               	movwf	??_strcmp^0,c
  2121   0018E0  C004  FFF6         	movff	strcmp@r,tblptrl
  2122   0018E4                     	if	1	;There is more than 1 active tblptr byte
  2123   0018E4  0E10               	movlw	high __smallconst
  2124   0018E6  6EF7               	movwf	tblptrh,c
  2125   0018E8                     	endif
  2126   0018E8                     	if	0	;tblptru may be non-zero
  2127   0018E8                     	endif
  2128   0018E8                     	if	0	;tblptru may be non-zero
  2129   0018E8                     	endif
  2130   0018E8  0008               	tblrd		*
  2131   0018EA  50F5               	movf	tablat,w,c
  2132   0018EC  5C05               	subwf	??_strcmp^0,w,c
  2133   0018EE  6E03               	movwf	?_strcmp^0,c
  2134   0018F0  6A04               	clrf	(?_strcmp+1)^0,c
  2135   0018F2  A0D8               	btfss	status,0,c
  2136   0018F4  0604               	decf	(?_strcmp+1)^0,f,c
  2137   0018F6  0012               	return		;funcret
  2138   0018F8                     __end_of_strcmp:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _MRF24TransmitirDato *****************
  2142 ;; Defined at:
  2143 ;;		line 365 in file "drivers/scr/API_MRF24J40.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;		None
  2146 ;; Auto vars:     Size  Location     Type
  2147 ;;  i               1   15[COMRAM] char 
  2148 ;;  pos_mem         1   16[COMRAM] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      enum E3264
  2151 ;; Registers used:
  2152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;Total ram usage:        7 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 5
  2165 ;; This function calls:
  2166 ;;		_SetLongAddr
  2167 ;;		_SetShortAddr
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text2
  2174   0013D6                     __ptext2:
  2175                           	callstack 0
  2176   0013D6                     _MRF24TransmitirDato:
  2177                           	callstack 25
  2178   0013D6                     
  2179                           ;drivers/scr/API_MRF24J40.c: 367:  if(estadoActual != INICIALIZACION_OK)
  2180   0013D6  503C               	movf	_estadoActual^0,w,c
  2181   0013D8  B4D8               	btfsc	status,2,c
  2182   0013DA  EFF1  F009         	goto	u711
  2183   0013DE  EFF3  F009         	goto	u710
  2184   0013E2                     u711:
  2185   0013E2  EFF5  F009         	goto	l151
  2186   0013E6                     u710:
  2187   0013E6  EF8C  F00A         	goto	l152
  2188   0013EA                     l151:
  2189                           
  2190                           ;drivers/scr/API_MRF24J40.c: 369:  uint8_t pos_mem = 0;
  2191   0013EA  6A11               	clrf	MRF24TransmitirDato@pos_mem^0,c
  2192   0013EC                     
  2193                           ;drivers/scr/API_MRF24J40.c: 370:  SetLongAddr(pos_mem++, (0X0B));
  2194   0013EC  0E00               	movlw	0
  2195   0013EE  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2196   0013F0  0E00               	movlw	0
  2197   0013F2  6E06               	movwf	SetLongAddr@reg_address^0,c
  2198   0013F4  0E0B               	movlw	11
  2199   0013F6  6E08               	movwf	SetLongAddr@valor^0,c
  2200   0013F8  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2201   0013FC  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2202   0013FE                     
  2203                           ;drivers/scr/API_MRF24J40.c: 371:  SetLongAddr(pos_mem++, data_out_s.largo_mensaje + (0X
      +                          0B));
  2204   0013FE  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2205   001402  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2206   001404  5036               	movf	(_data_out_s+4)^0,w,c
  2207   001406  0F0B               	addlw	11
  2208   001408  6E08               	movwf	SetLongAddr@valor^0,c
  2209   00140A  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2210   00140E  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2211   001410                     
  2212                           ;drivers/scr/API_MRF24J40.c: 372:  SetLongAddr(pos_mem++, (0X01) | (0X20) | (0X40));
  2213   001410  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2214   001414  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2215   001416  0E61               	movlw	97
  2216   001418  6E08               	movwf	SetLongAddr@valor^0,c
  2217   00141A  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2218   00141E  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2219                           
  2220                           ;drivers/scr/API_MRF24J40.c: 373:  SetLongAddr(pos_mem++, (0X80) | (0X08));
  2221   001420  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2222   001424  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2223   001426  0E88               	movlw	136
  2224   001428  6E08               	movwf	SetLongAddr@valor^0,c
  2225   00142A  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2226   00142E  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2227   001430                     
  2228                           ;drivers/scr/API_MRF24J40.c: 374:  SetLongAddr(pos_mem++, data_config_s.sequence_number+
      +                          +);
  2229   001430  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2230   001434  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2231   001436  EE20  F09A         	lfsr	2,_data_config_s+2
  2232   00143A  50DF               	movf	indf2,w,c
  2233   00143C  2ADF               	incf	indf2,f,c
  2234   00143E  6E08               	movwf	SetLongAddr@valor^0,c
  2235   001440  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2236   001444  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2237   001446                     
  2238                           ;drivers/scr/API_MRF24J40.c: 375:  SetLongAddr(pos_mem++, (uint8_t) data_out_s.destinity
      +                          _panid);
  2239   001446  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2240   00144A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2241   00144C  C032  F008         	movff	_data_out_s,SetLongAddr@valor
  2242   001450  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2243   001454  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2244   001456                     
  2245                           ;drivers/scr/API_MRF24J40.c: 376:  SetLongAddr(pos_mem++, (uint8_t) (data_out_s.destinit
      +                          y_panid >> (0X08)));
  2246   001456  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2247   00145A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2248   00145C  5033               	movf	(_data_out_s+1)^0,w,c
  2249   00145E  6E08               	movwf	SetLongAddr@valor^0,c
  2250   001460  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2251   001464  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2252   001466                     
  2253                           ;drivers/scr/API_MRF24J40.c: 377:  SetLongAddr(pos_mem++, (uint8_t) data_out_s.destinity
      +                          _address);
  2254   001466  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2255   00146A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2256   00146C  C034  F008         	movff	_data_out_s+2,SetLongAddr@valor
  2257   001470  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2258   001474  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2259   001476                     
  2260                           ;drivers/scr/API_MRF24J40.c: 378:  SetLongAddr(pos_mem++, (uint8_t) (data_out_s.destinit
      +                          y_address >> (0X08)));
  2261   001476  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2262   00147A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2263   00147C  5035               	movf	(_data_out_s+3)^0,w,c
  2264   00147E  6E08               	movwf	SetLongAddr@valor^0,c
  2265   001480  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2266   001484  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2267   001486                     
  2268                           ;drivers/scr/API_MRF24J40.c: 379:  SetLongAddr(pos_mem++, (uint8_t) data_config_s.my_add
      +                          ress);
  2269   001486  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2270   00148A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2271   00148C  C0B6  F008         	movff	_data_config_s+30,SetLongAddr@valor
  2272   001490  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2273   001494  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2274   001496                     
  2275                           ;drivers/scr/API_MRF24J40.c: 380:  SetLongAddr(pos_mem++, (uint8_t) (data_config_s.my_ad
      +                          dress >> (0X08)));
  2276   001496  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2277   00149A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2278   00149C  0100               	movlb	0	; () banked
  2279   00149E  51B7               	movf	(_data_config_s+31)& (0+255),w,b
  2280   0014A0  6E08               	movwf	SetLongAddr@valor^0,c
  2281   0014A2  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2282   0014A6  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2283   0014A8                     
  2284                           ;drivers/scr/API_MRF24J40.c: 382:  for(int8_t i = 0; i < data_out_s.largo_mensaje; i++) 
      +                          {
  2285   0014A8  6A10               	clrf	MRF24TransmitirDato@i^0,c
  2286   0014AA  EF68  F00A         	goto	l2139
  2287   0014AE                     l2133:
  2288                           
  2289                           ;drivers/scr/API_MRF24J40.c: 384:   SetLongAddr(pos_mem++, data_out_s.buffer[i]);
  2290   0014AE  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2291   0014B2  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2292   0014B4  5037               	movf	(_data_out_s+5)^0,w,c
  2293   0014B6  2410               	addwf	MRF24TransmitirDato@i^0,w,c
  2294   0014B8  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2295   0014BA  C00B  FFF6         	movff	??_MRF24TransmitirDato,tblptrl
  2296   0014BE                     	if	1	;There is more than 1 active tblptr byte
  2297   0014BE  0E10               	movlw	high __smallconst
  2298   0014C0  6EF7               	movwf	tblptrh,c
  2299   0014C2                     	endif
  2300   0014C2                     	if	0	;tblptru may be non-zero
  2301   0014C2                     	endif
  2302   0014C2                     	if	0	;tblptru may be non-zero
  2303   0014C2                     	endif
  2304   0014C2  0008               	tblrd		*
  2305   0014C4  CFF5 F008          	movff	tablat,SetLongAddr@valor
  2306   0014C8  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2307   0014CC  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2308   0014CE                     
  2309                           ;drivers/scr/API_MRF24J40.c: 385:  }
  2310   0014CE  2A10               	incf	MRF24TransmitirDato@i^0,f,c
  2311   0014D0                     l2139:
  2312   0014D0  5036               	movf	(_data_out_s+4)^0,w,c
  2313   0014D2  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2314   0014D4  6A0C               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2315   0014D6  C010  F00D         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato+2
  2316   0014DA  6A0E               	clrf	(??_MRF24TransmitirDato+3)^0,c
  2317   0014DC  BE0D               	btfsc	(??_MRF24TransmitirDato+2)^0,7,c
  2318   0014DE  060E               	decf	(??_MRF24TransmitirDato+3)^0,f,c
  2319   0014E0  500B               	movf	??_MRF24TransmitirDato^0,w,c
  2320   0014E2  5C0D               	subwf	(??_MRF24TransmitirDato+2)^0,w,c
  2321   0014E4  500E               	movf	(??_MRF24TransmitirDato+3)^0,w,c
  2322   0014E6  0A80               	xorlw	128
  2323   0014E8  6E0F               	movwf	(??_MRF24TransmitirDato+4)^0,c
  2324   0014EA  500C               	movf	(??_MRF24TransmitirDato+1)^0,w,c
  2325   0014EC  0A80               	xorlw	128
  2326   0014EE  580F               	subwfb	(??_MRF24TransmitirDato+4)^0,w,c
  2327   0014F0  A0D8               	btfss	status,0,c
  2328   0014F2  EF7D  F00A         	goto	u721
  2329   0014F6  EF7F  F00A         	goto	u720
  2330   0014FA                     u721:
  2331   0014FA  EF57  F00A         	goto	l2133
  2332   0014FE                     u720:
  2333   0014FE                     
  2334                           ;drivers/scr/API_MRF24J40.c: 386:  SetLongAddr(pos_mem++, (0X00));
  2335   0014FE  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2336   001502  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2337   001504  0E00               	movlw	0
  2338   001506  6E08               	movwf	SetLongAddr@valor^0,c
  2339   001508  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2340   00150C  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2341   00150E                     
  2342                           ;drivers/scr/API_MRF24J40.c: 387:  SetShortAddr((0x1B), (0X04) | (0X01));
  2343   00150E  0E05               	movlw	5
  2344   001510  6E03               	movwf	SetShortAddr@valor^0,c
  2345   001512  0E1B               	movlw	27
  2346   001514  EC0E  F00E         	call	_SetShortAddr
  2347   001518                     l152:
  2348   001518  0012               	return		;funcret
  2349   00151A                     __end_of_MRF24TransmitirDato:
  2350                           	callstack 0
  2351                           
  2352 ;; *************** function _MRF24SetPANIDDestino *****************
  2353 ;; Defined at:
  2354 ;;		line 352 in file "drivers/scr/API_MRF24J40.c"
  2355 ;; Parameters:    Size  Location     Type
  2356 ;;  panid           2    0[COMRAM] unsigned short 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;		None
  2359 ;; Return value:  Size  Location     Type
  2360 ;;                  1    wreg      enum E3264
  2361 ;; Registers used:
  2362 ;;		wreg, status,2
  2363 ;; Tracked objects:
  2364 ;;		On entry : 0/0
  2365 ;;		On exit  : 0/0
  2366 ;;		Unchanged: 0/0
  2367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;Total ram usage:        2 bytes
  2373 ;; Hardware stack levels used: 1
  2374 ;; Hardware stack levels required when called: 1
  2375 ;; This function calls:
  2376 ;;		Nothing
  2377 ;; This function is called by:
  2378 ;;		_main
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text3
  2383   001C3C                     __ptext3:
  2384                           	callstack 0
  2385   001C3C                     _MRF24SetPANIDDestino:
  2386                           	callstack 29
  2387   001C3C                     
  2388                           ;drivers/scr/API_MRF24J40.c: 354:  if(estadoActual != INICIALIZACION_OK)
  2389   001C3C  503C               	movf	_estadoActual^0,w,c
  2390   001C3E  B4D8               	btfsc	status,2,c
  2391   001C40  EF24  F00E         	goto	u701
  2392   001C44  EF26  F00E         	goto	u700
  2393   001C48                     u701:
  2394   001C48  EF28  F00E         	goto	l147
  2395   001C4C                     u700:
  2396   001C4C  EF2C  F00E         	goto	l148
  2397   001C50                     l147:
  2398                           
  2399                           ;drivers/scr/API_MRF24J40.c: 356:  data_out_s.destinity_panid = panid;
  2400   001C50  C001  F032         	movff	MRF24SetPANIDDestino@panid,_data_out_s
  2401   001C54  C002  F033         	movff	MRF24SetPANIDDestino@panid+1,_data_out_s+1
  2402   001C58                     l148:
  2403   001C58  0012               	return		;funcret
  2404   001C5A                     __end_of_MRF24SetPANIDDestino:
  2405                           	callstack 0
  2406                           
  2407 ;; *************** function _MRF24SetMensajeSalida *****************
  2408 ;; Defined at:
  2409 ;;		line 325 in file "drivers/scr/API_MRF24J40.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  2412 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2413 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;		None
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  1    wreg      enum E3264
  2418 ;; Registers used:
  2419 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2425 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;Total ram usage:        1 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 2
  2432 ;; This function calls:
  2433 ;;		_strlen
  2434 ;; This function is called by:
  2435 ;;		_main
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           	psect	text4
  2440   0019E0                     __ptext4:
  2441                           	callstack 0
  2442   0019E0                     _MRF24SetMensajeSalida:
  2443                           	callstack 28
  2444   0019E0                     
  2445                           ;drivers/scr/API_MRF24J40.c: 327:  if(strlen(mensaje) == (0X00) || estadoActual != INICI
      +                          ALIZACION_OK)
  2446   0019E0  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2447   0019E4  EC49  F00D         	call	_strlen	;wreg free
  2448   0019E8  5001               	movf	?_strlen^0,w,c
  2449   0019EA  1002               	iorwf	(?_strlen+1)^0,w,c
  2450   0019EC  B4D8               	btfsc	status,2,c
  2451   0019EE  EFFB  F00C         	goto	u671
  2452   0019F2  EFFD  F00C         	goto	u670
  2453   0019F6                     u671:
  2454   0019F6  EF0F  F00D         	goto	l140
  2455   0019FA                     u670:
  2456   0019FA  503C               	movf	_estadoActual^0,w,c
  2457   0019FC  B4D8               	btfsc	status,2,c
  2458   0019FE  EF03  F00D         	goto	u681
  2459   001A02  EF05  F00D         	goto	u680
  2460   001A06                     u681:
  2461   001A06  EF07  F00D         	goto	l2073
  2462   001A0A                     u680:
  2463   001A0A  EF0F  F00D         	goto	l140
  2464   001A0E                     l2073:
  2465                           
  2466                           ;drivers/scr/API_MRF24J40.c: 329:  data_out_s.buffer = mensaje;
  2467   001A0E  C004  F037         	movff	MRF24SetMensajeSalida@mensaje,_data_out_s+5
  2468   001A12                     
  2469                           ;drivers/scr/API_MRF24J40.c: 330:  data_out_s.largo_mensaje = (uint8_t) strlen(mensaje);
  2470   001A12  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2471   001A16  EC49  F00D         	call	_strlen	;wreg free
  2472   001A1A  5001               	movf	?_strlen^0,w,c
  2473   001A1C  6E36               	movwf	(_data_out_s+4)^0,c
  2474   001A1E                     l140:
  2475   001A1E  0012               	return		;funcret
  2476   001A20                     __end_of_MRF24SetMensajeSalida:
  2477                           	callstack 0
  2478                           
  2479 ;; *************** function _strlen *****************
  2480 ;; Defined at:
  2481 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2484 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2485 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2486 ;; Auto vars:     Size  Location     Type
  2487 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2488 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2489 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2490 ;; Return value:  Size  Location     Type
  2491 ;;                  2    0[COMRAM] unsigned int 
  2492 ;; Registers used:
  2493 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2494 ;; Tracked objects:
  2495 ;;		On entry : 0/0
  2496 ;;		On exit  : 0/0
  2497 ;;		Unchanged: 0/0
  2498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2502 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;Total ram usage:        3 bytes
  2504 ;; Hardware stack levels used: 1
  2505 ;; Hardware stack levels required when called: 1
  2506 ;; This function calls:
  2507 ;;		Nothing
  2508 ;; This function is called by:
  2509 ;;		_MRF24SetMensajeSalida
  2510 ;; This function uses a non-reentrant model
  2511 ;;
  2512                           
  2513                           	psect	text5
  2514   001A92                     __ptext5:
  2515                           	callstack 0
  2516   001A92                     _strlen:
  2517                           	callstack 28
  2518   001A92  C001  F003         	movff	strlen@s,strlen@a
  2519   001A96  EF4E  F00D         	goto	l2043
  2520   001A9A                     l2041:
  2521   001A9A  2A01               	incf	strlen@s^0,f,c
  2522   001A9C                     l2043:
  2523   001A9C  C001  FFF6         	movff	strlen@s,tblptrl
  2524   001AA0                     	if	1	;There is more than 1 active tblptr byte
  2525   001AA0  0E10               	movlw	high __smallconst
  2526   001AA2  6EF7               	movwf	tblptrh,c
  2527   001AA4                     	endif
  2528   001AA4                     	if	0	;tblptru may be non-zero
  2529   001AA4                     	endif
  2530   001AA4                     	if	0	;tblptru may be non-zero
  2531   001AA4                     	endif
  2532   001AA4  0008               	tblrd		*
  2533   001AA6  50F5               	movf	tablat,w,c
  2534   001AA8  0900               	iorlw	0
  2535   001AAA  A4D8               	btfss	status,2,c
  2536   001AAC  EF5A  F00D         	goto	u661
  2537   001AB0  EF5C  F00D         	goto	u660
  2538   001AB4                     u661:
  2539   001AB4  EF4D  F00D         	goto	l2041
  2540   001AB8                     u660:
  2541   001AB8  5003               	movf	strlen@a^0,w,c
  2542   001ABA  5C01               	subwf	strlen@s^0,w,c
  2543   001ABC  6E01               	movwf	?_strlen^0,c
  2544   001ABE  6A02               	clrf	(?_strlen+1)^0,c
  2545   001AC0  BE01               	btfsc	?_strlen^0,7,c
  2546   001AC2  0602               	decf	(?_strlen+1)^0,f,c
  2547   001AC4  0012               	return		;funcret
  2548   001AC6                     __end_of_strlen:
  2549                           	callstack 0
  2550                           
  2551 ;; *************** function _MRF24SetDireccionDestino *****************
  2552 ;; Defined at:
  2553 ;;		line 339 in file "drivers/scr/API_MRF24J40.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  direccion       2    0[COMRAM] unsigned short 
  2556 ;; Auto vars:     Size  Location     Type
  2557 ;;		None
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  1    wreg      enum E3264
  2560 ;; Registers used:
  2561 ;;		wreg, status,2
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2571 ;;Total ram usage:        2 bytes
  2572 ;; Hardware stack levels used: 1
  2573 ;; Hardware stack levels required when called: 1
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_main
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text6
  2582   001C5A                     __ptext6:
  2583                           	callstack 0
  2584   001C5A                     _MRF24SetDireccionDestino:
  2585                           	callstack 29
  2586   001C5A                     
  2587                           ;drivers/scr/API_MRF24J40.c: 341:  if(estadoActual != INICIALIZACION_OK)
  2588   001C5A  503C               	movf	_estadoActual^0,w,c
  2589   001C5C  B4D8               	btfsc	status,2,c
  2590   001C5E  EF33  F00E         	goto	u691
  2591   001C62  EF35  F00E         	goto	u690
  2592   001C66                     u691:
  2593   001C66  EF37  F00E         	goto	l143
  2594   001C6A                     u690:
  2595   001C6A  EF3B  F00E         	goto	l144
  2596   001C6E                     l143:
  2597                           
  2598                           ;drivers/scr/API_MRF24J40.c: 343:  data_out_s.destinity_address = direccion;
  2599   001C6E  C001  F034         	movff	MRF24SetDireccionDestino@direccion,_data_out_s+2
  2600   001C72  C002  F035         	movff	MRF24SetDireccionDestino@direccion+1,_data_out_s+3
  2601   001C76                     l144:
  2602   001C76  0012               	return		;funcret
  2603   001C78                     __end_of_MRF24SetDireccionDestino:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _MRF24ReciboPaquete *****************
  2607 ;; Defined at:
  2608 ;;		line 411 in file "drivers/scr/API_MRF24J40.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  index           1   16[COMRAM] unsigned char 
  2613 ;;  largo_mensaj    1   15[COMRAM] unsigned char 
  2614 ;; Return value:  Size  Location     Type
  2615 ;;                  1    wreg      enum E3264
  2616 ;; Registers used:
  2617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2618 ;; Tracked objects:
  2619 ;;		On entry : 0/0
  2620 ;;		On exit  : 0/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2627 ;;Total ram usage:        7 bytes
  2628 ;; Hardware stack levels used: 1
  2629 ;; Hardware stack levels required when called: 5
  2630 ;; This function calls:
  2631 ;;		_GetLongAddr
  2632 ;;		_GetShortAddr
  2633 ;;		_SetLongAddr
  2634 ;;		_SetShortAddr
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text7
  2641   001702                     __ptext7:
  2642                           	callstack 0
  2643   001702                     _MRF24ReciboPaquete:
  2644                           	callstack 25
  2645   001702                     
  2646                           ;drivers/scr/API_MRF24J40.c: 413:  if(estadoActual != INICIALIZACION_OK)
  2647   001702  503C               	movf	_estadoActual^0,w,c
  2648   001704  B4D8               	btfsc	status,2,c
  2649   001706  EF87  F00B         	goto	u731
  2650   00170A  EF89  F00B         	goto	u730
  2651   00170E                     u731:
  2652   00170E  EF8B  F00B         	goto	l2153
  2653   001712                     u730:
  2654   001712  EFD3  F00B         	goto	l164
  2655   001716                     l2153:
  2656                           
  2657                           ;drivers/scr/API_MRF24J40.c: 415:  uint8_t index;;drivers/scr/API_MRF24J40.c: 416:  uint
      +                          8_t largo_mensaje;;drivers/scr/API_MRF24J40.c: 417:  SetLongAddr((0x39), (0X04));
  2658   001716  0E00               	movlw	0
  2659   001718  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2660   00171A  0E39               	movlw	57
  2661   00171C  6E06               	movwf	SetLongAddr@reg_address^0,c
  2662   00171E  0E04               	movlw	4
  2663   001720  6E08               	movwf	SetLongAddr@valor^0,c
  2664   001722  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2665                           
  2666                           ;drivers/scr/API_MRF24J40.c: 418:  SetShortAddr((0x0D), (0X04));
  2667   001726  0E04               	movlw	4
  2668   001728  6E03               	movwf	SetShortAddr@valor^0,c
  2669   00172A  0E0D               	movlw	13
  2670   00172C  EC0E  F00E         	call	_SetShortAddr
  2671                           
  2672                           ;drivers/scr/API_MRF24J40.c: 419:  largo_mensaje = GetLongAddr((0x300));
  2673   001730  0E03               	movlw	3
  2674   001732  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2675   001734  0E00               	movlw	0
  2676   001736  6E06               	movwf	GetLongAddr@reg_address^0,c
  2677   001738  ECAD  F00C         	call	_GetLongAddr	;wreg free
  2678   00173C  6E10               	movwf	MRF24ReciboPaquete@largo_mensaje^0,c
  2679   00173E                     
  2680                           ;drivers/scr/API_MRF24J40.c: 421:  for(index = 0; index < largo_mensaje - (0x04); index+
      +                          +) {
  2681   00173E  6A11               	clrf	MRF24ReciboPaquete@index^0,c
  2682   001740  EFB0  F00B         	goto	l2161
  2683   001744                     l2157:
  2684                           
  2685                           ;drivers/scr/API_MRF24J40.c: 423:   data_in_s.buffer[index] = GetLongAddr((0x300) + (0X0
      +                          B) + index - 1);
  2686   001744  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2687   001746  0F66               	addlw	low (_data_in_s+6)
  2688   001748  6ED9               	movwf	fsr2l,c
  2689   00174A  6ADA               	clrf	fsr2h,c
  2690   00174C  0E0A               	movlw	10
  2691   00174E  2411               	addwf	MRF24ReciboPaquete@index^0,w,c
  2692   001750  6E06               	movwf	GetLongAddr@reg_address^0,c
  2693   001752  6A07               	clrf	(GetLongAddr@reg_address+1)^0,c
  2694   001754  0E03               	movlw	3
  2695   001756  2207               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  2696   001758  ECAD  F00C         	call	_GetLongAddr	;wreg free
  2697   00175C  6EDF               	movwf	indf2,c
  2698   00175E                     
  2699                           ;drivers/scr/API_MRF24J40.c: 424:  }
  2700   00175E  2A11               	incf	MRF24ReciboPaquete@index^0,f,c
  2701   001760                     l2161:
  2702   001760  0EFC               	movlw	252
  2703   001762  2410               	addwf	MRF24ReciboPaquete@largo_mensaje^0,w,c
  2704   001764  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  2705   001766  6A0C               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  2706   001768  0EFF               	movlw	255
  2707   00176A  220C               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  2708   00176C  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2709   00176E  6E0D               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  2710   001770  6A0E               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  2711   001772  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  2712   001774  5C0D               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  2713   001776  500E               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  2714   001778  0A80               	xorlw	128
  2715   00177A  6E0F               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  2716   00177C  500C               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  2717   00177E  0A80               	xorlw	128
  2718   001780  580F               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  2719   001782  A0D8               	btfss	status,0,c
  2720   001784  EFC6  F00B         	goto	u741
  2721   001788  EFC8  F00B         	goto	u740
  2722   00178C                     u741:
  2723   00178C  EFA2  F00B         	goto	l2157
  2724   001790                     u740:
  2725   001790                     
  2726                           ;drivers/scr/API_MRF24J40.c: 425:  SetLongAddr((0x39), (0X00));
  2727   001790  0E00               	movlw	0
  2728   001792  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2729   001794  0E39               	movlw	57
  2730   001796  6E06               	movwf	SetLongAddr@reg_address^0,c
  2731   001798  0E00               	movlw	0
  2732   00179A  6E08               	movwf	SetLongAddr@valor^0,c
  2733   00179C  ECCF  F00C         	call	_SetLongAddr	;wreg free
  2734                           
  2735                           ;drivers/scr/API_MRF24J40.c: 426:  (void)GetShortAddr((0x31));
  2736   0017A0  0E31               	movlw	49
  2737   0017A2  ECE8  F00D         	call	_GetShortAddr
  2738   0017A6                     l164:
  2739   0017A6  0012               	return		;funcret
  2740   0017A8                     __end_of_MRF24ReciboPaquete:
  2741                           	callstack 0
  2742                           
  2743 ;; *************** function _MRF24J40Init *****************
  2744 ;; Defined at:
  2745 ;;		line 309 in file "drivers/scr/API_MRF24J40.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      enum E3264
  2752 ;; Registers used:
  2753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;Total ram usage:        1 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 7
  2766 ;; This function calls:
  2767 ;;		_InicializoMRF24
  2768 ;;		_InicializoPines
  2769 ;;		_InicializoVariables
  2770 ;;		_SetResetPin
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text8
  2777   001A20                     __ptext8:
  2778                           	callstack 0
  2779   001A20                     _MRF24J40Init:
  2780                           	callstack 23
  2781   001A20                     
  2782                           ;drivers/scr/API_MRF24J40.c: 311:  InicializoVariables();
  2783   001A20  EC11  F00C         	call	_InicializoVariables	;wreg free
  2784   001A24                     
  2785                           ;drivers/scr/API_MRF24J40.c: 312:  InicializoPines();
  2786   001A24  EC5F  F00E         	call	_InicializoPines	;wreg free
  2787   001A28                     
  2788                           ;drivers/scr/API_MRF24J40.c: 313:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2789   001A28  0E06               	movlw	6
  2790   001A2A  6E1B               	movwf	??_MRF24J40Init^0,c
  2791   001A2C  0E30               	movlw	48
  2792   001A2E                     u967:
  2793   001A2E  2EE8               	decfsz	wreg,f,c
  2794   001A30  D7FE               	bra	u967
  2795   001A32  2E1B               	decfsz	??_MRF24J40Init^0,f,c
  2796   001A34  D7FC               	bra	u967
  2797   001A36  F000 F000          	nop2	
  2798   001A3A                     
  2799                           ;drivers/scr/API_MRF24J40.c: 314:  SetResetPin(1);
  2800   001A3A  0E01               	movlw	1
  2801   001A3C  EC7A  F00E         	call	_SetResetPin
  2802   001A40                     
  2803                           ;drivers/scr/API_MRF24J40.c: 315:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2804   001A40  0E06               	movlw	6
  2805   001A42  6E1B               	movwf	??_MRF24J40Init^0,c
  2806   001A44  0E30               	movlw	48
  2807   001A46                     u977:
  2808   001A46  2EE8               	decfsz	wreg,f,c
  2809   001A48  D7FE               	bra	u977
  2810   001A4A  2E1B               	decfsz	??_MRF24J40Init^0,f,c
  2811   001A4C  D7FC               	bra	u977
  2812   001A4E  F000 F000          	nop2	
  2813   001A52                     
  2814                           ;drivers/scr/API_MRF24J40.c: 316:  estadoActual = InicializoMRF24();
  2815   001A52  EC18  F009         	call	_InicializoMRF24	;wreg free
  2816   001A56  6E3C               	movwf	_estadoActual^0,c
  2817   001A58  0012               	return		;funcret
  2818   001A5A                     __end_of_MRF24J40Init:
  2819                           	callstack 0
  2820                           
  2821 ;; *************** function _InicializoVariables *****************
  2822 ;; Defined at:
  2823 ;;		line 111 in file "drivers/scr/API_MRF24J40.c"
  2824 ;; Parameters:    Size  Location     Type
  2825 ;;		None
  2826 ;; Auto vars:     Size  Location     Type
  2827 ;;		None
  2828 ;; Return value:  Size  Location     Type
  2829 ;;                  1    wreg      void 
  2830 ;; Registers used:
  2831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2832 ;; Tracked objects:
  2833 ;;		On entry : 0/0
  2834 ;;		On exit  : 0/0
  2835 ;;		Unchanged: 0/0
  2836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;Total ram usage:        0 bytes
  2842 ;; Hardware stack levels used: 1
  2843 ;; Hardware stack levels required when called: 2
  2844 ;; This function calls:
  2845 ;;		_strncpy
  2846 ;; This function is called by:
  2847 ;;		_MRF24J40Init
  2848 ;; This function uses a non-reentrant model
  2849 ;;
  2850                           
  2851                           	psect	text9
  2852   001822                     __ptext9:
  2853                           	callstack 0
  2854   001822                     _InicializoVariables:
  2855                           	callstack 27
  2856   001822                     
  2857                           ;drivers/scr/API_MRF24J40.c: 113:  strncpy((char *)data_config_s.security_key,(char *) d
      +                          efault_security_key, 16);
  2858   001822  0E9C               	movlw	low (_data_config_s+4)
  2859   001824  6E01               	movwf	strncpy@d^0,c
  2860   001826  0E01               	movlw	low _default_security_key
  2861   001828  6E02               	movwf	strncpy@s^0,c
  2862   00182A  0E00               	movlw	0
  2863   00182C  6E04               	movwf	(strncpy@n+1)^0,c
  2864   00182E  0E10               	movlw	16
  2865   001830  6E03               	movwf	strncpy@n^0,c
  2866   001832  ECD4  F00B         	call	_strncpy	;wreg free
  2867                           
  2868                           ;drivers/scr/API_MRF24J40.c: 114:  strncpy((char *)data_config_s.my_mac,(char *) default
      +                          _mac_address, 8);
  2869   001836  0EAC               	movlw	low (_data_config_s+20)
  2870   001838  6E01               	movwf	strncpy@d^0,c
  2871   00183A  0E11               	movlw	low _default_mac_address
  2872   00183C  6E02               	movwf	strncpy@s^0,c
  2873   00183E  0E00               	movlw	0
  2874   001840  6E04               	movwf	(strncpy@n+1)^0,c
  2875   001842  0E08               	movlw	8
  2876   001844  6E03               	movwf	strncpy@n^0,c
  2877   001846  ECD4  F00B         	call	_strncpy	;wreg free
  2878   00184A                     
  2879                           ;drivers/scr/API_MRF24J40.c: 115:  data_config_s.sequence_number = (0X01);
  2880   00184A  0E01               	movlw	1
  2881   00184C  0100               	movlb	0	; () banked
  2882   00184E  6F9A               	movwf	(_data_config_s+2)& (0+255),b
  2883   001850                     
  2884                           ; BSR set to: 0
  2885                           ;drivers/scr/API_MRF24J40.c: 116:  data_config_s.my_channel = CH_11;
  2886   001850  0E03               	movlw	3
  2887   001852  6F9B               	movwf	(_data_config_s+3)& (0+255),b
  2888   001854                     
  2889                           ; BSR set to: 0
  2890                           ;drivers/scr/API_MRF24J40.c: 117:  data_config_s.get_new_msg = 0;
  2891   001854  6B98               	clrf	_data_config_s& (0+255),b
  2892   001856                     
  2893                           ; BSR set to: 0
  2894                           ;drivers/scr/API_MRF24J40.c: 118:  data_config_s.put_new_msg = 0;
  2895   001856  6B99               	clrf	(_data_config_s+1)& (0+255),b
  2896   001858                     
  2897                           ; BSR set to: 0
  2898                           ;drivers/scr/API_MRF24J40.c: 119:  data_config_s.my_panid = (0x1234);
  2899   001858  0E12               	movlw	18
  2900   00185A  6FB5               	movwf	(_data_config_s+29)& (0+255),b
  2901   00185C  0E34               	movlw	52
  2902   00185E  6FB4               	movwf	(_data_config_s+28)& (0+255),b
  2903   001860                     
  2904                           ; BSR set to: 0
  2905                           ;drivers/scr/API_MRF24J40.c: 120:  data_config_s.my_address = (0x1112);
  2906   001860  0E11               	movlw	17
  2907   001862  6FB7               	movwf	(_data_config_s+31)& (0+255),b
  2908   001864  0E12               	movlw	18
  2909   001866  6FB6               	movwf	(_data_config_s+30)& (0+255),b
  2910   001868                     
  2911                           ; BSR set to: 0
  2912                           ;drivers/scr/API_MRF24J40.c: 121:  data_in_s.source_address = (0X00);
  2913   001868  0E00               	movlw	0
  2914   00186A  6F63               	movwf	(_data_in_s+3)& (0+255),b
  2915   00186C  0E00               	movlw	0
  2916   00186E  6F62               	movwf	(_data_in_s+2)& (0+255),b
  2917   001870                     
  2918                           ; BSR set to: 0
  2919                           ;drivers/scr/API_MRF24J40.c: 122:  data_in_s.source_panid = (0X00);
  2920   001870  0E00               	movlw	0
  2921   001872  6F61               	movwf	(_data_in_s+1)& (0+255),b
  2922   001874  0E00               	movlw	0
  2923   001876  6F60               	movwf	_data_in_s& (0+255),b
  2924   001878                     
  2925                           ; BSR set to: 0
  2926                           ;drivers/scr/API_MRF24J40.c: 123:  data_in_s.tamano_mensaje = (0X00);
  2927   001878  6B64               	clrf	(_data_in_s+4)& (0+255),b
  2928   00187A                     
  2929                           ; BSR set to: 0
  2930                           ;drivers/scr/API_MRF24J40.c: 124:  data_in_s.buffer[0] = (0X00);
  2931   00187A  6B66               	clrf	(_data_in_s+6)& (0+255),b
  2932   00187C                     
  2933                           ; BSR set to: 0
  2934                           ;drivers/scr/API_MRF24J40.c: 125:  data_out_s.destinity_panid = (0X00);
  2935   00187C  0E00               	movlw	0
  2936   00187E  6E33               	movwf	(_data_out_s+1)^0,c
  2937   001880  0E00               	movlw	0
  2938   001882  6E32               	movwf	_data_out_s^0,c
  2939   001884                     
  2940                           ; BSR set to: 0
  2941                           ;drivers/scr/API_MRF24J40.c: 126:  data_out_s.destinity_address = (0X00);
  2942   001884  0E00               	movlw	0
  2943   001886  6E35               	movwf	(_data_out_s+3)^0,c
  2944   001888  0E00               	movlw	0
  2945   00188A  6E34               	movwf	(_data_out_s+2)^0,c
  2946   00188C                     
  2947                           ; BSR set to: 0
  2948                           ;drivers/scr/API_MRF24J40.c: 127:  data_out_s.largo_mensaje = (0X00);
  2949   00188C  6A36               	clrf	(_data_out_s+4)^0,c
  2950   00188E                     
  2951                           ; BSR set to: 0
  2952                           ;drivers/scr/API_MRF24J40.c: 128:  data_out_s.buffer = ((void*)0);
  2953   00188E  6A37               	clrf	(_data_out_s+5)^0,c
  2954   001890                     
  2955                           ; BSR set to: 0
  2956   001890  0012               	return		;funcret
  2957   001892                     __end_of_InicializoVariables:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _strncpy *****************
  2961 ;; Defined at:
  2962 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncpy.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  d               1    0[COMRAM] PTR unsigned char 
  2965 ;;		 -> data_config_s(34), 
  2966 ;;  s               1    1[COMRAM] PTR const unsigned char 
  2967 ;;		 -> default_mac_address(8), default_security_key(16), 
  2968 ;;  n               2    2[COMRAM] unsigned int 
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;  cp              1    5[COMRAM] PTR unsigned char 
  2971 ;;		 -> data_config_s(34), 
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    0[COMRAM] PTR unsigned char 
  2974 ;; Registers used:
  2975 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2981 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;Total ram usage:        6 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; Hardware stack levels required when called: 1
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_InicializoVariables
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995                           	psect	text10
  2996   0017A8                     __ptext10:
  2997                           	callstack 0
  2998   0017A8                     _strncpy:
  2999                           	callstack 27
  3000   0017A8  C001  F006         	movff	strncpy@d,strncpy@cp
  3001   0017AC  EFF3  F00B         	goto	l1851
  3002   0017B0                     l1845:
  3003   0017B0  0603               	decf	strncpy@n^0,f,c
  3004   0017B2  A0D8               	btfss	status,0,c
  3005   0017B4  0604               	decf	(strncpy@n+1)^0,f,c
  3006   0017B6  2A02               	incf	strncpy@s^0,f,c
  3007   0017B8  0402               	decf	strncpy@s^0,w,c
  3008   0017BA  6E05               	movwf	??_strncpy^0,c
  3009   0017BC  C005  FFF6         	movff	??_strncpy,tblptrl
  3010   0017C0                     	if	1	;There is more than 1 active tblptr byte
  3011   0017C0  0E10               	movlw	high __smallconst
  3012   0017C2  6EF7               	movwf	tblptrh,c
  3013   0017C4                     	endif
  3014   0017C4                     	if	0	;tblptru may be non-zero
  3015   0017C4                     	endif
  3016   0017C4                     	if	0	;tblptru may be non-zero
  3017   0017C4                     	endif
  3018   0017C4  2A06               	incf	strncpy@cp^0,f,c
  3019   0017C6  0406               	decf	strncpy@cp^0,w,c
  3020   0017C8  6ED9               	movwf	fsr2l,c
  3021   0017CA  6ADA               	clrf	fsr2h,c
  3022   0017CC  0008               	tblrd		*
  3023   0017CE  CFF5 FFDF          	movff	tablat,indf2
  3024   0017D2  50DF               	movf	indf2,w,c
  3025   0017D4  A4D8               	btfss	status,2,c
  3026   0017D6  EFEF  F00B         	goto	u551
  3027   0017DA  EFF1  F00B         	goto	u550
  3028   0017DE                     u551:
  3029   0017DE  EFF3  F00B         	goto	l1851
  3030   0017E2                     u550:
  3031   0017E2  EF03  F00C         	goto	l1857
  3032   0017E6                     l1851:
  3033   0017E6  5003               	movf	strncpy@n^0,w,c
  3034   0017E8  1004               	iorwf	(strncpy@n+1)^0,w,c
  3035   0017EA  A4D8               	btfss	status,2,c
  3036   0017EC  EFFA  F00B         	goto	u561
  3037   0017F0  EFFC  F00B         	goto	u560
  3038   0017F4                     u561:
  3039   0017F4  EFD8  F00B         	goto	l1845
  3040   0017F8                     u560:
  3041   0017F8  EF03  F00C         	goto	l1857
  3042   0017FC                     l1853:
  3043   0017FC  5006               	movf	strncpy@cp^0,w,c
  3044   0017FE  6ED9               	movwf	fsr2l,c
  3045   001800  6ADA               	clrf	fsr2h,c
  3046   001802  6ADF               	clrf	indf2,c
  3047   001804  2A06               	incf	strncpy@cp^0,f,c
  3048   001806                     l1857:
  3049   001806  0603               	decf	strncpy@n^0,f,c
  3050   001808  A0D8               	btfss	status,0,c
  3051   00180A  0604               	decf	(strncpy@n+1)^0,f,c
  3052   00180C  2803               	incf	strncpy@n^0,w,c
  3053   00180E  E106               	bnz	u571
  3054   001810  2804               	incf	(strncpy@n+1)^0,w,c
  3055   001812  A4D8               	btfss	status,2,c
  3056   001814  EF0E  F00C         	goto	u571
  3057   001818  EF10  F00C         	goto	u570
  3058   00181C                     u571:
  3059   00181C  EFFE  F00B         	goto	l1853
  3060   001820                     u570:
  3061   001820  0012               	return		;funcret
  3062   001822                     __end_of_strncpy:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _InicializoPines *****************
  3066 ;; Defined at:
  3067 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;		None
  3072 ;; Return value:  Size  Location     Type
  3073 ;;                  1    wreg      void 
  3074 ;; Registers used:
  3075 ;;		wreg, cstack
  3076 ;; Tracked objects:
  3077 ;;		On entry : 0/0
  3078 ;;		On exit  : 0/0
  3079 ;;		Unchanged: 0/0
  3080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;Total ram usage:        0 bytes
  3086 ;; Hardware stack levels used: 1
  3087 ;; Hardware stack levels required when called: 2
  3088 ;; This function calls:
  3089 ;;		_SetCSPin
  3090 ;;		_SetResetPin
  3091 ;;		_SetWakePin
  3092 ;; This function is called by:
  3093 ;;		_MRF24J40Init
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text11
  3098   001CBE                     __ptext11:
  3099                           	callstack 0
  3100   001CBE                     _InicializoPines:
  3101                           	callstack 27
  3102   001CBE                     
  3103                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  3104   001CBE  0E01               	movlw	1
  3105   001CC0  EC8F  F00E         	call	_SetCSPin
  3106                           
  3107                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  3108   001CC4  0E01               	movlw	1
  3109   001CC6  EC73  F00E         	call	_SetWakePin
  3110                           
  3111                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  3112   001CCA  0E00               	movlw	0
  3113   001CCC  EC7A  F00E         	call	_SetResetPin
  3114   001CD0  0012               	return		;funcret
  3115   001CD2                     __end_of_InicializoPines:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _SetWakePin *****************
  3119 ;; Defined at:
  3120 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  estado          1    wreg     _Bool 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  estado          1    0[COMRAM] _Bool 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 1
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_InicializoPines
  3145 ;; This function uses a non-reentrant model
  3146 ;;
  3147                           
  3148                           	psect	text12
  3149   001CE6                     __ptext12:
  3150                           	callstack 0
  3151   001CE6                     _SetWakePin:
  3152                           	callstack 27
  3153                           
  3154                           ;incstack = 0
  3155                           ;SetWakePin@estado stored from wreg
  3156   001CE6  6E01               	movwf	SetWakePin@estado^0,c
  3157   001CE8                     
  3158                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  3159   001CE8  B001               	btfsc	SetWakePin@estado^0,0,c
  3160   001CEA  D002               	bra	u55
  3161   001CEC  9E8B               	bcf	139,7,c	;volatile
  3162   001CEE  D001               	bra	u56
  3163   001CF0                     u55:
  3164   001CF0  8E8B               	bsf	139,7,c	;volatile
  3165   001CF2                     u56:
  3166   001CF2  0012               	return		;funcret
  3167   001CF4                     __end_of_SetWakePin:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function _SetResetPin *****************
  3171 ;; Defined at:
  3172 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  estado          1    wreg     _Bool 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  estado          1    0[COMRAM] _Bool 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;Total ram usage:        1 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_InicializoPines
  3197 ;;		_MRF24J40Init
  3198 ;; This function uses a non-reentrant model
  3199 ;;
  3200                           
  3201                           	psect	text13
  3202   001CF4                     __ptext13:
  3203                           	callstack 0
  3204   001CF4                     _SetResetPin:
  3205                           	callstack 28
  3206                           
  3207                           ;incstack = 0
  3208                           ;SetResetPin@estado stored from wreg
  3209   001CF4  6E01               	movwf	SetResetPin@estado^0,c
  3210   001CF6                     
  3211                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  3212   001CF6  B001               	btfsc	SetResetPin@estado^0,0,c
  3213   001CF8  D002               	bra	u65
  3214   001CFA  988C               	bcf	140,4,c	;volatile
  3215   001CFC  D001               	bra	u66
  3216   001CFE                     u65:
  3217   001CFE  888C               	bsf	140,4,c	;volatile
  3218   001D00                     u66:
  3219   001D00  0012               	return		;funcret
  3220   001D02                     __end_of_SetResetPin:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _InicializoMRF24 *****************
  3224 ;; Defined at:
  3225 ;;		line 137 in file "drivers/scr/API_MRF24J40.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  delay_time_o    9   17[COMRAM] struct .
  3230 ;;  lectura         1   16[COMRAM] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  1    wreg      enum E3264
  3233 ;; Registers used:
  3234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3241 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3242 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;Total ram usage:       12 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; Hardware stack levels required when called: 6
  3247 ;; This function calls:
  3248 ;;		_DelayInit
  3249 ;;		_DelayRead
  3250 ;;		_DelayReset
  3251 ;;		_GetLongAddr
  3252 ;;		_GetShortAddr
  3253 ;;		_SetChannel
  3254 ;;		_SetDeviceAddress
  3255 ;;		_SetDeviceMACAddress
  3256 ;;		_SetLongAddr
  3257 ;;		_SetShortAddr
  3258 ;; This function is called by:
  3259 ;;		_MRF24J40Init
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text14
  3264   001230                     __ptext14:
  3265                           	callstack 0
  3266   001230                     _InicializoMRF24:
  3267                           	callstack 23
  3268   001230                     
  3269                           ;drivers/scr/API_MRF24J40.c: 139:  uint8_t lectura;;drivers/scr/API_MRF24J40.c: 140:  de
      +                          layNoBloqueanteData delay_time_out;;drivers/scr/API_MRF24J40.c: 141:  DelayInit(&delay_t
      +                          ime_out, 100);
  3270   001230  0E12               	movlw	low InicializoMRF24@delay_time_out
  3271   001232  6E01               	movwf	DelayInit@delay^0,c
  3272   001234  0E64               	movlw	100
  3273   001236  6E02               	movwf	DelayInit@duration^0,c
  3274   001238  0E00               	movlw	0
  3275   00123A  6E03               	movwf	(DelayInit@duration+1)^0,c
  3276   00123C  0E00               	movlw	0
  3277   00123E  6E04               	movwf	(DelayInit@duration+2)^0,c
  3278   001240  0E00               	movlw	0
  3279   001242  6E05               	movwf	(DelayInit@duration+3)^0,c
  3280   001244  ECC1  F00D         	call	_DelayInit	;wreg free
  3281   001248                     
  3282                           ;drivers/scr/API_MRF24J40.c: 142:  SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  3283   001248  0E07               	movlw	7
  3284   00124A  6E03               	movwf	SetShortAddr@valor^0,c
  3285   00124C  0E2A               	movlw	42
  3286   00124E  EC0E  F00E         	call	_SetShortAddr
  3287   001252                     
  3288                           ;drivers/scr/API_MRF24J40.c: 143:  DelayReset(&delay_time_out);
  3289   001252  0E12               	movlw	low InicializoMRF24@delay_time_out
  3290   001254  6E01               	movwf	DelayReset@delay^0,c
  3291   001256  ECFB  F00D         	call	_DelayReset	;wreg free
  3292   00125A                     l102:
  3293                           
  3294                           ;drivers/scr/API_MRF24J40.c: 147:   lectura = GetShortAddr((0x2A));
  3295   00125A  0E2A               	movlw	42
  3296   00125C  ECE8  F00D         	call	_GetShortAddr
  3297   001260  6E11               	movwf	InicializoMRF24@lectura^0,c
  3298   001262                     
  3299                           ;drivers/scr/API_MRF24J40.c: 148:   if(DelayRead(&delay_time_out))
  3300   001262  0E12               	movlw	low InicializoMRF24@delay_time_out
  3301   001264  6E02               	movwf	DelayRead@delay^0,c
  3302   001266  EC2B  F00B         	call	_DelayRead	;wreg free
  3303   00126A  0900               	iorlw	0
  3304   00126C  B4D8               	btfsc	status,2,c
  3305   00126E  EF3B  F009         	goto	u621
  3306   001272  EF3D  F009         	goto	u620
  3307   001276                     u621:
  3308   001276  EF40  F009         	goto	l1987
  3309   00127A                     u620:
  3310   00127A                     l1983:
  3311                           
  3312                           ;drivers/scr/API_MRF24J40.c: 149:    return TIME_OUT_OCURRIDO;
  3313   00127A  0E06               	movlw	6
  3314   00127C  EFEA  F009         	goto	l104
  3315   001280                     l1987:
  3316                           
  3317                           ;drivers/scr/API_MRF24J40.c: 150:  }while((lectura & ((0X04) | (0X02) | (0X01))) != (0X0
      +                          0));
  3318   001280  C011  F00F         	movff	InicializoMRF24@lectura,??_InicializoMRF24
  3319   001284  0E07               	movlw	7
  3320   001286  160F               	andwf	??_InicializoMRF24^0,f,c
  3321   001288  A4D8               	btfss	status,2,c
  3322   00128A  EF49  F009         	goto	u631
  3323   00128E  EF4B  F009         	goto	u630
  3324   001292                     u631:
  3325   001292  EF2D  F009         	goto	l102
  3326   001296                     u630:
  3327   001296                     
  3328                           ;drivers/scr/API_MRF24J40.c: 151:  _delay((unsigned long)((50)*(16000000/4000.0)));;
  3329   001296  0E02               	movlw	2
  3330   001298  6E10               	movwf	(??_InicializoMRF24+1)^0,c
  3331   00129A  0E04               	movlw	4
  3332   00129C  6E0F               	movwf	??_InicializoMRF24^0,c
  3333   00129E  0EBA               	movlw	186
  3334   0012A0                     u987:
  3335   0012A0  2EE8               	decfsz	wreg,f,c
  3336   0012A2  D7FE               	bra	u987
  3337   0012A4  2E0F               	decfsz	??_InicializoMRF24^0,f,c
  3338   0012A6  D7FC               	bra	u987
  3339   0012A8  2E10               	decfsz	(??_InicializoMRF24+1)^0,f,c
  3340   0012AA  D7FA               	bra	u987
  3341   0012AC  F000 F000          	nop2	
  3342   0012B0                     
  3343                           ;drivers/scr/API_MRF24J40.c: 152:  SetShortAddr((0x0D), (0X01));
  3344   0012B0  0E01               	movlw	1
  3345   0012B2  6E03               	movwf	SetShortAddr@valor^0,c
  3346   0012B4  0E0D               	movlw	13
  3347   0012B6  EC0E  F00E         	call	_SetShortAddr
  3348   0012BA                     
  3349                           ;drivers/scr/API_MRF24J40.c: 153:  SetDeviceAddress();
  3350   0012BA  EC95  F00D         	call	_SetDeviceAddress	;wreg free
  3351   0012BE                     
  3352                           ;drivers/scr/API_MRF24J40.c: 154:  SetDeviceMACAddress();
  3353   0012BE  ECAC  F00D         	call	_SetDeviceMACAddress	;wreg free
  3354   0012C2                     
  3355                           ;drivers/scr/API_MRF24J40.c: 155:  SetLongAddr((0x201), (0X02) | (0X01));
  3356   0012C2  0E02               	movlw	2
  3357   0012C4  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3358   0012C6  0E01               	movlw	1
  3359   0012C8  6E06               	movwf	SetLongAddr@reg_address^0,c
  3360   0012CA  0E03               	movlw	3
  3361   0012CC  6E08               	movwf	SetLongAddr@valor^0,c
  3362   0012CE  ECCF  F00C         	call	_SetLongAddr	;wreg free
  3363   0012D2                     
  3364                           ;drivers/scr/API_MRF24J40.c: 156:  SetLongAddr((0x202), (0X80));
  3365   0012D2  0E02               	movlw	2
  3366   0012D4  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3367   0012D6  0E02               	movlw	2
  3368   0012D8  6E06               	movwf	SetLongAddr@reg_address^0,c
  3369   0012DA  0E80               	movlw	128
  3370   0012DC  6E08               	movwf	SetLongAddr@valor^0,c
  3371   0012DE  ECCF  F00C         	call	_SetLongAddr	;wreg free
  3372   0012E2                     
  3373                           ;drivers/scr/API_MRF24J40.c: 157:  SetLongAddr((0x203), (0X80) | (0X00));
  3374   0012E2  0E02               	movlw	2
  3375   0012E4  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3376   0012E6  0E03               	movlw	3
  3377   0012E8  6E06               	movwf	SetLongAddr@reg_address^0,c
  3378   0012EA  0E80               	movlw	128
  3379   0012EC  6E08               	movwf	SetLongAddr@valor^0,c
  3380   0012EE  ECCF  F00C         	call	_SetLongAddr	;wreg free
  3381   0012F2                     
  3382                           ;drivers/scr/API_MRF24J40.c: 158:  SetLongAddr((0x206), (0X80) | (0X10));
  3383   0012F2  0E02               	movlw	2
  3384   0012F4  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3385   0012F6  0E06               	movlw	6
  3386   0012F8  6E06               	movwf	SetLongAddr@reg_address^0,c
  3387   0012FA  0E90               	movlw	144
  3388   0012FC  6E08               	movwf	SetLongAddr@valor^0,c
  3389   0012FE  ECCF  F00C         	call	_SetLongAddr	;wreg free
  3390   001302                     
  3391                           ;drivers/scr/API_MRF24J40.c: 159:  SetLongAddr((0x207), (0X80));
  3392   001302  0E02               	movlw	2
  3393   001304  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3394   001306  0E07               	movlw	7
  3395   001308  6E06               	movwf	SetLongAddr@reg_address^0,c
  3396   00130A  0E80               	movlw	128
  3397   00130C  6E08               	movwf	SetLongAddr@valor^0,c
  3398   00130E  ECCF  F00C         	call	_SetLongAddr	;wreg free
  3399   001312                     
  3400                           ;drivers/scr/API_MRF24J40.c: 160:  SetLongAddr((0x208), (0X10));
  3401   001312  0E02               	movlw	2
  3402   001314  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3403   001316  0E08               	movlw	8
  3404   001318  6E06               	movwf	SetLongAddr@reg_address^0,c
  3405   00131A  0E10               	movlw	16
  3406   00131C  6E08               	movwf	SetLongAddr@valor^0,c
  3407   00131E  ECCF  F00C         	call	_SetLongAddr	;wreg free
  3408   001322                     
  3409                           ;drivers/scr/API_MRF24J40.c: 161:  SetLongAddr((0x220), (0X20) | (0X01));
  3410   001322  0E02               	movlw	2
  3411   001324  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3412   001326  0E20               	movlw	32
  3413   001328  6E06               	movwf	SetLongAddr@reg_address^0,c
  3414   00132A  0E21               	movlw	33
  3415   00132C  6E08               	movwf	SetLongAddr@valor^0,c
  3416   00132E  ECCF  F00C         	call	_SetLongAddr	;wreg free
  3417   001332                     
  3418                           ;drivers/scr/API_MRF24J40.c: 162:  SetShortAddr((0x3A), (0X80));
  3419   001332  0E80               	movlw	128
  3420   001334  6E03               	movwf	SetShortAddr@valor^0,c
  3421   001336  0E3A               	movlw	58
  3422   001338  EC0E  F00E         	call	_SetShortAddr
  3423   00133C                     
  3424                           ;drivers/scr/API_MRF24J40.c: 163:  SetShortAddr((0x3E), (0X40));
  3425   00133C  0E40               	movlw	64
  3426   00133E  6E03               	movwf	SetShortAddr@valor^0,c
  3427   001340  0E3E               	movlw	62
  3428   001342  EC0E  F00E         	call	_SetShortAddr
  3429   001346                     
  3430                           ;drivers/scr/API_MRF24J40.c: 164:  SetShortAddr((0x3F), (0X40) | (0X20));
  3431   001346  0E60               	movlw	96
  3432   001348  6E03               	movwf	SetShortAddr@valor^0,c
  3433   00134A  0E3F               	movlw	63
  3434   00134C  EC0E  F00E         	call	_SetShortAddr
  3435   001350                     
  3436                           ;drivers/scr/API_MRF24J40.c: 165:  SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  3437   001350  0E98               	movlw	152
  3438   001352  6E03               	movwf	SetShortAddr@valor^0,c
  3439   001354  0E18               	movlw	24
  3440   001356  EC0E  F00E         	call	_SetShortAddr
  3441   00135A                     
  3442                           ;drivers/scr/API_MRF24J40.c: 166:  SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0X01
      +                          ));
  3443   00135A  0E95               	movlw	149
  3444   00135C  6E03               	movwf	SetShortAddr@valor^0,c
  3445   00135E  0E2E               	movlw	46
  3446   001360  EC0E  F00E         	call	_SetShortAddr
  3447   001364                     
  3448                           ;drivers/scr/API_MRF24J40.c: 167:  DelayReset(&delay_time_out);
  3449   001364  0E12               	movlw	low InicializoMRF24@delay_time_out
  3450   001366  6E01               	movwf	DelayReset@delay^0,c
  3451   001368  ECFB  F00D         	call	_DelayReset	;wreg free
  3452   00136C                     l2023:
  3453                           
  3454                           ;drivers/scr/API_MRF24J40.c: 171:   lectura = GetLongAddr((0x20f)) & (0XA0);
  3455   00136C  0E02               	movlw	2
  3456   00136E  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3457   001370  0E0F               	movlw	15
  3458   001372  6E06               	movwf	GetLongAddr@reg_address^0,c
  3459   001374  ECAD  F00C         	call	_GetLongAddr	;wreg free
  3460   001378  0BA0               	andlw	160
  3461   00137A  6E11               	movwf	InicializoMRF24@lectura^0,c
  3462   00137C                     
  3463                           ;drivers/scr/API_MRF24J40.c: 172:   if(DelayRead(&delay_time_out))
  3464   00137C  0E12               	movlw	low InicializoMRF24@delay_time_out
  3465   00137E  6E02               	movwf	DelayRead@delay^0,c
  3466   001380  EC2B  F00B         	call	_DelayRead	;wreg free
  3467   001384  0900               	iorlw	0
  3468   001386  B4D8               	btfsc	status,2,c
  3469   001388  EFC8  F009         	goto	u641
  3470   00138C  EFCA  F009         	goto	u640
  3471   001390                     u641:
  3472   001390  EFCC  F009         	goto	l2031
  3473   001394                     u640:
  3474   001394  EF3D  F009         	goto	l1983
  3475   001398                     l2031:
  3476                           
  3477                           ;drivers/scr/API_MRF24J40.c: 174:  }while(lectura != (0XA0));
  3478   001398  0EA0               	movlw	160
  3479   00139A  1811               	xorwf	InicializoMRF24@lectura^0,w,c
  3480   00139C  A4D8               	btfss	status,2,c
  3481   00139E  EFD3  F009         	goto	u651
  3482   0013A2  EFD5  F009         	goto	u650
  3483   0013A6                     u651:
  3484   0013A6  EFB6  F009         	goto	l2023
  3485   0013AA                     u650:
  3486   0013AA                     
  3487                           ;drivers/scr/API_MRF24J40.c: 175:  SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0X10
      +                          ) | (0X04) | (0X01));
  3488   0013AA  0EF5               	movlw	245
  3489   0013AC  6E03               	movwf	SetShortAddr@valor^0,c
  3490   0013AE  0E32               	movlw	50
  3491   0013B0  EC0E  F00E         	call	_SetShortAddr
  3492                           
  3493                           ;drivers/scr/API_MRF24J40.c: 176:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  3494   0013B4  0EB9               	movlw	185
  3495   0013B6  6E03               	movwf	SetShortAddr@valor^0,c
  3496   0013B8  0E12               	movlw	18
  3497   0013BA  EC0E  F00E         	call	_SetShortAddr
  3498                           
  3499                           ;drivers/scr/API_MRF24J40.c: 177:  SetChannel();
  3500   0013BE  EC2D  F00D         	call	_SetChannel	;wreg free
  3501                           
  3502                           ;drivers/scr/API_MRF24J40.c: 178:  SetShortAddr((0x00), (0X00));
  3503   0013C2  0E00               	movlw	0
  3504   0013C4  6E03               	movwf	SetShortAddr@valor^0,c
  3505   0013C6  0E00               	movlw	0
  3506   0013C8  EC0E  F00E         	call	_SetShortAddr
  3507                           
  3508                           ;drivers/scr/API_MRF24J40.c: 179:  (void)GetShortAddr((0x31));
  3509   0013CC  0E31               	movlw	49
  3510   0013CE  ECE8  F00D         	call	_GetShortAddr
  3511   0013D2                     
  3512                           ;drivers/scr/API_MRF24J40.c: 180:  return INICIALIZACION_OK;
  3513   0013D2  0E00               	movlw	0
  3514   0013D4                     l104:
  3515   0013D4  0012               	return		;funcret
  3516   0013D6                     __end_of_InicializoMRF24:
  3517                           	callstack 0
  3518                           
  3519 ;; *************** function _SetDeviceMACAddress *****************
  3520 ;; Defined at:
  3521 ;;		line 294 in file "drivers/scr/API_MRF24J40.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;		None
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;  i               1    4[COMRAM] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;Total ram usage:        1 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; Hardware stack levels required when called: 4
  3542 ;; This function calls:
  3543 ;;		_SetShortAddr
  3544 ;; This function is called by:
  3545 ;;		_InicializoMRF24
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text15
  3550   001B58                     __ptext15:
  3551                           	callstack 0
  3552   001B58                     _SetDeviceMACAddress:
  3553                           	callstack 24
  3554   001B58                     
  3555                           ;drivers/scr/API_MRF24J40.c: 296:  for(uint8_t i = 0; i < 8; i++) {
  3556   001B58  6A05               	clrf	SetDeviceMACAddress@i^0,c
  3557   001B5A                     l1913:
  3558                           
  3559                           ;drivers/scr/API_MRF24J40.c: 298:   SetShortAddr(EADR0 + i, data_config_s.my_mac[i]);
  3560   001B5A  5005               	movf	SetDeviceMACAddress@i^0,w,c
  3561   001B5C  0FAC               	addlw	low (_data_config_s+20)
  3562   001B5E  6ED9               	movwf	fsr2l,c
  3563   001B60  6ADA               	clrf	fsr2h,c
  3564   001B62  50DF               	movf	indf2,w,c
  3565   001B64  6E03               	movwf	SetShortAddr@valor^0,c
  3566   001B66  5005               	movf	SetDeviceMACAddress@i^0,w,c
  3567   001B68  0F05               	addlw	5
  3568   001B6A  EC0E  F00E         	call	_SetShortAddr
  3569   001B6E                     
  3570                           ;drivers/scr/API_MRF24J40.c: 299:  }
  3571   001B6E  2A05               	incf	SetDeviceMACAddress@i^0,f,c
  3572   001B70  0E07               	movlw	7
  3573   001B72  6405               	cpfsgt	SetDeviceMACAddress@i^0,c
  3574   001B74  EFBE  F00D         	goto	u601
  3575   001B78  EFC0  F00D         	goto	u600
  3576   001B7C                     u601:
  3577   001B7C  EFAD  F00D         	goto	l1913
  3578   001B80                     u600:
  3579   001B80  0012               	return		;funcret
  3580   001B82                     __end_of_SetDeviceMACAddress:
  3581                           	callstack 0
  3582                           
  3583 ;; *************** function _SetDeviceAddress *****************
  3584 ;; Defined at:
  3585 ;;		line 280 in file "drivers/scr/API_MRF24J40.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;		None
  3590 ;; Return value:  Size  Location     Type
  3591 ;;                  1    wreg      void 
  3592 ;; Registers used:
  3593 ;;		wreg, status,2, status,0, cstack
  3594 ;; Tracked objects:
  3595 ;;		On entry : 0/0
  3596 ;;		On exit  : 0/0
  3597 ;;		Unchanged: 0/0
  3598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3603 ;;Total ram usage:        0 bytes
  3604 ;; Hardware stack levels used: 1
  3605 ;; Hardware stack levels required when called: 4
  3606 ;; This function calls:
  3607 ;;		_SetShortAddr
  3608 ;; This function is called by:
  3609 ;;		_InicializoMRF24
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           	psect	text16
  3614   001B2A                     __ptext16:
  3615                           	callstack 0
  3616   001B2A                     _SetDeviceAddress:
  3617                           	callstack 24
  3618   001B2A                     
  3619                           ;drivers/scr/API_MRF24J40.c: 282:  SetShortAddr((0x04), (uint8_t) (data_config_s.my_addr
      +                          ess >> (0X08)));
  3620   001B2A  0100               	movlb	0	; () banked
  3621   001B2C  51B7               	movf	(_data_config_s+31)& (0+255),w,b
  3622   001B2E  6E03               	movwf	SetShortAddr@valor^0,c
  3623   001B30  0E04               	movlw	4
  3624   001B32  EC0E  F00E         	call	_SetShortAddr
  3625                           
  3626                           ;drivers/scr/API_MRF24J40.c: 283:  SetShortAddr((0x03), (uint8_t) (data_config_s.my_addr
      +                          ess));
  3627   001B36  C0B6  F003         	movff	_data_config_s+30,SetShortAddr@valor
  3628   001B3A  0E03               	movlw	3
  3629   001B3C  EC0E  F00E         	call	_SetShortAddr
  3630                           
  3631                           ;drivers/scr/API_MRF24J40.c: 284:  SetShortAddr((0x02), (uint8_t) (data_config_s.my_pani
      +                          d >> (0X08)));
  3632   001B40  0100               	movlb	0	; () banked
  3633   001B42  51B5               	movf	(_data_config_s+29)& (0+255),w,b
  3634   001B44  6E03               	movwf	SetShortAddr@valor^0,c
  3635   001B46  0E02               	movlw	2
  3636   001B48  EC0E  F00E         	call	_SetShortAddr
  3637                           
  3638                           ;drivers/scr/API_MRF24J40.c: 285:  SetShortAddr((0x01), (uint8_t) (data_config_s.my_pani
      +                          d));
  3639   001B4C  C0B4  F003         	movff	_data_config_s+28,SetShortAddr@valor
  3640   001B50  0E01               	movlw	1
  3641   001B52  EC0E  F00E         	call	_SetShortAddr
  3642   001B56  0012               	return		;funcret
  3643   001B58                     __end_of_SetDeviceAddress:
  3644                           	callstack 0
  3645                           
  3646 ;; *************** function _SetChannel *****************
  3647 ;; Defined at:
  3648 ;;		line 266 in file "drivers/scr/API_MRF24J40.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;		None
  3653 ;; Return value:  Size  Location     Type
  3654 ;;                  1    wreg      void 
  3655 ;; Registers used:
  3656 ;;		wreg, status,2, status,0, cstack
  3657 ;; Tracked objects:
  3658 ;;		On entry : 0/0
  3659 ;;		On exit  : 0/0
  3660 ;;		Unchanged: 0/0
  3661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;Total ram usage:        1 bytes
  3667 ;; Hardware stack levels used: 1
  3668 ;; Hardware stack levels required when called: 5
  3669 ;; This function calls:
  3670 ;;		_SetLongAddr
  3671 ;;		_SetShortAddr
  3672 ;; This function is called by:
  3673 ;;		_InicializoMRF24
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text17
  3678   001A5A                     __ptext17:
  3679                           	callstack 0
  3680   001A5A                     _SetChannel:
  3681                           	callstack 23
  3682   001A5A                     
  3683                           ;drivers/scr/API_MRF24J40.c: 268:  SetLongAddr((0x200), data_config_s.my_channel);
  3684   001A5A  0E02               	movlw	2
  3685   001A5C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3686   001A5E  0E00               	movlw	0
  3687   001A60  6E06               	movwf	SetLongAddr@reg_address^0,c
  3688   001A62  C09B  F008         	movff	_data_config_s+3,SetLongAddr@valor
  3689   001A66  ECCF  F00C         	call	_SetLongAddr	;wreg free
  3690                           
  3691                           ;drivers/scr/API_MRF24J40.c: 269:  SetShortAddr((0x36), (0X04));
  3692   001A6A  0E04               	movlw	4
  3693   001A6C  6E03               	movwf	SetShortAddr@valor^0,c
  3694   001A6E  0E36               	movlw	54
  3695   001A70  EC0E  F00E         	call	_SetShortAddr
  3696                           
  3697                           ;drivers/scr/API_MRF24J40.c: 270:  SetShortAddr((0x36), (0X00));
  3698   001A74  0E00               	movlw	0
  3699   001A76  6E03               	movwf	SetShortAddr@valor^0,c
  3700   001A78  0E36               	movlw	54
  3701   001A7A  EC0E  F00E         	call	_SetShortAddr
  3702   001A7E                     
  3703                           ;drivers/scr/API_MRF24J40.c: 271:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3704   001A7E  0E06               	movlw	6
  3705   001A80  6E0B               	movwf	??_SetChannel^0,c
  3706   001A82  0E30               	movlw	48
  3707   001A84                     u997:
  3708   001A84  2EE8               	decfsz	wreg,f,c
  3709   001A86  D7FE               	bra	u997
  3710   001A88  2E0B               	decfsz	??_SetChannel^0,f,c
  3711   001A8A  D7FC               	bra	u997
  3712   001A8C  F000 F000          	nop2	
  3713   001A90  0012               	return		;funcret
  3714   001A92                     __end_of_SetChannel:
  3715                           	callstack 0
  3716                           
  3717 ;; *************** function _SetShortAddr *****************
  3718 ;; Defined at:
  3719 ;;		line 189 in file "drivers/scr/API_MRF24J40.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  reg_address     1    wreg     unsigned char 
  3722 ;;  valor           1    2[COMRAM] unsigned char 
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  reg_address     1    3[COMRAM] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2, status,0, cstack
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3734 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;Total ram usage:        2 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; Hardware stack levels required when called: 3
  3741 ;; This function calls:
  3742 ;;		_SetCSPin
  3743 ;;		_WriteByteSPIPort
  3744 ;; This function is called by:
  3745 ;;		_InicializoMRF24
  3746 ;;		_SetChannel
  3747 ;;		_SetDeviceAddress
  3748 ;;		_SetDeviceMACAddress
  3749 ;;		_MRF24TransmitirDato
  3750 ;;		_MRF24ReciboPaquete
  3751 ;;		_MRF24BuscarDispositivos
  3752 ;; This function uses a non-reentrant model
  3753 ;;
  3754                           
  3755                           	psect	text18
  3756   001C1C                     __ptext18:
  3757                           	callstack 0
  3758   001C1C                     _SetShortAddr:
  3759                           	callstack 26
  3760                           
  3761                           ;incstack = 0
  3762                           ;SetShortAddr@reg_address stored from wreg
  3763   001C1C  6E04               	movwf	SetShortAddr@reg_address^0,c
  3764   001C1E                     
  3765                           ;drivers/scr/API_MRF24J40.c: 194:  reg_address = (uint8_t) (reg_address << (0X01)) | (0x
      +                          01);
  3766   001C1E  80D8               	bsf	status,0,c
  3767   001C20  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  3768   001C22                     
  3769                           ;drivers/scr/API_MRF24J40.c: 195:  SetCSPin(0);
  3770   001C22  0E00               	movlw	0
  3771   001C24  EC8F  F00E         	call	_SetCSPin
  3772   001C28                     
  3773                           ;drivers/scr/API_MRF24J40.c: 196:  WriteByteSPIPort(reg_address);
  3774   001C28  5004               	movf	SetShortAddr@reg_address^0,w,c
  3775   001C2A  EC9D  F00E         	call	_WriteByteSPIPort
  3776   001C2E                     
  3777                           ;drivers/scr/API_MRF24J40.c: 197:  WriteByteSPIPort(valor);
  3778   001C2E  5003               	movf	SetShortAddr@valor^0,w,c
  3779   001C30  EC9D  F00E         	call	_WriteByteSPIPort
  3780   001C34                     
  3781                           ;drivers/scr/API_MRF24J40.c: 198:  SetCSPin(1);
  3782   001C34  0E01               	movlw	1
  3783   001C36  EC8F  F00E         	call	_SetCSPin
  3784   001C3A  0012               	return		;funcret
  3785   001C3C                     __end_of_SetShortAddr:
  3786                           	callstack 0
  3787                           
  3788 ;; *************** function _SetLongAddr *****************
  3789 ;; Defined at:
  3790 ;;		line 228 in file "drivers/scr/API_MRF24J40.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  reg_address     2    5[COMRAM] unsigned short 
  3793 ;;  valor           1    7[COMRAM] unsigned char 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      void 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0, cstack
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3805 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;Total ram usage:        5 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 4
  3812 ;; This function calls:
  3813 ;;		_SetCSPin
  3814 ;;		_Write2ByteSPIPort
  3815 ;;		_WriteByteSPIPort
  3816 ;; This function is called by:
  3817 ;;		_InicializoMRF24
  3818 ;;		_SetChannel
  3819 ;;		_MRF24TransmitirDato
  3820 ;;		_MRF24ReciboPaquete
  3821 ;;		_MRF24BuscarDispositivos
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           	psect	text19
  3826   00199E                     __ptext19:
  3827                           	callstack 0
  3828   00199E                     _SetLongAddr:
  3829                           	callstack 25
  3830   00199E                     
  3831                           ;drivers/scr/API_MRF24J40.c: 233:  reg_address = (reg_address << (0X05)) | (0X8010);
  3832   00199E  C006  F009         	movff	SetLongAddr@reg_address,??_SetLongAddr
  3833   0019A2  C007  F00A         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  3834   0019A6  0E05               	movlw	5
  3835   0019A8                     u545:
  3836   0019A8  90D8               	bcf	status,0,c
  3837   0019AA  3609               	rlcf	??_SetLongAddr^0,f,c
  3838   0019AC  360A               	rlcf	(??_SetLongAddr+1)^0,f,c
  3839   0019AE  2EE8               	decfsz	wreg,f,c
  3840   0019B0  EFD4  F00C         	goto	u545
  3841   0019B4  0E10               	movlw	16
  3842   0019B6  1009               	iorwf	??_SetLongAddr^0,w,c
  3843   0019B8  6E06               	movwf	SetLongAddr@reg_address^0,c
  3844   0019BA  0E80               	movlw	128
  3845   0019BC  100A               	iorwf	(??_SetLongAddr+1)^0,w,c
  3846   0019BE  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3847   0019C0                     
  3848                           ;drivers/scr/API_MRF24J40.c: 234:  SetCSPin(0);
  3849   0019C0  0E00               	movlw	0
  3850   0019C2  EC8F  F00E         	call	_SetCSPin
  3851   0019C6                     
  3852                           ;drivers/scr/API_MRF24J40.c: 235:  Write2ByteSPIPort(reg_address);
  3853   0019C6  C006  F004         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  3854   0019CA  C007  F005         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3855   0019CE  EC81  F00E         	call	_Write2ByteSPIPort	;wreg free
  3856   0019D2                     
  3857                           ;drivers/scr/API_MRF24J40.c: 236:  WriteByteSPIPort(valor);
  3858   0019D2  5008               	movf	SetLongAddr@valor^0,w,c
  3859   0019D4  EC9D  F00E         	call	_WriteByteSPIPort
  3860   0019D8                     
  3861                           ;drivers/scr/API_MRF24J40.c: 237:  SetCSPin(1);
  3862   0019D8  0E01               	movlw	1
  3863   0019DA  EC8F  F00E         	call	_SetCSPin
  3864   0019DE  0012               	return		;funcret
  3865   0019E0                     __end_of_SetLongAddr:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _GetShortAddr *****************
  3869 ;; Defined at:
  3870 ;;		line 208 in file "drivers/scr/API_MRF24J40.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;  reg_address     1    wreg     unsigned char 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  reg_address     1    3[COMRAM] unsigned char 
  3875 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  1    wreg      unsigned char 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;Total ram usage:        2 bytes
  3890 ;; Hardware stack levels used: 1
  3891 ;; Hardware stack levels required when called: 3
  3892 ;; This function calls:
  3893 ;;		_ReadByteSPIPort
  3894 ;;		_SetCSPin
  3895 ;;		_WriteByteSPIPort
  3896 ;; This function is called by:
  3897 ;;		_InicializoMRF24
  3898 ;;		_MRF24ReciboPaquete
  3899 ;; This function uses a non-reentrant model
  3900 ;;
  3901                           
  3902                           	psect	text20
  3903   001BD0                     __ptext20:
  3904                           	callstack 0
  3905   001BD0                     _GetShortAddr:
  3906                           	callstack 26
  3907                           
  3908                           ;incstack = 0
  3909                           ;GetShortAddr@reg_address stored from wreg
  3910   001BD0  6E04               	movwf	GetShortAddr@reg_address^0,c
  3911   001BD2                     
  3912                           ;drivers/scr/API_MRF24J40.c: 214:  reg_address = (uint8_t) (reg_address << (0X01)) & (0x
      +                          7E);
  3913   001BD2  5004               	movf	GetShortAddr@reg_address^0,w,c
  3914   001BD4  2404               	addwf	GetShortAddr@reg_address^0,w,c
  3915   001BD6  0B7E               	andlw	126
  3916   001BD8  6E04               	movwf	GetShortAddr@reg_address^0,c
  3917   001BDA                     
  3918                           ;drivers/scr/API_MRF24J40.c: 215:  SetCSPin(0);
  3919   001BDA  0E00               	movlw	0
  3920   001BDC  EC8F  F00E         	call	_SetCSPin
  3921   001BE0                     
  3922                           ;drivers/scr/API_MRF24J40.c: 216:  WriteByteSPIPort(reg_address);
  3923   001BE0  5004               	movf	GetShortAddr@reg_address^0,w,c
  3924   001BE2  EC9D  F00E         	call	_WriteByteSPIPort
  3925   001BE6                     
  3926                           ;drivers/scr/API_MRF24J40.c: 217:  leido_spi = ReadByteSPIPort();
  3927   001BE6  ECA2  F00E         	call	_ReadByteSPIPort	;wreg free
  3928   001BEA  6E03               	movwf	GetShortAddr@leido_spi^0,c
  3929   001BEC                     
  3930                           ;drivers/scr/API_MRF24J40.c: 218:  SetCSPin(1);
  3931   001BEC  0E01               	movlw	1
  3932   001BEE  EC8F  F00E         	call	_SetCSPin
  3933   001BF2                     
  3934                           ;drivers/scr/API_MRF24J40.c: 219:  return leido_spi;
  3935   001BF2  5003               	movf	GetShortAddr@leido_spi^0,w,c
  3936   001BF4  0012               	return		;funcret
  3937   001BF6                     __end_of_GetShortAddr:
  3938                           	callstack 0
  3939                           
  3940 ;; *************** function _WriteByteSPIPort *****************
  3941 ;; Defined at:
  3942 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  3943 ;; Parameters:    Size  Location     Type
  3944 ;;  dato            1    wreg     unsigned char 
  3945 ;; Auto vars:     Size  Location     Type
  3946 ;;  dato            1    1[COMRAM] unsigned char 
  3947 ;; Return value:  Size  Location     Type
  3948 ;;                  1    wreg      void 
  3949 ;; Registers used:
  3950 ;;		wreg, status,2, cstack
  3951 ;; Tracked objects:
  3952 ;;		On entry : 0/0
  3953 ;;		On exit  : 0/0
  3954 ;;		Unchanged: 0/0
  3955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3959 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;Total ram usage:        1 bytes
  3961 ;; Hardware stack levels used: 1
  3962 ;; Hardware stack levels required when called: 2
  3963 ;; This function calls:
  3964 ;;		_SPIWriteByte
  3965 ;; This function is called by:
  3966 ;;		_SetShortAddr
  3967 ;;		_GetShortAddr
  3968 ;;		_SetLongAddr
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           	psect	text21
  3973   001D3A                     __ptext21:
  3974                           	callstack 0
  3975   001D3A                     _WriteByteSPIPort:
  3976                           	callstack 26
  3977                           
  3978                           ;incstack = 0
  3979                           ;WriteByteSPIPort@dato stored from wreg
  3980   001D3A  6E02               	movwf	WriteByteSPIPort@dato^0,c
  3981   001D3C                     
  3982                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  3983   001D3C  5002               	movf	WriteByteSPIPort@dato^0,w,c
  3984   001D3E  EC3C  F00E         	call	_SPIWriteByte
  3985   001D42  0012               	return		;funcret
  3986   001D44                     __end_of_WriteByteSPIPort:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _GetLongAddr *****************
  3990 ;; Defined at:
  3991 ;;		line 247 in file "drivers/scr/API_MRF24J40.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  reg_address     2    5[COMRAM] unsigned short 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  respuesta       1    9[COMRAM] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      unsigned char 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;Total ram usage:        5 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 4
  4012 ;; This function calls:
  4013 ;;		_ReadByteSPIPort
  4014 ;;		_SetCSPin
  4015 ;;		_Write2ByteSPIPort
  4016 ;; This function is called by:
  4017 ;;		_InicializoMRF24
  4018 ;;		_MRF24ReciboPaquete
  4019 ;; This function uses a non-reentrant model
  4020 ;;
  4021                           
  4022                           	psect	text22
  4023   00195A                     __ptext22:
  4024                           	callstack 0
  4025   00195A                     _GetLongAddr:
  4026                           	callstack 25
  4027   00195A                     
  4028                           ;drivers/scr/API_MRF24J40.c: 252:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 253:  
      +                          reg_address = (reg_address << (0X05)) | (0X8000);
  4029   00195A  C006  F008         	movff	GetLongAddr@reg_address,??_GetLongAddr
  4030   00195E  C007  F009         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  4031   001962  0E05               	movlw	5
  4032   001964                     u615:
  4033   001964  90D8               	bcf	status,0,c
  4034   001966  3608               	rlcf	??_GetLongAddr^0,f,c
  4035   001968  3609               	rlcf	(??_GetLongAddr+1)^0,f,c
  4036   00196A  2EE8               	decfsz	wreg,f,c
  4037   00196C  EFB2  F00C         	goto	u615
  4038   001970  0E00               	movlw	0
  4039   001972  1008               	iorwf	??_GetLongAddr^0,w,c
  4040   001974  6E06               	movwf	GetLongAddr@reg_address^0,c
  4041   001976  0E80               	movlw	128
  4042   001978  1009               	iorwf	(??_GetLongAddr+1)^0,w,c
  4043   00197A  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  4044   00197C                     
  4045                           ;drivers/scr/API_MRF24J40.c: 254:  SetCSPin(0);
  4046   00197C  0E00               	movlw	0
  4047   00197E  EC8F  F00E         	call	_SetCSPin
  4048   001982                     
  4049                           ;drivers/scr/API_MRF24J40.c: 255:  Write2ByteSPIPort(reg_address);
  4050   001982  C006  F004         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  4051   001986  C007  F005         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  4052   00198A  EC81  F00E         	call	_Write2ByteSPIPort	;wreg free
  4053   00198E                     
  4054                           ;drivers/scr/API_MRF24J40.c: 256:  respuesta = ReadByteSPIPort();
  4055   00198E  ECA2  F00E         	call	_ReadByteSPIPort	;wreg free
  4056   001992  6E0A               	movwf	GetLongAddr@respuesta^0,c
  4057   001994                     
  4058                           ;drivers/scr/API_MRF24J40.c: 257:  SetCSPin(1);
  4059   001994  0E01               	movlw	1
  4060   001996  EC8F  F00E         	call	_SetCSPin
  4061   00199A                     
  4062                           ;drivers/scr/API_MRF24J40.c: 258:  return respuesta;
  4063   00199A  500A               	movf	GetLongAddr@respuesta^0,w,c
  4064   00199C  0012               	return		;funcret
  4065   00199E                     __end_of_GetLongAddr:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _Write2ByteSPIPort *****************
  4069 ;; Defined at:
  4070 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  dato            2    3[COMRAM] unsigned short 
  4073 ;; Auto vars:     Size  Location     Type
  4074 ;;		None
  4075 ;; Return value:  Size  Location     Type
  4076 ;;                  1    wreg      void 
  4077 ;; Registers used:
  4078 ;;		wreg, status,2, cstack
  4079 ;; Tracked objects:
  4080 ;;		On entry : 0/0
  4081 ;;		On exit  : 0/0
  4082 ;;		Unchanged: 0/0
  4083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4084 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;Total ram usage:        2 bytes
  4089 ;; Hardware stack levels used: 1
  4090 ;; Hardware stack levels required when called: 3
  4091 ;; This function calls:
  4092 ;;		_SPIWrite2Byte
  4093 ;; This function is called by:
  4094 ;;		_SetLongAddr
  4095 ;;		_GetLongAddr
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text23
  4100   001D02                     __ptext23:
  4101                           	callstack 0
  4102   001D02                     _Write2ByteSPIPort:
  4103                           	callstack 25
  4104   001D02                     
  4105                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  4106   001D02  C004  F002         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  4107   001D06  C005  F003         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  4108   001D0A  EC88  F00E         	call	_SPIWrite2Byte	;wreg free
  4109   001D0E  0012               	return		;funcret
  4110   001D10                     __end_of_Write2ByteSPIPort:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _SPIWrite2Byte *****************
  4114 ;; Defined at:
  4115 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  dato            2    1[COMRAM] unsigned short 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;		None
  4120 ;; Return value:  Size  Location     Type
  4121 ;;                  1    wreg      void 
  4122 ;; Registers used:
  4123 ;;		wreg, status,2, cstack
  4124 ;; Tracked objects:
  4125 ;;		On entry : 0/0
  4126 ;;		On exit  : 0/0
  4127 ;;		Unchanged: 0/0
  4128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4129 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;Total ram usage:        2 bytes
  4134 ;; Hardware stack levels used: 1
  4135 ;; Hardware stack levels required when called: 2
  4136 ;; This function calls:
  4137 ;;		_SPIWriteByte
  4138 ;; This function is called by:
  4139 ;;		_Write2ByteSPIPort
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text24
  4144   001D10                     __ptext24:
  4145                           	callstack 0
  4146   001D10                     _SPIWrite2Byte:
  4147                           	callstack 25
  4148   001D10                     
  4149                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  4150   001D10  5003               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  4151   001D12  EC3C  F00E         	call	_SPIWriteByte
  4152                           
  4153                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  4154   001D16  5002               	movf	SPIWrite2Byte@dato^0,w,c
  4155   001D18  EC3C  F00E         	call	_SPIWriteByte
  4156   001D1C  0012               	return		;funcret
  4157   001D1E                     __end_of_SPIWrite2Byte:
  4158                           	callstack 0
  4159                           
  4160 ;; *************** function _SPIWriteByte *****************
  4161 ;; Defined at:
  4162 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;  dato            1    wreg     unsigned char 
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  dato            1    0[COMRAM] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;Total ram usage:        1 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; Hardware stack levels required when called: 1
  4183 ;; This function calls:
  4184 ;;		Nothing
  4185 ;; This function is called by:
  4186 ;;		_WriteByteSPIPort
  4187 ;;		_SPIWrite2Byte
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text25
  4192   001C78                     __ptext25:
  4193                           	callstack 0
  4194   001C78                     _SPIWriteByte:
  4195                           	callstack 26
  4196                           
  4197                           ;incstack = 0
  4198                           ;SPIWriteByte@dato stored from wreg
  4199   001C78  6E01               	movwf	SPIWriteByte@dato^0,c
  4200   001C7A                     
  4201                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  4202   001C7A  969E               	bcf	158,3,c	;volatile
  4203   001C7C                     
  4204                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  4205   001C7C  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  4206   001C80                     l198:
  4207   001C80  A69E               	btfss	158,3,c	;volatile
  4208   001C82  EF45  F00E         	goto	u511
  4209   001C86  EF47  F00E         	goto	u510
  4210   001C8A                     u511:
  4211   001C8A  EF40  F00E         	goto	l198
  4212   001C8E                     u510:
  4213   001C8E  0012               	return		;funcret
  4214   001C90                     __end_of_SPIWriteByte:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function _SetCSPin *****************
  4218 ;; Defined at:
  4219 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  estado          1    wreg     _Bool 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  estado          1    0[COMRAM] _Bool 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4237 ;;Total ram usage:        1 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 1
  4240 ;; This function calls:
  4241 ;;		Nothing
  4242 ;; This function is called by:
  4243 ;;		_InicializoPines
  4244 ;;		_SetShortAddr
  4245 ;;		_GetShortAddr
  4246 ;;		_SetLongAddr
  4247 ;;		_GetLongAddr
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251                           	psect	text26
  4252   001D1E                     __ptext26:
  4253                           	callstack 0
  4254   001D1E                     _SetCSPin:
  4255                           	callstack 27
  4256                           
  4257                           ;incstack = 0
  4258                           ;SetCSPin@estado stored from wreg
  4259   001D1E  6E01               	movwf	SetCSPin@estado^0,c
  4260   001D20                     
  4261                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  4262   001D20  B001               	btfsc	SetCSPin@estado^0,0,c
  4263   001D22  D002               	bra	u525
  4264   001D24  9C8B               	bcf	139,6,c	;volatile
  4265   001D26  D001               	bra	u526
  4266   001D28                     u525:
  4267   001D28  8C8B               	bsf	139,6,c	;volatile
  4268   001D2A                     u526:
  4269   001D2A  0012               	return		;funcret
  4270   001D2C                     __end_of_SetCSPin:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function _ReadByteSPIPort *****************
  4274 ;; Defined at:
  4275 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      unsigned char 
  4282 ;; Registers used:
  4283 ;;		wreg, status,2, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;Total ram usage:        0 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 2
  4296 ;; This function calls:
  4297 ;;		_SPIRead
  4298 ;; This function is called by:
  4299 ;;		_GetShortAddr
  4300 ;;		_GetLongAddr
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text27
  4305   001D44                     __ptext27:
  4306                           	callstack 0
  4307   001D44                     _ReadByteSPIPort:
  4308                           	callstack 26
  4309   001D44                     
  4310                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  4311   001D44  EC54  F00E         	call	_SPIRead	;wreg free
  4312   001D48  0012               	return		;funcret
  4313   001D4A                     __end_of_ReadByteSPIPort:
  4314                           	callstack 0
  4315                           
  4316 ;; *************** function _SPIRead *****************
  4317 ;; Defined at:
  4318 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  4319 ;; Parameters:    Size  Location     Type
  4320 ;;		None
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;		None
  4323 ;; Return value:  Size  Location     Type
  4324 ;;                  1    wreg      unsigned char 
  4325 ;; Registers used:
  4326 ;;		wreg, status,2
  4327 ;; Tracked objects:
  4328 ;;		On entry : 0/0
  4329 ;;		On exit  : 0/0
  4330 ;;		Unchanged: 0/0
  4331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;Total ram usage:        0 bytes
  4337 ;; Hardware stack levels used: 1
  4338 ;; Hardware stack levels required when called: 1
  4339 ;; This function calls:
  4340 ;;		Nothing
  4341 ;; This function is called by:
  4342 ;;		_ReadByteSPIPort
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text28
  4347   001CA8                     __ptext28:
  4348                           	callstack 0
  4349   001CA8                     _SPIRead:
  4350                           	callstack 26
  4351   001CA8                     
  4352                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  4353   001CA8  9EC6               	bcf	198,7,c	;volatile
  4354                           
  4355                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  4356   001CAA  6AC9               	clrf	201,c	;volatile
  4357   001CAC                     l207:
  4358   001CAC  A0C7               	btfss	199,0,c	;volatile
  4359   001CAE  EF5B  F00E         	goto	u531
  4360   001CB2  EF5D  F00E         	goto	u530
  4361   001CB6                     u531:
  4362   001CB6  EF56  F00E         	goto	l207
  4363   001CBA                     u530:
  4364   001CBA                     
  4365                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  4366   001CBA  50C9               	movf	201,w,c	;volatile
  4367   001CBC  0012               	return		;funcret
  4368   001CBE                     __end_of_SPIRead:
  4369                           	callstack 0
  4370                           
  4371 ;; *************** function _DelayReset *****************
  4372 ;; Defined at:
  4373 ;;		line 68 in file "drivers/scr/API_delay.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  delay           1    0[COMRAM] PTR struct .
  4376 ;;		 -> InicializoMRF24@delay_time_out(9), 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;		None
  4379 ;; Return value:  Size  Location     Type
  4380 ;;                  1    wreg      void 
  4381 ;; Registers used:
  4382 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4383 ;; Tracked objects:
  4384 ;;		On entry : 0/0
  4385 ;;		On exit  : 0/0
  4386 ;;		Unchanged: 0/0
  4387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4388 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4391 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4392 ;;Total ram usage:        1 bytes
  4393 ;; Hardware stack levels used: 1
  4394 ;; Hardware stack levels required when called: 1
  4395 ;; This function calls:
  4396 ;;		Nothing
  4397 ;; This function is called by:
  4398 ;;		_InicializoMRF24
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           	psect	text29
  4403   001BF6                     __ptext29:
  4404                           	callstack 0
  4405   001BF6                     _DelayReset:
  4406                           	callstack 27
  4407   001BF6                     
  4408                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  4409   001BF6  5001               	movf	DelayReset@delay^0,w,c
  4410   001BF8  6ED9               	movwf	fsr2l,c
  4411   001BFA  6ADA               	clrf	fsr2h,c
  4412   001BFC  C038  FFDE         	movff	_timeStamp,postinc2
  4413   001C00  C039  FFDE         	movff	_timeStamp+1,postinc2
  4414   001C04  C03A  FFDE         	movff	_timeStamp+2,postinc2
  4415   001C08  C03B  FFDE         	movff	_timeStamp+3,postinc2
  4416   001C0C                     
  4417                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  4418   001C0C  5001               	movf	DelayReset@delay^0,w,c
  4419   001C0E  6ED9               	movwf	fsr2l,c
  4420   001C10  6ADA               	clrf	fsr2h,c
  4421   001C12  0E08               	movlw	8
  4422   001C14  26D9               	addwf	fsr2l,f,c
  4423   001C16  0E01               	movlw	1
  4424   001C18  6EDF               	movwf	indf2,c
  4425   001C1A  0012               	return		;funcret
  4426   001C1C                     __end_of_DelayReset:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _MRF24IsNewMsg *****************
  4430 ;; Defined at:
  4431 ;;		line 396 in file "drivers/scr/API_MRF24J40.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;		None
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      enum E3264
  4438 ;; Registers used:
  4439 ;;		wreg, status,2, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;Total ram usage:        0 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 2
  4452 ;; This function calls:
  4453 ;;		_IsMRF24Interrup
  4454 ;; This function is called by:
  4455 ;;		_main
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text30
  4460   001AC6                     __ptext30:
  4461                           	callstack 0
  4462   001AC6                     _MRF24IsNewMsg:
  4463                           	callstack 28
  4464   001AC6                     
  4465                           ;drivers/scr/API_MRF24J40.c: 398:  if(estadoActual != INICIALIZACION_OK)
  4466   001AC6  503C               	movf	_estadoActual^0,w,c
  4467   001AC8  B4D8               	btfsc	status,2,c
  4468   001ACA  EF69  F00D         	goto	u261
  4469   001ACE  EF6B  F00D         	goto	u260
  4470   001AD2                     u261:
  4471   001AD2  EF6E  F00D         	goto	l1501
  4472   001AD6                     u260:
  4473   001AD6                     
  4474                           ;drivers/scr/API_MRF24J40.c: 399:   return ERROR_INESPERADO;
  4475   001AD6  0E09               	movlw	9
  4476   001AD8  EF7C  F00D         	goto	l159
  4477   001ADC                     l1501:
  4478                           
  4479                           ;drivers/scr/API_MRF24J40.c: 401:  if(!IsMRF24Interrup())
  4480   001ADC  EC69  F00E         	call	_IsMRF24Interrup	;wreg free
  4481   001AE0  0900               	iorlw	0
  4482   001AE2  A4D8               	btfss	status,2,c
  4483   001AE4  EF76  F00D         	goto	u271
  4484   001AE8  EF78  F00D         	goto	u270
  4485   001AEC                     u271:
  4486   001AEC  EF7B  F00D         	goto	l1507
  4487   001AF0                     u270:
  4488   001AF0                     
  4489                           ;drivers/scr/API_MRF24J40.c: 402:   return MSG_PRESENTE;
  4490   001AF0  0E03               	movlw	3
  4491   001AF2  EF7C  F00D         	goto	l159
  4492   001AF6                     l1507:
  4493                           
  4494                           ;drivers/scr/API_MRF24J40.c: 403:  return MSG_NO_PRESENTE;
  4495   001AF6  0E04               	movlw	4
  4496   001AF8                     l159:
  4497   001AF8  0012               	return		;funcret
  4498   001AFA                     __end_of_MRF24IsNewMsg:
  4499                           	callstack 0
  4500                           
  4501 ;; *************** function _IsMRF24Interrup *****************
  4502 ;; Defined at:
  4503 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  4504 ;; Parameters:    Size  Location     Type
  4505 ;;		None
  4506 ;; Auto vars:     Size  Location     Type
  4507 ;;		None
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  1    wreg      _Bool 
  4510 ;; Registers used:
  4511 ;;		wreg
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;Total ram usage:        0 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 1
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_MRF24IsNewMsg
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text31
  4532   001CD2                     __ptext31:
  4533                           	callstack 0
  4534   001CD2                     _IsMRF24Interrup:
  4535                           	callstack 28
  4536   001CD2                     
  4537                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  4538   001CD2  B081               	btfsc	129,0,c	;volatile
  4539   001CD4  EF6E  F00E         	goto	u141
  4540   001CD8  EF71  F00E         	goto	u140
  4541   001CDC                     u141:
  4542   001CDC  0E01               	movlw	1
  4543   001CDE  EF72  F00E         	goto	u146
  4544   001CE2                     u140:
  4545   001CE2  0E00               	movlw	0
  4546   001CE4                     u146:
  4547   001CE4  0012               	return		;funcret
  4548   001CE6                     __end_of_IsMRF24Interrup:
  4549                           	callstack 0
  4550                           
  4551 ;; *************** function _MRF24GetMensajeEntrada *****************
  4552 ;; Defined at:
  4553 ;;		line 435 in file "drivers/scr/API_MRF24J40.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;		None
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;		None
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    0[COMRAM] PTR unsigned char 
  4560 ;; Registers used:
  4561 ;;		wreg, status,2, status,0
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4567 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;Total ram usage:        2 bytes
  4572 ;; Hardware stack levels used: 1
  4573 ;; Hardware stack levels required when called: 1
  4574 ;; This function calls:
  4575 ;;		Nothing
  4576 ;; This function is called by:
  4577 ;;		_main
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text32
  4582   001D4A                     __ptext32:
  4583                           	callstack 0
  4584   001D4A                     _MRF24GetMensajeEntrada:
  4585                           	callstack 29
  4586   001D4A                     
  4587                           ;drivers/scr/API_MRF24J40.c: 437:  return data_in_s.buffer;
  4588   001D4A  0E60               	movlw	_data_in_s& (0+255)
  4589   001D4C  0F06               	addlw	6
  4590   001D4E  0012               	return		;funcret
  4591   001D50                     __end_of_MRF24GetMensajeEntrada:
  4592                           	callstack 0
  4593                           
  4594 ;; *************** function _DebounceFSMUpdate *****************
  4595 ;; Defined at:
  4596 ;;		line 34 in file "drivers/scr/API_debounce.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  antirrebote_    1   14[COMRAM] PTR struct .
  4599 ;;		 -> main@boton1(11), 
  4600 ;;  estado_pin      1   15[COMRAM] _Bool 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;		None
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      enum E2763
  4605 ;; Registers used:
  4606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4615 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;Total ram usage:        4 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 3
  4619 ;; This function calls:
  4620 ;;		_DebounceFSMInit
  4621 ;;		_DelayRead
  4622 ;; This function is called by:
  4623 ;;		_main
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text33
  4628   00151A                     __ptext33:
  4629                           	callstack 0
  4630   00151A                     _DebounceFSMUpdate:
  4631                           	callstack 27
  4632   00151A                     
  4633                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  4634   00151A  EF07  F00B         	goto	l2225
  4635   00151E                     l2173:
  4636                           
  4637                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  4638   00151E  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4639   001520  A4D8               	btfss	status,2,c
  4640   001522  EF95  F00A         	goto	u751
  4641   001526  EF97  F00A         	goto	u750
  4642   00152A                     u751:
  4643   00152A  EF29  F00B         	goto	l2227
  4644   00152E                     u750:
  4645   00152E                     
  4646                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  4647   00152E  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4648   001530  6ED9               	movwf	fsr2l,c
  4649   001532  6ADA               	clrf	fsr2h,c
  4650   001534  0E01               	movlw	1
  4651   001536  26D9               	addwf	fsr2l,f,c
  4652   001538  0E01               	movlw	1
  4653   00153A  6EDF               	movwf	indf2,c
  4654   00153C  EF29  F00B         	goto	l2227
  4655   001540                     l2177:
  4656                           
  4657                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4658   001540  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4659   001542  0F02               	addlw	2
  4660   001544  6E02               	movwf	DelayRead@delay^0,c
  4661   001546  EC2B  F00B         	call	_DelayRead	;wreg free
  4662   00154A  0900               	iorlw	0
  4663   00154C  B4D8               	btfsc	status,2,c
  4664   00154E  EFAB  F00A         	goto	u761
  4665   001552  EFAD  F00A         	goto	u760
  4666   001556                     u761:
  4667   001556  EF29  F00B         	goto	l2227
  4668   00155A                     u760:
  4669   00155A                     
  4670                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  4671   00155A  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4672   00155C  A4D8               	btfss	status,2,c
  4673   00155E  EFB3  F00A         	goto	u771
  4674   001562  EFB5  F00A         	goto	u770
  4675   001566                     u771:
  4676   001566  EFBF  F00A         	goto	l2189
  4677   00156A                     u770:
  4678   00156A                     
  4679                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4680   00156A  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4681   00156C  6ED9               	movwf	fsr2l,c
  4682   00156E  6ADA               	clrf	fsr2h,c
  4683   001570  0E01               	movlw	1
  4684   001572  26D9               	addwf	fsr2l,f,c
  4685   001574  0E02               	movlw	2
  4686   001576  6EDF               	movwf	indf2,c
  4687   001578                     
  4688                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  4689   001578  0E01               	movlw	1
  4690   00157A  EF2A  F00B         	goto	l249
  4691   00157E                     l2189:
  4692                           
  4693                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4694   00157E  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4695   001580  6ED9               	movwf	fsr2l,c
  4696   001582  6ADA               	clrf	fsr2h,c
  4697   001584  0E01               	movlw	1
  4698   001586  26D9               	addwf	fsr2l,f,c
  4699   001588  6ADF               	clrf	indf2,c
  4700   00158A                     l2191:
  4701                           
  4702                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  4703   00158A  0E04               	movlw	4
  4704   00158C  EF2A  F00B         	goto	l249
  4705   001590                     l2195:
  4706                           
  4707                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4708   001590  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4709   001592  0F02               	addlw	2
  4710   001594  6E02               	movwf	DelayRead@delay^0,c
  4711   001596  EC2B  F00B         	call	_DelayRead	;wreg free
  4712   00159A  0900               	iorlw	0
  4713   00159C  B4D8               	btfsc	status,2,c
  4714   00159E  EFD3  F00A         	goto	u781
  4715   0015A2  EFD5  F00A         	goto	u780
  4716   0015A6                     u781:
  4717   0015A6  EF29  F00B         	goto	l2227
  4718   0015AA                     u780:
  4719   0015AA                     
  4720                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  4721   0015AA  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4722   0015AC  B4D8               	btfsc	status,2,c
  4723   0015AE  EFDB  F00A         	goto	u791
  4724   0015B2  EFDD  F00A         	goto	u790
  4725   0015B6                     u791:
  4726   0015B6  EFE6  F00A         	goto	l2207
  4727   0015BA                     u790:
  4728   0015BA                     
  4729                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4730   0015BA  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4731   0015BC  6ED9               	movwf	fsr2l,c
  4732   0015BE  6ADA               	clrf	fsr2h,c
  4733   0015C0  0E01               	movlw	1
  4734   0015C2  26D9               	addwf	fsr2l,f,c
  4735   0015C4  6ADF               	clrf	indf2,c
  4736   0015C6                     
  4737                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  4738   0015C6  0E02               	movlw	2
  4739   0015C8  EF2A  F00B         	goto	l249
  4740   0015CC                     l2207:
  4741                           
  4742                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4743   0015CC  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4744   0015CE  6ED9               	movwf	fsr2l,c
  4745   0015D0  6ADA               	clrf	fsr2h,c
  4746   0015D2  0E01               	movlw	1
  4747   0015D4  26D9               	addwf	fsr2l,f,c
  4748   0015D6  0E02               	movlw	2
  4749   0015D8  6EDF               	movwf	indf2,c
  4750   0015DA  EFC5  F00A         	goto	l2191
  4751   0015DE                     l2213:
  4752                           
  4753                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  4754   0015DE  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4755   0015E0  B4D8               	btfsc	status,2,c
  4756   0015E2  EFF5  F00A         	goto	u801
  4757   0015E6  EFF7  F00A         	goto	u800
  4758   0015EA                     u801:
  4759   0015EA  EF29  F00B         	goto	l2227
  4760   0015EE                     u800:
  4761   0015EE                     
  4762                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  4763   0015EE  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4764   0015F0  6ED9               	movwf	fsr2l,c
  4765   0015F2  6ADA               	clrf	fsr2h,c
  4766   0015F4  0E01               	movlw	1
  4767   0015F6  26D9               	addwf	fsr2l,f,c
  4768   0015F8  0E03               	movlw	3
  4769   0015FA  6EDF               	movwf	indf2,c
  4770   0015FC  EF29  F00B         	goto	l2227
  4771   001600                     l2217:
  4772                           
  4773                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  4774   001600  C00F  F006         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  4775   001604  EC7D  F00D         	call	_DebounceFSMInit	;wreg free
  4776   001608                     
  4777                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  4778   001608  0E00               	movlw	0
  4779   00160A  EF2A  F00B         	goto	l249
  4780   00160E                     l2225:
  4781   00160E  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4782   001610  6ED9               	movwf	fsr2l,c
  4783   001612  6ADA               	clrf	fsr2h,c
  4784   001614  0E01               	movlw	1
  4785   001616  26D9               	addwf	fsr2l,f,c
  4786   001618  50DF               	movf	indf2,w,c
  4787   00161A  6E11               	movwf	??_DebounceFSMUpdate^0,c
  4788   00161C  6A12               	clrf	(??_DebounceFSMUpdate+1)^0,c
  4789                           
  4790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4791                           ; Switch size 1, requested type "simple"
  4792                           ; Number of cases is 1, Range of values is 0 to 0
  4793                           ; switch strategies available:
  4794                           ; Name         Instructions Cycles
  4795                           ; simple_byte            4     3 (average)
  4796                           ;	Chosen strategy is simple_byte
  4797   00161E  5012               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  4798   001620  0A00               	xorlw	0	; case 0
  4799   001622  B4D8               	btfsc	status,2,c
  4800   001624  EF16  F00B         	goto	l2427
  4801   001628  EF00  F00B         	goto	l2217
  4802   00162C                     l2427:
  4803                           
  4804                           ; Switch size 1, requested type "simple"
  4805                           ; Number of cases is 4, Range of values is 0 to 3
  4806                           ; switch strategies available:
  4807                           ; Name         Instructions Cycles
  4808                           ; simple_byte           13     7 (average)
  4809                           ;	Chosen strategy is simple_byte
  4810   00162C  5011               	movf	??_DebounceFSMUpdate^0,w,c
  4811   00162E  0A00               	xorlw	0	; case 0
  4812   001630  B4D8               	btfsc	status,2,c
  4813   001632  EF8F  F00A         	goto	l2173
  4814   001636  0A01               	xorlw	1	; case 1
  4815   001638  B4D8               	btfsc	status,2,c
  4816   00163A  EFA0  F00A         	goto	l2177
  4817   00163E  0A03               	xorlw	3	; case 2
  4818   001640  B4D8               	btfsc	status,2,c
  4819   001642  EFEF  F00A         	goto	l2213
  4820   001646  0A01               	xorlw	1	; case 3
  4821   001648  B4D8               	btfsc	status,2,c
  4822   00164A  EFC8  F00A         	goto	l2195
  4823   00164E  EF00  F00B         	goto	l2217
  4824   001652                     l2227:
  4825                           
  4826                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  4827   001652  0E03               	movlw	3
  4828   001654                     l249:
  4829   001654  0012               	return		;funcret
  4830   001656                     __end_of_DebounceFSMUpdate:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function _DelayRead *****************
  4834 ;; Defined at:
  4835 ;;		line 34 in file "drivers/scr/API_delay.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  delay           1    1[COMRAM] PTR struct .
  4838 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      _Bool 
  4843 ;; Registers used:
  4844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4850 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4852 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4853 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4854 ;;Total ram usage:       13 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; Hardware stack levels required when called: 2
  4857 ;; This function calls:
  4858 ;;		_DelayIsRunning
  4859 ;; This function is called by:
  4860 ;;		_InicializoMRF24
  4861 ;;		_DebounceFSMUpdate
  4862 ;;		_main
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text34
  4867   001656                     __ptext34:
  4868                           	callstack 0
  4869   001656                     _DelayRead:
  4870                           	callstack 26
  4871   001656                     
  4872                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  4873   001656  C002  F001         	movff	DelayRead@delay,DelayIsRunning@delay
  4874   00165A  EC96  F00E         	call	_DelayIsRunning	;wreg free
  4875   00165E  0900               	iorlw	0
  4876   001660  A4D8               	btfss	status,2,c
  4877   001662  EF35  F00B         	goto	u581
  4878   001666  EF37  F00B         	goto	u580
  4879   00166A                     u581:
  4880   00166A  EF4B  F00B         	goto	l1891
  4881   00166E                     u580:
  4882   00166E                     
  4883                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  4884   00166E  5002               	movf	DelayRead@delay^0,w,c
  4885   001670  6ED9               	movwf	fsr2l,c
  4886   001672  6ADA               	clrf	fsr2h,c
  4887   001674  C038  FFDE         	movff	_timeStamp,postinc2
  4888   001678  C039  FFDE         	movff	_timeStamp+1,postinc2
  4889   00167C  C03A  FFDE         	movff	_timeStamp+2,postinc2
  4890   001680  C03B  FFDE         	movff	_timeStamp+3,postinc2
  4891   001684                     
  4892                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  4893   001684  5002               	movf	DelayRead@delay^0,w,c
  4894   001686  6ED9               	movwf	fsr2l,c
  4895   001688  6ADA               	clrf	fsr2h,c
  4896   00168A  0E08               	movlw	8
  4897   00168C  26D9               	addwf	fsr2l,f,c
  4898   00168E  0E01               	movlw	1
  4899   001690  6EDF               	movwf	indf2,c
  4900                           
  4901                           ;drivers/scr/API_delay.c: 40:  } else {
  4902   001692  EF7F  F00B         	goto	l1899
  4903   001696                     l1891:
  4904                           
  4905                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  4906   001696  5002               	movf	DelayRead@delay^0,w,c
  4907   001698  6ED9               	movwf	fsr2l,c
  4908   00169A  6ADA               	clrf	fsr2h,c
  4909   00169C  0E04               	movlw	4
  4910   00169E  26D9               	addwf	fsr2l,f,c
  4911   0016A0  5002               	movf	DelayRead@delay^0,w,c
  4912   0016A2  6EE1               	movwf	fsr1l,c
  4913   0016A4  6AE2               	clrf	fsr1h,c
  4914   0016A6  CFE6 F007          	movff	postinc1,??_DelayRead+4
  4915   0016AA  CFE6 F008          	movff	postinc1,??_DelayRead+5
  4916   0016AE  CFE6 F009          	movff	postinc1,??_DelayRead+6
  4917   0016B2  CFE6 F00A          	movff	postinc1,??_DelayRead+7
  4918   0016B6  5007               	movf	(??_DelayRead+4)^0,w,c
  4919   0016B8  5C38               	subwf	_timeStamp^0,w,c
  4920   0016BA  6E0B               	movwf	(??_DelayRead+8)^0,c
  4921   0016BC  5008               	movf	(??_DelayRead+5)^0,w,c
  4922   0016BE  5839               	subwfb	(_timeStamp+1)^0,w,c
  4923   0016C0  6E0C               	movwf	(??_DelayRead+9)^0,c
  4924   0016C2  5009               	movf	(??_DelayRead+6)^0,w,c
  4925   0016C4  583A               	subwfb	(_timeStamp+2)^0,w,c
  4926   0016C6  6E0D               	movwf	(??_DelayRead+10)^0,c
  4927   0016C8  500A               	movf	(??_DelayRead+7)^0,w,c
  4928   0016CA  583B               	subwfb	(_timeStamp+3)^0,w,c
  4929   0016CC  6E0E               	movwf	(??_DelayRead+11)^0,c
  4930   0016CE  50DE               	movf	postinc2,w,c
  4931   0016D0  5C0B               	subwf	(??_DelayRead+8)^0,w,c
  4932   0016D2  50DE               	movf	postinc2,w,c
  4933   0016D4  580C               	subwfb	(??_DelayRead+9)^0,w,c
  4934   0016D6  50DE               	movf	postinc2,w,c
  4935   0016D8  580D               	subwfb	(??_DelayRead+10)^0,w,c
  4936   0016DA  50DE               	movf	postinc2,w,c
  4937   0016DC  580E               	subwfb	(??_DelayRead+11)^0,w,c
  4938   0016DE  A0D8               	btfss	status,0,c
  4939   0016E0  EF74  F00B         	goto	u591
  4940   0016E4  EF76  F00B         	goto	u590
  4941   0016E8                     u591:
  4942   0016E8  EF7F  F00B         	goto	l1899
  4943   0016EC                     u590:
  4944   0016EC                     
  4945                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  4946   0016EC  5002               	movf	DelayRead@delay^0,w,c
  4947   0016EE  6ED9               	movwf	fsr2l,c
  4948   0016F0  6ADA               	clrf	fsr2h,c
  4949   0016F2  0E08               	movlw	8
  4950   0016F4  26D9               	addwf	fsr2l,f,c
  4951   0016F6  6ADF               	clrf	indf2,c
  4952   0016F8                     
  4953                           ;drivers/scr/API_delay.c: 45:    return 1;
  4954   0016F8  0E01               	movlw	1
  4955   0016FA  EF80  F00B         	goto	l223
  4956   0016FE                     l1899:
  4957                           
  4958                           ;drivers/scr/API_delay.c: 48:  return 0;
  4959   0016FE  0E00               	movlw	0
  4960   001700                     l223:
  4961   001700  0012               	return		;funcret
  4962   001702                     __end_of_DelayRead:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function _DelayIsRunning *****************
  4966 ;; Defined at:
  4967 ;;		line 83 in file "drivers/scr/API_delay.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;  delay           1    0[COMRAM] PTR struct .
  4970 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4971 ;; Auto vars:     Size  Location     Type
  4972 ;;		None
  4973 ;; Return value:  Size  Location     Type
  4974 ;;                  1    wreg      _Bool 
  4975 ;; Registers used:
  4976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4977 ;; Tracked objects:
  4978 ;;		On entry : 0/0
  4979 ;;		On exit  : 0/0
  4980 ;;		Unchanged: 0/0
  4981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4982 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;Total ram usage:        1 bytes
  4987 ;; Hardware stack levels used: 1
  4988 ;; Hardware stack levels required when called: 1
  4989 ;; This function calls:
  4990 ;;		Nothing
  4991 ;; This function is called by:
  4992 ;;		_DelayRead
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text35
  4997   001D2C                     __ptext35:
  4998                           	callstack 0
  4999   001D2C                     _DelayIsRunning:
  5000                           	callstack 26
  5001   001D2C                     
  5002                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  5003   001D2C  5001               	movf	DelayIsRunning@delay^0,w,c
  5004   001D2E  6ED9               	movwf	fsr2l,c
  5005   001D30  6ADA               	clrf	fsr2h,c
  5006   001D32  0E08               	movlw	8
  5007   001D34  26D9               	addwf	fsr2l,f,c
  5008   001D36  50DF               	movf	indf2,w,c
  5009   001D38  0012               	return		;funcret
  5010   001D3A                     __end_of_DelayIsRunning:
  5011                           	callstack 0
  5012                           
  5013 ;; *************** function _DebounceFSMInit *****************
  5014 ;; Defined at:
  5015 ;;		line 19 in file "drivers/scr/API_debounce.c"
  5016 ;; Parameters:    Size  Location     Type
  5017 ;;  antirrebote_    1    5[COMRAM] PTR struct .
  5018 ;;		 -> main@boton1(11), 
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5030 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5034 ;;Total ram usage:        1 bytes
  5035 ;; Hardware stack levels used: 1
  5036 ;; Hardware stack levels required when called: 2
  5037 ;; This function calls:
  5038 ;;		_DelayInit
  5039 ;; This function is called by:
  5040 ;;		_DebounceFSMUpdate
  5041 ;;		_main
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045                           	psect	text36
  5046   001AFA                     __ptext36:
  5047                           	callstack 0
  5048   001AFA                     _DebounceFSMInit:
  5049                           	callstack 27
  5050   001AFA                     
  5051                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  5052   001AFA  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5053   001AFC  6ED9               	movwf	fsr2l,c
  5054   001AFE  6ADA               	clrf	fsr2h,c
  5055   001B00  0E01               	movlw	1
  5056   001B02  26D9               	addwf	fsr2l,f,c
  5057   001B04  6ADF               	clrf	indf2,c
  5058   001B06                     
  5059                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  5060   001B06  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5061   001B08  0F02               	addlw	2
  5062   001B0A  6E01               	movwf	DelayInit@delay^0,c
  5063   001B0C  0E28               	movlw	40
  5064   001B0E  6E02               	movwf	DelayInit@duration^0,c
  5065   001B10  0E00               	movlw	0
  5066   001B12  6E03               	movwf	(DelayInit@duration+1)^0,c
  5067   001B14  0E00               	movlw	0
  5068   001B16  6E04               	movwf	(DelayInit@duration+2)^0,c
  5069   001B18  0E00               	movlw	0
  5070   001B1A  6E05               	movwf	(DelayInit@duration+3)^0,c
  5071   001B1C  ECC1  F00D         	call	_DelayInit	;wreg free
  5072   001B20                     
  5073                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  5074   001B20  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5075   001B22  6ED9               	movwf	fsr2l,c
  5076   001B24  6ADA               	clrf	fsr2h,c
  5077   001B26  6ADF               	clrf	indf2,c
  5078   001B28  0012               	return		;funcret
  5079   001B2A                     __end_of_DebounceFSMInit:
  5080                           	callstack 0
  5081                           
  5082 ;; *************** function _DelayInit *****************
  5083 ;; Defined at:
  5084 ;;		line 22 in file "drivers/scr/API_delay.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  delay           1    0[COMRAM] PTR struct .
  5087 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5088 ;;  duration        4    1[COMRAM] unsigned long 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      void 
  5093 ;; Registers used:
  5094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5100 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;Total ram usage:        5 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_InicializoMRF24
  5111 ;;		_DebounceFSMInit
  5112 ;;		_main
  5113 ;; This function uses a non-reentrant model
  5114 ;;
  5115                           
  5116                           	psect	text37
  5117   001B82                     __ptext37:
  5118                           	callstack 0
  5119   001B82                     _DelayInit:
  5120                           	callstack 27
  5121   001B82                     
  5122                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  5123   001B82  5001               	movf	DelayInit@delay^0,w,c
  5124   001B84  6ED9               	movwf	fsr2l,c
  5125   001B86  6ADA               	clrf	fsr2h,c
  5126   001B88  0E04               	movlw	4
  5127   001B8A  26D9               	addwf	fsr2l,f,c
  5128   001B8C  C002  FFDE         	movff	DelayInit@duration,postinc2
  5129   001B90  C003  FFDE         	movff	DelayInit@duration+1,postinc2
  5130   001B94  C004  FFDE         	movff	DelayInit@duration+2,postinc2
  5131   001B98  C005  FFDE         	movff	DelayInit@duration+3,postinc2
  5132                           
  5133                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  5134   001B9C  5001               	movf	DelayInit@delay^0,w,c
  5135   001B9E  6ED9               	movwf	fsr2l,c
  5136   001BA0  6ADA               	clrf	fsr2h,c
  5137   001BA2  0E08               	movlw	8
  5138   001BA4  26D9               	addwf	fsr2l,f,c
  5139   001BA6  6ADF               	clrf	indf2,c
  5140   001BA8  0012               	return		;funcret
  5141   001BAA                     __end_of_DelayInit:
  5142                           	callstack 0
  5143                           
  5144 ;; *************** function _BoardInit *****************
  5145 ;; Defined at:
  5146 ;;		line 21 in file "hardware_config.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used: 1
  5166 ;; Hardware stack levels required when called: 2
  5167 ;; This function calls:
  5168 ;;		_SPIInit
  5169 ;; This function is called by:
  5170 ;;		_main
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text38
  5175   0018F8                     __ptext38:
  5176                           	callstack 0
  5177   0018F8                     _BoardInit:
  5178                           	callstack 28
  5179   0018F8                     
  5180                           ;hardware_config.c: 23:     PORTA = 0;
  5181   0018F8  6A80               	clrf	128,c	;volatile
  5182                           
  5183                           ;hardware_config.c: 24:     PORTB = 0;
  5184   0018FA  6A81               	clrf	129,c	;volatile
  5185                           
  5186                           ;hardware_config.c: 25:     PORTC = 0;
  5187   0018FC  6A82               	clrf	130,c	;volatile
  5188                           
  5189                           ;hardware_config.c: 26:     PORTD = 0;
  5190   0018FE  6A83               	clrf	131,c	;volatile
  5191                           
  5192                           ;hardware_config.c: 27:     PORTE = 0;
  5193   001900  6A84               	clrf	132,c	;volatile
  5194                           
  5195                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  5196   001902  8C93               	bsf	147,6,c	;volatile
  5197                           
  5198                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  5199   001904  8E93               	bsf	147,7,c	;volatile
  5200                           
  5201                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  5202   001906  9496               	bcf	150,2,c	;volatile
  5203                           
  5204                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  5205   001908  9096               	bcf	150,0,c	;volatile
  5206                           
  5207                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  5208   00190A  9296               	bcf	150,1,c	;volatile
  5209                           
  5210                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  5211   00190C  8494               	bsf	148,2,c	;volatile
  5212                           
  5213                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  5214   00190E  848D               	bsf	141,2,c	;volatile
  5215                           
  5216                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  5217   001910  808D               	bsf	141,0,c	;volatile
  5218                           
  5219                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  5220   001912  828D               	bsf	141,1,c	;volatile
  5221                           
  5222                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  5223   001914  8093               	bsf	147,0,c	;volatile
  5224                           
  5225                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  5226   001916  9C94               	bcf	148,6,c	;volatile
  5227                           
  5228                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  5229   001918  9E94               	bcf	148,7,c	;volatile
  5230                           
  5231                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  5232   00191A  9895               	bcf	149,4,c	;volatile
  5233                           
  5234                           ;hardware_config.c: 45:     IPEN = 0;
  5235   00191C  9ED0               	bcf	4048,7,c	;volatile
  5236                           
  5237                           ;hardware_config.c: 46:  GIE = 1;
  5238   00191E  8EF2               	bsf	4082,7,c	;volatile
  5239                           
  5240                           ;hardware_config.c: 47:  PEIE = 1;
  5241   001920  8CF2               	bsf	4082,6,c	;volatile
  5242                           
  5243                           ;hardware_config.c: 48:     INT0E = 0;
  5244   001922  98F2               	bcf	4082,4,c	;volatile
  5245                           
  5246                           ;hardware_config.c: 49:  RBIE = 0;
  5247   001924  96F2               	bcf	4082,3,c	;volatile
  5248                           
  5249                           ;hardware_config.c: 50:  T0IE = 0;
  5250   001926  9AF2               	bcf	4082,5,c	;volatile
  5251                           
  5252                           ;hardware_config.c: 51:  TMR1IE = 1;
  5253   001928  809D               	bsf	3997,0,c	;volatile
  5254                           
  5255                           ;hardware_config.c: 52:  TMR2IE = 0;
  5256   00192A  929D               	bcf	3997,1,c	;volatile
  5257                           
  5258                           ;hardware_config.c: 53:  CCP1IE = 0;
  5259   00192C  949D               	bcf	3997,2,c	;volatile
  5260                           
  5261                           ;hardware_config.c: 54:  CCP2IE = 0;
  5262   00192E  90A0               	bcf	4000,0,c	;volatile
  5263                           
  5264                           ;hardware_config.c: 55:  EEIE = 0;
  5265   001930  98A0               	bcf	4000,4,c	;volatile
  5266                           
  5267                           ;hardware_config.c: 56:  SSPIE = 0;
  5268   001932  969D               	bcf	3997,3,c	;volatile
  5269                           
  5270                           ;hardware_config.c: 57:  BCLIE = 0;
  5271   001934  96A0               	bcf	4000,3,c	;volatile
  5272                           
  5273                           ;hardware_config.c: 58:  ADIE = 0;
  5274   001936  9C9D               	bcf	3997,6,c	;volatile
  5275                           
  5276                           ;hardware_config.c: 59:  RBIE = 0;
  5277   001938  96F2               	bcf	4082,3,c	;volatile
  5278                           
  5279                           ;hardware_config.c: 60:  RCIE = 0;
  5280   00193A  9A9D               	bcf	3997,5,c	;volatile
  5281   00193C                     
  5282                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  5283   00193C  0E72               	movlw	114
  5284   00193E  6ED3               	movwf	211,c	;volatile
  5285                           
  5286                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  5287   001940  0EDF               	movlw	223
  5288   001942  6E9B               	movwf	155,c	;volatile
  5289   001944                     
  5290                           ;hardware_config.c: 63:     RBPU = 1;
  5291   001944  8EF1               	bsf	4081,7,c	;volatile
  5292   001946                     
  5293                           ;hardware_config.c: 66:     T1RD16 = 0;
  5294   001946  9ECD               	bcf	4045,7,c	;volatile
  5295   001948                     
  5296                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  5297   001948  88CD               	bsf	4045,4,c	;volatile
  5298   00194A                     
  5299                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  5300   00194A  8ACD               	bsf	4045,5,c	;volatile
  5301   00194C                     
  5302                           ;hardware_config.c: 69:  T1SYNC = 0;
  5303   00194C  94CD               	bcf	4045,2,c	;volatile
  5304   00194E                     
  5305                           ;hardware_config.c: 70:  T1OSCEN = 0;
  5306   00194E  96CD               	bcf	4045,3,c	;volatile
  5307   001950                     
  5308                           ;hardware_config.c: 71:  TMR1CS = 0;
  5309   001950  92CD               	bcf	4045,1,c	;volatile
  5310   001952                     
  5311                           ;hardware_config.c: 72:  TMR1ON = 1;
  5312   001952  80CD               	bsf	4045,0,c	;volatile
  5313   001954                     
  5314                           ;hardware_config.c: 75:     SPIInit();
  5315   001954  EC48  F00E         	call	_SPIInit	;wreg free
  5316   001958  0012               	return		;funcret
  5317   00195A                     __end_of_BoardInit:
  5318                           	callstack 0
  5319                           
  5320 ;; *************** function _SPIInit *****************
  5321 ;; Defined at:
  5322 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  5323 ;; Parameters:    Size  Location     Type
  5324 ;;		None
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;		None
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, status,2
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;Total ram usage:        0 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; Hardware stack levels required when called: 1
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_BoardInit
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text39
  5351   001C90                     __ptext39:
  5352                           	callstack 0
  5353   001C90                     _SPIInit:
  5354                           	callstack 28
  5355   001C90                     
  5356                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  5357   001C90  9694               	bcf	148,3,c	;volatile
  5358                           
  5359                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  5360   001C92  9A94               	bcf	148,5,c	;volatile
  5361                           
  5362                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  5363   001C94  8894               	bsf	148,4,c	;volatile
  5364                           
  5365                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  5366   001C96  8EC7               	bsf	199,7,c	;volatile
  5367                           
  5368                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  5369   001C98  8CC7               	bsf	199,6,c	;volatile
  5370   001C9A                     
  5371                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  5372   001C9A  0E01               	movlw	1
  5373   001C9C  6EC6               	movwf	198,c	;volatile
  5374   001C9E                     
  5375                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  5376   001C9E  8EC6               	bsf	198,7,c	;volatile
  5377   001CA0                     
  5378                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  5379   001CA0  9CC6               	bcf	198,6,c	;volatile
  5380   001CA2                     
  5381                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  5382   001CA2  8AC6               	bsf	198,5,c	;volatile
  5383   001CA4                     
  5384                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  5385   001CA4  98C6               	bcf	198,4,c	;volatile
  5386   001CA6  0012               	return		;funcret
  5387   001CA8                     __end_of_SPIInit:
  5388                           	callstack 0
  5389                           
  5390 ;; *************** function _isr *****************
  5391 ;; Defined at:
  5392 ;;		line 5 in file "drivers/inc/interrupciones.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;		None
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;		None
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		wreg, status,2, status,0
  5401 ;; Tracked objects:
  5402 ;;		On entry : 0/0
  5403 ;;		On exit  : 0/0
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5410 ;;Total ram usage:        0 bytes
  5411 ;; Hardware stack levels used: 1
  5412 ;; This function calls:
  5413 ;;		Nothing
  5414 ;; This function is called by:
  5415 ;;		Interrupt level 2
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	intcode
  5420   000008                     __pintcode:
  5421                           	callstack 0
  5422   000008                     _isr:
  5423                           	callstack 23
  5424                           
  5425                           ;incstack = 0
  5426   000008  823E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5427   00000A                     
  5428                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  5429   00000A  A09D               	btfss	3997,0,c	;volatile
  5430   00000C  EF0A  F000         	goto	i2u94_41
  5431   000010  EF0C  F000         	goto	i2u94_40
  5432   000014                     i2u94_41:
  5433   000014  EF1E  F000         	goto	i2l403
  5434   000018                     i2u94_40:
  5435   000018  A09E               	btfss	3998,0,c	;volatile
  5436   00001A  EF11  F000         	goto	i2u95_41
  5437   00001E  EF13  F000         	goto	i2u95_40
  5438   000022                     i2u95_41:
  5439   000022  EF1E  F000         	goto	i2l403
  5440   000026                     i2u95_40:
  5441   000026                     
  5442                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  5443   000026  909E               	bcf	3998,0,c	;volatile
  5444   000028                     
  5445                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  5446   000028  0EF7               	movlw	247
  5447   00002A  6ECE               	movwf	206,c	;volatile
  5448                           
  5449                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  5450   00002C  0EFD               	movlw	253
  5451   00002E  6ECF               	movwf	207,c	;volatile
  5452   000030                     
  5453                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  5454   000030  0E01               	movlw	1
  5455   000032  2638               	addwf	_timeStamp^0,f,c
  5456   000034  0E00               	movlw	0
  5457   000036  2239               	addwfc	(_timeStamp+1)^0,f,c
  5458   000038  223A               	addwfc	(_timeStamp+2)^0,f,c
  5459   00003A  223B               	addwfc	(_timeStamp+3)^0,f,c
  5460   00003C                     i2l403:
  5461   00003C  923E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5462   00003E  0011               	retfie		f
  5463   000040                     __end_of_isr:
  5464                           	callstack 0
  5465                           
  5466                           	psect	rparam
  5467   000001                     ___rparam_used  equ	1
  5468   000000                     ___param_bank   equ	0
  5469   000000                     __Lparam        equ	__Lrparam
  5470   000000                     __Hparam        equ	__Hrparam
  5471                           
  5472                           	psect	temp
  5473   00003E                     btemp:
  5474                           	callstack 0
  5475   00003E                     	ds	1
  5476   00003E                     int$flags       set	btemp
  5477   00003F                     wtemp8          set	btemp+1
  5478   00003F                     ttemp5          set	btemp+1
  5479   000042                     ttemp6          set	btemp+4
  5480   000046                     ttemp7          set	btemp+8
  5481                           
  5482                           	psect	idloc
  5483                           
  5484                           ;Config register IDLOC0 @ 0x200000
  5485                           ;	unspecified, using default values
  5486   200000                     	org	2097152
  5487   200000  FF                 	db	255
  5488                           
  5489                           ;Config register IDLOC1 @ 0x200001
  5490                           ;	unspecified, using default values
  5491   200001                     	org	2097153
  5492   200001  FF                 	db	255
  5493                           
  5494                           ;Config register IDLOC2 @ 0x200002
  5495                           ;	unspecified, using default values
  5496   200002                     	org	2097154
  5497   200002  FF                 	db	255
  5498                           
  5499                           ;Config register IDLOC3 @ 0x200003
  5500                           ;	unspecified, using default values
  5501   200003                     	org	2097155
  5502   200003  FF                 	db	255
  5503                           
  5504                           ;Config register IDLOC4 @ 0x200004
  5505                           ;	unspecified, using default values
  5506   200004                     	org	2097156
  5507   200004  FF                 	db	255
  5508                           
  5509                           ;Config register IDLOC5 @ 0x200005
  5510                           ;	unspecified, using default values
  5511   200005                     	org	2097157
  5512   200005  FF                 	db	255
  5513                           
  5514                           ;Config register IDLOC6 @ 0x200006
  5515                           ;	unspecified, using default values
  5516   200006                     	org	2097158
  5517   200006  FF                 	db	255
  5518                           
  5519                           ;Config register IDLOC7 @ 0x200007
  5520                           ;	unspecified, using default values
  5521   200007                     	org	2097159
  5522   200007  FF                 	db	255
  5523                           
  5524                           	psect	config
  5525                           
  5526                           ; Padding undefined space
  5527   300000                     	org	3145728
  5528   300000  FF                 	db	255
  5529                           
  5530                           ;Config register CONFIG1H @ 0x300001
  5531                           ;	Oscillator Selection bits
  5532                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5533                           ;	Fail-Safe Clock Monitor Enable bit
  5534                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5535                           ;	Internal/External Oscillator Switchover bit
  5536                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5537   300001                     	org	3145729
  5538   300001  08                 	db	8
  5539                           
  5540                           ;Config register CONFIG2L @ 0x300002
  5541                           ;	Power-up Timer Enable bit
  5542                           ;	PWRT = 0x1, unprogrammed default
  5543                           ;	Brown-out Reset Enable bits
  5544                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5545                           ;	Brown Out Reset Voltage bits
  5546                           ;	BORV = 22, VBOR set to 2.2 V nominal
  5547   300002                     	org	3145730
  5548   300002  11                 	db	17
  5549                           
  5550                           ;Config register CONFIG2H @ 0x300003
  5551                           ;	Watchdog Timer Enable bit
  5552                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5553                           ;	Watchdog Timer Postscale Select bits
  5554                           ;	WDTPS = 8192, 1:8192
  5555   300003                     	org	3145731
  5556   300003  1A                 	db	26
  5557                           
  5558                           ; Padding undefined space
  5559   300004                     	org	3145732
  5560   300004  FF                 	db	255
  5561                           
  5562                           ;Config register CONFIG3H @ 0x300005
  5563                           ;	CCP2 MUX bit
  5564                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5565                           ;	PORTB A/D Enable bit
  5566                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5567                           ;	Low-Power Timer1 Oscillator Enable bit
  5568                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5569                           ;	HFINTOSC Fast Start-up
  5570                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  5571                           ;	MCLR Pin Enable bit
  5572                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5573   300005                     	org	3145733
  5574   300005  01                 	db	1
  5575                           
  5576                           ;Config register CONFIG4L @ 0x300006
  5577                           ;	Stack Full/Underflow Reset Enable bit
  5578                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5579                           ;	Single-Supply ICSP Enable bit
  5580                           ;	LVP = OFF, Single-Supply ICSP disabled
  5581                           ;	Extended Instruction Set Enable bit
  5582                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5583                           ;	Background Debugger Enable bit
  5584                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5585   300006                     	org	3145734
  5586   300006  80                 	db	128
  5587                           
  5588                           ; Padding undefined space
  5589   300007                     	org	3145735
  5590   300007  FF                 	db	255
  5591                           
  5592                           ;Config register CONFIG5L @ 0x300008
  5593                           ;	Code Protection Block 0
  5594                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5595                           ;	Code Protection Block 1
  5596                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5597                           ;	Code Protection Block 2
  5598                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5599                           ;	Code Protection Block 3
  5600                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5601   300008                     	org	3145736
  5602   300008  0F                 	db	15
  5603                           
  5604                           ;Config register CONFIG5H @ 0x300009
  5605                           ;	Boot Block Code Protection bit
  5606                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5607                           ;	Data EEPROM Code Protection bit
  5608                           ;	CPD = OFF, Data EEPROM not code-protected
  5609   300009                     	org	3145737
  5610   300009  C0                 	db	192
  5611                           
  5612                           ;Config register CONFIG6L @ 0x30000A
  5613                           ;	Write Protection Block 0
  5614                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5615                           ;	Write Protection Block 1
  5616                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5617                           ;	Write Protection Block 2
  5618                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5619                           ;	Write Protection Block 3
  5620                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5621   30000A                     	org	3145738
  5622   30000A  0F                 	db	15
  5623                           
  5624                           ;Config register CONFIG6H @ 0x30000B
  5625                           ;	Configuration Register Write Protection bit
  5626                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5627                           ;	Boot Block Write Protection bit
  5628                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5629                           ;	Data EEPROM Write Protection bit
  5630                           ;	WRTD = OFF, Data EEPROM not write-protected
  5631   30000B                     	org	3145739
  5632   30000B  E0                 	db	224
  5633                           
  5634                           ;Config register CONFIG7L @ 0x30000C
  5635                           ;	unspecified, using default values
  5636                           ;	Table Read Protection Block 0
  5637                           ;	EBTR0 = 0x1, unprogrammed default
  5638                           ;	Table Read Protection Block 1
  5639                           ;	EBTR1 = 0x1, unprogrammed default
  5640                           ;	Table Read Protection Block 2
  5641                           ;	EBTR2 = 0x1, unprogrammed default
  5642                           ;	Table Read Protection Block 3
  5643                           ;	EBTR3 = 0x1, unprogrammed default
  5644   30000C                     	org	3145740
  5645   30000C  0F                 	db	15
  5646                           
  5647                           ;Config register CONFIG7H @ 0x30000D
  5648                           ;	Boot Block Table Read Protection bit
  5649                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5650   30000D                     	org	3145741
  5651   30000D  40                 	db	64
  5652                           tosu	equ	0xFFF
  5653                           tosh	equ	0xFFE
  5654                           tosl	equ	0xFFD
  5655                           stkptr	equ	0xFFC
  5656                           pclatu	equ	0xFFB
  5657                           pclath	equ	0xFFA
  5658                           pcl	equ	0xFF9
  5659                           tblptru	equ	0xFF8
  5660                           tblptrh	equ	0xFF7
  5661                           tblptrl	equ	0xFF6
  5662                           tablat	equ	0xFF5
  5663                           prodh	equ	0xFF4
  5664                           prodl	equ	0xFF3
  5665                           indf0	equ	0xFEF
  5666                           postinc0	equ	0xFEE
  5667                           postdec0	equ	0xFED
  5668                           preinc0	equ	0xFEC
  5669                           plusw0	equ	0xFEB
  5670                           fsr0h	equ	0xFEA
  5671                           fsr0l	equ	0xFE9
  5672                           wreg	equ	0xFE8
  5673                           indf1	equ	0xFE7
  5674                           postinc1	equ	0xFE6
  5675                           postdec1	equ	0xFE5
  5676                           preinc1	equ	0xFE4
  5677                           plusw1	equ	0xFE3
  5678                           fsr1h	equ	0xFE2
  5679                           fsr1l	equ	0xFE1
  5680                           bsr	equ	0xFE0
  5681                           indf2	equ	0xFDF
  5682                           postinc2	equ	0xFDE
  5683                           postdec2	equ	0xFDD
  5684                           preinc2	equ	0xFDC
  5685                           plusw2	equ	0xFDB
  5686                           fsr2h	equ	0xFDA
  5687                           fsr2l	equ	0xFD9
  5688                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    24
    Data        0
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      61
    BANK0           160      0      90
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    data_out_s$buffer	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DelayInit@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayIsRunning@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayRead@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), 

    MRF24SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    S288$buffer	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    sp__MRF24GetMensajeEntrada	PTR unsigned char  size(1) Largest target is 56
		 -> data_in_s(BANK0[56]), data_in_s$buffer(BANK0[50]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 34
		 -> data_config_s(BANK0[34]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 56
		 -> data_in_s(BANK0[56]), data_in_s$buffer(BANK0[50]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_10(CODE[8]), STR_13(CODE[8]), STR_4(CODE[8]), STR_7(CODE[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 34
		 -> data_config_s(BANK0[34]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 34
		 -> data_config_s(BANK0[34]), 

    strncpy@s	PTR const unsigned char  size(1) Largest target is 16
		 -> default_mac_address(CODE[8]), default_security_key(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _strcmp->_MRF24GetMensajeEntrada
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24SetMensajeSalida->_strlen
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_InicializoMRF24
    _InicializoVariables->_strncpy
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _InicializoMRF24->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _GetShortAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _GetLongAddr->_Write2ByteSPIPort
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    5798
                                             27 COMRAM    22    22      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
             _MRF24GetMensajeEntrada
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
           _MRF24SetDireccionDestino
              _MRF24SetMensajeSalida
               _MRF24SetPANIDDestino
                _MRF24TransmitirDato
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     120
                                              2 COMRAM     3     1      2
             _MRF24GetMensajeEntrada (ARG)
 ---------------------------------------------------------------------------------
 (1) _MRF24TransmitirDato                                  7     7      0     855
                                             10 COMRAM     7     7      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24SetPANIDDestino                                 2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetMensajeSalida                                1     0      1     165
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      92
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetDireccionDestino                             2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   7     7      0     969
                                             10 COMRAM     7     7      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         1     1      0    2528
                                             26 COMRAM     1     1      0
                    _InicializoMRF24
                    _InicializoPines
                _InicializoVariables
                        _SetResetPin
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  0     0      0     147
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              6     2      4     147
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InicializoMRF24                                     12    12      0    2307
                                             14 COMRAM    12    12      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceMACAddress                                  1     1      0     279
                                              4 COMRAM     1     1      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetChannel                                           1     1      0     509
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     320
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     198
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetMensajeEntrada                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    4     2      2     610
                                             14 COMRAM     4     2      2
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (3) _DelayRead                                           13    12      1     160
                                              1 COMRAM    13    12      1
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (4) _DelayIsRunning                                       1     0      1      23
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      1     0      1     140
                                              5 COMRAM     1     0      1
                          _DelayInit
 ---------------------------------------------------------------------------------
 (3) _DelayInit                                            5     0      5      72
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24GetMensajeEntrada
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _InicializoMRF24
       _DelayInit
       _DelayRead
       _DelayReset
       _GetLongAddr
         _ReadByteSPIPort
           _SPIRead
         _SetCSPin
         _Write2ByteSPIPort
           _SPIWrite2Byte
             _SPIWriteByte
       _GetShortAddr
         _ReadByteSPIPort
         _SetCSPin
         _WriteByteSPIPort
           _SPIWriteByte
       _SetChannel
         _SetLongAddr
           _SetCSPin
           _Write2ByteSPIPort
           _WriteByteSPIPort
         _SetShortAddr
           _SetCSPin
           _WriteByteSPIPort
       _SetDeviceAddress
         _SetShortAddr
       _SetDeviceMACAddress
         _SetShortAddr
       _SetLongAddr
       _SetShortAddr
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
       _strncpy
     _SetResetPin
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _MRF24SetDireccionDestino
   _MRF24SetMensajeSalida
     _strlen
   _MRF24SetPANIDDestino
   _MRF24TransmitirDato
     _SetLongAddr
     _SetShortAddr
   _strcmp
     _MRF24GetMensajeEntrada (ARG)

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      90     56.2%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     49      61     64.9%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     157      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Wed Jul 23 22:16:47 2025

                         _SSPSTATbits 0FC7                                    l21 1CD0  
                                  l30 1D00                                    l24 1D2A  
                                  l33 1CE4                                    l42 1D48  
                                  l27 1CF2                                    l36 1D42  
                                  l39 1D0E                       _IsMRF24Interrup 1CD2  
                                  l99 1890                                    u55 1CF0  
                                  u56 1CF2                                    u65 1CFE  
                                  u66 1D00                         ?_MRF24J40Init 0001  
                                 l102 125A                                   l111 1C3A  
                                 l120 199C                                   l104 13D4  
                                 l201 1C8E                                   l210 1CBC  
                                 l114 1BF4                                   l123 1A90  
                                 l131 1B80                                   l204 1D1C  
                                 l140 1A1E                                   l117 19DE  
                                 l126 1B56                                   l134 1A58  
                                 l223 1700                                   l207 1CAC  
                                 l143 1C6E                                   l151 13EA  
                                 l232 1D38                                   l144 1C76  
                                 l152 1518                                   l217 1BA8  
                                 l170 1D4E                                   l147 1C50  
                                 l164 17A6                                   l148 1C58  
                                 l229 1C1A                                   l239 1B28  
                                 l159 1AF8                                   l249 1654  
                                 l195 1CA6                                   l198 1C80  
                                 l294 10B0                                   l387 1958  
                                 _GIE 7F97                                   u140 1CE2  
                                 u141 1CDC                                   u146 1CE4  
                                 u260 1AD6                                   u261 1AD2  
                                 u270 1AF0                                   u510 1C8E  
                                 u271 1AEC                                   u511 1C8A  
                                 u600 1B80                                   u601 1B7C  
                                 u530 1CBA                                   u531 1CB6  
                                 u620 127A                                   u700 1C4C  
                                 u525 1D28                                   u621 1276  
                                 u701 1C48                                   u526 1D2A  
                                 u630 1296                                   u550 17E2  
                                 u710 13E6                                   u615 1964  
                                 u631 1292                                   u551 17DE  
                                 u711 13E2                                   u800 15EE  
                                 u640 1394                                   u560 17F8  
                                 u720 14FE                                   u801 15EA  
                                 u545 19A8                                   u641 1390  
                                 u561 17F4                                   u721 14FA  
                                 u650 13AA                                   u570 1820  
                                 u730 1712                                   u810 18C0  
                                 u651 13A6                                   u571 181C  
                                 u731 170E                                   u811 18BC  
                                 u580 166E                                   u740 1790  
                                 u660 1AB8                                   u820 18D6  
                                 u900 11D8                                   u581 166A  
                                 u741 178C                                   u661 1AB4  
                                 u821 18D2                                   u901 11D4  
                                 u590 16EC                                   u750 152E  
                                 u670 19FA                                   u910 120A  
                                 u591 16E8                                   u751 152A  
                                 u671 19F6                                   u911 1206  
                                 u760 155A                                   u680 1A0A  
                                 u920 121C                                   u761 1556  
                                 u681 1A06                                   u921 1214  
                                 u770 156A                                   u690 1C6A  
                                 u850 10E6                                   u771 1566  
                                 u691 1C66                                   u851 10E0  
                                 u780 15AA                                   u860 112A  
                                 u781 15A6                                   u861 1126  
                                 u790 15BA                                   u870 114E  
                                 u791 15B6                                   u871 114A  
                                 u880 117C                                   u856 10E8  
                                 u881 1178                                   u938 121E  
                                 u890 11AA                                   u891 11A6  
                                 u967 1A2E                                   u977 1A46  
                                 u987 12A0                                   u997 1A84  
                                 _isr 0008                                   wreg 0FE8  
                 __end_of_GetLongAddr 199E                                  l1101 1820  
                                l2001 12E2                                  l2011 1332  
                                l2003 12F2                                  l2021 1364  
                                l2013 133C                                  l2005 1302  
                                l2101 142E                                  l2031 1398  
                                l2023 136C                                  l2015 1346  
                                l2007 1312                                  l2111 1456  
                                l2103 1430                                  l2201 15C6  
                                l2033 13AA                                  l2025 137C  
                                l2017 1350                                  l2009 1322  
                                l1161 1CE8                                  l2041 1A9A  
                                l2121 1484                                  l2113 1464  
                                l2105 1444                                  l2051 1B06  
                                l2035 13D2                                  l2019 135A  
                                l1091 1AC4                                  l2043 1A9C  
                                l2131 14A8                                  l2123 1486  
                                l2115 1466                                  l2107 1446  
                                l2053 1B20                                  l2213 15DE  
                                l1501 1ADC                                  l1165 1CF6  
                                l2061 1A3A                                  l2045 1AB8  
                                l2141 14FE                                  l2133 14AE  
                                l2125 1494                                  l2117 1474  
                                l2109 1454                                  l1085 18F6  
                                l2215 15EE                                  l2207 15CC  
                                l1503 1AF0                                  l2063 1A40  
                                l2055 1A20                                  l2039 1A92  
                                l2071 19FA                                  l2143 150C  
                                l2135 14CC                                  l2127 1496  
                                l2119 1476                                  l2311 1078  
                                l1601 1944                                  l2049 1AFA  
                                l2217 1600                                  l2225 160E  
                                l2065 1A52                                  l2057 1A24  
                                l2161 1760                                  l2153 1716  
                                l2073 1A0E                                  l2145 150E  
                                l2137 14CE                                  l2129 14A6  
                                l2241 18C0                                  l2321 10B6  
                                l2313 107C                                  l1611 194E  
                                l1603 1946                                  l2219 1608  
                                l2227 1652                                  l2171 151A  
                                l1507 1AF6                                  l2059 1A28  
                                l2163 1790                                  l2155 173E  
                                l2075 1A12                                  l2083 1C3C  
                                l2139 14D0                                  l2091 13EC  
                                l2243 18D6                                  l2235 1892  
                                l2323 10BE                                  l2331 10D2  
                                l2315 1080                                  l1381 1C90  
                                l1613 1950                                  l1605 1948  
                                l2181 156A                                  l2173 151E  
                                l1269 1CD2                                  l2157 1744  
                                l2149 1702                                  l2069 19E0  
                                l2093 13FC                                  l2237 1896  
                                l2341 1150                                  l2325 10C6  
                                l2333 1116                                  l2317 1098  
                                l2309 1070                                  l1391 1CA4  
                                l1383 1C9A                                  l1615 1952  
                                l1607 194A                                  l2191 158A  
                                l2183 1578                                  l2175 152E  
                                l2167 1D4A                                  l2159 175E  
                                l2079 1C5A                                  l2095 13FE  
                                l2087 13D6                                  l2239 189A  
                                l2351 11AA                                  l2343 115C  
                                l2335 112A                                  l2319 10A4  
                                l1385 1C9E                                  l1617 1954  
                                l1609 194C                                  l2177 1540  
                                l1801 1D02                                  l2097 1410  
                                l2361 11E6                                  l2353 11AC  
                                l2345 117C                                  l2337 112E  
                                l2425 1100                                  l1387 1CA0  
                                l2427 162C                                  l2195 1590  
                                l2179 155A                                  l1811 1D44  
                                l2099 141E                                  l2355 11B8  
                                l2347 117E                                  l2363 11EE  
                                l2339 114E                                  l1389 1CA2  
                                l2197 15AA                                  l2189 157E  
                                l1805 1CA8                                  l1821 1C2E  
                                l2357 11D8                                  l2349 118A  
                                l2365 11F2                                  l2199 15BA  
                                l1495 1AC6                                  l1807 1CBA  
                                l1831 19C6                                  l1823 1C34  
                                l1815 1C1E                                  l1903 1B2A  
                                l2367 120A                                  l2359 11DA  
                                l1497 1AD6                                  l1921 197C  
                                l1833 19D2                                  l1817 1C22  
                                l1913 1B5A                                  l1923 1982  
                                l1835 19D8                                  l1827 199E  
                                l1819 1C28                                  l1915 1B6E  
                                l1907 1B58                                  l1851 17E6  
                                l1843 17A8                                  l1597 18F8  
                                l1925 198E                                  l1829 19C0  
                                l1933 1A5A                                  l1917 1B70  
                                l1853 17FC                                  l1845 17B0  
                                l1599 193C                                  l1839 1D2C  
                                l1863 1BF6                                  l1927 1994  
                                l1919 195A                                  l1871 1BD2  
                                l1935 1A7E                                  l1855 1804  
                                l1847 17B6                                  l1951 1856  
                                l1943 1822                                  l1865 1C0C  
                                l1793 1D20                                  l1785 1C7A  
                                l1929 199A                                  l1881 1BF2  
                                l1873 1BDA                                  l1857 1806  
                                l1961 1878                                  l1953 1858  
                                l1945 184A                                  l1859 1B82  
                                l1891 1696                                  l1787 1C7C  
                                l1875 1BE0                                  l1939 1CBE  
                                l1971 188E                                  l1963 187A  
                                l1955 1860                                  l1947 1850  
                                l1893 16EC                                  l1885 1656  
                                l1789 1D10                                  l1797 1D3C  
                                l1877 1BE6                                  l1869 1BD2  
                                l1981 1262                                  l1965 187C  
                                l1957 1868                                  l1949 1854  
                                l1895 16F8                                  l1887 166E  
                                l1879 1BEC                                  l1991 12B0  
                                l1983 127A                                  l1975 1230  
                                l1967 1884                                  l1959 1870  
                                l1889 1684                                  l1993 12BA  
                                l1977 1248                                  l1969 188C  
                                l1899 16FE                                  l1995 12BE  
                                l1987 1280                                  l1979 1252  
                                l1997 12C2                                  l1989 1296  
                                l1999 12D2                                  _ADIE 7CEE  
                                ?_isr 0001                                  _EEIE 7D04  
                                STR_1 1066                                  STR_2 105E  
                                STR_3 1046                                  STR_4 1046  
                                STR_5 1019                                  STR_6 103E  
                                STR_7 103E                                  STR_8 1027  
                                STR_9 1056                                  _T0IE 7F95  
                                _IPEN 7E87                                  _PEIE 7F96  
                                _RBIE 7F93                                  _RCIE 7CED  
                                _RBPU 7F8F                          _SPIWriteByte 1C78  
                                _main 1070                       __end_of_SPIInit 1CA8  
                     __end_of_SPIRead 1CBE                                  fsr1h 0FE2  
                                fsr2h 0FDA                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                btemp 003E                         _MRF24IsNewMsg 1AC6  
                          _DelayReset 1BF6               GetShortAddr@reg_address 0004  
                                start 0040                     DelayInit@duration 0002  
                        ___param_bank 0000                     ??_ReadByteSPIPort 0001  
                               ??_isr 0001                        ??_MRF24J40Init 001B  
         __end_of_InicializoVariables 1892                         _SPIWrite2Byte 1D10  
    __end_of_MRF24SetDireccionDestino 1C78                                 ?_main 0001  
                               _BCLIE 7D03                                 STR_10 1056  
                               STR_11 1019                                 STR_12 104E  
                               STR_13 104E                                 STR_14 1027  
                               STR_15 1033                                 _INT0E 7F94  
                               i2l403 003C                  SetDeviceMACAddress@i 0005  
                               _TMR1H 0FCF                                 _TMR1L 0FCE  
                               _PORTA 0F80                                 _PORTB 0F81  
                               _PORTC 0F82                                 _PORTD 0F83  
                               _PORTE 0F84                                 _SSPIE 7CEB  
                __end_of_GetShortAddr 1BF6                       _InicializoMRF24 1230  
        MRF24SetMensajeSalida@mensaje 0004              ??_MRF24GetMensajeEntrada 0003  
                     _InicializoPines 1CBE               SetShortAddr@reg_address 0004  
                               tablat 0FF5                        ?_MRF24IsNewMsg 0001  
                               ttemp5 003F                                 ttemp6 0042  
                               ttemp7 0046                                 status 0FD8  
                               wtemp8 003F                       __end_of_strncpy 1822  
             __end_of_IsMRF24Interrup 1CE6                   _SetDeviceMACAddress 1B58  
                     __initialization 1BAA                          __end_of_main 1230  
DebounceFSMUpdate@antirrebote_boton_n 000F                        ?_SPIWrite2Byte 0002  
                    __end_of_SetCSPin 1D2C                           _GetLongAddr 195A  
                       ??_SetLongAddr 0009                                ??_main 001C  
                       __activetblptr 0002                         ??_SetResetPin 0001  
                ?_SetDeviceMACAddress 0001                            _SetChannel 1A5A  
       InicializoMRF24@delay_time_out 0012                     ?_SetDeviceAddress 0001  
               _MRF24SetMensajeSalida 19E0                                _CCP1IE 7CEA  
                              _CCP2IE 7D00                             ??_SPIInit 0001  
                           ??_SPIRead 0001                    ??_SetDeviceAddress 0005  
                              _T1RD16 7E6F                                _T1SYNC 7E6A  
                              i2l2381 0030                                i2l2373 000A  
                              i2l2375 0018                                i2l2377 0026  
                              i2l2379 0028                            _SetWakePin 1CE6  
                              _OSCCON 0FD3             MRF24SetPANIDDestino@panid 0001  
                              _TMR1IE 7CE8                                _TMR1IF 7CF0  
                              _TMR1CS 7E69                                _TMR2IE 7CE9  
                              _TMR1ON 7E68          __end_of_default_security_key 1011  
                              _SSPBUF 0FC9                           ?_DelayReset 0001  
                 DelayIsRunning@delay 0001               __end_of_InicializoMRF24 13D6  
                              clear_0 1BB0                                clear_1 1BBC  
                              isa$std 0001                        SetCSPin@estado 0001  
             __end_of_InicializoPines 1CD2                                _strcmp 1892  
                              _strlen 1A92                 ??_SetDeviceMACAddress 0005  
                        __mediumconst 0000              _MRF24SetDireccionDestino 1C5A  
                              tblptrh 0FF7                                tblptrl 0FF6  
                              tblptru 0FF8                   __end_of_SetLongAddr 19E0  
                  _MRF24ReciboPaquete 1702                      ??_DelayIsRunning 0002  
                           ??_strncpy 0005                       ??_MRF24IsNewMsg 0001  
                 __end_of_SetResetPin 1D02                 GetShortAddr@leido_spi 0003  
                   __end_of_DelayInit 1BAA                     __end_of_DelayRead 1702  
                __end_of_MRF24J40Init 1A5A                            __accesstop 0060  
             __end_of__initialization 1BC2                   ?_MRF24ReciboPaquete 0001  
         __end_of_MRF24TransmitirDato 151A                     __end_of_BoardInit 195A  
                      DelayInit@delay 0001                         ___rparam_used 0001  
                      DelayRead@delay 0002                      SetWakePin@estado 0001  
                    ?_IsMRF24Interrup 0001                         ?_SetShortAddr 0003  
                      __pcstackCOMRAM 0001                       ??_SPIWrite2Byte 0004  
                  _long_mac_address_e 003D                  ??_MRF24ReciboPaquete 000B  
              ?_MRF24SetMensajeSalida 0004                           ?_SetChannel 0001  
                          __pbssBANK0 0060                           ?_SetWakePin 0001  
                           ?_SetCSPin 0001                       _ReadByteSPIPort 1D44  
              InicializoMRF24@lectura 0011                            _data_out_s 0032  
                        _GetShortAddr 1BD0                _MRF24GetMensajeEntrada 1D4A  
                      ??_SetShortAddr 0004                      ?_InicializoMRF24 0001  
                         _SetLongAddr 199E                               _T1CKPS0 7E6C  
                             _T1CKPS1 7E6D                               ?_strcmp 0003  
                             ?_strlen 0001                      ?_InicializoPines 0001  
                _default_security_key 1001                               _T1OSCEN 7E6B  
                         _SetResetPin 1CF4          __end_of_MRF24SetPANIDDestino 1C5A  
                             _OSCTUNE 0F9B                               i2u94_40 0018  
                             i2u94_41 0014                               i2u95_40 0026  
                             i2u95_41 0022                               _SSPCON1 0FC6  
                             _SPIInit 1C90                               _SPIRead 1CA8  
                          ??_SetCSPin 0001                     SetShortAddr@valor 0003  
                             __Hparam 0000                               __Lparam 0000  
                   ??_DebounceFSMInit 0007                          __psmallconst 1000  
                             __pcinit 1BAA                          ?_GetLongAddr 0006  
                             __ramtop 1000                               __ptext0 1070  
                             __ptext1 1892                               __ptext2 13D6  
                             __ptext3 1C3C                               __ptext4 19E0  
                             __ptext5 1A92                               __ptext6 1C5A  
                             __ptext7 1702                               __ptext8 1A20  
                             __ptext9 1822                      _WriteByteSPIPort 1D3A  
             __end_of_ReadByteSPIPort 1D4A                               _strncpy 17A8  
                end_of_initialization 1BC2                         __Lmediumconst 0000  
                        ??_DelayReset 0002                   _default_mac_address 1011  
                             postinc0 0FEE                               postinc1 0FE6  
                             postinc2 0FDE            ??_MRF24SetDireccionDestino 0003  
                             strcmp@l 0003                               strcmp@r 0004  
                             strlen@a 0003                               strlen@s 0001  
                        _MRF24J40Init 1A20                             _PORTBbits 0F81  
                           _PORTCbits 0F82                    __end_of_DelayReset 1C1C  
                WriteByteSPIPort@dato 0002                             _TRISBbits 0F93  
                           _TRISCbits 0F94                             _TRISDbits 0F95  
                           _TRISEbits 0F96                  __end_of_SetShortAddr 1C3C  
               Write2ByteSPIPort@dato 0004                  GetLongAddr@respuesta 000A  
                          main@boton1 0027                             _DelayInit 1B82  
                           _DelayRead 1656                             _BoardInit 18F8  
                _MRF24SetPANIDDestino 1C3C                     _Write2ByteSPIPort 1D02  
         __end_of_SetDeviceMACAddress 1B82                         _data_config_s 0098  
             ??_MRF24SetMensajeSalida 0005                    ?_Write2ByteSPIPort 0004  
                      __end_of_strcmp 18F8                        __end_of_strlen 1AC6  
                        ??_SetChannel 000B                   start_initialization 1BAA  
                 ??_Write2ByteSPIPort 0006                           __end_of_isr 0040  
                    ?_ReadByteSPIPort 0001                         ?_SPIWriteByte 0001  
                        ??_SetWakePin 0001                 __end_of_MRF24IsNewMsg 1AFA  
             ?_MRF24GetMensajeEntrada 0001                            ?_DelayInit 0001  
                          ?_DelayRead 0002                            ?_BoardInit 0001  
               ?_MRF24SetPANIDDestino 0001             __end_of_Write2ByteSPIPort 1D10  
                  __end_of_SetChannel 1A92                          _estadoActual 003C  
               __end_of_SPIWrite2Byte 1D1E               MRF24ReciboPaquete@index 0011  
                        ?_SetLongAddr 0006                              ??_strcmp 0005  
                            ??_strlen 0003                    __end_of_SetWakePin 1CF4  
                   _DebounceFSMUpdate 151A                          ?_SetResetPin 0001  
                         __pbssCOMRAM 0032                    ?_DebounceFSMUpdate 000F  
                     DelayReset@delay 0001                              ?_SPIInit 0001  
                            ?_SPIRead 0001                        ??_SPIWriteByte 0001  
      __end_of_MRF24GetMensajeEntrada 1D50                   ??_DebounceFSMUpdate 0011  
                    SPIWriteByte@dato 0001                       _DebounceFSMInit 1AFA  
                           _data_in_s 0060                      _SetDeviceAddress 1B2A  
                 _InicializoVariables 1822              __end_of_WriteByteSPIPort 1D44  
                           __pintcode 0008             __end_of_DebounceFSMUpdate 1656  
                   SetResetPin@estado 0001                           __smallconst 1000  
                ?_InicializoVariables 0001                              ?_strncpy 0001  
                    SetLongAddr@valor 0008                              _LATCbits 0F8B  
                            _LATDbits 0F8C                              _LATEbits 0F8D  
                         ??_DelayInit 0006                           ??_DelayRead 0003  
              ??_MRF24SetPANIDDestino 0003                           ??_BoardInit 0001  
                            _PIR1bits 0F9E                          _SetShortAddr 1C1C  
                           _timeStamp 0038                    main@delay_parpadeo 001E  
               ??_InicializoVariables 0007     MRF24SetDireccionDestino@direccion 0001  
                   ??_IsMRF24Interrup 0001               __end_of_DebounceFSMInit 1B2A  
                            _SetCSPin 1D1E                              __Hrparam 0000  
                            __Lrparam 0000       MRF24ReciboPaquete@largo_mensaje 0010  
                __end_of_SPIWriteByte 1C90         __end_of_MRF24SetMensajeSalida 1A20  
                            __ptext10 17A8                              __ptext11 1CBE  
                            __ptext20 1BD0                              __ptext12 1CE6  
                            __ptext21 1D3A                              __ptext13 1CF4  
                            __ptext30 1AC6                              __ptext22 195A  
                            __ptext14 1230                              __ptext31 1CD2  
                            __ptext23 1D02                              __ptext15 1B58  
                            __ptext32 1D4A                              __ptext24 1D10  
                            __ptext16 1B2A                              __ptext33 151A  
                            __ptext25 1C78                              __ptext17 1A5A  
                            __ptext34 1656                              __ptext26 1D1E  
                            __ptext18 1C1C                   _MRF24TransmitirDato 13D6  
                            __ptext35 1D2C                              __ptext27 1D44  
                            __ptext19 199E                              __ptext36 1AFA  
                            __ptext28 1CA8                              __ptext37 1B82  
                            __ptext29 1BF6                              __ptext38 18F8  
                            __ptext39 1C90             ?_MRF24SetDireccionDestino 0001  
                   ??_InicializoMRF24 000F                        _DelayIsRunning 1D2C  
                   ??_InicializoPines 0002                         ?_GetShortAddr 0001  
                ?_MRF24TransmitirDato 0001                              isa$xinst 0000  
                            int$flags 003E    DebounceFSMInit@antirrebote_boton_n 0006  
         __end_of_default_mac_address 1019              __end_of_SetDeviceAddress 1B58  
                    ?_DebounceFSMInit 0006                              intlevel2 0000  
              __end_of_DelayIsRunning 1D3A                  MRF24TransmitirDato@i 0010  
                      ??_GetShortAddr 0003                             strncpy@cp 0006  
               ??_MRF24TransmitirDato 000B                     ?_WriteByteSPIPort 0001  
          __end_of_MRF24ReciboPaquete 17A8                         ??_GetLongAddr 0008  
                  ??_WriteByteSPIPort 0002                GetLongAddr@reg_address 0006  
                            strncpy@d 0001                              strncpy@n 0003  
                            strncpy@s 0002                           _SSPCON1bits 0FC6  
         DebounceFSMUpdate@estado_pin 0010                     SPIWrite2Byte@dato 0002  
              SetLongAddr@reg_address 0006                       ?_DelayIsRunning 0001  
          MRF24TransmitirDato@pos_mem 0011  
