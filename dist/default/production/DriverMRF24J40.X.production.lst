

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Jun 03 16:57:18 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57   000000                     
    58                           ; Version 2.20
    59                           ; Generated 05/05/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F46K20 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92   000FE0                     bsr             equ	4064
    93   000FE9                     fsr0            equ	4073
    94   000FEA                     fsr0h           equ	4074
    95   000FE9                     fsr0l           equ	4073
    96   000FE1                     fsr1            equ	4065
    97   000FE2                     fsr1h           equ	4066
    98   000FE1                     fsr1l           equ	4065
    99   000FD9                     fsr2            equ	4057
   100   000FDA                     fsr2h           equ	4058
   101   000FD9                     fsr2l           equ	4057
   102   000FEF                     indf0           equ	4079
   103   000FE7                     indf1           equ	4071
   104   000FDF                     indf2           equ	4063
   105   000FF2                     intcon          equ	4082
   106   000000                     nvmcon          equ	0
   107   000FF9                     pcl             equ	4089
   108   000FFA                     pclath          equ	4090
   109   000FFB                     pclatu          equ	4091
   110   000FEB                     plusw0          equ	4075
   111   000FE3                     plusw1          equ	4067
   112   000FDB                     plusw2          equ	4059
   113   000FED                     postdec0        equ	4077
   114   000FE5                     postdec1        equ	4069
   115   000FDD                     postdec2        equ	4061
   116   000FEE                     postinc0        equ	4078
   117   000FE6                     postinc1        equ	4070
   118   000FDE                     postinc2        equ	4062
   119   000FEC                     preinc0         equ	4076
   120   000FE4                     preinc1         equ	4068
   121   000FDC                     preinc2         equ	4060
   122   000FF3                     prod            equ	4083
   123   000FF4                     prodh           equ	4084
   124   000FF3                     prodl           equ	4083
   125   000FD8                     status          equ	4056
   126   000FF5                     tablat          equ	4085
   127   000FF6                     tblptr          equ	4086
   128   000FF7                     tblptrh         equ	4087
   129   000FF6                     tblptrl         equ	4086
   130   000FF8                     tblptru         equ	4088
   131   000FFD                     tosl            equ	4093
   132   000FE8                     wreg            equ	4072
   133   000F77                     SSPMSK          equ	3959	;# 
   134   000F78                     SLRCON          equ	3960	;# 
   135   000F79                     CM2CON1         equ	3961	;# 
   136   000F7A                     CM2CON0         equ	3962	;# 
   137   000F7B                     CM1CON0         equ	3963	;# 
   138   000F7C                     WPUB            equ	3964	;# 
   139   000F7D                     IOCB            equ	3965	;# 
   140   000F7E                     ANSEL           equ	3966	;# 
   141   000F7F                     ANSELH          equ	3967	;# 
   142   000F80                     PORTA           equ	3968	;# 
   143   000F81                     PORTB           equ	3969	;# 
   144   000F82                     PORTC           equ	3970	;# 
   145   000F83                     PORTD           equ	3971	;# 
   146   000F84                     PORTE           equ	3972	;# 
   147   000F89                     LATA            equ	3977	;# 
   148   000F8A                     LATB            equ	3978	;# 
   149   000F8B                     LATC            equ	3979	;# 
   150   000F8C                     LATD            equ	3980	;# 
   151   000F8D                     LATE            equ	3981	;# 
   152   000F92                     TRISA           equ	3986	;# 
   153   000F92                     DDRA            equ	3986	;# 
   154   000F93                     TRISB           equ	3987	;# 
   155   000F93                     DDRB            equ	3987	;# 
   156   000F94                     TRISC           equ	3988	;# 
   157   000F94                     DDRC            equ	3988	;# 
   158   000F95                     TRISD           equ	3989	;# 
   159   000F95                     DDRD            equ	3989	;# 
   160   000F96                     TRISE           equ	3990	;# 
   161   000F96                     DDRE            equ	3990	;# 
   162   000F9B                     OSCTUNE         equ	3995	;# 
   163   000F9D                     PIE1            equ	3997	;# 
   164   000F9E                     PIR1            equ	3998	;# 
   165   000F9F                     IPR1            equ	3999	;# 
   166   000FA0                     PIE2            equ	4000	;# 
   167   000FA1                     PIR2            equ	4001	;# 
   168   000FA2                     IPR2            equ	4002	;# 
   169   000FA6                     EECON1          equ	4006	;# 
   170   000FA7                     EECON2          equ	4007	;# 
   171   000FA8                     EEDATA          equ	4008	;# 
   172   000FA9                     EEADR           equ	4009	;# 
   173   000FAA                     EEADRH          equ	4010	;# 
   174   000FAB                     RCSTA           equ	4011	;# 
   175   000FAB                     RCSTA1          equ	4011	;# 
   176   000FAC                     TXSTA           equ	4012	;# 
   177   000FAC                     TXSTA1          equ	4012	;# 
   178   000FAD                     TXREG           equ	4013	;# 
   179   000FAD                     TXREG1          equ	4013	;# 
   180   000FAE                     RCREG           equ	4014	;# 
   181   000FAE                     RCREG1          equ	4014	;# 
   182   000FAF                     SPBRG           equ	4015	;# 
   183   000FAF                     SPBRG1          equ	4015	;# 
   184   000FB0                     SPBRGH          equ	4016	;# 
   185   000FB1                     T3CON           equ	4017	;# 
   186   000FB2                     TMR3            equ	4018	;# 
   187   000FB2                     TMR3L           equ	4018	;# 
   188   000FB3                     TMR3H           equ	4019	;# 
   189   000FB4                     CVRCON2         equ	4020	;# 
   190   000FB5                     CVRCON          equ	4021	;# 
   191   000FB6                     ECCP1AS         equ	4022	;# 
   192   000FB7                     PWM1CON         equ	4023	;# 
   193   000FB8                     BAUDCON         equ	4024	;# 
   194   000FB8                     BAUDCTL         equ	4024	;# 
   195   000FB9                     PSTRCON         equ	4025	;# 
   196   000FBA                     CCP2CON         equ	4026	;# 
   197   000FBB                     CCPR2           equ	4027	;# 
   198   000FBB                     CCPR2L          equ	4027	;# 
   199   000FBC                     CCPR2H          equ	4028	;# 
   200   000FBD                     CCP1CON         equ	4029	;# 
   201   000FBE                     CCPR1           equ	4030	;# 
   202   000FBE                     CCPR1L          equ	4030	;# 
   203   000FBF                     CCPR1H          equ	4031	;# 
   204   000FC0                     ADCON2          equ	4032	;# 
   205   000FC1                     ADCON1          equ	4033	;# 
   206   000FC2                     ADCON0          equ	4034	;# 
   207   000FC3                     ADRES           equ	4035	;# 
   208   000FC3                     ADRESL          equ	4035	;# 
   209   000FC4                     ADRESH          equ	4036	;# 
   210   000FC5                     SSPCON2         equ	4037	;# 
   211   000FC6                     SSPCON1         equ	4038	;# 
   212   000FC7                     SSPSTAT         equ	4039	;# 
   213   000FC8                     SSPADD          equ	4040	;# 
   214   000FC9                     SSPBUF          equ	4041	;# 
   215   000FCA                     T2CON           equ	4042	;# 
   216   000FCB                     PR2             equ	4043	;# 
   217   000FCB                     MEMCON          equ	4043	;# 
   218   000FCC                     TMR2            equ	4044	;# 
   219   000FCD                     T1CON           equ	4045	;# 
   220   000FCE                     TMR1            equ	4046	;# 
   221   000FCE                     TMR1L           equ	4046	;# 
   222   000FCF                     TMR1H           equ	4047	;# 
   223   000FD0                     RCON            equ	4048	;# 
   224   000FD1                     WDTCON          equ	4049	;# 
   225   000FD2                     HLVDCON         equ	4050	;# 
   226   000FD2                     LVDCON          equ	4050	;# 
   227   000FD3                     OSCCON          equ	4051	;# 
   228   000FD5                     T0CON           equ	4053	;# 
   229   000FD6                     TMR0            equ	4054	;# 
   230   000FD6                     TMR0L           equ	4054	;# 
   231   000FD7                     TMR0H           equ	4055	;# 
   232   000FD8                     STATUS          equ	4056	;# 
   233   000FD9                     FSR2            equ	4057	;# 
   234   000FD9                     FSR2L           equ	4057	;# 
   235   000FDA                     FSR2H           equ	4058	;# 
   236   000FDB                     PLUSW2          equ	4059	;# 
   237   000FDC                     PREINC2         equ	4060	;# 
   238   000FDD                     POSTDEC2        equ	4061	;# 
   239   000FDE                     POSTINC2        equ	4062	;# 
   240   000FDF                     INDF2           equ	4063	;# 
   241   000FE0                     BSR             equ	4064	;# 
   242   000FE1                     FSR1            equ	4065	;# 
   243   000FE1                     FSR1L           equ	4065	;# 
   244   000FE2                     FSR1H           equ	4066	;# 
   245   000FE3                     PLUSW1          equ	4067	;# 
   246   000FE4                     PREINC1         equ	4068	;# 
   247   000FE5                     POSTDEC1        equ	4069	;# 
   248   000FE6                     POSTINC1        equ	4070	;# 
   249   000FE7                     INDF1           equ	4071	;# 
   250   000FE8                     WREG            equ	4072	;# 
   251   000FE9                     FSR0            equ	4073	;# 
   252   000FE9                     FSR0L           equ	4073	;# 
   253   000FEA                     FSR0H           equ	4074	;# 
   254   000FEB                     PLUSW0          equ	4075	;# 
   255   000FEC                     PREINC0         equ	4076	;# 
   256   000FED                     POSTDEC0        equ	4077	;# 
   257   000FEE                     POSTINC0        equ	4078	;# 
   258   000FEF                     INDF0           equ	4079	;# 
   259   000FF0                     INTCON3         equ	4080	;# 
   260   000FF1                     INTCON2         equ	4081	;# 
   261   000FF2                     INTCON          equ	4082	;# 
   262   000FF3                     PROD            equ	4083	;# 
   263   000FF3                     PRODL           equ	4083	;# 
   264   000FF4                     PRODH           equ	4084	;# 
   265   000FF5                     TABLAT          equ	4085	;# 
   266   000FF6                     TBLPTR          equ	4086	;# 
   267   000FF6                     TBLPTRL         equ	4086	;# 
   268   000FF7                     TBLPTRH         equ	4087	;# 
   269   000FF8                     TBLPTRU         equ	4088	;# 
   270   000FF9                     PCLAT           equ	4089	;# 
   271   000FF9                     PC              equ	4089	;# 
   272   000FF9                     PCL             equ	4089	;# 
   273   000FFA                     PCLATH          equ	4090	;# 
   274   000FFB                     PCLATU          equ	4091	;# 
   275   000FFC                     STKPTR          equ	4092	;# 
   276   000FFD                     TOS             equ	4093	;# 
   277   000FFD                     TOSL            equ	4093	;# 
   278   000FFE                     TOSH            equ	4094	;# 
   279   000FFF                     TOSU            equ	4095	;# 
   280   000F77                     SSPMSK          equ	3959	;# 
   281   000F78                     SLRCON          equ	3960	;# 
   282   000F79                     CM2CON1         equ	3961	;# 
   283   000F7A                     CM2CON0         equ	3962	;# 
   284   000F7B                     CM1CON0         equ	3963	;# 
   285   000F7C                     WPUB            equ	3964	;# 
   286   000F7D                     IOCB            equ	3965	;# 
   287   000F7E                     ANSEL           equ	3966	;# 
   288   000F7F                     ANSELH          equ	3967	;# 
   289   000F80                     PORTA           equ	3968	;# 
   290   000F81                     PORTB           equ	3969	;# 
   291   000F82                     PORTC           equ	3970	;# 
   292   000F83                     PORTD           equ	3971	;# 
   293   000F84                     PORTE           equ	3972	;# 
   294   000F89                     LATA            equ	3977	;# 
   295   000F8A                     LATB            equ	3978	;# 
   296   000F8B                     LATC            equ	3979	;# 
   297   000F8C                     LATD            equ	3980	;# 
   298   000F8D                     LATE            equ	3981	;# 
   299   000F92                     TRISA           equ	3986	;# 
   300   000F92                     DDRA            equ	3986	;# 
   301   000F93                     TRISB           equ	3987	;# 
   302   000F93                     DDRB            equ	3987	;# 
   303   000F94                     TRISC           equ	3988	;# 
   304   000F94                     DDRC            equ	3988	;# 
   305   000F95                     TRISD           equ	3989	;# 
   306   000F95                     DDRD            equ	3989	;# 
   307   000F96                     TRISE           equ	3990	;# 
   308   000F96                     DDRE            equ	3990	;# 
   309   000F9B                     OSCTUNE         equ	3995	;# 
   310   000F9D                     PIE1            equ	3997	;# 
   311   000F9E                     PIR1            equ	3998	;# 
   312   000F9F                     IPR1            equ	3999	;# 
   313   000FA0                     PIE2            equ	4000	;# 
   314   000FA1                     PIR2            equ	4001	;# 
   315   000FA2                     IPR2            equ	4002	;# 
   316   000FA6                     EECON1          equ	4006	;# 
   317   000FA7                     EECON2          equ	4007	;# 
   318   000FA8                     EEDATA          equ	4008	;# 
   319   000FA9                     EEADR           equ	4009	;# 
   320   000FAA                     EEADRH          equ	4010	;# 
   321   000FAB                     RCSTA           equ	4011	;# 
   322   000FAB                     RCSTA1          equ	4011	;# 
   323   000FAC                     TXSTA           equ	4012	;# 
   324   000FAC                     TXSTA1          equ	4012	;# 
   325   000FAD                     TXREG           equ	4013	;# 
   326   000FAD                     TXREG1          equ	4013	;# 
   327   000FAE                     RCREG           equ	4014	;# 
   328   000FAE                     RCREG1          equ	4014	;# 
   329   000FAF                     SPBRG           equ	4015	;# 
   330   000FAF                     SPBRG1          equ	4015	;# 
   331   000FB0                     SPBRGH          equ	4016	;# 
   332   000FB1                     T3CON           equ	4017	;# 
   333   000FB2                     TMR3            equ	4018	;# 
   334   000FB2                     TMR3L           equ	4018	;# 
   335   000FB3                     TMR3H           equ	4019	;# 
   336   000FB4                     CVRCON2         equ	4020	;# 
   337   000FB5                     CVRCON          equ	4021	;# 
   338   000FB6                     ECCP1AS         equ	4022	;# 
   339   000FB7                     PWM1CON         equ	4023	;# 
   340   000FB8                     BAUDCON         equ	4024	;# 
   341   000FB8                     BAUDCTL         equ	4024	;# 
   342   000FB9                     PSTRCON         equ	4025	;# 
   343   000FBA                     CCP2CON         equ	4026	;# 
   344   000FBB                     CCPR2           equ	4027	;# 
   345   000FBB                     CCPR2L          equ	4027	;# 
   346   000FBC                     CCPR2H          equ	4028	;# 
   347   000FBD                     CCP1CON         equ	4029	;# 
   348   000FBE                     CCPR1           equ	4030	;# 
   349   000FBE                     CCPR1L          equ	4030	;# 
   350   000FBF                     CCPR1H          equ	4031	;# 
   351   000FC0                     ADCON2          equ	4032	;# 
   352   000FC1                     ADCON1          equ	4033	;# 
   353   000FC2                     ADCON0          equ	4034	;# 
   354   000FC3                     ADRES           equ	4035	;# 
   355   000FC3                     ADRESL          equ	4035	;# 
   356   000FC4                     ADRESH          equ	4036	;# 
   357   000FC5                     SSPCON2         equ	4037	;# 
   358   000FC6                     SSPCON1         equ	4038	;# 
   359   000FC7                     SSPSTAT         equ	4039	;# 
   360   000FC8                     SSPADD          equ	4040	;# 
   361   000FC9                     SSPBUF          equ	4041	;# 
   362   000FCA                     T2CON           equ	4042	;# 
   363   000FCB                     PR2             equ	4043	;# 
   364   000FCB                     MEMCON          equ	4043	;# 
   365   000FCC                     TMR2            equ	4044	;# 
   366   000FCD                     T1CON           equ	4045	;# 
   367   000FCE                     TMR1            equ	4046	;# 
   368   000FCE                     TMR1L           equ	4046	;# 
   369   000FCF                     TMR1H           equ	4047	;# 
   370   000FD0                     RCON            equ	4048	;# 
   371   000FD1                     WDTCON          equ	4049	;# 
   372   000FD2                     HLVDCON         equ	4050	;# 
   373   000FD2                     LVDCON          equ	4050	;# 
   374   000FD3                     OSCCON          equ	4051	;# 
   375   000FD5                     T0CON           equ	4053	;# 
   376   000FD6                     TMR0            equ	4054	;# 
   377   000FD6                     TMR0L           equ	4054	;# 
   378   000FD7                     TMR0H           equ	4055	;# 
   379   000FD8                     STATUS          equ	4056	;# 
   380   000FD9                     FSR2            equ	4057	;# 
   381   000FD9                     FSR2L           equ	4057	;# 
   382   000FDA                     FSR2H           equ	4058	;# 
   383   000FDB                     PLUSW2          equ	4059	;# 
   384   000FDC                     PREINC2         equ	4060	;# 
   385   000FDD                     POSTDEC2        equ	4061	;# 
   386   000FDE                     POSTINC2        equ	4062	;# 
   387   000FDF                     INDF2           equ	4063	;# 
   388   000FE0                     BSR             equ	4064	;# 
   389   000FE1                     FSR1            equ	4065	;# 
   390   000FE1                     FSR1L           equ	4065	;# 
   391   000FE2                     FSR1H           equ	4066	;# 
   392   000FE3                     PLUSW1          equ	4067	;# 
   393   000FE4                     PREINC1         equ	4068	;# 
   394   000FE5                     POSTDEC1        equ	4069	;# 
   395   000FE6                     POSTINC1        equ	4070	;# 
   396   000FE7                     INDF1           equ	4071	;# 
   397   000FE8                     WREG            equ	4072	;# 
   398   000FE9                     FSR0            equ	4073	;# 
   399   000FE9                     FSR0L           equ	4073	;# 
   400   000FEA                     FSR0H           equ	4074	;# 
   401   000FEB                     PLUSW0          equ	4075	;# 
   402   000FEC                     PREINC0         equ	4076	;# 
   403   000FED                     POSTDEC0        equ	4077	;# 
   404   000FEE                     POSTINC0        equ	4078	;# 
   405   000FEF                     INDF0           equ	4079	;# 
   406   000FF0                     INTCON3         equ	4080	;# 
   407   000FF1                     INTCON2         equ	4081	;# 
   408   000FF2                     INTCON          equ	4082	;# 
   409   000FF3                     PROD            equ	4083	;# 
   410   000FF3                     PRODL           equ	4083	;# 
   411   000FF4                     PRODH           equ	4084	;# 
   412   000FF5                     TABLAT          equ	4085	;# 
   413   000FF6                     TBLPTR          equ	4086	;# 
   414   000FF6                     TBLPTRL         equ	4086	;# 
   415   000FF7                     TBLPTRH         equ	4087	;# 
   416   000FF8                     TBLPTRU         equ	4088	;# 
   417   000FF9                     PCLAT           equ	4089	;# 
   418   000FF9                     PC              equ	4089	;# 
   419   000FF9                     PCL             equ	4089	;# 
   420   000FFA                     PCLATH          equ	4090	;# 
   421   000FFB                     PCLATU          equ	4091	;# 
   422   000FFC                     STKPTR          equ	4092	;# 
   423   000FFD                     TOS             equ	4093	;# 
   424   000FFD                     TOSL            equ	4093	;# 
   425   000FFE                     TOSH            equ	4094	;# 
   426   000FFF                     TOSU            equ	4095	;# 
   427   000F77                     SSPMSK          equ	3959	;# 
   428   000F78                     SLRCON          equ	3960	;# 
   429   000F79                     CM2CON1         equ	3961	;# 
   430   000F7A                     CM2CON0         equ	3962	;# 
   431   000F7B                     CM1CON0         equ	3963	;# 
   432   000F7C                     WPUB            equ	3964	;# 
   433   000F7D                     IOCB            equ	3965	;# 
   434   000F7E                     ANSEL           equ	3966	;# 
   435   000F7F                     ANSELH          equ	3967	;# 
   436   000F80                     PORTA           equ	3968	;# 
   437   000F81                     PORTB           equ	3969	;# 
   438   000F82                     PORTC           equ	3970	;# 
   439   000F83                     PORTD           equ	3971	;# 
   440   000F84                     PORTE           equ	3972	;# 
   441   000F89                     LATA            equ	3977	;# 
   442   000F8A                     LATB            equ	3978	;# 
   443   000F8B                     LATC            equ	3979	;# 
   444   000F8C                     LATD            equ	3980	;# 
   445   000F8D                     LATE            equ	3981	;# 
   446   000F92                     TRISA           equ	3986	;# 
   447   000F92                     DDRA            equ	3986	;# 
   448   000F93                     TRISB           equ	3987	;# 
   449   000F93                     DDRB            equ	3987	;# 
   450   000F94                     TRISC           equ	3988	;# 
   451   000F94                     DDRC            equ	3988	;# 
   452   000F95                     TRISD           equ	3989	;# 
   453   000F95                     DDRD            equ	3989	;# 
   454   000F96                     TRISE           equ	3990	;# 
   455   000F96                     DDRE            equ	3990	;# 
   456   000F9B                     OSCTUNE         equ	3995	;# 
   457   000F9D                     PIE1            equ	3997	;# 
   458   000F9E                     PIR1            equ	3998	;# 
   459   000F9F                     IPR1            equ	3999	;# 
   460   000FA0                     PIE2            equ	4000	;# 
   461   000FA1                     PIR2            equ	4001	;# 
   462   000FA2                     IPR2            equ	4002	;# 
   463   000FA6                     EECON1          equ	4006	;# 
   464   000FA7                     EECON2          equ	4007	;# 
   465   000FA8                     EEDATA          equ	4008	;# 
   466   000FA9                     EEADR           equ	4009	;# 
   467   000FAA                     EEADRH          equ	4010	;# 
   468   000FAB                     RCSTA           equ	4011	;# 
   469   000FAB                     RCSTA1          equ	4011	;# 
   470   000FAC                     TXSTA           equ	4012	;# 
   471   000FAC                     TXSTA1          equ	4012	;# 
   472   000FAD                     TXREG           equ	4013	;# 
   473   000FAD                     TXREG1          equ	4013	;# 
   474   000FAE                     RCREG           equ	4014	;# 
   475   000FAE                     RCREG1          equ	4014	;# 
   476   000FAF                     SPBRG           equ	4015	;# 
   477   000FAF                     SPBRG1          equ	4015	;# 
   478   000FB0                     SPBRGH          equ	4016	;# 
   479   000FB1                     T3CON           equ	4017	;# 
   480   000FB2                     TMR3            equ	4018	;# 
   481   000FB2                     TMR3L           equ	4018	;# 
   482   000FB3                     TMR3H           equ	4019	;# 
   483   000FB4                     CVRCON2         equ	4020	;# 
   484   000FB5                     CVRCON          equ	4021	;# 
   485   000FB6                     ECCP1AS         equ	4022	;# 
   486   000FB7                     PWM1CON         equ	4023	;# 
   487   000FB8                     BAUDCON         equ	4024	;# 
   488   000FB8                     BAUDCTL         equ	4024	;# 
   489   000FB9                     PSTRCON         equ	4025	;# 
   490   000FBA                     CCP2CON         equ	4026	;# 
   491   000FBB                     CCPR2           equ	4027	;# 
   492   000FBB                     CCPR2L          equ	4027	;# 
   493   000FBC                     CCPR2H          equ	4028	;# 
   494   000FBD                     CCP1CON         equ	4029	;# 
   495   000FBE                     CCPR1           equ	4030	;# 
   496   000FBE                     CCPR1L          equ	4030	;# 
   497   000FBF                     CCPR1H          equ	4031	;# 
   498   000FC0                     ADCON2          equ	4032	;# 
   499   000FC1                     ADCON1          equ	4033	;# 
   500   000FC2                     ADCON0          equ	4034	;# 
   501   000FC3                     ADRES           equ	4035	;# 
   502   000FC3                     ADRESL          equ	4035	;# 
   503   000FC4                     ADRESH          equ	4036	;# 
   504   000FC5                     SSPCON2         equ	4037	;# 
   505   000FC6                     SSPCON1         equ	4038	;# 
   506   000FC7                     SSPSTAT         equ	4039	;# 
   507   000FC8                     SSPADD          equ	4040	;# 
   508   000FC9                     SSPBUF          equ	4041	;# 
   509   000FCA                     T2CON           equ	4042	;# 
   510   000FCB                     PR2             equ	4043	;# 
   511   000FCB                     MEMCON          equ	4043	;# 
   512   000FCC                     TMR2            equ	4044	;# 
   513   000FCD                     T1CON           equ	4045	;# 
   514   000FCE                     TMR1            equ	4046	;# 
   515   000FCE                     TMR1L           equ	4046	;# 
   516   000FCF                     TMR1H           equ	4047	;# 
   517   000FD0                     RCON            equ	4048	;# 
   518   000FD1                     WDTCON          equ	4049	;# 
   519   000FD2                     HLVDCON         equ	4050	;# 
   520   000FD2                     LVDCON          equ	4050	;# 
   521   000FD3                     OSCCON          equ	4051	;# 
   522   000FD5                     T0CON           equ	4053	;# 
   523   000FD6                     TMR0            equ	4054	;# 
   524   000FD6                     TMR0L           equ	4054	;# 
   525   000FD7                     TMR0H           equ	4055	;# 
   526   000FD8                     STATUS          equ	4056	;# 
   527   000FD9                     FSR2            equ	4057	;# 
   528   000FD9                     FSR2L           equ	4057	;# 
   529   000FDA                     FSR2H           equ	4058	;# 
   530   000FDB                     PLUSW2          equ	4059	;# 
   531   000FDC                     PREINC2         equ	4060	;# 
   532   000FDD                     POSTDEC2        equ	4061	;# 
   533   000FDE                     POSTINC2        equ	4062	;# 
   534   000FDF                     INDF2           equ	4063	;# 
   535   000FE0                     BSR             equ	4064	;# 
   536   000FE1                     FSR1            equ	4065	;# 
   537   000FE1                     FSR1L           equ	4065	;# 
   538   000FE2                     FSR1H           equ	4066	;# 
   539   000FE3                     PLUSW1          equ	4067	;# 
   540   000FE4                     PREINC1         equ	4068	;# 
   541   000FE5                     POSTDEC1        equ	4069	;# 
   542   000FE6                     POSTINC1        equ	4070	;# 
   543   000FE7                     INDF1           equ	4071	;# 
   544   000FE8                     WREG            equ	4072	;# 
   545   000FE9                     FSR0            equ	4073	;# 
   546   000FE9                     FSR0L           equ	4073	;# 
   547   000FEA                     FSR0H           equ	4074	;# 
   548   000FEB                     PLUSW0          equ	4075	;# 
   549   000FEC                     PREINC0         equ	4076	;# 
   550   000FED                     POSTDEC0        equ	4077	;# 
   551   000FEE                     POSTINC0        equ	4078	;# 
   552   000FEF                     INDF0           equ	4079	;# 
   553   000FF0                     INTCON3         equ	4080	;# 
   554   000FF1                     INTCON2         equ	4081	;# 
   555   000FF2                     INTCON          equ	4082	;# 
   556   000FF3                     PROD            equ	4083	;# 
   557   000FF3                     PRODL           equ	4083	;# 
   558   000FF4                     PRODH           equ	4084	;# 
   559   000FF5                     TABLAT          equ	4085	;# 
   560   000FF6                     TBLPTR          equ	4086	;# 
   561   000FF6                     TBLPTRL         equ	4086	;# 
   562   000FF7                     TBLPTRH         equ	4087	;# 
   563   000FF8                     TBLPTRU         equ	4088	;# 
   564   000FF9                     PCLAT           equ	4089	;# 
   565   000FF9                     PC              equ	4089	;# 
   566   000FF9                     PCL             equ	4089	;# 
   567   000FFA                     PCLATH          equ	4090	;# 
   568   000FFB                     PCLATU          equ	4091	;# 
   569   000FFC                     STKPTR          equ	4092	;# 
   570   000FFD                     TOS             equ	4093	;# 
   571   000FFD                     TOSL            equ	4093	;# 
   572   000FFE                     TOSH            equ	4094	;# 
   573   000FFF                     TOSU            equ	4095	;# 
   574   000F77                     SSPMSK          equ	3959	;# 
   575   000F78                     SLRCON          equ	3960	;# 
   576   000F79                     CM2CON1         equ	3961	;# 
   577   000F7A                     CM2CON0         equ	3962	;# 
   578   000F7B                     CM1CON0         equ	3963	;# 
   579   000F7C                     WPUB            equ	3964	;# 
   580   000F7D                     IOCB            equ	3965	;# 
   581   000F7E                     ANSEL           equ	3966	;# 
   582   000F7F                     ANSELH          equ	3967	;# 
   583   000F80                     PORTA           equ	3968	;# 
   584   000F81                     PORTB           equ	3969	;# 
   585   000F82                     PORTC           equ	3970	;# 
   586   000F83                     PORTD           equ	3971	;# 
   587   000F84                     PORTE           equ	3972	;# 
   588   000F89                     LATA            equ	3977	;# 
   589   000F8A                     LATB            equ	3978	;# 
   590   000F8B                     LATC            equ	3979	;# 
   591   000F8C                     LATD            equ	3980	;# 
   592   000F8D                     LATE            equ	3981	;# 
   593   000F92                     TRISA           equ	3986	;# 
   594   000F92                     DDRA            equ	3986	;# 
   595   000F93                     TRISB           equ	3987	;# 
   596   000F93                     DDRB            equ	3987	;# 
   597   000F94                     TRISC           equ	3988	;# 
   598   000F94                     DDRC            equ	3988	;# 
   599   000F95                     TRISD           equ	3989	;# 
   600   000F95                     DDRD            equ	3989	;# 
   601   000F96                     TRISE           equ	3990	;# 
   602   000F96                     DDRE            equ	3990	;# 
   603   000F9B                     OSCTUNE         equ	3995	;# 
   604   000F9D                     PIE1            equ	3997	;# 
   605   000F9E                     PIR1            equ	3998	;# 
   606   000F9F                     IPR1            equ	3999	;# 
   607   000FA0                     PIE2            equ	4000	;# 
   608   000FA1                     PIR2            equ	4001	;# 
   609   000FA2                     IPR2            equ	4002	;# 
   610   000FA6                     EECON1          equ	4006	;# 
   611   000FA7                     EECON2          equ	4007	;# 
   612   000FA8                     EEDATA          equ	4008	;# 
   613   000FA9                     EEADR           equ	4009	;# 
   614   000FAA                     EEADRH          equ	4010	;# 
   615   000FAB                     RCSTA           equ	4011	;# 
   616   000FAB                     RCSTA1          equ	4011	;# 
   617   000FAC                     TXSTA           equ	4012	;# 
   618   000FAC                     TXSTA1          equ	4012	;# 
   619   000FAD                     TXREG           equ	4013	;# 
   620   000FAD                     TXREG1          equ	4013	;# 
   621   000FAE                     RCREG           equ	4014	;# 
   622   000FAE                     RCREG1          equ	4014	;# 
   623   000FAF                     SPBRG           equ	4015	;# 
   624   000FAF                     SPBRG1          equ	4015	;# 
   625   000FB0                     SPBRGH          equ	4016	;# 
   626   000FB1                     T3CON           equ	4017	;# 
   627   000FB2                     TMR3            equ	4018	;# 
   628   000FB2                     TMR3L           equ	4018	;# 
   629   000FB3                     TMR3H           equ	4019	;# 
   630   000FB4                     CVRCON2         equ	4020	;# 
   631   000FB5                     CVRCON          equ	4021	;# 
   632   000FB6                     ECCP1AS         equ	4022	;# 
   633   000FB7                     PWM1CON         equ	4023	;# 
   634   000FB8                     BAUDCON         equ	4024	;# 
   635   000FB8                     BAUDCTL         equ	4024	;# 
   636   000FB9                     PSTRCON         equ	4025	;# 
   637   000FBA                     CCP2CON         equ	4026	;# 
   638   000FBB                     CCPR2           equ	4027	;# 
   639   000FBB                     CCPR2L          equ	4027	;# 
   640   000FBC                     CCPR2H          equ	4028	;# 
   641   000FBD                     CCP1CON         equ	4029	;# 
   642   000FBE                     CCPR1           equ	4030	;# 
   643   000FBE                     CCPR1L          equ	4030	;# 
   644   000FBF                     CCPR1H          equ	4031	;# 
   645   000FC0                     ADCON2          equ	4032	;# 
   646   000FC1                     ADCON1          equ	4033	;# 
   647   000FC2                     ADCON0          equ	4034	;# 
   648   000FC3                     ADRES           equ	4035	;# 
   649   000FC3                     ADRESL          equ	4035	;# 
   650   000FC4                     ADRESH          equ	4036	;# 
   651   000FC5                     SSPCON2         equ	4037	;# 
   652   000FC6                     SSPCON1         equ	4038	;# 
   653   000FC7                     SSPSTAT         equ	4039	;# 
   654   000FC8                     SSPADD          equ	4040	;# 
   655   000FC9                     SSPBUF          equ	4041	;# 
   656   000FCA                     T2CON           equ	4042	;# 
   657   000FCB                     PR2             equ	4043	;# 
   658   000FCB                     MEMCON          equ	4043	;# 
   659   000FCC                     TMR2            equ	4044	;# 
   660   000FCD                     T1CON           equ	4045	;# 
   661   000FCE                     TMR1            equ	4046	;# 
   662   000FCE                     TMR1L           equ	4046	;# 
   663   000FCF                     TMR1H           equ	4047	;# 
   664   000FD0                     RCON            equ	4048	;# 
   665   000FD1                     WDTCON          equ	4049	;# 
   666   000FD2                     HLVDCON         equ	4050	;# 
   667   000FD2                     LVDCON          equ	4050	;# 
   668   000FD3                     OSCCON          equ	4051	;# 
   669   000FD5                     T0CON           equ	4053	;# 
   670   000FD6                     TMR0            equ	4054	;# 
   671   000FD6                     TMR0L           equ	4054	;# 
   672   000FD7                     TMR0H           equ	4055	;# 
   673   000FD8                     STATUS          equ	4056	;# 
   674   000FD9                     FSR2            equ	4057	;# 
   675   000FD9                     FSR2L           equ	4057	;# 
   676   000FDA                     FSR2H           equ	4058	;# 
   677   000FDB                     PLUSW2          equ	4059	;# 
   678   000FDC                     PREINC2         equ	4060	;# 
   679   000FDD                     POSTDEC2        equ	4061	;# 
   680   000FDE                     POSTINC2        equ	4062	;# 
   681   000FDF                     INDF2           equ	4063	;# 
   682   000FE0                     BSR             equ	4064	;# 
   683   000FE1                     FSR1            equ	4065	;# 
   684   000FE1                     FSR1L           equ	4065	;# 
   685   000FE2                     FSR1H           equ	4066	;# 
   686   000FE3                     PLUSW1          equ	4067	;# 
   687   000FE4                     PREINC1         equ	4068	;# 
   688   000FE5                     POSTDEC1        equ	4069	;# 
   689   000FE6                     POSTINC1        equ	4070	;# 
   690   000FE7                     INDF1           equ	4071	;# 
   691   000FE8                     WREG            equ	4072	;# 
   692   000FE9                     FSR0            equ	4073	;# 
   693   000FE9                     FSR0L           equ	4073	;# 
   694   000FEA                     FSR0H           equ	4074	;# 
   695   000FEB                     PLUSW0          equ	4075	;# 
   696   000FEC                     PREINC0         equ	4076	;# 
   697   000FED                     POSTDEC0        equ	4077	;# 
   698   000FEE                     POSTINC0        equ	4078	;# 
   699   000FEF                     INDF0           equ	4079	;# 
   700   000FF0                     INTCON3         equ	4080	;# 
   701   000FF1                     INTCON2         equ	4081	;# 
   702   000FF2                     INTCON          equ	4082	;# 
   703   000FF3                     PROD            equ	4083	;# 
   704   000FF3                     PRODL           equ	4083	;# 
   705   000FF4                     PRODH           equ	4084	;# 
   706   000FF5                     TABLAT          equ	4085	;# 
   707   000FF6                     TBLPTR          equ	4086	;# 
   708   000FF6                     TBLPTRL         equ	4086	;# 
   709   000FF7                     TBLPTRH         equ	4087	;# 
   710   000FF8                     TBLPTRU         equ	4088	;# 
   711   000FF9                     PCLAT           equ	4089	;# 
   712   000FF9                     PC              equ	4089	;# 
   713   000FF9                     PCL             equ	4089	;# 
   714   000FFA                     PCLATH          equ	4090	;# 
   715   000FFB                     PCLATU          equ	4091	;# 
   716   000FFC                     STKPTR          equ	4092	;# 
   717   000FFD                     TOS             equ	4093	;# 
   718   000FFD                     TOSL            equ	4093	;# 
   719   000FFE                     TOSH            equ	4094	;# 
   720   000FFF                     TOSU            equ	4095	;# 
   721   000F77                     SSPMSK          equ	3959	;# 
   722   000F78                     SLRCON          equ	3960	;# 
   723   000F79                     CM2CON1         equ	3961	;# 
   724   000F7A                     CM2CON0         equ	3962	;# 
   725   000F7B                     CM1CON0         equ	3963	;# 
   726   000F7C                     WPUB            equ	3964	;# 
   727   000F7D                     IOCB            equ	3965	;# 
   728   000F7E                     ANSEL           equ	3966	;# 
   729   000F7F                     ANSELH          equ	3967	;# 
   730   000F80                     PORTA           equ	3968	;# 
   731   000F81                     PORTB           equ	3969	;# 
   732   000F82                     PORTC           equ	3970	;# 
   733   000F83                     PORTD           equ	3971	;# 
   734   000F84                     PORTE           equ	3972	;# 
   735   000F89                     LATA            equ	3977	;# 
   736   000F8A                     LATB            equ	3978	;# 
   737   000F8B                     LATC            equ	3979	;# 
   738   000F8C                     LATD            equ	3980	;# 
   739   000F8D                     LATE            equ	3981	;# 
   740   000F92                     TRISA           equ	3986	;# 
   741   000F92                     DDRA            equ	3986	;# 
   742   000F93                     TRISB           equ	3987	;# 
   743   000F93                     DDRB            equ	3987	;# 
   744   000F94                     TRISC           equ	3988	;# 
   745   000F94                     DDRC            equ	3988	;# 
   746   000F95                     TRISD           equ	3989	;# 
   747   000F95                     DDRD            equ	3989	;# 
   748   000F96                     TRISE           equ	3990	;# 
   749   000F96                     DDRE            equ	3990	;# 
   750   000F9B                     OSCTUNE         equ	3995	;# 
   751   000F9D                     PIE1            equ	3997	;# 
   752   000F9E                     PIR1            equ	3998	;# 
   753   000F9F                     IPR1            equ	3999	;# 
   754   000FA0                     PIE2            equ	4000	;# 
   755   000FA1                     PIR2            equ	4001	;# 
   756   000FA2                     IPR2            equ	4002	;# 
   757   000FA6                     EECON1          equ	4006	;# 
   758   000FA7                     EECON2          equ	4007	;# 
   759   000FA8                     EEDATA          equ	4008	;# 
   760   000FA9                     EEADR           equ	4009	;# 
   761   000FAA                     EEADRH          equ	4010	;# 
   762   000FAB                     RCSTA           equ	4011	;# 
   763   000FAB                     RCSTA1          equ	4011	;# 
   764   000FAC                     TXSTA           equ	4012	;# 
   765   000FAC                     TXSTA1          equ	4012	;# 
   766   000FAD                     TXREG           equ	4013	;# 
   767   000FAD                     TXREG1          equ	4013	;# 
   768   000FAE                     RCREG           equ	4014	;# 
   769   000FAE                     RCREG1          equ	4014	;# 
   770   000FAF                     SPBRG           equ	4015	;# 
   771   000FAF                     SPBRG1          equ	4015	;# 
   772   000FB0                     SPBRGH          equ	4016	;# 
   773   000FB1                     T3CON           equ	4017	;# 
   774   000FB2                     TMR3            equ	4018	;# 
   775   000FB2                     TMR3L           equ	4018	;# 
   776   000FB3                     TMR3H           equ	4019	;# 
   777   000FB4                     CVRCON2         equ	4020	;# 
   778   000FB5                     CVRCON          equ	4021	;# 
   779   000FB6                     ECCP1AS         equ	4022	;# 
   780   000FB7                     PWM1CON         equ	4023	;# 
   781   000FB8                     BAUDCON         equ	4024	;# 
   782   000FB8                     BAUDCTL         equ	4024	;# 
   783   000FB9                     PSTRCON         equ	4025	;# 
   784   000FBA                     CCP2CON         equ	4026	;# 
   785   000FBB                     CCPR2           equ	4027	;# 
   786   000FBB                     CCPR2L          equ	4027	;# 
   787   000FBC                     CCPR2H          equ	4028	;# 
   788   000FBD                     CCP1CON         equ	4029	;# 
   789   000FBE                     CCPR1           equ	4030	;# 
   790   000FBE                     CCPR1L          equ	4030	;# 
   791   000FBF                     CCPR1H          equ	4031	;# 
   792   000FC0                     ADCON2          equ	4032	;# 
   793   000FC1                     ADCON1          equ	4033	;# 
   794   000FC2                     ADCON0          equ	4034	;# 
   795   000FC3                     ADRES           equ	4035	;# 
   796   000FC3                     ADRESL          equ	4035	;# 
   797   000FC4                     ADRESH          equ	4036	;# 
   798   000FC5                     SSPCON2         equ	4037	;# 
   799   000FC6                     SSPCON1         equ	4038	;# 
   800   000FC7                     SSPSTAT         equ	4039	;# 
   801   000FC8                     SSPADD          equ	4040	;# 
   802   000FC9                     SSPBUF          equ	4041	;# 
   803   000FCA                     T2CON           equ	4042	;# 
   804   000FCB                     PR2             equ	4043	;# 
   805   000FCB                     MEMCON          equ	4043	;# 
   806   000FCC                     TMR2            equ	4044	;# 
   807   000FCD                     T1CON           equ	4045	;# 
   808   000FCE                     TMR1            equ	4046	;# 
   809   000FCE                     TMR1L           equ	4046	;# 
   810   000FCF                     TMR1H           equ	4047	;# 
   811   000FD0                     RCON            equ	4048	;# 
   812   000FD1                     WDTCON          equ	4049	;# 
   813   000FD2                     HLVDCON         equ	4050	;# 
   814   000FD2                     LVDCON          equ	4050	;# 
   815   000FD3                     OSCCON          equ	4051	;# 
   816   000FD5                     T0CON           equ	4053	;# 
   817   000FD6                     TMR0            equ	4054	;# 
   818   000FD6                     TMR0L           equ	4054	;# 
   819   000FD7                     TMR0H           equ	4055	;# 
   820   000FD8                     STATUS          equ	4056	;# 
   821   000FD9                     FSR2            equ	4057	;# 
   822   000FD9                     FSR2L           equ	4057	;# 
   823   000FDA                     FSR2H           equ	4058	;# 
   824   000FDB                     PLUSW2          equ	4059	;# 
   825   000FDC                     PREINC2         equ	4060	;# 
   826   000FDD                     POSTDEC2        equ	4061	;# 
   827   000FDE                     POSTINC2        equ	4062	;# 
   828   000FDF                     INDF2           equ	4063	;# 
   829   000FE0                     BSR             equ	4064	;# 
   830   000FE1                     FSR1            equ	4065	;# 
   831   000FE1                     FSR1L           equ	4065	;# 
   832   000FE2                     FSR1H           equ	4066	;# 
   833   000FE3                     PLUSW1          equ	4067	;# 
   834   000FE4                     PREINC1         equ	4068	;# 
   835   000FE5                     POSTDEC1        equ	4069	;# 
   836   000FE6                     POSTINC1        equ	4070	;# 
   837   000FE7                     INDF1           equ	4071	;# 
   838   000FE8                     WREG            equ	4072	;# 
   839   000FE9                     FSR0            equ	4073	;# 
   840   000FE9                     FSR0L           equ	4073	;# 
   841   000FEA                     FSR0H           equ	4074	;# 
   842   000FEB                     PLUSW0          equ	4075	;# 
   843   000FEC                     PREINC0         equ	4076	;# 
   844   000FED                     POSTDEC0        equ	4077	;# 
   845   000FEE                     POSTINC0        equ	4078	;# 
   846   000FEF                     INDF0           equ	4079	;# 
   847   000FF0                     INTCON3         equ	4080	;# 
   848   000FF1                     INTCON2         equ	4081	;# 
   849   000FF2                     INTCON          equ	4082	;# 
   850   000FF3                     PROD            equ	4083	;# 
   851   000FF3                     PRODL           equ	4083	;# 
   852   000FF4                     PRODH           equ	4084	;# 
   853   000FF5                     TABLAT          equ	4085	;# 
   854   000FF6                     TBLPTR          equ	4086	;# 
   855   000FF6                     TBLPTRL         equ	4086	;# 
   856   000FF7                     TBLPTRH         equ	4087	;# 
   857   000FF8                     TBLPTRU         equ	4088	;# 
   858   000FF9                     PCLAT           equ	4089	;# 
   859   000FF9                     PC              equ	4089	;# 
   860   000FF9                     PCL             equ	4089	;# 
   861   000FFA                     PCLATH          equ	4090	;# 
   862   000FFB                     PCLATU          equ	4091	;# 
   863   000FFC                     STKPTR          equ	4092	;# 
   864   000FFD                     TOS             equ	4093	;# 
   865   000FFD                     TOSL            equ	4093	;# 
   866   000FFE                     TOSH            equ	4094	;# 
   867   000FFF                     TOSU            equ	4095	;# 
   868   000F77                     SSPMSK          equ	3959	;# 
   869   000F78                     SLRCON          equ	3960	;# 
   870   000F79                     CM2CON1         equ	3961	;# 
   871   000F7A                     CM2CON0         equ	3962	;# 
   872   000F7B                     CM1CON0         equ	3963	;# 
   873   000F7C                     WPUB            equ	3964	;# 
   874   000F7D                     IOCB            equ	3965	;# 
   875   000F7E                     ANSEL           equ	3966	;# 
   876   000F7F                     ANSELH          equ	3967	;# 
   877   000F80                     PORTA           equ	3968	;# 
   878   000F81                     PORTB           equ	3969	;# 
   879   000F82                     PORTC           equ	3970	;# 
   880   000F83                     PORTD           equ	3971	;# 
   881   000F84                     PORTE           equ	3972	;# 
   882   000F89                     LATA            equ	3977	;# 
   883   000F8A                     LATB            equ	3978	;# 
   884   000F8B                     LATC            equ	3979	;# 
   885   000F8C                     LATD            equ	3980	;# 
   886   000F8D                     LATE            equ	3981	;# 
   887   000F92                     TRISA           equ	3986	;# 
   888   000F92                     DDRA            equ	3986	;# 
   889   000F93                     TRISB           equ	3987	;# 
   890   000F93                     DDRB            equ	3987	;# 
   891   000F94                     TRISC           equ	3988	;# 
   892   000F94                     DDRC            equ	3988	;# 
   893   000F95                     TRISD           equ	3989	;# 
   894   000F95                     DDRD            equ	3989	;# 
   895   000F96                     TRISE           equ	3990	;# 
   896   000F96                     DDRE            equ	3990	;# 
   897   000F9B                     OSCTUNE         equ	3995	;# 
   898   000F9D                     PIE1            equ	3997	;# 
   899   000F9E                     PIR1            equ	3998	;# 
   900   000F9F                     IPR1            equ	3999	;# 
   901   000FA0                     PIE2            equ	4000	;# 
   902   000FA1                     PIR2            equ	4001	;# 
   903   000FA2                     IPR2            equ	4002	;# 
   904   000FA6                     EECON1          equ	4006	;# 
   905   000FA7                     EECON2          equ	4007	;# 
   906   000FA8                     EEDATA          equ	4008	;# 
   907   000FA9                     EEADR           equ	4009	;# 
   908   000FAA                     EEADRH          equ	4010	;# 
   909   000FAB                     RCSTA           equ	4011	;# 
   910   000FAB                     RCSTA1          equ	4011	;# 
   911   000FAC                     TXSTA           equ	4012	;# 
   912   000FAC                     TXSTA1          equ	4012	;# 
   913   000FAD                     TXREG           equ	4013	;# 
   914   000FAD                     TXREG1          equ	4013	;# 
   915   000FAE                     RCREG           equ	4014	;# 
   916   000FAE                     RCREG1          equ	4014	;# 
   917   000FAF                     SPBRG           equ	4015	;# 
   918   000FAF                     SPBRG1          equ	4015	;# 
   919   000FB0                     SPBRGH          equ	4016	;# 
   920   000FB1                     T3CON           equ	4017	;# 
   921   000FB2                     TMR3            equ	4018	;# 
   922   000FB2                     TMR3L           equ	4018	;# 
   923   000FB3                     TMR3H           equ	4019	;# 
   924   000FB4                     CVRCON2         equ	4020	;# 
   925   000FB5                     CVRCON          equ	4021	;# 
   926   000FB6                     ECCP1AS         equ	4022	;# 
   927   000FB7                     PWM1CON         equ	4023	;# 
   928   000FB8                     BAUDCON         equ	4024	;# 
   929   000FB8                     BAUDCTL         equ	4024	;# 
   930   000FB9                     PSTRCON         equ	4025	;# 
   931   000FBA                     CCP2CON         equ	4026	;# 
   932   000FBB                     CCPR2           equ	4027	;# 
   933   000FBB                     CCPR2L          equ	4027	;# 
   934   000FBC                     CCPR2H          equ	4028	;# 
   935   000FBD                     CCP1CON         equ	4029	;# 
   936   000FBE                     CCPR1           equ	4030	;# 
   937   000FBE                     CCPR1L          equ	4030	;# 
   938   000FBF                     CCPR1H          equ	4031	;# 
   939   000FC0                     ADCON2          equ	4032	;# 
   940   000FC1                     ADCON1          equ	4033	;# 
   941   000FC2                     ADCON0          equ	4034	;# 
   942   000FC3                     ADRES           equ	4035	;# 
   943   000FC3                     ADRESL          equ	4035	;# 
   944   000FC4                     ADRESH          equ	4036	;# 
   945   000FC5                     SSPCON2         equ	4037	;# 
   946   000FC6                     SSPCON1         equ	4038	;# 
   947   000FC7                     SSPSTAT         equ	4039	;# 
   948   000FC8                     SSPADD          equ	4040	;# 
   949   000FC9                     SSPBUF          equ	4041	;# 
   950   000FCA                     T2CON           equ	4042	;# 
   951   000FCB                     PR2             equ	4043	;# 
   952   000FCB                     MEMCON          equ	4043	;# 
   953   000FCC                     TMR2            equ	4044	;# 
   954   000FCD                     T1CON           equ	4045	;# 
   955   000FCE                     TMR1            equ	4046	;# 
   956   000FCE                     TMR1L           equ	4046	;# 
   957   000FCF                     TMR1H           equ	4047	;# 
   958   000FD0                     RCON            equ	4048	;# 
   959   000FD1                     WDTCON          equ	4049	;# 
   960   000FD2                     HLVDCON         equ	4050	;# 
   961   000FD2                     LVDCON          equ	4050	;# 
   962   000FD3                     OSCCON          equ	4051	;# 
   963   000FD5                     T0CON           equ	4053	;# 
   964   000FD6                     TMR0            equ	4054	;# 
   965   000FD6                     TMR0L           equ	4054	;# 
   966   000FD7                     TMR0H           equ	4055	;# 
   967   000FD8                     STATUS          equ	4056	;# 
   968   000FD9                     FSR2            equ	4057	;# 
   969   000FD9                     FSR2L           equ	4057	;# 
   970   000FDA                     FSR2H           equ	4058	;# 
   971   000FDB                     PLUSW2          equ	4059	;# 
   972   000FDC                     PREINC2         equ	4060	;# 
   973   000FDD                     POSTDEC2        equ	4061	;# 
   974   000FDE                     POSTINC2        equ	4062	;# 
   975   000FDF                     INDF2           equ	4063	;# 
   976   000FE0                     BSR             equ	4064	;# 
   977   000FE1                     FSR1            equ	4065	;# 
   978   000FE1                     FSR1L           equ	4065	;# 
   979   000FE2                     FSR1H           equ	4066	;# 
   980   000FE3                     PLUSW1          equ	4067	;# 
   981   000FE4                     PREINC1         equ	4068	;# 
   982   000FE5                     POSTDEC1        equ	4069	;# 
   983   000FE6                     POSTINC1        equ	4070	;# 
   984   000FE7                     INDF1           equ	4071	;# 
   985   000FE8                     WREG            equ	4072	;# 
   986   000FE9                     FSR0            equ	4073	;# 
   987   000FE9                     FSR0L           equ	4073	;# 
   988   000FEA                     FSR0H           equ	4074	;# 
   989   000FEB                     PLUSW0          equ	4075	;# 
   990   000FEC                     PREINC0         equ	4076	;# 
   991   000FED                     POSTDEC0        equ	4077	;# 
   992   000FEE                     POSTINC0        equ	4078	;# 
   993   000FEF                     INDF0           equ	4079	;# 
   994   000FF0                     INTCON3         equ	4080	;# 
   995   000FF1                     INTCON2         equ	4081	;# 
   996   000FF2                     INTCON          equ	4082	;# 
   997   000FF3                     PROD            equ	4083	;# 
   998   000FF3                     PRODL           equ	4083	;# 
   999   000FF4                     PRODH           equ	4084	;# 
  1000   000FF5                     TABLAT          equ	4085	;# 
  1001   000FF6                     TBLPTR          equ	4086	;# 
  1002   000FF6                     TBLPTRL         equ	4086	;# 
  1003   000FF7                     TBLPTRH         equ	4087	;# 
  1004   000FF8                     TBLPTRU         equ	4088	;# 
  1005   000FF9                     PCLAT           equ	4089	;# 
  1006   000FF9                     PC              equ	4089	;# 
  1007   000FF9                     PCL             equ	4089	;# 
  1008   000FFA                     PCLATH          equ	4090	;# 
  1009   000FFB                     PCLATU          equ	4091	;# 
  1010   000FFC                     STKPTR          equ	4092	;# 
  1011   000FFD                     TOS             equ	4093	;# 
  1012   000FFD                     TOSL            equ	4093	;# 
  1013   000FFE                     TOSH            equ	4094	;# 
  1014   000FFF                     TOSU            equ	4095	;# 
  1015   000F77                     SSPMSK          equ	3959	;# 
  1016   000F78                     SLRCON          equ	3960	;# 
  1017   000F79                     CM2CON1         equ	3961	;# 
  1018   000F7A                     CM2CON0         equ	3962	;# 
  1019   000F7B                     CM1CON0         equ	3963	;# 
  1020   000F7C                     WPUB            equ	3964	;# 
  1021   000F7D                     IOCB            equ	3965	;# 
  1022   000F7E                     ANSEL           equ	3966	;# 
  1023   000F7F                     ANSELH          equ	3967	;# 
  1024   000F80                     PORTA           equ	3968	;# 
  1025   000F81                     PORTB           equ	3969	;# 
  1026   000F82                     PORTC           equ	3970	;# 
  1027   000F83                     PORTD           equ	3971	;# 
  1028   000F84                     PORTE           equ	3972	;# 
  1029   000F89                     LATA            equ	3977	;# 
  1030   000F8A                     LATB            equ	3978	;# 
  1031   000F8B                     LATC            equ	3979	;# 
  1032   000F8C                     LATD            equ	3980	;# 
  1033   000F8D                     LATE            equ	3981	;# 
  1034   000F92                     TRISA           equ	3986	;# 
  1035   000F92                     DDRA            equ	3986	;# 
  1036   000F93                     TRISB           equ	3987	;# 
  1037   000F93                     DDRB            equ	3987	;# 
  1038   000F94                     TRISC           equ	3988	;# 
  1039   000F94                     DDRC            equ	3988	;# 
  1040   000F95                     TRISD           equ	3989	;# 
  1041   000F95                     DDRD            equ	3989	;# 
  1042   000F96                     TRISE           equ	3990	;# 
  1043   000F96                     DDRE            equ	3990	;# 
  1044   000F9B                     OSCTUNE         equ	3995	;# 
  1045   000F9D                     PIE1            equ	3997	;# 
  1046   000F9E                     PIR1            equ	3998	;# 
  1047   000F9F                     IPR1            equ	3999	;# 
  1048   000FA0                     PIE2            equ	4000	;# 
  1049   000FA1                     PIR2            equ	4001	;# 
  1050   000FA2                     IPR2            equ	4002	;# 
  1051   000FA6                     EECON1          equ	4006	;# 
  1052   000FA7                     EECON2          equ	4007	;# 
  1053   000FA8                     EEDATA          equ	4008	;# 
  1054   000FA9                     EEADR           equ	4009	;# 
  1055   000FAA                     EEADRH          equ	4010	;# 
  1056   000FAB                     RCSTA           equ	4011	;# 
  1057   000FAB                     RCSTA1          equ	4011	;# 
  1058   000FAC                     TXSTA           equ	4012	;# 
  1059   000FAC                     TXSTA1          equ	4012	;# 
  1060   000FAD                     TXREG           equ	4013	;# 
  1061   000FAD                     TXREG1          equ	4013	;# 
  1062   000FAE                     RCREG           equ	4014	;# 
  1063   000FAE                     RCREG1          equ	4014	;# 
  1064   000FAF                     SPBRG           equ	4015	;# 
  1065   000FAF                     SPBRG1          equ	4015	;# 
  1066   000FB0                     SPBRGH          equ	4016	;# 
  1067   000FB1                     T3CON           equ	4017	;# 
  1068   000FB2                     TMR3            equ	4018	;# 
  1069   000FB2                     TMR3L           equ	4018	;# 
  1070   000FB3                     TMR3H           equ	4019	;# 
  1071   000FB4                     CVRCON2         equ	4020	;# 
  1072   000FB5                     CVRCON          equ	4021	;# 
  1073   000FB6                     ECCP1AS         equ	4022	;# 
  1074   000FB7                     PWM1CON         equ	4023	;# 
  1075   000FB8                     BAUDCON         equ	4024	;# 
  1076   000FB8                     BAUDCTL         equ	4024	;# 
  1077   000FB9                     PSTRCON         equ	4025	;# 
  1078   000FBA                     CCP2CON         equ	4026	;# 
  1079   000FBB                     CCPR2           equ	4027	;# 
  1080   000FBB                     CCPR2L          equ	4027	;# 
  1081   000FBC                     CCPR2H          equ	4028	;# 
  1082   000FBD                     CCP1CON         equ	4029	;# 
  1083   000FBE                     CCPR1           equ	4030	;# 
  1084   000FBE                     CCPR1L          equ	4030	;# 
  1085   000FBF                     CCPR1H          equ	4031	;# 
  1086   000FC0                     ADCON2          equ	4032	;# 
  1087   000FC1                     ADCON1          equ	4033	;# 
  1088   000FC2                     ADCON0          equ	4034	;# 
  1089   000FC3                     ADRES           equ	4035	;# 
  1090   000FC3                     ADRESL          equ	4035	;# 
  1091   000FC4                     ADRESH          equ	4036	;# 
  1092   000FC5                     SSPCON2         equ	4037	;# 
  1093   000FC6                     SSPCON1         equ	4038	;# 
  1094   000FC7                     SSPSTAT         equ	4039	;# 
  1095   000FC8                     SSPADD          equ	4040	;# 
  1096   000FC9                     SSPBUF          equ	4041	;# 
  1097   000FCA                     T2CON           equ	4042	;# 
  1098   000FCB                     PR2             equ	4043	;# 
  1099   000FCB                     MEMCON          equ	4043	;# 
  1100   000FCC                     TMR2            equ	4044	;# 
  1101   000FCD                     T1CON           equ	4045	;# 
  1102   000FCE                     TMR1            equ	4046	;# 
  1103   000FCE                     TMR1L           equ	4046	;# 
  1104   000FCF                     TMR1H           equ	4047	;# 
  1105   000FD0                     RCON            equ	4048	;# 
  1106   000FD1                     WDTCON          equ	4049	;# 
  1107   000FD2                     HLVDCON         equ	4050	;# 
  1108   000FD2                     LVDCON          equ	4050	;# 
  1109   000FD3                     OSCCON          equ	4051	;# 
  1110   000FD5                     T0CON           equ	4053	;# 
  1111   000FD6                     TMR0            equ	4054	;# 
  1112   000FD6                     TMR0L           equ	4054	;# 
  1113   000FD7                     TMR0H           equ	4055	;# 
  1114   000FD8                     STATUS          equ	4056	;# 
  1115   000FD9                     FSR2            equ	4057	;# 
  1116   000FD9                     FSR2L           equ	4057	;# 
  1117   000FDA                     FSR2H           equ	4058	;# 
  1118   000FDB                     PLUSW2          equ	4059	;# 
  1119   000FDC                     PREINC2         equ	4060	;# 
  1120   000FDD                     POSTDEC2        equ	4061	;# 
  1121   000FDE                     POSTINC2        equ	4062	;# 
  1122   000FDF                     INDF2           equ	4063	;# 
  1123   000FE0                     BSR             equ	4064	;# 
  1124   000FE1                     FSR1            equ	4065	;# 
  1125   000FE1                     FSR1L           equ	4065	;# 
  1126   000FE2                     FSR1H           equ	4066	;# 
  1127   000FE3                     PLUSW1          equ	4067	;# 
  1128   000FE4                     PREINC1         equ	4068	;# 
  1129   000FE5                     POSTDEC1        equ	4069	;# 
  1130   000FE6                     POSTINC1        equ	4070	;# 
  1131   000FE7                     INDF1           equ	4071	;# 
  1132   000FE8                     WREG            equ	4072	;# 
  1133   000FE9                     FSR0            equ	4073	;# 
  1134   000FE9                     FSR0L           equ	4073	;# 
  1135   000FEA                     FSR0H           equ	4074	;# 
  1136   000FEB                     PLUSW0          equ	4075	;# 
  1137   000FEC                     PREINC0         equ	4076	;# 
  1138   000FED                     POSTDEC0        equ	4077	;# 
  1139   000FEE                     POSTINC0        equ	4078	;# 
  1140   000FEF                     INDF0           equ	4079	;# 
  1141   000FF0                     INTCON3         equ	4080	;# 
  1142   000FF1                     INTCON2         equ	4081	;# 
  1143   000FF2                     INTCON          equ	4082	;# 
  1144   000FF3                     PROD            equ	4083	;# 
  1145   000FF3                     PRODL           equ	4083	;# 
  1146   000FF4                     PRODH           equ	4084	;# 
  1147   000FF5                     TABLAT          equ	4085	;# 
  1148   000FF6                     TBLPTR          equ	4086	;# 
  1149   000FF6                     TBLPTRL         equ	4086	;# 
  1150   000FF7                     TBLPTRH         equ	4087	;# 
  1151   000FF8                     TBLPTRU         equ	4088	;# 
  1152   000FF9                     PCLAT           equ	4089	;# 
  1153   000FF9                     PC              equ	4089	;# 
  1154   000FF9                     PCL             equ	4089	;# 
  1155   000FFA                     PCLATH          equ	4090	;# 
  1156   000FFB                     PCLATU          equ	4091	;# 
  1157   000FFC                     STKPTR          equ	4092	;# 
  1158   000FFD                     TOS             equ	4093	;# 
  1159   000FFD                     TOSL            equ	4093	;# 
  1160   000FFE                     TOSH            equ	4094	;# 
  1161   000FFF                     TOSU            equ	4095	;# 
  1162   000F77                     SSPMSK          equ	3959	;# 
  1163   000F78                     SLRCON          equ	3960	;# 
  1164   000F79                     CM2CON1         equ	3961	;# 
  1165   000F7A                     CM2CON0         equ	3962	;# 
  1166   000F7B                     CM1CON0         equ	3963	;# 
  1167   000F7C                     WPUB            equ	3964	;# 
  1168   000F7D                     IOCB            equ	3965	;# 
  1169   000F7E                     ANSEL           equ	3966	;# 
  1170   000F7F                     ANSELH          equ	3967	;# 
  1171   000F80                     PORTA           equ	3968	;# 
  1172   000F81                     PORTB           equ	3969	;# 
  1173   000F82                     PORTC           equ	3970	;# 
  1174   000F83                     PORTD           equ	3971	;# 
  1175   000F84                     PORTE           equ	3972	;# 
  1176   000F89                     LATA            equ	3977	;# 
  1177   000F8A                     LATB            equ	3978	;# 
  1178   000F8B                     LATC            equ	3979	;# 
  1179   000F8C                     LATD            equ	3980	;# 
  1180   000F8D                     LATE            equ	3981	;# 
  1181   000F92                     TRISA           equ	3986	;# 
  1182   000F92                     DDRA            equ	3986	;# 
  1183   000F93                     TRISB           equ	3987	;# 
  1184   000F93                     DDRB            equ	3987	;# 
  1185   000F94                     TRISC           equ	3988	;# 
  1186   000F94                     DDRC            equ	3988	;# 
  1187   000F95                     TRISD           equ	3989	;# 
  1188   000F95                     DDRD            equ	3989	;# 
  1189   000F96                     TRISE           equ	3990	;# 
  1190   000F96                     DDRE            equ	3990	;# 
  1191   000F9B                     OSCTUNE         equ	3995	;# 
  1192   000F9D                     PIE1            equ	3997	;# 
  1193   000F9E                     PIR1            equ	3998	;# 
  1194   000F9F                     IPR1            equ	3999	;# 
  1195   000FA0                     PIE2            equ	4000	;# 
  1196   000FA1                     PIR2            equ	4001	;# 
  1197   000FA2                     IPR2            equ	4002	;# 
  1198   000FA6                     EECON1          equ	4006	;# 
  1199   000FA7                     EECON2          equ	4007	;# 
  1200   000FA8                     EEDATA          equ	4008	;# 
  1201   000FA9                     EEADR           equ	4009	;# 
  1202   000FAA                     EEADRH          equ	4010	;# 
  1203   000FAB                     RCSTA           equ	4011	;# 
  1204   000FAB                     RCSTA1          equ	4011	;# 
  1205   000FAC                     TXSTA           equ	4012	;# 
  1206   000FAC                     TXSTA1          equ	4012	;# 
  1207   000FAD                     TXREG           equ	4013	;# 
  1208   000FAD                     TXREG1          equ	4013	;# 
  1209   000FAE                     RCREG           equ	4014	;# 
  1210   000FAE                     RCREG1          equ	4014	;# 
  1211   000FAF                     SPBRG           equ	4015	;# 
  1212   000FAF                     SPBRG1          equ	4015	;# 
  1213   000FB0                     SPBRGH          equ	4016	;# 
  1214   000FB1                     T3CON           equ	4017	;# 
  1215   000FB2                     TMR3            equ	4018	;# 
  1216   000FB2                     TMR3L           equ	4018	;# 
  1217   000FB3                     TMR3H           equ	4019	;# 
  1218   000FB4                     CVRCON2         equ	4020	;# 
  1219   000FB5                     CVRCON          equ	4021	;# 
  1220   000FB6                     ECCP1AS         equ	4022	;# 
  1221   000FB7                     PWM1CON         equ	4023	;# 
  1222   000FB8                     BAUDCON         equ	4024	;# 
  1223   000FB8                     BAUDCTL         equ	4024	;# 
  1224   000FB9                     PSTRCON         equ	4025	;# 
  1225   000FBA                     CCP2CON         equ	4026	;# 
  1226   000FBB                     CCPR2           equ	4027	;# 
  1227   000FBB                     CCPR2L          equ	4027	;# 
  1228   000FBC                     CCPR2H          equ	4028	;# 
  1229   000FBD                     CCP1CON         equ	4029	;# 
  1230   000FBE                     CCPR1           equ	4030	;# 
  1231   000FBE                     CCPR1L          equ	4030	;# 
  1232   000FBF                     CCPR1H          equ	4031	;# 
  1233   000FC0                     ADCON2          equ	4032	;# 
  1234   000FC1                     ADCON1          equ	4033	;# 
  1235   000FC2                     ADCON0          equ	4034	;# 
  1236   000FC3                     ADRES           equ	4035	;# 
  1237   000FC3                     ADRESL          equ	4035	;# 
  1238   000FC4                     ADRESH          equ	4036	;# 
  1239   000FC5                     SSPCON2         equ	4037	;# 
  1240   000FC6                     SSPCON1         equ	4038	;# 
  1241   000FC7                     SSPSTAT         equ	4039	;# 
  1242   000FC8                     SSPADD          equ	4040	;# 
  1243   000FC9                     SSPBUF          equ	4041	;# 
  1244   000FCA                     T2CON           equ	4042	;# 
  1245   000FCB                     PR2             equ	4043	;# 
  1246   000FCB                     MEMCON          equ	4043	;# 
  1247   000FCC                     TMR2            equ	4044	;# 
  1248   000FCD                     T1CON           equ	4045	;# 
  1249   000FCE                     TMR1            equ	4046	;# 
  1250   000FCE                     TMR1L           equ	4046	;# 
  1251   000FCF                     TMR1H           equ	4047	;# 
  1252   000FD0                     RCON            equ	4048	;# 
  1253   000FD1                     WDTCON          equ	4049	;# 
  1254   000FD2                     HLVDCON         equ	4050	;# 
  1255   000FD2                     LVDCON          equ	4050	;# 
  1256   000FD3                     OSCCON          equ	4051	;# 
  1257   000FD5                     T0CON           equ	4053	;# 
  1258   000FD6                     TMR0            equ	4054	;# 
  1259   000FD6                     TMR0L           equ	4054	;# 
  1260   000FD7                     TMR0H           equ	4055	;# 
  1261   000FD8                     STATUS          equ	4056	;# 
  1262   000FD9                     FSR2            equ	4057	;# 
  1263   000FD9                     FSR2L           equ	4057	;# 
  1264   000FDA                     FSR2H           equ	4058	;# 
  1265   000FDB                     PLUSW2          equ	4059	;# 
  1266   000FDC                     PREINC2         equ	4060	;# 
  1267   000FDD                     POSTDEC2        equ	4061	;# 
  1268   000FDE                     POSTINC2        equ	4062	;# 
  1269   000FDF                     INDF2           equ	4063	;# 
  1270   000FE0                     BSR             equ	4064	;# 
  1271   000FE1                     FSR1            equ	4065	;# 
  1272   000FE1                     FSR1L           equ	4065	;# 
  1273   000FE2                     FSR1H           equ	4066	;# 
  1274   000FE3                     PLUSW1          equ	4067	;# 
  1275   000FE4                     PREINC1         equ	4068	;# 
  1276   000FE5                     POSTDEC1        equ	4069	;# 
  1277   000FE6                     POSTINC1        equ	4070	;# 
  1278   000FE7                     INDF1           equ	4071	;# 
  1279   000FE8                     WREG            equ	4072	;# 
  1280   000FE9                     FSR0            equ	4073	;# 
  1281   000FE9                     FSR0L           equ	4073	;# 
  1282   000FEA                     FSR0H           equ	4074	;# 
  1283   000FEB                     PLUSW0          equ	4075	;# 
  1284   000FEC                     PREINC0         equ	4076	;# 
  1285   000FED                     POSTDEC0        equ	4077	;# 
  1286   000FEE                     POSTINC0        equ	4078	;# 
  1287   000FEF                     INDF0           equ	4079	;# 
  1288   000FF0                     INTCON3         equ	4080	;# 
  1289   000FF1                     INTCON2         equ	4081	;# 
  1290   000FF2                     INTCON          equ	4082	;# 
  1291   000FF3                     PROD            equ	4083	;# 
  1292   000FF3                     PRODL           equ	4083	;# 
  1293   000FF4                     PRODH           equ	4084	;# 
  1294   000FF5                     TABLAT          equ	4085	;# 
  1295   000FF6                     TBLPTR          equ	4086	;# 
  1296   000FF6                     TBLPTRL         equ	4086	;# 
  1297   000FF7                     TBLPTRH         equ	4087	;# 
  1298   000FF8                     TBLPTRU         equ	4088	;# 
  1299   000FF9                     PCLAT           equ	4089	;# 
  1300   000FF9                     PC              equ	4089	;# 
  1301   000FF9                     PCL             equ	4089	;# 
  1302   000FFA                     PCLATH          equ	4090	;# 
  1303   000FFB                     PCLATU          equ	4091	;# 
  1304   000FFC                     STKPTR          equ	4092	;# 
  1305   000FFD                     TOS             equ	4093	;# 
  1306   000FFD                     TOSL            equ	4093	;# 
  1307   000FFE                     TOSH            equ	4094	;# 
  1308   000FFF                     TOSU            equ	4095	;# 
  1309                           
  1310                           	psect	smallconst
  1311   001000                     __psmallconst:
  1312                           	callstack 0
  1313   001000  00                 	db	0
  1314   001001                     _default_security_key:
  1315                           	callstack 0
  1316   001001  00                 	db	0
  1317   001002  10                 	db	16
  1318   001003  25                 	db	37
  1319   001004  37                 	db	55
  1320   001005  04                 	db	4
  1321   001006  55                 	db	85
  1322   001007  06                 	db	6
  1323   001008  79                 	db	121
  1324   001009  08                 	db	8
  1325   00100A  09                 	db	9
  1326   00100B  10                 	db	16
  1327   00100C  11                 	db	17
  1328   00100D  12                 	db	18
  1329   00100E  13                 	db	19
  1330   00100F  14                 	db	20
  1331   001010  15                 	db	21
  1332   001011                     __end_of_default_security_key:
  1333                           	callstack 0
  1334   001011                     _default_mac_address:
  1335                           	callstack 0
  1336   001011  11                 	db	17
  1337   001012  28                 	db	40
  1338   001013  35                 	db	53
  1339   001014  44                 	db	68
  1340   001015  56                 	db	86
  1341   001016  66                 	db	102
  1342   001017  77                 	db	119
  1343   001018  01                 	db	1
  1344   001019                     __end_of_default_mac_address:
  1345                           	callstack 0
  1346   007CF0                     _TMR1IF         set	31984
  1347   007E68                     _TMR1ON         set	32360
  1348   007E69                     _TMR1CS         set	32361
  1349   007E6B                     _T1OSCEN        set	32363
  1350   007E6A                     _T1SYNC         set	32362
  1351   007E6D                     _T1CKPS1        set	32365
  1352   007E6C                     _T1CKPS0        set	32364
  1353   007E6F                     _T1RD16         set	32367
  1354   007F8F                     _RBPU           set	32655
  1355   007CED                     _RCIE           set	31981
  1356   007CEE                     _ADIE           set	31982
  1357   007D03                     _BCLIE          set	32003
  1358   007CEB                     _SSPIE          set	31979
  1359   007D04                     _EEIE           set	32004
  1360   007D00                     _CCP2IE         set	32000
  1361   007CEA                     _CCP1IE         set	31978
  1362   007CE9                     _TMR2IE         set	31977
  1363   007CE8                     _TMR1IE         set	31976
  1364   007F95                     _T0IE           set	32661
  1365   007F93                     _RBIE           set	32659
  1366   007F94                     _INT0E          set	32660
  1367   007F96                     _PEIE           set	32662
  1368   007F97                     _GIE            set	32663
  1369   007E87                     _IPEN           set	32391
  1370   000FCF                     _TMR1H          set	4047
  1371   000FCE                     _TMR1L          set	4046
  1372   000F9B                     _OSCTUNE        set	3995
  1373   000FD3                     _OSCCON         set	4051
  1374   000F95                     _TRISDbits      set	3989
  1375   000F96                     _TRISEbits      set	3990
  1376   000F93                     _TRISBbits      set	3987
  1377   000F84                     _PORTE          set	3972
  1378   000F83                     _PORTD          set	3971
  1379   000F82                     _PORTC          set	3970
  1380   000F81                     _PORTB          set	3969
  1381   000F80                     _PORTA          set	3968
  1382   000F8D                     _LATEbits       set	3981
  1383   000F82                     _PORTCbits      set	3970
  1384   000FC9                     _SSPBUF         set	4041
  1385   000F9E                     _PIR1bits       set	3998
  1386   000FC6                     _SSPCON1bits    set	4038
  1387   000FC6                     _SSPCON1        set	4038
  1388   000FC7                     _SSPSTATbits    set	4039
  1389   000F94                     _TRISCbits      set	3988
  1390   000F81                     _PORTBbits      set	3969
  1391   000F8C                     _LATDbits       set	3980
  1392   000F8B                     _LATCbits       set	3979
  1393   001019                     STR_5:
  1394   001019  4C                 	db	76	;'L'
  1395   00101A  65                 	db	101	;'e'
  1396   00101B  64                 	db	100	;'d'
  1397   00101C  20                 	db	32
  1398   00101D  65                 	db	101	;'e'
  1399   00101E  6E                 	db	110	;'n'
  1400   00101F  63                 	db	99	;'c'
  1401   001020  65                 	db	101	;'e'
  1402   001021  6E                 	db	110	;'n'
  1403   001022  64                 	db	100	;'d'
  1404   001023  69                 	db	105	;'i'
  1405   001024  64                 	db	100	;'d'
  1406   001025  6F                 	db	111	;'o'
  1407   001026  00                 	db	0
  1408   001027                     STR_8:
  1409   001027  4C                 	db	76	;'L'
  1410   001028  65                 	db	101	;'e'
  1411   001029  64                 	db	100	;'d'
  1412   00102A  20                 	db	32
  1413   00102B  61                 	db	97	;'a'
  1414   00102C  70                 	db	112	;'p'
  1415   00102D  61                 	db	97	;'a'
  1416   00102E  67                 	db	103	;'g'
  1417   00102F  61                 	db	97	;'a'
  1418   001030  64                 	db	100	;'d'
  1419   001031  6F                 	db	111	;'o'
  1420   001032  00                 	db	0
  1421   001033                     STR_15:
  1422   001033  43                 	db	67	;'C'
  1423   001034  6D                 	db	109	;'m'
  1424   001035  64                 	db	100	;'d'
  1425   001036  20                 	db	32
  1426   001037  65                 	db	101	;'e'
  1427   001038  72                 	db	114	;'r'
  1428   001039  72                 	db	114	;'r'
  1429   00103A  6F                 	db	111	;'o'
  1430   00103B  72                 	db	114	;'r'
  1431   00103C  2E                 	db	46
  1432   00103D  00                 	db	0
  1433   00103E                     STR_6:
  1434   00103E  43                 	db	67	;'C'
  1435   00103F  4D                 	db	77	;'M'
  1436   001040  44                 	db	68	;'D'
  1437   001041  3A                 	db	58	;':'
  1438   001042  41                 	db	65	;'A'
  1439   001043  4C                 	db	76	;'L'
  1440   001044  41                 	db	65	;'A'
  1441   001045  00                 	db	0
  1442   001046                     STR_3:
  1443   001046  43                 	db	67	;'C'
  1444   001047  4D                 	db	77	;'M'
  1445   001048  44                 	db	68	;'D'
  1446   001049  3A                 	db	58	;':'
  1447   00104A  50                 	db	80	;'P'
  1448   00104B  4C                 	db	76	;'L'
  1449   00104C  41                 	db	65	;'A'
  1450   00104D  00                 	db	0
  1451   00104E                     STR_12:
  1452   00104E  43                 	db	67	;'C'
  1453   00104F  4D                 	db	77	;'M'
  1454   001050  44                 	db	68	;'D'
  1455   001051  3A                 	db	58	;':'
  1456   001052  41                 	db	65	;'A'
  1457   001053  4C                 	db	76	;'L'
  1458   001054  52                 	db	82	;'R'
  1459   001055  00                 	db	0
  1460   001056                     STR_9:
  1461   001056  43                 	db	67	;'C'
  1462   001057  4D                 	db	77	;'M'
  1463   001058  44                 	db	68	;'D'
  1464   001059  3A                 	db	58	;':'
  1465   00105A  50                 	db	80	;'P'
  1466   00105B  4C                 	db	76	;'L'
  1467   00105C  52                 	db	82	;'R'
  1468   00105D  00                 	db	0
  1469   00105E                     STR_2:
  1470   00105E  43                 	db	67	;'C'
  1471   00105F  4D                 	db	77	;'M'
  1472   001060  44                 	db	68	;'D'
  1473   001061  3A                 	db	58	;':'
  1474   001062  41                 	db	65	;'A'
  1475   001063  4C                 	db	76	;'L'
  1476   001064  56                 	db	86	;'V'
  1477   001065  00                 	db	0
  1478   001066                     STR_1:
  1479   001066  43                 	db	67	;'C'
  1480   001067  4D                 	db	77	;'M'
  1481   001068  44                 	db	68	;'D'
  1482   001069  3A                 	db	58	;':'
  1483   00106A  50                 	db	80	;'P'
  1484   00106B  4C                 	db	76	;'L'
  1485   00106C  56                 	db	86	;'V'
  1486   00106D  00                 	db	0
  1487   001019                     STR_11          equ	STR_5
  1488   001027                     STR_14          equ	STR_8
  1489   001056                     STR_10          equ	STR_9
  1490   00104E                     STR_13          equ	STR_12
  1491   001046                     STR_4           equ	STR_3
  1492   00103E                     STR_7           equ	STR_6
  1493   00106E  00                 	db	0	; dummy byte at the end
  1494   000002                     __activetblptr  equ	2
  1495                           
  1496                           ; #config settings
  1497                           
  1498                           	psect	cinit
  1499   001C1E                     __pcinit:
  1500                           	callstack 0
  1501   001C1E                     start_initialization:
  1502                           	callstack 0
  1503   001C1E                     __initialization:
  1504                           	callstack 0
  1505                           
  1506                           ; Clear objects allocated to BANK1 (140 bytes)
  1507   001C1E  EE01  F000         	lfsr	0,__pbssBANK1
  1508   001C22  0E8C               	movlw	140
  1509   001C24                     clear_0:
  1510   001C24  6AEE               	clrf	postinc0,c
  1511   001C26  06E8               	decf	wreg,f,c
  1512   001C28  E1FD               	bnz	clear_0
  1513                           
  1514                           ; Clear objects allocated to BANK0 (90 bytes)
  1515   001C2A  EE00  F060         	lfsr	0,__pbssBANK0
  1516   001C2E  0E5A               	movlw	90
  1517   001C30                     clear_1:
  1518   001C30  6AEE               	clrf	postinc0,c
  1519   001C32  06E8               	decf	wreg,f,c
  1520   001C34  E1FD               	bnz	clear_1
  1521                           
  1522                           ; Clear objects allocated to COMRAM (12 bytes)
  1523   001C36  EE00  F031         	lfsr	0,__pbssCOMRAM
  1524   001C3A  0E0C               	movlw	12
  1525   001C3C                     clear_2:
  1526   001C3C  6AEE               	clrf	postinc0,c
  1527   001C3E  06E8               	decf	wreg,f,c
  1528   001C40  E1FD               	bnz	clear_2
  1529   001C42                     end_of_initialization:
  1530                           	callstack 0
  1531   001C42                     __end_of__initialization:
  1532                           	callstack 0
  1533   001C42  903D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1534   001C44  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1535   001C46  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1536   001C48  6EF8               	movwf	tblptru,c
  1537   001C4A  0100               	movlb	0
  1538   001C4C  EF38  F008         	goto	_main	;jump to C main() function
  1539                           
  1540                           	psect	bssCOMRAM
  1541   000031                     __pbssCOMRAM:
  1542                           	callstack 0
  1543   000031                     _mrf24_data_out_s:
  1544                           	callstack 0
  1545   000031                     	ds	6
  1546   000037                     _timeStamp:
  1547                           	callstack 0
  1548   000037                     	ds	4
  1549   00003B                     _estadoActual:
  1550                           	callstack 0
  1551   00003B                     	ds	1
  1552   00003C                     _long_mac_address_e:
  1553                           	callstack 0
  1554   00003C                     	ds	1
  1555                           
  1556                           	psect	bssBANK0
  1557   000060                     __pbssBANK0:
  1558                           	callstack 0
  1559   000060                     _mrf24_data_config_s:
  1560                           	callstack 0
  1561   000060                     	ds	34
  1562   000082                     _mrf24_data_in_s:
  1563                           	callstack 0
  1564   000082                     	ds	56
  1565                           
  1566                           	psect	bssBANK1
  1567   000100                     __pbssBANK1:
  1568                           	callstack 0
  1569   000100                     	ds	140
  1570                           
  1571                           	psect	cstackCOMRAM
  1572   000001                     __pcstackCOMRAM:
  1573                           	callstack 0
  1574   000001                     ?_strlen:
  1575                           	callstack 0
  1576   000001                     SetCSPin@estado:
  1577                           	callstack 0
  1578   000001                     SetWakePin@estado:
  1579                           	callstack 0
  1580   000001                     SetResetPin@estado:
  1581                           	callstack 0
  1582   000001                     SPIWriteByte@dato:
  1583                           	callstack 0
  1584   000001                     DelayInit@delay:
  1585                           	callstack 0
  1586   000001                     DelayReset@delay:
  1587                           	callstack 0
  1588   000001                     DelayIsRunning@delay:
  1589                           	callstack 0
  1590   000001                     strlen@s:
  1591                           	callstack 0
  1592   000001                     MRF24SetDireccionDestino@direccion:
  1593                           	callstack 0
  1594   000001                     MRF24SetPANIDDestino@panid:
  1595                           	callstack 0
  1596   000001                     ??_InicializoVariables:
  1597   000001                     
  1598                           ; 1 bytes @ 0x0
  1599   000001                     	ds	1
  1600   000002                     WriteByteSPIPort@dato:
  1601                           	callstack 0
  1602   000002                     DelayRead@delay:
  1603                           	callstack 0
  1604   000002                     InicializoVariables@i:
  1605                           	callstack 0
  1606   000002                     SPIWrite2Byte@dato:
  1607                           	callstack 0
  1608   000002                     DelayInit@duration:
  1609                           	callstack 0
  1610   000002                     
  1611                           ; 1 bytes @ 0x1
  1612   000002                     	ds	1
  1613   000003                     ?_strcmp:
  1614                           	callstack 0
  1615   000003                     SetShortAddr@valor:
  1616                           	callstack 0
  1617   000003                     GetShortAddr@leido_spi:
  1618                           	callstack 0
  1619   000003                     strcmp@l:
  1620                           	callstack 0
  1621   000003                     strlen@a:
  1622                           	callstack 0
  1623   000003                     ??_DelayRead:
  1624   000003                     
  1625                           ; 1 bytes @ 0x2
  1626   000003                     	ds	1
  1627   000004                     SetShortAddr@reg_address:
  1628                           	callstack 0
  1629   000004                     GetShortAddr@reg_address:
  1630                           	callstack 0
  1631   000004                     MRF24SetMensajeSalida@mensaje:
  1632                           	callstack 0
  1633   000004                     strcmp@r:
  1634                           	callstack 0
  1635   000004                     Write2ByteSPIPort@dato:
  1636                           	callstack 0
  1637   000004                     
  1638                           ; 1 bytes @ 0x3
  1639   000004                     	ds	1
  1640   000005                     SetDeviceMACAddress@i:
  1641                           	callstack 0
  1642   000005                     ??_strcmp:
  1643   000005                     
  1644                           ; 1 bytes @ 0x4
  1645   000005                     	ds	1
  1646   000006                     DebounceFSMInit@antirrebote_boton_n:
  1647                           	callstack 0
  1648   000006                     SetLongAddr@reg_address:
  1649                           	callstack 0
  1650   000006                     GetLongAddr@reg_address:
  1651                           	callstack 0
  1652   000006                     
  1653                           ; 1 bytes @ 0x5
  1654   000006                     	ds	1
  1655   000007                     
  1656                           ; 1 bytes @ 0x6
  1657   000007                     	ds	1
  1658   000008                     SetLongAddr@valor:
  1659                           	callstack 0
  1660   000008                     ??_GetLongAddr:
  1661                           
  1662                           ; 1 bytes @ 0x7
  1663   000008                     	ds	1
  1664   000009                     ??_SetLongAddr:
  1665                           
  1666                           ; 1 bytes @ 0x8
  1667   000009                     	ds	1
  1668   00000A                     GetLongAddr@respuesta:
  1669                           	callstack 0
  1670                           
  1671                           ; 1 bytes @ 0x9
  1672   00000A                     	ds	1
  1673   00000B                     ??_SetChannel:
  1674   00000B                     ??_MRF24TransmitirDato:
  1675   00000B                     ??_MRF24ReciboPaquete:
  1676   00000B                     ??_MRF24BuscarDispositivos:
  1677                           
  1678                           ; 1 bytes @ 0xA
  1679   00000B                     	ds	4
  1680   00000F                     DebounceFSMUpdate@antirrebote_boton_n:
  1681                           	callstack 0
  1682   00000F                     ??_InicializoMRF24:
  1683                           
  1684                           ; 1 bytes @ 0xE
  1685   00000F                     	ds	1
  1686   000010                     InicializoMRF24@lectura:
  1687                           	callstack 0
  1688   000010                     MRF24TransmitirDato@i:
  1689                           	callstack 0
  1690   000010                     MRF24ReciboPaquete@largo_mensaje:
  1691                           	callstack 0
  1692   000010                     MRF24BuscarDispositivos@i:
  1693                           	callstack 0
  1694   000010                     DebounceFSMUpdate@estado_pin:
  1695                           	callstack 0
  1696                           
  1697                           ; 1 bytes @ 0xF
  1698   000010                     	ds	1
  1699   000011                     MRF24TransmitirDato@pos_memoria:
  1700                           	callstack 0
  1701   000011                     MRF24ReciboPaquete@index:
  1702                           	callstack 0
  1703   000011                     MRF24BuscarDispositivos@pos_memoria:
  1704                           	callstack 0
  1705   000011                     InicializoMRF24@delay_time_out:
  1706                           	callstack 0
  1707   000011                     ??_DebounceFSMUpdate:
  1708                           
  1709                           ; 1 bytes @ 0x10
  1710   000011                     	ds	9
  1711   00001A                     ??_MRF24J40Init:
  1712                           
  1713                           ; 1 bytes @ 0x19
  1714   00001A                     	ds	1
  1715   00001B                     ??_main:
  1716                           
  1717                           ; 1 bytes @ 0x1A
  1718   00001B                     	ds	2
  1719   00001D                     main@delay_parpadeo:
  1720                           	callstack 0
  1721                           
  1722                           ; 9 bytes @ 0x1C
  1723   00001D                     	ds	9
  1724   000026                     main@boton1:
  1725                           	callstack 0
  1726                           
  1727                           ; 11 bytes @ 0x25
  1728   000026                     	ds	11
  1729                           
  1730 ;;
  1731 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1732 ;;
  1733 ;; *************** function _main *****************
  1734 ;; Defined at:
  1735 ;;		line 28 in file "main.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;		None
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  boton1         11   37[COMRAM] struct .
  1740 ;;  delay_parpad    9   28[COMRAM] struct .
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1751 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1753 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;Total ram usage:       22 bytes
  1755 ;; Hardware stack levels required when called: 8
  1756 ;; This function calls:
  1757 ;;		_BoardInit
  1758 ;;		_DebounceFSMInit
  1759 ;;		_DebounceFSMUpdate
  1760 ;;		_DelayInit
  1761 ;;		_DelayRead
  1762 ;;		_MRF24BuscarDispositivos
  1763 ;;		_MRF24GetMensajeEntrada
  1764 ;;		_MRF24IsNewMsg
  1765 ;;		_MRF24J40Init
  1766 ;;		_MRF24ReciboPaquete
  1767 ;;		_MRF24SetDireccionDestino
  1768 ;;		_MRF24SetMensajeSalida
  1769 ;;		_MRF24SetPANIDDestino
  1770 ;;		_MRF24TransmitirDato
  1771 ;;		_strcmp
  1772 ;; This function is called by:
  1773 ;;		Startup code after reset
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text0
  1778   001070                     __ptext0:
  1779                           	callstack 0
  1780   001070                     _main:
  1781                           	callstack 23
  1782   001070                     
  1783                           ;main.c: 30:     delayNoBloqueanteData delay_parpadeo;;main.c: 31:     debounceData_t bo
      +                          ton1;;main.c: 32:  DebounceFSMInit(&boton1);
  1784   001070  0E26               	movlw	low main@boton1
  1785   001072  6E06               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  1786   001074  EC28  F00E         	call	_DebounceFSMInit	;wreg free
  1787   001078                     
  1788                           ;main.c: 33:     BoardInit();
  1789   001078  ECED  F00C         	call	_BoardInit	;wreg free
  1790   00107C                     
  1791                           ;main.c: 34:     MRF24J40Init();
  1792   00107C  ECA2  F00D         	call	_MRF24J40Init	;wreg free
  1793   001080                     
  1794                           ;main.c: 35:     DelayInit(&delay_parpadeo, 1000);
  1795   001080  0E1D               	movlw	low main@delay_parpadeo
  1796   001082  6E01               	movwf	DelayInit@delay^0,c
  1797   001084  0EE8               	movlw	232
  1798   001086  6E02               	movwf	DelayInit@duration^0,c
  1799   001088  0E03               	movlw	3
  1800   00108A  6E03               	movwf	(DelayInit@duration+1)^0,c
  1801   00108C  0E00               	movlw	0
  1802   00108E  6E04               	movwf	(DelayInit@duration+2)^0,c
  1803   001090  0E00               	movlw	0
  1804   001092  6E05               	movwf	(DelayInit@duration+3)^0,c
  1805   001094  EC57  F00E         	call	_DelayInit	;wreg free
  1806   001098                     
  1807                           ;main.c: 36:     MRF24SetDireccionDestino(0x1111);
  1808   001098  0E11               	movlw	17
  1809   00109A  6E02               	movwf	(MRF24SetDireccionDestino@direccion+1)^0,c
  1810   00109C  0E11               	movlw	17
  1811   00109E  6E01               	movwf	MRF24SetDireccionDestino@direccion^0,c
  1812   0010A0  ECB0  F00E         	call	_MRF24SetDireccionDestino	;wreg free
  1813   0010A4                     
  1814                           ;main.c: 37:     MRF24SetPANIDDestino(0X1234);
  1815   0010A4  0E12               	movlw	18
  1816   0010A6  6E02               	movwf	(MRF24SetPANIDDestino@panid+1)^0,c
  1817   0010A8  0E34               	movlw	52
  1818   0010AA  6E01               	movwf	MRF24SetPANIDDestino@panid^0,c
  1819   0010AC  ECA1  F00E         	call	_MRF24SetPANIDDestino	;wreg free
  1820   0010B0                     l300:
  1821   0010B0  0004               	clrwdt		;# 
  1822                           
  1823                           ;main.c: 42:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  1824   0010B2  EF6B  F008         	goto	l2279
  1825   0010B6                     l2269:
  1826                           
  1827                           ;main.c: 46:                 MRF24SetMensajeSalida("CMD:PLV");
  1828   0010B6  0E66               	movlw	low STR_1
  1829   0010B8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1830   0010BA  EC82  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1831   0010BE                     
  1832                           ;main.c: 49: MRF24BuscarDispositivos();
  1833   0010BE  EC86  F00A         	call	_MRF24BuscarDispositivos	;wreg free
  1834                           
  1835                           ;main.c: 50:     break;
  1836   0010C2  EF8D  F008         	goto	l2281
  1837   0010C6                     l2273:
  1838                           
  1839                           ;main.c: 54:                 MRF24SetMensajeSalida("CMD:ALV");
  1840   0010C6  0E5E               	movlw	low STR_2
  1841   0010C8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1842   0010CA  EC82  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1843   0010CE                     
  1844                           ;main.c: 55:                 MRF24TransmitirDato();
  1845   0010CE  EC1B  F00B         	call	_MRF24TransmitirDato	;wreg free
  1846                           
  1847                           ;main.c: 56:     break;
  1848   0010D2  EF8D  F008         	goto	l2281
  1849   0010D6                     l2279:
  1850   0010D6  0E26               	movlw	low main@boton1
  1851   0010D8  6E0F               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  1852   0010DA  B482               	btfsc	130,2,c	;volatile
  1853   0010DC  EF72  F008         	goto	u831
  1854   0010E0  EF75  F008         	goto	u830
  1855   0010E4                     u831:
  1856   0010E4  0E01               	movlw	1
  1857   0010E6  EF76  F008         	goto	u836
  1858   0010EA                     u830:
  1859   0010EA  0E00               	movlw	0
  1860   0010EC                     u836:
  1861   0010EC  6E10               	movwf	DebounceFSMUpdate@estado_pin^0,c
  1862   0010EE  ECE8  F009         	call	_DebounceFSMUpdate	;wreg free
  1863   0010F2  6E1B               	movwf	??_main^0,c
  1864   0010F4  6A1C               	clrf	(??_main+1)^0,c
  1865                           
  1866                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1867                           ; Switch size 1, requested type "simple"
  1868                           ; Number of cases is 1, Range of values is 0 to 0
  1869                           ; switch strategies available:
  1870                           ; Name         Instructions Cycles
  1871                           ; simple_byte            4     3 (average)
  1872                           ;	Chosen strategy is simple_byte
  1873   0010F6  501C               	movf	(??_main+1)^0,w,c
  1874   0010F8  0A00               	xorlw	0	; case 0
  1875   0010FA  B4D8               	btfsc	status,2,c
  1876   0010FC  EF82  F008         	goto	l2373
  1877   001100  EF8D  F008         	goto	l2281
  1878   001104                     l2373:
  1879                           
  1880                           ; Switch size 1, requested type "simple"
  1881                           ; Number of cases is 2, Range of values is 1 to 2
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte            7     4 (average)
  1885                           ;	Chosen strategy is simple_byte
  1886   001104  501B               	movf	??_main^0,w,c
  1887   001106  0A01               	xorlw	1	; case 1
  1888   001108  B4D8               	btfsc	status,2,c
  1889   00110A  EF5B  F008         	goto	l2269
  1890   00110E  0A03               	xorlw	3	; case 2
  1891   001110  B4D8               	btfsc	status,2,c
  1892   001112  EF63  F008         	goto	l2273
  1893   001116  EF8D  F008         	goto	l2281
  1894   00111A                     l2281:
  1895                           
  1896                           ;main.c: 63:         if(MRF24IsNewMsg() == MSG_PRESENTE) {
  1897   00111A  ECF5  F00D         	call	_MRF24IsNewMsg	;wreg free
  1898   00111E  0A03               	xorlw	3
  1899   001120  A4D8               	btfss	status,2,c
  1900   001122  EF95  F008         	goto	u841
  1901   001126  EF97  F008         	goto	u840
  1902   00112A                     u841:
  1903   00112A  EFFB  F008         	goto	l2313
  1904   00112E                     u840:
  1905   00112E                     
  1906                           ;main.c: 65:             MRF24ReciboPaquete();
  1907   00112E  EC67  F00C         	call	_MRF24ReciboPaquete	;wreg free
  1908   001132                     
  1909                           ;main.c: 67:    if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLA")) {
  1910   001132  EC28  F00F         	call	_MRF24GetMensajeEntrada	;wreg free
  1911   001136  6E03               	movwf	strcmp@l^0,c
  1912   001138  0E46               	movlw	low STR_3
  1913   00113A  6E04               	movwf	strcmp@r^0,c
  1914   00113C  ECBA  F00C         	call	_strcmp	;wreg free
  1915   001140  5003               	movf	?_strcmp^0,w,c
  1916   001142  1004               	iorwf	(?_strcmp+1)^0,w,c
  1917   001144  A4D8               	btfss	status,2,c
  1918   001146  EFA7  F008         	goto	u851
  1919   00114A  EFA9  F008         	goto	u850
  1920   00114E                     u851:
  1921   00114E  EFB0  F008         	goto	l2291
  1922   001152                     u850:
  1923   001152                     
  1924                           ;main.c: 69:     LATEbits.LATE1 = 0;
  1925   001152  928D               	bcf	141,1,c	;volatile
  1926   001154                     
  1927                           ;main.c: 70:                 MRF24SetMensajeSalida("Led encendido");
  1928   001154  0E19               	movlw	low STR_5
  1929   001156  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1930   001158  EC82  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1931                           
  1932                           ;main.c: 71:    } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALA")) {
  1933   00115C  EFF9  F008         	goto	l2311
  1934   001160                     l2291:
  1935   001160  EC28  F00F         	call	_MRF24GetMensajeEntrada	;wreg free
  1936   001164  6E03               	movwf	strcmp@l^0,c
  1937   001166  0E3E               	movlw	low STR_6
  1938   001168  6E04               	movwf	strcmp@r^0,c
  1939   00116A  ECBA  F00C         	call	_strcmp	;wreg free
  1940   00116E  5003               	movf	?_strcmp^0,w,c
  1941   001170  1004               	iorwf	(?_strcmp+1)^0,w,c
  1942   001172  A4D8               	btfss	status,2,c
  1943   001174  EFBE  F008         	goto	u861
  1944   001178  EFC0  F008         	goto	u860
  1945   00117C                     u861:
  1946   00117C  EFC7  F008         	goto	l2297
  1947   001180                     u860:
  1948   001180                     
  1949                           ;main.c: 73:     LATEbits.LATE1 = 1;
  1950   001180  828D               	bsf	141,1,c	;volatile
  1951   001182                     
  1952                           ;main.c: 74:                 MRF24SetMensajeSalida("Led apagado");
  1953   001182  0E27               	movlw	low STR_8
  1954   001184  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1955   001186  EC82  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1956                           
  1957                           ;main.c: 75:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLR")) 
      +                          {
  1958   00118A  EFF9  F008         	goto	l2311
  1959   00118E                     l2297:
  1960   00118E  EC28  F00F         	call	_MRF24GetMensajeEntrada	;wreg free
  1961   001192  6E03               	movwf	strcmp@l^0,c
  1962   001194  0E56               	movlw	low STR_9
  1963   001196  6E04               	movwf	strcmp@r^0,c
  1964   001198  ECBA  F00C         	call	_strcmp	;wreg free
  1965   00119C  5003               	movf	?_strcmp^0,w,c
  1966   00119E  1004               	iorwf	(?_strcmp+1)^0,w,c
  1967   0011A0  A4D8               	btfss	status,2,c
  1968   0011A2  EFD5  F008         	goto	u871
  1969   0011A6  EFD7  F008         	goto	u870
  1970   0011AA                     u871:
  1971   0011AA  EFDE  F008         	goto	l2303
  1972   0011AE                     u870:
  1973   0011AE                     
  1974                           ;main.c: 77:     LATEbits.LATE2 = 0;
  1975   0011AE  948D               	bcf	141,2,c	;volatile
  1976   0011B0                     
  1977                           ;main.c: 78:                 MRF24SetMensajeSalida("Led encendido");
  1978   0011B0  0E19               	movlw	low STR_5
  1979   0011B2  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1980   0011B4  EC82  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1981                           
  1982                           ;main.c: 79:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALR")) 
      +                          {
  1983   0011B8  EFF9  F008         	goto	l2311
  1984   0011BC                     l2303:
  1985   0011BC  EC28  F00F         	call	_MRF24GetMensajeEntrada	;wreg free
  1986   0011C0  6E03               	movwf	strcmp@l^0,c
  1987   0011C2  0E4E               	movlw	low STR_12
  1988   0011C4  6E04               	movwf	strcmp@r^0,c
  1989   0011C6  ECBA  F00C         	call	_strcmp	;wreg free
  1990   0011CA  5003               	movf	?_strcmp^0,w,c
  1991   0011CC  1004               	iorwf	(?_strcmp+1)^0,w,c
  1992   0011CE  A4D8               	btfss	status,2,c
  1993   0011D0  EFEC  F008         	goto	u881
  1994   0011D4  EFEE  F008         	goto	u880
  1995   0011D8                     u881:
  1996   0011D8  EFF5  F008         	goto	l2309
  1997   0011DC                     u880:
  1998   0011DC                     
  1999                           ;main.c: 81:     LATEbits.LATE2 = 1;
  2000   0011DC  848D               	bsf	141,2,c	;volatile
  2001   0011DE                     
  2002                           ;main.c: 82:                 MRF24SetMensajeSalida("Led apagado");
  2003   0011DE  0E27               	movlw	low STR_8
  2004   0011E0  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  2005   0011E2  EC82  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  2006                           
  2007                           ;main.c: 83:             } else {
  2008   0011E6  EFF9  F008         	goto	l2311
  2009   0011EA                     l2309:
  2010                           
  2011                           ;main.c: 85:                 MRF24SetMensajeSalida("Cmd error.");
  2012   0011EA  0E33               	movlw	low STR_15
  2013   0011EC  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  2014   0011EE  EC82  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  2015   0011F2                     l2311:
  2016                           
  2017                           ;main.c: 87:             MRF24TransmitirDato();
  2018   0011F2  EC1B  F00B         	call	_MRF24TransmitirDato	;wreg free
  2019   0011F6                     l2313:
  2020                           
  2021                           ;main.c: 90:         if(DelayRead(&delay_parpadeo)) {
  2022   0011F6  0E1D               	movlw	low main@delay_parpadeo
  2023   0011F8  6E02               	movwf	DelayRead@delay^0,c
  2024   0011FA  EC11  F00C         	call	_DelayRead	;wreg free
  2025   0011FE  0900               	iorlw	0
  2026   001200  B4D8               	btfsc	status,2,c
  2027   001202  EF05  F009         	goto	u891
  2028   001206  EF07  F009         	goto	u890
  2029   00120A                     u891:
  2030   00120A  EF58  F008         	goto	l300
  2031   00120E                     u890:
  2032   00120E                     
  2033                           ;main.c: 91:             LATEbits.LATE0 = !LATEbits.LATE0;
  2034   00120E  A08D               	btfss	141,0,c	;volatile
  2035   001210  EF0C  F009         	goto	u901
  2036   001214  EF10  F009         	goto	u900
  2037   001218                     u901:
  2038   001218  6A1B               	clrf	??_main^0,c
  2039   00121A  2A1B               	incf	??_main^0,f,c
  2040   00121C  EF11  F009         	goto	u918
  2041   001220                     u900:
  2042   001220  6A1B               	clrf	??_main^0,c
  2043   001222                     u918:
  2044   001222  508D               	movf	141,w,c	;volatile
  2045   001224  181B               	xorwf	??_main^0,w,c
  2046   001226  0BFE               	andlw	-2
  2047   001228  181B               	xorwf	??_main^0,w,c
  2048   00122A  6E8D               	movwf	141,c	;volatile
  2049   00122C  EF58  F008         	goto	l300
  2050   001230  EF20  F000         	goto	start
  2051   001234                     __end_of_main:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _strcmp *****************
  2055 ;; Defined at:
  2056 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;  l               1    2[COMRAM] PTR const unsigned char 
  2059 ;;		 -> mrf24_data_in_s$buffer_entrada(50), mrf24_data_in_s(56), 
  2060 ;;  r               1    3[COMRAM] PTR const unsigned char 
  2061 ;;		 -> STR_13(8), STR_10(8), STR_7(8), STR_4(8), 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;		None
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  2    2[COMRAM] int 
  2066 ;; Registers used:
  2067 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;Total ram usage:        3 bytes
  2078 ;; Hardware stack levels used: 1
  2079 ;; Hardware stack levels required when called: 1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_main
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           	psect	text1
  2088   001974                     __ptext1:
  2089                           	callstack 0
  2090   001974                     _strcmp:
  2091                           	callstack 29
  2092   001974  EFBE  F00C         	goto	l2249
  2093   001978                     l2247:
  2094   001978  2A03               	incf	strcmp@l^0,f,c
  2095   00197A  2A04               	incf	strcmp@r^0,f,c
  2096   00197C                     l2249:
  2097   00197C  5003               	movf	strcmp@l^0,w,c
  2098   00197E  6ED9               	movwf	fsr2l,c
  2099   001980  6ADA               	clrf	fsr2h,c
  2100   001982  50DF               	movf	indf2,w,c
  2101   001984  6E05               	movwf	??_strcmp^0,c
  2102   001986  C004  FFF6         	movff	strcmp@r,tblptrl
  2103   00198A                     	if	1	;There is more than 1 active tblptr byte
  2104   00198A  0E10               	movlw	high __smallconst
  2105   00198C  6EF7               	movwf	tblptrh,c
  2106   00198E                     	endif
  2107   00198E                     	if	0	;tblptru may be non-zero
  2108   00198E                     	endif
  2109   00198E                     	if	0	;tblptru may be non-zero
  2110   00198E                     	endif
  2111   00198E  0008               	tblrd		*
  2112   001990  50F5               	movf	tablat,w,c
  2113   001992  1805               	xorwf	??_strcmp^0,w,c
  2114   001994  A4D8               	btfss	status,2,c
  2115   001996  EFCF  F00C         	goto	u811
  2116   00199A  EFD1  F00C         	goto	u810
  2117   00199E                     u811:
  2118   00199E  EFDC  F00C         	goto	l2253
  2119   0019A2                     u810:
  2120   0019A2  5003               	movf	strcmp@l^0,w,c
  2121   0019A4  6ED9               	movwf	fsr2l,c
  2122   0019A6  6ADA               	clrf	fsr2h,c
  2123   0019A8  50DF               	movf	indf2,w,c
  2124   0019AA  A4D8               	btfss	status,2,c
  2125   0019AC  EFDA  F00C         	goto	u821
  2126   0019B0  EFDC  F00C         	goto	u820
  2127   0019B4                     u821:
  2128   0019B4  EFBC  F00C         	goto	l2247
  2129   0019B8                     u820:
  2130   0019B8                     l2253:
  2131   0019B8  5003               	movf	strcmp@l^0,w,c
  2132   0019BA  6ED9               	movwf	fsr2l,c
  2133   0019BC  6ADA               	clrf	fsr2h,c
  2134   0019BE  50DF               	movf	indf2,w,c
  2135   0019C0  6E05               	movwf	??_strcmp^0,c
  2136   0019C2  C004  FFF6         	movff	strcmp@r,tblptrl
  2137   0019C6                     	if	1	;There is more than 1 active tblptr byte
  2138   0019C6  0E10               	movlw	high __smallconst
  2139   0019C8  6EF7               	movwf	tblptrh,c
  2140   0019CA                     	endif
  2141   0019CA                     	if	0	;tblptru may be non-zero
  2142   0019CA                     	endif
  2143   0019CA                     	if	0	;tblptru may be non-zero
  2144   0019CA                     	endif
  2145   0019CA  0008               	tblrd		*
  2146   0019CC  50F5               	movf	tablat,w,c
  2147   0019CE  5C05               	subwf	??_strcmp^0,w,c
  2148   0019D0  6E03               	movwf	?_strcmp^0,c
  2149   0019D2  6A04               	clrf	(?_strcmp+1)^0,c
  2150   0019D4  A0D8               	btfss	status,0,c
  2151   0019D6  0604               	decf	(?_strcmp+1)^0,f,c
  2152   0019D8  0012               	return		;funcret
  2153   0019DA                     __end_of_strcmp:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function _MRF24TransmitirDato *****************
  2157 ;; Defined at:
  2158 ;;		line 371 in file "drivers/scr/API_MRF24J40.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;		None
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  i               1   15[COMRAM] char 
  2163 ;;  pos_memoria     1   16[COMRAM] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      enum E3264
  2166 ;; Registers used:
  2167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;Total ram usage:        7 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 5
  2180 ;; This function calls:
  2181 ;;		_GetShortAddr
  2182 ;;		_SetLongAddr
  2183 ;;		_SetShortAddr
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text2
  2190   001636                     __ptext2:
  2191                           	callstack 0
  2192   001636                     _MRF24TransmitirDato:
  2193                           	callstack 25
  2194   001636                     
  2195                           ;drivers/scr/API_MRF24J40.c: 373:  if(estadoActual != INICIALIZACION_OK)
  2196   001636  503B               	movf	_estadoActual^0,w,c
  2197   001638  B4D8               	btfsc	status,2,c
  2198   00163A  EF21  F00B         	goto	u691
  2199   00163E  EF23  F00B         	goto	u690
  2200   001642                     u691:
  2201   001642  EF25  F00B         	goto	l152
  2202   001646                     u690:
  2203   001646  EFAE  F00B         	goto	l153
  2204   00164A                     l152:
  2205                           
  2206                           ;drivers/scr/API_MRF24J40.c: 375:  uint8_t pos_memoria = 0;
  2207   00164A  6A11               	clrf	MRF24TransmitirDato@pos_memoria^0,c
  2208   00164C                     
  2209                           ;drivers/scr/API_MRF24J40.c: 376:  SetLongAddr(pos_memoria++, (0X08));
  2210   00164C  0E00               	movlw	0
  2211   00164E  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2212   001650  0E00               	movlw	0
  2213   001652  6E06               	movwf	SetLongAddr@reg_address^0,c
  2214   001654  0E08               	movlw	8
  2215   001656  6E08               	movwf	SetLongAddr@valor^0,c
  2216   001658  EC61  F00D         	call	_SetLongAddr	;wreg free
  2217   00165C  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2218   00165E                     
  2219                           ;drivers/scr/API_MRF24J40.c: 377:  SetLongAddr(pos_memoria++, mrf24_data_out_s.largo_men
      +                          saje + (0X08));
  2220   00165E  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2221   001662  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2222   001664  5035               	movf	(_mrf24_data_out_s+4)^0,w,c
  2223   001666  0F08               	addlw	8
  2224   001668  6E08               	movwf	SetLongAddr@valor^0,c
  2225   00166A  EC61  F00D         	call	_SetLongAddr	;wreg free
  2226   00166E  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2227   001670                     
  2228                           ;drivers/scr/API_MRF24J40.c: 378:  SetLongAddr(pos_memoria++, (0X01)|(0X20)|(0X40));
  2229   001670  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2230   001674  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2231   001676  0E61               	movlw	97
  2232   001678  6E08               	movwf	SetLongAddr@valor^0,c
  2233   00167A  EC61  F00D         	call	_SetLongAddr	;wreg free
  2234   00167E  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2235                           
  2236                           ;drivers/scr/API_MRF24J40.c: 379:  SetLongAddr(pos_memoria++, (0XC0)|(0X08));
  2237   001680  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2238   001684  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2239   001686  0EC8               	movlw	200
  2240   001688  6E08               	movwf	SetLongAddr@valor^0,c
  2241   00168A  EC61  F00D         	call	_SetLongAddr	;wreg free
  2242   00168E  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2243   001690                     
  2244                           ;drivers/scr/API_MRF24J40.c: 380:  SetLongAddr(pos_memoria++, mrf24_data_config_s.sequen
      +                          ce_number++);
  2245   001690  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2246   001694  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2247   001696  EE20  F062         	lfsr	2,_mrf24_data_config_s+2
  2248   00169A  50DF               	movf	indf2,w,c
  2249   00169C  2ADF               	incf	indf2,f,c
  2250   00169E  6E08               	movwf	SetLongAddr@valor^0,c
  2251   0016A0  EC61  F00D         	call	_SetLongAddr	;wreg free
  2252   0016A4  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2253   0016A6                     
  2254                           ;drivers/scr/API_MRF24J40.c: 381:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out_s
      +                          .destinity_panid);
  2255   0016A6  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2256   0016AA  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2257   0016AC  C031  F008         	movff	_mrf24_data_out_s,SetLongAddr@valor
  2258   0016B0  EC61  F00D         	call	_SetLongAddr	;wreg free
  2259   0016B4  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2260   0016B6                     
  2261                           ;drivers/scr/API_MRF24J40.c: 382:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out_
      +                          s.destinity_panid >> (0X08)));
  2262   0016B6  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2263   0016BA  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2264   0016BC  5032               	movf	(_mrf24_data_out_s+1)^0,w,c
  2265   0016BE  6E08               	movwf	SetLongAddr@valor^0,c
  2266   0016C0  EC61  F00D         	call	_SetLongAddr	;wreg free
  2267   0016C4  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2268   0016C6                     
  2269                           ;drivers/scr/API_MRF24J40.c: 383:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out_s
      +                          .destinity_address);
  2270   0016C6  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2271   0016CA  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2272   0016CC  C033  F008         	movff	_mrf24_data_out_s+2,SetLongAddr@valor
  2273   0016D0  EC61  F00D         	call	_SetLongAddr	;wreg free
  2274   0016D4  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2275   0016D6                     
  2276                           ;drivers/scr/API_MRF24J40.c: 384:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out_
      +                          s.destinity_address >> (0X08)));
  2277   0016D6  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2278   0016DA  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2279   0016DC  5034               	movf	(_mrf24_data_out_s+3)^0,w,c
  2280   0016DE  6E08               	movwf	SetLongAddr@valor^0,c
  2281   0016E0  EC61  F00D         	call	_SetLongAddr	;wreg free
  2282   0016E4  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2283   0016E6                     
  2284                           ;drivers/scr/API_MRF24J40.c: 386:  for(int8_t i = 0; i < mrf24_data_out_s.largo_mensaje;
      +                           i++) {
  2285   0016E6  6A10               	clrf	MRF24TransmitirDato@i^0,c
  2286   0016E8  EF87  F00B         	goto	l2085
  2287   0016EC                     l2079:
  2288                           
  2289                           ;drivers/scr/API_MRF24J40.c: 388:   SetLongAddr(pos_memoria++, mrf24_data_out_s.buffer_s
      +                          alida[i]);
  2290   0016EC  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2291   0016F0  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2292   0016F2  5036               	movf	(_mrf24_data_out_s+5)^0,w,c
  2293   0016F4  2410               	addwf	MRF24TransmitirDato@i^0,w,c
  2294   0016F6  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2295   0016F8  C00B  FFF6         	movff	??_MRF24TransmitirDato,tblptrl
  2296   0016FC                     	if	1	;There is more than 1 active tblptr byte
  2297   0016FC  0E10               	movlw	high __smallconst
  2298   0016FE  6EF7               	movwf	tblptrh,c
  2299   001700                     	endif
  2300   001700                     	if	0	;tblptru may be non-zero
  2301   001700                     	endif
  2302   001700                     	if	0	;tblptru may be non-zero
  2303   001700                     	endif
  2304   001700  0008               	tblrd		*
  2305   001702  CFF5 F008          	movff	tablat,SetLongAddr@valor
  2306   001706  EC61  F00D         	call	_SetLongAddr	;wreg free
  2307   00170A  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2308   00170C                     
  2309                           ;drivers/scr/API_MRF24J40.c: 389:  }
  2310   00170C  2A10               	incf	MRF24TransmitirDato@i^0,f,c
  2311   00170E                     l2085:
  2312   00170E  5035               	movf	(_mrf24_data_out_s+4)^0,w,c
  2313   001710  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2314   001712  6A0C               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2315   001714  C010  F00D         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato+2
  2316   001718  6A0E               	clrf	(??_MRF24TransmitirDato+3)^0,c
  2317   00171A  BE0D               	btfsc	(??_MRF24TransmitirDato+2)^0,7,c
  2318   00171C  060E               	decf	(??_MRF24TransmitirDato+3)^0,f,c
  2319   00171E  500B               	movf	??_MRF24TransmitirDato^0,w,c
  2320   001720  5C0D               	subwf	(??_MRF24TransmitirDato+2)^0,w,c
  2321   001722  500E               	movf	(??_MRF24TransmitirDato+3)^0,w,c
  2322   001724  0A80               	xorlw	128
  2323   001726  6E0F               	movwf	(??_MRF24TransmitirDato+4)^0,c
  2324   001728  500C               	movf	(??_MRF24TransmitirDato+1)^0,w,c
  2325   00172A  0A80               	xorlw	128
  2326   00172C  580F               	subwfb	(??_MRF24TransmitirDato+4)^0,w,c
  2327   00172E  A0D8               	btfss	status,0,c
  2328   001730  EF9C  F00B         	goto	u701
  2329   001734  EF9E  F00B         	goto	u700
  2330   001738                     u701:
  2331   001738  EF76  F00B         	goto	l2079
  2332   00173C                     u700:
  2333   00173C                     
  2334                           ;drivers/scr/API_MRF24J40.c: 390:  SetLongAddr(pos_memoria++, (0X00));
  2335   00173C  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2336   001740  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2337   001742  0E00               	movlw	0
  2338   001744  6E08               	movwf	SetLongAddr@valor^0,c
  2339   001746  EC61  F00D         	call	_SetLongAddr	;wreg free
  2340   00174A  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2341   00174C                     
  2342                           ;drivers/scr/API_MRF24J40.c: 391:  SetShortAddr((0x1B), (0X04) | (0X01));
  2343   00174C  0E05               	movlw	5
  2344   00174E  6E03               	movwf	SetShortAddr@valor^0,c
  2345   001750  0E1B               	movlw	27
  2346   001752  EC91  F00E         	call	_SetShortAddr
  2347   001756                     
  2348                           ;drivers/scr/API_MRF24J40.c: 392:     if(GetShortAddr((0x24)) && (0X01))
  2349   001756  0E24               	movlw	36
  2350   001758  EC6B  F00E         	call	_GetShortAddr
  2351   00175C                     l153:
  2352   00175C  0012               	return		;funcret
  2353   00175E                     __end_of_MRF24TransmitirDato:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _MRF24SetPANIDDestino *****************
  2357 ;; Defined at:
  2358 ;;		line 358 in file "drivers/scr/API_MRF24J40.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  panid           2    0[COMRAM] unsigned short 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;		None
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      enum E3264
  2365 ;; Registers used:
  2366 ;;		wreg, status,2
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;Total ram usage:        2 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; Hardware stack levels required when called: 1
  2379 ;; This function calls:
  2380 ;;		Nothing
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text3
  2387   001D42                     __ptext3:
  2388                           	callstack 0
  2389   001D42                     _MRF24SetPANIDDestino:
  2390                           	callstack 29
  2391   001D42                     
  2392                           ;drivers/scr/API_MRF24J40.c: 360:  if(estadoActual != INICIALIZACION_OK)
  2393   001D42  503B               	movf	_estadoActual^0,w,c
  2394   001D44  B4D8               	btfsc	status,2,c
  2395   001D46  EFA7  F00E         	goto	u681
  2396   001D4A  EFA9  F00E         	goto	u680
  2397   001D4E                     u681:
  2398   001D4E  EFAB  F00E         	goto	l148
  2399   001D52                     u680:
  2400   001D52  EFAF  F00E         	goto	l149
  2401   001D56                     l148:
  2402                           
  2403                           ;drivers/scr/API_MRF24J40.c: 362:  mrf24_data_out_s.destinity_panid = panid;
  2404   001D56  C001  F031         	movff	MRF24SetPANIDDestino@panid,_mrf24_data_out_s
  2405   001D5A  C002  F032         	movff	MRF24SetPANIDDestino@panid+1,_mrf24_data_out_s+1
  2406   001D5E                     l149:
  2407   001D5E  0012               	return		;funcret
  2408   001D60                     __end_of_MRF24SetPANIDDestino:
  2409                           	callstack 0
  2410                           
  2411 ;; *************** function _MRF24SetMensajeSalida *****************
  2412 ;; Defined at:
  2413 ;;		line 331 in file "drivers/scr/API_MRF24J40.c"
  2414 ;; Parameters:    Size  Location     Type
  2415 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  2416 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2417 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      enum E3264
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        1 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 2
  2436 ;; This function calls:
  2437 ;;		_strlen
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text4
  2444   001B04                     __ptext4:
  2445                           	callstack 0
  2446   001B04                     _MRF24SetMensajeSalida:
  2447                           	callstack 28
  2448   001B04                     
  2449                           ;drivers/scr/API_MRF24J40.c: 333:  if(strlen(mensaje) == (0X00) || estadoActual != INICI
      +                          ALIZACION_OK)
  2450   001B04  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2451   001B08  ECDB  F00D         	call	_strlen	;wreg free
  2452   001B0C  5001               	movf	?_strlen^0,w,c
  2453   001B0E  1002               	iorwf	(?_strlen+1)^0,w,c
  2454   001B10  B4D8               	btfsc	status,2,c
  2455   001B12  EF8D  F00D         	goto	u651
  2456   001B16  EF8F  F00D         	goto	u650
  2457   001B1A                     u651:
  2458   001B1A  EFA1  F00D         	goto	l141
  2459   001B1E                     u650:
  2460   001B1E  503B               	movf	_estadoActual^0,w,c
  2461   001B20  B4D8               	btfsc	status,2,c
  2462   001B22  EF95  F00D         	goto	u661
  2463   001B26  EF97  F00D         	goto	u660
  2464   001B2A                     u661:
  2465   001B2A  EF99  F00D         	goto	l2027
  2466   001B2E                     u660:
  2467   001B2E  EFA1  F00D         	goto	l141
  2468   001B32                     l2027:
  2469                           
  2470                           ;drivers/scr/API_MRF24J40.c: 335:  mrf24_data_out_s.buffer_salida = mensaje;
  2471   001B32  C004  F036         	movff	MRF24SetMensajeSalida@mensaje,_mrf24_data_out_s+5
  2472   001B36                     
  2473                           ;drivers/scr/API_MRF24J40.c: 336:  mrf24_data_out_s.largo_mensaje = (uint8_t) strlen(men
      +                          saje);
  2474   001B36  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2475   001B3A  ECDB  F00D         	call	_strlen	;wreg free
  2476   001B3E  5001               	movf	?_strlen^0,w,c
  2477   001B40  6E35               	movwf	(_mrf24_data_out_s+4)^0,c
  2478   001B42                     l141:
  2479   001B42  0012               	return		;funcret
  2480   001B44                     __end_of_MRF24SetMensajeSalida:
  2481                           	callstack 0
  2482                           
  2483 ;; *************** function _strlen *****************
  2484 ;; Defined at:
  2485 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2486 ;; Parameters:    Size  Location     Type
  2487 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2488 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2489 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2492 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2493 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  2    0[COMRAM] unsigned int 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;Total ram usage:        3 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 1
  2510 ;; This function calls:
  2511 ;;		Nothing
  2512 ;; This function is called by:
  2513 ;;		_MRF24SetMensajeSalida
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text5
  2518   001BB6                     __ptext5:
  2519                           	callstack 0
  2520   001BB6                     _strlen:
  2521                           	callstack 28
  2522   001BB6  C001  F003         	movff	strlen@s,strlen@a
  2523   001BBA  EFE0  F00D         	goto	l1997
  2524   001BBE                     l1995:
  2525   001BBE  2A01               	incf	strlen@s^0,f,c
  2526   001BC0                     l1997:
  2527   001BC0  C001  FFF6         	movff	strlen@s,tblptrl
  2528   001BC4                     	if	1	;There is more than 1 active tblptr byte
  2529   001BC4  0E10               	movlw	high __smallconst
  2530   001BC6  6EF7               	movwf	tblptrh,c
  2531   001BC8                     	endif
  2532   001BC8                     	if	0	;tblptru may be non-zero
  2533   001BC8                     	endif
  2534   001BC8                     	if	0	;tblptru may be non-zero
  2535   001BC8                     	endif
  2536   001BC8  0008               	tblrd		*
  2537   001BCA  50F5               	movf	tablat,w,c
  2538   001BCC  0900               	iorlw	0
  2539   001BCE  A4D8               	btfss	status,2,c
  2540   001BD0  EFEC  F00D         	goto	u641
  2541   001BD4  EFEE  F00D         	goto	u640
  2542   001BD8                     u641:
  2543   001BD8  EFDF  F00D         	goto	l1995
  2544   001BDC                     u640:
  2545   001BDC  5003               	movf	strlen@a^0,w,c
  2546   001BDE  5C01               	subwf	strlen@s^0,w,c
  2547   001BE0  6E01               	movwf	?_strlen^0,c
  2548   001BE2  6A02               	clrf	(?_strlen+1)^0,c
  2549   001BE4  BE01               	btfsc	?_strlen^0,7,c
  2550   001BE6  0602               	decf	(?_strlen+1)^0,f,c
  2551   001BE8  0012               	return		;funcret
  2552   001BEA                     __end_of_strlen:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function _MRF24SetDireccionDestino *****************
  2556 ;; Defined at:
  2557 ;;		line 345 in file "drivers/scr/API_MRF24J40.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  direccion       2    0[COMRAM] unsigned short 
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      enum E3264
  2564 ;; Registers used:
  2565 ;;		wreg, status,2
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2575 ;;Total ram usage:        2 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 1
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_main
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           	psect	text6
  2586   001D60                     __ptext6:
  2587                           	callstack 0
  2588   001D60                     _MRF24SetDireccionDestino:
  2589                           	callstack 29
  2590   001D60                     
  2591                           ;drivers/scr/API_MRF24J40.c: 347:  if(estadoActual != INICIALIZACION_OK)
  2592   001D60  503B               	movf	_estadoActual^0,w,c
  2593   001D62  B4D8               	btfsc	status,2,c
  2594   001D64  EFB6  F00E         	goto	u671
  2595   001D68  EFB8  F00E         	goto	u670
  2596   001D6C                     u671:
  2597   001D6C  EFBA  F00E         	goto	l144
  2598   001D70                     u670:
  2599   001D70  EFBE  F00E         	goto	l145
  2600   001D74                     l144:
  2601                           
  2602                           ;drivers/scr/API_MRF24J40.c: 349:  mrf24_data_out_s.destinity_address = direccion;
  2603   001D74  C001  F033         	movff	MRF24SetDireccionDestino@direccion,_mrf24_data_out_s+2
  2604   001D78  C002  F034         	movff	MRF24SetDireccionDestino@direccion+1,_mrf24_data_out_s+3
  2605   001D7C                     l145:
  2606   001D7C  0012               	return		;funcret
  2607   001D7E                     __end_of_MRF24SetDireccionDestino:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _MRF24ReciboPaquete *****************
  2611 ;; Defined at:
  2612 ;;		line 417 in file "drivers/scr/API_MRF24J40.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;  index           1   16[COMRAM] unsigned char 
  2617 ;;  largo_mensaj    1   15[COMRAM] unsigned char 
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      enum E3264
  2620 ;; Registers used:
  2621 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2628 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;Total ram usage:        7 bytes
  2632 ;; Hardware stack levels used: 1
  2633 ;; Hardware stack levels required when called: 5
  2634 ;; This function calls:
  2635 ;;		_GetLongAddr
  2636 ;;		_GetShortAddr
  2637 ;;		_SetLongAddr
  2638 ;;		_SetShortAddr
  2639 ;; This function is called by:
  2640 ;;		_main
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text7
  2645   0018CE                     __ptext7:
  2646                           	callstack 0
  2647   0018CE                     _MRF24ReciboPaquete:
  2648                           	callstack 25
  2649   0018CE                     
  2650                           ;drivers/scr/API_MRF24J40.c: 419:  if(estadoActual != INICIALIZACION_OK)
  2651   0018CE  503B               	movf	_estadoActual^0,w,c
  2652   0018D0  B4D8               	btfsc	status,2,c
  2653   0018D2  EF6D  F00C         	goto	u711
  2654   0018D6  EF6F  F00C         	goto	u710
  2655   0018DA                     u711:
  2656   0018DA  EF71  F00C         	goto	l2101
  2657   0018DE                     u710:
  2658   0018DE  EFB9  F00C         	goto	l166
  2659   0018E2                     l2101:
  2660                           
  2661                           ;drivers/scr/API_MRF24J40.c: 421:  uint8_t index;;drivers/scr/API_MRF24J40.c: 422:  uint
      +                          8_t largo_mensaje;;drivers/scr/API_MRF24J40.c: 423:  SetLongAddr((0x39), (0X04));
  2662   0018E2  0E00               	movlw	0
  2663   0018E4  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2664   0018E6  0E39               	movlw	57
  2665   0018E8  6E06               	movwf	SetLongAddr@reg_address^0,c
  2666   0018EA  0E04               	movlw	4
  2667   0018EC  6E08               	movwf	SetLongAddr@valor^0,c
  2668   0018EE  EC61  F00D         	call	_SetLongAddr	;wreg free
  2669                           
  2670                           ;drivers/scr/API_MRF24J40.c: 424:  SetShortAddr((0x0D), (0X04));
  2671   0018F2  0E04               	movlw	4
  2672   0018F4  6E03               	movwf	SetShortAddr@valor^0,c
  2673   0018F6  0E0D               	movlw	13
  2674   0018F8  EC91  F00E         	call	_SetShortAddr
  2675                           
  2676                           ;drivers/scr/API_MRF24J40.c: 425:  largo_mensaje = GetLongAddr((0x300));
  2677   0018FC  0E03               	movlw	3
  2678   0018FE  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2679   001900  0E00               	movlw	0
  2680   001902  6E06               	movwf	GetLongAddr@reg_address^0,c
  2681   001904  EC1E  F00D         	call	_GetLongAddr	;wreg free
  2682   001908  6E10               	movwf	MRF24ReciboPaquete@largo_mensaje^0,c
  2683   00190A                     
  2684                           ;drivers/scr/API_MRF24J40.c: 427:  for(index = 0; index < largo_mensaje - (0x04); index+
      +                          +) {
  2685   00190A  6A11               	clrf	MRF24ReciboPaquete@index^0,c
  2686   00190C  EF96  F00C         	goto	l2109
  2687   001910                     l2105:
  2688                           
  2689                           ;drivers/scr/API_MRF24J40.c: 429:   mrf24_data_in_s.buffer_entrada[index] = GetLongAddr(
      +                          (0x300) + (0X08) + index);
  2690   001910  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2691   001912  0F88               	addlw	low (_mrf24_data_in_s+6)
  2692   001914  6ED9               	movwf	fsr2l,c
  2693   001916  6ADA               	clrf	fsr2h,c
  2694   001918  0E08               	movlw	8
  2695   00191A  2411               	addwf	MRF24ReciboPaquete@index^0,w,c
  2696   00191C  6E06               	movwf	GetLongAddr@reg_address^0,c
  2697   00191E  6A07               	clrf	(GetLongAddr@reg_address+1)^0,c
  2698   001920  0E03               	movlw	3
  2699   001922  2207               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  2700   001924  EC1E  F00D         	call	_GetLongAddr	;wreg free
  2701   001928  6EDF               	movwf	indf2,c
  2702   00192A                     
  2703                           ;drivers/scr/API_MRF24J40.c: 430:  }
  2704   00192A  2A11               	incf	MRF24ReciboPaquete@index^0,f,c
  2705   00192C                     l2109:
  2706   00192C  0EFC               	movlw	252
  2707   00192E  2410               	addwf	MRF24ReciboPaquete@largo_mensaje^0,w,c
  2708   001930  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  2709   001932  6A0C               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  2710   001934  0EFF               	movlw	255
  2711   001936  220C               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  2712   001938  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2713   00193A  6E0D               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  2714   00193C  6A0E               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  2715   00193E  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  2716   001940  5C0D               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  2717   001942  500E               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  2718   001944  0A80               	xorlw	128
  2719   001946  6E0F               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  2720   001948  500C               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  2721   00194A  0A80               	xorlw	128
  2722   00194C  580F               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  2723   00194E  A0D8               	btfss	status,0,c
  2724   001950  EFAC  F00C         	goto	u721
  2725   001954  EFAE  F00C         	goto	u720
  2726   001958                     u721:
  2727   001958  EF88  F00C         	goto	l2105
  2728   00195C                     u720:
  2729   00195C                     
  2730                           ;drivers/scr/API_MRF24J40.c: 431:  SetLongAddr((0x39), (0X00));
  2731   00195C  0E00               	movlw	0
  2732   00195E  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2733   001960  0E39               	movlw	57
  2734   001962  6E06               	movwf	SetLongAddr@reg_address^0,c
  2735   001964  0E00               	movlw	0
  2736   001966  6E08               	movwf	SetLongAddr@valor^0,c
  2737   001968  EC61  F00D         	call	_SetLongAddr	;wreg free
  2738                           
  2739                           ;drivers/scr/API_MRF24J40.c: 432:  (void)GetShortAddr((0x31));
  2740   00196C  0E31               	movlw	49
  2741   00196E  EC6B  F00E         	call	_GetShortAddr
  2742   001972                     l166:
  2743   001972  0012               	return		;funcret
  2744   001974                     __end_of_MRF24ReciboPaquete:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _MRF24J40Init *****************
  2748 ;; Defined at:
  2749 ;;		line 315 in file "drivers/scr/API_MRF24J40.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;		None
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;		None
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      enum E3264
  2756 ;; Registers used:
  2757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;Total ram usage:        1 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 7
  2770 ;; This function calls:
  2771 ;;		_InicializoMRF24
  2772 ;;		_InicializoPines
  2773 ;;		_InicializoVariables
  2774 ;;		_SetResetPin
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text8
  2781   001B44                     __ptext8:
  2782                           	callstack 0
  2783   001B44                     _MRF24J40Init:
  2784                           	callstack 23
  2785   001B44                     
  2786                           ;drivers/scr/API_MRF24J40.c: 317:  InicializoVariables();
  2787   001B44  ECAF  F00B         	call	_InicializoVariables	;wreg free
  2788   001B48                     
  2789                           ;drivers/scr/API_MRF24J40.c: 318:  InicializoPines();
  2790   001B48  ECE2  F00E         	call	_InicializoPines	;wreg free
  2791   001B4C                     
  2792                           ;drivers/scr/API_MRF24J40.c: 319:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2793   001B4C  0E06               	movlw	6
  2794   001B4E  6E1A               	movwf	??_MRF24J40Init^0,c
  2795   001B50  0E30               	movlw	48
  2796   001B52                     u947:
  2797   001B52  2EE8               	decfsz	wreg,f,c
  2798   001B54  D7FE               	bra	u947
  2799   001B56  2E1A               	decfsz	??_MRF24J40Init^0,f,c
  2800   001B58  D7FC               	bra	u947
  2801   001B5A  F000 F000          	nop2	
  2802   001B5E                     
  2803                           ;drivers/scr/API_MRF24J40.c: 320:  SetResetPin(1);
  2804   001B5E  0E01               	movlw	1
  2805   001B60  ECFD  F00E         	call	_SetResetPin
  2806   001B64                     
  2807                           ;drivers/scr/API_MRF24J40.c: 321:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2808   001B64  0E06               	movlw	6
  2809   001B66  6E1A               	movwf	??_MRF24J40Init^0,c
  2810   001B68  0E30               	movlw	48
  2811   001B6A                     u957:
  2812   001B6A  2EE8               	decfsz	wreg,f,c
  2813   001B6C  D7FE               	bra	u957
  2814   001B6E  2E1A               	decfsz	??_MRF24J40Init^0,f,c
  2815   001B70  D7FC               	bra	u957
  2816   001B72  F000 F000          	nop2	
  2817   001B76                     
  2818                           ;drivers/scr/API_MRF24J40.c: 322:  estadoActual = InicializoMRF24();
  2819   001B76  EC1A  F009         	call	_InicializoMRF24	;wreg free
  2820   001B7A  6E3B               	movwf	_estadoActual^0,c
  2821   001B7C  0012               	return		;funcret
  2822   001B7E                     __end_of_MRF24J40Init:
  2823                           	callstack 0
  2824                           
  2825 ;; *************** function _InicializoVariables *****************
  2826 ;; Defined at:
  2827 ;;		line 111 in file "drivers/scr/API_MRF24J40.c"
  2828 ;; Parameters:    Size  Location     Type
  2829 ;;		None
  2830 ;; Auto vars:     Size  Location     Type
  2831 ;;  i               2    1[COMRAM] int 
  2832 ;; Return value:  Size  Location     Type
  2833 ;;                  1    wreg      void 
  2834 ;; Registers used:
  2835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2836 ;; Tracked objects:
  2837 ;;		On entry : 0/0
  2838 ;;		On exit  : 0/0
  2839 ;;		Unchanged: 0/0
  2840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2844 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2845 ;;Total ram usage:        3 bytes
  2846 ;; Hardware stack levels used: 1
  2847 ;; Hardware stack levels required when called: 1
  2848 ;; This function calls:
  2849 ;;		Nothing
  2850 ;; This function is called by:
  2851 ;;		_MRF24J40Init
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text9
  2856   00175E                     __ptext9:
  2857                           	callstack 0
  2858   00175E                     _InicializoVariables:
  2859                           	callstack 28
  2860   00175E                     
  2861                           ;drivers/scr/API_MRF24J40.c: 113:  for(int i = 0; i < 16; i++){
  2862   00175E  0E00               	movlw	0
  2863   001760  6E03               	movwf	(InicializoVariables@i+1)^0,c
  2864   001762  0E00               	movlw	0
  2865   001764  6E02               	movwf	InicializoVariables@i^0,c
  2866   001766                     l1907:
  2867                           
  2868                           ;drivers/scr/API_MRF24J40.c: 115:   if(i < 8)
  2869   001766  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  2870   001768  EFC1  F00B         	goto	u580
  2871   00176C  5003               	movf	(InicializoVariables@i+1)^0,w,c
  2872   00176E  E107               	bnz	u581
  2873   001770  0E08               	movlw	8
  2874   001772  5C02               	subwf	InicializoVariables@i^0,w,c
  2875   001774  B0D8               	btfsc	status,0,c
  2876   001776  EFBF  F00B         	goto	u581
  2877   00177A  EFC1  F00B         	goto	u580
  2878   00177E                     u581:
  2879   00177E  EFCF  F00B         	goto	l99
  2880   001782                     u580:
  2881   001782                     
  2882                           ;drivers/scr/API_MRF24J40.c: 116:    mrf24_data_config_s.my_mac[i] = default_mac_address
      +                          [i];
  2883   001782  5002               	movf	InicializoVariables@i^0,w,c
  2884   001784  0F11               	addlw	low _default_mac_address
  2885   001786  6E01               	movwf	??_InicializoVariables^0,c
  2886   001788  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  2887   00178C                     	if	1	;There is more than 1 active tblptr byte
  2888   00178C  0E10               	movlw	high __smallconst
  2889   00178E  6EF7               	movwf	tblptrh,c
  2890   001790                     	endif
  2891   001790                     	if	0	;tblptru may be non-zero
  2892   001790                     	endif
  2893   001790                     	if	0	;tblptru may be non-zero
  2894   001790                     	endif
  2895   001790  5002               	movf	InicializoVariables@i^0,w,c
  2896   001792  0F74               	addlw	low (_mrf24_data_config_s+20)
  2897   001794  6ED9               	movwf	fsr2l,c
  2898   001796  6ADA               	clrf	fsr2h,c
  2899   001798  0008               	tblrd		*
  2900   00179A  CFF5 FFDF          	movff	tablat,indf2
  2901   00179E                     l99:
  2902                           
  2903                           ;drivers/scr/API_MRF24J40.c: 117:   mrf24_data_config_s.security_key[i] = default_securi
      +                          ty_key[i];
  2904   00179E  5002               	movf	InicializoVariables@i^0,w,c
  2905   0017A0  0F01               	addlw	low _default_security_key
  2906   0017A2  6E01               	movwf	??_InicializoVariables^0,c
  2907   0017A4  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  2908   0017A8                     	if	1	;There is more than 1 active tblptr byte
  2909   0017A8  0E10               	movlw	high __smallconst
  2910   0017AA  6EF7               	movwf	tblptrh,c
  2911   0017AC                     	endif
  2912   0017AC                     	if	0	;tblptru may be non-zero
  2913   0017AC                     	endif
  2914   0017AC                     	if	0	;tblptru may be non-zero
  2915   0017AC                     	endif
  2916   0017AC  5002               	movf	InicializoVariables@i^0,w,c
  2917   0017AE  0F64               	addlw	low (_mrf24_data_config_s+4)
  2918   0017B0  6ED9               	movwf	fsr2l,c
  2919   0017B2  6ADA               	clrf	fsr2h,c
  2920   0017B4  0008               	tblrd		*
  2921   0017B6  CFF5 FFDF          	movff	tablat,indf2
  2922   0017BA                     
  2923                           ;drivers/scr/API_MRF24J40.c: 118:  }
  2924   0017BA  4A02               	infsnz	InicializoVariables@i^0,f,c
  2925   0017BC  2A03               	incf	(InicializoVariables@i+1)^0,f,c
  2926   0017BE  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  2927   0017C0  EFEB  F00B         	goto	u591
  2928   0017C4  5003               	movf	(InicializoVariables@i+1)^0,w,c
  2929   0017C6  E109               	bnz	u590
  2930   0017C8  0E10               	movlw	16
  2931   0017CA  5C02               	subwf	InicializoVariables@i^0,w,c
  2932   0017CC  A0D8               	btfss	status,0,c
  2933   0017CE  EFEB  F00B         	goto	u591
  2934   0017D2  EFED  F00B         	goto	u590
  2935   0017D6                     u591:
  2936   0017D6  EFB3  F00B         	goto	l1907
  2937   0017DA                     u590:
  2938   0017DA                     
  2939                           ;drivers/scr/API_MRF24J40.c: 119:  mrf24_data_config_s.sequence_number = (0X01);
  2940   0017DA  0E01               	movlw	1
  2941   0017DC  0100               	movlb	0	; () banked
  2942   0017DE  6F62               	movwf	(_mrf24_data_config_s+2)& (0+255),b
  2943                           
  2944                           ;drivers/scr/API_MRF24J40.c: 120:  mrf24_data_config_s.my_channel = CH_11;
  2945   0017E0  0E03               	movlw	3
  2946   0017E2  6F63               	movwf	(_mrf24_data_config_s+3)& (0+255),b
  2947   0017E4                     
  2948                           ; BSR set to: 0
  2949                           ;drivers/scr/API_MRF24J40.c: 121:  mrf24_data_config_s.get_new_msg = 0;
  2950   0017E4  6B60               	clrf	_mrf24_data_config_s& (0+255),b
  2951   0017E6                     
  2952                           ; BSR set to: 0
  2953                           ;drivers/scr/API_MRF24J40.c: 122:  mrf24_data_config_s.put_new_msg = 0;
  2954   0017E6  6B61               	clrf	(_mrf24_data_config_s+1)& (0+255),b
  2955                           
  2956                           ;drivers/scr/API_MRF24J40.c: 123:  mrf24_data_config_s.my_panid = (0x1234);
  2957   0017E8  0E12               	movlw	18
  2958   0017EA  6F7D               	movwf	(_mrf24_data_config_s+29)& (0+255),b
  2959   0017EC  0E34               	movlw	52
  2960   0017EE  6F7C               	movwf	(_mrf24_data_config_s+28)& (0+255),b
  2961                           
  2962                           ;drivers/scr/API_MRF24J40.c: 124:  mrf24_data_config_s.my_address = (0x1112);
  2963   0017F0  0E11               	movlw	17
  2964   0017F2  6F7F               	movwf	(_mrf24_data_config_s+31)& (0+255),b
  2965   0017F4  0E12               	movlw	18
  2966   0017F6  6F7E               	movwf	(_mrf24_data_config_s+30)& (0+255),b
  2967                           
  2968                           ;drivers/scr/API_MRF24J40.c: 125:  mrf24_data_in_s.source_address = (0X00);
  2969   0017F8  0E00               	movlw	0
  2970   0017FA  6F85               	movwf	(_mrf24_data_in_s+3)& (0+255),b
  2971   0017FC  0E00               	movlw	0
  2972   0017FE  6F84               	movwf	(_mrf24_data_in_s+2)& (0+255),b
  2973                           
  2974                           ;drivers/scr/API_MRF24J40.c: 126:  mrf24_data_in_s.source_panid = (0X00);
  2975   001800  0E00               	movlw	0
  2976   001802  6F83               	movwf	(_mrf24_data_in_s+1)& (0+255),b
  2977   001804  0E00               	movlw	0
  2978   001806  6F82               	movwf	_mrf24_data_in_s& (0+255),b
  2979   001808                     
  2980                           ; BSR set to: 0
  2981                           ;drivers/scr/API_MRF24J40.c: 127:  mrf24_data_in_s.tamano_mensaje = (0X00);
  2982   001808  6B86               	clrf	(_mrf24_data_in_s+4)& (0+255),b
  2983   00180A                     
  2984                           ; BSR set to: 0
  2985                           ;drivers/scr/API_MRF24J40.c: 128:  mrf24_data_in_s.buffer_entrada[0] = (0X00);
  2986   00180A  6B88               	clrf	(_mrf24_data_in_s+6)& (0+255),b
  2987                           
  2988                           ;drivers/scr/API_MRF24J40.c: 129:  mrf24_data_out_s.destinity_panid = (0X00);
  2989   00180C  0E00               	movlw	0
  2990   00180E  6E32               	movwf	(_mrf24_data_out_s+1)^0,c
  2991   001810  0E00               	movlw	0
  2992   001812  6E31               	movwf	_mrf24_data_out_s^0,c
  2993                           
  2994                           ;drivers/scr/API_MRF24J40.c: 130:  mrf24_data_out_s.destinity_address = (0X00);
  2995   001814  0E00               	movlw	0
  2996   001816  6E34               	movwf	(_mrf24_data_out_s+3)^0,c
  2997   001818  0E00               	movlw	0
  2998   00181A  6E33               	movwf	(_mrf24_data_out_s+2)^0,c
  2999   00181C                     
  3000                           ; BSR set to: 0
  3001                           ;drivers/scr/API_MRF24J40.c: 131:  mrf24_data_out_s.largo_mensaje = (0X00);
  3002   00181C  6A35               	clrf	(_mrf24_data_out_s+4)^0,c
  3003   00181E                     
  3004                           ; BSR set to: 0
  3005                           ;drivers/scr/API_MRF24J40.c: 132:  mrf24_data_out_s.buffer_salida = ((void*)0);
  3006   00181E  6A36               	clrf	(_mrf24_data_out_s+5)^0,c
  3007   001820                     
  3008                           ; BSR set to: 0
  3009   001820  0012               	return		;funcret
  3010   001822                     __end_of_InicializoVariables:
  3011                           	callstack 0
  3012                           
  3013 ;; *************** function _InicializoPines *****************
  3014 ;; Defined at:
  3015 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;		None
  3018 ;; Auto vars:     Size  Location     Type
  3019 ;;		None
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    wreg      void 
  3022 ;; Registers used:
  3023 ;;		wreg, cstack
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;Total ram usage:        0 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 2
  3036 ;; This function calls:
  3037 ;;		_SetCSPin
  3038 ;;		_SetResetPin
  3039 ;;		_SetWakePin
  3040 ;; This function is called by:
  3041 ;;		_MRF24J40Init
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text10
  3046   001DC4                     __ptext10:
  3047                           	callstack 0
  3048   001DC4                     _InicializoPines:
  3049                           	callstack 27
  3050   001DC4                     
  3051                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  3052   001DC4  0E01               	movlw	1
  3053   001DC6  EC12  F00F         	call	_SetCSPin
  3054                           
  3055                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  3056   001DCA  0E01               	movlw	1
  3057   001DCC  ECF6  F00E         	call	_SetWakePin
  3058                           
  3059                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  3060   001DD0  0E00               	movlw	0
  3061   001DD2  ECFD  F00E         	call	_SetResetPin
  3062   001DD6  0012               	return		;funcret
  3063   001DD8                     __end_of_InicializoPines:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _SetWakePin *****************
  3067 ;; Defined at:
  3068 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  estado          1    wreg     _Bool 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  estado          1    0[COMRAM] _Bool 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;Total ram usage:        1 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 1
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_InicializoPines
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text11
  3097   001DEC                     __ptext11:
  3098                           	callstack 0
  3099   001DEC                     _SetWakePin:
  3100                           	callstack 27
  3101                           
  3102                           ;incstack = 0
  3103                           ;SetWakePin@estado stored from wreg
  3104   001DEC  6E01               	movwf	SetWakePin@estado^0,c
  3105   001DEE                     
  3106                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  3107   001DEE  B001               	btfsc	SetWakePin@estado^0,0,c
  3108   001DF0  D002               	bra	u55
  3109   001DF2  9E8B               	bcf	139,7,c	;volatile
  3110   001DF4  D001               	bra	u56
  3111   001DF6                     u55:
  3112   001DF6  8E8B               	bsf	139,7,c	;volatile
  3113   001DF8                     u56:
  3114   001DF8  0012               	return		;funcret
  3115   001DFA                     __end_of_SetWakePin:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _SetResetPin *****************
  3119 ;; Defined at:
  3120 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  estado          1    wreg     _Bool 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  estado          1    0[COMRAM] _Bool 
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;Total ram usage:        1 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 1
  3141 ;; This function calls:
  3142 ;;		Nothing
  3143 ;; This function is called by:
  3144 ;;		_InicializoPines
  3145 ;;		_MRF24J40Init
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text12
  3150   001DFA                     __ptext12:
  3151                           	callstack 0
  3152   001DFA                     _SetResetPin:
  3153                           	callstack 28
  3154                           
  3155                           ;incstack = 0
  3156                           ;SetResetPin@estado stored from wreg
  3157   001DFA  6E01               	movwf	SetResetPin@estado^0,c
  3158   001DFC                     
  3159                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  3160   001DFC  B001               	btfsc	SetResetPin@estado^0,0,c
  3161   001DFE  D002               	bra	u65
  3162   001E00  988C               	bcf	140,4,c	;volatile
  3163   001E02  D001               	bra	u66
  3164   001E04                     u65:
  3165   001E04  888C               	bsf	140,4,c	;volatile
  3166   001E06                     u66:
  3167   001E06  0012               	return		;funcret
  3168   001E08                     __end_of_SetResetPin:
  3169                           	callstack 0
  3170                           
  3171 ;; *************** function _InicializoMRF24 *****************
  3172 ;; Defined at:
  3173 ;;		line 141 in file "drivers/scr/API_MRF24J40.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;		None
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  delay_time_o    9   16[COMRAM] struct .
  3178 ;;  lectura         1   15[COMRAM] unsigned char 
  3179 ;; Return value:  Size  Location     Type
  3180 ;;                  1    wreg      enum E3264
  3181 ;; Registers used:
  3182 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3183 ;; Tracked objects:
  3184 ;;		On entry : 0/0
  3185 ;;		On exit  : 0/0
  3186 ;;		Unchanged: 0/0
  3187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;Total ram usage:       11 bytes
  3193 ;; Hardware stack levels used: 1
  3194 ;; Hardware stack levels required when called: 6
  3195 ;; This function calls:
  3196 ;;		_DelayInit
  3197 ;;		_DelayRead
  3198 ;;		_DelayReset
  3199 ;;		_GetLongAddr
  3200 ;;		_GetShortAddr
  3201 ;;		_SetChannel
  3202 ;;		_SetDeviceAddress
  3203 ;;		_SetDeviceMACAddress
  3204 ;;		_SetLongAddr
  3205 ;;		_SetShortAddr
  3206 ;; This function is called by:
  3207 ;;		_MRF24J40Init
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text13
  3212   001234                     __ptext13:
  3213                           	callstack 0
  3214   001234                     _InicializoMRF24:
  3215                           	callstack 23
  3216   001234                     
  3217                           ;drivers/scr/API_MRF24J40.c: 143:  uint8_t lectura;;drivers/scr/API_MRF24J40.c: 144:  de
      +                          layNoBloqueanteData delay_time_out;;drivers/scr/API_MRF24J40.c: 145:  DelayInit(&delay_t
      +                          ime_out, 100);
  3218   001234  0E11               	movlw	low InicializoMRF24@delay_time_out
  3219   001236  6E01               	movwf	DelayInit@delay^0,c
  3220   001238  0E64               	movlw	100
  3221   00123A  6E02               	movwf	DelayInit@duration^0,c
  3222   00123C  0E00               	movlw	0
  3223   00123E  6E03               	movwf	(DelayInit@duration+1)^0,c
  3224   001240  0E00               	movlw	0
  3225   001242  6E04               	movwf	(DelayInit@duration+2)^0,c
  3226   001244  0E00               	movlw	0
  3227   001246  6E05               	movwf	(DelayInit@duration+3)^0,c
  3228   001248  EC57  F00E         	call	_DelayInit	;wreg free
  3229   00124C                     
  3230                           ;drivers/scr/API_MRF24J40.c: 146:  SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  3231   00124C  0E07               	movlw	7
  3232   00124E  6E03               	movwf	SetShortAddr@valor^0,c
  3233   001250  0E2A               	movlw	42
  3234   001252  EC91  F00E         	call	_SetShortAddr
  3235   001256                     
  3236                           ;drivers/scr/API_MRF24J40.c: 147:  DelayReset(&delay_time_out);
  3237   001256  0E11               	movlw	low InicializoMRF24@delay_time_out
  3238   001258  6E01               	movwf	DelayReset@delay^0,c
  3239   00125A  EC7E  F00E         	call	_DelayReset	;wreg free
  3240   00125E                     l103:
  3241                           
  3242                           ;drivers/scr/API_MRF24J40.c: 151:   lectura = GetShortAddr((0x2A));
  3243   00125E  0E2A               	movlw	42
  3244   001260  EC6B  F00E         	call	_GetShortAddr
  3245   001264  6E10               	movwf	InicializoMRF24@lectura^0,c
  3246   001266                     
  3247                           ;drivers/scr/API_MRF24J40.c: 152:   if(DelayRead(&delay_time_out))
  3248   001266  0E11               	movlw	low InicializoMRF24@delay_time_out
  3249   001268  6E02               	movwf	DelayRead@delay^0,c
  3250   00126A  EC11  F00C         	call	_DelayRead	;wreg free
  3251   00126E  0900               	iorlw	0
  3252   001270  B4D8               	btfsc	status,2,c
  3253   001272  EF3D  F009         	goto	u601
  3254   001276  EF3F  F009         	goto	u600
  3255   00127A                     u601:
  3256   00127A  EF42  F009         	goto	l1943
  3257   00127E                     u600:
  3258   00127E                     l1939:
  3259                           
  3260                           ;drivers/scr/API_MRF24J40.c: 153:    return TIME_OUT_OCURRIDO;
  3261   00127E  0E06               	movlw	6
  3262   001280  EFE7  F009         	goto	l105
  3263   001284                     l1943:
  3264                           
  3265                           ;drivers/scr/API_MRF24J40.c: 154:  }while((lectura & ((0X04) | (0X02) | (0X01))) != (0X0
      +                          0));
  3266   001284  C010  F00F         	movff	InicializoMRF24@lectura,??_InicializoMRF24
  3267   001288  0E07               	movlw	7
  3268   00128A  160F               	andwf	??_InicializoMRF24^0,f,c
  3269   00128C  A4D8               	btfss	status,2,c
  3270   00128E  EF4B  F009         	goto	u611
  3271   001292  EF4D  F009         	goto	u610
  3272   001296                     u611:
  3273   001296  EF2F  F009         	goto	l103
  3274   00129A                     u610:
  3275   00129A                     
  3276                           ;drivers/scr/API_MRF24J40.c: 155:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3277   00129A  0E06               	movlw	6
  3278   00129C  6E0F               	movwf	??_InicializoMRF24^0,c
  3279   00129E  0E30               	movlw	48
  3280   0012A0                     u967:
  3281   0012A0  2EE8               	decfsz	wreg,f,c
  3282   0012A2  D7FE               	bra	u967
  3283   0012A4  2E0F               	decfsz	??_InicializoMRF24^0,f,c
  3284   0012A6  D7FC               	bra	u967
  3285   0012A8  F000 F000          	nop2	
  3286   0012AC                     
  3287                           ;drivers/scr/API_MRF24J40.c: 156:  SetShortAddr((0x0D), (0X01));
  3288   0012AC  0E01               	movlw	1
  3289   0012AE  6E03               	movwf	SetShortAddr@valor^0,c
  3290   0012B0  0E0D               	movlw	13
  3291   0012B2  EC91  F00E         	call	_SetShortAddr
  3292   0012B6                     
  3293                           ;drivers/scr/API_MRF24J40.c: 157:  SetDeviceAddress();
  3294   0012B6  EC40  F00E         	call	_SetDeviceAddress	;wreg free
  3295   0012BA                     
  3296                           ;drivers/scr/API_MRF24J40.c: 158:  SetDeviceMACAddress();
  3297   0012BA  EC40  F00D         	call	_SetDeviceMACAddress	;wreg free
  3298   0012BE                     
  3299                           ;drivers/scr/API_MRF24J40.c: 159:  SetLongAddr((0x202), (0X80));
  3300   0012BE  0E02               	movlw	2
  3301   0012C0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3302   0012C2  0E02               	movlw	2
  3303   0012C4  6E06               	movwf	SetLongAddr@reg_address^0,c
  3304   0012C6  0E80               	movlw	128
  3305   0012C8  6E08               	movwf	SetLongAddr@valor^0,c
  3306   0012CA  EC61  F00D         	call	_SetLongAddr	;wreg free
  3307   0012CE                     
  3308                           ;drivers/scr/API_MRF24J40.c: 160:  SetLongAddr((0x203), (0XC0) | (0X38));
  3309   0012CE  0E02               	movlw	2
  3310   0012D0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3311   0012D2  0E03               	movlw	3
  3312   0012D4  6E06               	movwf	SetLongAddr@reg_address^0,c
  3313   0012D6  0EF8               	movlw	248
  3314   0012D8  6E08               	movwf	SetLongAddr@valor^0,c
  3315   0012DA  EC61  F00D         	call	_SetLongAddr	;wreg free
  3316   0012DE                     
  3317                           ;drivers/scr/API_MRF24J40.c: 161:  SetLongAddr((0x206), (0X80) | (0X10));
  3318   0012DE  0E02               	movlw	2
  3319   0012E0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3320   0012E2  0E06               	movlw	6
  3321   0012E4  6E06               	movwf	SetLongAddr@reg_address^0,c
  3322   0012E6  0E90               	movlw	144
  3323   0012E8  6E08               	movwf	SetLongAddr@valor^0,c
  3324   0012EA  EC61  F00D         	call	_SetLongAddr	;wreg free
  3325   0012EE                     
  3326                           ;drivers/scr/API_MRF24J40.c: 162:  SetLongAddr((0x207), (0X80));
  3327   0012EE  0E02               	movlw	2
  3328   0012F0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3329   0012F2  0E07               	movlw	7
  3330   0012F4  6E06               	movwf	SetLongAddr@reg_address^0,c
  3331   0012F6  0E80               	movlw	128
  3332   0012F8  6E08               	movwf	SetLongAddr@valor^0,c
  3333   0012FA  EC61  F00D         	call	_SetLongAddr	;wreg free
  3334   0012FE                     
  3335                           ;drivers/scr/API_MRF24J40.c: 163:  SetLongAddr((0x208), (0X10));
  3336   0012FE  0E02               	movlw	2
  3337   001300  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3338   001302  0E08               	movlw	8
  3339   001304  6E06               	movwf	SetLongAddr@reg_address^0,c
  3340   001306  0E10               	movlw	16
  3341   001308  6E08               	movwf	SetLongAddr@valor^0,c
  3342   00130A  EC61  F00D         	call	_SetLongAddr	;wreg free
  3343   00130E                     
  3344                           ;drivers/scr/API_MRF24J40.c: 164:  SetLongAddr((0x220), (0X20) | (0X01));
  3345   00130E  0E02               	movlw	2
  3346   001310  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3347   001312  0E20               	movlw	32
  3348   001314  6E06               	movwf	SetLongAddr@reg_address^0,c
  3349   001316  0E21               	movlw	33
  3350   001318  6E08               	movwf	SetLongAddr@valor^0,c
  3351   00131A  EC61  F00D         	call	_SetLongAddr	;wreg free
  3352   00131E                     
  3353                           ;drivers/scr/API_MRF24J40.c: 165:  SetShortAddr((0x3A), (0X80));
  3354   00131E  0E80               	movlw	128
  3355   001320  6E03               	movwf	SetShortAddr@valor^0,c
  3356   001322  0E3A               	movlw	58
  3357   001324  EC91  F00E         	call	_SetShortAddr
  3358   001328                     
  3359                           ;drivers/scr/API_MRF24J40.c: 166:  SetShortAddr((0x3E), (0X40));
  3360   001328  0E40               	movlw	64
  3361   00132A  6E03               	movwf	SetShortAddr@valor^0,c
  3362   00132C  0E3E               	movlw	62
  3363   00132E  EC91  F00E         	call	_SetShortAddr
  3364   001332                     
  3365                           ;drivers/scr/API_MRF24J40.c: 167:  SetShortAddr((0x3F), (0X04) | (0X02));
  3366   001332  0E06               	movlw	6
  3367   001334  6E03               	movwf	SetShortAddr@valor^0,c
  3368   001336  0E3F               	movlw	63
  3369   001338  EC91  F00E         	call	_SetShortAddr
  3370   00133C                     
  3371                           ;drivers/scr/API_MRF24J40.c: 168:  SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  3372   00133C  0E98               	movlw	152
  3373   00133E  6E03               	movwf	SetShortAddr@valor^0,c
  3374   001340  0E18               	movlw	24
  3375   001342  EC91  F00E         	call	_SetShortAddr
  3376   001346                     
  3377                           ;drivers/scr/API_MRF24J40.c: 169:  SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0X01
      +                          ));
  3378   001346  0E95               	movlw	149
  3379   001348  6E03               	movwf	SetShortAddr@valor^0,c
  3380   00134A  0E2E               	movlw	46
  3381   00134C  EC91  F00E         	call	_SetShortAddr
  3382   001350                     
  3383                           ;drivers/scr/API_MRF24J40.c: 170:  DelayReset(&delay_time_out);
  3384   001350  0E11               	movlw	low InicializoMRF24@delay_time_out
  3385   001352  6E01               	movwf	DelayReset@delay^0,c
  3386   001354  EC7E  F00E         	call	_DelayReset	;wreg free
  3387   001358                     l1977:
  3388                           
  3389                           ;drivers/scr/API_MRF24J40.c: 174:   lectura = GetLongAddr((0x20f));
  3390   001358  0E02               	movlw	2
  3391   00135A  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3392   00135C  0E0F               	movlw	15
  3393   00135E  6E06               	movwf	GetLongAddr@reg_address^0,c
  3394   001360  EC1E  F00D         	call	_GetLongAddr	;wreg free
  3395   001364  6E10               	movwf	InicializoMRF24@lectura^0,c
  3396   001366                     
  3397                           ;drivers/scr/API_MRF24J40.c: 175:   if(DelayRead(&delay_time_out))
  3398   001366  0E11               	movlw	low InicializoMRF24@delay_time_out
  3399   001368  6E02               	movwf	DelayRead@delay^0,c
  3400   00136A  EC11  F00C         	call	_DelayRead	;wreg free
  3401   00136E  0900               	iorlw	0
  3402   001370  B4D8               	btfsc	status,2,c
  3403   001372  EFBD  F009         	goto	u621
  3404   001376  EFBF  F009         	goto	u620
  3405   00137A                     u621:
  3406   00137A  EFC1  F009         	goto	l1985
  3407   00137E                     u620:
  3408   00137E  EF3F  F009         	goto	l1939
  3409   001382                     l1985:
  3410                           
  3411                           ;drivers/scr/API_MRF24J40.c: 177:  }while(lectura != (0XA0));
  3412   001382  0EA0               	movlw	160
  3413   001384  1810               	xorwf	InicializoMRF24@lectura^0,w,c
  3414   001386  A4D8               	btfss	status,2,c
  3415   001388  EFC8  F009         	goto	u631
  3416   00138C  EFCA  F009         	goto	u630
  3417   001390                     u631:
  3418   001390  EFAC  F009         	goto	l1977
  3419   001394                     u630:
  3420   001394                     
  3421                           ;drivers/scr/API_MRF24J40.c: 178:  SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0X10
      +                          ) | (0X04) | (0X01));
  3422   001394  0EF5               	movlw	245
  3423   001396  6E03               	movwf	SetShortAddr@valor^0,c
  3424   001398  0E32               	movlw	50
  3425   00139A  EC91  F00E         	call	_SetShortAddr
  3426                           
  3427                           ;drivers/scr/API_MRF24J40.c: 179:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  3428   00139E  0EB9               	movlw	185
  3429   0013A0  6E03               	movwf	SetShortAddr@valor^0,c
  3430   0013A2  0E12               	movlw	18
  3431   0013A4  EC91  F00E         	call	_SetShortAddr
  3432                           
  3433                           ;drivers/scr/API_MRF24J40.c: 180:  SetLongAddr((0x201), (0X02) | (0X01));
  3434   0013A8  0E02               	movlw	2
  3435   0013AA  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3436   0013AC  0E01               	movlw	1
  3437   0013AE  6E06               	movwf	SetLongAddr@reg_address^0,c
  3438   0013B0  0E03               	movlw	3
  3439   0013B2  6E08               	movwf	SetLongAddr@valor^0,c
  3440   0013B4  EC61  F00D         	call	_SetLongAddr	;wreg free
  3441                           
  3442                           ;drivers/scr/API_MRF24J40.c: 181:  SetChannel();
  3443   0013B8  ECBF  F00D         	call	_SetChannel	;wreg free
  3444                           
  3445                           ;drivers/scr/API_MRF24J40.c: 182:  SetShortAddr((0x00), (0X00));
  3446   0013BC  0E00               	movlw	0
  3447   0013BE  6E03               	movwf	SetShortAddr@valor^0,c
  3448   0013C0  0E00               	movlw	0
  3449   0013C2  EC91  F00E         	call	_SetShortAddr
  3450                           
  3451                           ;drivers/scr/API_MRF24J40.c: 183:  (void)GetShortAddr((0x31));
  3452   0013C6  0E31               	movlw	49
  3453   0013C8  EC6B  F00E         	call	_GetShortAddr
  3454   0013CC                     
  3455                           ;drivers/scr/API_MRF24J40.c: 184:  return INICIALIZACION_OK;
  3456   0013CC  0E00               	movlw	0
  3457   0013CE                     l105:
  3458   0013CE  0012               	return		;funcret
  3459   0013D0                     __end_of_InicializoMRF24:
  3460                           	callstack 0
  3461                           
  3462 ;; *************** function _SetDeviceMACAddress *****************
  3463 ;; Defined at:
  3464 ;;		line 298 in file "drivers/scr/API_MRF24J40.c"
  3465 ;; Parameters:    Size  Location     Type
  3466 ;;		None
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;  i               2    4[COMRAM] int 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;Total ram usage:        2 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; Hardware stack levels required when called: 4
  3485 ;; This function calls:
  3486 ;;		_SetShortAddr
  3487 ;; This function is called by:
  3488 ;;		_InicializoMRF24
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           	psect	text14
  3493   001A80                     __ptext14:
  3494                           	callstack 0
  3495   001A80                     _SetDeviceMACAddress:
  3496                           	callstack 24
  3497   001A80                     
  3498                           ;drivers/scr/API_MRF24J40.c: 300:  long_mac_address_e = EADR0;
  3499   001A80  0E05               	movlw	5
  3500   001A82  6E3C               	movwf	_long_mac_address_e^0,c
  3501                           
  3502                           ;drivers/scr/API_MRF24J40.c: 302:  for(int i = 0; i < 8; i++) {
  3503   001A84  0E00               	movlw	0
  3504   001A86  6E06               	movwf	(SetDeviceMACAddress@i+1)^0,c
  3505   001A88  0E00               	movlw	0
  3506   001A8A  6E05               	movwf	SetDeviceMACAddress@i^0,c
  3507   001A8C                     l1869:
  3508                           
  3509                           ;drivers/scr/API_MRF24J40.c: 304:   SetShortAddr(long_mac_address_e++, mrf24_data_config
      +                          _s.my_mac[i]);
  3510   001A8C  5005               	movf	SetDeviceMACAddress@i^0,w,c
  3511   001A8E  0F74               	addlw	low (_mrf24_data_config_s+20)
  3512   001A90  6ED9               	movwf	fsr2l,c
  3513   001A92  6ADA               	clrf	fsr2h,c
  3514   001A94  50DF               	movf	indf2,w,c
  3515   001A96  6E03               	movwf	SetShortAddr@valor^0,c
  3516   001A98  503C               	movf	_long_mac_address_e^0,w,c
  3517   001A9A  EC91  F00E         	call	_SetShortAddr
  3518   001A9E  2A3C               	incf	_long_mac_address_e^0,f,c
  3519   001AA0                     
  3520                           ;drivers/scr/API_MRF24J40.c: 305:  }
  3521   001AA0  4A05               	infsnz	SetDeviceMACAddress@i^0,f,c
  3522   001AA2  2A06               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  3523   001AA4  BE06               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  3524   001AA6  EF5E  F00D         	goto	u561
  3525   001AAA  5006               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  3526   001AAC  E109               	bnz	u560
  3527   001AAE  0E08               	movlw	8
  3528   001AB0  5C05               	subwf	SetDeviceMACAddress@i^0,w,c
  3529   001AB2  A0D8               	btfss	status,0,c
  3530   001AB4  EF5E  F00D         	goto	u561
  3531   001AB8  EF60  F00D         	goto	u560
  3532   001ABC                     u561:
  3533   001ABC  EF46  F00D         	goto	l1869
  3534   001AC0                     u560:
  3535   001AC0  0012               	return		;funcret
  3536   001AC2                     __end_of_SetDeviceMACAddress:
  3537                           	callstack 0
  3538                           
  3539 ;; *************** function _SetDeviceAddress *****************
  3540 ;; Defined at:
  3541 ;;		line 284 in file "drivers/scr/API_MRF24J40.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;		None
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;		None
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  1    wreg      void 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;Total ram usage:        0 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 4
  3562 ;; This function calls:
  3563 ;;		_SetShortAddr
  3564 ;; This function is called by:
  3565 ;;		_InicializoMRF24
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text15
  3570   001C80                     __ptext15:
  3571                           	callstack 0
  3572   001C80                     _SetDeviceAddress:
  3573                           	callstack 24
  3574   001C80                     
  3575                           ;drivers/scr/API_MRF24J40.c: 286:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config_s.m
      +                          y_address >> (0X08)));
  3576   001C80  0100               	movlb	0	; () banked
  3577   001C82  517F               	movf	(_mrf24_data_config_s+31)& (0+255),w,b
  3578   001C84  6E03               	movwf	SetShortAddr@valor^0,c
  3579   001C86  0E04               	movlw	4
  3580   001C88  EC91  F00E         	call	_SetShortAddr
  3581                           
  3582                           ;drivers/scr/API_MRF24J40.c: 287:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config_s.m
      +                          y_address));
  3583   001C8C  C07E  F003         	movff	_mrf24_data_config_s+30,SetShortAddr@valor
  3584   001C90  0E03               	movlw	3
  3585   001C92  EC91  F00E         	call	_SetShortAddr
  3586                           
  3587                           ;drivers/scr/API_MRF24J40.c: 288:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config_s.m
      +                          y_panid >> (0X08)));
  3588   001C96  0100               	movlb	0	; () banked
  3589   001C98  517D               	movf	(_mrf24_data_config_s+29)& (0+255),w,b
  3590   001C9A  6E03               	movwf	SetShortAddr@valor^0,c
  3591   001C9C  0E02               	movlw	2
  3592   001C9E  EC91  F00E         	call	_SetShortAddr
  3593                           
  3594                           ;drivers/scr/API_MRF24J40.c: 289:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config_s.m
      +                          y_panid));
  3595   001CA2  C07C  F003         	movff	_mrf24_data_config_s+28,SetShortAddr@valor
  3596   001CA6  0E01               	movlw	1
  3597   001CA8  EC91  F00E         	call	_SetShortAddr
  3598   001CAC  0012               	return		;funcret
  3599   001CAE                     __end_of_SetDeviceAddress:
  3600                           	callstack 0
  3601                           
  3602 ;; *************** function _SetChannel *****************
  3603 ;; Defined at:
  3604 ;;		line 270 in file "drivers/scr/API_MRF24J40.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;		None
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;Total ram usage:        1 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 5
  3625 ;; This function calls:
  3626 ;;		_SetLongAddr
  3627 ;;		_SetShortAddr
  3628 ;; This function is called by:
  3629 ;;		_InicializoMRF24
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text16
  3634   001B7E                     __ptext16:
  3635                           	callstack 0
  3636   001B7E                     _SetChannel:
  3637                           	callstack 23
  3638   001B7E                     
  3639                           ;drivers/scr/API_MRF24J40.c: 272:  SetLongAddr((0x200), mrf24_data_config_s.my_channel);
  3640   001B7E  0E02               	movlw	2
  3641   001B80  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3642   001B82  0E00               	movlw	0
  3643   001B84  6E06               	movwf	SetLongAddr@reg_address^0,c
  3644   001B86  C063  F008         	movff	_mrf24_data_config_s+3,SetLongAddr@valor
  3645   001B8A  EC61  F00D         	call	_SetLongAddr	;wreg free
  3646                           
  3647                           ;drivers/scr/API_MRF24J40.c: 273:  SetShortAddr((0x36), (0X04));
  3648   001B8E  0E04               	movlw	4
  3649   001B90  6E03               	movwf	SetShortAddr@valor^0,c
  3650   001B92  0E36               	movlw	54
  3651   001B94  EC91  F00E         	call	_SetShortAddr
  3652                           
  3653                           ;drivers/scr/API_MRF24J40.c: 274:  SetShortAddr((0x36), (0X00));
  3654   001B98  0E00               	movlw	0
  3655   001B9A  6E03               	movwf	SetShortAddr@valor^0,c
  3656   001B9C  0E36               	movlw	54
  3657   001B9E  EC91  F00E         	call	_SetShortAddr
  3658   001BA2                     
  3659                           ;drivers/scr/API_MRF24J40.c: 275:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3660   001BA2  0E06               	movlw	6
  3661   001BA4  6E0B               	movwf	??_SetChannel^0,c
  3662   001BA6  0E30               	movlw	48
  3663   001BA8                     u977:
  3664   001BA8  2EE8               	decfsz	wreg,f,c
  3665   001BAA  D7FE               	bra	u977
  3666   001BAC  2E0B               	decfsz	??_SetChannel^0,f,c
  3667   001BAE  D7FC               	bra	u977
  3668   001BB0  F000 F000          	nop2	
  3669   001BB4  0012               	return		;funcret
  3670   001BB6                     __end_of_SetChannel:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function _GetShortAddr *****************
  3674 ;; Defined at:
  3675 ;;		line 212 in file "drivers/scr/API_MRF24J40.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  reg_address     1    wreg     unsigned char 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;  reg_address     1    3[COMRAM] unsigned char 
  3680 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      unsigned char 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;Total ram usage:        2 bytes
  3695 ;; Hardware stack levels used: 1
  3696 ;; Hardware stack levels required when called: 3
  3697 ;; This function calls:
  3698 ;;		_ReadByteSPIPort
  3699 ;;		_SetCSPin
  3700 ;;		_WriteByteSPIPort
  3701 ;; This function is called by:
  3702 ;;		_InicializoMRF24
  3703 ;;		_MRF24TransmitirDato
  3704 ;;		_MRF24ReciboPaquete
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           	psect	text17
  3709   001CD6                     __ptext17:
  3710                           	callstack 0
  3711   001CD6                     _GetShortAddr:
  3712                           	callstack 26
  3713                           
  3714                           ;incstack = 0
  3715                           ;GetShortAddr@reg_address stored from wreg
  3716   001CD6  6E04               	movwf	GetShortAddr@reg_address^0,c
  3717   001CD8                     
  3718                           ;drivers/scr/API_MRF24J40.c: 218:  reg_address = (uint8_t) (reg_address << (0X01)) & (0x
      +                          7E);
  3719   001CD8  5004               	movf	GetShortAddr@reg_address^0,w,c
  3720   001CDA  2404               	addwf	GetShortAddr@reg_address^0,w,c
  3721   001CDC  0B7E               	andlw	126
  3722   001CDE  6E04               	movwf	GetShortAddr@reg_address^0,c
  3723   001CE0                     
  3724                           ;drivers/scr/API_MRF24J40.c: 219:  SetCSPin(0);
  3725   001CE0  0E00               	movlw	0
  3726   001CE2  EC12  F00F         	call	_SetCSPin
  3727   001CE6                     
  3728                           ;drivers/scr/API_MRF24J40.c: 220:  WriteByteSPIPort(reg_address);
  3729   001CE6  5004               	movf	GetShortAddr@reg_address^0,w,c
  3730   001CE8  EC20  F00F         	call	_WriteByteSPIPort
  3731   001CEC                     
  3732                           ;drivers/scr/API_MRF24J40.c: 221:  leido_spi = ReadByteSPIPort();
  3733   001CEC  EC25  F00F         	call	_ReadByteSPIPort	;wreg free
  3734   001CF0  6E03               	movwf	GetShortAddr@leido_spi^0,c
  3735   001CF2                     
  3736                           ;drivers/scr/API_MRF24J40.c: 222:  SetCSPin(1);
  3737   001CF2  0E01               	movlw	1
  3738   001CF4  EC12  F00F         	call	_SetCSPin
  3739   001CF8                     
  3740                           ;drivers/scr/API_MRF24J40.c: 223:  return leido_spi;
  3741   001CF8  5003               	movf	GetShortAddr@leido_spi^0,w,c
  3742   001CFA  0012               	return		;funcret
  3743   001CFC                     __end_of_GetShortAddr:
  3744                           	callstack 0
  3745                           
  3746 ;; *************** function _GetLongAddr *****************
  3747 ;; Defined at:
  3748 ;;		line 251 in file "drivers/scr/API_MRF24J40.c"
  3749 ;; Parameters:    Size  Location     Type
  3750 ;;  reg_address     2    5[COMRAM] unsigned short 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  respuesta       1    9[COMRAM] unsigned char 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  1    wreg      unsigned char 
  3755 ;; Registers used:
  3756 ;;		wreg, status,2, status,0, cstack
  3757 ;; Tracked objects:
  3758 ;;		On entry : 0/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;Total ram usage:        5 bytes
  3767 ;; Hardware stack levels used: 1
  3768 ;; Hardware stack levels required when called: 4
  3769 ;; This function calls:
  3770 ;;		_ReadByteSPIPort
  3771 ;;		_SetCSPin
  3772 ;;		_Write2ByteSPIPort
  3773 ;; This function is called by:
  3774 ;;		_InicializoMRF24
  3775 ;;		_MRF24ReciboPaquete
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text18
  3780   001A3C                     __ptext18:
  3781                           	callstack 0
  3782   001A3C                     _GetLongAddr:
  3783                           	callstack 25
  3784   001A3C                     
  3785                           ;drivers/scr/API_MRF24J40.c: 256:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 257:  
      +                          reg_address = (reg_address << (0X05)) | (0X8000);
  3786   001A3C  C006  F008         	movff	GetLongAddr@reg_address,??_GetLongAddr
  3787   001A40  C007  F009         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  3788   001A44  0E05               	movlw	5
  3789   001A46                     u575:
  3790   001A46  90D8               	bcf	status,0,c
  3791   001A48  3608               	rlcf	??_GetLongAddr^0,f,c
  3792   001A4A  3609               	rlcf	(??_GetLongAddr+1)^0,f,c
  3793   001A4C  2EE8               	decfsz	wreg,f,c
  3794   001A4E  EF23  F00D         	goto	u575
  3795   001A52  0E00               	movlw	0
  3796   001A54  1008               	iorwf	??_GetLongAddr^0,w,c
  3797   001A56  6E06               	movwf	GetLongAddr@reg_address^0,c
  3798   001A58  0E80               	movlw	128
  3799   001A5A  1009               	iorwf	(??_GetLongAddr+1)^0,w,c
  3800   001A5C  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3801   001A5E                     
  3802                           ;drivers/scr/API_MRF24J40.c: 258:  SetCSPin(0);
  3803   001A5E  0E00               	movlw	0
  3804   001A60  EC12  F00F         	call	_SetCSPin
  3805   001A64                     
  3806                           ;drivers/scr/API_MRF24J40.c: 259:  Write2ByteSPIPort(reg_address);
  3807   001A64  C006  F004         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  3808   001A68  C007  F005         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3809   001A6C  EC04  F00F         	call	_Write2ByteSPIPort	;wreg free
  3810   001A70                     
  3811                           ;drivers/scr/API_MRF24J40.c: 260:  respuesta = ReadByteSPIPort();
  3812   001A70  EC25  F00F         	call	_ReadByteSPIPort	;wreg free
  3813   001A74  6E0A               	movwf	GetLongAddr@respuesta^0,c
  3814   001A76                     
  3815                           ;drivers/scr/API_MRF24J40.c: 261:  SetCSPin(1);
  3816   001A76  0E01               	movlw	1
  3817   001A78  EC12  F00F         	call	_SetCSPin
  3818   001A7C                     
  3819                           ;drivers/scr/API_MRF24J40.c: 262:  return respuesta;
  3820   001A7C  500A               	movf	GetLongAddr@respuesta^0,w,c
  3821   001A7E  0012               	return		;funcret
  3822   001A80                     __end_of_GetLongAddr:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _ReadByteSPIPort *****************
  3826 ;; Defined at:
  3827 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      unsigned char 
  3834 ;; Registers used:
  3835 ;;		wreg, status,2, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 2
  3848 ;; This function calls:
  3849 ;;		_SPIRead
  3850 ;; This function is called by:
  3851 ;;		_GetShortAddr
  3852 ;;		_GetLongAddr
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text19
  3857   001E4A                     __ptext19:
  3858                           	callstack 0
  3859   001E4A                     _ReadByteSPIPort:
  3860                           	callstack 26
  3861   001E4A                     
  3862                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  3863   001E4A  ECD7  F00E         	call	_SPIRead	;wreg free
  3864   001E4E  0012               	return		;funcret
  3865   001E50                     __end_of_ReadByteSPIPort:
  3866                           	callstack 0
  3867                           
  3868 ;; *************** function _SPIRead *****************
  3869 ;; Defined at:
  3870 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  3871 ;; Parameters:    Size  Location     Type
  3872 ;;		None
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;		None
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  1    wreg      unsigned char 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;Total ram usage:        0 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; Hardware stack levels required when called: 1
  3891 ;; This function calls:
  3892 ;;		Nothing
  3893 ;; This function is called by:
  3894 ;;		_ReadByteSPIPort
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text20
  3899   001DAE                     __ptext20:
  3900                           	callstack 0
  3901   001DAE                     _SPIRead:
  3902                           	callstack 26
  3903   001DAE                     
  3904                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  3905   001DAE  9EC6               	bcf	198,7,c	;volatile
  3906                           
  3907                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  3908   001DB0  6AC9               	clrf	201,c	;volatile
  3909   001DB2                     l211:
  3910   001DB2  A0C7               	btfss	199,0,c	;volatile
  3911   001DB4  EFDE  F00E         	goto	u521
  3912   001DB8  EFE0  F00E         	goto	u520
  3913   001DBC                     u521:
  3914   001DBC  EFD9  F00E         	goto	l211
  3915   001DC0                     u520:
  3916   001DC0                     
  3917                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  3918   001DC0  50C9               	movf	201,w,c	;volatile
  3919   001DC2  0012               	return		;funcret
  3920   001DC4                     __end_of_SPIRead:
  3921                           	callstack 0
  3922                           
  3923 ;; *************** function _DelayReset *****************
  3924 ;; Defined at:
  3925 ;;		line 68 in file "drivers/scr/API_delay.c"
  3926 ;; Parameters:    Size  Location     Type
  3927 ;;  delay           1    0[COMRAM] PTR struct .
  3928 ;;		 -> InicializoMRF24@delay_time_out(9), 
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3940 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;Total ram usage:        1 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 1
  3947 ;; This function calls:
  3948 ;;		Nothing
  3949 ;; This function is called by:
  3950 ;;		_InicializoMRF24
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           	psect	text21
  3955   001CFC                     __ptext21:
  3956                           	callstack 0
  3957   001CFC                     _DelayReset:
  3958                           	callstack 27
  3959   001CFC                     
  3960                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  3961   001CFC  5001               	movf	DelayReset@delay^0,w,c
  3962   001CFE  6ED9               	movwf	fsr2l,c
  3963   001D00  6ADA               	clrf	fsr2h,c
  3964   001D02  C037  FFDE         	movff	_timeStamp,postinc2
  3965   001D06  C038  FFDE         	movff	_timeStamp+1,postinc2
  3966   001D0A  C039  FFDE         	movff	_timeStamp+2,postinc2
  3967   001D0E  C03A  FFDE         	movff	_timeStamp+3,postinc2
  3968   001D12                     
  3969                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  3970   001D12  5001               	movf	DelayReset@delay^0,w,c
  3971   001D14  6ED9               	movwf	fsr2l,c
  3972   001D16  6ADA               	clrf	fsr2h,c
  3973   001D18  0E08               	movlw	8
  3974   001D1A  26D9               	addwf	fsr2l,f,c
  3975   001D1C  0E01               	movlw	1
  3976   001D1E  6EDF               	movwf	indf2,c
  3977   001D20  0012               	return		;funcret
  3978   001D22                     __end_of_DelayReset:
  3979                           	callstack 0
  3980                           
  3981 ;; *************** function _MRF24IsNewMsg *****************
  3982 ;; Defined at:
  3983 ;;		line 402 in file "drivers/scr/API_MRF24J40.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;		None
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      enum E3264
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4000 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4001 ;;Total ram usage:        0 bytes
  4002 ;; Hardware stack levels used: 1
  4003 ;; Hardware stack levels required when called: 2
  4004 ;; This function calls:
  4005 ;;		_IsMRF24Interrup
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text22
  4012   001BEA                     __ptext22:
  4013                           	callstack 0
  4014   001BEA                     _MRF24IsNewMsg:
  4015                           	callstack 28
  4016   001BEA                     
  4017                           ;drivers/scr/API_MRF24J40.c: 404:  if(estadoActual != INICIALIZACION_OK)
  4018   001BEA  503B               	movf	_estadoActual^0,w,c
  4019   001BEC  B4D8               	btfsc	status,2,c
  4020   001BEE  EFFB  F00D         	goto	u251
  4021   001BF2  EFFD  F00D         	goto	u250
  4022   001BF6                     u251:
  4023   001BF6  EF00  F00E         	goto	l1473
  4024   001BFA                     u250:
  4025   001BFA                     
  4026                           ;drivers/scr/API_MRF24J40.c: 405:   return ERROR_INESPERADO;
  4027   001BFA  0E09               	movlw	9
  4028   001BFC  EF0E  F00E         	goto	l161
  4029   001C00                     l1473:
  4030                           
  4031                           ;drivers/scr/API_MRF24J40.c: 407:  if(!IsMRF24Interrup())
  4032   001C00  ECEC  F00E         	call	_IsMRF24Interrup	;wreg free
  4033   001C04  0900               	iorlw	0
  4034   001C06  A4D8               	btfss	status,2,c
  4035   001C08  EF08  F00E         	goto	u261
  4036   001C0C  EF0A  F00E         	goto	u260
  4037   001C10                     u261:
  4038   001C10  EF0D  F00E         	goto	l1479
  4039   001C14                     u260:
  4040   001C14                     
  4041                           ;drivers/scr/API_MRF24J40.c: 408:   return MSG_PRESENTE;
  4042   001C14  0E03               	movlw	3
  4043   001C16  EF0E  F00E         	goto	l161
  4044   001C1A                     l1479:
  4045                           
  4046                           ;drivers/scr/API_MRF24J40.c: 409:  return MSG_NO_PRESENTE;
  4047   001C1A  0E04               	movlw	4
  4048   001C1C                     l161:
  4049   001C1C  0012               	return		;funcret
  4050   001C1E                     __end_of_MRF24IsNewMsg:
  4051                           	callstack 0
  4052                           
  4053 ;; *************** function _IsMRF24Interrup *****************
  4054 ;; Defined at:
  4055 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      _Bool 
  4062 ;; Registers used:
  4063 ;;		wreg
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used: 1
  4075 ;; Hardware stack levels required when called: 1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_MRF24IsNewMsg
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text23
  4084   001DD8                     __ptext23:
  4085                           	callstack 0
  4086   001DD8                     _IsMRF24Interrup:
  4087                           	callstack 28
  4088   001DD8                     
  4089                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  4090   001DD8  B081               	btfsc	129,0,c	;volatile
  4091   001DDA  EFF1  F00E         	goto	u111
  4092   001DDE  EFF4  F00E         	goto	u110
  4093   001DE2                     u111:
  4094   001DE2  0E01               	movlw	1
  4095   001DE4  EFF5  F00E         	goto	u116
  4096   001DE8                     u110:
  4097   001DE8  0E00               	movlw	0
  4098   001DEA                     u116:
  4099   001DEA  0012               	return		;funcret
  4100   001DEC                     __end_of_IsMRF24Interrup:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _MRF24GetMensajeEntrada *****************
  4104 ;; Defined at:
  4105 ;;		line 441 in file "drivers/scr/API_MRF24J40.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    0[COMRAM] PTR unsigned char 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;Total ram usage:        2 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 1
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_main
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text24
  4134   001E50                     __ptext24:
  4135                           	callstack 0
  4136   001E50                     _MRF24GetMensajeEntrada:
  4137                           	callstack 29
  4138   001E50                     
  4139                           ;drivers/scr/API_MRF24J40.c: 443:  return mrf24_data_in_s.buffer_entrada;
  4140   001E50  0E82               	movlw	_mrf24_data_in_s& (0+255)
  4141   001E52  0F06               	addlw	6
  4142   001E54  0012               	return		;funcret
  4143   001E56                     __end_of_MRF24GetMensajeEntrada:
  4144                           	callstack 0
  4145                           
  4146 ;; *************** function _MRF24BuscarDispositivos *****************
  4147 ;; Defined at:
  4148 ;;		line 456 in file "drivers/scr/API_MRF24J40.c"
  4149 ;; Parameters:    Size  Location     Type
  4150 ;;		None
  4151 ;; Auto vars:     Size  Location     Type
  4152 ;;  i               1   15[COMRAM] char 
  4153 ;;  pos_memoria     1   16[COMRAM] unsigned char 
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  1    wreg      enum E3264
  4156 ;; Registers used:
  4157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4164 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;Total ram usage:        7 bytes
  4168 ;; Hardware stack levels used: 1
  4169 ;; Hardware stack levels required when called: 5
  4170 ;; This function calls:
  4171 ;;		_SetLongAddr
  4172 ;;		_SetShortAddr
  4173 ;; This function is called by:
  4174 ;;		_main
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text25
  4179   00150C                     __ptext25:
  4180                           	callstack 0
  4181   00150C                     _MRF24BuscarDispositivos:
  4182                           	callstack 25
  4183   00150C                     
  4184                           ;drivers/scr/API_MRF24J40.c: 458:     static MRF24_discover_nearby_t algo[10];;drivers/s
      +                          cr/API_MRF24J40.c: 460:     if(estadoActual != INICIALIZACION_OK)
  4185   00150C  503B               	movf	_estadoActual^0,w,c
  4186   00150E  B4D8               	btfsc	status,2,c
  4187   001510  EF8C  F00A         	goto	u731
  4188   001514  EF8E  F00A         	goto	u730
  4189   001518                     u731:
  4190   001518  EF90  F00A         	goto	l2123
  4191   00151C                     u730:
  4192   00151C  EF1A  F00B         	goto	l181
  4193   001520                     l2123:
  4194                           
  4195                           ;drivers/scr/API_MRF24J40.c: 464:     mrf24_data_out_s.destinity_address = 1;
  4196   001520  0E00               	movlw	0
  4197   001522  6E34               	movwf	(_mrf24_data_out_s+3)^0,c
  4198   001524  0E01               	movlw	1
  4199   001526  6E33               	movwf	(_mrf24_data_out_s+2)^0,c
  4200   001528                     
  4201                           ;drivers/scr/API_MRF24J40.c: 467:  uint8_t pos_memoria = 0;
  4202   001528  6A11               	clrf	MRF24BuscarDispositivos@pos_memoria^0,c
  4203   00152A                     
  4204                           ;drivers/scr/API_MRF24J40.c: 468:  SetLongAddr(pos_memoria++, (0X08));
  4205   00152A  0E00               	movlw	0
  4206   00152C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4207   00152E  0E00               	movlw	0
  4208   001530  6E06               	movwf	SetLongAddr@reg_address^0,c
  4209   001532  0E08               	movlw	8
  4210   001534  6E08               	movwf	SetLongAddr@valor^0,c
  4211   001536  EC61  F00D         	call	_SetLongAddr	;wreg free
  4212   00153A  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4213   00153C                     
  4214                           ;drivers/scr/API_MRF24J40.c: 469:  SetLongAddr(pos_memoria++, mrf24_data_out_s.largo_men
      +                          saje + (0X08));
  4215   00153C  C011  F006         	movff	MRF24BuscarDispositivos@pos_memoria,SetLongAddr@reg_address
  4216   001540  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  4217   001542  5035               	movf	(_mrf24_data_out_s+4)^0,w,c
  4218   001544  0F08               	addlw	8
  4219   001546  6E08               	movwf	SetLongAddr@valor^0,c
  4220   001548  EC61  F00D         	call	_SetLongAddr	;wreg free
  4221   00154C  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4222   00154E                     
  4223                           ;drivers/scr/API_MRF24J40.c: 470:  SetLongAddr(pos_memoria++, (0X01)|(0X40));
  4224   00154E  C011  F006         	movff	MRF24BuscarDispositivos@pos_memoria,SetLongAddr@reg_address
  4225   001552  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  4226   001554  0E41               	movlw	65
  4227   001556  6E08               	movwf	SetLongAddr@valor^0,c
  4228   001558  EC61  F00D         	call	_SetLongAddr	;wreg free
  4229   00155C  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4230   00155E                     
  4231                           ;drivers/scr/API_MRF24J40.c: 471:  SetLongAddr(pos_memoria++, (0XC0)|(0X08));
  4232   00155E  C011  F006         	movff	MRF24BuscarDispositivos@pos_memoria,SetLongAddr@reg_address
  4233   001562  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  4234   001564  0EC8               	movlw	200
  4235   001566  6E08               	movwf	SetLongAddr@valor^0,c
  4236   001568  EC61  F00D         	call	_SetLongAddr	;wreg free
  4237   00156C  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4238   00156E                     
  4239                           ;drivers/scr/API_MRF24J40.c: 472:  SetLongAddr(pos_memoria++, mrf24_data_config_s.sequen
      +                          ce_number++);
  4240   00156E  C011  F006         	movff	MRF24BuscarDispositivos@pos_memoria,SetLongAddr@reg_address
  4241   001572  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  4242   001574  EE20  F062         	lfsr	2,_mrf24_data_config_s+2
  4243   001578  50DF               	movf	indf2,w,c
  4244   00157A  2ADF               	incf	indf2,f,c
  4245   00157C  6E08               	movwf	SetLongAddr@valor^0,c
  4246   00157E  EC61  F00D         	call	_SetLongAddr	;wreg free
  4247   001582  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4248   001584                     
  4249                           ;drivers/scr/API_MRF24J40.c: 473:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out_s
      +                          .destinity_panid);
  4250   001584  C011  F006         	movff	MRF24BuscarDispositivos@pos_memoria,SetLongAddr@reg_address
  4251   001588  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  4252   00158A  C031  F008         	movff	_mrf24_data_out_s,SetLongAddr@valor
  4253   00158E  EC61  F00D         	call	_SetLongAddr	;wreg free
  4254   001592  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4255   001594                     
  4256                           ;drivers/scr/API_MRF24J40.c: 474:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out_
      +                          s.destinity_panid >> (0X08)));
  4257   001594  C011  F006         	movff	MRF24BuscarDispositivos@pos_memoria,SetLongAddr@reg_address
  4258   001598  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  4259   00159A  5032               	movf	(_mrf24_data_out_s+1)^0,w,c
  4260   00159C  6E08               	movwf	SetLongAddr@valor^0,c
  4261   00159E  EC61  F00D         	call	_SetLongAddr	;wreg free
  4262   0015A2  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4263   0015A4                     
  4264                           ;drivers/scr/API_MRF24J40.c: 475:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out_s
      +                          .destinity_address);
  4265   0015A4  C011  F006         	movff	MRF24BuscarDispositivos@pos_memoria,SetLongAddr@reg_address
  4266   0015A8  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  4267   0015AA  C033  F008         	movff	_mrf24_data_out_s+2,SetLongAddr@valor
  4268   0015AE  EC61  F00D         	call	_SetLongAddr	;wreg free
  4269   0015B2  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4270   0015B4                     
  4271                           ;drivers/scr/API_MRF24J40.c: 476:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out_
      +                          s.destinity_address >> (0X08)));
  4272   0015B4  C011  F006         	movff	MRF24BuscarDispositivos@pos_memoria,SetLongAddr@reg_address
  4273   0015B8  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  4274   0015BA  5034               	movf	(_mrf24_data_out_s+3)^0,w,c
  4275   0015BC  6E08               	movwf	SetLongAddr@valor^0,c
  4276   0015BE  EC61  F00D         	call	_SetLongAddr	;wreg free
  4277   0015C2  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4278   0015C4                     
  4279                           ;drivers/scr/API_MRF24J40.c: 478:  for(int8_t i = 0; i < mrf24_data_out_s.largo_mensaje;
      +                           i++) {
  4280   0015C4  6A10               	clrf	MRF24BuscarDispositivos@i^0,c
  4281   0015C6  EFF6  F00A         	goto	l2171
  4282   0015CA                     l2165:
  4283                           
  4284                           ;drivers/scr/API_MRF24J40.c: 480:   SetLongAddr(pos_memoria++, mrf24_data_out_s.buffer_s
      +                          alida[i]);
  4285   0015CA  C011  F006         	movff	MRF24BuscarDispositivos@pos_memoria,SetLongAddr@reg_address
  4286   0015CE  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  4287   0015D0  5036               	movf	(_mrf24_data_out_s+5)^0,w,c
  4288   0015D2  2410               	addwf	MRF24BuscarDispositivos@i^0,w,c
  4289   0015D4  6E0B               	movwf	??_MRF24BuscarDispositivos^0,c
  4290   0015D6  C00B  FFF6         	movff	??_MRF24BuscarDispositivos,tblptrl
  4291   0015DA                     	if	1	;There is more than 1 active tblptr byte
  4292   0015DA  0E10               	movlw	high __smallconst
  4293   0015DC  6EF7               	movwf	tblptrh,c
  4294   0015DE                     	endif
  4295   0015DE                     	if	0	;tblptru may be non-zero
  4296   0015DE                     	endif
  4297   0015DE                     	if	0	;tblptru may be non-zero
  4298   0015DE                     	endif
  4299   0015DE  0008               	tblrd		*
  4300   0015E0  CFF5 F008          	movff	tablat,SetLongAddr@valor
  4301   0015E4  EC61  F00D         	call	_SetLongAddr	;wreg free
  4302   0015E8  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4303   0015EA                     
  4304                           ;drivers/scr/API_MRF24J40.c: 481:  }
  4305   0015EA  2A10               	incf	MRF24BuscarDispositivos@i^0,f,c
  4306   0015EC                     l2171:
  4307   0015EC  5035               	movf	(_mrf24_data_out_s+4)^0,w,c
  4308   0015EE  6E0B               	movwf	??_MRF24BuscarDispositivos^0,c
  4309   0015F0  6A0C               	clrf	(??_MRF24BuscarDispositivos+1)^0,c
  4310   0015F2  C010  F00D         	movff	MRF24BuscarDispositivos@i,??_MRF24BuscarDispositivos+2
  4311   0015F6  6A0E               	clrf	(??_MRF24BuscarDispositivos+3)^0,c
  4312   0015F8  BE0D               	btfsc	(??_MRF24BuscarDispositivos+2)^0,7,c
  4313   0015FA  060E               	decf	(??_MRF24BuscarDispositivos+3)^0,f,c
  4314   0015FC  500B               	movf	??_MRF24BuscarDispositivos^0,w,c
  4315   0015FE  5C0D               	subwf	(??_MRF24BuscarDispositivos+2)^0,w,c
  4316   001600  500E               	movf	(??_MRF24BuscarDispositivos+3)^0,w,c
  4317   001602  0A80               	xorlw	128
  4318   001604  6E0F               	movwf	(??_MRF24BuscarDispositivos+4)^0,c
  4319   001606  500C               	movf	(??_MRF24BuscarDispositivos+1)^0,w,c
  4320   001608  0A80               	xorlw	128
  4321   00160A  580F               	subwfb	(??_MRF24BuscarDispositivos+4)^0,w,c
  4322   00160C  A0D8               	btfss	status,0,c
  4323   00160E  EF0B  F00B         	goto	u741
  4324   001612  EF0D  F00B         	goto	u740
  4325   001616                     u741:
  4326   001616  EFE5  F00A         	goto	l2165
  4327   00161A                     u740:
  4328   00161A                     
  4329                           ;drivers/scr/API_MRF24J40.c: 482:  SetLongAddr(pos_memoria++, (0X00));
  4330   00161A  C011  F006         	movff	MRF24BuscarDispositivos@pos_memoria,SetLongAddr@reg_address
  4331   00161E  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  4332   001620  0E00               	movlw	0
  4333   001622  6E08               	movwf	SetLongAddr@valor^0,c
  4334   001624  EC61  F00D         	call	_SetLongAddr	;wreg free
  4335   001628  2A11               	incf	MRF24BuscarDispositivos@pos_memoria^0,f,c
  4336   00162A                     
  4337                           ;drivers/scr/API_MRF24J40.c: 483:  SetShortAddr((0x1B), (0X04) | (0X01));
  4338   00162A  0E05               	movlw	5
  4339   00162C  6E03               	movwf	SetShortAddr@valor^0,c
  4340   00162E  0E1B               	movlw	27
  4341   001630  EC91  F00E         	call	_SetShortAddr
  4342   001634                     l181:
  4343   001634  0012               	return		;funcret
  4344   001636                     __end_of_MRF24BuscarDispositivos:
  4345                           	callstack 0
  4346                           
  4347 ;; *************** function _SetShortAddr *****************
  4348 ;; Defined at:
  4349 ;;		line 193 in file "drivers/scr/API_MRF24J40.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  reg_address     1    wreg     unsigned char 
  4352 ;;  valor           1    2[COMRAM] unsigned char 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;  reg_address     1    3[COMRAM] unsigned char 
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      void 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, status,0, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4364 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;Total ram usage:        2 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; Hardware stack levels required when called: 3
  4371 ;; This function calls:
  4372 ;;		_SetCSPin
  4373 ;;		_WriteByteSPIPort
  4374 ;; This function is called by:
  4375 ;;		_InicializoMRF24
  4376 ;;		_SetChannel
  4377 ;;		_SetDeviceAddress
  4378 ;;		_SetDeviceMACAddress
  4379 ;;		_MRF24TransmitirDato
  4380 ;;		_MRF24ReciboPaquete
  4381 ;;		_MRF24BuscarDispositivos
  4382 ;; This function uses a non-reentrant model
  4383 ;;
  4384                           
  4385                           	psect	text26
  4386   001D22                     __ptext26:
  4387                           	callstack 0
  4388   001D22                     _SetShortAddr:
  4389                           	callstack 26
  4390                           
  4391                           ;incstack = 0
  4392                           ;SetShortAddr@reg_address stored from wreg
  4393   001D22  6E04               	movwf	SetShortAddr@reg_address^0,c
  4394   001D24                     
  4395                           ;drivers/scr/API_MRF24J40.c: 198:  reg_address = (uint8_t) (reg_address << (0X01)) | (0x
      +                          01);
  4396   001D24  80D8               	bsf	status,0,c
  4397   001D26  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  4398   001D28                     
  4399                           ;drivers/scr/API_MRF24J40.c: 199:  SetCSPin(0);
  4400   001D28  0E00               	movlw	0
  4401   001D2A  EC12  F00F         	call	_SetCSPin
  4402   001D2E                     
  4403                           ;drivers/scr/API_MRF24J40.c: 200:  WriteByteSPIPort(reg_address);
  4404   001D2E  5004               	movf	SetShortAddr@reg_address^0,w,c
  4405   001D30  EC20  F00F         	call	_WriteByteSPIPort
  4406   001D34                     
  4407                           ;drivers/scr/API_MRF24J40.c: 201:  WriteByteSPIPort(valor);
  4408   001D34  5003               	movf	SetShortAddr@valor^0,w,c
  4409   001D36  EC20  F00F         	call	_WriteByteSPIPort
  4410   001D3A                     
  4411                           ;drivers/scr/API_MRF24J40.c: 202:  SetCSPin(1);
  4412   001D3A  0E01               	movlw	1
  4413   001D3C  EC12  F00F         	call	_SetCSPin
  4414   001D40  0012               	return		;funcret
  4415   001D42                     __end_of_SetShortAddr:
  4416                           	callstack 0
  4417                           
  4418 ;; *************** function _SetLongAddr *****************
  4419 ;; Defined at:
  4420 ;;		line 232 in file "drivers/scr/API_MRF24J40.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  reg_address     2    5[COMRAM] unsigned short 
  4423 ;;  valor           1    7[COMRAM] unsigned char 
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, status,2, status,0, cstack
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4435 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;Total ram usage:        5 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; Hardware stack levels required when called: 4
  4442 ;; This function calls:
  4443 ;;		_SetCSPin
  4444 ;;		_Write2ByteSPIPort
  4445 ;;		_WriteByteSPIPort
  4446 ;; This function is called by:
  4447 ;;		_InicializoMRF24
  4448 ;;		_SetChannel
  4449 ;;		_MRF24TransmitirDato
  4450 ;;		_MRF24ReciboPaquete
  4451 ;;		_MRF24BuscarDispositivos
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           	psect	text27
  4456   001AC2                     __ptext27:
  4457                           	callstack 0
  4458   001AC2                     _SetLongAddr:
  4459                           	callstack 25
  4460   001AC2                     
  4461                           ;drivers/scr/API_MRF24J40.c: 237:  reg_address = (reg_address << (0X05)) | (0X8010);
  4462   001AC2  C006  F009         	movff	SetLongAddr@reg_address,??_SetLongAddr
  4463   001AC6  C007  F00A         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  4464   001ACA  0E05               	movlw	5
  4465   001ACC                     u535:
  4466   001ACC  90D8               	bcf	status,0,c
  4467   001ACE  3609               	rlcf	??_SetLongAddr^0,f,c
  4468   001AD0  360A               	rlcf	(??_SetLongAddr+1)^0,f,c
  4469   001AD2  2EE8               	decfsz	wreg,f,c
  4470   001AD4  EF66  F00D         	goto	u535
  4471   001AD8  0E10               	movlw	16
  4472   001ADA  1009               	iorwf	??_SetLongAddr^0,w,c
  4473   001ADC  6E06               	movwf	SetLongAddr@reg_address^0,c
  4474   001ADE  0E80               	movlw	128
  4475   001AE0  100A               	iorwf	(??_SetLongAddr+1)^0,w,c
  4476   001AE2  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4477   001AE4                     
  4478                           ;drivers/scr/API_MRF24J40.c: 238:  SetCSPin(0);
  4479   001AE4  0E00               	movlw	0
  4480   001AE6  EC12  F00F         	call	_SetCSPin
  4481   001AEA                     
  4482                           ;drivers/scr/API_MRF24J40.c: 239:  Write2ByteSPIPort(reg_address);
  4483   001AEA  C006  F004         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  4484   001AEE  C007  F005         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  4485   001AF2  EC04  F00F         	call	_Write2ByteSPIPort	;wreg free
  4486   001AF6                     
  4487                           ;drivers/scr/API_MRF24J40.c: 240:  WriteByteSPIPort(valor);
  4488   001AF6  5008               	movf	SetLongAddr@valor^0,w,c
  4489   001AF8  EC20  F00F         	call	_WriteByteSPIPort
  4490   001AFC                     
  4491                           ;drivers/scr/API_MRF24J40.c: 241:  SetCSPin(1);
  4492   001AFC  0E01               	movlw	1
  4493   001AFE  EC12  F00F         	call	_SetCSPin
  4494   001B02  0012               	return		;funcret
  4495   001B04                     __end_of_SetLongAddr:
  4496                           	callstack 0
  4497                           
  4498 ;; *************** function _WriteByteSPIPort *****************
  4499 ;; Defined at:
  4500 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  4501 ;; Parameters:    Size  Location     Type
  4502 ;;  dato            1    wreg     unsigned char 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  dato            1    1[COMRAM] unsigned char 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  1    wreg      void 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, cstack
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4515 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4517 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4518 ;;Total ram usage:        1 bytes
  4519 ;; Hardware stack levels used: 1
  4520 ;; Hardware stack levels required when called: 2
  4521 ;; This function calls:
  4522 ;;		_SPIWriteByte
  4523 ;; This function is called by:
  4524 ;;		_SetShortAddr
  4525 ;;		_GetShortAddr
  4526 ;;		_SetLongAddr
  4527 ;; This function uses a non-reentrant model
  4528 ;;
  4529                           
  4530                           	psect	text28
  4531   001E40                     __ptext28:
  4532                           	callstack 0
  4533   001E40                     _WriteByteSPIPort:
  4534                           	callstack 26
  4535                           
  4536                           ;incstack = 0
  4537                           ;WriteByteSPIPort@dato stored from wreg
  4538   001E40  6E02               	movwf	WriteByteSPIPort@dato^0,c
  4539   001E42                     
  4540                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  4541   001E42  5002               	movf	WriteByteSPIPort@dato^0,w,c
  4542   001E44  ECBF  F00E         	call	_SPIWriteByte
  4543   001E48  0012               	return		;funcret
  4544   001E4A                     __end_of_WriteByteSPIPort:
  4545                           	callstack 0
  4546                           
  4547 ;; *************** function _Write2ByteSPIPort *****************
  4548 ;; Defined at:
  4549 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  dato            2    3[COMRAM] unsigned short 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;		None
  4554 ;; Return value:  Size  Location     Type
  4555 ;;                  1    wreg      void 
  4556 ;; Registers used:
  4557 ;;		wreg, status,2, cstack
  4558 ;; Tracked objects:
  4559 ;;		On entry : 0/0
  4560 ;;		On exit  : 0/0
  4561 ;;		Unchanged: 0/0
  4562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;Total ram usage:        2 bytes
  4568 ;; Hardware stack levels used: 1
  4569 ;; Hardware stack levels required when called: 3
  4570 ;; This function calls:
  4571 ;;		_SPIWrite2Byte
  4572 ;; This function is called by:
  4573 ;;		_SetLongAddr
  4574 ;;		_GetLongAddr
  4575 ;; This function uses a non-reentrant model
  4576 ;;
  4577                           
  4578                           	psect	text29
  4579   001E08                     __ptext29:
  4580                           	callstack 0
  4581   001E08                     _Write2ByteSPIPort:
  4582                           	callstack 25
  4583   001E08                     
  4584                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  4585   001E08  C004  F002         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  4586   001E0C  C005  F003         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  4587   001E10  EC0B  F00F         	call	_SPIWrite2Byte	;wreg free
  4588   001E14  0012               	return		;funcret
  4589   001E16                     __end_of_Write2ByteSPIPort:
  4590                           	callstack 0
  4591                           
  4592 ;; *************** function _SPIWrite2Byte *****************
  4593 ;; Defined at:
  4594 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  dato            2    1[COMRAM] unsigned short 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg, status,2, cstack
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;Total ram usage:        2 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 2
  4615 ;; This function calls:
  4616 ;;		_SPIWriteByte
  4617 ;; This function is called by:
  4618 ;;		_Write2ByteSPIPort
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           	psect	text30
  4623   001E16                     __ptext30:
  4624                           	callstack 0
  4625   001E16                     _SPIWrite2Byte:
  4626                           	callstack 25
  4627   001E16                     
  4628                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  4629   001E16  5003               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  4630   001E18  ECBF  F00E         	call	_SPIWriteByte
  4631                           
  4632                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  4633   001E1C  5002               	movf	SPIWrite2Byte@dato^0,w,c
  4634   001E1E  ECBF  F00E         	call	_SPIWriteByte
  4635   001E22  0012               	return		;funcret
  4636   001E24                     __end_of_SPIWrite2Byte:
  4637                           	callstack 0
  4638                           
  4639 ;; *************** function _SPIWriteByte *****************
  4640 ;; Defined at:
  4641 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;  dato            1    wreg     unsigned char 
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;  dato            1    0[COMRAM] unsigned char 
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      void 
  4648 ;; Registers used:
  4649 ;;		wreg
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;Total ram usage:        1 bytes
  4660 ;; Hardware stack levels used: 1
  4661 ;; Hardware stack levels required when called: 1
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_WriteByteSPIPort
  4666 ;;		_SPIWrite2Byte
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text31
  4671   001D7E                     __ptext31:
  4672                           	callstack 0
  4673   001D7E                     _SPIWriteByte:
  4674                           	callstack 26
  4675                           
  4676                           ;incstack = 0
  4677                           ;SPIWriteByte@dato stored from wreg
  4678   001D7E  6E01               	movwf	SPIWriteByte@dato^0,c
  4679   001D80                     
  4680                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  4681   001D80  969E               	bcf	158,3,c	;volatile
  4682   001D82                     
  4683                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  4684   001D82  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  4685   001D86                     l202:
  4686   001D86  A69E               	btfss	158,3,c	;volatile
  4687   001D88  EFC8  F00E         	goto	u501
  4688   001D8C  EFCA  F00E         	goto	u500
  4689   001D90                     u501:
  4690   001D90  EFC3  F00E         	goto	l202
  4691   001D94                     u500:
  4692   001D94  0012               	return		;funcret
  4693   001D96                     __end_of_SPIWriteByte:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function _SetCSPin *****************
  4697 ;; Defined at:
  4698 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  estado          1    wreg     _Bool 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  estado          1    0[COMRAM] _Bool 
  4703 ;; Return value:  Size  Location     Type
  4704 ;;                  1    wreg      void 
  4705 ;; Registers used:
  4706 ;;		wreg
  4707 ;; Tracked objects:
  4708 ;;		On entry : 0/0
  4709 ;;		On exit  : 0/0
  4710 ;;		Unchanged: 0/0
  4711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4716 ;;Total ram usage:        1 bytes
  4717 ;; Hardware stack levels used: 1
  4718 ;; Hardware stack levels required when called: 1
  4719 ;; This function calls:
  4720 ;;		Nothing
  4721 ;; This function is called by:
  4722 ;;		_InicializoPines
  4723 ;;		_SetShortAddr
  4724 ;;		_GetShortAddr
  4725 ;;		_SetLongAddr
  4726 ;;		_GetLongAddr
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730                           	psect	text32
  4731   001E24                     __ptext32:
  4732                           	callstack 0
  4733   001E24                     _SetCSPin:
  4734                           	callstack 27
  4735                           
  4736                           ;incstack = 0
  4737                           ;SetCSPin@estado stored from wreg
  4738   001E24  6E01               	movwf	SetCSPin@estado^0,c
  4739   001E26                     
  4740                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  4741   001E26  B001               	btfsc	SetCSPin@estado^0,0,c
  4742   001E28  D002               	bra	u515
  4743   001E2A  9C8B               	bcf	139,6,c	;volatile
  4744   001E2C  D001               	bra	u516
  4745   001E2E                     u515:
  4746   001E2E  8C8B               	bsf	139,6,c	;volatile
  4747   001E30                     u516:
  4748   001E30  0012               	return		;funcret
  4749   001E32                     __end_of_SetCSPin:
  4750                           	callstack 0
  4751                           
  4752 ;; *************** function _DebounceFSMUpdate *****************
  4753 ;; Defined at:
  4754 ;;		line 34 in file "drivers/scr/API_debounce.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  antirrebote_    1   14[COMRAM] PTR struct .
  4757 ;;		 -> main@boton1(11), 
  4758 ;;  estado_pin      1   15[COMRAM] _Bool 
  4759 ;; Auto vars:     Size  Location     Type
  4760 ;;		None
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      enum E2763
  4763 ;; Registers used:
  4764 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4770 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;Total ram usage:        4 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 3
  4777 ;; This function calls:
  4778 ;;		_DebounceFSMInit
  4779 ;;		_DelayRead
  4780 ;; This function is called by:
  4781 ;;		_main
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           	psect	text33
  4786   0013D0                     __ptext33:
  4787                           	callstack 0
  4788   0013D0                     _DebounceFSMUpdate:
  4789                           	callstack 27
  4790   0013D0                     
  4791                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  4792   0013D0  EF62  F00A         	goto	l2235
  4793   0013D4                     l2183:
  4794                           
  4795                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  4796   0013D4  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4797   0013D6  A4D8               	btfss	status,2,c
  4798   0013D8  EFF0  F009         	goto	u751
  4799   0013DC  EFF2  F009         	goto	u750
  4800   0013E0                     u751:
  4801   0013E0  EF84  F00A         	goto	l2237
  4802   0013E4                     u750:
  4803   0013E4                     
  4804                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  4805   0013E4  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4806   0013E6  6ED9               	movwf	fsr2l,c
  4807   0013E8  6ADA               	clrf	fsr2h,c
  4808   0013EA  0E01               	movlw	1
  4809   0013EC  26D9               	addwf	fsr2l,f,c
  4810   0013EE  0E01               	movlw	1
  4811   0013F0  6EDF               	movwf	indf2,c
  4812   0013F2  EF84  F00A         	goto	l2237
  4813   0013F6                     l2187:
  4814                           
  4815                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4816   0013F6  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4817   0013F8  0F02               	addlw	2
  4818   0013FA  6E02               	movwf	DelayRead@delay^0,c
  4819   0013FC  EC11  F00C         	call	_DelayRead	;wreg free
  4820   001400  0900               	iorlw	0
  4821   001402  B4D8               	btfsc	status,2,c
  4822   001404  EF06  F00A         	goto	u761
  4823   001408  EF08  F00A         	goto	u760
  4824   00140C                     u761:
  4825   00140C  EF84  F00A         	goto	l2237
  4826   001410                     u760:
  4827   001410                     
  4828                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  4829   001410  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4830   001412  A4D8               	btfss	status,2,c
  4831   001414  EF0E  F00A         	goto	u771
  4832   001418  EF10  F00A         	goto	u770
  4833   00141C                     u771:
  4834   00141C  EF1A  F00A         	goto	l2199
  4835   001420                     u770:
  4836   001420                     
  4837                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4838   001420  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4839   001422  6ED9               	movwf	fsr2l,c
  4840   001424  6ADA               	clrf	fsr2h,c
  4841   001426  0E01               	movlw	1
  4842   001428  26D9               	addwf	fsr2l,f,c
  4843   00142A  0E02               	movlw	2
  4844   00142C  6EDF               	movwf	indf2,c
  4845   00142E                     
  4846                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  4847   00142E  0E01               	movlw	1
  4848   001430  EF85  F00A         	goto	l253
  4849   001434                     l2199:
  4850                           
  4851                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4852   001434  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4853   001436  6ED9               	movwf	fsr2l,c
  4854   001438  6ADA               	clrf	fsr2h,c
  4855   00143A  0E01               	movlw	1
  4856   00143C  26D9               	addwf	fsr2l,f,c
  4857   00143E  6ADF               	clrf	indf2,c
  4858   001440                     l2201:
  4859                           
  4860                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  4861   001440  0E04               	movlw	4
  4862   001442  EF85  F00A         	goto	l253
  4863   001446                     l2205:
  4864                           
  4865                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4866   001446  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4867   001448  0F02               	addlw	2
  4868   00144A  6E02               	movwf	DelayRead@delay^0,c
  4869   00144C  EC11  F00C         	call	_DelayRead	;wreg free
  4870   001450  0900               	iorlw	0
  4871   001452  B4D8               	btfsc	status,2,c
  4872   001454  EF2E  F00A         	goto	u781
  4873   001458  EF30  F00A         	goto	u780
  4874   00145C                     u781:
  4875   00145C  EF84  F00A         	goto	l2237
  4876   001460                     u780:
  4877   001460                     
  4878                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  4879   001460  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4880   001462  B4D8               	btfsc	status,2,c
  4881   001464  EF36  F00A         	goto	u791
  4882   001468  EF38  F00A         	goto	u790
  4883   00146C                     u791:
  4884   00146C  EF41  F00A         	goto	l2217
  4885   001470                     u790:
  4886   001470                     
  4887                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4888   001470  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4889   001472  6ED9               	movwf	fsr2l,c
  4890   001474  6ADA               	clrf	fsr2h,c
  4891   001476  0E01               	movlw	1
  4892   001478  26D9               	addwf	fsr2l,f,c
  4893   00147A  6ADF               	clrf	indf2,c
  4894   00147C                     
  4895                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  4896   00147C  0E02               	movlw	2
  4897   00147E  EF85  F00A         	goto	l253
  4898   001482                     l2217:
  4899                           
  4900                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4901   001482  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4902   001484  6ED9               	movwf	fsr2l,c
  4903   001486  6ADA               	clrf	fsr2h,c
  4904   001488  0E01               	movlw	1
  4905   00148A  26D9               	addwf	fsr2l,f,c
  4906   00148C  0E02               	movlw	2
  4907   00148E  6EDF               	movwf	indf2,c
  4908   001490  EF20  F00A         	goto	l2201
  4909   001494                     l2223:
  4910                           
  4911                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  4912   001494  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4913   001496  B4D8               	btfsc	status,2,c
  4914   001498  EF50  F00A         	goto	u801
  4915   00149C  EF52  F00A         	goto	u800
  4916   0014A0                     u801:
  4917   0014A0  EF84  F00A         	goto	l2237
  4918   0014A4                     u800:
  4919   0014A4                     
  4920                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  4921   0014A4  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4922   0014A6  6ED9               	movwf	fsr2l,c
  4923   0014A8  6ADA               	clrf	fsr2h,c
  4924   0014AA  0E01               	movlw	1
  4925   0014AC  26D9               	addwf	fsr2l,f,c
  4926   0014AE  0E03               	movlw	3
  4927   0014B0  6EDF               	movwf	indf2,c
  4928   0014B2  EF84  F00A         	goto	l2237
  4929   0014B6                     l2227:
  4930                           
  4931                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  4932   0014B6  C00F  F006         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  4933   0014BA  EC28  F00E         	call	_DebounceFSMInit	;wreg free
  4934   0014BE                     
  4935                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  4936   0014BE  0E00               	movlw	0
  4937   0014C0  EF85  F00A         	goto	l253
  4938   0014C4                     l2235:
  4939   0014C4  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4940   0014C6  6ED9               	movwf	fsr2l,c
  4941   0014C8  6ADA               	clrf	fsr2h,c
  4942   0014CA  0E01               	movlw	1
  4943   0014CC  26D9               	addwf	fsr2l,f,c
  4944   0014CE  50DF               	movf	indf2,w,c
  4945   0014D0  6E11               	movwf	??_DebounceFSMUpdate^0,c
  4946   0014D2  6A12               	clrf	(??_DebounceFSMUpdate+1)^0,c
  4947                           
  4948                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4949                           ; Switch size 1, requested type "simple"
  4950                           ; Number of cases is 1, Range of values is 0 to 0
  4951                           ; switch strategies available:
  4952                           ; Name         Instructions Cycles
  4953                           ; simple_byte            4     3 (average)
  4954                           ;	Chosen strategy is simple_byte
  4955   0014D4  5012               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  4956   0014D6  0A00               	xorlw	0	; case 0
  4957   0014D8  B4D8               	btfsc	status,2,c
  4958   0014DA  EF71  F00A         	goto	l2375
  4959   0014DE  EF5B  F00A         	goto	l2227
  4960   0014E2                     l2375:
  4961                           
  4962                           ; Switch size 1, requested type "simple"
  4963                           ; Number of cases is 4, Range of values is 0 to 3
  4964                           ; switch strategies available:
  4965                           ; Name         Instructions Cycles
  4966                           ; simple_byte           13     7 (average)
  4967                           ;	Chosen strategy is simple_byte
  4968   0014E2  5011               	movf	??_DebounceFSMUpdate^0,w,c
  4969   0014E4  0A00               	xorlw	0	; case 0
  4970   0014E6  B4D8               	btfsc	status,2,c
  4971   0014E8  EFEA  F009         	goto	l2183
  4972   0014EC  0A01               	xorlw	1	; case 1
  4973   0014EE  B4D8               	btfsc	status,2,c
  4974   0014F0  EFFB  F009         	goto	l2187
  4975   0014F4  0A03               	xorlw	3	; case 2
  4976   0014F6  B4D8               	btfsc	status,2,c
  4977   0014F8  EF4A  F00A         	goto	l2223
  4978   0014FC  0A01               	xorlw	1	; case 3
  4979   0014FE  B4D8               	btfsc	status,2,c
  4980   001500  EF23  F00A         	goto	l2205
  4981   001504  EF5B  F00A         	goto	l2227
  4982   001508                     l2237:
  4983                           
  4984                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  4985   001508  0E03               	movlw	3
  4986   00150A                     l253:
  4987   00150A  0012               	return		;funcret
  4988   00150C                     __end_of_DebounceFSMUpdate:
  4989                           	callstack 0
  4990                           
  4991 ;; *************** function _DelayRead *****************
  4992 ;; Defined at:
  4993 ;;		line 34 in file "drivers/scr/API_delay.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  delay           1    1[COMRAM] PTR struct .
  4996 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;		None
  4999 ;; Return value:  Size  Location     Type
  5000 ;;                  1    wreg      _Bool 
  5001 ;; Registers used:
  5002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5003 ;; Tracked objects:
  5004 ;;		On entry : 0/0
  5005 ;;		On exit  : 0/0
  5006 ;;		Unchanged: 0/0
  5007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5008 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;Total ram usage:       13 bytes
  5013 ;; Hardware stack levels used: 1
  5014 ;; Hardware stack levels required when called: 2
  5015 ;; This function calls:
  5016 ;;		_DelayIsRunning
  5017 ;; This function is called by:
  5018 ;;		_InicializoMRF24
  5019 ;;		_DebounceFSMUpdate
  5020 ;;		_main
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text34
  5025   001822                     __ptext34:
  5026                           	callstack 0
  5027   001822                     _DelayRead:
  5028                           	callstack 26
  5029   001822                     
  5030                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  5031   001822  C002  F001         	movff	DelayRead@delay,DelayIsRunning@delay
  5032   001826  EC19  F00F         	call	_DelayIsRunning	;wreg free
  5033   00182A  0900               	iorlw	0
  5034   00182C  A4D8               	btfss	status,2,c
  5035   00182E  EF1B  F00C         	goto	u541
  5036   001832  EF1D  F00C         	goto	u540
  5037   001836                     u541:
  5038   001836  EF31  F00C         	goto	l1847
  5039   00183A                     u540:
  5040   00183A                     
  5041                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  5042   00183A  5002               	movf	DelayRead@delay^0,w,c
  5043   00183C  6ED9               	movwf	fsr2l,c
  5044   00183E  6ADA               	clrf	fsr2h,c
  5045   001840  C037  FFDE         	movff	_timeStamp,postinc2
  5046   001844  C038  FFDE         	movff	_timeStamp+1,postinc2
  5047   001848  C039  FFDE         	movff	_timeStamp+2,postinc2
  5048   00184C  C03A  FFDE         	movff	_timeStamp+3,postinc2
  5049   001850                     
  5050                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  5051   001850  5002               	movf	DelayRead@delay^0,w,c
  5052   001852  6ED9               	movwf	fsr2l,c
  5053   001854  6ADA               	clrf	fsr2h,c
  5054   001856  0E08               	movlw	8
  5055   001858  26D9               	addwf	fsr2l,f,c
  5056   00185A  0E01               	movlw	1
  5057   00185C  6EDF               	movwf	indf2,c
  5058                           
  5059                           ;drivers/scr/API_delay.c: 40:  } else {
  5060   00185E  EF65  F00C         	goto	l1855
  5061   001862                     l1847:
  5062                           
  5063                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  5064   001862  5002               	movf	DelayRead@delay^0,w,c
  5065   001864  6ED9               	movwf	fsr2l,c
  5066   001866  6ADA               	clrf	fsr2h,c
  5067   001868  0E04               	movlw	4
  5068   00186A  26D9               	addwf	fsr2l,f,c
  5069   00186C  5002               	movf	DelayRead@delay^0,w,c
  5070   00186E  6EE1               	movwf	fsr1l,c
  5071   001870  6AE2               	clrf	fsr1h,c
  5072   001872  CFE6 F007          	movff	postinc1,??_DelayRead+4
  5073   001876  CFE6 F008          	movff	postinc1,??_DelayRead+5
  5074   00187A  CFE6 F009          	movff	postinc1,??_DelayRead+6
  5075   00187E  CFE6 F00A          	movff	postinc1,??_DelayRead+7
  5076   001882  5007               	movf	(??_DelayRead+4)^0,w,c
  5077   001884  5C37               	subwf	_timeStamp^0,w,c
  5078   001886  6E0B               	movwf	(??_DelayRead+8)^0,c
  5079   001888  5008               	movf	(??_DelayRead+5)^0,w,c
  5080   00188A  5838               	subwfb	(_timeStamp+1)^0,w,c
  5081   00188C  6E0C               	movwf	(??_DelayRead+9)^0,c
  5082   00188E  5009               	movf	(??_DelayRead+6)^0,w,c
  5083   001890  5839               	subwfb	(_timeStamp+2)^0,w,c
  5084   001892  6E0D               	movwf	(??_DelayRead+10)^0,c
  5085   001894  500A               	movf	(??_DelayRead+7)^0,w,c
  5086   001896  583A               	subwfb	(_timeStamp+3)^0,w,c
  5087   001898  6E0E               	movwf	(??_DelayRead+11)^0,c
  5088   00189A  50DE               	movf	postinc2,w,c
  5089   00189C  5C0B               	subwf	(??_DelayRead+8)^0,w,c
  5090   00189E  50DE               	movf	postinc2,w,c
  5091   0018A0  580C               	subwfb	(??_DelayRead+9)^0,w,c
  5092   0018A2  50DE               	movf	postinc2,w,c
  5093   0018A4  580D               	subwfb	(??_DelayRead+10)^0,w,c
  5094   0018A6  50DE               	movf	postinc2,w,c
  5095   0018A8  580E               	subwfb	(??_DelayRead+11)^0,w,c
  5096   0018AA  A0D8               	btfss	status,0,c
  5097   0018AC  EF5A  F00C         	goto	u551
  5098   0018B0  EF5C  F00C         	goto	u550
  5099   0018B4                     u551:
  5100   0018B4  EF65  F00C         	goto	l1855
  5101   0018B8                     u550:
  5102   0018B8                     
  5103                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  5104   0018B8  5002               	movf	DelayRead@delay^0,w,c
  5105   0018BA  6ED9               	movwf	fsr2l,c
  5106   0018BC  6ADA               	clrf	fsr2h,c
  5107   0018BE  0E08               	movlw	8
  5108   0018C0  26D9               	addwf	fsr2l,f,c
  5109   0018C2  6ADF               	clrf	indf2,c
  5110   0018C4                     
  5111                           ;drivers/scr/API_delay.c: 45:    return 1;
  5112   0018C4  0E01               	movlw	1
  5113   0018C6  EF66  F00C         	goto	l227
  5114   0018CA                     l1855:
  5115                           
  5116                           ;drivers/scr/API_delay.c: 48:  return 0;
  5117   0018CA  0E00               	movlw	0
  5118   0018CC                     l227:
  5119   0018CC  0012               	return		;funcret
  5120   0018CE                     __end_of_DelayRead:
  5121                           	callstack 0
  5122                           
  5123 ;; *************** function _DelayIsRunning *****************
  5124 ;; Defined at:
  5125 ;;		line 83 in file "drivers/scr/API_delay.c"
  5126 ;; Parameters:    Size  Location     Type
  5127 ;;  delay           1    0[COMRAM] PTR struct .
  5128 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5129 ;; Auto vars:     Size  Location     Type
  5130 ;;		None
  5131 ;; Return value:  Size  Location     Type
  5132 ;;                  1    wreg      _Bool 
  5133 ;; Registers used:
  5134 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5135 ;; Tracked objects:
  5136 ;;		On entry : 0/0
  5137 ;;		On exit  : 0/0
  5138 ;;		Unchanged: 0/0
  5139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5140 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5144 ;;Total ram usage:        1 bytes
  5145 ;; Hardware stack levels used: 1
  5146 ;; Hardware stack levels required when called: 1
  5147 ;; This function calls:
  5148 ;;		Nothing
  5149 ;; This function is called by:
  5150 ;;		_DelayRead
  5151 ;; This function uses a non-reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text35
  5155   001E32                     __ptext35:
  5156                           	callstack 0
  5157   001E32                     _DelayIsRunning:
  5158                           	callstack 26
  5159   001E32                     
  5160                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  5161   001E32  5001               	movf	DelayIsRunning@delay^0,w,c
  5162   001E34  6ED9               	movwf	fsr2l,c
  5163   001E36  6ADA               	clrf	fsr2h,c
  5164   001E38  0E08               	movlw	8
  5165   001E3A  26D9               	addwf	fsr2l,f,c
  5166   001E3C  50DF               	movf	indf2,w,c
  5167   001E3E  0012               	return		;funcret
  5168   001E40                     __end_of_DelayIsRunning:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _DebounceFSMInit *****************
  5172 ;; Defined at:
  5173 ;;		line 19 in file "drivers/scr/API_debounce.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  antirrebote_    1    5[COMRAM] PTR struct .
  5176 ;;		 -> main@boton1(11), 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;		None
  5179 ;; Return value:  Size  Location     Type
  5180 ;;                  1    wreg      void 
  5181 ;; Registers used:
  5182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5183 ;; Tracked objects:
  5184 ;;		On entry : 0/0
  5185 ;;		On exit  : 0/0
  5186 ;;		Unchanged: 0/0
  5187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5188 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5191 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;Total ram usage:        1 bytes
  5193 ;; Hardware stack levels used: 1
  5194 ;; Hardware stack levels required when called: 2
  5195 ;; This function calls:
  5196 ;;		_DelayInit
  5197 ;; This function is called by:
  5198 ;;		_DebounceFSMUpdate
  5199 ;;		_main
  5200 ;; This function uses a non-reentrant model
  5201 ;;
  5202                           
  5203                           	psect	text36
  5204   001C50                     __ptext36:
  5205                           	callstack 0
  5206   001C50                     _DebounceFSMInit:
  5207                           	callstack 27
  5208   001C50                     
  5209                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  5210   001C50  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5211   001C52  6ED9               	movwf	fsr2l,c
  5212   001C54  6ADA               	clrf	fsr2h,c
  5213   001C56  0E01               	movlw	1
  5214   001C58  26D9               	addwf	fsr2l,f,c
  5215   001C5A  6ADF               	clrf	indf2,c
  5216   001C5C                     
  5217                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  5218   001C5C  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5219   001C5E  0F02               	addlw	2
  5220   001C60  6E01               	movwf	DelayInit@delay^0,c
  5221   001C62  0E28               	movlw	40
  5222   001C64  6E02               	movwf	DelayInit@duration^0,c
  5223   001C66  0E00               	movlw	0
  5224   001C68  6E03               	movwf	(DelayInit@duration+1)^0,c
  5225   001C6A  0E00               	movlw	0
  5226   001C6C  6E04               	movwf	(DelayInit@duration+2)^0,c
  5227   001C6E  0E00               	movlw	0
  5228   001C70  6E05               	movwf	(DelayInit@duration+3)^0,c
  5229   001C72  EC57  F00E         	call	_DelayInit	;wreg free
  5230   001C76                     
  5231                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  5232   001C76  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5233   001C78  6ED9               	movwf	fsr2l,c
  5234   001C7A  6ADA               	clrf	fsr2h,c
  5235   001C7C  6ADF               	clrf	indf2,c
  5236   001C7E  0012               	return		;funcret
  5237   001C80                     __end_of_DebounceFSMInit:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _DelayInit *****************
  5241 ;; Defined at:
  5242 ;;		line 22 in file "drivers/scr/API_delay.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  delay           1    0[COMRAM] PTR struct .
  5245 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5246 ;;  duration        4    1[COMRAM] unsigned long 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;		None
  5249 ;; Return value:  Size  Location     Type
  5250 ;;                  1    wreg      void 
  5251 ;; Registers used:
  5252 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5258 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5262 ;;Total ram usage:        5 bytes
  5263 ;; Hardware stack levels used: 1
  5264 ;; Hardware stack levels required when called: 1
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_InicializoMRF24
  5269 ;;		_DebounceFSMInit
  5270 ;;		_main
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text37
  5275   001CAE                     __ptext37:
  5276                           	callstack 0
  5277   001CAE                     _DelayInit:
  5278                           	callstack 27
  5279   001CAE                     
  5280                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  5281   001CAE  5001               	movf	DelayInit@delay^0,w,c
  5282   001CB0  6ED9               	movwf	fsr2l,c
  5283   001CB2  6ADA               	clrf	fsr2h,c
  5284   001CB4  0E04               	movlw	4
  5285   001CB6  26D9               	addwf	fsr2l,f,c
  5286   001CB8  C002  FFDE         	movff	DelayInit@duration,postinc2
  5287   001CBC  C003  FFDE         	movff	DelayInit@duration+1,postinc2
  5288   001CC0  C004  FFDE         	movff	DelayInit@duration+2,postinc2
  5289   001CC4  C005  FFDE         	movff	DelayInit@duration+3,postinc2
  5290                           
  5291                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  5292   001CC8  5001               	movf	DelayInit@delay^0,w,c
  5293   001CCA  6ED9               	movwf	fsr2l,c
  5294   001CCC  6ADA               	clrf	fsr2h,c
  5295   001CCE  0E08               	movlw	8
  5296   001CD0  26D9               	addwf	fsr2l,f,c
  5297   001CD2  6ADF               	clrf	indf2,c
  5298   001CD4  0012               	return		;funcret
  5299   001CD6                     __end_of_DelayInit:
  5300                           	callstack 0
  5301                           
  5302 ;; *************** function _BoardInit *****************
  5303 ;; Defined at:
  5304 ;;		line 21 in file "hardware_config.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		wreg, status,2, cstack
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; Hardware stack levels required when called: 2
  5325 ;; This function calls:
  5326 ;;		_SPIInit
  5327 ;; This function is called by:
  5328 ;;		_main
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           	psect	text38
  5333   0019DA                     __ptext38:
  5334                           	callstack 0
  5335   0019DA                     _BoardInit:
  5336                           	callstack 28
  5337   0019DA                     
  5338                           ;hardware_config.c: 23:     PORTA = 0;
  5339   0019DA  6A80               	clrf	128,c	;volatile
  5340                           
  5341                           ;hardware_config.c: 24:     PORTB = 0;
  5342   0019DC  6A81               	clrf	129,c	;volatile
  5343                           
  5344                           ;hardware_config.c: 25:     PORTC = 0;
  5345   0019DE  6A82               	clrf	130,c	;volatile
  5346                           
  5347                           ;hardware_config.c: 26:     PORTD = 0;
  5348   0019E0  6A83               	clrf	131,c	;volatile
  5349                           
  5350                           ;hardware_config.c: 27:     PORTE = 0;
  5351   0019E2  6A84               	clrf	132,c	;volatile
  5352                           
  5353                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  5354   0019E4  8C93               	bsf	147,6,c	;volatile
  5355                           
  5356                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  5357   0019E6  8E93               	bsf	147,7,c	;volatile
  5358                           
  5359                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  5360   0019E8  9496               	bcf	150,2,c	;volatile
  5361                           
  5362                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  5363   0019EA  9096               	bcf	150,0,c	;volatile
  5364                           
  5365                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  5366   0019EC  9296               	bcf	150,1,c	;volatile
  5367                           
  5368                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  5369   0019EE  8494               	bsf	148,2,c	;volatile
  5370                           
  5371                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  5372   0019F0  848D               	bsf	141,2,c	;volatile
  5373                           
  5374                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  5375   0019F2  808D               	bsf	141,0,c	;volatile
  5376                           
  5377                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  5378   0019F4  828D               	bsf	141,1,c	;volatile
  5379                           
  5380                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  5381   0019F6  8093               	bsf	147,0,c	;volatile
  5382                           
  5383                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  5384   0019F8  9C94               	bcf	148,6,c	;volatile
  5385                           
  5386                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  5387   0019FA  9E94               	bcf	148,7,c	;volatile
  5388                           
  5389                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  5390   0019FC  9895               	bcf	149,4,c	;volatile
  5391                           
  5392                           ;hardware_config.c: 45:     IPEN = 0;
  5393   0019FE  9ED0               	bcf	4048,7,c	;volatile
  5394                           
  5395                           ;hardware_config.c: 46:  GIE = 1;
  5396   001A00  8EF2               	bsf	4082,7,c	;volatile
  5397                           
  5398                           ;hardware_config.c: 47:  PEIE = 1;
  5399   001A02  8CF2               	bsf	4082,6,c	;volatile
  5400                           
  5401                           ;hardware_config.c: 48:     INT0E = 0;
  5402   001A04  98F2               	bcf	4082,4,c	;volatile
  5403                           
  5404                           ;hardware_config.c: 49:  RBIE = 0;
  5405   001A06  96F2               	bcf	4082,3,c	;volatile
  5406                           
  5407                           ;hardware_config.c: 50:  T0IE = 0;
  5408   001A08  9AF2               	bcf	4082,5,c	;volatile
  5409                           
  5410                           ;hardware_config.c: 51:  TMR1IE = 1;
  5411   001A0A  809D               	bsf	3997,0,c	;volatile
  5412                           
  5413                           ;hardware_config.c: 52:  TMR2IE = 0;
  5414   001A0C  929D               	bcf	3997,1,c	;volatile
  5415                           
  5416                           ;hardware_config.c: 53:  CCP1IE = 0;
  5417   001A0E  949D               	bcf	3997,2,c	;volatile
  5418                           
  5419                           ;hardware_config.c: 54:  CCP2IE = 0;
  5420   001A10  90A0               	bcf	4000,0,c	;volatile
  5421                           
  5422                           ;hardware_config.c: 55:  EEIE = 0;
  5423   001A12  98A0               	bcf	4000,4,c	;volatile
  5424                           
  5425                           ;hardware_config.c: 56:  SSPIE = 0;
  5426   001A14  969D               	bcf	3997,3,c	;volatile
  5427                           
  5428                           ;hardware_config.c: 57:  BCLIE = 0;
  5429   001A16  96A0               	bcf	4000,3,c	;volatile
  5430                           
  5431                           ;hardware_config.c: 58:  ADIE = 0;
  5432   001A18  9C9D               	bcf	3997,6,c	;volatile
  5433                           
  5434                           ;hardware_config.c: 59:  RBIE = 0;
  5435   001A1A  96F2               	bcf	4082,3,c	;volatile
  5436                           
  5437                           ;hardware_config.c: 60:  RCIE = 0;
  5438   001A1C  9A9D               	bcf	3997,5,c	;volatile
  5439   001A1E                     
  5440                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  5441   001A1E  0E72               	movlw	114
  5442   001A20  6ED3               	movwf	211,c	;volatile
  5443                           
  5444                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  5445   001A22  0EDF               	movlw	223
  5446   001A24  6E9B               	movwf	155,c	;volatile
  5447   001A26                     
  5448                           ;hardware_config.c: 63:     RBPU = 1;
  5449   001A26  8EF1               	bsf	4081,7,c	;volatile
  5450   001A28                     
  5451                           ;hardware_config.c: 66:     T1RD16 = 0;
  5452   001A28  9ECD               	bcf	4045,7,c	;volatile
  5453   001A2A                     
  5454                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  5455   001A2A  88CD               	bsf	4045,4,c	;volatile
  5456   001A2C                     
  5457                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  5458   001A2C  8ACD               	bsf	4045,5,c	;volatile
  5459   001A2E                     
  5460                           ;hardware_config.c: 69:  T1SYNC = 0;
  5461   001A2E  94CD               	bcf	4045,2,c	;volatile
  5462   001A30                     
  5463                           ;hardware_config.c: 70:  T1OSCEN = 0;
  5464   001A30  96CD               	bcf	4045,3,c	;volatile
  5465   001A32                     
  5466                           ;hardware_config.c: 71:  TMR1CS = 0;
  5467   001A32  92CD               	bcf	4045,1,c	;volatile
  5468   001A34                     
  5469                           ;hardware_config.c: 72:  TMR1ON = 1;
  5470   001A34  80CD               	bsf	4045,0,c	;volatile
  5471   001A36                     
  5472                           ;hardware_config.c: 75:     SPIInit();
  5473   001A36  ECCB  F00E         	call	_SPIInit	;wreg free
  5474   001A3A  0012               	return		;funcret
  5475   001A3C                     __end_of_BoardInit:
  5476                           	callstack 0
  5477                           
  5478 ;; *************** function _SPIInit *****************
  5479 ;; Defined at:
  5480 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;		None
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;		None
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      void 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5498 ;;Total ram usage:        0 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 1
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_BoardInit
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text39
  5509   001D96                     __ptext39:
  5510                           	callstack 0
  5511   001D96                     _SPIInit:
  5512                           	callstack 28
  5513   001D96                     
  5514                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  5515   001D96  9694               	bcf	148,3,c	;volatile
  5516                           
  5517                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  5518   001D98  9A94               	bcf	148,5,c	;volatile
  5519                           
  5520                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  5521   001D9A  8894               	bsf	148,4,c	;volatile
  5522                           
  5523                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  5524   001D9C  8EC7               	bsf	199,7,c	;volatile
  5525                           
  5526                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  5527   001D9E  8CC7               	bsf	199,6,c	;volatile
  5528   001DA0                     
  5529                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  5530   001DA0  0E01               	movlw	1
  5531   001DA2  6EC6               	movwf	198,c	;volatile
  5532   001DA4                     
  5533                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  5534   001DA4  8EC6               	bsf	198,7,c	;volatile
  5535   001DA6                     
  5536                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  5537   001DA6  9CC6               	bcf	198,6,c	;volatile
  5538   001DA8                     
  5539                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  5540   001DA8  8AC6               	bsf	198,5,c	;volatile
  5541   001DAA                     
  5542                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  5543   001DAA  98C6               	bcf	198,4,c	;volatile
  5544   001DAC  0012               	return		;funcret
  5545   001DAE                     __end_of_SPIInit:
  5546                           	callstack 0
  5547                           
  5548 ;; *************** function _isr *****************
  5549 ;; Defined at:
  5550 ;;		line 5 in file "drivers/inc/interrupciones.c"
  5551 ;; Parameters:    Size  Location     Type
  5552 ;;		None
  5553 ;; Auto vars:     Size  Location     Type
  5554 ;;		None
  5555 ;; Return value:  Size  Location     Type
  5556 ;;                  1    wreg      void 
  5557 ;; Registers used:
  5558 ;;		wreg, status,2, status,0
  5559 ;; Tracked objects:
  5560 ;;		On entry : 0/0
  5561 ;;		On exit  : 0/0
  5562 ;;		Unchanged: 0/0
  5563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5568 ;;Total ram usage:        0 bytes
  5569 ;; Hardware stack levels used: 1
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		Interrupt level 2
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           
  5577                           	psect	intcode
  5578   000008                     __pintcode:
  5579                           	callstack 0
  5580   000008                     _isr:
  5581                           	callstack 23
  5582                           
  5583                           ;incstack = 0
  5584   000008  823D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5585   00000A                     
  5586                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  5587   00000A  A09D               	btfss	3997,0,c	;volatile
  5588   00000C  EF0A  F000         	goto	i2u92_41
  5589   000010  EF0C  F000         	goto	i2u92_40
  5590   000014                     i2u92_41:
  5591   000014  EF1E  F000         	goto	i2l409
  5592   000018                     i2u92_40:
  5593   000018  A09E               	btfss	3998,0,c	;volatile
  5594   00001A  EF11  F000         	goto	i2u93_41
  5595   00001E  EF13  F000         	goto	i2u93_40
  5596   000022                     i2u93_41:
  5597   000022  EF1E  F000         	goto	i2l409
  5598   000026                     i2u93_40:
  5599   000026                     
  5600                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  5601   000026  909E               	bcf	3998,0,c	;volatile
  5602   000028                     
  5603                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  5604   000028  0EF7               	movlw	247
  5605   00002A  6ECE               	movwf	206,c	;volatile
  5606                           
  5607                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  5608   00002C  0EFD               	movlw	253
  5609   00002E  6ECF               	movwf	207,c	;volatile
  5610   000030                     
  5611                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  5612   000030  0E01               	movlw	1
  5613   000032  2637               	addwf	_timeStamp^0,f,c
  5614   000034  0E00               	movlw	0
  5615   000036  2238               	addwfc	(_timeStamp+1)^0,f,c
  5616   000038  2239               	addwfc	(_timeStamp+2)^0,f,c
  5617   00003A  223A               	addwfc	(_timeStamp+3)^0,f,c
  5618   00003C                     i2l409:
  5619   00003C  923D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5620   00003E  0011               	retfie		f
  5621   000040                     __end_of_isr:
  5622                           	callstack 0
  5623                           
  5624                           	psect	rparam
  5625   000001                     ___rparam_used  equ	1
  5626   000000                     ___param_bank   equ	0
  5627   000000                     __Lparam        equ	__Lrparam
  5628   000000                     __Hparam        equ	__Hrparam
  5629                           
  5630                           	psect	temp
  5631   00003D                     btemp:
  5632                           	callstack 0
  5633   00003D                     	ds	1
  5634   00003D                     int$flags       set	btemp
  5635   00003E                     wtemp8          set	btemp+1
  5636   00003E                     ttemp5          set	btemp+1
  5637   000041                     ttemp6          set	btemp+4
  5638   000045                     ttemp7          set	btemp+8
  5639                           
  5640                           	psect	idloc
  5641                           
  5642                           ;Config register IDLOC0 @ 0x200000
  5643                           ;	unspecified, using default values
  5644   200000                     	org	2097152
  5645   200000  FF                 	db	255
  5646                           
  5647                           ;Config register IDLOC1 @ 0x200001
  5648                           ;	unspecified, using default values
  5649   200001                     	org	2097153
  5650   200001  FF                 	db	255
  5651                           
  5652                           ;Config register IDLOC2 @ 0x200002
  5653                           ;	unspecified, using default values
  5654   200002                     	org	2097154
  5655   200002  FF                 	db	255
  5656                           
  5657                           ;Config register IDLOC3 @ 0x200003
  5658                           ;	unspecified, using default values
  5659   200003                     	org	2097155
  5660   200003  FF                 	db	255
  5661                           
  5662                           ;Config register IDLOC4 @ 0x200004
  5663                           ;	unspecified, using default values
  5664   200004                     	org	2097156
  5665   200004  FF                 	db	255
  5666                           
  5667                           ;Config register IDLOC5 @ 0x200005
  5668                           ;	unspecified, using default values
  5669   200005                     	org	2097157
  5670   200005  FF                 	db	255
  5671                           
  5672                           ;Config register IDLOC6 @ 0x200006
  5673                           ;	unspecified, using default values
  5674   200006                     	org	2097158
  5675   200006  FF                 	db	255
  5676                           
  5677                           ;Config register IDLOC7 @ 0x200007
  5678                           ;	unspecified, using default values
  5679   200007                     	org	2097159
  5680   200007  FF                 	db	255
  5681                           
  5682                           	psect	config
  5683                           
  5684                           ; Padding undefined space
  5685   300000                     	org	3145728
  5686   300000  FF                 	db	255
  5687                           
  5688                           ;Config register CONFIG1H @ 0x300001
  5689                           ;	Oscillator Selection bits
  5690                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5691                           ;	Fail-Safe Clock Monitor Enable bit
  5692                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5693                           ;	Internal/External Oscillator Switchover bit
  5694                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5695   300001                     	org	3145729
  5696   300001  08                 	db	8
  5697                           
  5698                           ;Config register CONFIG2L @ 0x300002
  5699                           ;	Power-up Timer Enable bit
  5700                           ;	PWRT = 0x1, unprogrammed default
  5701                           ;	Brown-out Reset Enable bits
  5702                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5703                           ;	Brown Out Reset Voltage bits
  5704                           ;	BORV = 22, VBOR set to 2.2 V nominal
  5705   300002                     	org	3145730
  5706   300002  11                 	db	17
  5707                           
  5708                           ;Config register CONFIG2H @ 0x300003
  5709                           ;	Watchdog Timer Enable bit
  5710                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5711                           ;	Watchdog Timer Postscale Select bits
  5712                           ;	WDTPS = 8192, 1:8192
  5713   300003                     	org	3145731
  5714   300003  1A                 	db	26
  5715                           
  5716                           ; Padding undefined space
  5717   300004                     	org	3145732
  5718   300004  FF                 	db	255
  5719                           
  5720                           ;Config register CONFIG3H @ 0x300005
  5721                           ;	CCP2 MUX bit
  5722                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5723                           ;	PORTB A/D Enable bit
  5724                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5725                           ;	Low-Power Timer1 Oscillator Enable bit
  5726                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5727                           ;	HFINTOSC Fast Start-up
  5728                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  5729                           ;	MCLR Pin Enable bit
  5730                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5731   300005                     	org	3145733
  5732   300005  01                 	db	1
  5733                           
  5734                           ;Config register CONFIG4L @ 0x300006
  5735                           ;	Stack Full/Underflow Reset Enable bit
  5736                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5737                           ;	Single-Supply ICSP Enable bit
  5738                           ;	LVP = OFF, Single-Supply ICSP disabled
  5739                           ;	Extended Instruction Set Enable bit
  5740                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5741                           ;	Background Debugger Enable bit
  5742                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5743   300006                     	org	3145734
  5744   300006  80                 	db	128
  5745                           
  5746                           ; Padding undefined space
  5747   300007                     	org	3145735
  5748   300007  FF                 	db	255
  5749                           
  5750                           ;Config register CONFIG5L @ 0x300008
  5751                           ;	Code Protection Block 0
  5752                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5753                           ;	Code Protection Block 1
  5754                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5755                           ;	Code Protection Block 2
  5756                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5757                           ;	Code Protection Block 3
  5758                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5759   300008                     	org	3145736
  5760   300008  0F                 	db	15
  5761                           
  5762                           ;Config register CONFIG5H @ 0x300009
  5763                           ;	Boot Block Code Protection bit
  5764                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5765                           ;	Data EEPROM Code Protection bit
  5766                           ;	CPD = OFF, Data EEPROM not code-protected
  5767   300009                     	org	3145737
  5768   300009  C0                 	db	192
  5769                           
  5770                           ;Config register CONFIG6L @ 0x30000A
  5771                           ;	Write Protection Block 0
  5772                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5773                           ;	Write Protection Block 1
  5774                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5775                           ;	Write Protection Block 2
  5776                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5777                           ;	Write Protection Block 3
  5778                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5779   30000A                     	org	3145738
  5780   30000A  0F                 	db	15
  5781                           
  5782                           ;Config register CONFIG6H @ 0x30000B
  5783                           ;	Configuration Register Write Protection bit
  5784                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5785                           ;	Boot Block Write Protection bit
  5786                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5787                           ;	Data EEPROM Write Protection bit
  5788                           ;	WRTD = OFF, Data EEPROM not write-protected
  5789   30000B                     	org	3145739
  5790   30000B  E0                 	db	224
  5791                           
  5792                           ;Config register CONFIG7L @ 0x30000C
  5793                           ;	unspecified, using default values
  5794                           ;	Table Read Protection Block 0
  5795                           ;	EBTR0 = 0x1, unprogrammed default
  5796                           ;	Table Read Protection Block 1
  5797                           ;	EBTR1 = 0x1, unprogrammed default
  5798                           ;	Table Read Protection Block 2
  5799                           ;	EBTR2 = 0x1, unprogrammed default
  5800                           ;	Table Read Protection Block 3
  5801                           ;	EBTR3 = 0x1, unprogrammed default
  5802   30000C                     	org	3145740
  5803   30000C  0F                 	db	15
  5804                           
  5805                           ;Config register CONFIG7H @ 0x30000D
  5806                           ;	Boot Block Table Read Protection bit
  5807                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5808   30000D                     	org	3145741
  5809   30000D  40                 	db	64
  5810                           tosu	equ	0xFFF
  5811                           tosh	equ	0xFFE
  5812                           tosl	equ	0xFFD
  5813                           stkptr	equ	0xFFC
  5814                           pclatu	equ	0xFFB
  5815                           pclath	equ	0xFFA
  5816                           pcl	equ	0xFF9
  5817                           tblptru	equ	0xFF8
  5818                           tblptrh	equ	0xFF7
  5819                           tblptrl	equ	0xFF6
  5820                           tablat	equ	0xFF5
  5821                           prodh	equ	0xFF4
  5822                           prodl	equ	0xFF3
  5823                           indf0	equ	0xFEF
  5824                           postinc0	equ	0xFEE
  5825                           postdec0	equ	0xFED
  5826                           preinc0	equ	0xFEC
  5827                           plusw0	equ	0xFEB
  5828                           fsr0h	equ	0xFEA
  5829                           fsr0l	equ	0xFE9
  5830                           wreg	equ	0xFE8
  5831                           indf1	equ	0xFE7
  5832                           postinc1	equ	0xFE6
  5833                           postdec1	equ	0xFE5
  5834                           preinc1	equ	0xFE4
  5835                           plusw1	equ	0xFE3
  5836                           fsr1h	equ	0xFE2
  5837                           fsr1l	equ	0xFE1
  5838                           bsr	equ	0xFE0
  5839                           indf2	equ	0xFDF
  5840                           postinc2	equ	0xFDE
  5841                           postdec2	equ	0xFDD
  5842                           preinc2	equ	0xFDC
  5843                           plusw2	equ	0xFDB
  5844                           fsr2h	equ	0xFDA
  5845                           fsr2l	equ	0xFD9
  5846                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    24
    Data        0
    BSS         242
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      60
    BANK0           160      0      90
    BANK1           256      0     140
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DelayInit@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayIsRunning@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayRead@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), 

    mrf24_data_out_s$buffer_salida	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    MRF24SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    S288$buffer_salida	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    sp__MRF24GetMensajeEntrada	PTR unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in_s(BANK0[56]), mrf24_data_in_s$buffer_entrada(BANK0[50]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in_s(BANK0[56]), mrf24_data_in_s$buffer_entrada(BANK0[50]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_10(CODE[8]), STR_13(CODE[8]), STR_4(CODE[8]), STR_7(CODE[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _strcmp->_MRF24GetMensajeEntrada
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24SetMensajeSalida->_strlen
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_InicializoMRF24
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _InicializoMRF24->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _GetShortAddr->_WriteByteSPIPort
    _GetLongAddr->_Write2ByteSPIPort
    _MRF24BuscarDispositivos->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    6699
                                             26 COMRAM    22    22      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
            _MRF24BuscarDispositivos
             _MRF24GetMensajeEntrada
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
           _MRF24SetDireccionDestino
              _MRF24SetMensajeSalida
               _MRF24SetPANIDDestino
                _MRF24TransmitirDato
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     120
                                              2 COMRAM     3     1      2
             _MRF24GetMensajeEntrada (ARG)
 ---------------------------------------------------------------------------------
 (1) _MRF24TransmitirDato                                  7     7      0     976
                                             10 COMRAM     7     7      0
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24SetPANIDDestino                                 2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetMensajeSalida                                1     0      1     165
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      92
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetDireccionDestino                             2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   7     7      0     965
                                             10 COMRAM     7     7      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         1     1      0    2507
                                             25 COMRAM     1     1      0
                    _InicializoMRF24
                    _InicializoPines
                _InicializoVariables
                        _SetResetPin
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InicializoMRF24                                     11    11      0    2277
                                             14 COMRAM    11    11      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceMACAddress                                  2     2      0     257
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetChannel                                           1     1      0     505
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     198
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetMensajeEntrada                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24BuscarDispositivos                              7     7      0     805
                                             10 COMRAM     7     7      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     316
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    4     2      2     610
                                             14 COMRAM     4     2      2
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (3) _DelayRead                                           13    12      1     160
                                              1 COMRAM    13    12      1
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (4) _DelayIsRunning                                       1     0      1      23
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      1     0      1     140
                                              5 COMRAM     1     0      1
                          _DelayInit
 ---------------------------------------------------------------------------------
 (3) _DelayInit                                            5     0      5      72
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24BuscarDispositivos
     _SetLongAddr
       _SetCSPin
       _Write2ByteSPIPort
         _SPIWrite2Byte
           _SPIWriteByte
       _WriteByteSPIPort
         _SPIWriteByte
     _SetShortAddr
       _SetCSPin
       _WriteByteSPIPort
   _MRF24GetMensajeEntrada
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _InicializoMRF24
       _DelayInit
       _DelayRead
       _DelayReset
       _GetLongAddr
         _ReadByteSPIPort
           _SPIRead
         _SetCSPin
         _Write2ByteSPIPort
       _GetShortAddr
         _ReadByteSPIPort
         _SetCSPin
         _WriteByteSPIPort
       _SetChannel
         _SetLongAddr
         _SetShortAddr
       _SetDeviceAddress
         _SetShortAddr
       _SetDeviceMACAddress
         _SetShortAddr
       _SetLongAddr
       _SetShortAddr
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetResetPin
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _MRF24SetDireccionDestino
   _MRF24SetMensajeSalida
     _strlen
   _MRF24SetPANIDDestino
   _MRF24TransmitirDato
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _strcmp
     _MRF24GetMensajeEntrada (ARG)

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0     140     54.7%
BITBANK0           160      0       0      0.0%
BANK0              160      0      90     56.2%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     48      60     63.8%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     296      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Jun 03 16:57:18 2025

                         _SSPSTATbits 0FC7                                    l21 1DD6  
                                  l30 1E06                                    l24 1E30  
                                  l33 1DEA                                    l42 1E4E  
                                  l27 1DF8                                    l36 1E48  
                                  l39 1E14                       _IsMRF24Interrup 1DD8  
                                  l99 179E                                    u55 1DF6  
                                  u56 1DF8                                    u65 1E04  
                                  u66 1E06                         ?_MRF24J40Init 0001  
                                 l100 1820                                   l103 125E  
                                 l112 1D40                                   l121 1A7E  
                                 l105 13CE                                   l202 1D86  
                                 l211 1DB2                                   l115 1CFA  
                                 l124 1BB4                                   l132 1AC0  
                                 l300 10B0                                   l221 1CD4  
                                 l205 1D94                                   l141 1B42  
                                 l118 1B02                                   l214 1DC2  
                                 l127 1CAC                                   l135 1B7C  
                                 l208 1E22                                   l144 1D74  
                                 l152 164A                                   l161 1C1C  
                                 l233 1D20                                   l145 1D7C  
                                 l153 175C                                   l243 1C7E  
                                 l227 18CC                                   l236 1E3E  
                                 l172 1E54                                   l148 1D56  
                                 l253 150A                                   l181 1634  
                                 l149 1D5E                                   l166 1972  
                                 l199 1DAC                                   l393 1A3A  
                                 _GIE 7F97                                   u110 1DE8  
                                 u111 1DE2                                   u116 1DEA  
                                 u250 1BFA                                   u251 1BF6  
                                 u500 1D94                                   u260 1C14  
                                 u501 1D90                                   u261 1C10  
                                 u520 1DC0                                   u600 127E  
                                 u521 1DBC                                   u601 127A  
                                 u610 129A                                   u515 1E2E  
                                 u611 1296                                   u540 183A  
                                 u516 1E30                                   u620 137E  
                                 u700 173C                                   u541 1836  
                                 u621 137A                                   u701 1738  
                                 u550 18B8                                   u630 1394  
                                 u710 18DE                                   u551 18B4  
                                 u535 1ACC                                   u631 1390  
                                 u711 18DA                                   u800 14A4  
                                 u560 1AC0                                   u720 195C  
                                 u640 1BDC                                   u801 14A0  
                                 u561 1ABC                                   u721 1958  
                                 u641 1BD8                                   u730 151C  
                                 u650 1B1E                                   u810 19A2  
                                 u731 1518                                   u651 1B1A  
                                 u811 199E                                   u740 161A  
                                 u580 1782                                   u660 1B2E  
                                 u820 19B8                                   u900 1220  
                                 u741 1616                                   u581 177E  
                                 u661 1B2A                                   u821 19B4  
                                 u901 1218                                   u750 13E4  
                                 u590 17DA                                   u670 1D70  
                                 u830 10EA                                   u751 13E0  
                                 u575 1A46                                   u591 17D6  
                                 u671 1D6C                                   u831 10E4  
                                 u760 1410                                   u680 1D52  
                                 u840 112E                                   u761 140C  
                                 u681 1D4E                                   u841 112A  
                                 u770 1420                                   u690 1646  
                                 u850 1152                                   u771 141C  
                                 u691 1642                                   u851 114E  
                                 u780 1460                                   u860 1180  
                                 u836 10EC                                   u781 145C  
                                 u861 117C                                   u790 1470  
                                 u918 1222                                   u870 11AE  
                                 u791 146C                                   u871 11AA  
                                 u880 11DC                                   u881 11D8  
                                 u890 120E                                   u947 1B52  
                                 u891 120A                                   u957 1B6A  
                                 u967 12A0                                   u977 1BA8  
                                 _isr 0008                                   wreg 0FE8  
                 __end_of_GetLongAddr 1A80                                  l2003 1C50  
                                l2011 1B48                                  l2005 1C5C  
                                l2013 1B4C                                  l2101 18E2  
                                l2007 1C76                                  l2015 1B5E  
                                l2111 195C                                  l2103 190A  
                                l2023 1B04                                  l2201 1440  
                                l1161 1DFC                                  l2017 1B64  
                                l2009 1B44                                  l2105 1910  
                                l2033 1D60                                  l2025 1B1E  
                                l2041 1636                                  l2211 147C  
                                l2131 153C                                  l2123 1520  
                                l2115 1E50                                  l1251 1DD8  
                                l2019 1B76                                  l2107 192A  
                                l2027 1B32                                  l2051 1670  
                                l1091 19D8                                  l2205 1446  
                                l2141 156C                                  l2133 154C  
                                l2125 1528                                  l1157 1DEE  
                                l2109 192C                                  l2029 1B36  
                                l2037 1D42                                  l2061 16A6  
                                l2053 167E                                  l2045 164C  
                                l2301 11B0                                  l2223 1494  
                                l2207 1460                                  l2151 1594  
                                l2143 156E                                  l2135 154E  
                                l2127 152A                                  l2119 150C  
                                l2071 16D4                                  l2063 16B4  
                                l2055 168E                                  l2047 165C  
                                l2303 11BC                                  l2311 11F2  
                                l1361 1DA0                                  l2225 14A4  
                                l2209 1470                                  l2217 1482  
                                l2161 15C2                                  l2153 15A2  
                                l2145 1582                                  l2137 155C  
                                l2129 153A                                  l1097 1BE8  
                                l2081 170A                                  l2073 16D6  
                                l2065 16B6                                  l2057 1690  
                                l2049 165E                                  l2305 11DC  
                                l2313 11F6                                  l1363 1DA4  
                                l2227 14B6                                  l2235 14C4  
                                l2171 15EC                                  l2163 15C4  
                                l2155 15A4                                  l2147 1584  
                                l2139 155E                                  l2091 174C  
                                l2083 170C                                  l2075 16E4  
                                l2067 16C4                                  l2059 16A4  
                                l2251 19A2                                  l2315 120E  
                                l2307 11DE                                  l1365 1DA6  
                                l2229 14BE                                  l2237 1508  
                                l2181 13D0                                  l2173 161A  
                                l2165 15CA                                  l2157 15B2  
                                l2149 1592                                  l2093 1756  
                                l2085 170E                                  l2077 16E6  
                                l2069 16C6                                  l2253 19B8  
                                l2245 1974                                  l2309 11EA  
                                l2261 107C                                  l1367 1DA8  
                                l1359 1D96                                  l1631 19DA  
                                l2191 1420                                  l2183 13D4  
                                l2175 1628                                  l2167 15E8  
                                l2159 15B4                                  l2087 173C  
                                l2079 16EC                                  l2247 1978  
                                l2271 10BE                                  l2263 1080  
                                l1369 1DAA                                  l1641 1A2C  
                                l1633 1A1E                                  l2193 142E  
                                l2185 13E4                                  l1801 1AE4  
                                l2177 162A                                  l2169 15EA  
                                l1473 1C00                                  l2097 18CE  
                                l2089 174A                                  l2249 197C  
                                l2273 10C6                                  l2281 111A  
                                l2265 1098                                  l2257 1070  
                                l1651 1A36                                  l1643 1A2E  
                                l1635 1A26                                  l1811 1E32  
                                l2187 13F6                                  l1803 1AEA  
                                l1475 1C14                                  l1467 1BEA  
                                l2291 1160                                  l2283 112E  
                                l2275 10CE                                  l2267 10A4  
                                l2259 1078                                  l1645 1A30  
                                l1637 1A28                                  l2189 1410  
                                l1805 1AF6                                  l1469 1BFA  
                                l1821 1D12                                  l1901 175E  
                                l2293 1180                                  l2285 1132  
                                l2373 1104                                  l2269 10B6  
                                l1647 1A32                                  l1639 1A2A  
                                l1815 1CAE                                  l2375 14E2  
                                l2199 1434                                  l1807 1AFC  
                                l1479 1C1A                                  l1831 1CE6  
                                l1911 17BA                                  l2295 1182  
                                l2287 1152                                  l2279 10D6  
                                l1649 1A34                                  l1841 1822  
                                l1761 1E16                                  l1833 1CEC  
                                l1825 1CD8                                  l1921 1808  
                                l1913 17BE                                  l2297 118E  
                                l2289 1154                                  l1851 18C4  
                                l1843 183A                                  l1819 1CFC  
                                l1835 1CF2                                  l1827 1CD8  
                                l1931 1234                                  l1923 180A  
                                l1915 17DA                                  l1907 1766  
                                l2299 11AE                                  l1845 1850  
                                l1765 1E26                                  l1757 1D80  
                                l1773 1E08                                  l1837 1CF8  
                                l1829 1CE0                                  l1933 124C  
                                l1925 181C                                  l1917 17E4  
                                l1909 1782                                  l1855 18CA  
                                l1847 1862                                  l1759 1D82  
                                l1791 1D2E                                  l1783 1E4A  
                                l1871 1A9E                                  l1863 1A80  
                                l1951 12BA                                  l1943 1284  
                                l1935 1256                                  l1927 181E  
                                l1919 17E6                                  l1849 18B8  
                                l1769 1E42                                  l1793 1D34  
                                l1777 1DAE                                  l1881 1A64  
                                l1873 1AA0                                  l1961 12FE  
                                l1953 12BE                                  l1945 129A  
                                l1937 1266                                  l1795 1D3A  
                                l1787 1D24                                  l1779 1DC0  
                                l1883 1A70                                  l1891 1B7E  
                                l1859 1C80                                  l1875 1AA4  
                                l1971 133C                                  l1963 130E  
                                l1955 12CE                                  l1947 12AC  
                                l1939 127E                                  l1789 1D28  
                                l1885 1A76                                  l1877 1A3C  
                                l1893 1BA2                                  l1869 1A8C  
                                l1973 1346                                  l1965 131E  
                                l1957 12DE                                  l1949 12B6  
                                l1799 1AC2                                  l1887 1A7C  
                                l1879 1A5E                                  l1975 1350  
                                l1967 1328                                  l1959 12EE  
                                l1985 1382                                  l1977 1358  
                                l1969 1332                                  l1897 1DC4  
                                l1993 1BB6                                  l1987 1394  
                                l1979 1366                                  l1995 1BBE  
                                l1989 13CC                                  l1997 1BC0  
                                l1999 1BDC                                  _ADIE 7CEE  
                                ?_isr 0001                                  _EEIE 7D04  
                                STR_1 1066                                  STR_2 105E  
                                STR_3 1046                                  STR_4 1046  
                                STR_5 1019                                  STR_6 103E  
                                STR_7 103E                                  STR_8 1027  
                                STR_9 1056                                  _T0IE 7F95  
                                _IPEN 7E87                                  _PEIE 7F96  
                                _RBIE 7F93                                  _RCIE 7CED  
                                _RBPU 7F8F                          _SPIWriteByte 1D7E  
                                _main 1070                       __end_of_SPIInit 1DAE  
                     __end_of_SPIRead 1DC4                                  fsr1h 0FE2  
                                fsr2h 0FDA                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                btemp 003D                         _MRF24IsNewMsg 1BEA  
                          _DelayReset 1CFC               GetShortAddr@reg_address 0004  
                                start 0040               _MRF24BuscarDispositivos 150C  
                   DelayInit@duration 0002                          ___param_bank 0000  
                   ??_ReadByteSPIPort 0001                                 ??_isr 0001  
                      ??_MRF24J40Init 001A           __end_of_InicializoVariables 1822  
                       _SPIWrite2Byte 1E16      __end_of_MRF24SetDireccionDestino 1D7E  
                               ?_main 0001                                 _BCLIE 7D03  
                               STR_10 1056                                 STR_11 1019  
                               STR_12 104E                                 STR_13 104E  
                               STR_14 1027                                 STR_15 1033  
                               _INT0E 7F94                                 i2l409 003C  
                SetDeviceMACAddress@i 0005                                 _TMR1H 0FCF  
                               _TMR1L 0FCE                                 _PORTA 0F80  
                               _PORTB 0F81                                 _PORTC 0F82  
                               _PORTD 0F83                                 _PORTE 0F84  
                               _SSPIE 7CEB                  __end_of_GetShortAddr 1CFC  
                     _InicializoMRF24 1234          MRF24SetMensajeSalida@mensaje 0004  
            ??_MRF24GetMensajeEntrada 0003                       _InicializoPines 1DC4  
             SetShortAddr@reg_address 0004                                 tablat 0FF5  
                      ?_MRF24IsNewMsg 0001                                 ttemp5 003E  
                               ttemp6 0041                                 ttemp7 0045  
                               status 0FD8                      _mrf24_data_out_s 0031  
                               wtemp8 003E               __end_of_IsMRF24Interrup 1DEC  
                 _SetDeviceMACAddress 1A80                       __initialization 1C1E  
                        __end_of_main 1234  DebounceFSMUpdate@antirrebote_boton_n 000F  
                      ?_SPIWrite2Byte 0002                      __end_of_SetCSPin 1E32  
                         _GetLongAddr 1A3C                         ??_SetLongAddr 0009  
                              ??_main 001B                         __activetblptr 0002  
                       ??_SetResetPin 0001                  ?_SetDeviceMACAddress 0001  
                          _SetChannel 1B7E         InicializoMRF24@delay_time_out 0011  
                   ?_SetDeviceAddress 0001                 _MRF24SetMensajeSalida 1B04  
                              _CCP1IE 7CEA                                _CCP2IE 7D00  
                           ??_SPIInit 0001                             ??_SPIRead 0001  
                  ??_SetDeviceAddress 0005                                _T1RD16 7E6F  
                              _T1SYNC 7E6A                                i2l2321 000A  
                              i2l2323 0018                                i2l2325 0026  
                              i2l2327 0028                                i2l2329 0030  
                          _SetWakePin 1DEC                                _OSCCON 0FD3  
           MRF24SetPANIDDestino@panid 0001                                _TMR1IE 7CE8  
                              _TMR1IF 7CF0                                _TMR1CS 7E69  
                              _TMR2IE 7CE9                                _TMR1ON 7E68  
        __end_of_default_security_key 1011                                _SSPBUF 0FC9  
           ??_MRF24BuscarDispositivos 000B                           ?_DelayReset 0001  
                 DelayIsRunning@delay 0001               __end_of_InicializoMRF24 13D0  
                              clear_0 1C24                                clear_1 1C30  
                              clear_2 1C3C                                isa$std 0001  
                      SetCSPin@estado 0001               __end_of_InicializoPines 1DD8  
                              _strcmp 1974                                _strlen 1BB6  
               ??_SetDeviceMACAddress 0005                  InicializoVariables@i 0002  
                        __mediumconst 0000              _MRF24SetDireccionDestino 1D60  
                              tblptrh 0FF7                                tblptrl 0FF6  
                              tblptru 0FF8                   __end_of_SetLongAddr 1B04  
                  _MRF24ReciboPaquete 18CE                      ??_DelayIsRunning 0002  
                     ??_MRF24IsNewMsg 0001                   __end_of_SetResetPin 1E08  
               GetShortAddr@leido_spi 0003                     __end_of_DelayInit 1CD6  
                   __end_of_DelayRead 18CE                  __end_of_MRF24J40Init 1B7E  
                          __accesstop 0060               __end_of__initialization 1C42  
                 ?_MRF24ReciboPaquete 0001           __end_of_MRF24TransmitirDato 175E  
                   __end_of_BoardInit 1A3C                        DelayInit@delay 0001  
                       ___rparam_used 0001                        DelayRead@delay 0002  
                    SetWakePin@estado 0001                      ?_IsMRF24Interrup 0001  
                       ?_SetShortAddr 0003                        __pcstackCOMRAM 0001  
                     ??_SPIWrite2Byte 0004                    _long_mac_address_e 003C  
                ??_MRF24ReciboPaquete 000B                ?_MRF24SetMensajeSalida 0004  
                         ?_SetChannel 0001                            __pbssBANK0 0060  
                          __pbssBANK1 0100                           ?_SetWakePin 0001  
                           ?_SetCSPin 0001                       _ReadByteSPIPort 1E4A  
              InicializoMRF24@lectura 0010                          _GetShortAddr 1CD6  
              _MRF24GetMensajeEntrada 1E50                        ??_SetShortAddr 0004  
                    ?_InicializoMRF24 0001                           _SetLongAddr 1AC2  
                             _T1CKPS0 7E6C                               _T1CKPS1 7E6D  
                             ?_strcmp 0003                               ?_strlen 0001  
                    ?_InicializoPines 0001                  _default_security_key 1001  
                             _T1OSCEN 7E6B                           _SetResetPin 1DFA  
        __end_of_MRF24SetPANIDDestino 1D60                               _OSCTUNE 0F9B  
                             i2u92_40 0018                               i2u92_41 0014  
                             i2u93_40 0026                               i2u93_41 0022  
                             _SSPCON1 0FC6                               _SPIInit 1D96  
                             _SPIRead 1DAE              MRF24BuscarDispositivos@i 0010  
                          ??_SetCSPin 0001                     SetShortAddr@valor 0003  
                             __Hparam 0000                               __Lparam 0000  
         MRF24BuscarDispositivos@algo 0100                     ??_DebounceFSMInit 0007  
                        __psmallconst 1000                               __pcinit 1C1E  
                        ?_GetLongAddr 0006                               __ramtop 1000  
                             __ptext0 1070                               __ptext1 1974  
                             __ptext2 1636                               __ptext3 1D42  
                             __ptext4 1B04                               __ptext5 1BB6  
                             __ptext6 1D60                               __ptext7 18CE  
                             __ptext8 1B44                               __ptext9 175E  
                    _WriteByteSPIPort 1E40               __end_of_ReadByteSPIPort 1E50  
                end_of_initialization 1C42                         __Lmediumconst 0000  
                        ??_DelayReset 0002                   _default_mac_address 1011  
                             postinc0 0FEE                               postinc1 0FE6  
                             postinc2 0FDE            ??_MRF24SetDireccionDestino 0003  
                             strcmp@l 0003                               strcmp@r 0004  
                             strlen@a 0003                               strlen@s 0001  
                        _MRF24J40Init 1B44                             _PORTBbits 0F81  
                           _PORTCbits 0F82                    __end_of_DelayReset 1D22  
                WriteByteSPIPort@dato 0002                             _TRISBbits 0F93  
                           _TRISCbits 0F94                             _TRISDbits 0F95  
                           _TRISEbits 0F96                  __end_of_SetShortAddr 1D42  
               Write2ByteSPIPort@dato 0004                  GetLongAddr@respuesta 000A  
                          main@boton1 0026                             _DelayInit 1CAE  
                           _DelayRead 1822                             _BoardInit 19DA  
                _MRF24SetPANIDDestino 1D42                     _Write2ByteSPIPort 1E08  
         __end_of_SetDeviceMACAddress 1AC2               ??_MRF24SetMensajeSalida 0005  
                  ?_Write2ByteSPIPort 0004                       _mrf24_data_in_s 0082  
                      __end_of_strcmp 19DA                        __end_of_strlen 1BEA  
                        ??_SetChannel 000B                   start_initialization 1C1E  
                 ??_Write2ByteSPIPort 0006                           __end_of_isr 0040  
                    ?_ReadByteSPIPort 0001              ?_MRF24BuscarDispositivos 0001  
                       ?_SPIWriteByte 0001                          ??_SetWakePin 0001  
               __end_of_MRF24IsNewMsg 1C1E               ?_MRF24GetMensajeEntrada 0001  
                          ?_DelayInit 0001                            ?_DelayRead 0002  
                          ?_BoardInit 0001                 ?_MRF24SetPANIDDestino 0001  
           __end_of_Write2ByteSPIPort 1E16                    __end_of_SetChannel 1BB6  
                        _estadoActual 003B                 __end_of_SPIWrite2Byte 1E24  
             MRF24ReciboPaquete@index 0011                          ?_SetLongAddr 0006  
                            ??_strcmp 0005                              ??_strlen 0003  
                  __end_of_SetWakePin 1DFA                     _DebounceFSMUpdate 13D0  
                        ?_SetResetPin 0001                           __pbssCOMRAM 0031  
                  ?_DebounceFSMUpdate 000F                       DelayReset@delay 0001  
                            ?_SPIInit 0001                              ?_SPIRead 0001  
                      ??_SPIWriteByte 0001        __end_of_MRF24GetMensajeEntrada 1E56  
                 ??_DebounceFSMUpdate 0011                      SPIWriteByte@dato 0001  
                     _DebounceFSMInit 1C50                      _SetDeviceAddress 1C80  
                 _InicializoVariables 175E              __end_of_WriteByteSPIPort 1E4A  
                           __pintcode 0008             __end_of_DebounceFSMUpdate 150C  
                   SetResetPin@estado 0001                           __smallconst 1000  
     __end_of_MRF24BuscarDispositivos 1636                  ?_InicializoVariables 0001  
                    SetLongAddr@valor 0008                              _LATCbits 0F8B  
                            _LATDbits 0F8C                              _LATEbits 0F8D  
                         ??_DelayInit 0006                           ??_DelayRead 0003  
              ??_MRF24SetPANIDDestino 0003                           ??_BoardInit 0001  
                            _PIR1bits 0F9E                          _SetShortAddr 1D22  
                           _timeStamp 0037                    main@delay_parpadeo 001D  
               ??_InicializoVariables 0001     MRF24SetDireccionDestino@direccion 0001  
                   ??_IsMRF24Interrup 0001               __end_of_DebounceFSMInit 1C80  
                            _SetCSPin 1E24                              __Hrparam 0000  
                            __Lrparam 0000       MRF24ReciboPaquete@largo_mensaje 0010  
                __end_of_SPIWriteByte 1D96        MRF24TransmitirDato@pos_memoria 0011  
       __end_of_MRF24SetMensajeSalida 1B44                              __ptext10 1DC4  
                            __ptext11 1DEC                              __ptext20 1DAE  
                            __ptext12 1DFA                              __ptext21 1CFC  
                            __ptext13 1234                              __ptext30 1E16  
                            __ptext22 1BEA                              __ptext14 1A80  
                            __ptext31 1D7E                              __ptext23 1DD8  
                            __ptext15 1C80                              __ptext32 1E24  
                            __ptext24 1E50                              __ptext16 1B7E  
                            __ptext33 13D0                              __ptext25 150C  
                            __ptext17 1CD6                              __ptext34 1822  
                            __ptext26 1D22                              __ptext18 1A3C  
                 _MRF24TransmitirDato 1636                              __ptext35 1E32  
                            __ptext27 1AC2                              __ptext19 1E4A  
                            __ptext36 1C50                              __ptext28 1E40  
                            __ptext37 1CAE                              __ptext29 1E08  
                            __ptext38 19DA                              __ptext39 1D96  
           ?_MRF24SetDireccionDestino 0001                     ??_InicializoMRF24 000F  
                      _DelayIsRunning 1E32                     ??_InicializoPines 0002  
                       ?_GetShortAddr 0001                  ?_MRF24TransmitirDato 0001  
                            isa$xinst 0000                              int$flags 003D  
  DebounceFSMInit@antirrebote_boton_n 0006           __end_of_default_mac_address 1019  
            __end_of_SetDeviceAddress 1CAE                      ?_DebounceFSMInit 0006  
                            intlevel2 0000                __end_of_DelayIsRunning 1E40  
                MRF24TransmitirDato@i 0010                        ??_GetShortAddr 0003  
  MRF24BuscarDispositivos@pos_memoria 0011                   _mrf24_data_config_s 0060  
               ??_MRF24TransmitirDato 000B                     ?_WriteByteSPIPort 0001  
          __end_of_MRF24ReciboPaquete 1974                         ??_GetLongAddr 0008  
                  ??_WriteByteSPIPort 0002                GetLongAddr@reg_address 0006  
                         _SSPCON1bits 0FC6           DebounceFSMUpdate@estado_pin 0010  
                   SPIWrite2Byte@dato 0002                SetLongAddr@reg_address 0006  
                     ?_DelayIsRunning 0001  
