

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jul 24 13:41:43 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    56                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    57                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    58   000000                     
    59                           ; Version 2.20
    60                           ; Generated 05/05/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC18F46K20 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93   000FE0                     bsr             equ	4064
    94   000FE9                     fsr0            equ	4073
    95   000FEA                     fsr0h           equ	4074
    96   000FE9                     fsr0l           equ	4073
    97   000FE1                     fsr1            equ	4065
    98   000FE2                     fsr1h           equ	4066
    99   000FE1                     fsr1l           equ	4065
   100   000FD9                     fsr2            equ	4057
   101   000FDA                     fsr2h           equ	4058
   102   000FD9                     fsr2l           equ	4057
   103   000FEF                     indf0           equ	4079
   104   000FE7                     indf1           equ	4071
   105   000FDF                     indf2           equ	4063
   106   000FF2                     intcon          equ	4082
   107   000000                     nvmcon          equ	0
   108   000FF9                     pcl             equ	4089
   109   000FFA                     pclath          equ	4090
   110   000FFB                     pclatu          equ	4091
   111   000FEB                     plusw0          equ	4075
   112   000FE3                     plusw1          equ	4067
   113   000FDB                     plusw2          equ	4059
   114   000FED                     postdec0        equ	4077
   115   000FE5                     postdec1        equ	4069
   116   000FDD                     postdec2        equ	4061
   117   000FEE                     postinc0        equ	4078
   118   000FE6                     postinc1        equ	4070
   119   000FDE                     postinc2        equ	4062
   120   000FEC                     preinc0         equ	4076
   121   000FE4                     preinc1         equ	4068
   122   000FDC                     preinc2         equ	4060
   123   000FF3                     prod            equ	4083
   124   000FF4                     prodh           equ	4084
   125   000FF3                     prodl           equ	4083
   126   000FD8                     status          equ	4056
   127   000FF5                     tablat          equ	4085
   128   000FF6                     tblptr          equ	4086
   129   000FF7                     tblptrh         equ	4087
   130   000FF6                     tblptrl         equ	4086
   131   000FF8                     tblptru         equ	4088
   132   000FFD                     tosl            equ	4093
   133   000FE8                     wreg            equ	4072
   134   000F77                     SSPMSK          equ	3959	;# 
   135   000F78                     SLRCON          equ	3960	;# 
   136   000F79                     CM2CON1         equ	3961	;# 
   137   000F7A                     CM2CON0         equ	3962	;# 
   138   000F7B                     CM1CON0         equ	3963	;# 
   139   000F7C                     WPUB            equ	3964	;# 
   140   000F7D                     IOCB            equ	3965	;# 
   141   000F7E                     ANSEL           equ	3966	;# 
   142   000F7F                     ANSELH          equ	3967	;# 
   143   000F80                     PORTA           equ	3968	;# 
   144   000F81                     PORTB           equ	3969	;# 
   145   000F82                     PORTC           equ	3970	;# 
   146   000F83                     PORTD           equ	3971	;# 
   147   000F84                     PORTE           equ	3972	;# 
   148   000F89                     LATA            equ	3977	;# 
   149   000F8A                     LATB            equ	3978	;# 
   150   000F8B                     LATC            equ	3979	;# 
   151   000F8C                     LATD            equ	3980	;# 
   152   000F8D                     LATE            equ	3981	;# 
   153   000F92                     TRISA           equ	3986	;# 
   154   000F92                     DDRA            equ	3986	;# 
   155   000F93                     TRISB           equ	3987	;# 
   156   000F93                     DDRB            equ	3987	;# 
   157   000F94                     TRISC           equ	3988	;# 
   158   000F94                     DDRC            equ	3988	;# 
   159   000F95                     TRISD           equ	3989	;# 
   160   000F95                     DDRD            equ	3989	;# 
   161   000F96                     TRISE           equ	3990	;# 
   162   000F96                     DDRE            equ	3990	;# 
   163   000F9B                     OSCTUNE         equ	3995	;# 
   164   000F9D                     PIE1            equ	3997	;# 
   165   000F9E                     PIR1            equ	3998	;# 
   166   000F9F                     IPR1            equ	3999	;# 
   167   000FA0                     PIE2            equ	4000	;# 
   168   000FA1                     PIR2            equ	4001	;# 
   169   000FA2                     IPR2            equ	4002	;# 
   170   000FA6                     EECON1          equ	4006	;# 
   171   000FA7                     EECON2          equ	4007	;# 
   172   000FA8                     EEDATA          equ	4008	;# 
   173   000FA9                     EEADR           equ	4009	;# 
   174   000FAA                     EEADRH          equ	4010	;# 
   175   000FAB                     RCSTA           equ	4011	;# 
   176   000FAB                     RCSTA1          equ	4011	;# 
   177   000FAC                     TXSTA           equ	4012	;# 
   178   000FAC                     TXSTA1          equ	4012	;# 
   179   000FAD                     TXREG           equ	4013	;# 
   180   000FAD                     TXREG1          equ	4013	;# 
   181   000FAE                     RCREG           equ	4014	;# 
   182   000FAE                     RCREG1          equ	4014	;# 
   183   000FAF                     SPBRG           equ	4015	;# 
   184   000FAF                     SPBRG1          equ	4015	;# 
   185   000FB0                     SPBRGH          equ	4016	;# 
   186   000FB1                     T3CON           equ	4017	;# 
   187   000FB2                     TMR3            equ	4018	;# 
   188   000FB2                     TMR3L           equ	4018	;# 
   189   000FB3                     TMR3H           equ	4019	;# 
   190   000FB4                     CVRCON2         equ	4020	;# 
   191   000FB5                     CVRCON          equ	4021	;# 
   192   000FB6                     ECCP1AS         equ	4022	;# 
   193   000FB7                     PWM1CON         equ	4023	;# 
   194   000FB8                     BAUDCON         equ	4024	;# 
   195   000FB8                     BAUDCTL         equ	4024	;# 
   196   000FB9                     PSTRCON         equ	4025	;# 
   197   000FBA                     CCP2CON         equ	4026	;# 
   198   000FBB                     CCPR2           equ	4027	;# 
   199   000FBB                     CCPR2L          equ	4027	;# 
   200   000FBC                     CCPR2H          equ	4028	;# 
   201   000FBD                     CCP1CON         equ	4029	;# 
   202   000FBE                     CCPR1           equ	4030	;# 
   203   000FBE                     CCPR1L          equ	4030	;# 
   204   000FBF                     CCPR1H          equ	4031	;# 
   205   000FC0                     ADCON2          equ	4032	;# 
   206   000FC1                     ADCON1          equ	4033	;# 
   207   000FC2                     ADCON0          equ	4034	;# 
   208   000FC3                     ADRES           equ	4035	;# 
   209   000FC3                     ADRESL          equ	4035	;# 
   210   000FC4                     ADRESH          equ	4036	;# 
   211   000FC5                     SSPCON2         equ	4037	;# 
   212   000FC6                     SSPCON1         equ	4038	;# 
   213   000FC7                     SSPSTAT         equ	4039	;# 
   214   000FC8                     SSPADD          equ	4040	;# 
   215   000FC9                     SSPBUF          equ	4041	;# 
   216   000FCA                     T2CON           equ	4042	;# 
   217   000FCB                     PR2             equ	4043	;# 
   218   000FCB                     MEMCON          equ	4043	;# 
   219   000FCC                     TMR2            equ	4044	;# 
   220   000FCD                     T1CON           equ	4045	;# 
   221   000FCE                     TMR1            equ	4046	;# 
   222   000FCE                     TMR1L           equ	4046	;# 
   223   000FCF                     TMR1H           equ	4047	;# 
   224   000FD0                     RCON            equ	4048	;# 
   225   000FD1                     WDTCON          equ	4049	;# 
   226   000FD2                     HLVDCON         equ	4050	;# 
   227   000FD2                     LVDCON          equ	4050	;# 
   228   000FD3                     OSCCON          equ	4051	;# 
   229   000FD5                     T0CON           equ	4053	;# 
   230   000FD6                     TMR0            equ	4054	;# 
   231   000FD6                     TMR0L           equ	4054	;# 
   232   000FD7                     TMR0H           equ	4055	;# 
   233   000FD8                     STATUS          equ	4056	;# 
   234   000FD9                     FSR2            equ	4057	;# 
   235   000FD9                     FSR2L           equ	4057	;# 
   236   000FDA                     FSR2H           equ	4058	;# 
   237   000FDB                     PLUSW2          equ	4059	;# 
   238   000FDC                     PREINC2         equ	4060	;# 
   239   000FDD                     POSTDEC2        equ	4061	;# 
   240   000FDE                     POSTINC2        equ	4062	;# 
   241   000FDF                     INDF2           equ	4063	;# 
   242   000FE0                     BSR             equ	4064	;# 
   243   000FE1                     FSR1            equ	4065	;# 
   244   000FE1                     FSR1L           equ	4065	;# 
   245   000FE2                     FSR1H           equ	4066	;# 
   246   000FE3                     PLUSW1          equ	4067	;# 
   247   000FE4                     PREINC1         equ	4068	;# 
   248   000FE5                     POSTDEC1        equ	4069	;# 
   249   000FE6                     POSTINC1        equ	4070	;# 
   250   000FE7                     INDF1           equ	4071	;# 
   251   000FE8                     WREG            equ	4072	;# 
   252   000FE9                     FSR0            equ	4073	;# 
   253   000FE9                     FSR0L           equ	4073	;# 
   254   000FEA                     FSR0H           equ	4074	;# 
   255   000FEB                     PLUSW0          equ	4075	;# 
   256   000FEC                     PREINC0         equ	4076	;# 
   257   000FED                     POSTDEC0        equ	4077	;# 
   258   000FEE                     POSTINC0        equ	4078	;# 
   259   000FEF                     INDF0           equ	4079	;# 
   260   000FF0                     INTCON3         equ	4080	;# 
   261   000FF1                     INTCON2         equ	4081	;# 
   262   000FF2                     INTCON          equ	4082	;# 
   263   000FF3                     PROD            equ	4083	;# 
   264   000FF3                     PRODL           equ	4083	;# 
   265   000FF4                     PRODH           equ	4084	;# 
   266   000FF5                     TABLAT          equ	4085	;# 
   267   000FF6                     TBLPTR          equ	4086	;# 
   268   000FF6                     TBLPTRL         equ	4086	;# 
   269   000FF7                     TBLPTRH         equ	4087	;# 
   270   000FF8                     TBLPTRU         equ	4088	;# 
   271   000FF9                     PCLAT           equ	4089	;# 
   272   000FF9                     PC              equ	4089	;# 
   273   000FF9                     PCL             equ	4089	;# 
   274   000FFA                     PCLATH          equ	4090	;# 
   275   000FFB                     PCLATU          equ	4091	;# 
   276   000FFC                     STKPTR          equ	4092	;# 
   277   000FFD                     TOS             equ	4093	;# 
   278   000FFD                     TOSL            equ	4093	;# 
   279   000FFE                     TOSH            equ	4094	;# 
   280   000FFF                     TOSU            equ	4095	;# 
   281   000F77                     SSPMSK          equ	3959	;# 
   282   000F78                     SLRCON          equ	3960	;# 
   283   000F79                     CM2CON1         equ	3961	;# 
   284   000F7A                     CM2CON0         equ	3962	;# 
   285   000F7B                     CM1CON0         equ	3963	;# 
   286   000F7C                     WPUB            equ	3964	;# 
   287   000F7D                     IOCB            equ	3965	;# 
   288   000F7E                     ANSEL           equ	3966	;# 
   289   000F7F                     ANSELH          equ	3967	;# 
   290   000F80                     PORTA           equ	3968	;# 
   291   000F81                     PORTB           equ	3969	;# 
   292   000F82                     PORTC           equ	3970	;# 
   293   000F83                     PORTD           equ	3971	;# 
   294   000F84                     PORTE           equ	3972	;# 
   295   000F89                     LATA            equ	3977	;# 
   296   000F8A                     LATB            equ	3978	;# 
   297   000F8B                     LATC            equ	3979	;# 
   298   000F8C                     LATD            equ	3980	;# 
   299   000F8D                     LATE            equ	3981	;# 
   300   000F92                     TRISA           equ	3986	;# 
   301   000F92                     DDRA            equ	3986	;# 
   302   000F93                     TRISB           equ	3987	;# 
   303   000F93                     DDRB            equ	3987	;# 
   304   000F94                     TRISC           equ	3988	;# 
   305   000F94                     DDRC            equ	3988	;# 
   306   000F95                     TRISD           equ	3989	;# 
   307   000F95                     DDRD            equ	3989	;# 
   308   000F96                     TRISE           equ	3990	;# 
   309   000F96                     DDRE            equ	3990	;# 
   310   000F9B                     OSCTUNE         equ	3995	;# 
   311   000F9D                     PIE1            equ	3997	;# 
   312   000F9E                     PIR1            equ	3998	;# 
   313   000F9F                     IPR1            equ	3999	;# 
   314   000FA0                     PIE2            equ	4000	;# 
   315   000FA1                     PIR2            equ	4001	;# 
   316   000FA2                     IPR2            equ	4002	;# 
   317   000FA6                     EECON1          equ	4006	;# 
   318   000FA7                     EECON2          equ	4007	;# 
   319   000FA8                     EEDATA          equ	4008	;# 
   320   000FA9                     EEADR           equ	4009	;# 
   321   000FAA                     EEADRH          equ	4010	;# 
   322   000FAB                     RCSTA           equ	4011	;# 
   323   000FAB                     RCSTA1          equ	4011	;# 
   324   000FAC                     TXSTA           equ	4012	;# 
   325   000FAC                     TXSTA1          equ	4012	;# 
   326   000FAD                     TXREG           equ	4013	;# 
   327   000FAD                     TXREG1          equ	4013	;# 
   328   000FAE                     RCREG           equ	4014	;# 
   329   000FAE                     RCREG1          equ	4014	;# 
   330   000FAF                     SPBRG           equ	4015	;# 
   331   000FAF                     SPBRG1          equ	4015	;# 
   332   000FB0                     SPBRGH          equ	4016	;# 
   333   000FB1                     T3CON           equ	4017	;# 
   334   000FB2                     TMR3            equ	4018	;# 
   335   000FB2                     TMR3L           equ	4018	;# 
   336   000FB3                     TMR3H           equ	4019	;# 
   337   000FB4                     CVRCON2         equ	4020	;# 
   338   000FB5                     CVRCON          equ	4021	;# 
   339   000FB6                     ECCP1AS         equ	4022	;# 
   340   000FB7                     PWM1CON         equ	4023	;# 
   341   000FB8                     BAUDCON         equ	4024	;# 
   342   000FB8                     BAUDCTL         equ	4024	;# 
   343   000FB9                     PSTRCON         equ	4025	;# 
   344   000FBA                     CCP2CON         equ	4026	;# 
   345   000FBB                     CCPR2           equ	4027	;# 
   346   000FBB                     CCPR2L          equ	4027	;# 
   347   000FBC                     CCPR2H          equ	4028	;# 
   348   000FBD                     CCP1CON         equ	4029	;# 
   349   000FBE                     CCPR1           equ	4030	;# 
   350   000FBE                     CCPR1L          equ	4030	;# 
   351   000FBF                     CCPR1H          equ	4031	;# 
   352   000FC0                     ADCON2          equ	4032	;# 
   353   000FC1                     ADCON1          equ	4033	;# 
   354   000FC2                     ADCON0          equ	4034	;# 
   355   000FC3                     ADRES           equ	4035	;# 
   356   000FC3                     ADRESL          equ	4035	;# 
   357   000FC4                     ADRESH          equ	4036	;# 
   358   000FC5                     SSPCON2         equ	4037	;# 
   359   000FC6                     SSPCON1         equ	4038	;# 
   360   000FC7                     SSPSTAT         equ	4039	;# 
   361   000FC8                     SSPADD          equ	4040	;# 
   362   000FC9                     SSPBUF          equ	4041	;# 
   363   000FCA                     T2CON           equ	4042	;# 
   364   000FCB                     PR2             equ	4043	;# 
   365   000FCB                     MEMCON          equ	4043	;# 
   366   000FCC                     TMR2            equ	4044	;# 
   367   000FCD                     T1CON           equ	4045	;# 
   368   000FCE                     TMR1            equ	4046	;# 
   369   000FCE                     TMR1L           equ	4046	;# 
   370   000FCF                     TMR1H           equ	4047	;# 
   371   000FD0                     RCON            equ	4048	;# 
   372   000FD1                     WDTCON          equ	4049	;# 
   373   000FD2                     HLVDCON         equ	4050	;# 
   374   000FD2                     LVDCON          equ	4050	;# 
   375   000FD3                     OSCCON          equ	4051	;# 
   376   000FD5                     T0CON           equ	4053	;# 
   377   000FD6                     TMR0            equ	4054	;# 
   378   000FD6                     TMR0L           equ	4054	;# 
   379   000FD7                     TMR0H           equ	4055	;# 
   380   000FD8                     STATUS          equ	4056	;# 
   381   000FD9                     FSR2            equ	4057	;# 
   382   000FD9                     FSR2L           equ	4057	;# 
   383   000FDA                     FSR2H           equ	4058	;# 
   384   000FDB                     PLUSW2          equ	4059	;# 
   385   000FDC                     PREINC2         equ	4060	;# 
   386   000FDD                     POSTDEC2        equ	4061	;# 
   387   000FDE                     POSTINC2        equ	4062	;# 
   388   000FDF                     INDF2           equ	4063	;# 
   389   000FE0                     BSR             equ	4064	;# 
   390   000FE1                     FSR1            equ	4065	;# 
   391   000FE1                     FSR1L           equ	4065	;# 
   392   000FE2                     FSR1H           equ	4066	;# 
   393   000FE3                     PLUSW1          equ	4067	;# 
   394   000FE4                     PREINC1         equ	4068	;# 
   395   000FE5                     POSTDEC1        equ	4069	;# 
   396   000FE6                     POSTINC1        equ	4070	;# 
   397   000FE7                     INDF1           equ	4071	;# 
   398   000FE8                     WREG            equ	4072	;# 
   399   000FE9                     FSR0            equ	4073	;# 
   400   000FE9                     FSR0L           equ	4073	;# 
   401   000FEA                     FSR0H           equ	4074	;# 
   402   000FEB                     PLUSW0          equ	4075	;# 
   403   000FEC                     PREINC0         equ	4076	;# 
   404   000FED                     POSTDEC0        equ	4077	;# 
   405   000FEE                     POSTINC0        equ	4078	;# 
   406   000FEF                     INDF0           equ	4079	;# 
   407   000FF0                     INTCON3         equ	4080	;# 
   408   000FF1                     INTCON2         equ	4081	;# 
   409   000FF2                     INTCON          equ	4082	;# 
   410   000FF3                     PROD            equ	4083	;# 
   411   000FF3                     PRODL           equ	4083	;# 
   412   000FF4                     PRODH           equ	4084	;# 
   413   000FF5                     TABLAT          equ	4085	;# 
   414   000FF6                     TBLPTR          equ	4086	;# 
   415   000FF6                     TBLPTRL         equ	4086	;# 
   416   000FF7                     TBLPTRH         equ	4087	;# 
   417   000FF8                     TBLPTRU         equ	4088	;# 
   418   000FF9                     PCLAT           equ	4089	;# 
   419   000FF9                     PC              equ	4089	;# 
   420   000FF9                     PCL             equ	4089	;# 
   421   000FFA                     PCLATH          equ	4090	;# 
   422   000FFB                     PCLATU          equ	4091	;# 
   423   000FFC                     STKPTR          equ	4092	;# 
   424   000FFD                     TOS             equ	4093	;# 
   425   000FFD                     TOSL            equ	4093	;# 
   426   000FFE                     TOSH            equ	4094	;# 
   427   000FFF                     TOSU            equ	4095	;# 
   428   000F77                     SSPMSK          equ	3959	;# 
   429   000F78                     SLRCON          equ	3960	;# 
   430   000F79                     CM2CON1         equ	3961	;# 
   431   000F7A                     CM2CON0         equ	3962	;# 
   432   000F7B                     CM1CON0         equ	3963	;# 
   433   000F7C                     WPUB            equ	3964	;# 
   434   000F7D                     IOCB            equ	3965	;# 
   435   000F7E                     ANSEL           equ	3966	;# 
   436   000F7F                     ANSELH          equ	3967	;# 
   437   000F80                     PORTA           equ	3968	;# 
   438   000F81                     PORTB           equ	3969	;# 
   439   000F82                     PORTC           equ	3970	;# 
   440   000F83                     PORTD           equ	3971	;# 
   441   000F84                     PORTE           equ	3972	;# 
   442   000F89                     LATA            equ	3977	;# 
   443   000F8A                     LATB            equ	3978	;# 
   444   000F8B                     LATC            equ	3979	;# 
   445   000F8C                     LATD            equ	3980	;# 
   446   000F8D                     LATE            equ	3981	;# 
   447   000F92                     TRISA           equ	3986	;# 
   448   000F92                     DDRA            equ	3986	;# 
   449   000F93                     TRISB           equ	3987	;# 
   450   000F93                     DDRB            equ	3987	;# 
   451   000F94                     TRISC           equ	3988	;# 
   452   000F94                     DDRC            equ	3988	;# 
   453   000F95                     TRISD           equ	3989	;# 
   454   000F95                     DDRD            equ	3989	;# 
   455   000F96                     TRISE           equ	3990	;# 
   456   000F96                     DDRE            equ	3990	;# 
   457   000F9B                     OSCTUNE         equ	3995	;# 
   458   000F9D                     PIE1            equ	3997	;# 
   459   000F9E                     PIR1            equ	3998	;# 
   460   000F9F                     IPR1            equ	3999	;# 
   461   000FA0                     PIE2            equ	4000	;# 
   462   000FA1                     PIR2            equ	4001	;# 
   463   000FA2                     IPR2            equ	4002	;# 
   464   000FA6                     EECON1          equ	4006	;# 
   465   000FA7                     EECON2          equ	4007	;# 
   466   000FA8                     EEDATA          equ	4008	;# 
   467   000FA9                     EEADR           equ	4009	;# 
   468   000FAA                     EEADRH          equ	4010	;# 
   469   000FAB                     RCSTA           equ	4011	;# 
   470   000FAB                     RCSTA1          equ	4011	;# 
   471   000FAC                     TXSTA           equ	4012	;# 
   472   000FAC                     TXSTA1          equ	4012	;# 
   473   000FAD                     TXREG           equ	4013	;# 
   474   000FAD                     TXREG1          equ	4013	;# 
   475   000FAE                     RCREG           equ	4014	;# 
   476   000FAE                     RCREG1          equ	4014	;# 
   477   000FAF                     SPBRG           equ	4015	;# 
   478   000FAF                     SPBRG1          equ	4015	;# 
   479   000FB0                     SPBRGH          equ	4016	;# 
   480   000FB1                     T3CON           equ	4017	;# 
   481   000FB2                     TMR3            equ	4018	;# 
   482   000FB2                     TMR3L           equ	4018	;# 
   483   000FB3                     TMR3H           equ	4019	;# 
   484   000FB4                     CVRCON2         equ	4020	;# 
   485   000FB5                     CVRCON          equ	4021	;# 
   486   000FB6                     ECCP1AS         equ	4022	;# 
   487   000FB7                     PWM1CON         equ	4023	;# 
   488   000FB8                     BAUDCON         equ	4024	;# 
   489   000FB8                     BAUDCTL         equ	4024	;# 
   490   000FB9                     PSTRCON         equ	4025	;# 
   491   000FBA                     CCP2CON         equ	4026	;# 
   492   000FBB                     CCPR2           equ	4027	;# 
   493   000FBB                     CCPR2L          equ	4027	;# 
   494   000FBC                     CCPR2H          equ	4028	;# 
   495   000FBD                     CCP1CON         equ	4029	;# 
   496   000FBE                     CCPR1           equ	4030	;# 
   497   000FBE                     CCPR1L          equ	4030	;# 
   498   000FBF                     CCPR1H          equ	4031	;# 
   499   000FC0                     ADCON2          equ	4032	;# 
   500   000FC1                     ADCON1          equ	4033	;# 
   501   000FC2                     ADCON0          equ	4034	;# 
   502   000FC3                     ADRES           equ	4035	;# 
   503   000FC3                     ADRESL          equ	4035	;# 
   504   000FC4                     ADRESH          equ	4036	;# 
   505   000FC5                     SSPCON2         equ	4037	;# 
   506   000FC6                     SSPCON1         equ	4038	;# 
   507   000FC7                     SSPSTAT         equ	4039	;# 
   508   000FC8                     SSPADD          equ	4040	;# 
   509   000FC9                     SSPBUF          equ	4041	;# 
   510   000FCA                     T2CON           equ	4042	;# 
   511   000FCB                     PR2             equ	4043	;# 
   512   000FCB                     MEMCON          equ	4043	;# 
   513   000FCC                     TMR2            equ	4044	;# 
   514   000FCD                     T1CON           equ	4045	;# 
   515   000FCE                     TMR1            equ	4046	;# 
   516   000FCE                     TMR1L           equ	4046	;# 
   517   000FCF                     TMR1H           equ	4047	;# 
   518   000FD0                     RCON            equ	4048	;# 
   519   000FD1                     WDTCON          equ	4049	;# 
   520   000FD2                     HLVDCON         equ	4050	;# 
   521   000FD2                     LVDCON          equ	4050	;# 
   522   000FD3                     OSCCON          equ	4051	;# 
   523   000FD5                     T0CON           equ	4053	;# 
   524   000FD6                     TMR0            equ	4054	;# 
   525   000FD6                     TMR0L           equ	4054	;# 
   526   000FD7                     TMR0H           equ	4055	;# 
   527   000FD8                     STATUS          equ	4056	;# 
   528   000FD9                     FSR2            equ	4057	;# 
   529   000FD9                     FSR2L           equ	4057	;# 
   530   000FDA                     FSR2H           equ	4058	;# 
   531   000FDB                     PLUSW2          equ	4059	;# 
   532   000FDC                     PREINC2         equ	4060	;# 
   533   000FDD                     POSTDEC2        equ	4061	;# 
   534   000FDE                     POSTINC2        equ	4062	;# 
   535   000FDF                     INDF2           equ	4063	;# 
   536   000FE0                     BSR             equ	4064	;# 
   537   000FE1                     FSR1            equ	4065	;# 
   538   000FE1                     FSR1L           equ	4065	;# 
   539   000FE2                     FSR1H           equ	4066	;# 
   540   000FE3                     PLUSW1          equ	4067	;# 
   541   000FE4                     PREINC1         equ	4068	;# 
   542   000FE5                     POSTDEC1        equ	4069	;# 
   543   000FE6                     POSTINC1        equ	4070	;# 
   544   000FE7                     INDF1           equ	4071	;# 
   545   000FE8                     WREG            equ	4072	;# 
   546   000FE9                     FSR0            equ	4073	;# 
   547   000FE9                     FSR0L           equ	4073	;# 
   548   000FEA                     FSR0H           equ	4074	;# 
   549   000FEB                     PLUSW0          equ	4075	;# 
   550   000FEC                     PREINC0         equ	4076	;# 
   551   000FED                     POSTDEC0        equ	4077	;# 
   552   000FEE                     POSTINC0        equ	4078	;# 
   553   000FEF                     INDF0           equ	4079	;# 
   554   000FF0                     INTCON3         equ	4080	;# 
   555   000FF1                     INTCON2         equ	4081	;# 
   556   000FF2                     INTCON          equ	4082	;# 
   557   000FF3                     PROD            equ	4083	;# 
   558   000FF3                     PRODL           equ	4083	;# 
   559   000FF4                     PRODH           equ	4084	;# 
   560   000FF5                     TABLAT          equ	4085	;# 
   561   000FF6                     TBLPTR          equ	4086	;# 
   562   000FF6                     TBLPTRL         equ	4086	;# 
   563   000FF7                     TBLPTRH         equ	4087	;# 
   564   000FF8                     TBLPTRU         equ	4088	;# 
   565   000FF9                     PCLAT           equ	4089	;# 
   566   000FF9                     PC              equ	4089	;# 
   567   000FF9                     PCL             equ	4089	;# 
   568   000FFA                     PCLATH          equ	4090	;# 
   569   000FFB                     PCLATU          equ	4091	;# 
   570   000FFC                     STKPTR          equ	4092	;# 
   571   000FFD                     TOS             equ	4093	;# 
   572   000FFD                     TOSL            equ	4093	;# 
   573   000FFE                     TOSH            equ	4094	;# 
   574   000FFF                     TOSU            equ	4095	;# 
   575   000F77                     SSPMSK          equ	3959	;# 
   576   000F78                     SLRCON          equ	3960	;# 
   577   000F79                     CM2CON1         equ	3961	;# 
   578   000F7A                     CM2CON0         equ	3962	;# 
   579   000F7B                     CM1CON0         equ	3963	;# 
   580   000F7C                     WPUB            equ	3964	;# 
   581   000F7D                     IOCB            equ	3965	;# 
   582   000F7E                     ANSEL           equ	3966	;# 
   583   000F7F                     ANSELH          equ	3967	;# 
   584   000F80                     PORTA           equ	3968	;# 
   585   000F81                     PORTB           equ	3969	;# 
   586   000F82                     PORTC           equ	3970	;# 
   587   000F83                     PORTD           equ	3971	;# 
   588   000F84                     PORTE           equ	3972	;# 
   589   000F89                     LATA            equ	3977	;# 
   590   000F8A                     LATB            equ	3978	;# 
   591   000F8B                     LATC            equ	3979	;# 
   592   000F8C                     LATD            equ	3980	;# 
   593   000F8D                     LATE            equ	3981	;# 
   594   000F92                     TRISA           equ	3986	;# 
   595   000F92                     DDRA            equ	3986	;# 
   596   000F93                     TRISB           equ	3987	;# 
   597   000F93                     DDRB            equ	3987	;# 
   598   000F94                     TRISC           equ	3988	;# 
   599   000F94                     DDRC            equ	3988	;# 
   600   000F95                     TRISD           equ	3989	;# 
   601   000F95                     DDRD            equ	3989	;# 
   602   000F96                     TRISE           equ	3990	;# 
   603   000F96                     DDRE            equ	3990	;# 
   604   000F9B                     OSCTUNE         equ	3995	;# 
   605   000F9D                     PIE1            equ	3997	;# 
   606   000F9E                     PIR1            equ	3998	;# 
   607   000F9F                     IPR1            equ	3999	;# 
   608   000FA0                     PIE2            equ	4000	;# 
   609   000FA1                     PIR2            equ	4001	;# 
   610   000FA2                     IPR2            equ	4002	;# 
   611   000FA6                     EECON1          equ	4006	;# 
   612   000FA7                     EECON2          equ	4007	;# 
   613   000FA8                     EEDATA          equ	4008	;# 
   614   000FA9                     EEADR           equ	4009	;# 
   615   000FAA                     EEADRH          equ	4010	;# 
   616   000FAB                     RCSTA           equ	4011	;# 
   617   000FAB                     RCSTA1          equ	4011	;# 
   618   000FAC                     TXSTA           equ	4012	;# 
   619   000FAC                     TXSTA1          equ	4012	;# 
   620   000FAD                     TXREG           equ	4013	;# 
   621   000FAD                     TXREG1          equ	4013	;# 
   622   000FAE                     RCREG           equ	4014	;# 
   623   000FAE                     RCREG1          equ	4014	;# 
   624   000FAF                     SPBRG           equ	4015	;# 
   625   000FAF                     SPBRG1          equ	4015	;# 
   626   000FB0                     SPBRGH          equ	4016	;# 
   627   000FB1                     T3CON           equ	4017	;# 
   628   000FB2                     TMR3            equ	4018	;# 
   629   000FB2                     TMR3L           equ	4018	;# 
   630   000FB3                     TMR3H           equ	4019	;# 
   631   000FB4                     CVRCON2         equ	4020	;# 
   632   000FB5                     CVRCON          equ	4021	;# 
   633   000FB6                     ECCP1AS         equ	4022	;# 
   634   000FB7                     PWM1CON         equ	4023	;# 
   635   000FB8                     BAUDCON         equ	4024	;# 
   636   000FB8                     BAUDCTL         equ	4024	;# 
   637   000FB9                     PSTRCON         equ	4025	;# 
   638   000FBA                     CCP2CON         equ	4026	;# 
   639   000FBB                     CCPR2           equ	4027	;# 
   640   000FBB                     CCPR2L          equ	4027	;# 
   641   000FBC                     CCPR2H          equ	4028	;# 
   642   000FBD                     CCP1CON         equ	4029	;# 
   643   000FBE                     CCPR1           equ	4030	;# 
   644   000FBE                     CCPR1L          equ	4030	;# 
   645   000FBF                     CCPR1H          equ	4031	;# 
   646   000FC0                     ADCON2          equ	4032	;# 
   647   000FC1                     ADCON1          equ	4033	;# 
   648   000FC2                     ADCON0          equ	4034	;# 
   649   000FC3                     ADRES           equ	4035	;# 
   650   000FC3                     ADRESL          equ	4035	;# 
   651   000FC4                     ADRESH          equ	4036	;# 
   652   000FC5                     SSPCON2         equ	4037	;# 
   653   000FC6                     SSPCON1         equ	4038	;# 
   654   000FC7                     SSPSTAT         equ	4039	;# 
   655   000FC8                     SSPADD          equ	4040	;# 
   656   000FC9                     SSPBUF          equ	4041	;# 
   657   000FCA                     T2CON           equ	4042	;# 
   658   000FCB                     PR2             equ	4043	;# 
   659   000FCB                     MEMCON          equ	4043	;# 
   660   000FCC                     TMR2            equ	4044	;# 
   661   000FCD                     T1CON           equ	4045	;# 
   662   000FCE                     TMR1            equ	4046	;# 
   663   000FCE                     TMR1L           equ	4046	;# 
   664   000FCF                     TMR1H           equ	4047	;# 
   665   000FD0                     RCON            equ	4048	;# 
   666   000FD1                     WDTCON          equ	4049	;# 
   667   000FD2                     HLVDCON         equ	4050	;# 
   668   000FD2                     LVDCON          equ	4050	;# 
   669   000FD3                     OSCCON          equ	4051	;# 
   670   000FD5                     T0CON           equ	4053	;# 
   671   000FD6                     TMR0            equ	4054	;# 
   672   000FD6                     TMR0L           equ	4054	;# 
   673   000FD7                     TMR0H           equ	4055	;# 
   674   000FD8                     STATUS          equ	4056	;# 
   675   000FD9                     FSR2            equ	4057	;# 
   676   000FD9                     FSR2L           equ	4057	;# 
   677   000FDA                     FSR2H           equ	4058	;# 
   678   000FDB                     PLUSW2          equ	4059	;# 
   679   000FDC                     PREINC2         equ	4060	;# 
   680   000FDD                     POSTDEC2        equ	4061	;# 
   681   000FDE                     POSTINC2        equ	4062	;# 
   682   000FDF                     INDF2           equ	4063	;# 
   683   000FE0                     BSR             equ	4064	;# 
   684   000FE1                     FSR1            equ	4065	;# 
   685   000FE1                     FSR1L           equ	4065	;# 
   686   000FE2                     FSR1H           equ	4066	;# 
   687   000FE3                     PLUSW1          equ	4067	;# 
   688   000FE4                     PREINC1         equ	4068	;# 
   689   000FE5                     POSTDEC1        equ	4069	;# 
   690   000FE6                     POSTINC1        equ	4070	;# 
   691   000FE7                     INDF1           equ	4071	;# 
   692   000FE8                     WREG            equ	4072	;# 
   693   000FE9                     FSR0            equ	4073	;# 
   694   000FE9                     FSR0L           equ	4073	;# 
   695   000FEA                     FSR0H           equ	4074	;# 
   696   000FEB                     PLUSW0          equ	4075	;# 
   697   000FEC                     PREINC0         equ	4076	;# 
   698   000FED                     POSTDEC0        equ	4077	;# 
   699   000FEE                     POSTINC0        equ	4078	;# 
   700   000FEF                     INDF0           equ	4079	;# 
   701   000FF0                     INTCON3         equ	4080	;# 
   702   000FF1                     INTCON2         equ	4081	;# 
   703   000FF2                     INTCON          equ	4082	;# 
   704   000FF3                     PROD            equ	4083	;# 
   705   000FF3                     PRODL           equ	4083	;# 
   706   000FF4                     PRODH           equ	4084	;# 
   707   000FF5                     TABLAT          equ	4085	;# 
   708   000FF6                     TBLPTR          equ	4086	;# 
   709   000FF6                     TBLPTRL         equ	4086	;# 
   710   000FF7                     TBLPTRH         equ	4087	;# 
   711   000FF8                     TBLPTRU         equ	4088	;# 
   712   000FF9                     PCLAT           equ	4089	;# 
   713   000FF9                     PC              equ	4089	;# 
   714   000FF9                     PCL             equ	4089	;# 
   715   000FFA                     PCLATH          equ	4090	;# 
   716   000FFB                     PCLATU          equ	4091	;# 
   717   000FFC                     STKPTR          equ	4092	;# 
   718   000FFD                     TOS             equ	4093	;# 
   719   000FFD                     TOSL            equ	4093	;# 
   720   000FFE                     TOSH            equ	4094	;# 
   721   000FFF                     TOSU            equ	4095	;# 
   722   000F77                     SSPMSK          equ	3959	;# 
   723   000F78                     SLRCON          equ	3960	;# 
   724   000F79                     CM2CON1         equ	3961	;# 
   725   000F7A                     CM2CON0         equ	3962	;# 
   726   000F7B                     CM1CON0         equ	3963	;# 
   727   000F7C                     WPUB            equ	3964	;# 
   728   000F7D                     IOCB            equ	3965	;# 
   729   000F7E                     ANSEL           equ	3966	;# 
   730   000F7F                     ANSELH          equ	3967	;# 
   731   000F80                     PORTA           equ	3968	;# 
   732   000F81                     PORTB           equ	3969	;# 
   733   000F82                     PORTC           equ	3970	;# 
   734   000F83                     PORTD           equ	3971	;# 
   735   000F84                     PORTE           equ	3972	;# 
   736   000F89                     LATA            equ	3977	;# 
   737   000F8A                     LATB            equ	3978	;# 
   738   000F8B                     LATC            equ	3979	;# 
   739   000F8C                     LATD            equ	3980	;# 
   740   000F8D                     LATE            equ	3981	;# 
   741   000F92                     TRISA           equ	3986	;# 
   742   000F92                     DDRA            equ	3986	;# 
   743   000F93                     TRISB           equ	3987	;# 
   744   000F93                     DDRB            equ	3987	;# 
   745   000F94                     TRISC           equ	3988	;# 
   746   000F94                     DDRC            equ	3988	;# 
   747   000F95                     TRISD           equ	3989	;# 
   748   000F95                     DDRD            equ	3989	;# 
   749   000F96                     TRISE           equ	3990	;# 
   750   000F96                     DDRE            equ	3990	;# 
   751   000F9B                     OSCTUNE         equ	3995	;# 
   752   000F9D                     PIE1            equ	3997	;# 
   753   000F9E                     PIR1            equ	3998	;# 
   754   000F9F                     IPR1            equ	3999	;# 
   755   000FA0                     PIE2            equ	4000	;# 
   756   000FA1                     PIR2            equ	4001	;# 
   757   000FA2                     IPR2            equ	4002	;# 
   758   000FA6                     EECON1          equ	4006	;# 
   759   000FA7                     EECON2          equ	4007	;# 
   760   000FA8                     EEDATA          equ	4008	;# 
   761   000FA9                     EEADR           equ	4009	;# 
   762   000FAA                     EEADRH          equ	4010	;# 
   763   000FAB                     RCSTA           equ	4011	;# 
   764   000FAB                     RCSTA1          equ	4011	;# 
   765   000FAC                     TXSTA           equ	4012	;# 
   766   000FAC                     TXSTA1          equ	4012	;# 
   767   000FAD                     TXREG           equ	4013	;# 
   768   000FAD                     TXREG1          equ	4013	;# 
   769   000FAE                     RCREG           equ	4014	;# 
   770   000FAE                     RCREG1          equ	4014	;# 
   771   000FAF                     SPBRG           equ	4015	;# 
   772   000FAF                     SPBRG1          equ	4015	;# 
   773   000FB0                     SPBRGH          equ	4016	;# 
   774   000FB1                     T3CON           equ	4017	;# 
   775   000FB2                     TMR3            equ	4018	;# 
   776   000FB2                     TMR3L           equ	4018	;# 
   777   000FB3                     TMR3H           equ	4019	;# 
   778   000FB4                     CVRCON2         equ	4020	;# 
   779   000FB5                     CVRCON          equ	4021	;# 
   780   000FB6                     ECCP1AS         equ	4022	;# 
   781   000FB7                     PWM1CON         equ	4023	;# 
   782   000FB8                     BAUDCON         equ	4024	;# 
   783   000FB8                     BAUDCTL         equ	4024	;# 
   784   000FB9                     PSTRCON         equ	4025	;# 
   785   000FBA                     CCP2CON         equ	4026	;# 
   786   000FBB                     CCPR2           equ	4027	;# 
   787   000FBB                     CCPR2L          equ	4027	;# 
   788   000FBC                     CCPR2H          equ	4028	;# 
   789   000FBD                     CCP1CON         equ	4029	;# 
   790   000FBE                     CCPR1           equ	4030	;# 
   791   000FBE                     CCPR1L          equ	4030	;# 
   792   000FBF                     CCPR1H          equ	4031	;# 
   793   000FC0                     ADCON2          equ	4032	;# 
   794   000FC1                     ADCON1          equ	4033	;# 
   795   000FC2                     ADCON0          equ	4034	;# 
   796   000FC3                     ADRES           equ	4035	;# 
   797   000FC3                     ADRESL          equ	4035	;# 
   798   000FC4                     ADRESH          equ	4036	;# 
   799   000FC5                     SSPCON2         equ	4037	;# 
   800   000FC6                     SSPCON1         equ	4038	;# 
   801   000FC7                     SSPSTAT         equ	4039	;# 
   802   000FC8                     SSPADD          equ	4040	;# 
   803   000FC9                     SSPBUF          equ	4041	;# 
   804   000FCA                     T2CON           equ	4042	;# 
   805   000FCB                     PR2             equ	4043	;# 
   806   000FCB                     MEMCON          equ	4043	;# 
   807   000FCC                     TMR2            equ	4044	;# 
   808   000FCD                     T1CON           equ	4045	;# 
   809   000FCE                     TMR1            equ	4046	;# 
   810   000FCE                     TMR1L           equ	4046	;# 
   811   000FCF                     TMR1H           equ	4047	;# 
   812   000FD0                     RCON            equ	4048	;# 
   813   000FD1                     WDTCON          equ	4049	;# 
   814   000FD2                     HLVDCON         equ	4050	;# 
   815   000FD2                     LVDCON          equ	4050	;# 
   816   000FD3                     OSCCON          equ	4051	;# 
   817   000FD5                     T0CON           equ	4053	;# 
   818   000FD6                     TMR0            equ	4054	;# 
   819   000FD6                     TMR0L           equ	4054	;# 
   820   000FD7                     TMR0H           equ	4055	;# 
   821   000FD8                     STATUS          equ	4056	;# 
   822   000FD9                     FSR2            equ	4057	;# 
   823   000FD9                     FSR2L           equ	4057	;# 
   824   000FDA                     FSR2H           equ	4058	;# 
   825   000FDB                     PLUSW2          equ	4059	;# 
   826   000FDC                     PREINC2         equ	4060	;# 
   827   000FDD                     POSTDEC2        equ	4061	;# 
   828   000FDE                     POSTINC2        equ	4062	;# 
   829   000FDF                     INDF2           equ	4063	;# 
   830   000FE0                     BSR             equ	4064	;# 
   831   000FE1                     FSR1            equ	4065	;# 
   832   000FE1                     FSR1L           equ	4065	;# 
   833   000FE2                     FSR1H           equ	4066	;# 
   834   000FE3                     PLUSW1          equ	4067	;# 
   835   000FE4                     PREINC1         equ	4068	;# 
   836   000FE5                     POSTDEC1        equ	4069	;# 
   837   000FE6                     POSTINC1        equ	4070	;# 
   838   000FE7                     INDF1           equ	4071	;# 
   839   000FE8                     WREG            equ	4072	;# 
   840   000FE9                     FSR0            equ	4073	;# 
   841   000FE9                     FSR0L           equ	4073	;# 
   842   000FEA                     FSR0H           equ	4074	;# 
   843   000FEB                     PLUSW0          equ	4075	;# 
   844   000FEC                     PREINC0         equ	4076	;# 
   845   000FED                     POSTDEC0        equ	4077	;# 
   846   000FEE                     POSTINC0        equ	4078	;# 
   847   000FEF                     INDF0           equ	4079	;# 
   848   000FF0                     INTCON3         equ	4080	;# 
   849   000FF1                     INTCON2         equ	4081	;# 
   850   000FF2                     INTCON          equ	4082	;# 
   851   000FF3                     PROD            equ	4083	;# 
   852   000FF3                     PRODL           equ	4083	;# 
   853   000FF4                     PRODH           equ	4084	;# 
   854   000FF5                     TABLAT          equ	4085	;# 
   855   000FF6                     TBLPTR          equ	4086	;# 
   856   000FF6                     TBLPTRL         equ	4086	;# 
   857   000FF7                     TBLPTRH         equ	4087	;# 
   858   000FF8                     TBLPTRU         equ	4088	;# 
   859   000FF9                     PCLAT           equ	4089	;# 
   860   000FF9                     PC              equ	4089	;# 
   861   000FF9                     PCL             equ	4089	;# 
   862   000FFA                     PCLATH          equ	4090	;# 
   863   000FFB                     PCLATU          equ	4091	;# 
   864   000FFC                     STKPTR          equ	4092	;# 
   865   000FFD                     TOS             equ	4093	;# 
   866   000FFD                     TOSL            equ	4093	;# 
   867   000FFE                     TOSH            equ	4094	;# 
   868   000FFF                     TOSU            equ	4095	;# 
   869   000F77                     SSPMSK          equ	3959	;# 
   870   000F78                     SLRCON          equ	3960	;# 
   871   000F79                     CM2CON1         equ	3961	;# 
   872   000F7A                     CM2CON0         equ	3962	;# 
   873   000F7B                     CM1CON0         equ	3963	;# 
   874   000F7C                     WPUB            equ	3964	;# 
   875   000F7D                     IOCB            equ	3965	;# 
   876   000F7E                     ANSEL           equ	3966	;# 
   877   000F7F                     ANSELH          equ	3967	;# 
   878   000F80                     PORTA           equ	3968	;# 
   879   000F81                     PORTB           equ	3969	;# 
   880   000F82                     PORTC           equ	3970	;# 
   881   000F83                     PORTD           equ	3971	;# 
   882   000F84                     PORTE           equ	3972	;# 
   883   000F89                     LATA            equ	3977	;# 
   884   000F8A                     LATB            equ	3978	;# 
   885   000F8B                     LATC            equ	3979	;# 
   886   000F8C                     LATD            equ	3980	;# 
   887   000F8D                     LATE            equ	3981	;# 
   888   000F92                     TRISA           equ	3986	;# 
   889   000F92                     DDRA            equ	3986	;# 
   890   000F93                     TRISB           equ	3987	;# 
   891   000F93                     DDRB            equ	3987	;# 
   892   000F94                     TRISC           equ	3988	;# 
   893   000F94                     DDRC            equ	3988	;# 
   894   000F95                     TRISD           equ	3989	;# 
   895   000F95                     DDRD            equ	3989	;# 
   896   000F96                     TRISE           equ	3990	;# 
   897   000F96                     DDRE            equ	3990	;# 
   898   000F9B                     OSCTUNE         equ	3995	;# 
   899   000F9D                     PIE1            equ	3997	;# 
   900   000F9E                     PIR1            equ	3998	;# 
   901   000F9F                     IPR1            equ	3999	;# 
   902   000FA0                     PIE2            equ	4000	;# 
   903   000FA1                     PIR2            equ	4001	;# 
   904   000FA2                     IPR2            equ	4002	;# 
   905   000FA6                     EECON1          equ	4006	;# 
   906   000FA7                     EECON2          equ	4007	;# 
   907   000FA8                     EEDATA          equ	4008	;# 
   908   000FA9                     EEADR           equ	4009	;# 
   909   000FAA                     EEADRH          equ	4010	;# 
   910   000FAB                     RCSTA           equ	4011	;# 
   911   000FAB                     RCSTA1          equ	4011	;# 
   912   000FAC                     TXSTA           equ	4012	;# 
   913   000FAC                     TXSTA1          equ	4012	;# 
   914   000FAD                     TXREG           equ	4013	;# 
   915   000FAD                     TXREG1          equ	4013	;# 
   916   000FAE                     RCREG           equ	4014	;# 
   917   000FAE                     RCREG1          equ	4014	;# 
   918   000FAF                     SPBRG           equ	4015	;# 
   919   000FAF                     SPBRG1          equ	4015	;# 
   920   000FB0                     SPBRGH          equ	4016	;# 
   921   000FB1                     T3CON           equ	4017	;# 
   922   000FB2                     TMR3            equ	4018	;# 
   923   000FB2                     TMR3L           equ	4018	;# 
   924   000FB3                     TMR3H           equ	4019	;# 
   925   000FB4                     CVRCON2         equ	4020	;# 
   926   000FB5                     CVRCON          equ	4021	;# 
   927   000FB6                     ECCP1AS         equ	4022	;# 
   928   000FB7                     PWM1CON         equ	4023	;# 
   929   000FB8                     BAUDCON         equ	4024	;# 
   930   000FB8                     BAUDCTL         equ	4024	;# 
   931   000FB9                     PSTRCON         equ	4025	;# 
   932   000FBA                     CCP2CON         equ	4026	;# 
   933   000FBB                     CCPR2           equ	4027	;# 
   934   000FBB                     CCPR2L          equ	4027	;# 
   935   000FBC                     CCPR2H          equ	4028	;# 
   936   000FBD                     CCP1CON         equ	4029	;# 
   937   000FBE                     CCPR1           equ	4030	;# 
   938   000FBE                     CCPR1L          equ	4030	;# 
   939   000FBF                     CCPR1H          equ	4031	;# 
   940   000FC0                     ADCON2          equ	4032	;# 
   941   000FC1                     ADCON1          equ	4033	;# 
   942   000FC2                     ADCON0          equ	4034	;# 
   943   000FC3                     ADRES           equ	4035	;# 
   944   000FC3                     ADRESL          equ	4035	;# 
   945   000FC4                     ADRESH          equ	4036	;# 
   946   000FC5                     SSPCON2         equ	4037	;# 
   947   000FC6                     SSPCON1         equ	4038	;# 
   948   000FC7                     SSPSTAT         equ	4039	;# 
   949   000FC8                     SSPADD          equ	4040	;# 
   950   000FC9                     SSPBUF          equ	4041	;# 
   951   000FCA                     T2CON           equ	4042	;# 
   952   000FCB                     PR2             equ	4043	;# 
   953   000FCB                     MEMCON          equ	4043	;# 
   954   000FCC                     TMR2            equ	4044	;# 
   955   000FCD                     T1CON           equ	4045	;# 
   956   000FCE                     TMR1            equ	4046	;# 
   957   000FCE                     TMR1L           equ	4046	;# 
   958   000FCF                     TMR1H           equ	4047	;# 
   959   000FD0                     RCON            equ	4048	;# 
   960   000FD1                     WDTCON          equ	4049	;# 
   961   000FD2                     HLVDCON         equ	4050	;# 
   962   000FD2                     LVDCON          equ	4050	;# 
   963   000FD3                     OSCCON          equ	4051	;# 
   964   000FD5                     T0CON           equ	4053	;# 
   965   000FD6                     TMR0            equ	4054	;# 
   966   000FD6                     TMR0L           equ	4054	;# 
   967   000FD7                     TMR0H           equ	4055	;# 
   968   000FD8                     STATUS          equ	4056	;# 
   969   000FD9                     FSR2            equ	4057	;# 
   970   000FD9                     FSR2L           equ	4057	;# 
   971   000FDA                     FSR2H           equ	4058	;# 
   972   000FDB                     PLUSW2          equ	4059	;# 
   973   000FDC                     PREINC2         equ	4060	;# 
   974   000FDD                     POSTDEC2        equ	4061	;# 
   975   000FDE                     POSTINC2        equ	4062	;# 
   976   000FDF                     INDF2           equ	4063	;# 
   977   000FE0                     BSR             equ	4064	;# 
   978   000FE1                     FSR1            equ	4065	;# 
   979   000FE1                     FSR1L           equ	4065	;# 
   980   000FE2                     FSR1H           equ	4066	;# 
   981   000FE3                     PLUSW1          equ	4067	;# 
   982   000FE4                     PREINC1         equ	4068	;# 
   983   000FE5                     POSTDEC1        equ	4069	;# 
   984   000FE6                     POSTINC1        equ	4070	;# 
   985   000FE7                     INDF1           equ	4071	;# 
   986   000FE8                     WREG            equ	4072	;# 
   987   000FE9                     FSR0            equ	4073	;# 
   988   000FE9                     FSR0L           equ	4073	;# 
   989   000FEA                     FSR0H           equ	4074	;# 
   990   000FEB                     PLUSW0          equ	4075	;# 
   991   000FEC                     PREINC0         equ	4076	;# 
   992   000FED                     POSTDEC0        equ	4077	;# 
   993   000FEE                     POSTINC0        equ	4078	;# 
   994   000FEF                     INDF0           equ	4079	;# 
   995   000FF0                     INTCON3         equ	4080	;# 
   996   000FF1                     INTCON2         equ	4081	;# 
   997   000FF2                     INTCON          equ	4082	;# 
   998   000FF3                     PROD            equ	4083	;# 
   999   000FF3                     PRODL           equ	4083	;# 
  1000   000FF4                     PRODH           equ	4084	;# 
  1001   000FF5                     TABLAT          equ	4085	;# 
  1002   000FF6                     TBLPTR          equ	4086	;# 
  1003   000FF6                     TBLPTRL         equ	4086	;# 
  1004   000FF7                     TBLPTRH         equ	4087	;# 
  1005   000FF8                     TBLPTRU         equ	4088	;# 
  1006   000FF9                     PCLAT           equ	4089	;# 
  1007   000FF9                     PC              equ	4089	;# 
  1008   000FF9                     PCL             equ	4089	;# 
  1009   000FFA                     PCLATH          equ	4090	;# 
  1010   000FFB                     PCLATU          equ	4091	;# 
  1011   000FFC                     STKPTR          equ	4092	;# 
  1012   000FFD                     TOS             equ	4093	;# 
  1013   000FFD                     TOSL            equ	4093	;# 
  1014   000FFE                     TOSH            equ	4094	;# 
  1015   000FFF                     TOSU            equ	4095	;# 
  1016   000F77                     SSPMSK          equ	3959	;# 
  1017   000F78                     SLRCON          equ	3960	;# 
  1018   000F79                     CM2CON1         equ	3961	;# 
  1019   000F7A                     CM2CON0         equ	3962	;# 
  1020   000F7B                     CM1CON0         equ	3963	;# 
  1021   000F7C                     WPUB            equ	3964	;# 
  1022   000F7D                     IOCB            equ	3965	;# 
  1023   000F7E                     ANSEL           equ	3966	;# 
  1024   000F7F                     ANSELH          equ	3967	;# 
  1025   000F80                     PORTA           equ	3968	;# 
  1026   000F81                     PORTB           equ	3969	;# 
  1027   000F82                     PORTC           equ	3970	;# 
  1028   000F83                     PORTD           equ	3971	;# 
  1029   000F84                     PORTE           equ	3972	;# 
  1030   000F89                     LATA            equ	3977	;# 
  1031   000F8A                     LATB            equ	3978	;# 
  1032   000F8B                     LATC            equ	3979	;# 
  1033   000F8C                     LATD            equ	3980	;# 
  1034   000F8D                     LATE            equ	3981	;# 
  1035   000F92                     TRISA           equ	3986	;# 
  1036   000F92                     DDRA            equ	3986	;# 
  1037   000F93                     TRISB           equ	3987	;# 
  1038   000F93                     DDRB            equ	3987	;# 
  1039   000F94                     TRISC           equ	3988	;# 
  1040   000F94                     DDRC            equ	3988	;# 
  1041   000F95                     TRISD           equ	3989	;# 
  1042   000F95                     DDRD            equ	3989	;# 
  1043   000F96                     TRISE           equ	3990	;# 
  1044   000F96                     DDRE            equ	3990	;# 
  1045   000F9B                     OSCTUNE         equ	3995	;# 
  1046   000F9D                     PIE1            equ	3997	;# 
  1047   000F9E                     PIR1            equ	3998	;# 
  1048   000F9F                     IPR1            equ	3999	;# 
  1049   000FA0                     PIE2            equ	4000	;# 
  1050   000FA1                     PIR2            equ	4001	;# 
  1051   000FA2                     IPR2            equ	4002	;# 
  1052   000FA6                     EECON1          equ	4006	;# 
  1053   000FA7                     EECON2          equ	4007	;# 
  1054   000FA8                     EEDATA          equ	4008	;# 
  1055   000FA9                     EEADR           equ	4009	;# 
  1056   000FAA                     EEADRH          equ	4010	;# 
  1057   000FAB                     RCSTA           equ	4011	;# 
  1058   000FAB                     RCSTA1          equ	4011	;# 
  1059   000FAC                     TXSTA           equ	4012	;# 
  1060   000FAC                     TXSTA1          equ	4012	;# 
  1061   000FAD                     TXREG           equ	4013	;# 
  1062   000FAD                     TXREG1          equ	4013	;# 
  1063   000FAE                     RCREG           equ	4014	;# 
  1064   000FAE                     RCREG1          equ	4014	;# 
  1065   000FAF                     SPBRG           equ	4015	;# 
  1066   000FAF                     SPBRG1          equ	4015	;# 
  1067   000FB0                     SPBRGH          equ	4016	;# 
  1068   000FB1                     T3CON           equ	4017	;# 
  1069   000FB2                     TMR3            equ	4018	;# 
  1070   000FB2                     TMR3L           equ	4018	;# 
  1071   000FB3                     TMR3H           equ	4019	;# 
  1072   000FB4                     CVRCON2         equ	4020	;# 
  1073   000FB5                     CVRCON          equ	4021	;# 
  1074   000FB6                     ECCP1AS         equ	4022	;# 
  1075   000FB7                     PWM1CON         equ	4023	;# 
  1076   000FB8                     BAUDCON         equ	4024	;# 
  1077   000FB8                     BAUDCTL         equ	4024	;# 
  1078   000FB9                     PSTRCON         equ	4025	;# 
  1079   000FBA                     CCP2CON         equ	4026	;# 
  1080   000FBB                     CCPR2           equ	4027	;# 
  1081   000FBB                     CCPR2L          equ	4027	;# 
  1082   000FBC                     CCPR2H          equ	4028	;# 
  1083   000FBD                     CCP1CON         equ	4029	;# 
  1084   000FBE                     CCPR1           equ	4030	;# 
  1085   000FBE                     CCPR1L          equ	4030	;# 
  1086   000FBF                     CCPR1H          equ	4031	;# 
  1087   000FC0                     ADCON2          equ	4032	;# 
  1088   000FC1                     ADCON1          equ	4033	;# 
  1089   000FC2                     ADCON0          equ	4034	;# 
  1090   000FC3                     ADRES           equ	4035	;# 
  1091   000FC3                     ADRESL          equ	4035	;# 
  1092   000FC4                     ADRESH          equ	4036	;# 
  1093   000FC5                     SSPCON2         equ	4037	;# 
  1094   000FC6                     SSPCON1         equ	4038	;# 
  1095   000FC7                     SSPSTAT         equ	4039	;# 
  1096   000FC8                     SSPADD          equ	4040	;# 
  1097   000FC9                     SSPBUF          equ	4041	;# 
  1098   000FCA                     T2CON           equ	4042	;# 
  1099   000FCB                     PR2             equ	4043	;# 
  1100   000FCB                     MEMCON          equ	4043	;# 
  1101   000FCC                     TMR2            equ	4044	;# 
  1102   000FCD                     T1CON           equ	4045	;# 
  1103   000FCE                     TMR1            equ	4046	;# 
  1104   000FCE                     TMR1L           equ	4046	;# 
  1105   000FCF                     TMR1H           equ	4047	;# 
  1106   000FD0                     RCON            equ	4048	;# 
  1107   000FD1                     WDTCON          equ	4049	;# 
  1108   000FD2                     HLVDCON         equ	4050	;# 
  1109   000FD2                     LVDCON          equ	4050	;# 
  1110   000FD3                     OSCCON          equ	4051	;# 
  1111   000FD5                     T0CON           equ	4053	;# 
  1112   000FD6                     TMR0            equ	4054	;# 
  1113   000FD6                     TMR0L           equ	4054	;# 
  1114   000FD7                     TMR0H           equ	4055	;# 
  1115   000FD8                     STATUS          equ	4056	;# 
  1116   000FD9                     FSR2            equ	4057	;# 
  1117   000FD9                     FSR2L           equ	4057	;# 
  1118   000FDA                     FSR2H           equ	4058	;# 
  1119   000FDB                     PLUSW2          equ	4059	;# 
  1120   000FDC                     PREINC2         equ	4060	;# 
  1121   000FDD                     POSTDEC2        equ	4061	;# 
  1122   000FDE                     POSTINC2        equ	4062	;# 
  1123   000FDF                     INDF2           equ	4063	;# 
  1124   000FE0                     BSR             equ	4064	;# 
  1125   000FE1                     FSR1            equ	4065	;# 
  1126   000FE1                     FSR1L           equ	4065	;# 
  1127   000FE2                     FSR1H           equ	4066	;# 
  1128   000FE3                     PLUSW1          equ	4067	;# 
  1129   000FE4                     PREINC1         equ	4068	;# 
  1130   000FE5                     POSTDEC1        equ	4069	;# 
  1131   000FE6                     POSTINC1        equ	4070	;# 
  1132   000FE7                     INDF1           equ	4071	;# 
  1133   000FE8                     WREG            equ	4072	;# 
  1134   000FE9                     FSR0            equ	4073	;# 
  1135   000FE9                     FSR0L           equ	4073	;# 
  1136   000FEA                     FSR0H           equ	4074	;# 
  1137   000FEB                     PLUSW0          equ	4075	;# 
  1138   000FEC                     PREINC0         equ	4076	;# 
  1139   000FED                     POSTDEC0        equ	4077	;# 
  1140   000FEE                     POSTINC0        equ	4078	;# 
  1141   000FEF                     INDF0           equ	4079	;# 
  1142   000FF0                     INTCON3         equ	4080	;# 
  1143   000FF1                     INTCON2         equ	4081	;# 
  1144   000FF2                     INTCON          equ	4082	;# 
  1145   000FF3                     PROD            equ	4083	;# 
  1146   000FF3                     PRODL           equ	4083	;# 
  1147   000FF4                     PRODH           equ	4084	;# 
  1148   000FF5                     TABLAT          equ	4085	;# 
  1149   000FF6                     TBLPTR          equ	4086	;# 
  1150   000FF6                     TBLPTRL         equ	4086	;# 
  1151   000FF7                     TBLPTRH         equ	4087	;# 
  1152   000FF8                     TBLPTRU         equ	4088	;# 
  1153   000FF9                     PCLAT           equ	4089	;# 
  1154   000FF9                     PC              equ	4089	;# 
  1155   000FF9                     PCL             equ	4089	;# 
  1156   000FFA                     PCLATH          equ	4090	;# 
  1157   000FFB                     PCLATU          equ	4091	;# 
  1158   000FFC                     STKPTR          equ	4092	;# 
  1159   000FFD                     TOS             equ	4093	;# 
  1160   000FFD                     TOSL            equ	4093	;# 
  1161   000FFE                     TOSH            equ	4094	;# 
  1162   000FFF                     TOSU            equ	4095	;# 
  1163   000F77                     SSPMSK          equ	3959	;# 
  1164   000F78                     SLRCON          equ	3960	;# 
  1165   000F79                     CM2CON1         equ	3961	;# 
  1166   000F7A                     CM2CON0         equ	3962	;# 
  1167   000F7B                     CM1CON0         equ	3963	;# 
  1168   000F7C                     WPUB            equ	3964	;# 
  1169   000F7D                     IOCB            equ	3965	;# 
  1170   000F7E                     ANSEL           equ	3966	;# 
  1171   000F7F                     ANSELH          equ	3967	;# 
  1172   000F80                     PORTA           equ	3968	;# 
  1173   000F81                     PORTB           equ	3969	;# 
  1174   000F82                     PORTC           equ	3970	;# 
  1175   000F83                     PORTD           equ	3971	;# 
  1176   000F84                     PORTE           equ	3972	;# 
  1177   000F89                     LATA            equ	3977	;# 
  1178   000F8A                     LATB            equ	3978	;# 
  1179   000F8B                     LATC            equ	3979	;# 
  1180   000F8C                     LATD            equ	3980	;# 
  1181   000F8D                     LATE            equ	3981	;# 
  1182   000F92                     TRISA           equ	3986	;# 
  1183   000F92                     DDRA            equ	3986	;# 
  1184   000F93                     TRISB           equ	3987	;# 
  1185   000F93                     DDRB            equ	3987	;# 
  1186   000F94                     TRISC           equ	3988	;# 
  1187   000F94                     DDRC            equ	3988	;# 
  1188   000F95                     TRISD           equ	3989	;# 
  1189   000F95                     DDRD            equ	3989	;# 
  1190   000F96                     TRISE           equ	3990	;# 
  1191   000F96                     DDRE            equ	3990	;# 
  1192   000F9B                     OSCTUNE         equ	3995	;# 
  1193   000F9D                     PIE1            equ	3997	;# 
  1194   000F9E                     PIR1            equ	3998	;# 
  1195   000F9F                     IPR1            equ	3999	;# 
  1196   000FA0                     PIE2            equ	4000	;# 
  1197   000FA1                     PIR2            equ	4001	;# 
  1198   000FA2                     IPR2            equ	4002	;# 
  1199   000FA6                     EECON1          equ	4006	;# 
  1200   000FA7                     EECON2          equ	4007	;# 
  1201   000FA8                     EEDATA          equ	4008	;# 
  1202   000FA9                     EEADR           equ	4009	;# 
  1203   000FAA                     EEADRH          equ	4010	;# 
  1204   000FAB                     RCSTA           equ	4011	;# 
  1205   000FAB                     RCSTA1          equ	4011	;# 
  1206   000FAC                     TXSTA           equ	4012	;# 
  1207   000FAC                     TXSTA1          equ	4012	;# 
  1208   000FAD                     TXREG           equ	4013	;# 
  1209   000FAD                     TXREG1          equ	4013	;# 
  1210   000FAE                     RCREG           equ	4014	;# 
  1211   000FAE                     RCREG1          equ	4014	;# 
  1212   000FAF                     SPBRG           equ	4015	;# 
  1213   000FAF                     SPBRG1          equ	4015	;# 
  1214   000FB0                     SPBRGH          equ	4016	;# 
  1215   000FB1                     T3CON           equ	4017	;# 
  1216   000FB2                     TMR3            equ	4018	;# 
  1217   000FB2                     TMR3L           equ	4018	;# 
  1218   000FB3                     TMR3H           equ	4019	;# 
  1219   000FB4                     CVRCON2         equ	4020	;# 
  1220   000FB5                     CVRCON          equ	4021	;# 
  1221   000FB6                     ECCP1AS         equ	4022	;# 
  1222   000FB7                     PWM1CON         equ	4023	;# 
  1223   000FB8                     BAUDCON         equ	4024	;# 
  1224   000FB8                     BAUDCTL         equ	4024	;# 
  1225   000FB9                     PSTRCON         equ	4025	;# 
  1226   000FBA                     CCP2CON         equ	4026	;# 
  1227   000FBB                     CCPR2           equ	4027	;# 
  1228   000FBB                     CCPR2L          equ	4027	;# 
  1229   000FBC                     CCPR2H          equ	4028	;# 
  1230   000FBD                     CCP1CON         equ	4029	;# 
  1231   000FBE                     CCPR1           equ	4030	;# 
  1232   000FBE                     CCPR1L          equ	4030	;# 
  1233   000FBF                     CCPR1H          equ	4031	;# 
  1234   000FC0                     ADCON2          equ	4032	;# 
  1235   000FC1                     ADCON1          equ	4033	;# 
  1236   000FC2                     ADCON0          equ	4034	;# 
  1237   000FC3                     ADRES           equ	4035	;# 
  1238   000FC3                     ADRESL          equ	4035	;# 
  1239   000FC4                     ADRESH          equ	4036	;# 
  1240   000FC5                     SSPCON2         equ	4037	;# 
  1241   000FC6                     SSPCON1         equ	4038	;# 
  1242   000FC7                     SSPSTAT         equ	4039	;# 
  1243   000FC8                     SSPADD          equ	4040	;# 
  1244   000FC9                     SSPBUF          equ	4041	;# 
  1245   000FCA                     T2CON           equ	4042	;# 
  1246   000FCB                     PR2             equ	4043	;# 
  1247   000FCB                     MEMCON          equ	4043	;# 
  1248   000FCC                     TMR2            equ	4044	;# 
  1249   000FCD                     T1CON           equ	4045	;# 
  1250   000FCE                     TMR1            equ	4046	;# 
  1251   000FCE                     TMR1L           equ	4046	;# 
  1252   000FCF                     TMR1H           equ	4047	;# 
  1253   000FD0                     RCON            equ	4048	;# 
  1254   000FD1                     WDTCON          equ	4049	;# 
  1255   000FD2                     HLVDCON         equ	4050	;# 
  1256   000FD2                     LVDCON          equ	4050	;# 
  1257   000FD3                     OSCCON          equ	4051	;# 
  1258   000FD5                     T0CON           equ	4053	;# 
  1259   000FD6                     TMR0            equ	4054	;# 
  1260   000FD6                     TMR0L           equ	4054	;# 
  1261   000FD7                     TMR0H           equ	4055	;# 
  1262   000FD8                     STATUS          equ	4056	;# 
  1263   000FD9                     FSR2            equ	4057	;# 
  1264   000FD9                     FSR2L           equ	4057	;# 
  1265   000FDA                     FSR2H           equ	4058	;# 
  1266   000FDB                     PLUSW2          equ	4059	;# 
  1267   000FDC                     PREINC2         equ	4060	;# 
  1268   000FDD                     POSTDEC2        equ	4061	;# 
  1269   000FDE                     POSTINC2        equ	4062	;# 
  1270   000FDF                     INDF2           equ	4063	;# 
  1271   000FE0                     BSR             equ	4064	;# 
  1272   000FE1                     FSR1            equ	4065	;# 
  1273   000FE1                     FSR1L           equ	4065	;# 
  1274   000FE2                     FSR1H           equ	4066	;# 
  1275   000FE3                     PLUSW1          equ	4067	;# 
  1276   000FE4                     PREINC1         equ	4068	;# 
  1277   000FE5                     POSTDEC1        equ	4069	;# 
  1278   000FE6                     POSTINC1        equ	4070	;# 
  1279   000FE7                     INDF1           equ	4071	;# 
  1280   000FE8                     WREG            equ	4072	;# 
  1281   000FE9                     FSR0            equ	4073	;# 
  1282   000FE9                     FSR0L           equ	4073	;# 
  1283   000FEA                     FSR0H           equ	4074	;# 
  1284   000FEB                     PLUSW0          equ	4075	;# 
  1285   000FEC                     PREINC0         equ	4076	;# 
  1286   000FED                     POSTDEC0        equ	4077	;# 
  1287   000FEE                     POSTINC0        equ	4078	;# 
  1288   000FEF                     INDF0           equ	4079	;# 
  1289   000FF0                     INTCON3         equ	4080	;# 
  1290   000FF1                     INTCON2         equ	4081	;# 
  1291   000FF2                     INTCON          equ	4082	;# 
  1292   000FF3                     PROD            equ	4083	;# 
  1293   000FF3                     PRODL           equ	4083	;# 
  1294   000FF4                     PRODH           equ	4084	;# 
  1295   000FF5                     TABLAT          equ	4085	;# 
  1296   000FF6                     TBLPTR          equ	4086	;# 
  1297   000FF6                     TBLPTRL         equ	4086	;# 
  1298   000FF7                     TBLPTRH         equ	4087	;# 
  1299   000FF8                     TBLPTRU         equ	4088	;# 
  1300   000FF9                     PCLAT           equ	4089	;# 
  1301   000FF9                     PC              equ	4089	;# 
  1302   000FF9                     PCL             equ	4089	;# 
  1303   000FFA                     PCLATH          equ	4090	;# 
  1304   000FFB                     PCLATU          equ	4091	;# 
  1305   000FFC                     STKPTR          equ	4092	;# 
  1306   000FFD                     TOS             equ	4093	;# 
  1307   000FFD                     TOSL            equ	4093	;# 
  1308   000FFE                     TOSH            equ	4094	;# 
  1309   000FFF                     TOSU            equ	4095	;# 
  1310                           
  1311                           	psect	smallconst
  1312   001000                     __psmallconst:
  1313                           	callstack 0
  1314   001000  00                 	db	0
  1315   001001                     _default_security_key:
  1316                           	callstack 0
  1317   001001  00                 	db	0
  1318   001002  10                 	db	16
  1319   001003  25                 	db	37
  1320   001004  37                 	db	55
  1321   001005  04                 	db	4
  1322   001006  55                 	db	85
  1323   001007  06                 	db	6
  1324   001008  79                 	db	121
  1325   001009  08                 	db	8
  1326   00100A  09                 	db	9
  1327   00100B  10                 	db	16
  1328   00100C  11                 	db	17
  1329   00100D  12                 	db	18
  1330   00100E  13                 	db	19
  1331   00100F  14                 	db	20
  1332   001010  15                 	db	21
  1333   001011                     __end_of_default_security_key:
  1334                           	callstack 0
  1335   001011                     _default_mac_address:
  1336                           	callstack 0
  1337   001011  11                 	db	17
  1338   001012  28                 	db	40
  1339   001013  35                 	db	53
  1340   001014  44                 	db	68
  1341   001015  56                 	db	86
  1342   001016  66                 	db	102
  1343   001017  77                 	db	119
  1344   001018  01                 	db	1
  1345   001019                     __end_of_default_mac_address:
  1346                           	callstack 0
  1347   007CF0                     _TMR1IF         set	31984
  1348   007E68                     _TMR1ON         set	32360
  1349   007E69                     _TMR1CS         set	32361
  1350   007E6B                     _T1OSCEN        set	32363
  1351   007E6A                     _T1SYNC         set	32362
  1352   007E6D                     _T1CKPS1        set	32365
  1353   007E6C                     _T1CKPS0        set	32364
  1354   007E6F                     _T1RD16         set	32367
  1355   007F8F                     _RBPU           set	32655
  1356   007CED                     _RCIE           set	31981
  1357   007CEE                     _ADIE           set	31982
  1358   007D03                     _BCLIE          set	32003
  1359   007CEB                     _SSPIE          set	31979
  1360   007D04                     _EEIE           set	32004
  1361   007D00                     _CCP2IE         set	32000
  1362   007CEA                     _CCP1IE         set	31978
  1363   007CE9                     _TMR2IE         set	31977
  1364   007CE8                     _TMR1IE         set	31976
  1365   007F95                     _T0IE           set	32661
  1366   007F93                     _RBIE           set	32659
  1367   007F94                     _INT0E          set	32660
  1368   007F96                     _PEIE           set	32662
  1369   007F97                     _GIE            set	32663
  1370   007E87                     _IPEN           set	32391
  1371   000FCF                     _TMR1H          set	4047
  1372   000FCE                     _TMR1L          set	4046
  1373   000F9B                     _OSCTUNE        set	3995
  1374   000FD3                     _OSCCON         set	4051
  1375   000F95                     _TRISDbits      set	3989
  1376   000F96                     _TRISEbits      set	3990
  1377   000F93                     _TRISBbits      set	3987
  1378   000F84                     _PORTE          set	3972
  1379   000F83                     _PORTD          set	3971
  1380   000F82                     _PORTC          set	3970
  1381   000F81                     _PORTB          set	3969
  1382   000F80                     _PORTA          set	3968
  1383   000F8D                     _LATEbits       set	3981
  1384   000F82                     _PORTCbits      set	3970
  1385   000FC9                     _SSPBUF         set	4041
  1386   000F9E                     _PIR1bits       set	3998
  1387   000FC6                     _SSPCON1bits    set	4038
  1388   000FC6                     _SSPCON1        set	4038
  1389   000FC7                     _SSPSTATbits    set	4039
  1390   000F94                     _TRISCbits      set	3988
  1391   000F81                     _PORTBbits      set	3969
  1392   000F8C                     _LATDbits       set	3980
  1393   000F8B                     _LATCbits       set	3979
  1394   001019                     STR_5:
  1395   001019  4C                 	db	76	;'L'
  1396   00101A  65                 	db	101	;'e'
  1397   00101B  64                 	db	100	;'d'
  1398   00101C  20                 	db	32
  1399   00101D  65                 	db	101	;'e'
  1400   00101E  6E                 	db	110	;'n'
  1401   00101F  63                 	db	99	;'c'
  1402   001020  65                 	db	101	;'e'
  1403   001021  6E                 	db	110	;'n'
  1404   001022  64                 	db	100	;'d'
  1405   001023  69                 	db	105	;'i'
  1406   001024  64                 	db	100	;'d'
  1407   001025  6F                 	db	111	;'o'
  1408   001026  00                 	db	0
  1409   001027                     STR_8:
  1410   001027  4C                 	db	76	;'L'
  1411   001028  65                 	db	101	;'e'
  1412   001029  64                 	db	100	;'d'
  1413   00102A  20                 	db	32
  1414   00102B  61                 	db	97	;'a'
  1415   00102C  70                 	db	112	;'p'
  1416   00102D  61                 	db	97	;'a'
  1417   00102E  67                 	db	103	;'g'
  1418   00102F  61                 	db	97	;'a'
  1419   001030  64                 	db	100	;'d'
  1420   001031  6F                 	db	111	;'o'
  1421   001032  00                 	db	0
  1422   001033                     STR_15:
  1423   001033  43                 	db	67	;'C'
  1424   001034  6D                 	db	109	;'m'
  1425   001035  64                 	db	100	;'d'
  1426   001036  20                 	db	32
  1427   001037  65                 	db	101	;'e'
  1428   001038  72                 	db	114	;'r'
  1429   001039  72                 	db	114	;'r'
  1430   00103A  6F                 	db	111	;'o'
  1431   00103B  72                 	db	114	;'r'
  1432   00103C  2E                 	db	46
  1433   00103D  00                 	db	0
  1434   00103E                     STR_6:
  1435   00103E  43                 	db	67	;'C'
  1436   00103F  4D                 	db	77	;'M'
  1437   001040  44                 	db	68	;'D'
  1438   001041  3A                 	db	58	;':'
  1439   001042  41                 	db	65	;'A'
  1440   001043  4C                 	db	76	;'L'
  1441   001044  41                 	db	65	;'A'
  1442   001045  00                 	db	0
  1443   001046                     STR_3:
  1444   001046  43                 	db	67	;'C'
  1445   001047  4D                 	db	77	;'M'
  1446   001048  44                 	db	68	;'D'
  1447   001049  3A                 	db	58	;':'
  1448   00104A  50                 	db	80	;'P'
  1449   00104B  4C                 	db	76	;'L'
  1450   00104C  41                 	db	65	;'A'
  1451   00104D  00                 	db	0
  1452   00104E                     STR_12:
  1453   00104E  43                 	db	67	;'C'
  1454   00104F  4D                 	db	77	;'M'
  1455   001050  44                 	db	68	;'D'
  1456   001051  3A                 	db	58	;':'
  1457   001052  41                 	db	65	;'A'
  1458   001053  4C                 	db	76	;'L'
  1459   001054  52                 	db	82	;'R'
  1460   001055  00                 	db	0
  1461   001056                     STR_9:
  1462   001056  43                 	db	67	;'C'
  1463   001057  4D                 	db	77	;'M'
  1464   001058  44                 	db	68	;'D'
  1465   001059  3A                 	db	58	;':'
  1466   00105A  50                 	db	80	;'P'
  1467   00105B  4C                 	db	76	;'L'
  1468   00105C  52                 	db	82	;'R'
  1469   00105D  00                 	db	0
  1470   00105E                     STR_2:
  1471   00105E  43                 	db	67	;'C'
  1472   00105F  4D                 	db	77	;'M'
  1473   001060  44                 	db	68	;'D'
  1474   001061  3A                 	db	58	;':'
  1475   001062  41                 	db	65	;'A'
  1476   001063  4C                 	db	76	;'L'
  1477   001064  56                 	db	86	;'V'
  1478   001065  00                 	db	0
  1479   001066                     STR_1:
  1480   001066  43                 	db	67	;'C'
  1481   001067  4D                 	db	77	;'M'
  1482   001068  44                 	db	68	;'D'
  1483   001069  3A                 	db	58	;':'
  1484   00106A  50                 	db	80	;'P'
  1485   00106B  4C                 	db	76	;'L'
  1486   00106C  56                 	db	86	;'V'
  1487   00106D  00                 	db	0
  1488   001019                     STR_11          equ	STR_5
  1489   001027                     STR_14          equ	STR_8
  1490   001056                     STR_10          equ	STR_9
  1491   00104E                     STR_13          equ	STR_12
  1492   001046                     STR_4           equ	STR_3
  1493   00103E                     STR_7           equ	STR_6
  1494   00106E  00                 	db	0	; dummy byte at the end
  1495   000002                     __activetblptr  equ	2
  1496                           
  1497                           ; #config settings
  1498                           
  1499                           	psect	cinit
  1500   001BC0                     __pcinit:
  1501                           	callstack 0
  1502   001BC0                     start_initialization:
  1503                           	callstack 0
  1504   001BC0                     __initialization:
  1505                           	callstack 0
  1506                           
  1507                           ; Clear objects allocated to BANK0 (90 bytes)
  1508   001BC0  EE00  F060         	lfsr	0,__pbssBANK0
  1509   001BC4  0E5A               	movlw	90
  1510   001BC6                     clear_0:
  1511   001BC6  6AEE               	clrf	postinc0,c
  1512   001BC8  06E8               	decf	wreg,f,c
  1513   001BCA  E1FD               	bnz	clear_0
  1514                           
  1515                           ; Clear objects allocated to COMRAM (14 bytes)
  1516   001BCC  EE00  F032         	lfsr	0,__pbssCOMRAM
  1517   001BD0  0E0E               	movlw	14
  1518   001BD2                     clear_1:
  1519   001BD2  6AEE               	clrf	postinc0,c
  1520   001BD4  06E8               	decf	wreg,f,c
  1521   001BD6  E1FD               	bnz	clear_1
  1522   001BD8                     end_of_initialization:
  1523                           	callstack 0
  1524   001BD8                     __end_of__initialization:
  1525                           	callstack 0
  1526   001BD8  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1527   001BDA  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1528   001BDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1529   001BDE  6EF8               	movwf	tblptru,c
  1530   001BE0  0100               	movlb	0
  1531   001BE2  EF38  F008         	goto	_main	;jump to C main() function
  1532                           
  1533                           	psect	bssCOMRAM
  1534   000032                     __pbssCOMRAM:
  1535                           	callstack 0
  1536   000032                     _data_out_s:
  1537                           	callstack 0
  1538   000032                     	ds	8
  1539   00003A                     _timeStamp:
  1540                           	callstack 0
  1541   00003A                     	ds	4
  1542   00003E                     _estadoActual:
  1543                           	callstack 0
  1544   00003E                     	ds	1
  1545   00003F                     _long_mac_address_e:
  1546                           	callstack 0
  1547   00003F                     	ds	1
  1548                           
  1549                           	psect	bssBANK0
  1550   000060                     __pbssBANK0:
  1551                           	callstack 0
  1552   000060                     _data_in_s:
  1553                           	callstack 0
  1554   000060                     	ds	56
  1555   000098                     _data_config_s:
  1556                           	callstack 0
  1557   000098                     	ds	34
  1558                           
  1559                           	psect	cstackCOMRAM
  1560   000001                     __pcstackCOMRAM:
  1561                           	callstack 0
  1562   000001                     ?_strlen:
  1563                           	callstack 0
  1564   000001                     ?_MRF24GetMiAddr:
  1565                           	callstack 0
  1566   000001                     SetCSPin@estado:
  1567                           	callstack 0
  1568   000001                     SetWakePin@estado:
  1569                           	callstack 0
  1570   000001                     SetResetPin@estado:
  1571                           	callstack 0
  1572   000001                     SPIWriteByte@dato:
  1573                           	callstack 0
  1574   000001                     DelayInit@delay:
  1575                           	callstack 0
  1576   000001                     DelayReset@delay:
  1577                           	callstack 0
  1578   000001                     DelayIsRunning@delay:
  1579                           	callstack 0
  1580   000001                     strlen@s:
  1581                           	callstack 0
  1582   000001                     strncpy@d:
  1583                           	callstack 0
  1584   000001                     MRF24SetDireccionDestino@direccion:
  1585                           	callstack 0
  1586   000001                     MRF24SetPANIDDestino@panid:
  1587                           	callstack 0
  1588   000001                     
  1589                           ; 1 bytes @ 0x0
  1590   000001                     	ds	1
  1591   000002                     WriteByteSPIPort@dato:
  1592                           	callstack 0
  1593   000002                     DelayRead@delay:
  1594                           	callstack 0
  1595   000002                     strncpy@s:
  1596                           	callstack 0
  1597   000002                     SPIWrite2Byte@dato:
  1598                           	callstack 0
  1599   000002                     DelayInit@duration:
  1600                           	callstack 0
  1601   000002                     
  1602                           ; 1 bytes @ 0x1
  1603   000002                     	ds	1
  1604   000003                     ?_strcmp:
  1605                           	callstack 0
  1606   000003                     SetShortAddr@valor:
  1607                           	callstack 0
  1608   000003                     GetShortAddr@leido_spi:
  1609                           	callstack 0
  1610   000003                     strcmp@l:
  1611                           	callstack 0
  1612   000003                     strlen@a:
  1613                           	callstack 0
  1614   000003                     MRF24SetDireccionOrigen@direccion:
  1615                           	callstack 0
  1616   000003                     strncpy@n:
  1617                           	callstack 0
  1618   000003                     ??_DelayRead:
  1619   000003                     
  1620                           ; 1 bytes @ 0x2
  1621   000003                     	ds	1
  1622   000004                     SetShortAddr@reg_address:
  1623                           	callstack 0
  1624   000004                     GetShortAddr@reg_address:
  1625                           	callstack 0
  1626   000004                     MRF24SetMensajeSalida@mensaje:
  1627                           	callstack 0
  1628   000004                     strcmp@r:
  1629                           	callstack 0
  1630   000004                     Write2ByteSPIPort@dato:
  1631                           	callstack 0
  1632   000004                     
  1633                           ; 1 bytes @ 0x3
  1634   000004                     	ds	1
  1635   000005                     SetDeviceMACAddress@i:
  1636                           	callstack 0
  1637   000005                     ??_strncpy:
  1638   000005                     ??_strcmp:
  1639   000005                     
  1640                           ; 1 bytes @ 0x4
  1641   000005                     	ds	1
  1642   000006                     DebounceFSMInit@antirrebote_boton_n:
  1643                           	callstack 0
  1644   000006                     strncpy@cp:
  1645                           	callstack 0
  1646   000006                     SetLongAddr@reg_address:
  1647                           	callstack 0
  1648   000006                     GetLongAddr@reg_address:
  1649                           	callstack 0
  1650   000006                     
  1651                           ; 1 bytes @ 0x5
  1652   000006                     	ds	1
  1653   000007                     
  1654                           ; 1 bytes @ 0x6
  1655   000007                     	ds	1
  1656   000008                     SetLongAddr@valor:
  1657                           	callstack 0
  1658   000008                     ??_GetLongAddr:
  1659                           
  1660                           ; 1 bytes @ 0x7
  1661   000008                     	ds	1
  1662   000009                     ??_SetLongAddr:
  1663                           
  1664                           ; 1 bytes @ 0x8
  1665   000009                     	ds	1
  1666   00000A                     GetLongAddr@respuesta:
  1667                           	callstack 0
  1668                           
  1669                           ; 1 bytes @ 0x9
  1670   00000A                     	ds	1
  1671   00000B                     ??_SetChannel:
  1672   00000B                     ??_MRF24TransmitirDato:
  1673   00000B                     ??_MRF24ReciboPaquete:
  1674                           
  1675                           ; 1 bytes @ 0xA
  1676   00000B                     	ds	4
  1677   00000F                     DebounceFSMUpdate@antirrebote_boton_n:
  1678                           	callstack 0
  1679   00000F                     ??_InicializoMRF24:
  1680                           
  1681                           ; 1 bytes @ 0xE
  1682   00000F                     	ds	1
  1683   000010                     MRF24TransmitirDato@i:
  1684                           	callstack 0
  1685   000010                     MRF24ReciboPaquete@largo_mensaje:
  1686                           	callstack 0
  1687   000010                     DebounceFSMUpdate@estado_pin:
  1688                           	callstack 0
  1689                           
  1690                           ; 1 bytes @ 0xF
  1691   000010                     	ds	1
  1692   000011                     InicializoMRF24@lectura:
  1693                           	callstack 0
  1694   000011                     MRF24TransmitirDato@pos_mem:
  1695                           	callstack 0
  1696   000011                     MRF24ReciboPaquete@index:
  1697                           	callstack 0
  1698   000011                     ??_DebounceFSMUpdate:
  1699                           
  1700                           ; 1 bytes @ 0x10
  1701   000011                     	ds	1
  1702   000012                     InicializoMRF24@delay_time_out:
  1703                           	callstack 0
  1704                           
  1705                           ; 9 bytes @ 0x11
  1706   000012                     	ds	9
  1707   00001B                     ??_MRF24J40Init:
  1708                           
  1709                           ; 1 bytes @ 0x1A
  1710   00001B                     	ds	1
  1711   00001C                     ??_main:
  1712                           
  1713                           ; 1 bytes @ 0x1B
  1714   00001C                     	ds	2
  1715   00001E                     main@delay_parpadeo:
  1716                           	callstack 0
  1717                           
  1718                           ; 9 bytes @ 0x1D
  1719   00001E                     	ds	9
  1720   000027                     main@boton1:
  1721                           	callstack 0
  1722                           
  1723                           ; 11 bytes @ 0x26
  1724   000027                     	ds	11
  1725                           
  1726 ;;
  1727 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1728 ;;
  1729 ;; *************** function _main *****************
  1730 ;; Defined at:
  1731 ;;		line 28 in file "main.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;  boton1         11   38[COMRAM] struct .
  1736 ;;  delay_parpad    9   29[COMRAM] struct .
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1750 ;;Total ram usage:       22 bytes
  1751 ;; Hardware stack levels required when called: 8
  1752 ;; This function calls:
  1753 ;;		_BoardInit
  1754 ;;		_DebounceFSMInit
  1755 ;;		_DebounceFSMUpdate
  1756 ;;		_DelayInit
  1757 ;;		_DelayRead
  1758 ;;		_MRF24GetMensajeEntrada
  1759 ;;		_MRF24GetMiAddr
  1760 ;;		_MRF24IsNewMsg
  1761 ;;		_MRF24J40Init
  1762 ;;		_MRF24ReciboPaquete
  1763 ;;		_MRF24SetDireccionDestino
  1764 ;;		_MRF24SetDireccionOrigen
  1765 ;;		_MRF24SetMensajeSalida
  1766 ;;		_MRF24SetPANIDDestino
  1767 ;;		_MRF24TransmitirDato
  1768 ;;		_strcmp
  1769 ;; This function is called by:
  1770 ;;		Startup code after reset
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text0
  1775   001070                     __ptext0:
  1776                           	callstack 0
  1777   001070                     _main:
  1778                           	callstack 23
  1779   001070                     
  1780                           ;main.c: 30:     delayNoBloqueanteData delay_parpadeo;;main.c: 31:     debounceData_t bo
      +                          ton1;;main.c: 32:  DebounceFSMInit(&boton1);
  1781   001070  0E27               	movlw	low main@boton1
  1782   001072  6E06               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  1783   001074  EC88  F00D         	call	_DebounceFSMInit	;wreg free
  1784   001078                     
  1785                           ;main.c: 33:     BoardInit();
  1786   001078  EC87  F00C         	call	_BoardInit	;wreg free
  1787   00107C                     
  1788                           ;main.c: 34:     MRF24J40Init();
  1789   00107C  EC1B  F00D         	call	_MRF24J40Init	;wreg free
  1790   001080                     
  1791                           ;main.c: 35:     DelayInit(&delay_parpadeo, 1000);
  1792   001080  0E1E               	movlw	low main@delay_parpadeo
  1793   001082  6E01               	movwf	DelayInit@delay^0,c
  1794   001084  0EE8               	movlw	232
  1795   001086  6E02               	movwf	DelayInit@duration^0,c
  1796   001088  0E03               	movlw	3
  1797   00108A  6E03               	movwf	(DelayInit@duration+1)^0,c
  1798   00108C  0E00               	movlw	0
  1799   00108E  6E04               	movwf	(DelayInit@duration+2)^0,c
  1800   001090  0E00               	movlw	0
  1801   001092  6E05               	movwf	(DelayInit@duration+3)^0,c
  1802   001094  ECCC  F00D         	call	_DelayInit	;wreg free
  1803   001098                     
  1804                           ;main.c: 36:     MRF24SetDireccionDestino(0x1111);
  1805   001098  0E11               	movlw	17
  1806   00109A  6E02               	movwf	(MRF24SetDireccionDestino@direccion+1)^0,c
  1807   00109C  0E11               	movlw	17
  1808   00109E  6E01               	movwf	MRF24SetDireccionDestino@direccion^0,c
  1809   0010A0  EC47  F00E         	call	_MRF24SetDireccionDestino	;wreg free
  1810   0010A4                     
  1811                           ;main.c: 37:     MRF24SetPANIDDestino(0X1234);
  1812   0010A4  0E12               	movlw	18
  1813   0010A6  6E02               	movwf	(MRF24SetPANIDDestino@panid+1)^0,c
  1814   0010A8  0E34               	movlw	52
  1815   0010AA  6E01               	movwf	MRF24SetPANIDDestino@panid^0,c
  1816   0010AC  EC29  F00E         	call	_MRF24SetPANIDDestino	;wreg free
  1817   0010B0                     
  1818                           ;main.c: 38:     MRF24SetDireccionOrigen(MRF24GetMiAddr());
  1819   0010B0  ECBC  F00E         	call	_MRF24GetMiAddr	;wreg free
  1820   0010B4  C001  F003         	movff	?_MRF24GetMiAddr,MRF24SetDireccionOrigen@direccion
  1821   0010B8  C002  F004         	movff	?_MRF24GetMiAddr+1,MRF24SetDireccionOrigen@direccion+1
  1822   0010BC  EC38  F00E         	call	_MRF24SetDireccionOrigen	;wreg free
  1823   0010C0                     l305:
  1824   0010C0  0004               	clrwdt		;# 
  1825                           
  1826                           ;main.c: 43:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  1827   0010C2  EF71  F008         	goto	l2362
  1828   0010C6                     l2352:
  1829                           
  1830                           ;main.c: 47:                 MRF24SetMensajeSalida("CMD:PLV");
  1831   0010C6  0E66               	movlw	low STR_1
  1832   0010C8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1833   0010CA  ECFB  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1834   0010CE                     l2354:
  1835                           
  1836                           ;main.c: 48:                 MRF24TransmitirDato();
  1837   0010CE  ECF3  F009         	call	_MRF24TransmitirDato	;wreg free
  1838                           
  1839                           ;main.c: 49:     break;
  1840   0010D2  EF93  F008         	goto	l2364
  1841   0010D6                     l2356:
  1842                           
  1843                           ;main.c: 53:                 MRF24SetMensajeSalida("CMD:ALV");
  1844   0010D6  0E5E               	movlw	low STR_2
  1845   0010D8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1846   0010DA  ECFB  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1847   0010DE  EF67  F008         	goto	l2354
  1848   0010E2                     l2362:
  1849   0010E2  0E27               	movlw	low main@boton1
  1850   0010E4  6E0F               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  1851   0010E6  B482               	btfsc	130,2,c	;volatile
  1852   0010E8  EF78  F008         	goto	u871
  1853   0010EC  EF7B  F008         	goto	u870
  1854   0010F0                     u871:
  1855   0010F0  0E01               	movlw	1
  1856   0010F2  EF7C  F008         	goto	u876
  1857   0010F6                     u870:
  1858   0010F6  0E00               	movlw	0
  1859   0010F8                     u876:
  1860   0010F8  6E10               	movwf	DebounceFSMUpdate@estado_pin^0,c
  1861   0010FA  EC94  F00A         	call	_DebounceFSMUpdate	;wreg free
  1862   0010FE  6E1C               	movwf	??_main^0,c
  1863   001100  6A1D               	clrf	(??_main+1)^0,c
  1864                           
  1865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1866                           ; Switch size 1, requested type "simple"
  1867                           ; Number of cases is 1, Range of values is 0 to 0
  1868                           ; switch strategies available:
  1869                           ; Name         Instructions Cycles
  1870                           ; simple_byte            4     3 (average)
  1871                           ;	Chosen strategy is simple_byte
  1872   001102  501D               	movf	(??_main+1)^0,w,c
  1873   001104  0A00               	xorlw	0	; case 0
  1874   001106  B4D8               	btfsc	status,2,c
  1875   001108  EF88  F008         	goto	l2456
  1876   00110C  EF93  F008         	goto	l2364
  1877   001110                     l2456:
  1878                           
  1879                           ; Switch size 1, requested type "simple"
  1880                           ; Number of cases is 2, Range of values is 1 to 2
  1881                           ; switch strategies available:
  1882                           ; Name         Instructions Cycles
  1883                           ; simple_byte            7     4 (average)
  1884                           ;	Chosen strategy is simple_byte
  1885   001110  501C               	movf	??_main^0,w,c
  1886   001112  0A01               	xorlw	1	; case 1
  1887   001114  B4D8               	btfsc	status,2,c
  1888   001116  EF63  F008         	goto	l2352
  1889   00111A  0A03               	xorlw	3	; case 2
  1890   00111C  B4D8               	btfsc	status,2,c
  1891   00111E  EF6B  F008         	goto	l2356
  1892   001122  EF93  F008         	goto	l2364
  1893   001126                     l2364:
  1894                           
  1895                           ;main.c: 62:         if(MRF24IsNewMsg() == MSG_PRESENTE) {
  1896   001126  EC6E  F00D         	call	_MRF24IsNewMsg	;wreg free
  1897   00112A  0A03               	xorlw	3
  1898   00112C  A4D8               	btfss	status,2,c
  1899   00112E  EF9B  F008         	goto	u881
  1900   001132  EF9D  F008         	goto	u880
  1901   001136                     u881:
  1902   001136  EF01  F009         	goto	l2396
  1903   00113A                     u880:
  1904   00113A                     
  1905                           ;main.c: 64:             MRF24ReciboPaquete();
  1906   00113A  EC88  F00B         	call	_MRF24ReciboPaquete	;wreg free
  1907   00113E                     
  1908                           ;main.c: 66:    if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLA")) {
  1909   00113E  ECC4  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1910   001142  6E03               	movwf	strcmp@l^0,c
  1911   001144  0E46               	movlw	low STR_3
  1912   001146  6E04               	movwf	strcmp@r^0,c
  1913   001148  EC54  F00C         	call	_strcmp	;wreg free
  1914   00114C  5003               	movf	?_strcmp^0,w,c
  1915   00114E  1004               	iorwf	(?_strcmp+1)^0,w,c
  1916   001150  A4D8               	btfss	status,2,c
  1917   001152  EFAD  F008         	goto	u891
  1918   001156  EFAF  F008         	goto	u890
  1919   00115A                     u891:
  1920   00115A  EFB6  F008         	goto	l2374
  1921   00115E                     u890:
  1922   00115E                     
  1923                           ;main.c: 68:     LATEbits.LATE1 = 0;
  1924   00115E  928D               	bcf	141,1,c	;volatile
  1925   001160                     
  1926                           ;main.c: 69:                 MRF24SetMensajeSalida("Led encendido");
  1927   001160  0E19               	movlw	low STR_5
  1928   001162  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1929   001164  ECFB  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1930                           
  1931                           ;main.c: 70:    } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALA")) {
  1932   001168  EFFF  F008         	goto	l2394
  1933   00116C                     l2374:
  1934   00116C  ECC4  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1935   001170  6E03               	movwf	strcmp@l^0,c
  1936   001172  0E3E               	movlw	low STR_6
  1937   001174  6E04               	movwf	strcmp@r^0,c
  1938   001176  EC54  F00C         	call	_strcmp	;wreg free
  1939   00117A  5003               	movf	?_strcmp^0,w,c
  1940   00117C  1004               	iorwf	(?_strcmp+1)^0,w,c
  1941   00117E  A4D8               	btfss	status,2,c
  1942   001180  EFC4  F008         	goto	u901
  1943   001184  EFC6  F008         	goto	u900
  1944   001188                     u901:
  1945   001188  EFCD  F008         	goto	l2380
  1946   00118C                     u900:
  1947   00118C                     
  1948                           ;main.c: 72:     LATEbits.LATE1 = 1;
  1949   00118C  828D               	bsf	141,1,c	;volatile
  1950   00118E                     
  1951                           ;main.c: 73:                 MRF24SetMensajeSalida("Led apagado");
  1952   00118E  0E27               	movlw	low STR_8
  1953   001190  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1954   001192  ECFB  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1955                           
  1956                           ;main.c: 74:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLR")) 
      +                          {
  1957   001196  EFFF  F008         	goto	l2394
  1958   00119A                     l2380:
  1959   00119A  ECC4  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1960   00119E  6E03               	movwf	strcmp@l^0,c
  1961   0011A0  0E56               	movlw	low STR_9
  1962   0011A2  6E04               	movwf	strcmp@r^0,c
  1963   0011A4  EC54  F00C         	call	_strcmp	;wreg free
  1964   0011A8  5003               	movf	?_strcmp^0,w,c
  1965   0011AA  1004               	iorwf	(?_strcmp+1)^0,w,c
  1966   0011AC  A4D8               	btfss	status,2,c
  1967   0011AE  EFDB  F008         	goto	u911
  1968   0011B2  EFDD  F008         	goto	u910
  1969   0011B6                     u911:
  1970   0011B6  EFE4  F008         	goto	l2386
  1971   0011BA                     u910:
  1972   0011BA                     
  1973                           ;main.c: 76:     LATEbits.LATE2 = 0;
  1974   0011BA  948D               	bcf	141,2,c	;volatile
  1975   0011BC                     
  1976                           ;main.c: 77:                 MRF24SetMensajeSalida("Led encendido");
  1977   0011BC  0E19               	movlw	low STR_5
  1978   0011BE  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1979   0011C0  ECFB  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1980                           
  1981                           ;main.c: 78:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALR")) 
      +                          {
  1982   0011C4  EFFF  F008         	goto	l2394
  1983   0011C8                     l2386:
  1984   0011C8  ECC4  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1985   0011CC  6E03               	movwf	strcmp@l^0,c
  1986   0011CE  0E4E               	movlw	low STR_12
  1987   0011D0  6E04               	movwf	strcmp@r^0,c
  1988   0011D2  EC54  F00C         	call	_strcmp	;wreg free
  1989   0011D6  5003               	movf	?_strcmp^0,w,c
  1990   0011D8  1004               	iorwf	(?_strcmp+1)^0,w,c
  1991   0011DA  A4D8               	btfss	status,2,c
  1992   0011DC  EFF2  F008         	goto	u921
  1993   0011E0  EFF4  F008         	goto	u920
  1994   0011E4                     u921:
  1995   0011E4  EFFB  F008         	goto	l2392
  1996   0011E8                     u920:
  1997   0011E8                     
  1998                           ;main.c: 80:     LATEbits.LATE2 = 1;
  1999   0011E8  848D               	bsf	141,2,c	;volatile
  2000   0011EA                     
  2001                           ;main.c: 81:                 MRF24SetMensajeSalida("Led apagado");
  2002   0011EA  0E27               	movlw	low STR_8
  2003   0011EC  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  2004   0011EE  ECFB  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  2005                           
  2006                           ;main.c: 82:             } else {
  2007   0011F2  EFFF  F008         	goto	l2394
  2008   0011F6                     l2392:
  2009                           
  2010                           ;main.c: 84:                 MRF24SetMensajeSalida("Cmd error.");
  2011   0011F6  0E33               	movlw	low STR_15
  2012   0011F8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  2013   0011FA  ECFB  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  2014   0011FE                     l2394:
  2015                           
  2016                           ;main.c: 86:             MRF24TransmitirDato();
  2017   0011FE  ECF3  F009         	call	_MRF24TransmitirDato	;wreg free
  2018   001202                     l2396:
  2019                           
  2020                           ;main.c: 89:         if(DelayRead(&delay_parpadeo)) {
  2021   001202  0E1E               	movlw	low main@delay_parpadeo
  2022   001204  6E02               	movwf	DelayRead@delay^0,c
  2023   001206  EC32  F00B         	call	_DelayRead	;wreg free
  2024   00120A  0900               	iorlw	0
  2025   00120C  B4D8               	btfsc	status,2,c
  2026   00120E  EF0B  F009         	goto	u931
  2027   001212  EF0D  F009         	goto	u930
  2028   001216                     u931:
  2029   001216  EF60  F008         	goto	l305
  2030   00121A                     u930:
  2031   00121A                     
  2032                           ;main.c: 90:             LATEbits.LATE0 = !LATEbits.LATE0;
  2033   00121A  A08D               	btfss	141,0,c	;volatile
  2034   00121C  EF12  F009         	goto	u941
  2035   001220  EF16  F009         	goto	u940
  2036   001224                     u941:
  2037   001224  6A1C               	clrf	??_main^0,c
  2038   001226  2A1C               	incf	??_main^0,f,c
  2039   001228  EF17  F009         	goto	u958
  2040   00122C                     u940:
  2041   00122C  6A1C               	clrf	??_main^0,c
  2042   00122E                     u958:
  2043   00122E  508D               	movf	141,w,c	;volatile
  2044   001230  181C               	xorwf	??_main^0,w,c
  2045   001232  0BFE               	andlw	-2
  2046   001234  181C               	xorwf	??_main^0,w,c
  2047   001236  6E8D               	movwf	141,c	;volatile
  2048   001238  EF60  F008         	goto	l305
  2049   00123C  EF20  F000         	goto	start
  2050   001240                     __end_of_main:
  2051                           	callstack 0
  2052                           
  2053 ;; *************** function _strcmp *****************
  2054 ;; Defined at:
  2055 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  l               1    2[COMRAM] PTR const unsigned char 
  2058 ;;		 -> data_in_s$buffer(50), data_in_s(56), 
  2059 ;;  r               1    3[COMRAM] PTR const unsigned char 
  2060 ;;		 -> STR_13(8), STR_10(8), STR_7(8), STR_4(8), 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  2    2[COMRAM] int 
  2065 ;; Registers used:
  2066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2072 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;Total ram usage:        3 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 1
  2079 ;; This function calls:
  2080 ;;		Nothing
  2081 ;; This function is called by:
  2082 ;;		_main
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text1
  2087   0018A8                     __ptext1:
  2088                           	callstack 0
  2089   0018A8                     _strcmp:
  2090                           	callstack 29
  2091   0018A8  EF58  F00C         	goto	l2268
  2092   0018AC                     l2266:
  2093   0018AC  2A03               	incf	strcmp@l^0,f,c
  2094   0018AE  2A04               	incf	strcmp@r^0,f,c
  2095   0018B0                     l2268:
  2096   0018B0  5003               	movf	strcmp@l^0,w,c
  2097   0018B2  6ED9               	movwf	fsr2l,c
  2098   0018B4  6ADA               	clrf	fsr2h,c
  2099   0018B6  50DF               	movf	indf2,w,c
  2100   0018B8  6E05               	movwf	??_strcmp^0,c
  2101   0018BA  C004  FFF6         	movff	strcmp@r,tblptrl
  2102   0018BE                     	if	1	;There is more than 1 active tblptr byte
  2103   0018BE  0E10               	movlw	high __smallconst
  2104   0018C0  6EF7               	movwf	tblptrh,c
  2105   0018C2                     	endif
  2106   0018C2                     	if	0	;tblptru may be non-zero
  2107   0018C2                     	endif
  2108   0018C2                     	if	0	;tblptru may be non-zero
  2109   0018C2                     	endif
  2110   0018C2  0008               	tblrd		*
  2111   0018C4  50F5               	movf	tablat,w,c
  2112   0018C6  1805               	xorwf	??_strcmp^0,w,c
  2113   0018C8  A4D8               	btfss	status,2,c
  2114   0018CA  EF69  F00C         	goto	u831
  2115   0018CE  EF6B  F00C         	goto	u830
  2116   0018D2                     u831:
  2117   0018D2  EF76  F00C         	goto	l2272
  2118   0018D6                     u830:
  2119   0018D6  5003               	movf	strcmp@l^0,w,c
  2120   0018D8  6ED9               	movwf	fsr2l,c
  2121   0018DA  6ADA               	clrf	fsr2h,c
  2122   0018DC  50DF               	movf	indf2,w,c
  2123   0018DE  A4D8               	btfss	status,2,c
  2124   0018E0  EF74  F00C         	goto	u841
  2125   0018E4  EF76  F00C         	goto	u840
  2126   0018E8                     u841:
  2127   0018E8  EF56  F00C         	goto	l2266
  2128   0018EC                     u840:
  2129   0018EC                     l2272:
  2130   0018EC  5003               	movf	strcmp@l^0,w,c
  2131   0018EE  6ED9               	movwf	fsr2l,c
  2132   0018F0  6ADA               	clrf	fsr2h,c
  2133   0018F2  50DF               	movf	indf2,w,c
  2134   0018F4  6E05               	movwf	??_strcmp^0,c
  2135   0018F6  C004  FFF6         	movff	strcmp@r,tblptrl
  2136   0018FA                     	if	1	;There is more than 1 active tblptr byte
  2137   0018FA  0E10               	movlw	high __smallconst
  2138   0018FC  6EF7               	movwf	tblptrh,c
  2139   0018FE                     	endif
  2140   0018FE                     	if	0	;tblptru may be non-zero
  2141   0018FE                     	endif
  2142   0018FE                     	if	0	;tblptru may be non-zero
  2143   0018FE                     	endif
  2144   0018FE  0008               	tblrd		*
  2145   001900  50F5               	movf	tablat,w,c
  2146   001902  5C05               	subwf	??_strcmp^0,w,c
  2147   001904  6E03               	movwf	?_strcmp^0,c
  2148   001906  6A04               	clrf	(?_strcmp+1)^0,c
  2149   001908  A0D8               	btfss	status,0,c
  2150   00190A  0604               	decf	(?_strcmp+1)^0,f,c
  2151   00190C  0012               	return		;funcret
  2152   00190E                     __end_of_strcmp:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _MRF24TransmitirDato *****************
  2156 ;; Defined at:
  2157 ;;		line 380 in file "drivers/scr/API_MRF24J40.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  i               1   15[COMRAM] char 
  2162 ;;  pos_mem         1   16[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      enum E3264
  2165 ;; Registers used:
  2166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;Total ram usage:        7 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; Hardware stack levels required when called: 5
  2179 ;; This function calls:
  2180 ;;		_SetLongAddr
  2181 ;;		_SetShortAddr
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text2
  2188   0013E6                     __ptext2:
  2189                           	callstack 0
  2190   0013E6                     _MRF24TransmitirDato:
  2191                           	callstack 25
  2192   0013E6                     
  2193                           ;drivers/scr/API_MRF24J40.c: 382:  if(estadoActual != INICIALIZACION_OK)
  2194   0013E6  503E               	movf	_estadoActual^0,w,c
  2195   0013E8  B4D8               	btfsc	status,2,c
  2196   0013EA  EFF9  F009         	goto	u731
  2197   0013EE  EFFB  F009         	goto	u730
  2198   0013F2                     u731:
  2199   0013F2  EFFD  F009         	goto	l155
  2200   0013F6                     u730:
  2201   0013F6  EF93  F00A         	goto	l156
  2202   0013FA                     l155:
  2203                           
  2204                           ;drivers/scr/API_MRF24J40.c: 384:  uint8_t pos_mem = 0;
  2205   0013FA  6A11               	clrf	MRF24TransmitirDato@pos_mem^0,c
  2206   0013FC                     
  2207                           ;drivers/scr/API_MRF24J40.c: 385:  SetLongAddr(pos_mem++, (0X0B));
  2208   0013FC  0E00               	movlw	0
  2209   0013FE  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2210   001400  0E00               	movlw	0
  2211   001402  6E06               	movwf	SetLongAddr@reg_address^0,c
  2212   001404  0E0B               	movlw	11
  2213   001406  6E08               	movwf	SetLongAddr@valor^0,c
  2214   001408  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2215   00140C  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2216   00140E                     
  2217                           ;drivers/scr/API_MRF24J40.c: 386:  SetLongAddr(pos_mem++, data_out_s.largo_mensaje + (0X
      +                          0B));
  2218   00140E  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2219   001412  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2220   001414  5038               	movf	(_data_out_s+6)^0,w,c
  2221   001416  0F0B               	addlw	11
  2222   001418  6E08               	movwf	SetLongAddr@valor^0,c
  2223   00141A  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2224   00141E  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2225   001420                     
  2226                           ;drivers/scr/API_MRF24J40.c: 387:  SetLongAddr(pos_mem++, (0X01) | (0X20) | (0X40));
  2227   001420  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2228   001424  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2229   001426  0E61               	movlw	97
  2230   001428  6E08               	movwf	SetLongAddr@valor^0,c
  2231   00142A  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2232   00142E  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2233                           
  2234                           ;drivers/scr/API_MRF24J40.c: 388:  SetLongAddr(pos_mem++, (0X80) | (0X08));
  2235   001430  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2236   001434  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2237   001436  0E88               	movlw	136
  2238   001438  6E08               	movwf	SetLongAddr@valor^0,c
  2239   00143A  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2240   00143E  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2241   001440                     
  2242                           ;drivers/scr/API_MRF24J40.c: 389:  SetLongAddr(pos_mem++, data_config_s.sequence_number+
      +                          +);
  2243   001440  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2244   001444  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2245   001446  EE20  F09A         	lfsr	2,_data_config_s+2
  2246   00144A  50DF               	movf	indf2,w,c
  2247   00144C  2ADF               	incf	indf2,f,c
  2248   00144E  6E08               	movwf	SetLongAddr@valor^0,c
  2249   001450  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2250   001454  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2251   001456                     
  2252                           ;drivers/scr/API_MRF24J40.c: 390:  SetLongAddr(pos_mem++, (uint8_t) data_out_s.destinity
      +                          _panid);
  2253   001456  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2254   00145A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2255   00145C  C032  F008         	movff	_data_out_s,SetLongAddr@valor
  2256   001460  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2257   001464  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2258   001466                     
  2259                           ;drivers/scr/API_MRF24J40.c: 391:  SetLongAddr(pos_mem++, (uint8_t) (data_out_s.destinit
      +                          y_panid >> (0X08)));
  2260   001466  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2261   00146A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2262   00146C  5033               	movf	(_data_out_s+1)^0,w,c
  2263   00146E  6E08               	movwf	SetLongAddr@valor^0,c
  2264   001470  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2265   001474  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2266   001476                     
  2267                           ;drivers/scr/API_MRF24J40.c: 392:  SetLongAddr(pos_mem++, (uint8_t) data_out_s.destinity
      +                          _address);
  2268   001476  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2269   00147A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2270   00147C  C034  F008         	movff	_data_out_s+2,SetLongAddr@valor
  2271   001480  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2272   001484  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2273   001486                     
  2274                           ;drivers/scr/API_MRF24J40.c: 393:  SetLongAddr(pos_mem++, (uint8_t) (data_out_s.destinit
      +                          y_address >> (0X08)));
  2275   001486  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2276   00148A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2277   00148C  5035               	movf	(_data_out_s+3)^0,w,c
  2278   00148E  6E08               	movwf	SetLongAddr@valor^0,c
  2279   001490  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2280   001494  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2281   001496                     
  2282                           ;drivers/scr/API_MRF24J40.c: 394:  SetLongAddr(pos_mem++, (uint8_t) data_out_s.origin_ad
      +                          dress);
  2283   001496  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2284   00149A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2285   00149C  C036  F008         	movff	_data_out_s+4,SetLongAddr@valor
  2286   0014A0  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2287   0014A4  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2288   0014A6                     
  2289                           ;drivers/scr/API_MRF24J40.c: 395:  SetLongAddr(pos_mem++, (uint8_t) (data_out_s.origin_a
      +                          ddress >> (0X08)));
  2290   0014A6  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2291   0014AA  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2292   0014AC  5037               	movf	(_data_out_s+5)^0,w,c
  2293   0014AE  6E08               	movwf	SetLongAddr@valor^0,c
  2294   0014B0  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2295   0014B4  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2296   0014B6                     
  2297                           ;drivers/scr/API_MRF24J40.c: 397:  for(int8_t i = 0; i < data_out_s.largo_mensaje; i++) 
      +                          {
  2298   0014B6  6A10               	clrf	MRF24TransmitirDato@i^0,c
  2299   0014B8  EF6F  F00A         	goto	l2166
  2300   0014BC                     l2160:
  2301                           
  2302                           ;drivers/scr/API_MRF24J40.c: 399:   SetLongAddr(pos_mem++, data_out_s.buffer[i]);
  2303   0014BC  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2304   0014C0  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2305   0014C2  5039               	movf	(_data_out_s+7)^0,w,c
  2306   0014C4  2410               	addwf	MRF24TransmitirDato@i^0,w,c
  2307   0014C6  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2308   0014C8  C00B  FFF6         	movff	??_MRF24TransmitirDato,tblptrl
  2309   0014CC                     	if	1	;There is more than 1 active tblptr byte
  2310   0014CC  0E10               	movlw	high __smallconst
  2311   0014CE  6EF7               	movwf	tblptrh,c
  2312   0014D0                     	endif
  2313   0014D0                     	if	0	;tblptru may be non-zero
  2314   0014D0                     	endif
  2315   0014D0                     	if	0	;tblptru may be non-zero
  2316   0014D0                     	endif
  2317   0014D0  0008               	tblrd		*
  2318   0014D2  CFF5 F008          	movff	tablat,SetLongAddr@valor
  2319   0014D6  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2320   0014DA  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2321   0014DC                     
  2322                           ;drivers/scr/API_MRF24J40.c: 400:  }
  2323   0014DC  2A10               	incf	MRF24TransmitirDato@i^0,f,c
  2324   0014DE                     l2166:
  2325   0014DE  5038               	movf	(_data_out_s+6)^0,w,c
  2326   0014E0  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2327   0014E2  6A0C               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2328   0014E4  C010  F00D         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato+2
  2329   0014E8  6A0E               	clrf	(??_MRF24TransmitirDato+3)^0,c
  2330   0014EA  BE0D               	btfsc	(??_MRF24TransmitirDato+2)^0,7,c
  2331   0014EC  060E               	decf	(??_MRF24TransmitirDato+3)^0,f,c
  2332   0014EE  500B               	movf	??_MRF24TransmitirDato^0,w,c
  2333   0014F0  5C0D               	subwf	(??_MRF24TransmitirDato+2)^0,w,c
  2334   0014F2  500E               	movf	(??_MRF24TransmitirDato+3)^0,w,c
  2335   0014F4  0A80               	xorlw	128
  2336   0014F6  6E0F               	movwf	(??_MRF24TransmitirDato+4)^0,c
  2337   0014F8  500C               	movf	(??_MRF24TransmitirDato+1)^0,w,c
  2338   0014FA  0A80               	xorlw	128
  2339   0014FC  580F               	subwfb	(??_MRF24TransmitirDato+4)^0,w,c
  2340   0014FE  A0D8               	btfss	status,0,c
  2341   001500  EF84  F00A         	goto	u741
  2342   001504  EF86  F00A         	goto	u740
  2343   001508                     u741:
  2344   001508  EF5E  F00A         	goto	l2160
  2345   00150C                     u740:
  2346   00150C                     
  2347                           ;drivers/scr/API_MRF24J40.c: 401:  SetLongAddr(pos_mem++, (0X00));
  2348   00150C  C011  F006         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2349   001510  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2350   001512  0E00               	movlw	0
  2351   001514  6E08               	movwf	SetLongAddr@valor^0,c
  2352   001516  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2353   00151A  2A11               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2354   00151C                     
  2355                           ;drivers/scr/API_MRF24J40.c: 402:  SetShortAddr((0x1B), (0X04) | (0X01));
  2356   00151C  0E05               	movlw	5
  2357   00151E  6E03               	movwf	SetShortAddr@valor^0,c
  2358   001520  0E1B               	movlw	27
  2359   001522  EC19  F00E         	call	_SetShortAddr
  2360   001526                     l156:
  2361   001526  0012               	return		;funcret
  2362   001528                     __end_of_MRF24TransmitirDato:
  2363                           	callstack 0
  2364                           
  2365 ;; *************** function _MRF24SetPANIDDestino *****************
  2366 ;; Defined at:
  2367 ;;		line 354 in file "drivers/scr/API_MRF24J40.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  panid           2    0[COMRAM] unsigned short 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      enum E3264
  2374 ;; Registers used:
  2375 ;;		wreg, status,2
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;Total ram usage:        2 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 1
  2388 ;; This function calls:
  2389 ;;		Nothing
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text3
  2396   001C52                     __ptext3:
  2397                           	callstack 0
  2398   001C52                     _MRF24SetPANIDDestino:
  2399                           	callstack 29
  2400   001C52                     
  2401                           ;drivers/scr/API_MRF24J40.c: 356:  if(estadoActual != INICIALIZACION_OK)
  2402   001C52  503E               	movf	_estadoActual^0,w,c
  2403   001C54  B4D8               	btfsc	status,2,c
  2404   001C56  EF2F  F00E         	goto	u711
  2405   001C5A  EF31  F00E         	goto	u710
  2406   001C5E                     u711:
  2407   001C5E  EF33  F00E         	goto	l147
  2408   001C62                     u710:
  2409   001C62  EF37  F00E         	goto	l148
  2410   001C66                     l147:
  2411                           
  2412                           ;drivers/scr/API_MRF24J40.c: 358:  data_out_s.destinity_panid = panid;
  2413   001C66  C001  F032         	movff	MRF24SetPANIDDestino@panid,_data_out_s
  2414   001C6A  C002  F033         	movff	MRF24SetPANIDDestino@panid+1,_data_out_s+1
  2415   001C6E                     l148:
  2416   001C6E  0012               	return		;funcret
  2417   001C70                     __end_of_MRF24SetPANIDDestino:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _MRF24SetMensajeSalida *****************
  2421 ;; Defined at:
  2422 ;;		line 327 in file "drivers/scr/API_MRF24J40.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  2425 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2426 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      enum E3264
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2441 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2442 ;;Total ram usage:        1 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 2
  2445 ;; This function calls:
  2446 ;;		_strlen
  2447 ;; This function is called by:
  2448 ;;		_main
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452                           	psect	text4
  2453   0019F6                     __ptext4:
  2454                           	callstack 0
  2455   0019F6                     _MRF24SetMensajeSalida:
  2456                           	callstack 28
  2457   0019F6                     
  2458                           ;drivers/scr/API_MRF24J40.c: 329:  if(strlen(mensaje) == (0X00) || estadoActual != INICI
      +                          ALIZACION_OK)
  2459   0019F6  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2460   0019FA  EC54  F00D         	call	_strlen	;wreg free
  2461   0019FE  5001               	movf	?_strlen^0,w,c
  2462   001A00  1002               	iorwf	(?_strlen+1)^0,w,c
  2463   001A02  B4D8               	btfsc	status,2,c
  2464   001A04  EF06  F00D         	goto	u681
  2465   001A08  EF08  F00D         	goto	u680
  2466   001A0C                     u681:
  2467   001A0C  EF1A  F00D         	goto	l140
  2468   001A10                     u680:
  2469   001A10  503E               	movf	_estadoActual^0,w,c
  2470   001A12  B4D8               	btfsc	status,2,c
  2471   001A14  EF0E  F00D         	goto	u691
  2472   001A18  EF10  F00D         	goto	u690
  2473   001A1C                     u691:
  2474   001A1C  EF12  F00D         	goto	l2096
  2475   001A20                     u690:
  2476   001A20  EF1A  F00D         	goto	l140
  2477   001A24                     l2096:
  2478                           
  2479                           ;drivers/scr/API_MRF24J40.c: 331:  data_out_s.buffer = mensaje;
  2480   001A24  C004  F039         	movff	MRF24SetMensajeSalida@mensaje,_data_out_s+7
  2481   001A28                     
  2482                           ;drivers/scr/API_MRF24J40.c: 332:  data_out_s.largo_mensaje = (uint8_t) strlen(mensaje);
  2483   001A28  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2484   001A2C  EC54  F00D         	call	_strlen	;wreg free
  2485   001A30  5001               	movf	?_strlen^0,w,c
  2486   001A32  6E38               	movwf	(_data_out_s+6)^0,c
  2487   001A34                     l140:
  2488   001A34  0012               	return		;funcret
  2489   001A36                     __end_of_MRF24SetMensajeSalida:
  2490                           	callstack 0
  2491                           
  2492 ;; *************** function _strlen *****************
  2493 ;; Defined at:
  2494 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2497 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2498 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2501 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2502 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  2    0[COMRAM] unsigned int 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;Total ram usage:        3 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 1
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_MRF24SetMensajeSalida
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text5
  2527   001AA8                     __ptext5:
  2528                           	callstack 0
  2529   001AA8                     _strlen:
  2530                           	callstack 28
  2531   001AA8  C001  F003         	movff	strlen@s,strlen@a
  2532   001AAC  EF59  F00D         	goto	l2066
  2533   001AB0                     l2064:
  2534   001AB0  2A01               	incf	strlen@s^0,f,c
  2535   001AB2                     l2066:
  2536   001AB2  C001  FFF6         	movff	strlen@s,tblptrl
  2537   001AB6                     	if	1	;There is more than 1 active tblptr byte
  2538   001AB6  0E10               	movlw	high __smallconst
  2539   001AB8  6EF7               	movwf	tblptrh,c
  2540   001ABA                     	endif
  2541   001ABA                     	if	0	;tblptru may be non-zero
  2542   001ABA                     	endif
  2543   001ABA                     	if	0	;tblptru may be non-zero
  2544   001ABA                     	endif
  2545   001ABA  0008               	tblrd		*
  2546   001ABC  50F5               	movf	tablat,w,c
  2547   001ABE  0900               	iorlw	0
  2548   001AC0  A4D8               	btfss	status,2,c
  2549   001AC2  EF65  F00D         	goto	u671
  2550   001AC6  EF67  F00D         	goto	u670
  2551   001ACA                     u671:
  2552   001ACA  EF58  F00D         	goto	l2064
  2553   001ACE                     u670:
  2554   001ACE  5003               	movf	strlen@a^0,w,c
  2555   001AD0  5C01               	subwf	strlen@s^0,w,c
  2556   001AD2  6E01               	movwf	?_strlen^0,c
  2557   001AD4  6A02               	clrf	(?_strlen+1)^0,c
  2558   001AD6  BE01               	btfsc	?_strlen^0,7,c
  2559   001AD8  0602               	decf	(?_strlen+1)^0,f,c
  2560   001ADA  0012               	return		;funcret
  2561   001ADC                     __end_of_strlen:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _MRF24SetDireccionOrigen *****************
  2565 ;; Defined at:
  2566 ;;		line 367 in file "drivers/scr/API_MRF24J40.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  direccion       2    2[COMRAM] unsigned short 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;		None
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      enum E3264
  2573 ;; Registers used:
  2574 ;;		wreg, status,2
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;Total ram usage:        2 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; Hardware stack levels required when called: 1
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_main
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           	psect	text6
  2595   001C70                     __ptext6:
  2596                           	callstack 0
  2597   001C70                     _MRF24SetDireccionOrigen:
  2598                           	callstack 29
  2599   001C70                     
  2600                           ;drivers/scr/API_MRF24J40.c: 369:  if(estadoActual != INICIALIZACION_OK)
  2601   001C70  503E               	movf	_estadoActual^0,w,c
  2602   001C72  B4D8               	btfsc	status,2,c
  2603   001C74  EF3E  F00E         	goto	u721
  2604   001C78  EF40  F00E         	goto	u720
  2605   001C7C                     u721:
  2606   001C7C  EF42  F00E         	goto	l151
  2607   001C80                     u720:
  2608   001C80  EF46  F00E         	goto	l152
  2609   001C84                     l151:
  2610                           
  2611                           ;drivers/scr/API_MRF24J40.c: 371:  data_out_s.origin_address = direccion;
  2612   001C84  C003  F036         	movff	MRF24SetDireccionOrigen@direccion,_data_out_s+4
  2613   001C88  C004  F037         	movff	MRF24SetDireccionOrigen@direccion+1,_data_out_s+5
  2614   001C8C                     l152:
  2615   001C8C  0012               	return		;funcret
  2616   001C8E                     __end_of_MRF24SetDireccionOrigen:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _MRF24SetDireccionDestino *****************
  2620 ;; Defined at:
  2621 ;;		line 341 in file "drivers/scr/API_MRF24J40.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  direccion       2    0[COMRAM] unsigned short 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      enum E3264
  2628 ;; Registers used:
  2629 ;;		wreg, status,2
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2635 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;Total ram usage:        2 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 1
  2642 ;; This function calls:
  2643 ;;		Nothing
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text7
  2650   001C8E                     __ptext7:
  2651                           	callstack 0
  2652   001C8E                     _MRF24SetDireccionDestino:
  2653                           	callstack 29
  2654   001C8E                     
  2655                           ;drivers/scr/API_MRF24J40.c: 343:  if(estadoActual != INICIALIZACION_OK)
  2656   001C8E  503E               	movf	_estadoActual^0,w,c
  2657   001C90  B4D8               	btfsc	status,2,c
  2658   001C92  EF4D  F00E         	goto	u701
  2659   001C96  EF4F  F00E         	goto	u700
  2660   001C9A                     u701:
  2661   001C9A  EF51  F00E         	goto	l143
  2662   001C9E                     u700:
  2663   001C9E  EF55  F00E         	goto	l144
  2664   001CA2                     l143:
  2665                           
  2666                           ;drivers/scr/API_MRF24J40.c: 345:  data_out_s.destinity_address = direccion;
  2667   001CA2  C001  F034         	movff	MRF24SetDireccionDestino@direccion,_data_out_s+2
  2668   001CA6  C002  F035         	movff	MRF24SetDireccionDestino@direccion+1,_data_out_s+3
  2669   001CAA                     l144:
  2670   001CAA  0012               	return		;funcret
  2671   001CAC                     __end_of_MRF24SetDireccionDestino:
  2672                           	callstack 0
  2673                           
  2674 ;; *************** function _MRF24ReciboPaquete *****************
  2675 ;; Defined at:
  2676 ;;		line 426 in file "drivers/scr/API_MRF24J40.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  index           1   16[COMRAM] unsigned char 
  2681 ;;  largo_mensaj    1   15[COMRAM] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      enum E3264
  2684 ;; Registers used:
  2685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;Total ram usage:        7 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 5
  2698 ;; This function calls:
  2699 ;;		_GetLongAddr
  2700 ;;		_GetShortAddr
  2701 ;;		_SetLongAddr
  2702 ;;		_SetShortAddr
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text8
  2709   001710                     __ptext8:
  2710                           	callstack 0
  2711   001710                     _MRF24ReciboPaquete:
  2712                           	callstack 25
  2713   001710                     
  2714                           ;drivers/scr/API_MRF24J40.c: 428:  if(estadoActual != INICIALIZACION_OK)
  2715   001710  503E               	movf	_estadoActual^0,w,c
  2716   001712  B4D8               	btfsc	status,2,c
  2717   001714  EF8E  F00B         	goto	u751
  2718   001718  EF90  F00B         	goto	u750
  2719   00171C                     u751:
  2720   00171C  EF92  F00B         	goto	l2180
  2721   001720                     u750:
  2722   001720  EFDA  F00B         	goto	l168
  2723   001724                     l2180:
  2724                           
  2725                           ;drivers/scr/API_MRF24J40.c: 430:  uint8_t index;;drivers/scr/API_MRF24J40.c: 431:  uint
      +                          8_t largo_mensaje;;drivers/scr/API_MRF24J40.c: 432:  SetLongAddr((0x39), (0X04));
  2726   001724  0E00               	movlw	0
  2727   001726  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2728   001728  0E39               	movlw	57
  2729   00172A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2730   00172C  0E04               	movlw	4
  2731   00172E  6E08               	movwf	SetLongAddr@valor^0,c
  2732   001730  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2733                           
  2734                           ;drivers/scr/API_MRF24J40.c: 433:  SetShortAddr((0x0D), (0X04));
  2735   001734  0E04               	movlw	4
  2736   001736  6E03               	movwf	SetShortAddr@valor^0,c
  2737   001738  0E0D               	movlw	13
  2738   00173A  EC19  F00E         	call	_SetShortAddr
  2739                           
  2740                           ;drivers/scr/API_MRF24J40.c: 434:  largo_mensaje = GetLongAddr((0x300));
  2741   00173E  0E03               	movlw	3
  2742   001740  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2743   001742  0E00               	movlw	0
  2744   001744  6E06               	movwf	GetLongAddr@reg_address^0,c
  2745   001746  ECB8  F00C         	call	_GetLongAddr	;wreg free
  2746   00174A  6E10               	movwf	MRF24ReciboPaquete@largo_mensaje^0,c
  2747   00174C                     
  2748                           ;drivers/scr/API_MRF24J40.c: 436:  for(index = 0; index < largo_mensaje - (0x04); index+
      +                          +) {
  2749   00174C  6A11               	clrf	MRF24ReciboPaquete@index^0,c
  2750   00174E  EFB7  F00B         	goto	l2188
  2751   001752                     l2184:
  2752                           
  2753                           ;drivers/scr/API_MRF24J40.c: 438:   data_in_s.buffer[index] = GetLongAddr((0x300) + (0X0
      +                          B) + index - 1);
  2754   001752  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2755   001754  0F66               	addlw	low (_data_in_s+6)
  2756   001756  6ED9               	movwf	fsr2l,c
  2757   001758  6ADA               	clrf	fsr2h,c
  2758   00175A  0E0A               	movlw	10
  2759   00175C  2411               	addwf	MRF24ReciboPaquete@index^0,w,c
  2760   00175E  6E06               	movwf	GetLongAddr@reg_address^0,c
  2761   001760  6A07               	clrf	(GetLongAddr@reg_address+1)^0,c
  2762   001762  0E03               	movlw	3
  2763   001764  2207               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  2764   001766  ECB8  F00C         	call	_GetLongAddr	;wreg free
  2765   00176A  6EDF               	movwf	indf2,c
  2766   00176C                     
  2767                           ;drivers/scr/API_MRF24J40.c: 439:  }
  2768   00176C  2A11               	incf	MRF24ReciboPaquete@index^0,f,c
  2769   00176E                     l2188:
  2770   00176E  0EFC               	movlw	252
  2771   001770  2410               	addwf	MRF24ReciboPaquete@largo_mensaje^0,w,c
  2772   001772  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  2773   001774  6A0C               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  2774   001776  0EFF               	movlw	255
  2775   001778  220C               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  2776   00177A  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2777   00177C  6E0D               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  2778   00177E  6A0E               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  2779   001780  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  2780   001782  5C0D               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  2781   001784  500E               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  2782   001786  0A80               	xorlw	128
  2783   001788  6E0F               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  2784   00178A  500C               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  2785   00178C  0A80               	xorlw	128
  2786   00178E  580F               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  2787   001790  A0D8               	btfss	status,0,c
  2788   001792  EFCD  F00B         	goto	u761
  2789   001796  EFCF  F00B         	goto	u760
  2790   00179A                     u761:
  2791   00179A  EFA9  F00B         	goto	l2184
  2792   00179E                     u760:
  2793   00179E                     
  2794                           ;drivers/scr/API_MRF24J40.c: 440:  SetLongAddr((0x39), (0X00));
  2795   00179E  0E00               	movlw	0
  2796   0017A0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2797   0017A2  0E39               	movlw	57
  2798   0017A4  6E06               	movwf	SetLongAddr@reg_address^0,c
  2799   0017A6  0E00               	movlw	0
  2800   0017A8  6E08               	movwf	SetLongAddr@valor^0,c
  2801   0017AA  ECDA  F00C         	call	_SetLongAddr	;wreg free
  2802                           
  2803                           ;drivers/scr/API_MRF24J40.c: 441:  (void)GetShortAddr((0x31));
  2804   0017AE  0E31               	movlw	49
  2805   0017B0  ECF3  F00D         	call	_GetShortAddr
  2806   0017B4                     l168:
  2807   0017B4  0012               	return		;funcret
  2808   0017B6                     __end_of_MRF24ReciboPaquete:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function _MRF24J40Init *****************
  2812 ;; Defined at:
  2813 ;;		line 311 in file "drivers/scr/API_MRF24J40.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      enum E3264
  2820 ;; Registers used:
  2821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;Total ram usage:        1 bytes
  2832 ;; Hardware stack levels used: 1
  2833 ;; Hardware stack levels required when called: 7
  2834 ;; This function calls:
  2835 ;;		_InicializoMRF24
  2836 ;;		_InicializoPines
  2837 ;;		_InicializoVariables
  2838 ;;		_SetResetPin
  2839 ;; This function is called by:
  2840 ;;		_main
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text9
  2845   001A36                     __ptext9:
  2846                           	callstack 0
  2847   001A36                     _MRF24J40Init:
  2848                           	callstack 23
  2849   001A36                     
  2850                           ;drivers/scr/API_MRF24J40.c: 313:  InicializoVariables();
  2851   001A36  EC18  F00C         	call	_InicializoVariables	;wreg free
  2852   001A3A                     
  2853                           ;drivers/scr/API_MRF24J40.c: 314:  InicializoPines();
  2854   001A3A  EC79  F00E         	call	_InicializoPines	;wreg free
  2855   001A3E                     
  2856                           ;drivers/scr/API_MRF24J40.c: 315:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2857   001A3E  0E06               	movlw	6
  2858   001A40  6E1B               	movwf	??_MRF24J40Init^0,c
  2859   001A42  0E30               	movlw	48
  2860   001A44                     u987:
  2861   001A44  2EE8               	decfsz	wreg,f,c
  2862   001A46  D7FE               	bra	u987
  2863   001A48  2E1B               	decfsz	??_MRF24J40Init^0,f,c
  2864   001A4A  D7FC               	bra	u987
  2865   001A4C  F000 F000          	nop2	
  2866   001A50                     
  2867                           ;drivers/scr/API_MRF24J40.c: 316:  SetResetPin(1);
  2868   001A50  0E01               	movlw	1
  2869   001A52  EC94  F00E         	call	_SetResetPin
  2870   001A56                     
  2871                           ;drivers/scr/API_MRF24J40.c: 317:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2872   001A56  0E06               	movlw	6
  2873   001A58  6E1B               	movwf	??_MRF24J40Init^0,c
  2874   001A5A  0E30               	movlw	48
  2875   001A5C                     u997:
  2876   001A5C  2EE8               	decfsz	wreg,f,c
  2877   001A5E  D7FE               	bra	u997
  2878   001A60  2E1B               	decfsz	??_MRF24J40Init^0,f,c
  2879   001A62  D7FC               	bra	u997
  2880   001A64  F000 F000          	nop2	
  2881   001A68                     
  2882                           ;drivers/scr/API_MRF24J40.c: 318:  estadoActual = InicializoMRF24();
  2883   001A68  EC20  F009         	call	_InicializoMRF24	;wreg free
  2884   001A6C  6E3E               	movwf	_estadoActual^0,c
  2885   001A6E  0012               	return		;funcret
  2886   001A70                     __end_of_MRF24J40Init:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _InicializoVariables *****************
  2890 ;; Defined at:
  2891 ;;		line 112 in file "drivers/scr/API_MRF24J40.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;Total ram usage:        0 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 2
  2912 ;; This function calls:
  2913 ;;		_strncpy
  2914 ;; This function is called by:
  2915 ;;		_MRF24J40Init
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text10
  2920   001830                     __ptext10:
  2921                           	callstack 0
  2922   001830                     _InicializoVariables:
  2923                           	callstack 27
  2924   001830                     
  2925                           ;drivers/scr/API_MRF24J40.c: 114:  strncpy((char *)data_config_s.security_key,(char *) d
      +                          efault_security_key, 16);
  2926   001830  0E9C               	movlw	low (_data_config_s+4)
  2927   001832  6E01               	movwf	strncpy@d^0,c
  2928   001834  0E01               	movlw	low _default_security_key
  2929   001836  6E02               	movwf	strncpy@s^0,c
  2930   001838  0E00               	movlw	0
  2931   00183A  6E04               	movwf	(strncpy@n+1)^0,c
  2932   00183C  0E10               	movlw	16
  2933   00183E  6E03               	movwf	strncpy@n^0,c
  2934   001840  ECDB  F00B         	call	_strncpy	;wreg free
  2935                           
  2936                           ;drivers/scr/API_MRF24J40.c: 115:  strncpy((char *)data_config_s.my_mac,(char *) default
      +                          _mac_address, 8);
  2937   001844  0EAC               	movlw	low (_data_config_s+20)
  2938   001846  6E01               	movwf	strncpy@d^0,c
  2939   001848  0E11               	movlw	low _default_mac_address
  2940   00184A  6E02               	movwf	strncpy@s^0,c
  2941   00184C  0E00               	movlw	0
  2942   00184E  6E04               	movwf	(strncpy@n+1)^0,c
  2943   001850  0E08               	movlw	8
  2944   001852  6E03               	movwf	strncpy@n^0,c
  2945   001854  ECDB  F00B         	call	_strncpy	;wreg free
  2946   001858                     
  2947                           ;drivers/scr/API_MRF24J40.c: 116:  data_config_s.sequence_number = (0X01);
  2948   001858  0E01               	movlw	1
  2949   00185A  0100               	movlb	0	; () banked
  2950   00185C  6F9A               	movwf	(_data_config_s+2)& (0+255),b
  2951   00185E                     
  2952                           ; BSR set to: 0
  2953                           ;drivers/scr/API_MRF24J40.c: 117:  data_config_s.my_channel = CH_11;
  2954   00185E  0E03               	movlw	3
  2955   001860  6F9B               	movwf	(_data_config_s+3)& (0+255),b
  2956   001862                     
  2957                           ; BSR set to: 0
  2958                           ;drivers/scr/API_MRF24J40.c: 118:  data_config_s.get_new_msg = 0;
  2959   001862  6B98               	clrf	_data_config_s& (0+255),b
  2960   001864                     
  2961                           ; BSR set to: 0
  2962                           ;drivers/scr/API_MRF24J40.c: 119:  data_config_s.put_new_msg = 0;
  2963   001864  6B99               	clrf	(_data_config_s+1)& (0+255),b
  2964   001866                     
  2965                           ; BSR set to: 0
  2966                           ;drivers/scr/API_MRF24J40.c: 120:  data_config_s.my_panid = (0x1234);
  2967   001866  0E12               	movlw	18
  2968   001868  6FB5               	movwf	(_data_config_s+29)& (0+255),b
  2969   00186A  0E34               	movlw	52
  2970   00186C  6FB4               	movwf	(_data_config_s+28)& (0+255),b
  2971   00186E                     
  2972                           ; BSR set to: 0
  2973                           ;drivers/scr/API_MRF24J40.c: 121:  data_config_s.my_address = (0x1112);
  2974   00186E  0E11               	movlw	17
  2975   001870  6FB7               	movwf	(_data_config_s+31)& (0+255),b
  2976   001872  0E12               	movlw	18
  2977   001874  6FB6               	movwf	(_data_config_s+30)& (0+255),b
  2978   001876                     
  2979                           ; BSR set to: 0
  2980                           ;drivers/scr/API_MRF24J40.c: 122:  data_in_s.source_address = (0X00);
  2981   001876  0E00               	movlw	0
  2982   001878  6F63               	movwf	(_data_in_s+3)& (0+255),b
  2983   00187A  0E00               	movlw	0
  2984   00187C  6F62               	movwf	(_data_in_s+2)& (0+255),b
  2985   00187E                     
  2986                           ; BSR set to: 0
  2987                           ;drivers/scr/API_MRF24J40.c: 123:  data_in_s.source_panid = (0X00);
  2988   00187E  0E00               	movlw	0
  2989   001880  6F61               	movwf	(_data_in_s+1)& (0+255),b
  2990   001882  0E00               	movlw	0
  2991   001884  6F60               	movwf	_data_in_s& (0+255),b
  2992   001886                     
  2993                           ; BSR set to: 0
  2994                           ;drivers/scr/API_MRF24J40.c: 124:  data_in_s.tamano_mensaje = (0X00);
  2995   001886  6B64               	clrf	(_data_in_s+4)& (0+255),b
  2996   001888                     
  2997                           ; BSR set to: 0
  2998                           ;drivers/scr/API_MRF24J40.c: 125:  data_in_s.buffer[0] = (0X00);
  2999   001888  6B66               	clrf	(_data_in_s+6)& (0+255),b
  3000   00188A                     
  3001                           ; BSR set to: 0
  3002                           ;drivers/scr/API_MRF24J40.c: 126:  data_out_s.destinity_panid = (0X00);
  3003   00188A  0E00               	movlw	0
  3004   00188C  6E33               	movwf	(_data_out_s+1)^0,c
  3005   00188E  0E00               	movlw	0
  3006   001890  6E32               	movwf	_data_out_s^0,c
  3007   001892                     
  3008                           ; BSR set to: 0
  3009                           ;drivers/scr/API_MRF24J40.c: 127:  data_out_s.destinity_address = (0X00);
  3010   001892  0E00               	movlw	0
  3011   001894  6E35               	movwf	(_data_out_s+3)^0,c
  3012   001896  0E00               	movlw	0
  3013   001898  6E34               	movwf	(_data_out_s+2)^0,c
  3014   00189A                     
  3015                           ; BSR set to: 0
  3016                           ;drivers/scr/API_MRF24J40.c: 128:  data_out_s.origin_address = (0X00);
  3017   00189A  0E00               	movlw	0
  3018   00189C  6E37               	movwf	(_data_out_s+5)^0,c
  3019   00189E  0E00               	movlw	0
  3020   0018A0  6E36               	movwf	(_data_out_s+4)^0,c
  3021   0018A2                     
  3022                           ; BSR set to: 0
  3023                           ;drivers/scr/API_MRF24J40.c: 129:  data_out_s.largo_mensaje = (0X00);
  3024   0018A2  6A38               	clrf	(_data_out_s+6)^0,c
  3025   0018A4                     
  3026                           ; BSR set to: 0
  3027                           ;drivers/scr/API_MRF24J40.c: 130:  data_out_s.buffer = ((void*)0);
  3028   0018A4  6A39               	clrf	(_data_out_s+7)^0,c
  3029   0018A6                     
  3030                           ; BSR set to: 0
  3031   0018A6  0012               	return		;funcret
  3032   0018A8                     __end_of_InicializoVariables:
  3033                           	callstack 0
  3034                           
  3035 ;; *************** function _strncpy *****************
  3036 ;; Defined at:
  3037 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncpy.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  d               1    0[COMRAM] PTR unsigned char 
  3040 ;;		 -> data_config_s(34), 
  3041 ;;  s               1    1[COMRAM] PTR const unsigned char 
  3042 ;;		 -> default_mac_address(8), default_security_key(16), 
  3043 ;;  n               2    2[COMRAM] unsigned int 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;  cp              1    5[COMRAM] PTR unsigned char 
  3046 ;;		 -> data_config_s(34), 
  3047 ;; Return value:  Size  Location     Type
  3048 ;;                  1    0[COMRAM] PTR unsigned char 
  3049 ;; Registers used:
  3050 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3051 ;; Tracked objects:
  3052 ;;		On entry : 0/0
  3053 ;;		On exit  : 0/0
  3054 ;;		Unchanged: 0/0
  3055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3056 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;Total ram usage:        6 bytes
  3061 ;; Hardware stack levels used: 1
  3062 ;; Hardware stack levels required when called: 1
  3063 ;; This function calls:
  3064 ;;		Nothing
  3065 ;; This function is called by:
  3066 ;;		_InicializoVariables
  3067 ;; This function uses a non-reentrant model
  3068 ;;
  3069                           
  3070                           	psect	text11
  3071   0017B6                     __ptext11:
  3072                           	callstack 0
  3073   0017B6                     _strncpy:
  3074                           	callstack 27
  3075   0017B6  C001  F006         	movff	strncpy@d,strncpy@cp
  3076   0017BA  EFFA  F00B         	goto	l1872
  3077   0017BE                     l1866:
  3078   0017BE  0603               	decf	strncpy@n^0,f,c
  3079   0017C0  A0D8               	btfss	status,0,c
  3080   0017C2  0604               	decf	(strncpy@n+1)^0,f,c
  3081   0017C4  2A02               	incf	strncpy@s^0,f,c
  3082   0017C6  0402               	decf	strncpy@s^0,w,c
  3083   0017C8  6E05               	movwf	??_strncpy^0,c
  3084   0017CA  C005  FFF6         	movff	??_strncpy,tblptrl
  3085   0017CE                     	if	1	;There is more than 1 active tblptr byte
  3086   0017CE  0E10               	movlw	high __smallconst
  3087   0017D0  6EF7               	movwf	tblptrh,c
  3088   0017D2                     	endif
  3089   0017D2                     	if	0	;tblptru may be non-zero
  3090   0017D2                     	endif
  3091   0017D2                     	if	0	;tblptru may be non-zero
  3092   0017D2                     	endif
  3093   0017D2  2A06               	incf	strncpy@cp^0,f,c
  3094   0017D4  0406               	decf	strncpy@cp^0,w,c
  3095   0017D6  6ED9               	movwf	fsr2l,c
  3096   0017D8  6ADA               	clrf	fsr2h,c
  3097   0017DA  0008               	tblrd		*
  3098   0017DC  CFF5 FFDF          	movff	tablat,indf2
  3099   0017E0  50DF               	movf	indf2,w,c
  3100   0017E2  A4D8               	btfss	status,2,c
  3101   0017E4  EFF6  F00B         	goto	u561
  3102   0017E8  EFF8  F00B         	goto	u560
  3103   0017EC                     u561:
  3104   0017EC  EFFA  F00B         	goto	l1872
  3105   0017F0                     u560:
  3106   0017F0  EF0A  F00C         	goto	l1878
  3107   0017F4                     l1872:
  3108   0017F4  5003               	movf	strncpy@n^0,w,c
  3109   0017F6  1004               	iorwf	(strncpy@n+1)^0,w,c
  3110   0017F8  A4D8               	btfss	status,2,c
  3111   0017FA  EF01  F00C         	goto	u571
  3112   0017FE  EF03  F00C         	goto	u570
  3113   001802                     u571:
  3114   001802  EFDF  F00B         	goto	l1866
  3115   001806                     u570:
  3116   001806  EF0A  F00C         	goto	l1878
  3117   00180A                     l1874:
  3118   00180A  5006               	movf	strncpy@cp^0,w,c
  3119   00180C  6ED9               	movwf	fsr2l,c
  3120   00180E  6ADA               	clrf	fsr2h,c
  3121   001810  6ADF               	clrf	indf2,c
  3122   001812  2A06               	incf	strncpy@cp^0,f,c
  3123   001814                     l1878:
  3124   001814  0603               	decf	strncpy@n^0,f,c
  3125   001816  A0D8               	btfss	status,0,c
  3126   001818  0604               	decf	(strncpy@n+1)^0,f,c
  3127   00181A  2803               	incf	strncpy@n^0,w,c
  3128   00181C  E106               	bnz	u581
  3129   00181E  2804               	incf	(strncpy@n+1)^0,w,c
  3130   001820  A4D8               	btfss	status,2,c
  3131   001822  EF15  F00C         	goto	u581
  3132   001826  EF17  F00C         	goto	u580
  3133   00182A                     u581:
  3134   00182A  EF05  F00C         	goto	l1874
  3135   00182E                     u580:
  3136   00182E  0012               	return		;funcret
  3137   001830                     __end_of_strncpy:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _InicializoPines *****************
  3141 ;; Defined at:
  3142 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;		None
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;Total ram usage:        0 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 2
  3163 ;; This function calls:
  3164 ;;		_SetCSPin
  3165 ;;		_SetResetPin
  3166 ;;		_SetWakePin
  3167 ;; This function is called by:
  3168 ;;		_MRF24J40Init
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text12
  3173   001CF2                     __ptext12:
  3174                           	callstack 0
  3175   001CF2                     _InicializoPines:
  3176                           	callstack 27
  3177   001CF2                     
  3178                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  3179   001CF2  0E01               	movlw	1
  3180   001CF4  ECA9  F00E         	call	_SetCSPin
  3181                           
  3182                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  3183   001CF8  0E01               	movlw	1
  3184   001CFA  EC8D  F00E         	call	_SetWakePin
  3185                           
  3186                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  3187   001CFE  0E00               	movlw	0
  3188   001D00  EC94  F00E         	call	_SetResetPin
  3189   001D04  0012               	return		;funcret
  3190   001D06                     __end_of_InicializoPines:
  3191                           	callstack 0
  3192                           
  3193 ;; *************** function _SetWakePin *****************
  3194 ;; Defined at:
  3195 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  estado          1    wreg     _Bool 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  estado          1    0[COMRAM] _Bool 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;Total ram usage:        1 bytes
  3214 ;; Hardware stack levels used: 1
  3215 ;; Hardware stack levels required when called: 1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_InicializoPines
  3220 ;; This function uses a non-reentrant model
  3221 ;;
  3222                           
  3223                           	psect	text13
  3224   001D1A                     __ptext13:
  3225                           	callstack 0
  3226   001D1A                     _SetWakePin:
  3227                           	callstack 27
  3228                           
  3229                           ;incstack = 0
  3230                           ;SetWakePin@estado stored from wreg
  3231   001D1A  6E01               	movwf	SetWakePin@estado^0,c
  3232   001D1C                     
  3233                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  3234   001D1C  B001               	btfsc	SetWakePin@estado^0,0,c
  3235   001D1E  D002               	bra	u55
  3236   001D20  9E8B               	bcf	139,7,c	;volatile
  3237   001D22  D001               	bra	u56
  3238   001D24                     u55:
  3239   001D24  8E8B               	bsf	139,7,c	;volatile
  3240   001D26                     u56:
  3241   001D26  0012               	return		;funcret
  3242   001D28                     __end_of_SetWakePin:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _SetResetPin *****************
  3246 ;; Defined at:
  3247 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  estado          1    wreg     _Bool 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;  estado          1    0[COMRAM] _Bool 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3264 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;Total ram usage:        1 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; Hardware stack levels required when called: 1
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_InicializoPines
  3272 ;;		_MRF24J40Init
  3273 ;; This function uses a non-reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text14
  3277   001D28                     __ptext14:
  3278                           	callstack 0
  3279   001D28                     _SetResetPin:
  3280                           	callstack 28
  3281                           
  3282                           ;incstack = 0
  3283                           ;SetResetPin@estado stored from wreg
  3284   001D28  6E01               	movwf	SetResetPin@estado^0,c
  3285   001D2A                     
  3286                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  3287   001D2A  B001               	btfsc	SetResetPin@estado^0,0,c
  3288   001D2C  D002               	bra	u65
  3289   001D2E  988C               	bcf	140,4,c	;volatile
  3290   001D30  D001               	bra	u66
  3291   001D32                     u65:
  3292   001D32  888C               	bsf	140,4,c	;volatile
  3293   001D34                     u66:
  3294   001D34  0012               	return		;funcret
  3295   001D36                     __end_of_SetResetPin:
  3296                           	callstack 0
  3297                           
  3298 ;; *************** function _InicializoMRF24 *****************
  3299 ;; Defined at:
  3300 ;;		line 139 in file "drivers/scr/API_MRF24J40.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  delay_time_o    9   17[COMRAM] struct .
  3305 ;;  lectura         1   16[COMRAM] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      enum E3264
  3308 ;; Registers used:
  3309 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3319 ;;Total ram usage:       12 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 6
  3322 ;; This function calls:
  3323 ;;		_DelayInit
  3324 ;;		_DelayRead
  3325 ;;		_DelayReset
  3326 ;;		_GetLongAddr
  3327 ;;		_GetShortAddr
  3328 ;;		_SetChannel
  3329 ;;		_SetDeviceAddress
  3330 ;;		_SetDeviceMACAddress
  3331 ;;		_SetLongAddr
  3332 ;;		_SetShortAddr
  3333 ;; This function is called by:
  3334 ;;		_MRF24J40Init
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text15
  3339   001240                     __ptext15:
  3340                           	callstack 0
  3341   001240                     _InicializoMRF24:
  3342                           	callstack 23
  3343   001240                     
  3344                           ;drivers/scr/API_MRF24J40.c: 141:  uint8_t lectura;;drivers/scr/API_MRF24J40.c: 142:  de
      +                          layNoBloqueanteData delay_time_out;;drivers/scr/API_MRF24J40.c: 143:  DelayInit(&delay_t
      +                          ime_out, 100);
  3345   001240  0E12               	movlw	low InicializoMRF24@delay_time_out
  3346   001242  6E01               	movwf	DelayInit@delay^0,c
  3347   001244  0E64               	movlw	100
  3348   001246  6E02               	movwf	DelayInit@duration^0,c
  3349   001248  0E00               	movlw	0
  3350   00124A  6E03               	movwf	(DelayInit@duration+1)^0,c
  3351   00124C  0E00               	movlw	0
  3352   00124E  6E04               	movwf	(DelayInit@duration+2)^0,c
  3353   001250  0E00               	movlw	0
  3354   001252  6E05               	movwf	(DelayInit@duration+3)^0,c
  3355   001254  ECCC  F00D         	call	_DelayInit	;wreg free
  3356   001258                     
  3357                           ;drivers/scr/API_MRF24J40.c: 144:  SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  3358   001258  0E07               	movlw	7
  3359   00125A  6E03               	movwf	SetShortAddr@valor^0,c
  3360   00125C  0E2A               	movlw	42
  3361   00125E  EC19  F00E         	call	_SetShortAddr
  3362   001262                     
  3363                           ;drivers/scr/API_MRF24J40.c: 145:  DelayReset(&delay_time_out);
  3364   001262  0E12               	movlw	low InicializoMRF24@delay_time_out
  3365   001264  6E01               	movwf	DelayReset@delay^0,c
  3366   001266  EC06  F00E         	call	_DelayReset	;wreg free
  3367   00126A                     l102:
  3368                           
  3369                           ;drivers/scr/API_MRF24J40.c: 149:   lectura = GetShortAddr((0x2A));
  3370   00126A  0E2A               	movlw	42
  3371   00126C  ECF3  F00D         	call	_GetShortAddr
  3372   001270  6E11               	movwf	InicializoMRF24@lectura^0,c
  3373   001272                     
  3374                           ;drivers/scr/API_MRF24J40.c: 150:   if(DelayRead(&delay_time_out))
  3375   001272  0E12               	movlw	low InicializoMRF24@delay_time_out
  3376   001274  6E02               	movwf	DelayRead@delay^0,c
  3377   001276  EC32  F00B         	call	_DelayRead	;wreg free
  3378   00127A  0900               	iorlw	0
  3379   00127C  B4D8               	btfsc	status,2,c
  3380   00127E  EF43  F009         	goto	u631
  3381   001282  EF45  F009         	goto	u630
  3382   001286                     u631:
  3383   001286  EF48  F009         	goto	l2010
  3384   00128A                     u630:
  3385   00128A                     l2006:
  3386                           
  3387                           ;drivers/scr/API_MRF24J40.c: 151:    return TIME_OUT_OCURRIDO;
  3388   00128A  0E06               	movlw	6
  3389   00128C  EFF2  F009         	goto	l104
  3390   001290                     l2010:
  3391                           
  3392                           ;drivers/scr/API_MRF24J40.c: 152:  }while((lectura & ((0X04) | (0X02) | (0X01))) != (0X0
      +                          0));
  3393   001290  C011  F00F         	movff	InicializoMRF24@lectura,??_InicializoMRF24
  3394   001294  0E07               	movlw	7
  3395   001296  160F               	andwf	??_InicializoMRF24^0,f,c
  3396   001298  A4D8               	btfss	status,2,c
  3397   00129A  EF51  F009         	goto	u641
  3398   00129E  EF53  F009         	goto	u640
  3399   0012A2                     u641:
  3400   0012A2  EF35  F009         	goto	l102
  3401   0012A6                     u640:
  3402   0012A6                     
  3403                           ;drivers/scr/API_MRF24J40.c: 153:  _delay((unsigned long)((50)*(16000000/4000.0)));;
  3404   0012A6  0E02               	movlw	2
  3405   0012A8  6E10               	movwf	(??_InicializoMRF24+1)^0,c
  3406   0012AA  0E04               	movlw	4
  3407   0012AC  6E0F               	movwf	??_InicializoMRF24^0,c
  3408   0012AE  0EBA               	movlw	186
  3409   0012B0                     u1007:
  3410   0012B0  2EE8               	decfsz	wreg,f,c
  3411   0012B2  D7FE               	bra	u1007
  3412   0012B4  2E0F               	decfsz	??_InicializoMRF24^0,f,c
  3413   0012B6  D7FC               	bra	u1007
  3414   0012B8  2E10               	decfsz	(??_InicializoMRF24+1)^0,f,c
  3415   0012BA  D7FA               	bra	u1007
  3416   0012BC  F000 F000          	nop2	
  3417   0012C0                     
  3418                           ;drivers/scr/API_MRF24J40.c: 154:  SetShortAddr((0x0D), (0X01));
  3419   0012C0  0E01               	movlw	1
  3420   0012C2  6E03               	movwf	SetShortAddr@valor^0,c
  3421   0012C4  0E0D               	movlw	13
  3422   0012C6  EC19  F00E         	call	_SetShortAddr
  3423   0012CA                     
  3424                           ;drivers/scr/API_MRF24J40.c: 155:  SetDeviceAddress();
  3425   0012CA  ECA0  F00D         	call	_SetDeviceAddress	;wreg free
  3426   0012CE                     
  3427                           ;drivers/scr/API_MRF24J40.c: 156:  SetDeviceMACAddress();
  3428   0012CE  ECB7  F00D         	call	_SetDeviceMACAddress	;wreg free
  3429   0012D2                     
  3430                           ;drivers/scr/API_MRF24J40.c: 157:  SetLongAddr((0x201), (0X02) | (0X01));
  3431   0012D2  0E02               	movlw	2
  3432   0012D4  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3433   0012D6  0E01               	movlw	1
  3434   0012D8  6E06               	movwf	SetLongAddr@reg_address^0,c
  3435   0012DA  0E03               	movlw	3
  3436   0012DC  6E08               	movwf	SetLongAddr@valor^0,c
  3437   0012DE  ECDA  F00C         	call	_SetLongAddr	;wreg free
  3438   0012E2                     
  3439                           ;drivers/scr/API_MRF24J40.c: 158:  SetLongAddr((0x202), (0X80));
  3440   0012E2  0E02               	movlw	2
  3441   0012E4  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3442   0012E6  0E02               	movlw	2
  3443   0012E8  6E06               	movwf	SetLongAddr@reg_address^0,c
  3444   0012EA  0E80               	movlw	128
  3445   0012EC  6E08               	movwf	SetLongAddr@valor^0,c
  3446   0012EE  ECDA  F00C         	call	_SetLongAddr	;wreg free
  3447   0012F2                     
  3448                           ;drivers/scr/API_MRF24J40.c: 159:  SetLongAddr((0x203), (0X80) | (0X00));
  3449   0012F2  0E02               	movlw	2
  3450   0012F4  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3451   0012F6  0E03               	movlw	3
  3452   0012F8  6E06               	movwf	SetLongAddr@reg_address^0,c
  3453   0012FA  0E80               	movlw	128
  3454   0012FC  6E08               	movwf	SetLongAddr@valor^0,c
  3455   0012FE  ECDA  F00C         	call	_SetLongAddr	;wreg free
  3456   001302                     
  3457                           ;drivers/scr/API_MRF24J40.c: 160:  SetLongAddr((0x206), (0X80) | (0X10));
  3458   001302  0E02               	movlw	2
  3459   001304  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3460   001306  0E06               	movlw	6
  3461   001308  6E06               	movwf	SetLongAddr@reg_address^0,c
  3462   00130A  0E90               	movlw	144
  3463   00130C  6E08               	movwf	SetLongAddr@valor^0,c
  3464   00130E  ECDA  F00C         	call	_SetLongAddr	;wreg free
  3465   001312                     
  3466                           ;drivers/scr/API_MRF24J40.c: 161:  SetLongAddr((0x207), (0X80));
  3467   001312  0E02               	movlw	2
  3468   001314  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3469   001316  0E07               	movlw	7
  3470   001318  6E06               	movwf	SetLongAddr@reg_address^0,c
  3471   00131A  0E80               	movlw	128
  3472   00131C  6E08               	movwf	SetLongAddr@valor^0,c
  3473   00131E  ECDA  F00C         	call	_SetLongAddr	;wreg free
  3474   001322                     
  3475                           ;drivers/scr/API_MRF24J40.c: 162:  SetLongAddr((0x208), (0X10));
  3476   001322  0E02               	movlw	2
  3477   001324  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3478   001326  0E08               	movlw	8
  3479   001328  6E06               	movwf	SetLongAddr@reg_address^0,c
  3480   00132A  0E10               	movlw	16
  3481   00132C  6E08               	movwf	SetLongAddr@valor^0,c
  3482   00132E  ECDA  F00C         	call	_SetLongAddr	;wreg free
  3483   001332                     
  3484                           ;drivers/scr/API_MRF24J40.c: 163:  SetLongAddr((0x220), (0X20) | (0X01));
  3485   001332  0E02               	movlw	2
  3486   001334  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3487   001336  0E20               	movlw	32
  3488   001338  6E06               	movwf	SetLongAddr@reg_address^0,c
  3489   00133A  0E21               	movlw	33
  3490   00133C  6E08               	movwf	SetLongAddr@valor^0,c
  3491   00133E  ECDA  F00C         	call	_SetLongAddr	;wreg free
  3492   001342                     
  3493                           ;drivers/scr/API_MRF24J40.c: 164:  SetShortAddr((0x3A), (0X80));
  3494   001342  0E80               	movlw	128
  3495   001344  6E03               	movwf	SetShortAddr@valor^0,c
  3496   001346  0E3A               	movlw	58
  3497   001348  EC19  F00E         	call	_SetShortAddr
  3498   00134C                     
  3499                           ;drivers/scr/API_MRF24J40.c: 165:  SetShortAddr((0x3E), (0X40));
  3500   00134C  0E40               	movlw	64
  3501   00134E  6E03               	movwf	SetShortAddr@valor^0,c
  3502   001350  0E3E               	movlw	62
  3503   001352  EC19  F00E         	call	_SetShortAddr
  3504   001356                     
  3505                           ;drivers/scr/API_MRF24J40.c: 166:  SetShortAddr((0x3F), (0X40) | (0X20));
  3506   001356  0E60               	movlw	96
  3507   001358  6E03               	movwf	SetShortAddr@valor^0,c
  3508   00135A  0E3F               	movlw	63
  3509   00135C  EC19  F00E         	call	_SetShortAddr
  3510   001360                     
  3511                           ;drivers/scr/API_MRF24J40.c: 167:  SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  3512   001360  0E98               	movlw	152
  3513   001362  6E03               	movwf	SetShortAddr@valor^0,c
  3514   001364  0E18               	movlw	24
  3515   001366  EC19  F00E         	call	_SetShortAddr
  3516   00136A                     
  3517                           ;drivers/scr/API_MRF24J40.c: 168:  SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0X01
      +                          ));
  3518   00136A  0E95               	movlw	149
  3519   00136C  6E03               	movwf	SetShortAddr@valor^0,c
  3520   00136E  0E2E               	movlw	46
  3521   001370  EC19  F00E         	call	_SetShortAddr
  3522   001374                     
  3523                           ;drivers/scr/API_MRF24J40.c: 169:  DelayReset(&delay_time_out);
  3524   001374  0E12               	movlw	low InicializoMRF24@delay_time_out
  3525   001376  6E01               	movwf	DelayReset@delay^0,c
  3526   001378  EC06  F00E         	call	_DelayReset	;wreg free
  3527   00137C                     l2046:
  3528                           
  3529                           ;drivers/scr/API_MRF24J40.c: 173:   lectura = GetLongAddr((0x20f)) & (0XA0);
  3530   00137C  0E02               	movlw	2
  3531   00137E  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3532   001380  0E0F               	movlw	15
  3533   001382  6E06               	movwf	GetLongAddr@reg_address^0,c
  3534   001384  ECB8  F00C         	call	_GetLongAddr	;wreg free
  3535   001388  0BA0               	andlw	160
  3536   00138A  6E11               	movwf	InicializoMRF24@lectura^0,c
  3537   00138C                     
  3538                           ;drivers/scr/API_MRF24J40.c: 174:   if(DelayRead(&delay_time_out))
  3539   00138C  0E12               	movlw	low InicializoMRF24@delay_time_out
  3540   00138E  6E02               	movwf	DelayRead@delay^0,c
  3541   001390  EC32  F00B         	call	_DelayRead	;wreg free
  3542   001394  0900               	iorlw	0
  3543   001396  B4D8               	btfsc	status,2,c
  3544   001398  EFD0  F009         	goto	u651
  3545   00139C  EFD2  F009         	goto	u650
  3546   0013A0                     u651:
  3547   0013A0  EFD4  F009         	goto	l2054
  3548   0013A4                     u650:
  3549   0013A4  EF45  F009         	goto	l2006
  3550   0013A8                     l2054:
  3551                           
  3552                           ;drivers/scr/API_MRF24J40.c: 176:  }while(lectura != (0XA0));
  3553   0013A8  0EA0               	movlw	160
  3554   0013AA  1811               	xorwf	InicializoMRF24@lectura^0,w,c
  3555   0013AC  A4D8               	btfss	status,2,c
  3556   0013AE  EFDB  F009         	goto	u661
  3557   0013B2  EFDD  F009         	goto	u660
  3558   0013B6                     u661:
  3559   0013B6  EFBE  F009         	goto	l2046
  3560   0013BA                     u660:
  3561   0013BA                     
  3562                           ;drivers/scr/API_MRF24J40.c: 177:  SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0X10
      +                          ) | (0X04) | (0X01));
  3563   0013BA  0EF5               	movlw	245
  3564   0013BC  6E03               	movwf	SetShortAddr@valor^0,c
  3565   0013BE  0E32               	movlw	50
  3566   0013C0  EC19  F00E         	call	_SetShortAddr
  3567                           
  3568                           ;drivers/scr/API_MRF24J40.c: 178:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  3569   0013C4  0EB9               	movlw	185
  3570   0013C6  6E03               	movwf	SetShortAddr@valor^0,c
  3571   0013C8  0E12               	movlw	18
  3572   0013CA  EC19  F00E         	call	_SetShortAddr
  3573                           
  3574                           ;drivers/scr/API_MRF24J40.c: 179:  SetChannel();
  3575   0013CE  EC38  F00D         	call	_SetChannel	;wreg free
  3576                           
  3577                           ;drivers/scr/API_MRF24J40.c: 180:  SetShortAddr((0x00), (0X00));
  3578   0013D2  0E00               	movlw	0
  3579   0013D4  6E03               	movwf	SetShortAddr@valor^0,c
  3580   0013D6  0E00               	movlw	0
  3581   0013D8  EC19  F00E         	call	_SetShortAddr
  3582                           
  3583                           ;drivers/scr/API_MRF24J40.c: 181:  (void)GetShortAddr((0x31));
  3584   0013DC  0E31               	movlw	49
  3585   0013DE  ECF3  F00D         	call	_GetShortAddr
  3586   0013E2                     
  3587                           ;drivers/scr/API_MRF24J40.c: 182:  return INICIALIZACION_OK;
  3588   0013E2  0E00               	movlw	0
  3589   0013E4                     l104:
  3590   0013E4  0012               	return		;funcret
  3591   0013E6                     __end_of_InicializoMRF24:
  3592                           	callstack 0
  3593                           
  3594 ;; *************** function _SetDeviceMACAddress *****************
  3595 ;; Defined at:
  3596 ;;		line 296 in file "drivers/scr/API_MRF24J40.c"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  i               1    4[COMRAM] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;Total ram usage:        1 bytes
  3615 ;; Hardware stack levels used: 1
  3616 ;; Hardware stack levels required when called: 4
  3617 ;; This function calls:
  3618 ;;		_SetShortAddr
  3619 ;; This function is called by:
  3620 ;;		_InicializoMRF24
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           	psect	text16
  3625   001B6E                     __ptext16:
  3626                           	callstack 0
  3627   001B6E                     _SetDeviceMACAddress:
  3628                           	callstack 24
  3629   001B6E                     
  3630                           ;drivers/scr/API_MRF24J40.c: 298:  for(uint8_t i = 0; i < 8; i++) {
  3631   001B6E  6A05               	clrf	SetDeviceMACAddress@i^0,c
  3632   001B70                     l1934:
  3633                           
  3634                           ;drivers/scr/API_MRF24J40.c: 300:   SetShortAddr(EADR0 + i, data_config_s.my_mac[i]);
  3635   001B70  5005               	movf	SetDeviceMACAddress@i^0,w,c
  3636   001B72  0FAC               	addlw	low (_data_config_s+20)
  3637   001B74  6ED9               	movwf	fsr2l,c
  3638   001B76  6ADA               	clrf	fsr2h,c
  3639   001B78  50DF               	movf	indf2,w,c
  3640   001B7A  6E03               	movwf	SetShortAddr@valor^0,c
  3641   001B7C  5005               	movf	SetDeviceMACAddress@i^0,w,c
  3642   001B7E  0F05               	addlw	5
  3643   001B80  EC19  F00E         	call	_SetShortAddr
  3644   001B84                     
  3645                           ;drivers/scr/API_MRF24J40.c: 301:  }
  3646   001B84  2A05               	incf	SetDeviceMACAddress@i^0,f,c
  3647   001B86  0E07               	movlw	7
  3648   001B88  6405               	cpfsgt	SetDeviceMACAddress@i^0,c
  3649   001B8A  EFC9  F00D         	goto	u611
  3650   001B8E  EFCB  F00D         	goto	u610
  3651   001B92                     u611:
  3652   001B92  EFB8  F00D         	goto	l1934
  3653   001B96                     u610:
  3654   001B96  0012               	return		;funcret
  3655   001B98                     __end_of_SetDeviceMACAddress:
  3656                           	callstack 0
  3657                           
  3658 ;; *************** function _SetDeviceAddress *****************
  3659 ;; Defined at:
  3660 ;;		line 282 in file "drivers/scr/API_MRF24J40.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;		None
  3663 ;; Auto vars:     Size  Location     Type
  3664 ;;		None
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;Total ram usage:        0 bytes
  3679 ;; Hardware stack levels used: 1
  3680 ;; Hardware stack levels required when called: 4
  3681 ;; This function calls:
  3682 ;;		_SetShortAddr
  3683 ;; This function is called by:
  3684 ;;		_InicializoMRF24
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text17
  3689   001B40                     __ptext17:
  3690                           	callstack 0
  3691   001B40                     _SetDeviceAddress:
  3692                           	callstack 24
  3693   001B40                     
  3694                           ;drivers/scr/API_MRF24J40.c: 284:  SetShortAddr((0x04), (uint8_t) (data_config_s.my_addr
      +                          ess >> (0X08)));
  3695   001B40  0100               	movlb	0	; () banked
  3696   001B42  51B7               	movf	(_data_config_s+31)& (0+255),w,b
  3697   001B44  6E03               	movwf	SetShortAddr@valor^0,c
  3698   001B46  0E04               	movlw	4
  3699   001B48  EC19  F00E         	call	_SetShortAddr
  3700                           
  3701                           ;drivers/scr/API_MRF24J40.c: 285:  SetShortAddr((0x03), (uint8_t) (data_config_s.my_addr
      +                          ess));
  3702   001B4C  C0B6  F003         	movff	_data_config_s+30,SetShortAddr@valor
  3703   001B50  0E03               	movlw	3
  3704   001B52  EC19  F00E         	call	_SetShortAddr
  3705                           
  3706                           ;drivers/scr/API_MRF24J40.c: 286:  SetShortAddr((0x02), (uint8_t) (data_config_s.my_pani
      +                          d >> (0X08)));
  3707   001B56  0100               	movlb	0	; () banked
  3708   001B58  51B5               	movf	(_data_config_s+29)& (0+255),w,b
  3709   001B5A  6E03               	movwf	SetShortAddr@valor^0,c
  3710   001B5C  0E02               	movlw	2
  3711   001B5E  EC19  F00E         	call	_SetShortAddr
  3712                           
  3713                           ;drivers/scr/API_MRF24J40.c: 287:  SetShortAddr((0x01), (uint8_t) (data_config_s.my_pani
      +                          d));
  3714   001B62  C0B4  F003         	movff	_data_config_s+28,SetShortAddr@valor
  3715   001B66  0E01               	movlw	1
  3716   001B68  EC19  F00E         	call	_SetShortAddr
  3717   001B6C  0012               	return		;funcret
  3718   001B6E                     __end_of_SetDeviceAddress:
  3719                           	callstack 0
  3720                           
  3721 ;; *************** function _SetChannel *****************
  3722 ;; Defined at:
  3723 ;;		line 268 in file "drivers/scr/API_MRF24J40.c"
  3724 ;; Parameters:    Size  Location     Type
  3725 ;;		None
  3726 ;; Auto vars:     Size  Location     Type
  3727 ;;		None
  3728 ;; Return value:  Size  Location     Type
  3729 ;;                  1    wreg      void 
  3730 ;; Registers used:
  3731 ;;		wreg, status,2, status,0, cstack
  3732 ;; Tracked objects:
  3733 ;;		On entry : 0/0
  3734 ;;		On exit  : 0/0
  3735 ;;		Unchanged: 0/0
  3736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3741 ;;Total ram usage:        1 bytes
  3742 ;; Hardware stack levels used: 1
  3743 ;; Hardware stack levels required when called: 5
  3744 ;; This function calls:
  3745 ;;		_SetLongAddr
  3746 ;;		_SetShortAddr
  3747 ;; This function is called by:
  3748 ;;		_InicializoMRF24
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text18
  3753   001A70                     __ptext18:
  3754                           	callstack 0
  3755   001A70                     _SetChannel:
  3756                           	callstack 23
  3757   001A70                     
  3758                           ;drivers/scr/API_MRF24J40.c: 270:  SetLongAddr((0x200), data_config_s.my_channel);
  3759   001A70  0E02               	movlw	2
  3760   001A72  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3761   001A74  0E00               	movlw	0
  3762   001A76  6E06               	movwf	SetLongAddr@reg_address^0,c
  3763   001A78  C09B  F008         	movff	_data_config_s+3,SetLongAddr@valor
  3764   001A7C  ECDA  F00C         	call	_SetLongAddr	;wreg free
  3765                           
  3766                           ;drivers/scr/API_MRF24J40.c: 271:  SetShortAddr((0x36), (0X04));
  3767   001A80  0E04               	movlw	4
  3768   001A82  6E03               	movwf	SetShortAddr@valor^0,c
  3769   001A84  0E36               	movlw	54
  3770   001A86  EC19  F00E         	call	_SetShortAddr
  3771                           
  3772                           ;drivers/scr/API_MRF24J40.c: 272:  SetShortAddr((0x36), (0X00));
  3773   001A8A  0E00               	movlw	0
  3774   001A8C  6E03               	movwf	SetShortAddr@valor^0,c
  3775   001A8E  0E36               	movlw	54
  3776   001A90  EC19  F00E         	call	_SetShortAddr
  3777   001A94                     
  3778                           ;drivers/scr/API_MRF24J40.c: 273:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3779   001A94  0E06               	movlw	6
  3780   001A96  6E0B               	movwf	??_SetChannel^0,c
  3781   001A98  0E30               	movlw	48
  3782   001A9A                     u1017:
  3783   001A9A  2EE8               	decfsz	wreg,f,c
  3784   001A9C  D7FE               	bra	u1017
  3785   001A9E  2E0B               	decfsz	??_SetChannel^0,f,c
  3786   001AA0  D7FC               	bra	u1017
  3787   001AA2  F000 F000          	nop2	
  3788   001AA6  0012               	return		;funcret
  3789   001AA8                     __end_of_SetChannel:
  3790                           	callstack 0
  3791                           
  3792 ;; *************** function _SetShortAddr *****************
  3793 ;; Defined at:
  3794 ;;		line 191 in file "drivers/scr/API_MRF24J40.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  reg_address     1    wreg     unsigned char 
  3797 ;;  valor           1    2[COMRAM] unsigned char 
  3798 ;; Auto vars:     Size  Location     Type
  3799 ;;  reg_address     1    3[COMRAM] unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  1    wreg      void 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0, cstack
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3809 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3813 ;;Total ram usage:        2 bytes
  3814 ;; Hardware stack levels used: 1
  3815 ;; Hardware stack levels required when called: 3
  3816 ;; This function calls:
  3817 ;;		_SetCSPin
  3818 ;;		_WriteByteSPIPort
  3819 ;; This function is called by:
  3820 ;;		_InicializoMRF24
  3821 ;;		_SetChannel
  3822 ;;		_SetDeviceAddress
  3823 ;;		_SetDeviceMACAddress
  3824 ;;		_MRF24TransmitirDato
  3825 ;;		_MRF24ReciboPaquete
  3826 ;;		_MRF24BuscarDispositivos
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text19
  3831   001C32                     __ptext19:
  3832                           	callstack 0
  3833   001C32                     _SetShortAddr:
  3834                           	callstack 26
  3835                           
  3836                           ;incstack = 0
  3837                           ;SetShortAddr@reg_address stored from wreg
  3838   001C32  6E04               	movwf	SetShortAddr@reg_address^0,c
  3839   001C34                     
  3840                           ;drivers/scr/API_MRF24J40.c: 196:  reg_address = (uint8_t) (reg_address << (0X01)) | (0x
      +                          01);
  3841   001C34  80D8               	bsf	status,0,c
  3842   001C36  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  3843   001C38                     
  3844                           ;drivers/scr/API_MRF24J40.c: 197:  SetCSPin(0);
  3845   001C38  0E00               	movlw	0
  3846   001C3A  ECA9  F00E         	call	_SetCSPin
  3847   001C3E                     
  3848                           ;drivers/scr/API_MRF24J40.c: 198:  WriteByteSPIPort(reg_address);
  3849   001C3E  5004               	movf	SetShortAddr@reg_address^0,w,c
  3850   001C40  ECB7  F00E         	call	_WriteByteSPIPort
  3851   001C44                     
  3852                           ;drivers/scr/API_MRF24J40.c: 199:  WriteByteSPIPort(valor);
  3853   001C44  5003               	movf	SetShortAddr@valor^0,w,c
  3854   001C46  ECB7  F00E         	call	_WriteByteSPIPort
  3855   001C4A                     
  3856                           ;drivers/scr/API_MRF24J40.c: 200:  SetCSPin(1);
  3857   001C4A  0E01               	movlw	1
  3858   001C4C  ECA9  F00E         	call	_SetCSPin
  3859   001C50  0012               	return		;funcret
  3860   001C52                     __end_of_SetShortAddr:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _SetLongAddr *****************
  3864 ;; Defined at:
  3865 ;;		line 230 in file "drivers/scr/API_MRF24J40.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  reg_address     2    5[COMRAM] unsigned short 
  3868 ;;  valor           1    7[COMRAM] unsigned char 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3880 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;Total ram usage:        5 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; Hardware stack levels required when called: 4
  3887 ;; This function calls:
  3888 ;;		_SetCSPin
  3889 ;;		_Write2ByteSPIPort
  3890 ;;		_WriteByteSPIPort
  3891 ;; This function is called by:
  3892 ;;		_InicializoMRF24
  3893 ;;		_SetChannel
  3894 ;;		_MRF24TransmitirDato
  3895 ;;		_MRF24ReciboPaquete
  3896 ;;		_MRF24BuscarDispositivos
  3897 ;; This function uses a non-reentrant model
  3898 ;;
  3899                           
  3900                           	psect	text20
  3901   0019B4                     __ptext20:
  3902                           	callstack 0
  3903   0019B4                     _SetLongAddr:
  3904                           	callstack 25
  3905   0019B4                     
  3906                           ;drivers/scr/API_MRF24J40.c: 235:  reg_address = (reg_address << (0X05)) | (0X8010);
  3907   0019B4  C006  F009         	movff	SetLongAddr@reg_address,??_SetLongAddr
  3908   0019B8  C007  F00A         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  3909   0019BC  0E05               	movlw	5
  3910   0019BE                     u555:
  3911   0019BE  90D8               	bcf	status,0,c
  3912   0019C0  3609               	rlcf	??_SetLongAddr^0,f,c
  3913   0019C2  360A               	rlcf	(??_SetLongAddr+1)^0,f,c
  3914   0019C4  2EE8               	decfsz	wreg,f,c
  3915   0019C6  EFDF  F00C         	goto	u555
  3916   0019CA  0E10               	movlw	16
  3917   0019CC  1009               	iorwf	??_SetLongAddr^0,w,c
  3918   0019CE  6E06               	movwf	SetLongAddr@reg_address^0,c
  3919   0019D0  0E80               	movlw	128
  3920   0019D2  100A               	iorwf	(??_SetLongAddr+1)^0,w,c
  3921   0019D4  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3922   0019D6                     
  3923                           ;drivers/scr/API_MRF24J40.c: 236:  SetCSPin(0);
  3924   0019D6  0E00               	movlw	0
  3925   0019D8  ECA9  F00E         	call	_SetCSPin
  3926   0019DC                     
  3927                           ;drivers/scr/API_MRF24J40.c: 237:  Write2ByteSPIPort(reg_address);
  3928   0019DC  C006  F004         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  3929   0019E0  C007  F005         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3930   0019E4  EC9B  F00E         	call	_Write2ByteSPIPort	;wreg free
  3931   0019E8                     
  3932                           ;drivers/scr/API_MRF24J40.c: 238:  WriteByteSPIPort(valor);
  3933   0019E8  5008               	movf	SetLongAddr@valor^0,w,c
  3934   0019EA  ECB7  F00E         	call	_WriteByteSPIPort
  3935   0019EE                     
  3936                           ;drivers/scr/API_MRF24J40.c: 239:  SetCSPin(1);
  3937   0019EE  0E01               	movlw	1
  3938   0019F0  ECA9  F00E         	call	_SetCSPin
  3939   0019F4  0012               	return		;funcret
  3940   0019F6                     __end_of_SetLongAddr:
  3941                           	callstack 0
  3942                           
  3943 ;; *************** function _GetShortAddr *****************
  3944 ;; Defined at:
  3945 ;;		line 210 in file "drivers/scr/API_MRF24J40.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  reg_address     1    wreg     unsigned char 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  reg_address     1    3[COMRAM] unsigned char 
  3950 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  1    wreg      unsigned char 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;Total ram usage:        2 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 3
  3967 ;; This function calls:
  3968 ;;		_ReadByteSPIPort
  3969 ;;		_SetCSPin
  3970 ;;		_WriteByteSPIPort
  3971 ;; This function is called by:
  3972 ;;		_InicializoMRF24
  3973 ;;		_MRF24ReciboPaquete
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text21
  3978   001BE6                     __ptext21:
  3979                           	callstack 0
  3980   001BE6                     _GetShortAddr:
  3981                           	callstack 26
  3982                           
  3983                           ;incstack = 0
  3984                           ;GetShortAddr@reg_address stored from wreg
  3985   001BE6  6E04               	movwf	GetShortAddr@reg_address^0,c
  3986   001BE8                     
  3987                           ;drivers/scr/API_MRF24J40.c: 216:  reg_address = (uint8_t) (reg_address << (0X01)) & (0x
      +                          7E);
  3988   001BE8  5004               	movf	GetShortAddr@reg_address^0,w,c
  3989   001BEA  2404               	addwf	GetShortAddr@reg_address^0,w,c
  3990   001BEC  0B7E               	andlw	126
  3991   001BEE  6E04               	movwf	GetShortAddr@reg_address^0,c
  3992   001BF0                     
  3993                           ;drivers/scr/API_MRF24J40.c: 217:  SetCSPin(0);
  3994   001BF0  0E00               	movlw	0
  3995   001BF2  ECA9  F00E         	call	_SetCSPin
  3996   001BF6                     
  3997                           ;drivers/scr/API_MRF24J40.c: 218:  WriteByteSPIPort(reg_address);
  3998   001BF6  5004               	movf	GetShortAddr@reg_address^0,w,c
  3999   001BF8  ECB7  F00E         	call	_WriteByteSPIPort
  4000   001BFC                     
  4001                           ;drivers/scr/API_MRF24J40.c: 219:  leido_spi = ReadByteSPIPort();
  4002   001BFC  ECC1  F00E         	call	_ReadByteSPIPort	;wreg free
  4003   001C00  6E03               	movwf	GetShortAddr@leido_spi^0,c
  4004   001C02                     
  4005                           ;drivers/scr/API_MRF24J40.c: 220:  SetCSPin(1);
  4006   001C02  0E01               	movlw	1
  4007   001C04  ECA9  F00E         	call	_SetCSPin
  4008   001C08                     
  4009                           ;drivers/scr/API_MRF24J40.c: 221:  return leido_spi;
  4010   001C08  5003               	movf	GetShortAddr@leido_spi^0,w,c
  4011   001C0A  0012               	return		;funcret
  4012   001C0C                     __end_of_GetShortAddr:
  4013                           	callstack 0
  4014                           
  4015 ;; *************** function _WriteByteSPIPort *****************
  4016 ;; Defined at:
  4017 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;  dato            1    wreg     unsigned char 
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;  dato            1    1[COMRAM] unsigned char 
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4032 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4034 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;Total ram usage:        1 bytes
  4036 ;; Hardware stack levels used: 1
  4037 ;; Hardware stack levels required when called: 2
  4038 ;; This function calls:
  4039 ;;		_SPIWriteByte
  4040 ;; This function is called by:
  4041 ;;		_SetShortAddr
  4042 ;;		_GetShortAddr
  4043 ;;		_SetLongAddr
  4044 ;; This function uses a non-reentrant model
  4045 ;;
  4046                           
  4047                           	psect	text22
  4048   001D6E                     __ptext22:
  4049                           	callstack 0
  4050   001D6E                     _WriteByteSPIPort:
  4051                           	callstack 26
  4052                           
  4053                           ;incstack = 0
  4054                           ;WriteByteSPIPort@dato stored from wreg
  4055   001D6E  6E02               	movwf	WriteByteSPIPort@dato^0,c
  4056   001D70                     
  4057                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  4058   001D70  5002               	movf	WriteByteSPIPort@dato^0,w,c
  4059   001D72  EC56  F00E         	call	_SPIWriteByte
  4060   001D76  0012               	return		;funcret
  4061   001D78                     __end_of_WriteByteSPIPort:
  4062                           	callstack 0
  4063                           
  4064 ;; *************** function _GetLongAddr *****************
  4065 ;; Defined at:
  4066 ;;		line 249 in file "drivers/scr/API_MRF24J40.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;  reg_address     2    5[COMRAM] unsigned short 
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;  respuesta       1    9[COMRAM] unsigned char 
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  1    wreg      unsigned char 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4080 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4081 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4082 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;Total ram usage:        5 bytes
  4085 ;; Hardware stack levels used: 1
  4086 ;; Hardware stack levels required when called: 4
  4087 ;; This function calls:
  4088 ;;		_ReadByteSPIPort
  4089 ;;		_SetCSPin
  4090 ;;		_Write2ByteSPIPort
  4091 ;; This function is called by:
  4092 ;;		_InicializoMRF24
  4093 ;;		_MRF24ReciboPaquete
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text23
  4098   001970                     __ptext23:
  4099                           	callstack 0
  4100   001970                     _GetLongAddr:
  4101                           	callstack 25
  4102   001970                     
  4103                           ;drivers/scr/API_MRF24J40.c: 254:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 255:  
      +                          reg_address = (reg_address << (0X05)) | (0X8000);
  4104   001970  C006  F008         	movff	GetLongAddr@reg_address,??_GetLongAddr
  4105   001974  C007  F009         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  4106   001978  0E05               	movlw	5
  4107   00197A                     u625:
  4108   00197A  90D8               	bcf	status,0,c
  4109   00197C  3608               	rlcf	??_GetLongAddr^0,f,c
  4110   00197E  3609               	rlcf	(??_GetLongAddr+1)^0,f,c
  4111   001980  2EE8               	decfsz	wreg,f,c
  4112   001982  EFBD  F00C         	goto	u625
  4113   001986  0E00               	movlw	0
  4114   001988  1008               	iorwf	??_GetLongAddr^0,w,c
  4115   00198A  6E06               	movwf	GetLongAddr@reg_address^0,c
  4116   00198C  0E80               	movlw	128
  4117   00198E  1009               	iorwf	(??_GetLongAddr+1)^0,w,c
  4118   001990  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  4119   001992                     
  4120                           ;drivers/scr/API_MRF24J40.c: 256:  SetCSPin(0);
  4121   001992  0E00               	movlw	0
  4122   001994  ECA9  F00E         	call	_SetCSPin
  4123   001998                     
  4124                           ;drivers/scr/API_MRF24J40.c: 257:  Write2ByteSPIPort(reg_address);
  4125   001998  C006  F004         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  4126   00199C  C007  F005         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  4127   0019A0  EC9B  F00E         	call	_Write2ByteSPIPort	;wreg free
  4128   0019A4                     
  4129                           ;drivers/scr/API_MRF24J40.c: 258:  respuesta = ReadByteSPIPort();
  4130   0019A4  ECC1  F00E         	call	_ReadByteSPIPort	;wreg free
  4131   0019A8  6E0A               	movwf	GetLongAddr@respuesta^0,c
  4132   0019AA                     
  4133                           ;drivers/scr/API_MRF24J40.c: 259:  SetCSPin(1);
  4134   0019AA  0E01               	movlw	1
  4135   0019AC  ECA9  F00E         	call	_SetCSPin
  4136   0019B0                     
  4137                           ;drivers/scr/API_MRF24J40.c: 260:  return respuesta;
  4138   0019B0  500A               	movf	GetLongAddr@respuesta^0,w,c
  4139   0019B2  0012               	return		;funcret
  4140   0019B4                     __end_of_GetLongAddr:
  4141                           	callstack 0
  4142                           
  4143 ;; *************** function _Write2ByteSPIPort *****************
  4144 ;; Defined at:
  4145 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  dato            2    3[COMRAM] unsigned short 
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg, status,2, cstack
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4159 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4163 ;;Total ram usage:        2 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 3
  4166 ;; This function calls:
  4167 ;;		_SPIWrite2Byte
  4168 ;; This function is called by:
  4169 ;;		_SetLongAddr
  4170 ;;		_GetLongAddr
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174                           	psect	text24
  4175   001D36                     __ptext24:
  4176                           	callstack 0
  4177   001D36                     _Write2ByteSPIPort:
  4178                           	callstack 25
  4179   001D36                     
  4180                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  4181   001D36  C004  F002         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  4182   001D3A  C005  F003         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  4183   001D3E  ECA2  F00E         	call	_SPIWrite2Byte	;wreg free
  4184   001D42  0012               	return		;funcret
  4185   001D44                     __end_of_Write2ByteSPIPort:
  4186                           	callstack 0
  4187                           
  4188 ;; *************** function _SPIWrite2Byte *****************
  4189 ;; Defined at:
  4190 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  4191 ;; Parameters:    Size  Location     Type
  4192 ;;  dato            2    1[COMRAM] unsigned short 
  4193 ;; Auto vars:     Size  Location     Type
  4194 ;;		None
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  1    wreg      void 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, cstack
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4208 ;;Total ram usage:        2 bytes
  4209 ;; Hardware stack levels used: 1
  4210 ;; Hardware stack levels required when called: 2
  4211 ;; This function calls:
  4212 ;;		_SPIWriteByte
  4213 ;; This function is called by:
  4214 ;;		_Write2ByteSPIPort
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           	psect	text25
  4219   001D44                     __ptext25:
  4220                           	callstack 0
  4221   001D44                     _SPIWrite2Byte:
  4222                           	callstack 25
  4223   001D44                     
  4224                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  4225   001D44  5003               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  4226   001D46  EC56  F00E         	call	_SPIWriteByte
  4227                           
  4228                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  4229   001D4A  5002               	movf	SPIWrite2Byte@dato^0,w,c
  4230   001D4C  EC56  F00E         	call	_SPIWriteByte
  4231   001D50  0012               	return		;funcret
  4232   001D52                     __end_of_SPIWrite2Byte:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _SPIWriteByte *****************
  4236 ;; Defined at:
  4237 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;  dato            1    wreg     unsigned char 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  dato            1    0[COMRAM] unsigned char 
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;Total ram usage:        1 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 1
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_WriteByteSPIPort
  4262 ;;		_SPIWrite2Byte
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text26
  4267   001CAC                     __ptext26:
  4268                           	callstack 0
  4269   001CAC                     _SPIWriteByte:
  4270                           	callstack 26
  4271                           
  4272                           ;incstack = 0
  4273                           ;SPIWriteByte@dato stored from wreg
  4274   001CAC  6E01               	movwf	SPIWriteByte@dato^0,c
  4275   001CAE                     
  4276                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  4277   001CAE  969E               	bcf	158,3,c	;volatile
  4278   001CB0                     
  4279                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  4280   001CB0  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  4281   001CB4                     l205:
  4282   001CB4  A69E               	btfss	158,3,c	;volatile
  4283   001CB6  EF5F  F00E         	goto	u521
  4284   001CBA  EF61  F00E         	goto	u520
  4285   001CBE                     u521:
  4286   001CBE  EF5A  F00E         	goto	l205
  4287   001CC2                     u520:
  4288   001CC2  0012               	return		;funcret
  4289   001CC4                     __end_of_SPIWriteByte:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _SetCSPin *****************
  4293 ;; Defined at:
  4294 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  estado          1    wreg     _Bool 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  estado          1    0[COMRAM] _Bool 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      void 
  4301 ;; Registers used:
  4302 ;;		wreg
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;Total ram usage:        1 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 1
  4315 ;; This function calls:
  4316 ;;		Nothing
  4317 ;; This function is called by:
  4318 ;;		_InicializoPines
  4319 ;;		_SetShortAddr
  4320 ;;		_GetShortAddr
  4321 ;;		_SetLongAddr
  4322 ;;		_GetLongAddr
  4323 ;; This function uses a non-reentrant model
  4324 ;;
  4325                           
  4326                           	psect	text27
  4327   001D52                     __ptext27:
  4328                           	callstack 0
  4329   001D52                     _SetCSPin:
  4330                           	callstack 27
  4331                           
  4332                           ;incstack = 0
  4333                           ;SetCSPin@estado stored from wreg
  4334   001D52  6E01               	movwf	SetCSPin@estado^0,c
  4335   001D54                     
  4336                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  4337   001D54  B001               	btfsc	SetCSPin@estado^0,0,c
  4338   001D56  D002               	bra	u535
  4339   001D58  9C8B               	bcf	139,6,c	;volatile
  4340   001D5A  D001               	bra	u536
  4341   001D5C                     u535:
  4342   001D5C  8C8B               	bsf	139,6,c	;volatile
  4343   001D5E                     u536:
  4344   001D5E  0012               	return		;funcret
  4345   001D60                     __end_of_SetCSPin:
  4346                           	callstack 0
  4347                           
  4348 ;; *************** function _ReadByteSPIPort *****************
  4349 ;; Defined at:
  4350 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;		None
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1    wreg      unsigned char 
  4357 ;; Registers used:
  4358 ;;		wreg, status,2, cstack
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/0
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;Total ram usage:        0 bytes
  4369 ;; Hardware stack levels used: 1
  4370 ;; Hardware stack levels required when called: 2
  4371 ;; This function calls:
  4372 ;;		_SPIRead
  4373 ;; This function is called by:
  4374 ;;		_GetShortAddr
  4375 ;;		_GetLongAddr
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text28
  4380   001D82                     __ptext28:
  4381                           	callstack 0
  4382   001D82                     _ReadByteSPIPort:
  4383                           	callstack 26
  4384   001D82                     
  4385                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  4386   001D82  EC6E  F00E         	call	_SPIRead	;wreg free
  4387   001D86  0012               	return		;funcret
  4388   001D88                     __end_of_ReadByteSPIPort:
  4389                           	callstack 0
  4390                           
  4391 ;; *************** function _SPIRead *****************
  4392 ;; Defined at:
  4393 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;		None
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      unsigned char 
  4400 ;; Registers used:
  4401 ;;		wreg, status,2
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;Total ram usage:        0 bytes
  4412 ;; Hardware stack levels used: 1
  4413 ;; Hardware stack levels required when called: 1
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_ReadByteSPIPort
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           	psect	text29
  4422   001CDC                     __ptext29:
  4423                           	callstack 0
  4424   001CDC                     _SPIRead:
  4425                           	callstack 26
  4426   001CDC                     
  4427                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  4428   001CDC  9EC6               	bcf	198,7,c	;volatile
  4429                           
  4430                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  4431   001CDE  6AC9               	clrf	201,c	;volatile
  4432   001CE0                     l214:
  4433   001CE0  A0C7               	btfss	199,0,c	;volatile
  4434   001CE2  EF75  F00E         	goto	u541
  4435   001CE6  EF77  F00E         	goto	u540
  4436   001CEA                     u541:
  4437   001CEA  EF70  F00E         	goto	l214
  4438   001CEE                     u540:
  4439   001CEE                     
  4440                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  4441   001CEE  50C9               	movf	201,w,c	;volatile
  4442   001CF0  0012               	return		;funcret
  4443   001CF2                     __end_of_SPIRead:
  4444                           	callstack 0
  4445                           
  4446 ;; *************** function _DelayReset *****************
  4447 ;; Defined at:
  4448 ;;		line 68 in file "drivers/scr/API_delay.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  delay           1    0[COMRAM] PTR struct .
  4451 ;;		 -> InicializoMRF24@delay_time_out(9), 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;		None
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  1    wreg      void 
  4456 ;; Registers used:
  4457 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4463 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;Total ram usage:        1 bytes
  4468 ;; Hardware stack levels used: 1
  4469 ;; Hardware stack levels required when called: 1
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_InicializoMRF24
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text30
  4478   001C0C                     __ptext30:
  4479                           	callstack 0
  4480   001C0C                     _DelayReset:
  4481                           	callstack 27
  4482   001C0C                     
  4483                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  4484   001C0C  5001               	movf	DelayReset@delay^0,w,c
  4485   001C0E  6ED9               	movwf	fsr2l,c
  4486   001C10  6ADA               	clrf	fsr2h,c
  4487   001C12  C03A  FFDE         	movff	_timeStamp,postinc2
  4488   001C16  C03B  FFDE         	movff	_timeStamp+1,postinc2
  4489   001C1A  C03C  FFDE         	movff	_timeStamp+2,postinc2
  4490   001C1E  C03D  FFDE         	movff	_timeStamp+3,postinc2
  4491   001C22                     
  4492                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  4493   001C22  5001               	movf	DelayReset@delay^0,w,c
  4494   001C24  6ED9               	movwf	fsr2l,c
  4495   001C26  6ADA               	clrf	fsr2h,c
  4496   001C28  0E08               	movlw	8
  4497   001C2A  26D9               	addwf	fsr2l,f,c
  4498   001C2C  0E01               	movlw	1
  4499   001C2E  6EDF               	movwf	indf2,c
  4500   001C30  0012               	return		;funcret
  4501   001C32                     __end_of_DelayReset:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _MRF24IsNewMsg *****************
  4505 ;; Defined at:
  4506 ;;		line 411 in file "drivers/scr/API_MRF24J40.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;		None
  4509 ;; Auto vars:     Size  Location     Type
  4510 ;;		None
  4511 ;; Return value:  Size  Location     Type
  4512 ;;                  1    wreg      enum E3264
  4513 ;; Registers used:
  4514 ;;		wreg, status,2, cstack
  4515 ;; Tracked objects:
  4516 ;;		On entry : 0/0
  4517 ;;		On exit  : 0/0
  4518 ;;		Unchanged: 0/0
  4519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4524 ;;Total ram usage:        0 bytes
  4525 ;; Hardware stack levels used: 1
  4526 ;; Hardware stack levels required when called: 2
  4527 ;; This function calls:
  4528 ;;		_IsMRF24Interrup
  4529 ;; This function is called by:
  4530 ;;		_main
  4531 ;; This function uses a non-reentrant model
  4532 ;;
  4533                           
  4534                           	psect	text31
  4535   001ADC                     __ptext31:
  4536                           	callstack 0
  4537   001ADC                     _MRF24IsNewMsg:
  4538                           	callstack 28
  4539   001ADC                     
  4540                           ;drivers/scr/API_MRF24J40.c: 413:  if(estadoActual != INICIALIZACION_OK)
  4541   001ADC  503E               	movf	_estadoActual^0,w,c
  4542   001ADE  B4D8               	btfsc	status,2,c
  4543   001AE0  EF74  F00D         	goto	u271
  4544   001AE4  EF76  F00D         	goto	u270
  4545   001AE8                     u271:
  4546   001AE8  EF79  F00D         	goto	l1518
  4547   001AEC                     u270:
  4548   001AEC                     
  4549                           ;drivers/scr/API_MRF24J40.c: 414:   return ERROR_INESPERADO;
  4550   001AEC  0E09               	movlw	9
  4551   001AEE  EF87  F00D         	goto	l163
  4552   001AF2                     l1518:
  4553                           
  4554                           ;drivers/scr/API_MRF24J40.c: 416:  if(!IsMRF24Interrup())
  4555   001AF2  EC83  F00E         	call	_IsMRF24Interrup	;wreg free
  4556   001AF6  0900               	iorlw	0
  4557   001AF8  A4D8               	btfss	status,2,c
  4558   001AFA  EF81  F00D         	goto	u281
  4559   001AFE  EF83  F00D         	goto	u280
  4560   001B02                     u281:
  4561   001B02  EF86  F00D         	goto	l1524
  4562   001B06                     u280:
  4563   001B06                     
  4564                           ;drivers/scr/API_MRF24J40.c: 417:   return MSG_PRESENTE;
  4565   001B06  0E03               	movlw	3
  4566   001B08  EF87  F00D         	goto	l163
  4567   001B0C                     l1524:
  4568                           
  4569                           ;drivers/scr/API_MRF24J40.c: 418:  return MSG_NO_PRESENTE;
  4570   001B0C  0E04               	movlw	4
  4571   001B0E                     l163:
  4572   001B0E  0012               	return		;funcret
  4573   001B10                     __end_of_MRF24IsNewMsg:
  4574                           	callstack 0
  4575                           
  4576 ;; *************** function _IsMRF24Interrup *****************
  4577 ;; Defined at:
  4578 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      _Bool 
  4585 ;; Registers used:
  4586 ;;		wreg
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4596 ;;Total ram usage:        0 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; Hardware stack levels required when called: 1
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_MRF24IsNewMsg
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           	psect	text32
  4607   001D06                     __ptext32:
  4608                           	callstack 0
  4609   001D06                     _IsMRF24Interrup:
  4610                           	callstack 28
  4611   001D06                     
  4612                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  4613   001D06  B081               	btfsc	129,0,c	;volatile
  4614   001D08  EF88  F00E         	goto	u141
  4615   001D0C  EF8B  F00E         	goto	u140
  4616   001D10                     u141:
  4617   001D10  0E01               	movlw	1
  4618   001D12  EF8C  F00E         	goto	u146
  4619   001D16                     u140:
  4620   001D16  0E00               	movlw	0
  4621   001D18                     u146:
  4622   001D18  0012               	return		;funcret
  4623   001D1A                     __end_of_IsMRF24Interrup:
  4624                           	callstack 0
  4625                           
  4626 ;; *************** function _MRF24GetMiAddr *****************
  4627 ;; Defined at:
  4628 ;;		line 470 in file "drivers/scr/API_MRF24J40.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;		None
  4631 ;; Auto vars:     Size  Location     Type
  4632 ;;		None
  4633 ;; Return value:  Size  Location     Type
  4634 ;;                  2    0[COMRAM] unsigned short 
  4635 ;; Registers used:
  4636 ;;		None
  4637 ;; Tracked objects:
  4638 ;;		On entry : 0/0
  4639 ;;		On exit  : 0/0
  4640 ;;		Unchanged: 0/0
  4641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4645 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4646 ;;Total ram usage:        2 bytes
  4647 ;; Hardware stack levels used: 1
  4648 ;; Hardware stack levels required when called: 1
  4649 ;; This function calls:
  4650 ;;		Nothing
  4651 ;; This function is called by:
  4652 ;;		_main
  4653 ;; This function uses a non-reentrant model
  4654 ;;
  4655                           
  4656                           	psect	text33
  4657   001D78                     __ptext33:
  4658                           	callstack 0
  4659   001D78                     _MRF24GetMiAddr:
  4660                           	callstack 29
  4661   001D78                     
  4662                           ;drivers/scr/API_MRF24J40.c: 472:  return data_config_s.my_address;
  4663   001D78  C0B6  F001         	movff	_data_config_s+30,?_MRF24GetMiAddr
  4664   001D7C  C0B7  F002         	movff	_data_config_s+31,?_MRF24GetMiAddr+1
  4665   001D80  0012               	return		;funcret
  4666   001D82                     __end_of_MRF24GetMiAddr:
  4667                           	callstack 0
  4668                           
  4669 ;; *************** function _MRF24GetMensajeEntrada *****************
  4670 ;; Defined at:
  4671 ;;		line 450 in file "drivers/scr/API_MRF24J40.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;		None
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;		None
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  1    0[COMRAM] PTR unsigned char 
  4678 ;; Registers used:
  4679 ;;		wreg, status,2, status,0
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4689 ;;Total ram usage:        2 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 1
  4692 ;; This function calls:
  4693 ;;		Nothing
  4694 ;; This function is called by:
  4695 ;;		_main
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text34
  4700   001D88                     __ptext34:
  4701                           	callstack 0
  4702   001D88                     _MRF24GetMensajeEntrada:
  4703                           	callstack 29
  4704   001D88                     
  4705                           ;drivers/scr/API_MRF24J40.c: 452:  return data_in_s.buffer;
  4706   001D88  0E60               	movlw	_data_in_s& (0+255)
  4707   001D8A  0F06               	addlw	6
  4708   001D8C  0012               	return		;funcret
  4709   001D8E                     __end_of_MRF24GetMensajeEntrada:
  4710                           	callstack 0
  4711                           
  4712 ;; *************** function _DebounceFSMUpdate *****************
  4713 ;; Defined at:
  4714 ;;		line 34 in file "drivers/scr/API_debounce.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  antirrebote_    1   14[COMRAM] PTR struct .
  4717 ;;		 -> main@boton1(11), 
  4718 ;;  estado_pin      1   15[COMRAM] _Bool 
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      enum E2763
  4723 ;; Registers used:
  4724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;Total ram usage:        4 bytes
  4735 ;; Hardware stack levels used: 1
  4736 ;; Hardware stack levels required when called: 3
  4737 ;; This function calls:
  4738 ;;		_DebounceFSMInit
  4739 ;;		_DelayRead
  4740 ;; This function is called by:
  4741 ;;		_main
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text35
  4746   001528                     __ptext35:
  4747                           	callstack 0
  4748   001528                     _DebounceFSMUpdate:
  4749                           	callstack 27
  4750   001528                     
  4751                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  4752   001528  EF0E  F00B         	goto	l2254
  4753   00152C                     l2202:
  4754                           
  4755                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  4756   00152C  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4757   00152E  A4D8               	btfss	status,2,c
  4758   001530  EF9C  F00A         	goto	u771
  4759   001534  EF9E  F00A         	goto	u770
  4760   001538                     u771:
  4761   001538  EF30  F00B         	goto	l2256
  4762   00153C                     u770:
  4763   00153C                     
  4764                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  4765   00153C  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4766   00153E  6ED9               	movwf	fsr2l,c
  4767   001540  6ADA               	clrf	fsr2h,c
  4768   001542  0E01               	movlw	1
  4769   001544  26D9               	addwf	fsr2l,f,c
  4770   001546  0E01               	movlw	1
  4771   001548  6EDF               	movwf	indf2,c
  4772   00154A  EF30  F00B         	goto	l2256
  4773   00154E                     l2206:
  4774                           
  4775                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4776   00154E  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4777   001550  0F02               	addlw	2
  4778   001552  6E02               	movwf	DelayRead@delay^0,c
  4779   001554  EC32  F00B         	call	_DelayRead	;wreg free
  4780   001558  0900               	iorlw	0
  4781   00155A  B4D8               	btfsc	status,2,c
  4782   00155C  EFB2  F00A         	goto	u781
  4783   001560  EFB4  F00A         	goto	u780
  4784   001564                     u781:
  4785   001564  EF30  F00B         	goto	l2256
  4786   001568                     u780:
  4787   001568                     
  4788                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  4789   001568  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4790   00156A  A4D8               	btfss	status,2,c
  4791   00156C  EFBA  F00A         	goto	u791
  4792   001570  EFBC  F00A         	goto	u790
  4793   001574                     u791:
  4794   001574  EFC6  F00A         	goto	l2218
  4795   001578                     u790:
  4796   001578                     
  4797                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4798   001578  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4799   00157A  6ED9               	movwf	fsr2l,c
  4800   00157C  6ADA               	clrf	fsr2h,c
  4801   00157E  0E01               	movlw	1
  4802   001580  26D9               	addwf	fsr2l,f,c
  4803   001582  0E02               	movlw	2
  4804   001584  6EDF               	movwf	indf2,c
  4805   001586                     
  4806                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  4807   001586  0E01               	movlw	1
  4808   001588  EF31  F00B         	goto	l256
  4809   00158C                     l2218:
  4810                           
  4811                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4812   00158C  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4813   00158E  6ED9               	movwf	fsr2l,c
  4814   001590  6ADA               	clrf	fsr2h,c
  4815   001592  0E01               	movlw	1
  4816   001594  26D9               	addwf	fsr2l,f,c
  4817   001596  6ADF               	clrf	indf2,c
  4818   001598                     l2220:
  4819                           
  4820                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  4821   001598  0E04               	movlw	4
  4822   00159A  EF31  F00B         	goto	l256
  4823   00159E                     l2224:
  4824                           
  4825                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4826   00159E  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4827   0015A0  0F02               	addlw	2
  4828   0015A2  6E02               	movwf	DelayRead@delay^0,c
  4829   0015A4  EC32  F00B         	call	_DelayRead	;wreg free
  4830   0015A8  0900               	iorlw	0
  4831   0015AA  B4D8               	btfsc	status,2,c
  4832   0015AC  EFDA  F00A         	goto	u801
  4833   0015B0  EFDC  F00A         	goto	u800
  4834   0015B4                     u801:
  4835   0015B4  EF30  F00B         	goto	l2256
  4836   0015B8                     u800:
  4837   0015B8                     
  4838                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  4839   0015B8  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4840   0015BA  B4D8               	btfsc	status,2,c
  4841   0015BC  EFE2  F00A         	goto	u811
  4842   0015C0  EFE4  F00A         	goto	u810
  4843   0015C4                     u811:
  4844   0015C4  EFED  F00A         	goto	l2236
  4845   0015C8                     u810:
  4846   0015C8                     
  4847                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4848   0015C8  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4849   0015CA  6ED9               	movwf	fsr2l,c
  4850   0015CC  6ADA               	clrf	fsr2h,c
  4851   0015CE  0E01               	movlw	1
  4852   0015D0  26D9               	addwf	fsr2l,f,c
  4853   0015D2  6ADF               	clrf	indf2,c
  4854   0015D4                     
  4855                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  4856   0015D4  0E02               	movlw	2
  4857   0015D6  EF31  F00B         	goto	l256
  4858   0015DA                     l2236:
  4859                           
  4860                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4861   0015DA  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4862   0015DC  6ED9               	movwf	fsr2l,c
  4863   0015DE  6ADA               	clrf	fsr2h,c
  4864   0015E0  0E01               	movlw	1
  4865   0015E2  26D9               	addwf	fsr2l,f,c
  4866   0015E4  0E02               	movlw	2
  4867   0015E6  6EDF               	movwf	indf2,c
  4868   0015E8  EFCC  F00A         	goto	l2220
  4869   0015EC                     l2242:
  4870                           
  4871                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  4872   0015EC  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4873   0015EE  B4D8               	btfsc	status,2,c
  4874   0015F0  EFFC  F00A         	goto	u821
  4875   0015F4  EFFE  F00A         	goto	u820
  4876   0015F8                     u821:
  4877   0015F8  EF30  F00B         	goto	l2256
  4878   0015FC                     u820:
  4879   0015FC                     
  4880                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  4881   0015FC  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4882   0015FE  6ED9               	movwf	fsr2l,c
  4883   001600  6ADA               	clrf	fsr2h,c
  4884   001602  0E01               	movlw	1
  4885   001604  26D9               	addwf	fsr2l,f,c
  4886   001606  0E03               	movlw	3
  4887   001608  6EDF               	movwf	indf2,c
  4888   00160A  EF30  F00B         	goto	l2256
  4889   00160E                     l2246:
  4890                           
  4891                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  4892   00160E  C00F  F006         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  4893   001612  EC88  F00D         	call	_DebounceFSMInit	;wreg free
  4894   001616                     
  4895                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  4896   001616  0E00               	movlw	0
  4897   001618  EF31  F00B         	goto	l256
  4898   00161C                     l2254:
  4899   00161C  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4900   00161E  6ED9               	movwf	fsr2l,c
  4901   001620  6ADA               	clrf	fsr2h,c
  4902   001622  0E01               	movlw	1
  4903   001624  26D9               	addwf	fsr2l,f,c
  4904   001626  50DF               	movf	indf2,w,c
  4905   001628  6E11               	movwf	??_DebounceFSMUpdate^0,c
  4906   00162A  6A12               	clrf	(??_DebounceFSMUpdate+1)^0,c
  4907                           
  4908                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4909                           ; Switch size 1, requested type "simple"
  4910                           ; Number of cases is 1, Range of values is 0 to 0
  4911                           ; switch strategies available:
  4912                           ; Name         Instructions Cycles
  4913                           ; simple_byte            4     3 (average)
  4914                           ;	Chosen strategy is simple_byte
  4915   00162C  5012               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  4916   00162E  0A00               	xorlw	0	; case 0
  4917   001630  B4D8               	btfsc	status,2,c
  4918   001632  EF1D  F00B         	goto	l2458
  4919   001636  EF07  F00B         	goto	l2246
  4920   00163A                     l2458:
  4921                           
  4922                           ; Switch size 1, requested type "simple"
  4923                           ; Number of cases is 4, Range of values is 0 to 3
  4924                           ; switch strategies available:
  4925                           ; Name         Instructions Cycles
  4926                           ; simple_byte           13     7 (average)
  4927                           ;	Chosen strategy is simple_byte
  4928   00163A  5011               	movf	??_DebounceFSMUpdate^0,w,c
  4929   00163C  0A00               	xorlw	0	; case 0
  4930   00163E  B4D8               	btfsc	status,2,c
  4931   001640  EF96  F00A         	goto	l2202
  4932   001644  0A01               	xorlw	1	; case 1
  4933   001646  B4D8               	btfsc	status,2,c
  4934   001648  EFA7  F00A         	goto	l2206
  4935   00164C  0A03               	xorlw	3	; case 2
  4936   00164E  B4D8               	btfsc	status,2,c
  4937   001650  EFF6  F00A         	goto	l2242
  4938   001654  0A01               	xorlw	1	; case 3
  4939   001656  B4D8               	btfsc	status,2,c
  4940   001658  EFCF  F00A         	goto	l2224
  4941   00165C  EF07  F00B         	goto	l2246
  4942   001660                     l2256:
  4943                           
  4944                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  4945   001660  0E03               	movlw	3
  4946   001662                     l256:
  4947   001662  0012               	return		;funcret
  4948   001664                     __end_of_DebounceFSMUpdate:
  4949                           	callstack 0
  4950                           
  4951 ;; *************** function _DelayRead *****************
  4952 ;; Defined at:
  4953 ;;		line 34 in file "drivers/scr/API_delay.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  delay           1    1[COMRAM] PTR struct .
  4956 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;		None
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  1    wreg      _Bool 
  4961 ;; Registers used:
  4962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4968 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;Total ram usage:       13 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; Hardware stack levels required when called: 2
  4975 ;; This function calls:
  4976 ;;		_DelayIsRunning
  4977 ;; This function is called by:
  4978 ;;		_InicializoMRF24
  4979 ;;		_DebounceFSMUpdate
  4980 ;;		_main
  4981 ;; This function uses a non-reentrant model
  4982 ;;
  4983                           
  4984                           	psect	text36
  4985   001664                     __ptext36:
  4986                           	callstack 0
  4987   001664                     _DelayRead:
  4988                           	callstack 26
  4989   001664                     
  4990                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  4991   001664  C002  F001         	movff	DelayRead@delay,DelayIsRunning@delay
  4992   001668  ECB0  F00E         	call	_DelayIsRunning	;wreg free
  4993   00166C  0900               	iorlw	0
  4994   00166E  A4D8               	btfss	status,2,c
  4995   001670  EF3C  F00B         	goto	u591
  4996   001674  EF3E  F00B         	goto	u590
  4997   001678                     u591:
  4998   001678  EF52  F00B         	goto	l1912
  4999   00167C                     u590:
  5000   00167C                     
  5001                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  5002   00167C  5002               	movf	DelayRead@delay^0,w,c
  5003   00167E  6ED9               	movwf	fsr2l,c
  5004   001680  6ADA               	clrf	fsr2h,c
  5005   001682  C03A  FFDE         	movff	_timeStamp,postinc2
  5006   001686  C03B  FFDE         	movff	_timeStamp+1,postinc2
  5007   00168A  C03C  FFDE         	movff	_timeStamp+2,postinc2
  5008   00168E  C03D  FFDE         	movff	_timeStamp+3,postinc2
  5009   001692                     
  5010                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  5011   001692  5002               	movf	DelayRead@delay^0,w,c
  5012   001694  6ED9               	movwf	fsr2l,c
  5013   001696  6ADA               	clrf	fsr2h,c
  5014   001698  0E08               	movlw	8
  5015   00169A  26D9               	addwf	fsr2l,f,c
  5016   00169C  0E01               	movlw	1
  5017   00169E  6EDF               	movwf	indf2,c
  5018                           
  5019                           ;drivers/scr/API_delay.c: 40:  } else {
  5020   0016A0  EF86  F00B         	goto	l1920
  5021   0016A4                     l1912:
  5022                           
  5023                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  5024   0016A4  5002               	movf	DelayRead@delay^0,w,c
  5025   0016A6  6ED9               	movwf	fsr2l,c
  5026   0016A8  6ADA               	clrf	fsr2h,c
  5027   0016AA  0E04               	movlw	4
  5028   0016AC  26D9               	addwf	fsr2l,f,c
  5029   0016AE  5002               	movf	DelayRead@delay^0,w,c
  5030   0016B0  6EE1               	movwf	fsr1l,c
  5031   0016B2  6AE2               	clrf	fsr1h,c
  5032   0016B4  CFE6 F007          	movff	postinc1,??_DelayRead+4
  5033   0016B8  CFE6 F008          	movff	postinc1,??_DelayRead+5
  5034   0016BC  CFE6 F009          	movff	postinc1,??_DelayRead+6
  5035   0016C0  CFE6 F00A          	movff	postinc1,??_DelayRead+7
  5036   0016C4  5007               	movf	(??_DelayRead+4)^0,w,c
  5037   0016C6  5C3A               	subwf	_timeStamp^0,w,c
  5038   0016C8  6E0B               	movwf	(??_DelayRead+8)^0,c
  5039   0016CA  5008               	movf	(??_DelayRead+5)^0,w,c
  5040   0016CC  583B               	subwfb	(_timeStamp+1)^0,w,c
  5041   0016CE  6E0C               	movwf	(??_DelayRead+9)^0,c
  5042   0016D0  5009               	movf	(??_DelayRead+6)^0,w,c
  5043   0016D2  583C               	subwfb	(_timeStamp+2)^0,w,c
  5044   0016D4  6E0D               	movwf	(??_DelayRead+10)^0,c
  5045   0016D6  500A               	movf	(??_DelayRead+7)^0,w,c
  5046   0016D8  583D               	subwfb	(_timeStamp+3)^0,w,c
  5047   0016DA  6E0E               	movwf	(??_DelayRead+11)^0,c
  5048   0016DC  50DE               	movf	postinc2,w,c
  5049   0016DE  5C0B               	subwf	(??_DelayRead+8)^0,w,c
  5050   0016E0  50DE               	movf	postinc2,w,c
  5051   0016E2  580C               	subwfb	(??_DelayRead+9)^0,w,c
  5052   0016E4  50DE               	movf	postinc2,w,c
  5053   0016E6  580D               	subwfb	(??_DelayRead+10)^0,w,c
  5054   0016E8  50DE               	movf	postinc2,w,c
  5055   0016EA  580E               	subwfb	(??_DelayRead+11)^0,w,c
  5056   0016EC  A0D8               	btfss	status,0,c
  5057   0016EE  EF7B  F00B         	goto	u601
  5058   0016F2  EF7D  F00B         	goto	u600
  5059   0016F6                     u601:
  5060   0016F6  EF86  F00B         	goto	l1920
  5061   0016FA                     u600:
  5062   0016FA                     
  5063                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  5064   0016FA  5002               	movf	DelayRead@delay^0,w,c
  5065   0016FC  6ED9               	movwf	fsr2l,c
  5066   0016FE  6ADA               	clrf	fsr2h,c
  5067   001700  0E08               	movlw	8
  5068   001702  26D9               	addwf	fsr2l,f,c
  5069   001704  6ADF               	clrf	indf2,c
  5070   001706                     
  5071                           ;drivers/scr/API_delay.c: 45:    return 1;
  5072   001706  0E01               	movlw	1
  5073   001708  EF87  F00B         	goto	l230
  5074   00170C                     l1920:
  5075                           
  5076                           ;drivers/scr/API_delay.c: 48:  return 0;
  5077   00170C  0E00               	movlw	0
  5078   00170E                     l230:
  5079   00170E  0012               	return		;funcret
  5080   001710                     __end_of_DelayRead:
  5081                           	callstack 0
  5082                           
  5083 ;; *************** function _DelayIsRunning *****************
  5084 ;; Defined at:
  5085 ;;		line 83 in file "drivers/scr/API_delay.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  delay           1    0[COMRAM] PTR struct .
  5088 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;		None
  5091 ;; Return value:  Size  Location     Type
  5092 ;;                  1    wreg      _Bool 
  5093 ;; Registers used:
  5094 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5095 ;; Tracked objects:
  5096 ;;		On entry : 0/0
  5097 ;;		On exit  : 0/0
  5098 ;;		Unchanged: 0/0
  5099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5100 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;Total ram usage:        1 bytes
  5105 ;; Hardware stack levels used: 1
  5106 ;; Hardware stack levels required when called: 1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_DelayRead
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text37
  5115   001D60                     __ptext37:
  5116                           	callstack 0
  5117   001D60                     _DelayIsRunning:
  5118                           	callstack 26
  5119   001D60                     
  5120                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  5121   001D60  5001               	movf	DelayIsRunning@delay^0,w,c
  5122   001D62  6ED9               	movwf	fsr2l,c
  5123   001D64  6ADA               	clrf	fsr2h,c
  5124   001D66  0E08               	movlw	8
  5125   001D68  26D9               	addwf	fsr2l,f,c
  5126   001D6A  50DF               	movf	indf2,w,c
  5127   001D6C  0012               	return		;funcret
  5128   001D6E                     __end_of_DelayIsRunning:
  5129                           	callstack 0
  5130                           
  5131 ;; *************** function _DebounceFSMInit *****************
  5132 ;; Defined at:
  5133 ;;		line 19 in file "drivers/scr/API_debounce.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;  antirrebote_    1    5[COMRAM] PTR struct .
  5136 ;;		 -> main@boton1(11), 
  5137 ;; Auto vars:     Size  Location     Type
  5138 ;;		None
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  1    wreg      void 
  5141 ;; Registers used:
  5142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5148 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5152 ;;Total ram usage:        1 bytes
  5153 ;; Hardware stack levels used: 1
  5154 ;; Hardware stack levels required when called: 2
  5155 ;; This function calls:
  5156 ;;		_DelayInit
  5157 ;; This function is called by:
  5158 ;;		_DebounceFSMUpdate
  5159 ;;		_main
  5160 ;; This function uses a non-reentrant model
  5161 ;;
  5162                           
  5163                           	psect	text38
  5164   001B10                     __ptext38:
  5165                           	callstack 0
  5166   001B10                     _DebounceFSMInit:
  5167                           	callstack 27
  5168   001B10                     
  5169                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  5170   001B10  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5171   001B12  6ED9               	movwf	fsr2l,c
  5172   001B14  6ADA               	clrf	fsr2h,c
  5173   001B16  0E01               	movlw	1
  5174   001B18  26D9               	addwf	fsr2l,f,c
  5175   001B1A  6ADF               	clrf	indf2,c
  5176   001B1C                     
  5177                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  5178   001B1C  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5179   001B1E  0F02               	addlw	2
  5180   001B20  6E01               	movwf	DelayInit@delay^0,c
  5181   001B22  0E28               	movlw	40
  5182   001B24  6E02               	movwf	DelayInit@duration^0,c
  5183   001B26  0E00               	movlw	0
  5184   001B28  6E03               	movwf	(DelayInit@duration+1)^0,c
  5185   001B2A  0E00               	movlw	0
  5186   001B2C  6E04               	movwf	(DelayInit@duration+2)^0,c
  5187   001B2E  0E00               	movlw	0
  5188   001B30  6E05               	movwf	(DelayInit@duration+3)^0,c
  5189   001B32  ECCC  F00D         	call	_DelayInit	;wreg free
  5190   001B36                     
  5191                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  5192   001B36  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5193   001B38  6ED9               	movwf	fsr2l,c
  5194   001B3A  6ADA               	clrf	fsr2h,c
  5195   001B3C  6ADF               	clrf	indf2,c
  5196   001B3E  0012               	return		;funcret
  5197   001B40                     __end_of_DebounceFSMInit:
  5198                           	callstack 0
  5199                           
  5200 ;; *************** function _DelayInit *****************
  5201 ;; Defined at:
  5202 ;;		line 22 in file "drivers/scr/API_delay.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  delay           1    0[COMRAM] PTR struct .
  5205 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5206 ;;  duration        4    1[COMRAM] unsigned long 
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;		None
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5218 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;Total ram usage:        5 bytes
  5223 ;; Hardware stack levels used: 1
  5224 ;; Hardware stack levels required when called: 1
  5225 ;; This function calls:
  5226 ;;		Nothing
  5227 ;; This function is called by:
  5228 ;;		_InicializoMRF24
  5229 ;;		_DebounceFSMInit
  5230 ;;		_main
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text39
  5235   001B98                     __ptext39:
  5236                           	callstack 0
  5237   001B98                     _DelayInit:
  5238                           	callstack 27
  5239   001B98                     
  5240                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  5241   001B98  5001               	movf	DelayInit@delay^0,w,c
  5242   001B9A  6ED9               	movwf	fsr2l,c
  5243   001B9C  6ADA               	clrf	fsr2h,c
  5244   001B9E  0E04               	movlw	4
  5245   001BA0  26D9               	addwf	fsr2l,f,c
  5246   001BA2  C002  FFDE         	movff	DelayInit@duration,postinc2
  5247   001BA6  C003  FFDE         	movff	DelayInit@duration+1,postinc2
  5248   001BAA  C004  FFDE         	movff	DelayInit@duration+2,postinc2
  5249   001BAE  C005  FFDE         	movff	DelayInit@duration+3,postinc2
  5250                           
  5251                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  5252   001BB2  5001               	movf	DelayInit@delay^0,w,c
  5253   001BB4  6ED9               	movwf	fsr2l,c
  5254   001BB6  6ADA               	clrf	fsr2h,c
  5255   001BB8  0E08               	movlw	8
  5256   001BBA  26D9               	addwf	fsr2l,f,c
  5257   001BBC  6ADF               	clrf	indf2,c
  5258   001BBE  0012               	return		;funcret
  5259   001BC0                     __end_of_DelayInit:
  5260                           	callstack 0
  5261                           
  5262 ;; *************** function _BoardInit *****************
  5263 ;; Defined at:
  5264 ;;		line 21 in file "hardware_config.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;		None
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;		None
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  1    wreg      void 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, cstack
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;Total ram usage:        0 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; Hardware stack levels required when called: 2
  5285 ;; This function calls:
  5286 ;;		_SPIInit
  5287 ;; This function is called by:
  5288 ;;		_main
  5289 ;; This function uses a non-reentrant model
  5290 ;;
  5291                           
  5292                           	psect	text40
  5293   00190E                     __ptext40:
  5294                           	callstack 0
  5295   00190E                     _BoardInit:
  5296                           	callstack 28
  5297   00190E                     
  5298                           ;hardware_config.c: 23:     PORTA = 0;
  5299   00190E  6A80               	clrf	128,c	;volatile
  5300                           
  5301                           ;hardware_config.c: 24:     PORTB = 0;
  5302   001910  6A81               	clrf	129,c	;volatile
  5303                           
  5304                           ;hardware_config.c: 25:     PORTC = 0;
  5305   001912  6A82               	clrf	130,c	;volatile
  5306                           
  5307                           ;hardware_config.c: 26:     PORTD = 0;
  5308   001914  6A83               	clrf	131,c	;volatile
  5309                           
  5310                           ;hardware_config.c: 27:     PORTE = 0;
  5311   001916  6A84               	clrf	132,c	;volatile
  5312                           
  5313                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  5314   001918  8C93               	bsf	147,6,c	;volatile
  5315                           
  5316                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  5317   00191A  8E93               	bsf	147,7,c	;volatile
  5318                           
  5319                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  5320   00191C  9496               	bcf	150,2,c	;volatile
  5321                           
  5322                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  5323   00191E  9096               	bcf	150,0,c	;volatile
  5324                           
  5325                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  5326   001920  9296               	bcf	150,1,c	;volatile
  5327                           
  5328                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  5329   001922  8494               	bsf	148,2,c	;volatile
  5330                           
  5331                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  5332   001924  848D               	bsf	141,2,c	;volatile
  5333                           
  5334                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  5335   001926  808D               	bsf	141,0,c	;volatile
  5336                           
  5337                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  5338   001928  828D               	bsf	141,1,c	;volatile
  5339                           
  5340                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  5341   00192A  8093               	bsf	147,0,c	;volatile
  5342                           
  5343                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  5344   00192C  9C94               	bcf	148,6,c	;volatile
  5345                           
  5346                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  5347   00192E  9E94               	bcf	148,7,c	;volatile
  5348                           
  5349                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  5350   001930  9895               	bcf	149,4,c	;volatile
  5351                           
  5352                           ;hardware_config.c: 45:     IPEN = 0;
  5353   001932  9ED0               	bcf	4048,7,c	;volatile
  5354                           
  5355                           ;hardware_config.c: 46:  GIE = 1;
  5356   001934  8EF2               	bsf	4082,7,c	;volatile
  5357                           
  5358                           ;hardware_config.c: 47:  PEIE = 1;
  5359   001936  8CF2               	bsf	4082,6,c	;volatile
  5360                           
  5361                           ;hardware_config.c: 48:     INT0E = 0;
  5362   001938  98F2               	bcf	4082,4,c	;volatile
  5363                           
  5364                           ;hardware_config.c: 49:  RBIE = 0;
  5365   00193A  96F2               	bcf	4082,3,c	;volatile
  5366                           
  5367                           ;hardware_config.c: 50:  T0IE = 0;
  5368   00193C  9AF2               	bcf	4082,5,c	;volatile
  5369                           
  5370                           ;hardware_config.c: 51:  TMR1IE = 1;
  5371   00193E  809D               	bsf	3997,0,c	;volatile
  5372                           
  5373                           ;hardware_config.c: 52:  TMR2IE = 0;
  5374   001940  929D               	bcf	3997,1,c	;volatile
  5375                           
  5376                           ;hardware_config.c: 53:  CCP1IE = 0;
  5377   001942  949D               	bcf	3997,2,c	;volatile
  5378                           
  5379                           ;hardware_config.c: 54:  CCP2IE = 0;
  5380   001944  90A0               	bcf	4000,0,c	;volatile
  5381                           
  5382                           ;hardware_config.c: 55:  EEIE = 0;
  5383   001946  98A0               	bcf	4000,4,c	;volatile
  5384                           
  5385                           ;hardware_config.c: 56:  SSPIE = 0;
  5386   001948  969D               	bcf	3997,3,c	;volatile
  5387                           
  5388                           ;hardware_config.c: 57:  BCLIE = 0;
  5389   00194A  96A0               	bcf	4000,3,c	;volatile
  5390                           
  5391                           ;hardware_config.c: 58:  ADIE = 0;
  5392   00194C  9C9D               	bcf	3997,6,c	;volatile
  5393                           
  5394                           ;hardware_config.c: 59:  RBIE = 0;
  5395   00194E  96F2               	bcf	4082,3,c	;volatile
  5396                           
  5397                           ;hardware_config.c: 60:  RCIE = 0;
  5398   001950  9A9D               	bcf	3997,5,c	;volatile
  5399   001952                     
  5400                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  5401   001952  0E72               	movlw	114
  5402   001954  6ED3               	movwf	211,c	;volatile
  5403                           
  5404                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  5405   001956  0EDF               	movlw	223
  5406   001958  6E9B               	movwf	155,c	;volatile
  5407   00195A                     
  5408                           ;hardware_config.c: 63:     RBPU = 1;
  5409   00195A  8EF1               	bsf	4081,7,c	;volatile
  5410   00195C                     
  5411                           ;hardware_config.c: 66:     T1RD16 = 0;
  5412   00195C  9ECD               	bcf	4045,7,c	;volatile
  5413   00195E                     
  5414                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  5415   00195E  88CD               	bsf	4045,4,c	;volatile
  5416   001960                     
  5417                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  5418   001960  8ACD               	bsf	4045,5,c	;volatile
  5419   001962                     
  5420                           ;hardware_config.c: 69:  T1SYNC = 0;
  5421   001962  94CD               	bcf	4045,2,c	;volatile
  5422   001964                     
  5423                           ;hardware_config.c: 70:  T1OSCEN = 0;
  5424   001964  96CD               	bcf	4045,3,c	;volatile
  5425   001966                     
  5426                           ;hardware_config.c: 71:  TMR1CS = 0;
  5427   001966  92CD               	bcf	4045,1,c	;volatile
  5428   001968                     
  5429                           ;hardware_config.c: 72:  TMR1ON = 1;
  5430   001968  80CD               	bsf	4045,0,c	;volatile
  5431   00196A                     
  5432                           ;hardware_config.c: 75:     SPIInit();
  5433   00196A  EC62  F00E         	call	_SPIInit	;wreg free
  5434   00196E  0012               	return		;funcret
  5435   001970                     __end_of_BoardInit:
  5436                           	callstack 0
  5437                           
  5438 ;; *************** function _SPIInit *****************
  5439 ;; Defined at:
  5440 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used: 1
  5460 ;; Hardware stack levels required when called: 1
  5461 ;; This function calls:
  5462 ;;		Nothing
  5463 ;; This function is called by:
  5464 ;;		_BoardInit
  5465 ;; This function uses a non-reentrant model
  5466 ;;
  5467                           
  5468                           	psect	text41
  5469   001CC4                     __ptext41:
  5470                           	callstack 0
  5471   001CC4                     _SPIInit:
  5472                           	callstack 28
  5473   001CC4                     
  5474                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  5475   001CC4  9694               	bcf	148,3,c	;volatile
  5476                           
  5477                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  5478   001CC6  9A94               	bcf	148,5,c	;volatile
  5479                           
  5480                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  5481   001CC8  8894               	bsf	148,4,c	;volatile
  5482                           
  5483                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  5484   001CCA  8EC7               	bsf	199,7,c	;volatile
  5485                           
  5486                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  5487   001CCC  8CC7               	bsf	199,6,c	;volatile
  5488   001CCE                     
  5489                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  5490   001CCE  0E01               	movlw	1
  5491   001CD0  6EC6               	movwf	198,c	;volatile
  5492   001CD2                     
  5493                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  5494   001CD2  8EC6               	bsf	198,7,c	;volatile
  5495   001CD4                     
  5496                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  5497   001CD4  9CC6               	bcf	198,6,c	;volatile
  5498   001CD6                     
  5499                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  5500   001CD6  8AC6               	bsf	198,5,c	;volatile
  5501   001CD8                     
  5502                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  5503   001CD8  98C6               	bcf	198,4,c	;volatile
  5504   001CDA  0012               	return		;funcret
  5505   001CDC                     __end_of_SPIInit:
  5506                           	callstack 0
  5507                           
  5508 ;; *************** function _isr *****************
  5509 ;; Defined at:
  5510 ;;		line 5 in file "drivers/inc/interrupciones.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;		None
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;		None
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  1    wreg      void 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;Total ram usage:        0 bytes
  5529 ;; Hardware stack levels used: 1
  5530 ;; This function calls:
  5531 ;;		Nothing
  5532 ;; This function is called by:
  5533 ;;		Interrupt level 2
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	intcode
  5538   000008                     __pintcode:
  5539                           	callstack 0
  5540   000008                     _isr:
  5541                           	callstack 23
  5542                           
  5543                           ;incstack = 0
  5544   000008  8240               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5545   00000A                     
  5546                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  5547   00000A  A09D               	btfss	3997,0,c	;volatile
  5548   00000C  EF0A  F000         	goto	i2u96_41
  5549   000010  EF0C  F000         	goto	i2u96_40
  5550   000014                     i2u96_41:
  5551   000014  EF1E  F000         	goto	i2l414
  5552   000018                     i2u96_40:
  5553   000018  A09E               	btfss	3998,0,c	;volatile
  5554   00001A  EF11  F000         	goto	i2u97_41
  5555   00001E  EF13  F000         	goto	i2u97_40
  5556   000022                     i2u97_41:
  5557   000022  EF1E  F000         	goto	i2l414
  5558   000026                     i2u97_40:
  5559   000026                     
  5560                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  5561   000026  909E               	bcf	3998,0,c	;volatile
  5562   000028                     
  5563                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  5564   000028  0EF7               	movlw	247
  5565   00002A  6ECE               	movwf	206,c	;volatile
  5566                           
  5567                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  5568   00002C  0EFD               	movlw	253
  5569   00002E  6ECF               	movwf	207,c	;volatile
  5570   000030                     
  5571                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  5572   000030  0E01               	movlw	1
  5573   000032  263A               	addwf	_timeStamp^0,f,c
  5574   000034  0E00               	movlw	0
  5575   000036  223B               	addwfc	(_timeStamp+1)^0,f,c
  5576   000038  223C               	addwfc	(_timeStamp+2)^0,f,c
  5577   00003A  223D               	addwfc	(_timeStamp+3)^0,f,c
  5578   00003C                     i2l414:
  5579   00003C  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5580   00003E  0011               	retfie		f
  5581   000040                     __end_of_isr:
  5582                           	callstack 0
  5583                           
  5584                           	psect	rparam
  5585   000001                     ___rparam_used  equ	1
  5586   000000                     ___param_bank   equ	0
  5587   000000                     __Lparam        equ	__Lrparam
  5588   000000                     __Hparam        equ	__Hrparam
  5589                           
  5590                           	psect	temp
  5591   000040                     btemp:
  5592                           	callstack 0
  5593   000040                     	ds	1
  5594   000040                     int$flags       set	btemp
  5595   000041                     wtemp8          set	btemp+1
  5596   000041                     ttemp5          set	btemp+1
  5597   000044                     ttemp6          set	btemp+4
  5598   000048                     ttemp7          set	btemp+8
  5599                           
  5600                           	psect	idloc
  5601                           
  5602                           ;Config register IDLOC0 @ 0x200000
  5603                           ;	unspecified, using default values
  5604   200000                     	org	2097152
  5605   200000  FF                 	db	255
  5606                           
  5607                           ;Config register IDLOC1 @ 0x200001
  5608                           ;	unspecified, using default values
  5609   200001                     	org	2097153
  5610   200001  FF                 	db	255
  5611                           
  5612                           ;Config register IDLOC2 @ 0x200002
  5613                           ;	unspecified, using default values
  5614   200002                     	org	2097154
  5615   200002  FF                 	db	255
  5616                           
  5617                           ;Config register IDLOC3 @ 0x200003
  5618                           ;	unspecified, using default values
  5619   200003                     	org	2097155
  5620   200003  FF                 	db	255
  5621                           
  5622                           ;Config register IDLOC4 @ 0x200004
  5623                           ;	unspecified, using default values
  5624   200004                     	org	2097156
  5625   200004  FF                 	db	255
  5626                           
  5627                           ;Config register IDLOC5 @ 0x200005
  5628                           ;	unspecified, using default values
  5629   200005                     	org	2097157
  5630   200005  FF                 	db	255
  5631                           
  5632                           ;Config register IDLOC6 @ 0x200006
  5633                           ;	unspecified, using default values
  5634   200006                     	org	2097158
  5635   200006  FF                 	db	255
  5636                           
  5637                           ;Config register IDLOC7 @ 0x200007
  5638                           ;	unspecified, using default values
  5639   200007                     	org	2097159
  5640   200007  FF                 	db	255
  5641                           
  5642                           	psect	config
  5643                           
  5644                           ; Padding undefined space
  5645   300000                     	org	3145728
  5646   300000  FF                 	db	255
  5647                           
  5648                           ;Config register CONFIG1H @ 0x300001
  5649                           ;	Oscillator Selection bits
  5650                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5651                           ;	Fail-Safe Clock Monitor Enable bit
  5652                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5653                           ;	Internal/External Oscillator Switchover bit
  5654                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5655   300001                     	org	3145729
  5656   300001  08                 	db	8
  5657                           
  5658                           ;Config register CONFIG2L @ 0x300002
  5659                           ;	Power-up Timer Enable bit
  5660                           ;	PWRT = 0x1, unprogrammed default
  5661                           ;	Brown-out Reset Enable bits
  5662                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5663                           ;	Brown Out Reset Voltage bits
  5664                           ;	BORV = 22, VBOR set to 2.2 V nominal
  5665   300002                     	org	3145730
  5666   300002  11                 	db	17
  5667                           
  5668                           ;Config register CONFIG2H @ 0x300003
  5669                           ;	Watchdog Timer Enable bit
  5670                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5671                           ;	Watchdog Timer Postscale Select bits
  5672                           ;	WDTPS = 8192, 1:8192
  5673   300003                     	org	3145731
  5674   300003  1A                 	db	26
  5675                           
  5676                           ; Padding undefined space
  5677   300004                     	org	3145732
  5678   300004  FF                 	db	255
  5679                           
  5680                           ;Config register CONFIG3H @ 0x300005
  5681                           ;	CCP2 MUX bit
  5682                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5683                           ;	PORTB A/D Enable bit
  5684                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5685                           ;	Low-Power Timer1 Oscillator Enable bit
  5686                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5687                           ;	HFINTOSC Fast Start-up
  5688                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  5689                           ;	MCLR Pin Enable bit
  5690                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5691   300005                     	org	3145733
  5692   300005  01                 	db	1
  5693                           
  5694                           ;Config register CONFIG4L @ 0x300006
  5695                           ;	Stack Full/Underflow Reset Enable bit
  5696                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5697                           ;	Single-Supply ICSP Enable bit
  5698                           ;	LVP = OFF, Single-Supply ICSP disabled
  5699                           ;	Extended Instruction Set Enable bit
  5700                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5701                           ;	Background Debugger Enable bit
  5702                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5703   300006                     	org	3145734
  5704   300006  80                 	db	128
  5705                           
  5706                           ; Padding undefined space
  5707   300007                     	org	3145735
  5708   300007  FF                 	db	255
  5709                           
  5710                           ;Config register CONFIG5L @ 0x300008
  5711                           ;	Code Protection Block 0
  5712                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5713                           ;	Code Protection Block 1
  5714                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5715                           ;	Code Protection Block 2
  5716                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5717                           ;	Code Protection Block 3
  5718                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5719   300008                     	org	3145736
  5720   300008  0F                 	db	15
  5721                           
  5722                           ;Config register CONFIG5H @ 0x300009
  5723                           ;	Boot Block Code Protection bit
  5724                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5725                           ;	Data EEPROM Code Protection bit
  5726                           ;	CPD = OFF, Data EEPROM not code-protected
  5727   300009                     	org	3145737
  5728   300009  C0                 	db	192
  5729                           
  5730                           ;Config register CONFIG6L @ 0x30000A
  5731                           ;	Write Protection Block 0
  5732                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5733                           ;	Write Protection Block 1
  5734                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5735                           ;	Write Protection Block 2
  5736                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5737                           ;	Write Protection Block 3
  5738                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5739   30000A                     	org	3145738
  5740   30000A  0F                 	db	15
  5741                           
  5742                           ;Config register CONFIG6H @ 0x30000B
  5743                           ;	Configuration Register Write Protection bit
  5744                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5745                           ;	Boot Block Write Protection bit
  5746                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5747                           ;	Data EEPROM Write Protection bit
  5748                           ;	WRTD = OFF, Data EEPROM not write-protected
  5749   30000B                     	org	3145739
  5750   30000B  E0                 	db	224
  5751                           
  5752                           ;Config register CONFIG7L @ 0x30000C
  5753                           ;	unspecified, using default values
  5754                           ;	Table Read Protection Block 0
  5755                           ;	EBTR0 = 0x1, unprogrammed default
  5756                           ;	Table Read Protection Block 1
  5757                           ;	EBTR1 = 0x1, unprogrammed default
  5758                           ;	Table Read Protection Block 2
  5759                           ;	EBTR2 = 0x1, unprogrammed default
  5760                           ;	Table Read Protection Block 3
  5761                           ;	EBTR3 = 0x1, unprogrammed default
  5762   30000C                     	org	3145740
  5763   30000C  0F                 	db	15
  5764                           
  5765                           ;Config register CONFIG7H @ 0x30000D
  5766                           ;	Boot Block Table Read Protection bit
  5767                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5768   30000D                     	org	3145741
  5769   30000D  40                 	db	64
  5770                           tosu	equ	0xFFF
  5771                           tosh	equ	0xFFE
  5772                           tosl	equ	0xFFD
  5773                           stkptr	equ	0xFFC
  5774                           pclatu	equ	0xFFB
  5775                           pclath	equ	0xFFA
  5776                           pcl	equ	0xFF9
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           prodh	equ	0xFF4
  5782                           prodl	equ	0xFF3
  5783                           indf0	equ	0xFEF
  5784                           postinc0	equ	0xFEE
  5785                           postdec0	equ	0xFED
  5786                           preinc0	equ	0xFEC
  5787                           plusw0	equ	0xFEB
  5788                           fsr0h	equ	0xFEA
  5789                           fsr0l	equ	0xFE9
  5790                           wreg	equ	0xFE8
  5791                           indf1	equ	0xFE7
  5792                           postinc1	equ	0xFE6
  5793                           postdec1	equ	0xFE5
  5794                           preinc1	equ	0xFE4
  5795                           plusw1	equ	0xFE3
  5796                           fsr1h	equ	0xFE2
  5797                           fsr1l	equ	0xFE1
  5798                           bsr	equ	0xFE0
  5799                           indf2	equ	0xFDF
  5800                           postinc2	equ	0xFDE
  5801                           postdec2	equ	0xFDD
  5802                           preinc2	equ	0xFDC
  5803                           plusw2	equ	0xFDB
  5804                           fsr2h	equ	0xFDA
  5805                           fsr2l	equ	0xFD9
  5806                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    24
    Data        0
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     49      63
    BANK0           160      0      90
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    data_out_s$buffer	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DelayInit@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayIsRunning@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayRead@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), 

    MRF24SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    S288$buffer	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    sp__MRF24GetMensajeEntrada	PTR unsigned char  size(1) Largest target is 56
		 -> data_in_s(BANK0[56]), data_in_s$buffer(BANK0[50]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 34
		 -> data_config_s(BANK0[34]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 56
		 -> data_in_s(BANK0[56]), data_in_s$buffer(BANK0[50]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_10(CODE[8]), STR_13(CODE[8]), STR_4(CODE[8]), STR_7(CODE[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 34
		 -> data_config_s(BANK0[34]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 34
		 -> data_config_s(BANK0[34]), 

    strncpy@s	PTR const unsigned char  size(1) Largest target is 16
		 -> default_mac_address(CODE[8]), default_security_key(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _strcmp->_MRF24GetMensajeEntrada
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24SetMensajeSalida->_strlen
    _MRF24SetDireccionOrigen->_MRF24GetMiAddr
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_InicializoMRF24
    _InicializoVariables->_strncpy
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _InicializoMRF24->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _GetShortAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _GetLongAddr->_Write2ByteSPIPort
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    5821
                                             27 COMRAM    22    22      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
             _MRF24GetMensajeEntrada
                     _MRF24GetMiAddr
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
           _MRF24SetDireccionDestino
            _MRF24SetDireccionOrigen
              _MRF24SetMensajeSalida
               _MRF24SetPANIDDestino
                _MRF24TransmitirDato
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     120
                                              2 COMRAM     3     1      2
             _MRF24GetMensajeEntrada (ARG)
 ---------------------------------------------------------------------------------
 (1) _MRF24TransmitirDato                                  7     7      0     855
                                             10 COMRAM     7     7      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24SetPANIDDestino                                 2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetMensajeSalida                                1     0      1     165
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      92
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetDireccionOrigen                              2     0      2      23
                                              2 COMRAM     2     0      2
                     _MRF24GetMiAddr (ARG)
 ---------------------------------------------------------------------------------
 (1) _MRF24SetDireccionDestino                             2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   7     7      0     969
                                             10 COMRAM     7     7      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         1     1      0    2528
                                             26 COMRAM     1     1      0
                    _InicializoMRF24
                    _InicializoPines
                _InicializoVariables
                        _SetResetPin
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  0     0      0     147
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              6     2      4     147
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InicializoMRF24                                     12    12      0    2307
                                             14 COMRAM    12    12      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceMACAddress                                  1     1      0     279
                                              4 COMRAM     1     1      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetChannel                                           1     1      0     509
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     320
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     198
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetMiAddr                                       2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24GetMensajeEntrada                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    4     2      2     610
                                             14 COMRAM     4     2      2
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (3) _DelayRead                                           13    12      1     160
                                              1 COMRAM    13    12      1
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (4) _DelayIsRunning                                       1     0      1      23
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      1     0      1     140
                                              5 COMRAM     1     0      1
                          _DelayInit
 ---------------------------------------------------------------------------------
 (3) _DelayInit                                            5     0      5      72
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24GetMensajeEntrada
   _MRF24GetMiAddr
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _InicializoMRF24
       _DelayInit
       _DelayRead
       _DelayReset
       _GetLongAddr
         _ReadByteSPIPort
           _SPIRead
         _SetCSPin
         _Write2ByteSPIPort
           _SPIWrite2Byte
             _SPIWriteByte
       _GetShortAddr
         _ReadByteSPIPort
         _SetCSPin
         _WriteByteSPIPort
           _SPIWriteByte
       _SetChannel
         _SetLongAddr
           _SetCSPin
           _Write2ByteSPIPort
           _WriteByteSPIPort
         _SetShortAddr
           _SetCSPin
           _WriteByteSPIPort
       _SetDeviceAddress
         _SetShortAddr
       _SetDeviceMACAddress
         _SetShortAddr
       _SetLongAddr
       _SetShortAddr
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
       _strncpy
     _SetResetPin
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _MRF24SetDireccionDestino
   _MRF24SetDireccionOrigen
     _MRF24GetMiAddr (ARG)
   _MRF24SetMensajeSalida
     _strlen
   _MRF24SetPANIDDestino
   _MRF24TransmitirDato
     _SetLongAddr
     _SetShortAddr
   _strcmp
     _MRF24GetMensajeEntrada (ARG)

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      90     56.2%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     49      63     67.0%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     159      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jul 24 13:41:43 2025

                         _SSPSTATbits 0FC7                                    l21 1D04  
                                  l30 1D34                                    l24 1D5E  
                                  l33 1D18                                    l42 1D86  
                                  l27 1D26                                    l36 1D76  
                                  l39 1D42                       _IsMRF24Interrup 1D06  
                                  l99 18A6                                    u55 1D24  
                                  u56 1D26                                    u65 1D32  
                                  u66 1D34                         ?_MRF24J40Init 0001  
                                 l102 126A                                   l111 1C50  
                                 l120 19B2                                   l104 13E4  
                                 l202 1CDA                                   l114 1C0A  
                                 l211 1D50                                   l123 1AA6  
                                 l131 1B96                                   l140 1A34  
                                 l205 1CB4                                   l117 19F4  
                                 l230 170E                                   l214 1CE0  
                                 l126 1B6C                                   l134 1A6E  
                                 l143 1CA2                                   l151 1C84  
                                 l224 1BBE                                   l208 1CC2  
                                 l144 1CAA                                   l152 1C8C  
                                 l217 1CF0                                   l305 10C0  
                                 l163 1B0E                                   l147 1C66  
                                 l155 13FA                                   l180 1D80  
                                 l236 1C30                                   l148 1C6E  
                                 l156 1526                                   l246 1B3E  
                                 l174 1D8C                                   l239 1D6C  
                                 l256 1662                                   l168 17B4  
                                 l398 196E                                   _GIE 7F97  
                                 u140 1D16                                   u141 1D10  
                                 u146 1D18                                   u270 1AEC  
                                 u271 1AE8                                   u600 16FA  
                                 u280 1B06                                   u520 1CC2  
                                 u601 16F6                                   u281 1B02  
                                 u521 1CBE                                   u610 1B96  
                                 u611 1B92                                   u540 1CEE  
                                 u700 1C9E                                   u541 1CEA  
                                 u701 1C9A                                   u630 128A  
                                 u710 1C62                                   u535 1D5C  
                                 u631 1286                                   u711 1C5E  
                                 u800 15B8                                   u536 1D5E  
                                 u640 12A6                                   u560 17F0  
                                 u720 1C80                                   u801 15B4  
                                 u625 197A                                   u641 12A2  
                                 u561 17EC                                   u721 1C7C  
                                 u810 15C8                                   u650 13A4  
                                 u570 1806                                   u730 13F6  
                                 u811 15C4                                   u555 19BE  
                                 u651 13A0                                   u571 1802  
                                 u731 13F2                                   u820 15FC  
                                 u660 13BA                                   u580 182E  
                                 u740 150C                                   u900 118C  
                                 u821 15F8                                   u661 13B6  
                                 u581 182A                                   u741 1508  
                                 u901 1188                                   u590 167C  
                                 u750 1720                                   u670 1ACE  
                                 u830 18D6                                   u910 11BA  
                                 u591 1678                                   u751 171C  
                                 u671 1ACA                                   u831 18D2  
                                 u911 11B6                                   u760 179E  
                                 u680 1A10                                   u840 18EC  
                                 u920 11E8                                   u761 179A  
                                 u681 1A0C                                   u841 18E8  
                                 u921 11E4                                   u770 153C  
                                 u690 1A20                                   u930 121A  
                                 u771 1538                                   u691 1A1C  
                                 u931 1216                                   u780 1568  
                                 u940 122C                                   u781 1564  
                                 u941 1224                                   u790 1578  
                                 u870 10F6                                   u791 1574  
                                 u871 10F0                                   u880 113A  
                                 u881 1136                                   u890 115E  
                                 u891 115A                                   u876 10F8  
                                 u958 122E                                   u987 1A44  
                                 u997 1A5C                                   _isr 0008  
                                 wreg 0FE8                   __end_of_GetLongAddr 19B4  
                                l1102 1ADA                                  l2000 1258  
                                l1112 182E                                  l2010 1290  
                                l2002 1262                                  l2020 12D2  
                                l2012 12A6                                  l2004 1272  
                                l2030 1322                                  l2022 12E2  
                                l2014 12C0                                  l2006 128A  
                                l2102 1C8E                                  l2110 1C70  
                                l1400 1CD4                                  l2200 1528  
                                l2040 1360                                  l2032 1332  
                                l2024 12F2                                  l2016 12CA  
                                l2120 140C                                  l1402 1CD6  
                                l2210 1578                                  l2202 152C  
                                l2042 136A                                  l2034 1342  
                                l2026 1302                                  l2018 12CE  
                                l2106 1C52                                  l2130 1440  
                                l2122 140E                                  l2114 13E6  
                                l1404 1CD8                                  l2220 1598  
                                l2212 1586                                  l2204 153C  
                                l2044 1374                                  l2036 134C  
                                l2028 1312                                  l1172 1D1C  
                                l2140 1474                                  l2132 1454  
                                l2124 1420                                  l2230 15D4  
                                l2206 154E                                  l2054 13A8  
                                l2046 137C                                  l2038 1356  
                                l2062 1AA8                                  l2150 1496  
                                l2142 1476                                  l2134 1456  
                                l2126 142E                                  l2118 13FC  
                                l2072 1B10                                  l2224 159E  
                                l2208 1568                                  l1280 1D06  
                                l1520 1B06                                  l1512 1ADC  
                                l2056 13BA                                  l2048 138C  
                                l1176 1D2A                                  l2080 1A3A  
                                l2064 1AB0                                  l2160 14BC  
                                l2152 14A4                                  l2144 1484  
                                l2136 1464                                  l2128 143E  
                                l1096 190C                                  l2074 1B1C  
                                l2242 15EC                                  l2226 15B8  
                                l2218 158C                                  l1514 1AEC  
                                l2058 13E2                                  l2082 1A3E  
                                l2066 1AB2                                  l2170 151A  
                                l2162 14DA                                  l2154 14A6  
                                l2146 1486                                  l2138 1466  
                                l1620 195A                                  l2076 1B36  
                                l2244 15FC                                  l2228 15C8  
                                l2236 15DA                                  l1524 1B0C  
                                l2084 1A50                                  l2180 1724  
                                l2068 1ACE                                  l2092 19F6  
                                l2172 151C                                  l2164 14DC  
                                l2156 14B4                                  l2148 1494  
                                l2340 1078                                  l1630 1964  
                                l1622 195C                                  l2246 160E  
                                l2254 161C                                  l1518 1AF2  
                                l2086 1A56                                  l2078 1A36  
                                l2190 179E                                  l2182 174C  
                                l2094 1A10                                  l2166 14DE  
                                l2158 14B6                                  l2270 18D6  
                                l2350 10B0                                  l2342 107C  
                                l1632 1966                                  l1624 195E  
                                l1616 190E                                  l2248 1616  
                                l2256 1660                                  l2088 1A68  
                                l2184 1752                                  l2176 1710  
                                l2096 1A24                                  l2168 150C  
                                l2272 18EC                                  l2264 18A8  
                                l2352 10C6                                  l2344 1080  
                                l1394 1CC4                                  l1634 1968  
                                l1626 1960                                  l1618 1952  
                                l2194 1D88                                  l1810 1D44  
                                l2186 176C                                  l2098 1A28  
                                l2266 18AC                                  l2370 115E  
                                l2354 10CE                                  l2362 10E2  
                                l2346 1098                                  l2338 1070  
                                l1396 1CCE                                  l1636 196A  
                                l1628 1962                                  l1900 1C02  
                                l2188 176E                                  l2268 18B0  
                                l2380 119A                                  l2372 1160  
                                l2356 10D6                                  l2364 1126  
                                l2348 10A4                                  l1398 1CD2  
                                l1910 1692                                  l2198 1D78  
                                l1814 1D54                                  l1806 1CAE  
                                l1822 1D36                                  l1902 1C08  
                                l2390 11EA                                  l2382 11BA  
                                l2374 116C                                  l2366 113A  
                                l1920 170C                                  l1912 16A4  
                                l1832 1D82                                  l1808 1CB0  
                                l1840 1C3E                                  l2392 11F6  
                                l2384 11BC                                  l2376 118C  
                                l2368 113E                                  l2456 1110  
                                l1914 16FA                                  l1906 1664  
                                l2458 163A                                  l1826 1CDC  
                                l1818 1D70                                  l1850 19D6  
                                l1842 1C44                                  l2386 11C8  
                                l2378 118E                                  l2394 11FE  
                                l1860 1D60                                  l1916 1706  
                                l1908 167C                                  l1828 1CEE  
                                l1940 1970                                  l1852 19DC  
                                l1844 1C4A                                  l1836 1C34  
                                l1924 1B40                                  l2388 11E8  
                                l2396 1202                                  l1950 19B0  
                                l1942 1992                                  l1854 19E8  
                                l1838 1C38                                  l1934 1B70  
                                l2398 121A                                  l1880 1B98  
                                l1944 1998                                  l1856 19EE  
                                l1848 19B4                                  l1936 1B84  
                                l1928 1B6E                                  l1960 1CF2  
                                l1872 17F4                                  l1864 17B6  
                                l1946 19A4                                  l1890 1BE8  
                                l1954 1A70                                  l1938 1B86  
                                l1874 180A                                  l1866 17BE  
                                l1970 1862                                  l1884 1C0C  
                                l1948 19AA                                  l1892 1BE8  
                                l1956 1A94                                  l1876 1812  
                                l1868 17C4                                  l1980 187E  
                                l1972 1864                                  l1964 1830  
                                l1886 1C22                                  l1894 1BF0  
                                l1878 1814                                  l1990 189A  
                                l1982 1886                                  l1974 1866  
                                l1966 1858                                  l1896 1BF6  
                                l1992 18A2                                  l1984 1888  
                                l1976 186E                                  l1968 185E  
                                l1898 1BFC                                  l1994 18A4  
                                l1986 188A                                  l1978 1876  
                                l1988 1892                                  l1998 1240  
                                _ADIE 7CEE                                  ?_isr 0001  
                                _EEIE 7D04                                  STR_1 1066  
                                STR_2 105E                                  STR_3 1046  
                                STR_4 1046                                  STR_5 1019  
                                STR_6 103E                                  STR_7 103E  
                                STR_8 1027                                  STR_9 1056  
                                _T0IE 7F95                                  u1007 12B0  
                                u1017 1A9A                                  _IPEN 7E87  
                                _PEIE 7F96                                  _RBIE 7F93  
                                _RCIE 7CED                                  _RBPU 7F8F  
                        _SPIWriteByte 1CAC                                  _main 1070  
                     __end_of_SPIInit 1CDC                       __end_of_SPIRead 1CF2  
                                fsr1h 0FE2                                  fsr2h 0FDA  
                                indf2 0FDF                                  fsr1l 0FE1  
                                fsr2l 0FD9                                  btemp 0040  
                       _MRF24IsNewMsg 1ADC                            _DelayReset 1C0C  
             GetShortAddr@reg_address 0004                                  start 0040  
                   DelayInit@duration 0002                          ___param_bank 0000  
                   ??_ReadByteSPIPort 0001                                 ??_isr 0001  
                      ??_MRF24J40Init 001B           __end_of_InicializoVariables 18A8  
                       _SPIWrite2Byte 1D44      __end_of_MRF24SetDireccionDestino 1CAC  
                               ?_main 0001                                 _BCLIE 7D03  
                               STR_10 1056                                 STR_11 1019  
                               STR_12 104E                                 STR_13 104E  
                               STR_14 1027                                 STR_15 1033  
                               _INT0E 7F94                                 i2l414 003C  
                SetDeviceMACAddress@i 0005                                 _TMR1H 0FCF  
                               _TMR1L 0FCE                                 _PORTA 0F80  
                               _PORTB 0F81                                 _PORTC 0F82  
                               _PORTD 0F83                                 _PORTE 0F84  
                      _MRF24GetMiAddr 1D78                                 _SSPIE 7CEB  
                __end_of_GetShortAddr 1C0C                       _InicializoMRF24 1240  
        MRF24SetMensajeSalida@mensaje 0004              ??_MRF24GetMensajeEntrada 0003  
                     _InicializoPines 1CF2               SetShortAddr@reg_address 0004  
                               tablat 0FF5                        ?_MRF24IsNewMsg 0001  
                               ttemp5 0041                                 ttemp6 0044  
                               ttemp7 0048                                 status 0FD8  
                               wtemp8 0041                       __end_of_strncpy 1830  
             __end_of_IsMRF24Interrup 1D1A                   _SetDeviceMACAddress 1B6E  
                     __initialization 1BC0              ?_MRF24SetDireccionOrigen 0003  
                        __end_of_main 1240  DebounceFSMUpdate@antirrebote_boton_n 000F  
                      ?_SPIWrite2Byte 0002                      __end_of_SetCSPin 1D60  
                         _GetLongAddr 1970                         ??_SetLongAddr 0009  
              __end_of_MRF24GetMiAddr 1D82                                ??_main 001C  
                       __activetblptr 0002                         ??_SetResetPin 0001  
                ?_SetDeviceMACAddress 0001                            _SetChannel 1A70  
       InicializoMRF24@delay_time_out 0012                     ?_SetDeviceAddress 0001  
               _MRF24SetMensajeSalida 19F6                                _CCP1IE 7CEA  
                              _CCP2IE 7D00                             ??_SPIInit 0001  
                           ??_SPIRead 0001                    ??_SetDeviceAddress 0005  
                              _T1RD16 7E6F                                _T1SYNC 7E6A  
                              i2l2410 0028                                i2l2412 0030  
                              i2l2404 000A                                i2l2406 0018  
                              i2l2408 0026                            _SetWakePin 1D1A  
                              _OSCCON 0FD3             MRF24SetPANIDDestino@panid 0001  
                              _TMR1IE 7CE8                                _TMR1IF 7CF0  
                              _TMR1CS 7E69                                _TMR2IE 7CE9  
                              _TMR1ON 7E68          __end_of_default_security_key 1011  
                              _SSPBUF 0FC9                           ?_DelayReset 0001  
                 DelayIsRunning@delay 0001               __end_of_InicializoMRF24 13E6  
                              clear_0 1BC6                                clear_1 1BD2  
                              isa$std 0001                        SetCSPin@estado 0001  
                     ?_MRF24GetMiAddr 0001               __end_of_InicializoPines 1D06  
                              _strcmp 18A8                                _strlen 1AA8  
               ??_SetDeviceMACAddress 0005                          __mediumconst 0000  
            _MRF24SetDireccionDestino 1C8E                                tblptrh 0FF7  
                              tblptrl 0FF6                                tblptru 0FF8  
                 __end_of_SetLongAddr 19F6                    _MRF24ReciboPaquete 1710  
                    ??_DelayIsRunning 0002                             ??_strncpy 0005  
                     ??_MRF24IsNewMsg 0001                   __end_of_SetResetPin 1D36  
               GetShortAddr@leido_spi 0003                     __end_of_DelayInit 1BC0  
                   __end_of_DelayRead 1710                  __end_of_MRF24J40Init 1A70  
                          __accesstop 0060               __end_of__initialization 1BD8  
                 ?_MRF24ReciboPaquete 0001           __end_of_MRF24TransmitirDato 1528  
                   __end_of_BoardInit 1970       __end_of_MRF24SetDireccionOrigen 1C8E  
                      DelayInit@delay 0001                         ___rparam_used 0001  
                      DelayRead@delay 0002                      SetWakePin@estado 0001  
                    ?_IsMRF24Interrup 0001                         ?_SetShortAddr 0003  
                      __pcstackCOMRAM 0001                       ??_SPIWrite2Byte 0004  
                  _long_mac_address_e 003F                  ??_MRF24ReciboPaquete 000B  
              ?_MRF24SetMensajeSalida 0004                           ?_SetChannel 0001  
                          __pbssBANK0 0060                           ?_SetWakePin 0001  
                           ?_SetCSPin 0001                       _ReadByteSPIPort 1D82  
              InicializoMRF24@lectura 0011                            _data_out_s 0032  
                        _GetShortAddr 1BE6                _MRF24GetMensajeEntrada 1D88  
                      ??_SetShortAddr 0004                      ?_InicializoMRF24 0001  
                         _SetLongAddr 19B4                               _T1CKPS0 7E6C  
                             _T1CKPS1 7E6D                               ?_strcmp 0003  
                             ?_strlen 0001                      ?_InicializoPines 0001  
                _default_security_key 1001                               _T1OSCEN 7E6B  
                         _SetResetPin 1D28          __end_of_MRF24SetPANIDDestino 1C70  
                             _OSCTUNE 0F9B                               i2u96_40 0018  
                             i2u96_41 0014                               i2u97_40 0026  
                             i2u97_41 0022                               _SSPCON1 0FC6  
                             _SPIInit 1CC4                               _SPIRead 1CDC  
                          ??_SetCSPin 0001                     SetShortAddr@valor 0003  
                             __Hparam 0000                               __Lparam 0000  
                   ??_DebounceFSMInit 0007                          __psmallconst 1000  
                             __pcinit 1BC0                          ?_GetLongAddr 0006  
                             __ramtop 1000                               __ptext0 1070  
                             __ptext1 18A8                               __ptext2 13E6  
                             __ptext3 1C52                               __ptext4 19F6  
                             __ptext5 1AA8                               __ptext6 1C70  
                             __ptext7 1C8E                               __ptext8 1710  
                             __ptext9 1A36                      _WriteByteSPIPort 1D6E  
             __end_of_ReadByteSPIPort 1D88                               _strncpy 17B6  
                end_of_initialization 1BD8                         __Lmediumconst 0000  
                        ??_DelayReset 0002      MRF24SetDireccionOrigen@direccion 0003  
                 _default_mac_address 1011                      ??_MRF24GetMiAddr 0003  
                             postinc0 0FEE                               postinc1 0FE6  
                             postinc2 0FDE            ??_MRF24SetDireccionDestino 0003  
                             strcmp@l 0003                               strcmp@r 0004  
                             strlen@a 0003                               strlen@s 0001  
                        _MRF24J40Init 1A36                             _PORTBbits 0F81  
                           _PORTCbits 0F82                    __end_of_DelayReset 1C32  
                WriteByteSPIPort@dato 0002                             _TRISBbits 0F93  
                           _TRISCbits 0F94                             _TRISDbits 0F95  
                           _TRISEbits 0F96                  __end_of_SetShortAddr 1C52  
               Write2ByteSPIPort@dato 0004                  GetLongAddr@respuesta 000A  
                          main@boton1 0027                             _DelayInit 1B98  
                           _DelayRead 1664                             _BoardInit 190E  
                _MRF24SetPANIDDestino 1C52                     _Write2ByteSPIPort 1D36  
         __end_of_SetDeviceMACAddress 1B98                         _data_config_s 0098  
             ??_MRF24SetMensajeSalida 0005                    ?_Write2ByteSPIPort 0004  
                      __end_of_strcmp 190E                        __end_of_strlen 1ADC  
                        ??_SetChannel 000B                   start_initialization 1BC0  
                 ??_Write2ByteSPIPort 0006                           __end_of_isr 0040  
                    ?_ReadByteSPIPort 0001                         ?_SPIWriteByte 0001  
                        ??_SetWakePin 0001                 __end_of_MRF24IsNewMsg 1B10  
             ?_MRF24GetMensajeEntrada 0001                            ?_DelayInit 0001  
                          ?_DelayRead 0002                            ?_BoardInit 0001  
               ?_MRF24SetPANIDDestino 0001             __end_of_Write2ByteSPIPort 1D44  
                  __end_of_SetChannel 1AA8                          _estadoActual 003E  
               __end_of_SPIWrite2Byte 1D52               MRF24ReciboPaquete@index 0011  
                        ?_SetLongAddr 0006                              ??_strcmp 0005  
                            ??_strlen 0003                    __end_of_SetWakePin 1D28  
             _MRF24SetDireccionOrigen 1C70                     _DebounceFSMUpdate 1528  
                        ?_SetResetPin 0001                           __pbssCOMRAM 0032  
                  ?_DebounceFSMUpdate 000F                       DelayReset@delay 0001  
                            ?_SPIInit 0001                              ?_SPIRead 0001  
                      ??_SPIWriteByte 0001        __end_of_MRF24GetMensajeEntrada 1D8E  
                 ??_DebounceFSMUpdate 0011                      SPIWriteByte@dato 0001  
                     _DebounceFSMInit 1B10                             _data_in_s 0060  
                    _SetDeviceAddress 1B40                   _InicializoVariables 1830  
            __end_of_WriteByteSPIPort 1D78                             __pintcode 0008  
           __end_of_DebounceFSMUpdate 1664                     SetResetPin@estado 0001  
                         __smallconst 1000                  ?_InicializoVariables 0001  
                            ?_strncpy 0001                      SetLongAddr@valor 0008  
                            _LATCbits 0F8B                              _LATDbits 0F8C  
                            _LATEbits 0F8D                           ??_DelayInit 0006  
                         ??_DelayRead 0003                ??_MRF24SetPANIDDestino 0003  
                         ??_BoardInit 0001                              _PIR1bits 0F9E  
                        _SetShortAddr 1C32                             _timeStamp 003A  
           ??_MRF24SetDireccionOrigen 0005                    main@delay_parpadeo 001E  
               ??_InicializoVariables 0007     MRF24SetDireccionDestino@direccion 0001  
                   ??_IsMRF24Interrup 0001               __end_of_DebounceFSMInit 1B40  
                            _SetCSPin 1D52                              __Hrparam 0000  
                            __Lrparam 0000       MRF24ReciboPaquete@largo_mensaje 0010  
                __end_of_SPIWriteByte 1CC4         __end_of_MRF24SetMensajeSalida 1A36  
                            __ptext10 1830                              __ptext11 17B6  
                            __ptext20 19B4                              __ptext12 1CF2  
                            __ptext21 1BE6                              __ptext13 1D1A  
                            __ptext30 1C0C                              __ptext22 1D6E  
                            __ptext14 1D28                              __ptext31 1ADC  
                            __ptext23 1970                              __ptext15 1240  
                            __ptext40 190E                              __ptext32 1D06  
                            __ptext24 1D36                              __ptext16 1B6E  
                            __ptext41 1CC4                              __ptext33 1D78  
                            __ptext25 1D44                              __ptext17 1B40  
                            __ptext34 1D88                              __ptext26 1CAC  
                            __ptext18 1A70                   _MRF24TransmitirDato 13E6  
                            __ptext35 1528                              __ptext27 1D52  
                            __ptext19 1C32                              __ptext36 1664  
                            __ptext28 1D82                              __ptext37 1D60  
                            __ptext29 1CDC                              __ptext38 1B10  
                            __ptext39 1B98             ?_MRF24SetDireccionDestino 0001  
                   ??_InicializoMRF24 000F                        _DelayIsRunning 1D60  
                   ??_InicializoPines 0002                         ?_GetShortAddr 0001  
                ?_MRF24TransmitirDato 0001                              isa$xinst 0000  
                            int$flags 0040    DebounceFSMInit@antirrebote_boton_n 0006  
         __end_of_default_mac_address 1019              __end_of_SetDeviceAddress 1B6E  
                    ?_DebounceFSMInit 0006                              intlevel2 0000  
              __end_of_DelayIsRunning 1D6E                  MRF24TransmitirDato@i 0010  
                      ??_GetShortAddr 0003                             strncpy@cp 0006  
               ??_MRF24TransmitirDato 000B                     ?_WriteByteSPIPort 0001  
          __end_of_MRF24ReciboPaquete 17B6                         ??_GetLongAddr 0008  
                  ??_WriteByteSPIPort 0002                GetLongAddr@reg_address 0006  
                            strncpy@d 0001                              strncpy@n 0003  
                            strncpy@s 0002                           _SSPCON1bits 0FC6  
         DebounceFSMUpdate@estado_pin 0010                     SPIWrite2Byte@dato 0002  
              SetLongAddr@reg_address 0006                       ?_DelayIsRunning 0001  
          MRF24TransmitirDato@pos_mem 0011  
