

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon May 19 19:54:10 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Version 2.20
    57                           ; Generated 05/05/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F46K20 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000FE0                     bsr             equ	4064
    91   000FE9                     fsr0            equ	4073
    92   000FEA                     fsr0h           equ	4074
    93   000FE9                     fsr0l           equ	4073
    94   000FE1                     fsr1            equ	4065
    95   000FE2                     fsr1h           equ	4066
    96   000FE1                     fsr1l           equ	4065
    97   000FD9                     fsr2            equ	4057
    98   000FDA                     fsr2h           equ	4058
    99   000FD9                     fsr2l           equ	4057
   100   000FEF                     indf0           equ	4079
   101   000FE7                     indf1           equ	4071
   102   000FDF                     indf2           equ	4063
   103   000FF2                     intcon          equ	4082
   104   000000                     nvmcon          equ	0
   105   000FF9                     pcl             equ	4089
   106   000FFA                     pclath          equ	4090
   107   000FFB                     pclatu          equ	4091
   108   000FEB                     plusw0          equ	4075
   109   000FE3                     plusw1          equ	4067
   110   000FDB                     plusw2          equ	4059
   111   000FED                     postdec0        equ	4077
   112   000FE5                     postdec1        equ	4069
   113   000FDD                     postdec2        equ	4061
   114   000FEE                     postinc0        equ	4078
   115   000FE6                     postinc1        equ	4070
   116   000FDE                     postinc2        equ	4062
   117   000FEC                     preinc0         equ	4076
   118   000FE4                     preinc1         equ	4068
   119   000FDC                     preinc2         equ	4060
   120   000FF3                     prod            equ	4083
   121   000FF4                     prodh           equ	4084
   122   000FF3                     prodl           equ	4083
   123   000FD8                     status          equ	4056
   124   000FF5                     tablat          equ	4085
   125   000FF6                     tblptr          equ	4086
   126   000FF7                     tblptrh         equ	4087
   127   000FF6                     tblptrl         equ	4086
   128   000FF8                     tblptru         equ	4088
   129   000FFD                     tosl            equ	4093
   130   000FE8                     wreg            equ	4072
   131   000F77                     SSPMSK          equ	3959	;# 
   132   000F78                     SLRCON          equ	3960	;# 
   133   000F79                     CM2CON1         equ	3961	;# 
   134   000F7A                     CM2CON0         equ	3962	;# 
   135   000F7B                     CM1CON0         equ	3963	;# 
   136   000F7C                     WPUB            equ	3964	;# 
   137   000F7D                     IOCB            equ	3965	;# 
   138   000F7E                     ANSEL           equ	3966	;# 
   139   000F7F                     ANSELH          equ	3967	;# 
   140   000F80                     PORTA           equ	3968	;# 
   141   000F81                     PORTB           equ	3969	;# 
   142   000F82                     PORTC           equ	3970	;# 
   143   000F83                     PORTD           equ	3971	;# 
   144   000F84                     PORTE           equ	3972	;# 
   145   000F89                     LATA            equ	3977	;# 
   146   000F8A                     LATB            equ	3978	;# 
   147   000F8B                     LATC            equ	3979	;# 
   148   000F8C                     LATD            equ	3980	;# 
   149   000F8D                     LATE            equ	3981	;# 
   150   000F92                     TRISA           equ	3986	;# 
   151   000F92                     DDRA            equ	3986	;# 
   152   000F93                     TRISB           equ	3987	;# 
   153   000F93                     DDRB            equ	3987	;# 
   154   000F94                     TRISC           equ	3988	;# 
   155   000F94                     DDRC            equ	3988	;# 
   156   000F95                     TRISD           equ	3989	;# 
   157   000F95                     DDRD            equ	3989	;# 
   158   000F96                     TRISE           equ	3990	;# 
   159   000F96                     DDRE            equ	3990	;# 
   160   000F9B                     OSCTUNE         equ	3995	;# 
   161   000F9D                     PIE1            equ	3997	;# 
   162   000F9E                     PIR1            equ	3998	;# 
   163   000F9F                     IPR1            equ	3999	;# 
   164   000FA0                     PIE2            equ	4000	;# 
   165   000FA1                     PIR2            equ	4001	;# 
   166   000FA2                     IPR2            equ	4002	;# 
   167   000FA6                     EECON1          equ	4006	;# 
   168   000FA7                     EECON2          equ	4007	;# 
   169   000FA8                     EEDATA          equ	4008	;# 
   170   000FA9                     EEADR           equ	4009	;# 
   171   000FAA                     EEADRH          equ	4010	;# 
   172   000FAB                     RCSTA           equ	4011	;# 
   173   000FAB                     RCSTA1          equ	4011	;# 
   174   000FAC                     TXSTA           equ	4012	;# 
   175   000FAC                     TXSTA1          equ	4012	;# 
   176   000FAD                     TXREG           equ	4013	;# 
   177   000FAD                     TXREG1          equ	4013	;# 
   178   000FAE                     RCREG           equ	4014	;# 
   179   000FAE                     RCREG1          equ	4014	;# 
   180   000FAF                     SPBRG           equ	4015	;# 
   181   000FAF                     SPBRG1          equ	4015	;# 
   182   000FB0                     SPBRGH          equ	4016	;# 
   183   000FB1                     T3CON           equ	4017	;# 
   184   000FB2                     TMR3            equ	4018	;# 
   185   000FB2                     TMR3L           equ	4018	;# 
   186   000FB3                     TMR3H           equ	4019	;# 
   187   000FB4                     CVRCON2         equ	4020	;# 
   188   000FB5                     CVRCON          equ	4021	;# 
   189   000FB6                     ECCP1AS         equ	4022	;# 
   190   000FB7                     PWM1CON         equ	4023	;# 
   191   000FB8                     BAUDCON         equ	4024	;# 
   192   000FB8                     BAUDCTL         equ	4024	;# 
   193   000FB9                     PSTRCON         equ	4025	;# 
   194   000FBA                     CCP2CON         equ	4026	;# 
   195   000FBB                     CCPR2           equ	4027	;# 
   196   000FBB                     CCPR2L          equ	4027	;# 
   197   000FBC                     CCPR2H          equ	4028	;# 
   198   000FBD                     CCP1CON         equ	4029	;# 
   199   000FBE                     CCPR1           equ	4030	;# 
   200   000FBE                     CCPR1L          equ	4030	;# 
   201   000FBF                     CCPR1H          equ	4031	;# 
   202   000FC0                     ADCON2          equ	4032	;# 
   203   000FC1                     ADCON1          equ	4033	;# 
   204   000FC2                     ADCON0          equ	4034	;# 
   205   000FC3                     ADRES           equ	4035	;# 
   206   000FC3                     ADRESL          equ	4035	;# 
   207   000FC4                     ADRESH          equ	4036	;# 
   208   000FC5                     SSPCON2         equ	4037	;# 
   209   000FC6                     SSPCON1         equ	4038	;# 
   210   000FC7                     SSPSTAT         equ	4039	;# 
   211   000FC8                     SSPADD          equ	4040	;# 
   212   000FC9                     SSPBUF          equ	4041	;# 
   213   000FCA                     T2CON           equ	4042	;# 
   214   000FCB                     PR2             equ	4043	;# 
   215   000FCB                     MEMCON          equ	4043	;# 
   216   000FCC                     TMR2            equ	4044	;# 
   217   000FCD                     T1CON           equ	4045	;# 
   218   000FCE                     TMR1            equ	4046	;# 
   219   000FCE                     TMR1L           equ	4046	;# 
   220   000FCF                     TMR1H           equ	4047	;# 
   221   000FD0                     RCON            equ	4048	;# 
   222   000FD1                     WDTCON          equ	4049	;# 
   223   000FD2                     HLVDCON         equ	4050	;# 
   224   000FD2                     LVDCON          equ	4050	;# 
   225   000FD3                     OSCCON          equ	4051	;# 
   226   000FD5                     T0CON           equ	4053	;# 
   227   000FD6                     TMR0            equ	4054	;# 
   228   000FD6                     TMR0L           equ	4054	;# 
   229   000FD7                     TMR0H           equ	4055	;# 
   230   000FD8                     STATUS          equ	4056	;# 
   231   000FD9                     FSR2            equ	4057	;# 
   232   000FD9                     FSR2L           equ	4057	;# 
   233   000FDA                     FSR2H           equ	4058	;# 
   234   000FDB                     PLUSW2          equ	4059	;# 
   235   000FDC                     PREINC2         equ	4060	;# 
   236   000FDD                     POSTDEC2        equ	4061	;# 
   237   000FDE                     POSTINC2        equ	4062	;# 
   238   000FDF                     INDF2           equ	4063	;# 
   239   000FE0                     BSR             equ	4064	;# 
   240   000FE1                     FSR1            equ	4065	;# 
   241   000FE1                     FSR1L           equ	4065	;# 
   242   000FE2                     FSR1H           equ	4066	;# 
   243   000FE3                     PLUSW1          equ	4067	;# 
   244   000FE4                     PREINC1         equ	4068	;# 
   245   000FE5                     POSTDEC1        equ	4069	;# 
   246   000FE6                     POSTINC1        equ	4070	;# 
   247   000FE7                     INDF1           equ	4071	;# 
   248   000FE8                     WREG            equ	4072	;# 
   249   000FE9                     FSR0            equ	4073	;# 
   250   000FE9                     FSR0L           equ	4073	;# 
   251   000FEA                     FSR0H           equ	4074	;# 
   252   000FEB                     PLUSW0          equ	4075	;# 
   253   000FEC                     PREINC0         equ	4076	;# 
   254   000FED                     POSTDEC0        equ	4077	;# 
   255   000FEE                     POSTINC0        equ	4078	;# 
   256   000FEF                     INDF0           equ	4079	;# 
   257   000FF0                     INTCON3         equ	4080	;# 
   258   000FF1                     INTCON2         equ	4081	;# 
   259   000FF2                     INTCON          equ	4082	;# 
   260   000FF3                     PROD            equ	4083	;# 
   261   000FF3                     PRODL           equ	4083	;# 
   262   000FF4                     PRODH           equ	4084	;# 
   263   000FF5                     TABLAT          equ	4085	;# 
   264   000FF6                     TBLPTR          equ	4086	;# 
   265   000FF6                     TBLPTRL         equ	4086	;# 
   266   000FF7                     TBLPTRH         equ	4087	;# 
   267   000FF8                     TBLPTRU         equ	4088	;# 
   268   000FF9                     PCLAT           equ	4089	;# 
   269   000FF9                     PC              equ	4089	;# 
   270   000FF9                     PCL             equ	4089	;# 
   271   000FFA                     PCLATH          equ	4090	;# 
   272   000FFB                     PCLATU          equ	4091	;# 
   273   000FFC                     STKPTR          equ	4092	;# 
   274   000FFD                     TOS             equ	4093	;# 
   275   000FFD                     TOSL            equ	4093	;# 
   276   000FFE                     TOSH            equ	4094	;# 
   277   000FFF                     TOSU            equ	4095	;# 
   278   000F77                     SSPMSK          equ	3959	;# 
   279   000F78                     SLRCON          equ	3960	;# 
   280   000F79                     CM2CON1         equ	3961	;# 
   281   000F7A                     CM2CON0         equ	3962	;# 
   282   000F7B                     CM1CON0         equ	3963	;# 
   283   000F7C                     WPUB            equ	3964	;# 
   284   000F7D                     IOCB            equ	3965	;# 
   285   000F7E                     ANSEL           equ	3966	;# 
   286   000F7F                     ANSELH          equ	3967	;# 
   287   000F80                     PORTA           equ	3968	;# 
   288   000F81                     PORTB           equ	3969	;# 
   289   000F82                     PORTC           equ	3970	;# 
   290   000F83                     PORTD           equ	3971	;# 
   291   000F84                     PORTE           equ	3972	;# 
   292   000F89                     LATA            equ	3977	;# 
   293   000F8A                     LATB            equ	3978	;# 
   294   000F8B                     LATC            equ	3979	;# 
   295   000F8C                     LATD            equ	3980	;# 
   296   000F8D                     LATE            equ	3981	;# 
   297   000F92                     TRISA           equ	3986	;# 
   298   000F92                     DDRA            equ	3986	;# 
   299   000F93                     TRISB           equ	3987	;# 
   300   000F93                     DDRB            equ	3987	;# 
   301   000F94                     TRISC           equ	3988	;# 
   302   000F94                     DDRC            equ	3988	;# 
   303   000F95                     TRISD           equ	3989	;# 
   304   000F95                     DDRD            equ	3989	;# 
   305   000F96                     TRISE           equ	3990	;# 
   306   000F96                     DDRE            equ	3990	;# 
   307   000F9B                     OSCTUNE         equ	3995	;# 
   308   000F9D                     PIE1            equ	3997	;# 
   309   000F9E                     PIR1            equ	3998	;# 
   310   000F9F                     IPR1            equ	3999	;# 
   311   000FA0                     PIE2            equ	4000	;# 
   312   000FA1                     PIR2            equ	4001	;# 
   313   000FA2                     IPR2            equ	4002	;# 
   314   000FA6                     EECON1          equ	4006	;# 
   315   000FA7                     EECON2          equ	4007	;# 
   316   000FA8                     EEDATA          equ	4008	;# 
   317   000FA9                     EEADR           equ	4009	;# 
   318   000FAA                     EEADRH          equ	4010	;# 
   319   000FAB                     RCSTA           equ	4011	;# 
   320   000FAB                     RCSTA1          equ	4011	;# 
   321   000FAC                     TXSTA           equ	4012	;# 
   322   000FAC                     TXSTA1          equ	4012	;# 
   323   000FAD                     TXREG           equ	4013	;# 
   324   000FAD                     TXREG1          equ	4013	;# 
   325   000FAE                     RCREG           equ	4014	;# 
   326   000FAE                     RCREG1          equ	4014	;# 
   327   000FAF                     SPBRG           equ	4015	;# 
   328   000FAF                     SPBRG1          equ	4015	;# 
   329   000FB0                     SPBRGH          equ	4016	;# 
   330   000FB1                     T3CON           equ	4017	;# 
   331   000FB2                     TMR3            equ	4018	;# 
   332   000FB2                     TMR3L           equ	4018	;# 
   333   000FB3                     TMR3H           equ	4019	;# 
   334   000FB4                     CVRCON2         equ	4020	;# 
   335   000FB5                     CVRCON          equ	4021	;# 
   336   000FB6                     ECCP1AS         equ	4022	;# 
   337   000FB7                     PWM1CON         equ	4023	;# 
   338   000FB8                     BAUDCON         equ	4024	;# 
   339   000FB8                     BAUDCTL         equ	4024	;# 
   340   000FB9                     PSTRCON         equ	4025	;# 
   341   000FBA                     CCP2CON         equ	4026	;# 
   342   000FBB                     CCPR2           equ	4027	;# 
   343   000FBB                     CCPR2L          equ	4027	;# 
   344   000FBC                     CCPR2H          equ	4028	;# 
   345   000FBD                     CCP1CON         equ	4029	;# 
   346   000FBE                     CCPR1           equ	4030	;# 
   347   000FBE                     CCPR1L          equ	4030	;# 
   348   000FBF                     CCPR1H          equ	4031	;# 
   349   000FC0                     ADCON2          equ	4032	;# 
   350   000FC1                     ADCON1          equ	4033	;# 
   351   000FC2                     ADCON0          equ	4034	;# 
   352   000FC3                     ADRES           equ	4035	;# 
   353   000FC3                     ADRESL          equ	4035	;# 
   354   000FC4                     ADRESH          equ	4036	;# 
   355   000FC5                     SSPCON2         equ	4037	;# 
   356   000FC6                     SSPCON1         equ	4038	;# 
   357   000FC7                     SSPSTAT         equ	4039	;# 
   358   000FC8                     SSPADD          equ	4040	;# 
   359   000FC9                     SSPBUF          equ	4041	;# 
   360   000FCA                     T2CON           equ	4042	;# 
   361   000FCB                     PR2             equ	4043	;# 
   362   000FCB                     MEMCON          equ	4043	;# 
   363   000FCC                     TMR2            equ	4044	;# 
   364   000FCD                     T1CON           equ	4045	;# 
   365   000FCE                     TMR1            equ	4046	;# 
   366   000FCE                     TMR1L           equ	4046	;# 
   367   000FCF                     TMR1H           equ	4047	;# 
   368   000FD0                     RCON            equ	4048	;# 
   369   000FD1                     WDTCON          equ	4049	;# 
   370   000FD2                     HLVDCON         equ	4050	;# 
   371   000FD2                     LVDCON          equ	4050	;# 
   372   000FD3                     OSCCON          equ	4051	;# 
   373   000FD5                     T0CON           equ	4053	;# 
   374   000FD6                     TMR0            equ	4054	;# 
   375   000FD6                     TMR0L           equ	4054	;# 
   376   000FD7                     TMR0H           equ	4055	;# 
   377   000FD8                     STATUS          equ	4056	;# 
   378   000FD9                     FSR2            equ	4057	;# 
   379   000FD9                     FSR2L           equ	4057	;# 
   380   000FDA                     FSR2H           equ	4058	;# 
   381   000FDB                     PLUSW2          equ	4059	;# 
   382   000FDC                     PREINC2         equ	4060	;# 
   383   000FDD                     POSTDEC2        equ	4061	;# 
   384   000FDE                     POSTINC2        equ	4062	;# 
   385   000FDF                     INDF2           equ	4063	;# 
   386   000FE0                     BSR             equ	4064	;# 
   387   000FE1                     FSR1            equ	4065	;# 
   388   000FE1                     FSR1L           equ	4065	;# 
   389   000FE2                     FSR1H           equ	4066	;# 
   390   000FE3                     PLUSW1          equ	4067	;# 
   391   000FE4                     PREINC1         equ	4068	;# 
   392   000FE5                     POSTDEC1        equ	4069	;# 
   393   000FE6                     POSTINC1        equ	4070	;# 
   394   000FE7                     INDF1           equ	4071	;# 
   395   000FE8                     WREG            equ	4072	;# 
   396   000FE9                     FSR0            equ	4073	;# 
   397   000FE9                     FSR0L           equ	4073	;# 
   398   000FEA                     FSR0H           equ	4074	;# 
   399   000FEB                     PLUSW0          equ	4075	;# 
   400   000FEC                     PREINC0         equ	4076	;# 
   401   000FED                     POSTDEC0        equ	4077	;# 
   402   000FEE                     POSTINC0        equ	4078	;# 
   403   000FEF                     INDF0           equ	4079	;# 
   404   000FF0                     INTCON3         equ	4080	;# 
   405   000FF1                     INTCON2         equ	4081	;# 
   406   000FF2                     INTCON          equ	4082	;# 
   407   000FF3                     PROD            equ	4083	;# 
   408   000FF3                     PRODL           equ	4083	;# 
   409   000FF4                     PRODH           equ	4084	;# 
   410   000FF5                     TABLAT          equ	4085	;# 
   411   000FF6                     TBLPTR          equ	4086	;# 
   412   000FF6                     TBLPTRL         equ	4086	;# 
   413   000FF7                     TBLPTRH         equ	4087	;# 
   414   000FF8                     TBLPTRU         equ	4088	;# 
   415   000FF9                     PCLAT           equ	4089	;# 
   416   000FF9                     PC              equ	4089	;# 
   417   000FF9                     PCL             equ	4089	;# 
   418   000FFA                     PCLATH          equ	4090	;# 
   419   000FFB                     PCLATU          equ	4091	;# 
   420   000FFC                     STKPTR          equ	4092	;# 
   421   000FFD                     TOS             equ	4093	;# 
   422   000FFD                     TOSL            equ	4093	;# 
   423   000FFE                     TOSH            equ	4094	;# 
   424   000FFF                     TOSU            equ	4095	;# 
   425   000F77                     SSPMSK          equ	3959	;# 
   426   000F78                     SLRCON          equ	3960	;# 
   427   000F79                     CM2CON1         equ	3961	;# 
   428   000F7A                     CM2CON0         equ	3962	;# 
   429   000F7B                     CM1CON0         equ	3963	;# 
   430   000F7C                     WPUB            equ	3964	;# 
   431   000F7D                     IOCB            equ	3965	;# 
   432   000F7E                     ANSEL           equ	3966	;# 
   433   000F7F                     ANSELH          equ	3967	;# 
   434   000F80                     PORTA           equ	3968	;# 
   435   000F81                     PORTB           equ	3969	;# 
   436   000F82                     PORTC           equ	3970	;# 
   437   000F83                     PORTD           equ	3971	;# 
   438   000F84                     PORTE           equ	3972	;# 
   439   000F89                     LATA            equ	3977	;# 
   440   000F8A                     LATB            equ	3978	;# 
   441   000F8B                     LATC            equ	3979	;# 
   442   000F8C                     LATD            equ	3980	;# 
   443   000F8D                     LATE            equ	3981	;# 
   444   000F92                     TRISA           equ	3986	;# 
   445   000F92                     DDRA            equ	3986	;# 
   446   000F93                     TRISB           equ	3987	;# 
   447   000F93                     DDRB            equ	3987	;# 
   448   000F94                     TRISC           equ	3988	;# 
   449   000F94                     DDRC            equ	3988	;# 
   450   000F95                     TRISD           equ	3989	;# 
   451   000F95                     DDRD            equ	3989	;# 
   452   000F96                     TRISE           equ	3990	;# 
   453   000F96                     DDRE            equ	3990	;# 
   454   000F9B                     OSCTUNE         equ	3995	;# 
   455   000F9D                     PIE1            equ	3997	;# 
   456   000F9E                     PIR1            equ	3998	;# 
   457   000F9F                     IPR1            equ	3999	;# 
   458   000FA0                     PIE2            equ	4000	;# 
   459   000FA1                     PIR2            equ	4001	;# 
   460   000FA2                     IPR2            equ	4002	;# 
   461   000FA6                     EECON1          equ	4006	;# 
   462   000FA7                     EECON2          equ	4007	;# 
   463   000FA8                     EEDATA          equ	4008	;# 
   464   000FA9                     EEADR           equ	4009	;# 
   465   000FAA                     EEADRH          equ	4010	;# 
   466   000FAB                     RCSTA           equ	4011	;# 
   467   000FAB                     RCSTA1          equ	4011	;# 
   468   000FAC                     TXSTA           equ	4012	;# 
   469   000FAC                     TXSTA1          equ	4012	;# 
   470   000FAD                     TXREG           equ	4013	;# 
   471   000FAD                     TXREG1          equ	4013	;# 
   472   000FAE                     RCREG           equ	4014	;# 
   473   000FAE                     RCREG1          equ	4014	;# 
   474   000FAF                     SPBRG           equ	4015	;# 
   475   000FAF                     SPBRG1          equ	4015	;# 
   476   000FB0                     SPBRGH          equ	4016	;# 
   477   000FB1                     T3CON           equ	4017	;# 
   478   000FB2                     TMR3            equ	4018	;# 
   479   000FB2                     TMR3L           equ	4018	;# 
   480   000FB3                     TMR3H           equ	4019	;# 
   481   000FB4                     CVRCON2         equ	4020	;# 
   482   000FB5                     CVRCON          equ	4021	;# 
   483   000FB6                     ECCP1AS         equ	4022	;# 
   484   000FB7                     PWM1CON         equ	4023	;# 
   485   000FB8                     BAUDCON         equ	4024	;# 
   486   000FB8                     BAUDCTL         equ	4024	;# 
   487   000FB9                     PSTRCON         equ	4025	;# 
   488   000FBA                     CCP2CON         equ	4026	;# 
   489   000FBB                     CCPR2           equ	4027	;# 
   490   000FBB                     CCPR2L          equ	4027	;# 
   491   000FBC                     CCPR2H          equ	4028	;# 
   492   000FBD                     CCP1CON         equ	4029	;# 
   493   000FBE                     CCPR1           equ	4030	;# 
   494   000FBE                     CCPR1L          equ	4030	;# 
   495   000FBF                     CCPR1H          equ	4031	;# 
   496   000FC0                     ADCON2          equ	4032	;# 
   497   000FC1                     ADCON1          equ	4033	;# 
   498   000FC2                     ADCON0          equ	4034	;# 
   499   000FC3                     ADRES           equ	4035	;# 
   500   000FC3                     ADRESL          equ	4035	;# 
   501   000FC4                     ADRESH          equ	4036	;# 
   502   000FC5                     SSPCON2         equ	4037	;# 
   503   000FC6                     SSPCON1         equ	4038	;# 
   504   000FC7                     SSPSTAT         equ	4039	;# 
   505   000FC8                     SSPADD          equ	4040	;# 
   506   000FC9                     SSPBUF          equ	4041	;# 
   507   000FCA                     T2CON           equ	4042	;# 
   508   000FCB                     PR2             equ	4043	;# 
   509   000FCB                     MEMCON          equ	4043	;# 
   510   000FCC                     TMR2            equ	4044	;# 
   511   000FCD                     T1CON           equ	4045	;# 
   512   000FCE                     TMR1            equ	4046	;# 
   513   000FCE                     TMR1L           equ	4046	;# 
   514   000FCF                     TMR1H           equ	4047	;# 
   515   000FD0                     RCON            equ	4048	;# 
   516   000FD1                     WDTCON          equ	4049	;# 
   517   000FD2                     HLVDCON         equ	4050	;# 
   518   000FD2                     LVDCON          equ	4050	;# 
   519   000FD3                     OSCCON          equ	4051	;# 
   520   000FD5                     T0CON           equ	4053	;# 
   521   000FD6                     TMR0            equ	4054	;# 
   522   000FD6                     TMR0L           equ	4054	;# 
   523   000FD7                     TMR0H           equ	4055	;# 
   524   000FD8                     STATUS          equ	4056	;# 
   525   000FD9                     FSR2            equ	4057	;# 
   526   000FD9                     FSR2L           equ	4057	;# 
   527   000FDA                     FSR2H           equ	4058	;# 
   528   000FDB                     PLUSW2          equ	4059	;# 
   529   000FDC                     PREINC2         equ	4060	;# 
   530   000FDD                     POSTDEC2        equ	4061	;# 
   531   000FDE                     POSTINC2        equ	4062	;# 
   532   000FDF                     INDF2           equ	4063	;# 
   533   000FE0                     BSR             equ	4064	;# 
   534   000FE1                     FSR1            equ	4065	;# 
   535   000FE1                     FSR1L           equ	4065	;# 
   536   000FE2                     FSR1H           equ	4066	;# 
   537   000FE3                     PLUSW1          equ	4067	;# 
   538   000FE4                     PREINC1         equ	4068	;# 
   539   000FE5                     POSTDEC1        equ	4069	;# 
   540   000FE6                     POSTINC1        equ	4070	;# 
   541   000FE7                     INDF1           equ	4071	;# 
   542   000FE8                     WREG            equ	4072	;# 
   543   000FE9                     FSR0            equ	4073	;# 
   544   000FE9                     FSR0L           equ	4073	;# 
   545   000FEA                     FSR0H           equ	4074	;# 
   546   000FEB                     PLUSW0          equ	4075	;# 
   547   000FEC                     PREINC0         equ	4076	;# 
   548   000FED                     POSTDEC0        equ	4077	;# 
   549   000FEE                     POSTINC0        equ	4078	;# 
   550   000FEF                     INDF0           equ	4079	;# 
   551   000FF0                     INTCON3         equ	4080	;# 
   552   000FF1                     INTCON2         equ	4081	;# 
   553   000FF2                     INTCON          equ	4082	;# 
   554   000FF3                     PROD            equ	4083	;# 
   555   000FF3                     PRODL           equ	4083	;# 
   556   000FF4                     PRODH           equ	4084	;# 
   557   000FF5                     TABLAT          equ	4085	;# 
   558   000FF6                     TBLPTR          equ	4086	;# 
   559   000FF6                     TBLPTRL         equ	4086	;# 
   560   000FF7                     TBLPTRH         equ	4087	;# 
   561   000FF8                     TBLPTRU         equ	4088	;# 
   562   000FF9                     PCLAT           equ	4089	;# 
   563   000FF9                     PC              equ	4089	;# 
   564   000FF9                     PCL             equ	4089	;# 
   565   000FFA                     PCLATH          equ	4090	;# 
   566   000FFB                     PCLATU          equ	4091	;# 
   567   000FFC                     STKPTR          equ	4092	;# 
   568   000FFD                     TOS             equ	4093	;# 
   569   000FFD                     TOSL            equ	4093	;# 
   570   000FFE                     TOSH            equ	4094	;# 
   571   000FFF                     TOSU            equ	4095	;# 
   572   000F77                     SSPMSK          equ	3959	;# 
   573   000F78                     SLRCON          equ	3960	;# 
   574   000F79                     CM2CON1         equ	3961	;# 
   575   000F7A                     CM2CON0         equ	3962	;# 
   576   000F7B                     CM1CON0         equ	3963	;# 
   577   000F7C                     WPUB            equ	3964	;# 
   578   000F7D                     IOCB            equ	3965	;# 
   579   000F7E                     ANSEL           equ	3966	;# 
   580   000F7F                     ANSELH          equ	3967	;# 
   581   000F80                     PORTA           equ	3968	;# 
   582   000F81                     PORTB           equ	3969	;# 
   583   000F82                     PORTC           equ	3970	;# 
   584   000F83                     PORTD           equ	3971	;# 
   585   000F84                     PORTE           equ	3972	;# 
   586   000F89                     LATA            equ	3977	;# 
   587   000F8A                     LATB            equ	3978	;# 
   588   000F8B                     LATC            equ	3979	;# 
   589   000F8C                     LATD            equ	3980	;# 
   590   000F8D                     LATE            equ	3981	;# 
   591   000F92                     TRISA           equ	3986	;# 
   592   000F92                     DDRA            equ	3986	;# 
   593   000F93                     TRISB           equ	3987	;# 
   594   000F93                     DDRB            equ	3987	;# 
   595   000F94                     TRISC           equ	3988	;# 
   596   000F94                     DDRC            equ	3988	;# 
   597   000F95                     TRISD           equ	3989	;# 
   598   000F95                     DDRD            equ	3989	;# 
   599   000F96                     TRISE           equ	3990	;# 
   600   000F96                     DDRE            equ	3990	;# 
   601   000F9B                     OSCTUNE         equ	3995	;# 
   602   000F9D                     PIE1            equ	3997	;# 
   603   000F9E                     PIR1            equ	3998	;# 
   604   000F9F                     IPR1            equ	3999	;# 
   605   000FA0                     PIE2            equ	4000	;# 
   606   000FA1                     PIR2            equ	4001	;# 
   607   000FA2                     IPR2            equ	4002	;# 
   608   000FA6                     EECON1          equ	4006	;# 
   609   000FA7                     EECON2          equ	4007	;# 
   610   000FA8                     EEDATA          equ	4008	;# 
   611   000FA9                     EEADR           equ	4009	;# 
   612   000FAA                     EEADRH          equ	4010	;# 
   613   000FAB                     RCSTA           equ	4011	;# 
   614   000FAB                     RCSTA1          equ	4011	;# 
   615   000FAC                     TXSTA           equ	4012	;# 
   616   000FAC                     TXSTA1          equ	4012	;# 
   617   000FAD                     TXREG           equ	4013	;# 
   618   000FAD                     TXREG1          equ	4013	;# 
   619   000FAE                     RCREG           equ	4014	;# 
   620   000FAE                     RCREG1          equ	4014	;# 
   621   000FAF                     SPBRG           equ	4015	;# 
   622   000FAF                     SPBRG1          equ	4015	;# 
   623   000FB0                     SPBRGH          equ	4016	;# 
   624   000FB1                     T3CON           equ	4017	;# 
   625   000FB2                     TMR3            equ	4018	;# 
   626   000FB2                     TMR3L           equ	4018	;# 
   627   000FB3                     TMR3H           equ	4019	;# 
   628   000FB4                     CVRCON2         equ	4020	;# 
   629   000FB5                     CVRCON          equ	4021	;# 
   630   000FB6                     ECCP1AS         equ	4022	;# 
   631   000FB7                     PWM1CON         equ	4023	;# 
   632   000FB8                     BAUDCON         equ	4024	;# 
   633   000FB8                     BAUDCTL         equ	4024	;# 
   634   000FB9                     PSTRCON         equ	4025	;# 
   635   000FBA                     CCP2CON         equ	4026	;# 
   636   000FBB                     CCPR2           equ	4027	;# 
   637   000FBB                     CCPR2L          equ	4027	;# 
   638   000FBC                     CCPR2H          equ	4028	;# 
   639   000FBD                     CCP1CON         equ	4029	;# 
   640   000FBE                     CCPR1           equ	4030	;# 
   641   000FBE                     CCPR1L          equ	4030	;# 
   642   000FBF                     CCPR1H          equ	4031	;# 
   643   000FC0                     ADCON2          equ	4032	;# 
   644   000FC1                     ADCON1          equ	4033	;# 
   645   000FC2                     ADCON0          equ	4034	;# 
   646   000FC3                     ADRES           equ	4035	;# 
   647   000FC3                     ADRESL          equ	4035	;# 
   648   000FC4                     ADRESH          equ	4036	;# 
   649   000FC5                     SSPCON2         equ	4037	;# 
   650   000FC6                     SSPCON1         equ	4038	;# 
   651   000FC7                     SSPSTAT         equ	4039	;# 
   652   000FC8                     SSPADD          equ	4040	;# 
   653   000FC9                     SSPBUF          equ	4041	;# 
   654   000FCA                     T2CON           equ	4042	;# 
   655   000FCB                     PR2             equ	4043	;# 
   656   000FCB                     MEMCON          equ	4043	;# 
   657   000FCC                     TMR2            equ	4044	;# 
   658   000FCD                     T1CON           equ	4045	;# 
   659   000FCE                     TMR1            equ	4046	;# 
   660   000FCE                     TMR1L           equ	4046	;# 
   661   000FCF                     TMR1H           equ	4047	;# 
   662   000FD0                     RCON            equ	4048	;# 
   663   000FD1                     WDTCON          equ	4049	;# 
   664   000FD2                     HLVDCON         equ	4050	;# 
   665   000FD2                     LVDCON          equ	4050	;# 
   666   000FD3                     OSCCON          equ	4051	;# 
   667   000FD5                     T0CON           equ	4053	;# 
   668   000FD6                     TMR0            equ	4054	;# 
   669   000FD6                     TMR0L           equ	4054	;# 
   670   000FD7                     TMR0H           equ	4055	;# 
   671   000FD8                     STATUS          equ	4056	;# 
   672   000FD9                     FSR2            equ	4057	;# 
   673   000FD9                     FSR2L           equ	4057	;# 
   674   000FDA                     FSR2H           equ	4058	;# 
   675   000FDB                     PLUSW2          equ	4059	;# 
   676   000FDC                     PREINC2         equ	4060	;# 
   677   000FDD                     POSTDEC2        equ	4061	;# 
   678   000FDE                     POSTINC2        equ	4062	;# 
   679   000FDF                     INDF2           equ	4063	;# 
   680   000FE0                     BSR             equ	4064	;# 
   681   000FE1                     FSR1            equ	4065	;# 
   682   000FE1                     FSR1L           equ	4065	;# 
   683   000FE2                     FSR1H           equ	4066	;# 
   684   000FE3                     PLUSW1          equ	4067	;# 
   685   000FE4                     PREINC1         equ	4068	;# 
   686   000FE5                     POSTDEC1        equ	4069	;# 
   687   000FE6                     POSTINC1        equ	4070	;# 
   688   000FE7                     INDF1           equ	4071	;# 
   689   000FE8                     WREG            equ	4072	;# 
   690   000FE9                     FSR0            equ	4073	;# 
   691   000FE9                     FSR0L           equ	4073	;# 
   692   000FEA                     FSR0H           equ	4074	;# 
   693   000FEB                     PLUSW0          equ	4075	;# 
   694   000FEC                     PREINC0         equ	4076	;# 
   695   000FED                     POSTDEC0        equ	4077	;# 
   696   000FEE                     POSTINC0        equ	4078	;# 
   697   000FEF                     INDF0           equ	4079	;# 
   698   000FF0                     INTCON3         equ	4080	;# 
   699   000FF1                     INTCON2         equ	4081	;# 
   700   000FF2                     INTCON          equ	4082	;# 
   701   000FF3                     PROD            equ	4083	;# 
   702   000FF3                     PRODL           equ	4083	;# 
   703   000FF4                     PRODH           equ	4084	;# 
   704   000FF5                     TABLAT          equ	4085	;# 
   705   000FF6                     TBLPTR          equ	4086	;# 
   706   000FF6                     TBLPTRL         equ	4086	;# 
   707   000FF7                     TBLPTRH         equ	4087	;# 
   708   000FF8                     TBLPTRU         equ	4088	;# 
   709   000FF9                     PCLAT           equ	4089	;# 
   710   000FF9                     PC              equ	4089	;# 
   711   000FF9                     PCL             equ	4089	;# 
   712   000FFA                     PCLATH          equ	4090	;# 
   713   000FFB                     PCLATU          equ	4091	;# 
   714   000FFC                     STKPTR          equ	4092	;# 
   715   000FFD                     TOS             equ	4093	;# 
   716   000FFD                     TOSL            equ	4093	;# 
   717   000FFE                     TOSH            equ	4094	;# 
   718   000FFF                     TOSU            equ	4095	;# 
   719   000F77                     SSPMSK          equ	3959	;# 
   720   000F78                     SLRCON          equ	3960	;# 
   721   000F79                     CM2CON1         equ	3961	;# 
   722   000F7A                     CM2CON0         equ	3962	;# 
   723   000F7B                     CM1CON0         equ	3963	;# 
   724   000F7C                     WPUB            equ	3964	;# 
   725   000F7D                     IOCB            equ	3965	;# 
   726   000F7E                     ANSEL           equ	3966	;# 
   727   000F7F                     ANSELH          equ	3967	;# 
   728   000F80                     PORTA           equ	3968	;# 
   729   000F81                     PORTB           equ	3969	;# 
   730   000F82                     PORTC           equ	3970	;# 
   731   000F83                     PORTD           equ	3971	;# 
   732   000F84                     PORTE           equ	3972	;# 
   733   000F89                     LATA            equ	3977	;# 
   734   000F8A                     LATB            equ	3978	;# 
   735   000F8B                     LATC            equ	3979	;# 
   736   000F8C                     LATD            equ	3980	;# 
   737   000F8D                     LATE            equ	3981	;# 
   738   000F92                     TRISA           equ	3986	;# 
   739   000F92                     DDRA            equ	3986	;# 
   740   000F93                     TRISB           equ	3987	;# 
   741   000F93                     DDRB            equ	3987	;# 
   742   000F94                     TRISC           equ	3988	;# 
   743   000F94                     DDRC            equ	3988	;# 
   744   000F95                     TRISD           equ	3989	;# 
   745   000F95                     DDRD            equ	3989	;# 
   746   000F96                     TRISE           equ	3990	;# 
   747   000F96                     DDRE            equ	3990	;# 
   748   000F9B                     OSCTUNE         equ	3995	;# 
   749   000F9D                     PIE1            equ	3997	;# 
   750   000F9E                     PIR1            equ	3998	;# 
   751   000F9F                     IPR1            equ	3999	;# 
   752   000FA0                     PIE2            equ	4000	;# 
   753   000FA1                     PIR2            equ	4001	;# 
   754   000FA2                     IPR2            equ	4002	;# 
   755   000FA6                     EECON1          equ	4006	;# 
   756   000FA7                     EECON2          equ	4007	;# 
   757   000FA8                     EEDATA          equ	4008	;# 
   758   000FA9                     EEADR           equ	4009	;# 
   759   000FAA                     EEADRH          equ	4010	;# 
   760   000FAB                     RCSTA           equ	4011	;# 
   761   000FAB                     RCSTA1          equ	4011	;# 
   762   000FAC                     TXSTA           equ	4012	;# 
   763   000FAC                     TXSTA1          equ	4012	;# 
   764   000FAD                     TXREG           equ	4013	;# 
   765   000FAD                     TXREG1          equ	4013	;# 
   766   000FAE                     RCREG           equ	4014	;# 
   767   000FAE                     RCREG1          equ	4014	;# 
   768   000FAF                     SPBRG           equ	4015	;# 
   769   000FAF                     SPBRG1          equ	4015	;# 
   770   000FB0                     SPBRGH          equ	4016	;# 
   771   000FB1                     T3CON           equ	4017	;# 
   772   000FB2                     TMR3            equ	4018	;# 
   773   000FB2                     TMR3L           equ	4018	;# 
   774   000FB3                     TMR3H           equ	4019	;# 
   775   000FB4                     CVRCON2         equ	4020	;# 
   776   000FB5                     CVRCON          equ	4021	;# 
   777   000FB6                     ECCP1AS         equ	4022	;# 
   778   000FB7                     PWM1CON         equ	4023	;# 
   779   000FB8                     BAUDCON         equ	4024	;# 
   780   000FB8                     BAUDCTL         equ	4024	;# 
   781   000FB9                     PSTRCON         equ	4025	;# 
   782   000FBA                     CCP2CON         equ	4026	;# 
   783   000FBB                     CCPR2           equ	4027	;# 
   784   000FBB                     CCPR2L          equ	4027	;# 
   785   000FBC                     CCPR2H          equ	4028	;# 
   786   000FBD                     CCP1CON         equ	4029	;# 
   787   000FBE                     CCPR1           equ	4030	;# 
   788   000FBE                     CCPR1L          equ	4030	;# 
   789   000FBF                     CCPR1H          equ	4031	;# 
   790   000FC0                     ADCON2          equ	4032	;# 
   791   000FC1                     ADCON1          equ	4033	;# 
   792   000FC2                     ADCON0          equ	4034	;# 
   793   000FC3                     ADRES           equ	4035	;# 
   794   000FC3                     ADRESL          equ	4035	;# 
   795   000FC4                     ADRESH          equ	4036	;# 
   796   000FC5                     SSPCON2         equ	4037	;# 
   797   000FC6                     SSPCON1         equ	4038	;# 
   798   000FC7                     SSPSTAT         equ	4039	;# 
   799   000FC8                     SSPADD          equ	4040	;# 
   800   000FC9                     SSPBUF          equ	4041	;# 
   801   000FCA                     T2CON           equ	4042	;# 
   802   000FCB                     PR2             equ	4043	;# 
   803   000FCB                     MEMCON          equ	4043	;# 
   804   000FCC                     TMR2            equ	4044	;# 
   805   000FCD                     T1CON           equ	4045	;# 
   806   000FCE                     TMR1            equ	4046	;# 
   807   000FCE                     TMR1L           equ	4046	;# 
   808   000FCF                     TMR1H           equ	4047	;# 
   809   000FD0                     RCON            equ	4048	;# 
   810   000FD1                     WDTCON          equ	4049	;# 
   811   000FD2                     HLVDCON         equ	4050	;# 
   812   000FD2                     LVDCON          equ	4050	;# 
   813   000FD3                     OSCCON          equ	4051	;# 
   814   000FD5                     T0CON           equ	4053	;# 
   815   000FD6                     TMR0            equ	4054	;# 
   816   000FD6                     TMR0L           equ	4054	;# 
   817   000FD7                     TMR0H           equ	4055	;# 
   818   000FD8                     STATUS          equ	4056	;# 
   819   000FD9                     FSR2            equ	4057	;# 
   820   000FD9                     FSR2L           equ	4057	;# 
   821   000FDA                     FSR2H           equ	4058	;# 
   822   000FDB                     PLUSW2          equ	4059	;# 
   823   000FDC                     PREINC2         equ	4060	;# 
   824   000FDD                     POSTDEC2        equ	4061	;# 
   825   000FDE                     POSTINC2        equ	4062	;# 
   826   000FDF                     INDF2           equ	4063	;# 
   827   000FE0                     BSR             equ	4064	;# 
   828   000FE1                     FSR1            equ	4065	;# 
   829   000FE1                     FSR1L           equ	4065	;# 
   830   000FE2                     FSR1H           equ	4066	;# 
   831   000FE3                     PLUSW1          equ	4067	;# 
   832   000FE4                     PREINC1         equ	4068	;# 
   833   000FE5                     POSTDEC1        equ	4069	;# 
   834   000FE6                     POSTINC1        equ	4070	;# 
   835   000FE7                     INDF1           equ	4071	;# 
   836   000FE8                     WREG            equ	4072	;# 
   837   000FE9                     FSR0            equ	4073	;# 
   838   000FE9                     FSR0L           equ	4073	;# 
   839   000FEA                     FSR0H           equ	4074	;# 
   840   000FEB                     PLUSW0          equ	4075	;# 
   841   000FEC                     PREINC0         equ	4076	;# 
   842   000FED                     POSTDEC0        equ	4077	;# 
   843   000FEE                     POSTINC0        equ	4078	;# 
   844   000FEF                     INDF0           equ	4079	;# 
   845   000FF0                     INTCON3         equ	4080	;# 
   846   000FF1                     INTCON2         equ	4081	;# 
   847   000FF2                     INTCON          equ	4082	;# 
   848   000FF3                     PROD            equ	4083	;# 
   849   000FF3                     PRODL           equ	4083	;# 
   850   000FF4                     PRODH           equ	4084	;# 
   851   000FF5                     TABLAT          equ	4085	;# 
   852   000FF6                     TBLPTR          equ	4086	;# 
   853   000FF6                     TBLPTRL         equ	4086	;# 
   854   000FF7                     TBLPTRH         equ	4087	;# 
   855   000FF8                     TBLPTRU         equ	4088	;# 
   856   000FF9                     PCLAT           equ	4089	;# 
   857   000FF9                     PC              equ	4089	;# 
   858   000FF9                     PCL             equ	4089	;# 
   859   000FFA                     PCLATH          equ	4090	;# 
   860   000FFB                     PCLATU          equ	4091	;# 
   861   000FFC                     STKPTR          equ	4092	;# 
   862   000FFD                     TOS             equ	4093	;# 
   863   000FFD                     TOSL            equ	4093	;# 
   864   000FFE                     TOSH            equ	4094	;# 
   865   000FFF                     TOSU            equ	4095	;# 
   866   000F77                     SSPMSK          equ	3959	;# 
   867   000F78                     SLRCON          equ	3960	;# 
   868   000F79                     CM2CON1         equ	3961	;# 
   869   000F7A                     CM2CON0         equ	3962	;# 
   870   000F7B                     CM1CON0         equ	3963	;# 
   871   000F7C                     WPUB            equ	3964	;# 
   872   000F7D                     IOCB            equ	3965	;# 
   873   000F7E                     ANSEL           equ	3966	;# 
   874   000F7F                     ANSELH          equ	3967	;# 
   875   000F80                     PORTA           equ	3968	;# 
   876   000F81                     PORTB           equ	3969	;# 
   877   000F82                     PORTC           equ	3970	;# 
   878   000F83                     PORTD           equ	3971	;# 
   879   000F84                     PORTE           equ	3972	;# 
   880   000F89                     LATA            equ	3977	;# 
   881   000F8A                     LATB            equ	3978	;# 
   882   000F8B                     LATC            equ	3979	;# 
   883   000F8C                     LATD            equ	3980	;# 
   884   000F8D                     LATE            equ	3981	;# 
   885   000F92                     TRISA           equ	3986	;# 
   886   000F92                     DDRA            equ	3986	;# 
   887   000F93                     TRISB           equ	3987	;# 
   888   000F93                     DDRB            equ	3987	;# 
   889   000F94                     TRISC           equ	3988	;# 
   890   000F94                     DDRC            equ	3988	;# 
   891   000F95                     TRISD           equ	3989	;# 
   892   000F95                     DDRD            equ	3989	;# 
   893   000F96                     TRISE           equ	3990	;# 
   894   000F96                     DDRE            equ	3990	;# 
   895   000F9B                     OSCTUNE         equ	3995	;# 
   896   000F9D                     PIE1            equ	3997	;# 
   897   000F9E                     PIR1            equ	3998	;# 
   898   000F9F                     IPR1            equ	3999	;# 
   899   000FA0                     PIE2            equ	4000	;# 
   900   000FA1                     PIR2            equ	4001	;# 
   901   000FA2                     IPR2            equ	4002	;# 
   902   000FA6                     EECON1          equ	4006	;# 
   903   000FA7                     EECON2          equ	4007	;# 
   904   000FA8                     EEDATA          equ	4008	;# 
   905   000FA9                     EEADR           equ	4009	;# 
   906   000FAA                     EEADRH          equ	4010	;# 
   907   000FAB                     RCSTA           equ	4011	;# 
   908   000FAB                     RCSTA1          equ	4011	;# 
   909   000FAC                     TXSTA           equ	4012	;# 
   910   000FAC                     TXSTA1          equ	4012	;# 
   911   000FAD                     TXREG           equ	4013	;# 
   912   000FAD                     TXREG1          equ	4013	;# 
   913   000FAE                     RCREG           equ	4014	;# 
   914   000FAE                     RCREG1          equ	4014	;# 
   915   000FAF                     SPBRG           equ	4015	;# 
   916   000FAF                     SPBRG1          equ	4015	;# 
   917   000FB0                     SPBRGH          equ	4016	;# 
   918   000FB1                     T3CON           equ	4017	;# 
   919   000FB2                     TMR3            equ	4018	;# 
   920   000FB2                     TMR3L           equ	4018	;# 
   921   000FB3                     TMR3H           equ	4019	;# 
   922   000FB4                     CVRCON2         equ	4020	;# 
   923   000FB5                     CVRCON          equ	4021	;# 
   924   000FB6                     ECCP1AS         equ	4022	;# 
   925   000FB7                     PWM1CON         equ	4023	;# 
   926   000FB8                     BAUDCON         equ	4024	;# 
   927   000FB8                     BAUDCTL         equ	4024	;# 
   928   000FB9                     PSTRCON         equ	4025	;# 
   929   000FBA                     CCP2CON         equ	4026	;# 
   930   000FBB                     CCPR2           equ	4027	;# 
   931   000FBB                     CCPR2L          equ	4027	;# 
   932   000FBC                     CCPR2H          equ	4028	;# 
   933   000FBD                     CCP1CON         equ	4029	;# 
   934   000FBE                     CCPR1           equ	4030	;# 
   935   000FBE                     CCPR1L          equ	4030	;# 
   936   000FBF                     CCPR1H          equ	4031	;# 
   937   000FC0                     ADCON2          equ	4032	;# 
   938   000FC1                     ADCON1          equ	4033	;# 
   939   000FC2                     ADCON0          equ	4034	;# 
   940   000FC3                     ADRES           equ	4035	;# 
   941   000FC3                     ADRESL          equ	4035	;# 
   942   000FC4                     ADRESH          equ	4036	;# 
   943   000FC5                     SSPCON2         equ	4037	;# 
   944   000FC6                     SSPCON1         equ	4038	;# 
   945   000FC7                     SSPSTAT         equ	4039	;# 
   946   000FC8                     SSPADD          equ	4040	;# 
   947   000FC9                     SSPBUF          equ	4041	;# 
   948   000FCA                     T2CON           equ	4042	;# 
   949   000FCB                     PR2             equ	4043	;# 
   950   000FCB                     MEMCON          equ	4043	;# 
   951   000FCC                     TMR2            equ	4044	;# 
   952   000FCD                     T1CON           equ	4045	;# 
   953   000FCE                     TMR1            equ	4046	;# 
   954   000FCE                     TMR1L           equ	4046	;# 
   955   000FCF                     TMR1H           equ	4047	;# 
   956   000FD0                     RCON            equ	4048	;# 
   957   000FD1                     WDTCON          equ	4049	;# 
   958   000FD2                     HLVDCON         equ	4050	;# 
   959   000FD2                     LVDCON          equ	4050	;# 
   960   000FD3                     OSCCON          equ	4051	;# 
   961   000FD5                     T0CON           equ	4053	;# 
   962   000FD6                     TMR0            equ	4054	;# 
   963   000FD6                     TMR0L           equ	4054	;# 
   964   000FD7                     TMR0H           equ	4055	;# 
   965   000FD8                     STATUS          equ	4056	;# 
   966   000FD9                     FSR2            equ	4057	;# 
   967   000FD9                     FSR2L           equ	4057	;# 
   968   000FDA                     FSR2H           equ	4058	;# 
   969   000FDB                     PLUSW2          equ	4059	;# 
   970   000FDC                     PREINC2         equ	4060	;# 
   971   000FDD                     POSTDEC2        equ	4061	;# 
   972   000FDE                     POSTINC2        equ	4062	;# 
   973   000FDF                     INDF2           equ	4063	;# 
   974   000FE0                     BSR             equ	4064	;# 
   975   000FE1                     FSR1            equ	4065	;# 
   976   000FE1                     FSR1L           equ	4065	;# 
   977   000FE2                     FSR1H           equ	4066	;# 
   978   000FE3                     PLUSW1          equ	4067	;# 
   979   000FE4                     PREINC1         equ	4068	;# 
   980   000FE5                     POSTDEC1        equ	4069	;# 
   981   000FE6                     POSTINC1        equ	4070	;# 
   982   000FE7                     INDF1           equ	4071	;# 
   983   000FE8                     WREG            equ	4072	;# 
   984   000FE9                     FSR0            equ	4073	;# 
   985   000FE9                     FSR0L           equ	4073	;# 
   986   000FEA                     FSR0H           equ	4074	;# 
   987   000FEB                     PLUSW0          equ	4075	;# 
   988   000FEC                     PREINC0         equ	4076	;# 
   989   000FED                     POSTDEC0        equ	4077	;# 
   990   000FEE                     POSTINC0        equ	4078	;# 
   991   000FEF                     INDF0           equ	4079	;# 
   992   000FF0                     INTCON3         equ	4080	;# 
   993   000FF1                     INTCON2         equ	4081	;# 
   994   000FF2                     INTCON          equ	4082	;# 
   995   000FF3                     PROD            equ	4083	;# 
   996   000FF3                     PRODL           equ	4083	;# 
   997   000FF4                     PRODH           equ	4084	;# 
   998   000FF5                     TABLAT          equ	4085	;# 
   999   000FF6                     TBLPTR          equ	4086	;# 
  1000   000FF6                     TBLPTRL         equ	4086	;# 
  1001   000FF7                     TBLPTRH         equ	4087	;# 
  1002   000FF8                     TBLPTRU         equ	4088	;# 
  1003   000FF9                     PCLAT           equ	4089	;# 
  1004   000FF9                     PC              equ	4089	;# 
  1005   000FF9                     PCL             equ	4089	;# 
  1006   000FFA                     PCLATH          equ	4090	;# 
  1007   000FFB                     PCLATU          equ	4091	;# 
  1008   000FFC                     STKPTR          equ	4092	;# 
  1009   000FFD                     TOS             equ	4093	;# 
  1010   000FFD                     TOSL            equ	4093	;# 
  1011   000FFE                     TOSH            equ	4094	;# 
  1012   000FFF                     TOSU            equ	4095	;# 
  1013   000F77                     SSPMSK          equ	3959	;# 
  1014   000F78                     SLRCON          equ	3960	;# 
  1015   000F79                     CM2CON1         equ	3961	;# 
  1016   000F7A                     CM2CON0         equ	3962	;# 
  1017   000F7B                     CM1CON0         equ	3963	;# 
  1018   000F7C                     WPUB            equ	3964	;# 
  1019   000F7D                     IOCB            equ	3965	;# 
  1020   000F7E                     ANSEL           equ	3966	;# 
  1021   000F7F                     ANSELH          equ	3967	;# 
  1022   000F80                     PORTA           equ	3968	;# 
  1023   000F81                     PORTB           equ	3969	;# 
  1024   000F82                     PORTC           equ	3970	;# 
  1025   000F83                     PORTD           equ	3971	;# 
  1026   000F84                     PORTE           equ	3972	;# 
  1027   000F89                     LATA            equ	3977	;# 
  1028   000F8A                     LATB            equ	3978	;# 
  1029   000F8B                     LATC            equ	3979	;# 
  1030   000F8C                     LATD            equ	3980	;# 
  1031   000F8D                     LATE            equ	3981	;# 
  1032   000F92                     TRISA           equ	3986	;# 
  1033   000F92                     DDRA            equ	3986	;# 
  1034   000F93                     TRISB           equ	3987	;# 
  1035   000F93                     DDRB            equ	3987	;# 
  1036   000F94                     TRISC           equ	3988	;# 
  1037   000F94                     DDRC            equ	3988	;# 
  1038   000F95                     TRISD           equ	3989	;# 
  1039   000F95                     DDRD            equ	3989	;# 
  1040   000F96                     TRISE           equ	3990	;# 
  1041   000F96                     DDRE            equ	3990	;# 
  1042   000F9B                     OSCTUNE         equ	3995	;# 
  1043   000F9D                     PIE1            equ	3997	;# 
  1044   000F9E                     PIR1            equ	3998	;# 
  1045   000F9F                     IPR1            equ	3999	;# 
  1046   000FA0                     PIE2            equ	4000	;# 
  1047   000FA1                     PIR2            equ	4001	;# 
  1048   000FA2                     IPR2            equ	4002	;# 
  1049   000FA6                     EECON1          equ	4006	;# 
  1050   000FA7                     EECON2          equ	4007	;# 
  1051   000FA8                     EEDATA          equ	4008	;# 
  1052   000FA9                     EEADR           equ	4009	;# 
  1053   000FAA                     EEADRH          equ	4010	;# 
  1054   000FAB                     RCSTA           equ	4011	;# 
  1055   000FAB                     RCSTA1          equ	4011	;# 
  1056   000FAC                     TXSTA           equ	4012	;# 
  1057   000FAC                     TXSTA1          equ	4012	;# 
  1058   000FAD                     TXREG           equ	4013	;# 
  1059   000FAD                     TXREG1          equ	4013	;# 
  1060   000FAE                     RCREG           equ	4014	;# 
  1061   000FAE                     RCREG1          equ	4014	;# 
  1062   000FAF                     SPBRG           equ	4015	;# 
  1063   000FAF                     SPBRG1          equ	4015	;# 
  1064   000FB0                     SPBRGH          equ	4016	;# 
  1065   000FB1                     T3CON           equ	4017	;# 
  1066   000FB2                     TMR3            equ	4018	;# 
  1067   000FB2                     TMR3L           equ	4018	;# 
  1068   000FB3                     TMR3H           equ	4019	;# 
  1069   000FB4                     CVRCON2         equ	4020	;# 
  1070   000FB5                     CVRCON          equ	4021	;# 
  1071   000FB6                     ECCP1AS         equ	4022	;# 
  1072   000FB7                     PWM1CON         equ	4023	;# 
  1073   000FB8                     BAUDCON         equ	4024	;# 
  1074   000FB8                     BAUDCTL         equ	4024	;# 
  1075   000FB9                     PSTRCON         equ	4025	;# 
  1076   000FBA                     CCP2CON         equ	4026	;# 
  1077   000FBB                     CCPR2           equ	4027	;# 
  1078   000FBB                     CCPR2L          equ	4027	;# 
  1079   000FBC                     CCPR2H          equ	4028	;# 
  1080   000FBD                     CCP1CON         equ	4029	;# 
  1081   000FBE                     CCPR1           equ	4030	;# 
  1082   000FBE                     CCPR1L          equ	4030	;# 
  1083   000FBF                     CCPR1H          equ	4031	;# 
  1084   000FC0                     ADCON2          equ	4032	;# 
  1085   000FC1                     ADCON1          equ	4033	;# 
  1086   000FC2                     ADCON0          equ	4034	;# 
  1087   000FC3                     ADRES           equ	4035	;# 
  1088   000FC3                     ADRESL          equ	4035	;# 
  1089   000FC4                     ADRESH          equ	4036	;# 
  1090   000FC5                     SSPCON2         equ	4037	;# 
  1091   000FC6                     SSPCON1         equ	4038	;# 
  1092   000FC7                     SSPSTAT         equ	4039	;# 
  1093   000FC8                     SSPADD          equ	4040	;# 
  1094   000FC9                     SSPBUF          equ	4041	;# 
  1095   000FCA                     T2CON           equ	4042	;# 
  1096   000FCB                     PR2             equ	4043	;# 
  1097   000FCB                     MEMCON          equ	4043	;# 
  1098   000FCC                     TMR2            equ	4044	;# 
  1099   000FCD                     T1CON           equ	4045	;# 
  1100   000FCE                     TMR1            equ	4046	;# 
  1101   000FCE                     TMR1L           equ	4046	;# 
  1102   000FCF                     TMR1H           equ	4047	;# 
  1103   000FD0                     RCON            equ	4048	;# 
  1104   000FD1                     WDTCON          equ	4049	;# 
  1105   000FD2                     HLVDCON         equ	4050	;# 
  1106   000FD2                     LVDCON          equ	4050	;# 
  1107   000FD3                     OSCCON          equ	4051	;# 
  1108   000FD5                     T0CON           equ	4053	;# 
  1109   000FD6                     TMR0            equ	4054	;# 
  1110   000FD6                     TMR0L           equ	4054	;# 
  1111   000FD7                     TMR0H           equ	4055	;# 
  1112   000FD8                     STATUS          equ	4056	;# 
  1113   000FD9                     FSR2            equ	4057	;# 
  1114   000FD9                     FSR2L           equ	4057	;# 
  1115   000FDA                     FSR2H           equ	4058	;# 
  1116   000FDB                     PLUSW2          equ	4059	;# 
  1117   000FDC                     PREINC2         equ	4060	;# 
  1118   000FDD                     POSTDEC2        equ	4061	;# 
  1119   000FDE                     POSTINC2        equ	4062	;# 
  1120   000FDF                     INDF2           equ	4063	;# 
  1121   000FE0                     BSR             equ	4064	;# 
  1122   000FE1                     FSR1            equ	4065	;# 
  1123   000FE1                     FSR1L           equ	4065	;# 
  1124   000FE2                     FSR1H           equ	4066	;# 
  1125   000FE3                     PLUSW1          equ	4067	;# 
  1126   000FE4                     PREINC1         equ	4068	;# 
  1127   000FE5                     POSTDEC1        equ	4069	;# 
  1128   000FE6                     POSTINC1        equ	4070	;# 
  1129   000FE7                     INDF1           equ	4071	;# 
  1130   000FE8                     WREG            equ	4072	;# 
  1131   000FE9                     FSR0            equ	4073	;# 
  1132   000FE9                     FSR0L           equ	4073	;# 
  1133   000FEA                     FSR0H           equ	4074	;# 
  1134   000FEB                     PLUSW0          equ	4075	;# 
  1135   000FEC                     PREINC0         equ	4076	;# 
  1136   000FED                     POSTDEC0        equ	4077	;# 
  1137   000FEE                     POSTINC0        equ	4078	;# 
  1138   000FEF                     INDF0           equ	4079	;# 
  1139   000FF0                     INTCON3         equ	4080	;# 
  1140   000FF1                     INTCON2         equ	4081	;# 
  1141   000FF2                     INTCON          equ	4082	;# 
  1142   000FF3                     PROD            equ	4083	;# 
  1143   000FF3                     PRODL           equ	4083	;# 
  1144   000FF4                     PRODH           equ	4084	;# 
  1145   000FF5                     TABLAT          equ	4085	;# 
  1146   000FF6                     TBLPTR          equ	4086	;# 
  1147   000FF6                     TBLPTRL         equ	4086	;# 
  1148   000FF7                     TBLPTRH         equ	4087	;# 
  1149   000FF8                     TBLPTRU         equ	4088	;# 
  1150   000FF9                     PCLAT           equ	4089	;# 
  1151   000FF9                     PC              equ	4089	;# 
  1152   000FF9                     PCL             equ	4089	;# 
  1153   000FFA                     PCLATH          equ	4090	;# 
  1154   000FFB                     PCLATU          equ	4091	;# 
  1155   000FFC                     STKPTR          equ	4092	;# 
  1156   000FFD                     TOS             equ	4093	;# 
  1157   000FFD                     TOSL            equ	4093	;# 
  1158   000FFE                     TOSH            equ	4094	;# 
  1159   000FFF                     TOSU            equ	4095	;# 
  1160   000F77                     SSPMSK          equ	3959	;# 
  1161   000F78                     SLRCON          equ	3960	;# 
  1162   000F79                     CM2CON1         equ	3961	;# 
  1163   000F7A                     CM2CON0         equ	3962	;# 
  1164   000F7B                     CM1CON0         equ	3963	;# 
  1165   000F7C                     WPUB            equ	3964	;# 
  1166   000F7D                     IOCB            equ	3965	;# 
  1167   000F7E                     ANSEL           equ	3966	;# 
  1168   000F7F                     ANSELH          equ	3967	;# 
  1169   000F80                     PORTA           equ	3968	;# 
  1170   000F81                     PORTB           equ	3969	;# 
  1171   000F82                     PORTC           equ	3970	;# 
  1172   000F83                     PORTD           equ	3971	;# 
  1173   000F84                     PORTE           equ	3972	;# 
  1174   000F89                     LATA            equ	3977	;# 
  1175   000F8A                     LATB            equ	3978	;# 
  1176   000F8B                     LATC            equ	3979	;# 
  1177   000F8C                     LATD            equ	3980	;# 
  1178   000F8D                     LATE            equ	3981	;# 
  1179   000F92                     TRISA           equ	3986	;# 
  1180   000F92                     DDRA            equ	3986	;# 
  1181   000F93                     TRISB           equ	3987	;# 
  1182   000F93                     DDRB            equ	3987	;# 
  1183   000F94                     TRISC           equ	3988	;# 
  1184   000F94                     DDRC            equ	3988	;# 
  1185   000F95                     TRISD           equ	3989	;# 
  1186   000F95                     DDRD            equ	3989	;# 
  1187   000F96                     TRISE           equ	3990	;# 
  1188   000F96                     DDRE            equ	3990	;# 
  1189   000F9B                     OSCTUNE         equ	3995	;# 
  1190   000F9D                     PIE1            equ	3997	;# 
  1191   000F9E                     PIR1            equ	3998	;# 
  1192   000F9F                     IPR1            equ	3999	;# 
  1193   000FA0                     PIE2            equ	4000	;# 
  1194   000FA1                     PIR2            equ	4001	;# 
  1195   000FA2                     IPR2            equ	4002	;# 
  1196   000FA6                     EECON1          equ	4006	;# 
  1197   000FA7                     EECON2          equ	4007	;# 
  1198   000FA8                     EEDATA          equ	4008	;# 
  1199   000FA9                     EEADR           equ	4009	;# 
  1200   000FAA                     EEADRH          equ	4010	;# 
  1201   000FAB                     RCSTA           equ	4011	;# 
  1202   000FAB                     RCSTA1          equ	4011	;# 
  1203   000FAC                     TXSTA           equ	4012	;# 
  1204   000FAC                     TXSTA1          equ	4012	;# 
  1205   000FAD                     TXREG           equ	4013	;# 
  1206   000FAD                     TXREG1          equ	4013	;# 
  1207   000FAE                     RCREG           equ	4014	;# 
  1208   000FAE                     RCREG1          equ	4014	;# 
  1209   000FAF                     SPBRG           equ	4015	;# 
  1210   000FAF                     SPBRG1          equ	4015	;# 
  1211   000FB0                     SPBRGH          equ	4016	;# 
  1212   000FB1                     T3CON           equ	4017	;# 
  1213   000FB2                     TMR3            equ	4018	;# 
  1214   000FB2                     TMR3L           equ	4018	;# 
  1215   000FB3                     TMR3H           equ	4019	;# 
  1216   000FB4                     CVRCON2         equ	4020	;# 
  1217   000FB5                     CVRCON          equ	4021	;# 
  1218   000FB6                     ECCP1AS         equ	4022	;# 
  1219   000FB7                     PWM1CON         equ	4023	;# 
  1220   000FB8                     BAUDCON         equ	4024	;# 
  1221   000FB8                     BAUDCTL         equ	4024	;# 
  1222   000FB9                     PSTRCON         equ	4025	;# 
  1223   000FBA                     CCP2CON         equ	4026	;# 
  1224   000FBB                     CCPR2           equ	4027	;# 
  1225   000FBB                     CCPR2L          equ	4027	;# 
  1226   000FBC                     CCPR2H          equ	4028	;# 
  1227   000FBD                     CCP1CON         equ	4029	;# 
  1228   000FBE                     CCPR1           equ	4030	;# 
  1229   000FBE                     CCPR1L          equ	4030	;# 
  1230   000FBF                     CCPR1H          equ	4031	;# 
  1231   000FC0                     ADCON2          equ	4032	;# 
  1232   000FC1                     ADCON1          equ	4033	;# 
  1233   000FC2                     ADCON0          equ	4034	;# 
  1234   000FC3                     ADRES           equ	4035	;# 
  1235   000FC3                     ADRESL          equ	4035	;# 
  1236   000FC4                     ADRESH          equ	4036	;# 
  1237   000FC5                     SSPCON2         equ	4037	;# 
  1238   000FC6                     SSPCON1         equ	4038	;# 
  1239   000FC7                     SSPSTAT         equ	4039	;# 
  1240   000FC8                     SSPADD          equ	4040	;# 
  1241   000FC9                     SSPBUF          equ	4041	;# 
  1242   000FCA                     T2CON           equ	4042	;# 
  1243   000FCB                     PR2             equ	4043	;# 
  1244   000FCB                     MEMCON          equ	4043	;# 
  1245   000FCC                     TMR2            equ	4044	;# 
  1246   000FCD                     T1CON           equ	4045	;# 
  1247   000FCE                     TMR1            equ	4046	;# 
  1248   000FCE                     TMR1L           equ	4046	;# 
  1249   000FCF                     TMR1H           equ	4047	;# 
  1250   000FD0                     RCON            equ	4048	;# 
  1251   000FD1                     WDTCON          equ	4049	;# 
  1252   000FD2                     HLVDCON         equ	4050	;# 
  1253   000FD2                     LVDCON          equ	4050	;# 
  1254   000FD3                     OSCCON          equ	4051	;# 
  1255   000FD5                     T0CON           equ	4053	;# 
  1256   000FD6                     TMR0            equ	4054	;# 
  1257   000FD6                     TMR0L           equ	4054	;# 
  1258   000FD7                     TMR0H           equ	4055	;# 
  1259   000FD8                     STATUS          equ	4056	;# 
  1260   000FD9                     FSR2            equ	4057	;# 
  1261   000FD9                     FSR2L           equ	4057	;# 
  1262   000FDA                     FSR2H           equ	4058	;# 
  1263   000FDB                     PLUSW2          equ	4059	;# 
  1264   000FDC                     PREINC2         equ	4060	;# 
  1265   000FDD                     POSTDEC2        equ	4061	;# 
  1266   000FDE                     POSTINC2        equ	4062	;# 
  1267   000FDF                     INDF2           equ	4063	;# 
  1268   000FE0                     BSR             equ	4064	;# 
  1269   000FE1                     FSR1            equ	4065	;# 
  1270   000FE1                     FSR1L           equ	4065	;# 
  1271   000FE2                     FSR1H           equ	4066	;# 
  1272   000FE3                     PLUSW1          equ	4067	;# 
  1273   000FE4                     PREINC1         equ	4068	;# 
  1274   000FE5                     POSTDEC1        equ	4069	;# 
  1275   000FE6                     POSTINC1        equ	4070	;# 
  1276   000FE7                     INDF1           equ	4071	;# 
  1277   000FE8                     WREG            equ	4072	;# 
  1278   000FE9                     FSR0            equ	4073	;# 
  1279   000FE9                     FSR0L           equ	4073	;# 
  1280   000FEA                     FSR0H           equ	4074	;# 
  1281   000FEB                     PLUSW0          equ	4075	;# 
  1282   000FEC                     PREINC0         equ	4076	;# 
  1283   000FED                     POSTDEC0        equ	4077	;# 
  1284   000FEE                     POSTINC0        equ	4078	;# 
  1285   000FEF                     INDF0           equ	4079	;# 
  1286   000FF0                     INTCON3         equ	4080	;# 
  1287   000FF1                     INTCON2         equ	4081	;# 
  1288   000FF2                     INTCON          equ	4082	;# 
  1289   000FF3                     PROD            equ	4083	;# 
  1290   000FF3                     PRODL           equ	4083	;# 
  1291   000FF4                     PRODH           equ	4084	;# 
  1292   000FF5                     TABLAT          equ	4085	;# 
  1293   000FF6                     TBLPTR          equ	4086	;# 
  1294   000FF6                     TBLPTRL         equ	4086	;# 
  1295   000FF7                     TBLPTRH         equ	4087	;# 
  1296   000FF8                     TBLPTRU         equ	4088	;# 
  1297   000FF9                     PCLAT           equ	4089	;# 
  1298   000FF9                     PC              equ	4089	;# 
  1299   000FF9                     PCL             equ	4089	;# 
  1300   000FFA                     PCLATH          equ	4090	;# 
  1301   000FFB                     PCLATU          equ	4091	;# 
  1302   000FFC                     STKPTR          equ	4092	;# 
  1303   000FFD                     TOS             equ	4093	;# 
  1304   000FFD                     TOSL            equ	4093	;# 
  1305   000FFE                     TOSH            equ	4094	;# 
  1306   000FFF                     TOSU            equ	4095	;# 
  1307                           
  1308                           	psect	smallconst
  1309   001000                     __psmallconst:
  1310                           	callstack 0
  1311   001000  00                 	db	0
  1312   001001                     _default_security_key:
  1313                           	callstack 0
  1314   001001  00                 	db	0
  1315   001002  10                 	db	16
  1316   001003  25                 	db	37
  1317   001004  37                 	db	55
  1318   001005  04                 	db	4
  1319   001006  55                 	db	85
  1320   001007  06                 	db	6
  1321   001008  79                 	db	121
  1322   001009  08                 	db	8
  1323   00100A  09                 	db	9
  1324   00100B  10                 	db	16
  1325   00100C  11                 	db	17
  1326   00100D  12                 	db	18
  1327   00100E  13                 	db	19
  1328   00100F  14                 	db	20
  1329   001010  15                 	db	21
  1330   001011                     __end_of_default_security_key:
  1331                           	callstack 0
  1332   001011                     _default_mac_address:
  1333                           	callstack 0
  1334   001011  11                 	db	17
  1335   001012  28                 	db	40
  1336   001013  35                 	db	53
  1337   001014  44                 	db	68
  1338   001015  56                 	db	86
  1339   001016  66                 	db	102
  1340   001017  77                 	db	119
  1341   001018  01                 	db	1
  1342   001019                     __end_of_default_mac_address:
  1343                           	callstack 0
  1344   007CF0                     _TMR1IF         set	31984
  1345   007E68                     _TMR1ON         set	32360
  1346   007E69                     _TMR1CS         set	32361
  1347   007E6B                     _T1OSCEN        set	32363
  1348   007E6A                     _T1SYNC         set	32362
  1349   007E6D                     _T1CKPS1        set	32365
  1350   007E6C                     _T1CKPS0        set	32364
  1351   007E6F                     _T1RD16         set	32367
  1352   007F8F                     _RBPU           set	32655
  1353   007CED                     _RCIE           set	31981
  1354   007CEE                     _ADIE           set	31982
  1355   007D03                     _BCLIE          set	32003
  1356   007CEB                     _SSPIE          set	31979
  1357   007D04                     _EEIE           set	32004
  1358   007D00                     _CCP2IE         set	32000
  1359   007CEA                     _CCP1IE         set	31978
  1360   007CE9                     _TMR2IE         set	31977
  1361   007CE8                     _TMR1IE         set	31976
  1362   007F95                     _T0IE           set	32661
  1363   007F93                     _RBIE           set	32659
  1364   007F94                     _INT0E          set	32660
  1365   007F96                     _PEIE           set	32662
  1366   007F97                     _GIE            set	32663
  1367   007E87                     _IPEN           set	32391
  1368   000FCF                     _TMR1H          set	4047
  1369   000FCE                     _TMR1L          set	4046
  1370   000F9B                     _OSCTUNE        set	3995
  1371   000FD3                     _OSCCON         set	4051
  1372   000F95                     _TRISDbits      set	3989
  1373   000F96                     _TRISEbits      set	3990
  1374   000F93                     _TRISBbits      set	3987
  1375   000F84                     _PORTE          set	3972
  1376   000F83                     _PORTD          set	3971
  1377   000F82                     _PORTC          set	3970
  1378   000F81                     _PORTB          set	3969
  1379   000F80                     _PORTA          set	3968
  1380   000F82                     _PORTCbits      set	3970
  1381   000F8D                     _LATEbits       set	3981
  1382   000FC9                     _SSPBUF         set	4041
  1383   000F9E                     _PIR1bits       set	3998
  1384   000FC6                     _SSPCON1bits    set	4038
  1385   000FC6                     _SSPCON1        set	4038
  1386   000FC7                     _SSPSTATbits    set	4039
  1387   000F94                     _TRISCbits      set	3988
  1388   000F81                     _PORTBbits      set	3969
  1389   000F8C                     _LATDbits       set	3980
  1390   000F8B                     _LATCbits       set	3979
  1391   001019                     STR_5:
  1392   001019  4C                 	db	76	;'L'
  1393   00101A  65                 	db	101	;'e'
  1394   00101B  64                 	db	100	;'d'
  1395   00101C  20                 	db	32
  1396   00101D  65                 	db	101	;'e'
  1397   00101E  6E                 	db	110	;'n'
  1398   00101F  63                 	db	99	;'c'
  1399   001020  65                 	db	101	;'e'
  1400   001021  6E                 	db	110	;'n'
  1401   001022  64                 	db	100	;'d'
  1402   001023  69                 	db	105	;'i'
  1403   001024  64                 	db	100	;'d'
  1404   001025  6F                 	db	111	;'o'
  1405   001026  00                 	db	0
  1406   001027                     STR_8:
  1407   001027  4C                 	db	76	;'L'
  1408   001028  65                 	db	101	;'e'
  1409   001029  64                 	db	100	;'d'
  1410   00102A  20                 	db	32
  1411   00102B  61                 	db	97	;'a'
  1412   00102C  70                 	db	112	;'p'
  1413   00102D  61                 	db	97	;'a'
  1414   00102E  67                 	db	103	;'g'
  1415   00102F  61                 	db	97	;'a'
  1416   001030  64                 	db	100	;'d'
  1417   001031  6F                 	db	111	;'o'
  1418   001032  00                 	db	0
  1419   001033                     STR_15:
  1420   001033  43                 	db	67	;'C'
  1421   001034  6D                 	db	109	;'m'
  1422   001035  64                 	db	100	;'d'
  1423   001036  20                 	db	32
  1424   001037  65                 	db	101	;'e'
  1425   001038  72                 	db	114	;'r'
  1426   001039  72                 	db	114	;'r'
  1427   00103A  6F                 	db	111	;'o'
  1428   00103B  72                 	db	114	;'r'
  1429   00103C  2E                 	db	46
  1430   00103D  00                 	db	0
  1431   00103E                     STR_6:
  1432   00103E  43                 	db	67	;'C'
  1433   00103F  4D                 	db	77	;'M'
  1434   001040  44                 	db	68	;'D'
  1435   001041  3A                 	db	58	;':'
  1436   001042  41                 	db	65	;'A'
  1437   001043  4C                 	db	76	;'L'
  1438   001044  41                 	db	65	;'A'
  1439   001045  00                 	db	0
  1440   001046                     STR_3:
  1441   001046  43                 	db	67	;'C'
  1442   001047  4D                 	db	77	;'M'
  1443   001048  44                 	db	68	;'D'
  1444   001049  3A                 	db	58	;':'
  1445   00104A  50                 	db	80	;'P'
  1446   00104B  4C                 	db	76	;'L'
  1447   00104C  41                 	db	65	;'A'
  1448   00104D  00                 	db	0
  1449   00104E                     STR_12:
  1450   00104E  43                 	db	67	;'C'
  1451   00104F  4D                 	db	77	;'M'
  1452   001050  44                 	db	68	;'D'
  1453   001051  3A                 	db	58	;':'
  1454   001052  41                 	db	65	;'A'
  1455   001053  4C                 	db	76	;'L'
  1456   001054  52                 	db	82	;'R'
  1457   001055  00                 	db	0
  1458   001056                     STR_9:
  1459   001056  43                 	db	67	;'C'
  1460   001057  4D                 	db	77	;'M'
  1461   001058  44                 	db	68	;'D'
  1462   001059  3A                 	db	58	;':'
  1463   00105A  50                 	db	80	;'P'
  1464   00105B  4C                 	db	76	;'L'
  1465   00105C  52                 	db	82	;'R'
  1466   00105D  00                 	db	0
  1467   00105E                     STR_2:
  1468   00105E  43                 	db	67	;'C'
  1469   00105F  4D                 	db	77	;'M'
  1470   001060  44                 	db	68	;'D'
  1471   001061  3A                 	db	58	;':'
  1472   001062  41                 	db	65	;'A'
  1473   001063  4C                 	db	76	;'L'
  1474   001064  56                 	db	86	;'V'
  1475   001065  00                 	db	0
  1476   001066                     STR_1:
  1477   001066  43                 	db	67	;'C'
  1478   001067  4D                 	db	77	;'M'
  1479   001068  44                 	db	68	;'D'
  1480   001069  3A                 	db	58	;':'
  1481   00106A  50                 	db	80	;'P'
  1482   00106B  4C                 	db	76	;'L'
  1483   00106C  56                 	db	86	;'V'
  1484   00106D  00                 	db	0
  1485   001019                     STR_11          equ	STR_5
  1486   001027                     STR_14          equ	STR_8
  1487   001056                     STR_10          equ	STR_9
  1488   00104E                     STR_13          equ	STR_12
  1489   001046                     STR_4           equ	STR_3
  1490   00103E                     STR_7           equ	STR_6
  1491   00106E  00                 	db	0	; dummy byte at the end
  1492   000002                     __activetblptr  equ	2
  1493                           
  1494                           ; #config settings
  1495                           
  1496                           	psect	cinit
  1497   001BC4                     __pcinit:
  1498                           	callstack 0
  1499   001BC4                     start_initialization:
  1500                           	callstack 0
  1501   001BC4                     __initialization:
  1502                           	callstack 0
  1503                           
  1504                           ; Clear objects allocated to BANK0 (90 bytes)
  1505   001BC4  EE00  F060         	lfsr	0,__pbssBANK0
  1506   001BC8  0E5A               	movlw	90
  1507   001BCA                     clear_0:
  1508   001BCA  6AEE               	clrf	postinc0,c
  1509   001BCC  06E8               	decf	wreg,f,c
  1510   001BCE  E1FD               	bnz	clear_0
  1511                           
  1512                           ; Clear objects allocated to COMRAM (26 bytes)
  1513   001BD0  EE00  F031         	lfsr	0,__pbssCOMRAM
  1514   001BD4  0E1A               	movlw	26
  1515   001BD6                     clear_1:
  1516   001BD6  6AEE               	clrf	postinc0,c
  1517   001BD8  06E8               	decf	wreg,f,c
  1518   001BDA  E1FD               	bnz	clear_1
  1519   001BDC                     end_of_initialization:
  1520                           	callstack 0
  1521   001BDC                     __end_of__initialization:
  1522                           	callstack 0
  1523   001BDC  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1524   001BDE  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1525   001BE0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1526   001BE2  6EF8               	movwf	tblptru,c
  1527   001BE4  0100               	movlb	0
  1528   001BE6  EF38  F008         	goto	_main	;jump to C main() function
  1529                           
  1530                           	psect	bssCOMRAM
  1531   000031                     __pbssCOMRAM:
  1532                           	callstack 0
  1533   000031                     _mrf24_data_out_s:
  1534                           	callstack 0
  1535   000031                     	ds	6
  1536   000037                     _timeStamp:
  1537                           	callstack 0
  1538   000037                     	ds	4
  1539   00003B                     _estadoActual:
  1540                           	callstack 0
  1541   00003B                     	ds	1
  1542   00003C                     _long_mac_address_e:
  1543                           	callstack 0
  1544   00003C                     	ds	1
  1545   00003D                     	ds	14
  1546                           
  1547                           	psect	bssBANK0
  1548   000060                     __pbssBANK0:
  1549                           	callstack 0
  1550   000060                     _mrf24_data_config_s:
  1551                           	callstack 0
  1552   000060                     	ds	34
  1553   000082                     _mrf24_data_in_s:
  1554                           	callstack 0
  1555   000082                     	ds	56
  1556                           
  1557                           	psect	cstackCOMRAM
  1558   000001                     __pcstackCOMRAM:
  1559                           	callstack 0
  1560   000001                     ?_strlen:
  1561                           	callstack 0
  1562   000001                     SetCSPin@estado:
  1563                           	callstack 0
  1564   000001                     SetWakePin@estado:
  1565                           	callstack 0
  1566   000001                     SetResetPin@estado:
  1567                           	callstack 0
  1568   000001                     SPIWriteByte@dato:
  1569                           	callstack 0
  1570   000001                     DelayInit@delay:
  1571                           	callstack 0
  1572   000001                     DelayReset@delay:
  1573                           	callstack 0
  1574   000001                     DelayIsRunning@delay:
  1575                           	callstack 0
  1576   000001                     strlen@s:
  1577                           	callstack 0
  1578   000001                     MRF24SetDireccionDestino@direccion:
  1579                           	callstack 0
  1580   000001                     MRF24SetPANIDDestino@panid:
  1581                           	callstack 0
  1582   000001                     ??_InicializoVariables:
  1583   000001                     
  1584                           ; 1 bytes @ 0x0
  1585   000001                     	ds	1
  1586   000002                     WriteByteSPIPort@dato:
  1587                           	callstack 0
  1588   000002                     DelayRead@delay:
  1589                           	callstack 0
  1590   000002                     InicializoVariables@i:
  1591                           	callstack 0
  1592   000002                     SPIWrite2Byte@dato:
  1593                           	callstack 0
  1594   000002                     DelayInit@duration:
  1595                           	callstack 0
  1596   000002                     
  1597                           ; 1 bytes @ 0x1
  1598   000002                     	ds	1
  1599   000003                     ?_strcmp:
  1600                           	callstack 0
  1601   000003                     SetShortAddr@valor:
  1602                           	callstack 0
  1603   000003                     GetShortAddr@leido_spi:
  1604                           	callstack 0
  1605   000003                     strcmp@l:
  1606                           	callstack 0
  1607   000003                     strlen@a:
  1608                           	callstack 0
  1609   000003                     ??_DelayRead:
  1610   000003                     
  1611                           ; 1 bytes @ 0x2
  1612   000003                     	ds	1
  1613   000004                     SetShortAddr@reg_address:
  1614                           	callstack 0
  1615   000004                     GetShortAddr@reg_address:
  1616                           	callstack 0
  1617   000004                     MRF24SetMensajeSalida@mensaje:
  1618                           	callstack 0
  1619   000004                     strcmp@r:
  1620                           	callstack 0
  1621   000004                     Write2ByteSPIPort@dato:
  1622                           	callstack 0
  1623   000004                     
  1624                           ; 1 bytes @ 0x3
  1625   000004                     	ds	1
  1626   000005                     SetDeviceMACAddress@i:
  1627                           	callstack 0
  1628   000005                     ??_strcmp:
  1629   000005                     
  1630                           ; 1 bytes @ 0x4
  1631   000005                     	ds	1
  1632   000006                     DebounceFSMInit@antirrebote_boton_n:
  1633                           	callstack 0
  1634   000006                     SetLongAddr@reg_address:
  1635                           	callstack 0
  1636   000006                     GetLongAddr@reg_address:
  1637                           	callstack 0
  1638   000006                     
  1639                           ; 1 bytes @ 0x5
  1640   000006                     	ds	1
  1641   000007                     
  1642                           ; 1 bytes @ 0x6
  1643   000007                     	ds	1
  1644   000008                     SetLongAddr@valor:
  1645                           	callstack 0
  1646   000008                     ??_GetLongAddr:
  1647                           
  1648                           ; 1 bytes @ 0x7
  1649   000008                     	ds	1
  1650   000009                     ??_SetLongAddr:
  1651                           
  1652                           ; 1 bytes @ 0x8
  1653   000009                     	ds	1
  1654   00000A                     GetLongAddr@respuesta:
  1655                           	callstack 0
  1656                           
  1657                           ; 1 bytes @ 0x9
  1658   00000A                     	ds	1
  1659   00000B                     ??_SetChannel:
  1660   00000B                     ??_MRF24TransmitirDato:
  1661   00000B                     ??_MRF24ReciboPaquete:
  1662                           
  1663                           ; 1 bytes @ 0xA
  1664   00000B                     	ds	4
  1665   00000F                     DebounceFSMUpdate@antirrebote_boton_n:
  1666                           	callstack 0
  1667   00000F                     ??_InicializoMRF24:
  1668                           
  1669                           ; 1 bytes @ 0xE
  1670   00000F                     	ds	1
  1671   000010                     InicializoMRF24@lectura:
  1672                           	callstack 0
  1673   000010                     MRF24TransmitirDato@i:
  1674                           	callstack 0
  1675   000010                     MRF24ReciboPaquete@largo_mensaje:
  1676                           	callstack 0
  1677   000010                     DebounceFSMUpdate@estado_pin:
  1678                           	callstack 0
  1679                           
  1680                           ; 1 bytes @ 0xF
  1681   000010                     	ds	1
  1682   000011                     MRF24TransmitirDato@pos_memoria:
  1683                           	callstack 0
  1684   000011                     MRF24ReciboPaquete@index:
  1685                           	callstack 0
  1686   000011                     InicializoMRF24@delay_time_out:
  1687                           	callstack 0
  1688   000011                     ??_DebounceFSMUpdate:
  1689                           
  1690                           ; 1 bytes @ 0x10
  1691   000011                     	ds	9
  1692   00001A                     ??_MRF24J40Init:
  1693                           
  1694                           ; 1 bytes @ 0x19
  1695   00001A                     	ds	1
  1696   00001B                     ??_main:
  1697                           
  1698                           ; 1 bytes @ 0x1A
  1699   00001B                     	ds	2
  1700   00001D                     main@delay_parpadeo:
  1701                           	callstack 0
  1702                           
  1703                           ; 9 bytes @ 0x1C
  1704   00001D                     	ds	9
  1705   000026                     main@boton1:
  1706                           	callstack 0
  1707                           
  1708                           ; 11 bytes @ 0x25
  1709   000026                     	ds	11
  1710                           
  1711 ;;
  1712 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1713 ;;
  1714 ;; *************** function _main *****************
  1715 ;; Defined at:
  1716 ;;		line 28 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;		None
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  boton1         11   37[COMRAM] struct .
  1721 ;;  delay_parpad    9   28[COMRAM] struct .
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;Total ram usage:       22 bytes
  1736 ;; Hardware stack levels required when called: 8
  1737 ;; This function calls:
  1738 ;;		_BoardInit
  1739 ;;		_DebounceFSMInit
  1740 ;;		_DebounceFSMUpdate
  1741 ;;		_DelayInit
  1742 ;;		_DelayRead
  1743 ;;		_MRF24GetMensajeEntrada
  1744 ;;		_MRF24IsNewMsg
  1745 ;;		_MRF24J40Init
  1746 ;;		_MRF24ReciboPaquete
  1747 ;;		_MRF24SetDireccionDestino
  1748 ;;		_MRF24SetMensajeSalida
  1749 ;;		_MRF24SetPANIDDestino
  1750 ;;		_MRF24TransmitirDato
  1751 ;;		_strcmp
  1752 ;; This function is called by:
  1753 ;;		Startup code after reset
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text0
  1758   001070                     __ptext0:
  1759                           	callstack 0
  1760   001070                     _main:
  1761                           	callstack 23
  1762   001070                     
  1763                           ;main.c: 30:     delayNoBloqueanteData delay_parpadeo;;main.c: 31:     debounceData_t bo
      +                          ton1;;main.c: 32:  DebounceFSMInit(&boton1);
  1764   001070  0E26               	movlw	low main@boton1
  1765   001072  6E06               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  1766   001074  EC9F  F00D         	call	_DebounceFSMInit	;wreg free
  1767   001078                     
  1768                           ;main.c: 33:     BoardInit();
  1769   001078  EC7D  F00C         	call	_BoardInit	;wreg free
  1770   00107C                     
  1771                           ;main.c: 34:     MRF24J40Init();
  1772   00107C  EC32  F00D         	call	_MRF24J40Init	;wreg free
  1773   001080                     
  1774                           ;main.c: 35:     DelayInit(&delay_parpadeo, 1000);
  1775   001080  0E1D               	movlw	low main@delay_parpadeo
  1776   001082  6E01               	movwf	DelayInit@delay^0,c
  1777   001084  0EE8               	movlw	232
  1778   001086  6E02               	movwf	DelayInit@duration^0,c
  1779   001088  0E03               	movlw	3
  1780   00108A  6E03               	movwf	(DelayInit@duration+1)^0,c
  1781   00108C  0E00               	movlw	0
  1782   00108E  6E04               	movwf	(DelayInit@duration+2)^0,c
  1783   001090  0E00               	movlw	0
  1784   001092  6E05               	movwf	(DelayInit@duration+3)^0,c
  1785   001094  ECCE  F00D         	call	_DelayInit	;wreg free
  1786   001098                     
  1787                           ;main.c: 36:     MRF24SetDireccionDestino(0x1111);
  1788   001098  0E11               	movlw	17
  1789   00109A  6E02               	movwf	(MRF24SetDireccionDestino@direccion+1)^0,c
  1790   00109C  0E11               	movlw	17
  1791   00109E  6E01               	movwf	MRF24SetDireccionDestino@direccion^0,c
  1792   0010A0  EC3A  F00E         	call	_MRF24SetDireccionDestino	;wreg free
  1793   0010A4                     
  1794                           ;main.c: 37:     MRF24SetPANIDDestino(0X1234);
  1795   0010A4  0E12               	movlw	18
  1796   0010A6  6E02               	movwf	(MRF24SetPANIDDestino@panid+1)^0,c
  1797   0010A8  0E34               	movlw	52
  1798   0010AA  6E01               	movwf	MRF24SetPANIDDestino@panid^0,c
  1799   0010AC  EC2B  F00E         	call	_MRF24SetPANIDDestino	;wreg free
  1800   0010B0                     l294:
  1801   0010B0  0004               	clrwdt		;# 
  1802                           
  1803                           ;main.c: 42:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  1804   0010B2  EF83  F008         	goto	l2184
  1805   0010B6                     l2172:
  1806                           
  1807                           ;main.c: 46:                 MRF24SetMensajeSalida("CMD:PLV");
  1808   0010B6  0E66               	movlw	low STR_1
  1809   0010B8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1810   0010BA  EC12  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1811   0010BE                     
  1812                           ;main.c: 47:                 if(MRF24TransmitirDato() == MSG_NO_RECIBIDO)
  1813   0010BE  EC00  F00A         	call	_MRF24TransmitirDato	;wreg free
  1814   0010C2  0A02               	xorlw	2
  1815   0010C4  A4D8               	btfss	status,2,c
  1816   0010C6  EF67  F008         	goto	u841
  1817   0010CA  EF69  F008         	goto	u840
  1818   0010CE                     u841:
  1819   0010CE  EFA5  F008         	goto	l2186
  1820   0010D2                     u840:
  1821   0010D2                     
  1822                           ;main.c: 48:                     LATEbits.LATE1 = !LATEbits.LATE1;
  1823   0010D2  A28D               	btfss	141,1,c	;volatile
  1824   0010D4  EF6E  F008         	goto	u851
  1825   0010D8  EF72  F008         	goto	u850
  1826   0010DC                     u851:
  1827   0010DC  6A1B               	clrf	??_main^0,c
  1828   0010DE  2A1B               	incf	??_main^0,f,c
  1829   0010E0  EF73  F008         	goto	u868
  1830   0010E4                     u850:
  1831   0010E4  6A1B               	clrf	??_main^0,c
  1832   0010E6                     u868:
  1833   0010E6  461B               	rlncf	??_main^0,f,c
  1834   0010E8  508D               	movf	141,w,c	;volatile
  1835   0010EA  181B               	xorwf	??_main^0,w,c
  1836   0010EC  0BFD               	andlw	-3
  1837   0010EE  181B               	xorwf	??_main^0,w,c
  1838   0010F0  6E8D               	movwf	141,c	;volatile
  1839   0010F2  EFA5  F008         	goto	l2186
  1840   0010F6                     l2178:
  1841                           
  1842                           ;main.c: 53:                 MRF24SetMensajeSalida("CMD:ALV");
  1843   0010F6  0E5E               	movlw	low STR_2
  1844   0010F8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1845   0010FA  EC12  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1846   0010FE                     
  1847                           ;main.c: 54:                 MRF24TransmitirDato();
  1848   0010FE  EC00  F00A         	call	_MRF24TransmitirDato	;wreg free
  1849                           
  1850                           ;main.c: 55:     break;
  1851   001102  EFA5  F008         	goto	l2186
  1852   001106                     l2184:
  1853   001106  0E26               	movlw	low main@boton1
  1854   001108  6E0F               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  1855   00110A  B482               	btfsc	130,2,c	;volatile
  1856   00110C  EF8A  F008         	goto	u871
  1857   001110  EF8D  F008         	goto	u870
  1858   001114                     u871:
  1859   001114  0E01               	movlw	1
  1860   001116  EF8E  F008         	goto	u876
  1861   00111A                     u870:
  1862   00111A  0E00               	movlw	0
  1863   00111C                     u876:
  1864   00111C  6E10               	movwf	DebounceFSMUpdate@estado_pin^0,c
  1865   00111E  ECA1  F00A         	call	_DebounceFSMUpdate	;wreg free
  1866   001122  6E1B               	movwf	??_main^0,c
  1867   001124  6A1C               	clrf	(??_main+1)^0,c
  1868                           
  1869                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1870                           ; Switch size 1, requested type "simple"
  1871                           ; Number of cases is 1, Range of values is 0 to 0
  1872                           ; switch strategies available:
  1873                           ; Name         Instructions Cycles
  1874                           ; simple_byte            4     3 (average)
  1875                           ;	Chosen strategy is simple_byte
  1876   001126  501C               	movf	(??_main+1)^0,w,c
  1877   001128  0A00               	xorlw	0	; case 0
  1878   00112A  B4D8               	btfsc	status,2,c
  1879   00112C  EF9A  F008         	goto	l2278
  1880   001130  EFA5  F008         	goto	l2186
  1881   001134                     l2278:
  1882                           
  1883                           ; Switch size 1, requested type "simple"
  1884                           ; Number of cases is 2, Range of values is 1 to 2
  1885                           ; switch strategies available:
  1886                           ; Name         Instructions Cycles
  1887                           ; simple_byte            7     4 (average)
  1888                           ;	Chosen strategy is simple_byte
  1889   001134  501B               	movf	??_main^0,w,c
  1890   001136  0A01               	xorlw	1	; case 1
  1891   001138  B4D8               	btfsc	status,2,c
  1892   00113A  EF5B  F008         	goto	l2172
  1893   00113E  0A03               	xorlw	3	; case 2
  1894   001140  B4D8               	btfsc	status,2,c
  1895   001142  EF7B  F008         	goto	l2178
  1896   001146  EFA5  F008         	goto	l2186
  1897   00114A                     l2186:
  1898                           
  1899                           ;main.c: 62:         if(MRF24IsNewMsg() == MSG_PRESENTE) {
  1900   00114A  EC85  F00D         	call	_MRF24IsNewMsg	;wreg free
  1901   00114E  0A03               	xorlw	3
  1902   001150  A4D8               	btfss	status,2,c
  1903   001152  EFAD  F008         	goto	u881
  1904   001156  EFAF  F008         	goto	u880
  1905   00115A                     u881:
  1906   00115A  EF13  F009         	goto	l2218
  1907   00115E                     u880:
  1908   00115E                     
  1909                           ;main.c: 64:             MRF24ReciboPaquete();
  1910   00115E  ECF7  F00B         	call	_MRF24ReciboPaquete	;wreg free
  1911   001162                     
  1912                           ;main.c: 66:    if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLA")) {
  1913   001162  ECB2  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1914   001166  6E03               	movwf	strcmp@l^0,c
  1915   001168  0E46               	movlw	low STR_3
  1916   00116A  6E04               	movwf	strcmp@r^0,c
  1917   00116C  EC4A  F00C         	call	_strcmp	;wreg free
  1918   001170  5003               	movf	?_strcmp^0,w,c
  1919   001172  1004               	iorwf	(?_strcmp+1)^0,w,c
  1920   001174  A4D8               	btfss	status,2,c
  1921   001176  EFBF  F008         	goto	u891
  1922   00117A  EFC1  F008         	goto	u890
  1923   00117E                     u891:
  1924   00117E  EFC8  F008         	goto	l2196
  1925   001182                     u890:
  1926   001182                     
  1927                           ;main.c: 68:     LATEbits.LATE1 = 0;
  1928   001182  928D               	bcf	141,1,c	;volatile
  1929   001184                     
  1930                           ;main.c: 69:                 MRF24SetMensajeSalida("Led encendido");
  1931   001184  0E19               	movlw	low STR_5
  1932   001186  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1933   001188  EC12  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1934                           
  1935                           ;main.c: 70:    } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALA")) {
  1936   00118C  EF11  F009         	goto	l2216
  1937   001190                     l2196:
  1938   001190  ECB2  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1939   001194  6E03               	movwf	strcmp@l^0,c
  1940   001196  0E3E               	movlw	low STR_6
  1941   001198  6E04               	movwf	strcmp@r^0,c
  1942   00119A  EC4A  F00C         	call	_strcmp	;wreg free
  1943   00119E  5003               	movf	?_strcmp^0,w,c
  1944   0011A0  1004               	iorwf	(?_strcmp+1)^0,w,c
  1945   0011A2  A4D8               	btfss	status,2,c
  1946   0011A4  EFD6  F008         	goto	u901
  1947   0011A8  EFD8  F008         	goto	u900
  1948   0011AC                     u901:
  1949   0011AC  EFDF  F008         	goto	l2202
  1950   0011B0                     u900:
  1951   0011B0                     
  1952                           ;main.c: 72:     LATEbits.LATE1 = 1;
  1953   0011B0  828D               	bsf	141,1,c	;volatile
  1954   0011B2                     
  1955                           ;main.c: 73:                 MRF24SetMensajeSalida("Led apagado");
  1956   0011B2  0E27               	movlw	low STR_8
  1957   0011B4  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1958   0011B6  EC12  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1959                           
  1960                           ;main.c: 74:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLR")) 
      +                          {
  1961   0011BA  EF11  F009         	goto	l2216
  1962   0011BE                     l2202:
  1963   0011BE  ECB2  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1964   0011C2  6E03               	movwf	strcmp@l^0,c
  1965   0011C4  0E56               	movlw	low STR_9
  1966   0011C6  6E04               	movwf	strcmp@r^0,c
  1967   0011C8  EC4A  F00C         	call	_strcmp	;wreg free
  1968   0011CC  5003               	movf	?_strcmp^0,w,c
  1969   0011CE  1004               	iorwf	(?_strcmp+1)^0,w,c
  1970   0011D0  A4D8               	btfss	status,2,c
  1971   0011D2  EFED  F008         	goto	u911
  1972   0011D6  EFEF  F008         	goto	u910
  1973   0011DA                     u911:
  1974   0011DA  EFF6  F008         	goto	l2208
  1975   0011DE                     u910:
  1976   0011DE                     
  1977                           ;main.c: 76:     LATEbits.LATE2 = 0;
  1978   0011DE  948D               	bcf	141,2,c	;volatile
  1979   0011E0                     
  1980                           ;main.c: 77:                 MRF24SetMensajeSalida("Led encendido");
  1981   0011E0  0E19               	movlw	low STR_5
  1982   0011E2  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1983   0011E4  EC12  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1984                           
  1985                           ;main.c: 78:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALR")) 
      +                          {
  1986   0011E8  EF11  F009         	goto	l2216
  1987   0011EC                     l2208:
  1988   0011EC  ECB2  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1989   0011F0  6E03               	movwf	strcmp@l^0,c
  1990   0011F2  0E4E               	movlw	low STR_12
  1991   0011F4  6E04               	movwf	strcmp@r^0,c
  1992   0011F6  EC4A  F00C         	call	_strcmp	;wreg free
  1993   0011FA  5003               	movf	?_strcmp^0,w,c
  1994   0011FC  1004               	iorwf	(?_strcmp+1)^0,w,c
  1995   0011FE  A4D8               	btfss	status,2,c
  1996   001200  EF04  F009         	goto	u921
  1997   001204  EF06  F009         	goto	u920
  1998   001208                     u921:
  1999   001208  EF0D  F009         	goto	l2214
  2000   00120C                     u920:
  2001   00120C                     
  2002                           ;main.c: 80:     LATEbits.LATE2 = 1;
  2003   00120C  848D               	bsf	141,2,c	;volatile
  2004   00120E                     
  2005                           ;main.c: 81:                 MRF24SetMensajeSalida("Led apagado");
  2006   00120E  0E27               	movlw	low STR_8
  2007   001210  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  2008   001212  EC12  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  2009                           
  2010                           ;main.c: 82:             } else {
  2011   001216  EF11  F009         	goto	l2216
  2012   00121A                     l2214:
  2013                           
  2014                           ;main.c: 84:                 MRF24SetMensajeSalida("Cmd error.");
  2015   00121A  0E33               	movlw	low STR_15
  2016   00121C  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  2017   00121E  EC12  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  2018   001222                     l2216:
  2019                           
  2020                           ;main.c: 86:             MRF24TransmitirDato();
  2021   001222  EC00  F00A         	call	_MRF24TransmitirDato	;wreg free
  2022   001226                     l2218:
  2023                           
  2024                           ;main.c: 89:         if(DelayRead(&delay_parpadeo)) {
  2025   001226  0E1D               	movlw	low main@delay_parpadeo
  2026   001228  6E02               	movwf	DelayRead@delay^0,c
  2027   00122A  ECA1  F00B         	call	_DelayRead	;wreg free
  2028   00122E  0900               	iorlw	0
  2029   001230  B4D8               	btfsc	status,2,c
  2030   001232  EF1D  F009         	goto	u931
  2031   001236  EF1F  F009         	goto	u930
  2032   00123A                     u931:
  2033   00123A  EF58  F008         	goto	l294
  2034   00123E                     u930:
  2035   00123E                     
  2036                           ;main.c: 90:             LATEbits.LATE0 = !LATEbits.LATE0;
  2037   00123E  A08D               	btfss	141,0,c	;volatile
  2038   001240  EF24  F009         	goto	u941
  2039   001244  EF28  F009         	goto	u940
  2040   001248                     u941:
  2041   001248  6A1B               	clrf	??_main^0,c
  2042   00124A  2A1B               	incf	??_main^0,f,c
  2043   00124C  EF29  F009         	goto	u958
  2044   001250                     u940:
  2045   001250  6A1B               	clrf	??_main^0,c
  2046   001252                     u958:
  2047   001252  508D               	movf	141,w,c	;volatile
  2048   001254  181B               	xorwf	??_main^0,w,c
  2049   001256  0BFE               	andlw	-2
  2050   001258  181B               	xorwf	??_main^0,w,c
  2051   00125A  6E8D               	movwf	141,c	;volatile
  2052   00125C  EF58  F008         	goto	l294
  2053   001260  EF20  F000         	goto	start
  2054   001264                     __end_of_main:
  2055                           	callstack 0
  2056                           
  2057 ;; *************** function _strcmp *****************
  2058 ;; Defined at:
  2059 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  l               1    2[COMRAM] PTR const unsigned char 
  2062 ;;		 -> mrf24_data_in_s$buffer_entrada(50), mrf24_data_in_s(56), 
  2063 ;;  r               1    3[COMRAM] PTR const unsigned char 
  2064 ;;		 -> STR_13(8), STR_10(8), STR_7(8), STR_4(8), 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  2    2[COMRAM] int 
  2069 ;; Registers used:
  2070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;Total ram usage:        3 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 1
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text1
  2091   001894                     __ptext1:
  2092                           	callstack 0
  2093   001894                     _strcmp:
  2094                           	callstack 29
  2095   001894  EF4E  F00C         	goto	l2152
  2096   001898                     l2150:
  2097   001898  2A03               	incf	strcmp@l^0,f,c
  2098   00189A  2A04               	incf	strcmp@r^0,f,c
  2099   00189C                     l2152:
  2100   00189C  5003               	movf	strcmp@l^0,w,c
  2101   00189E  6ED9               	movwf	fsr2l,c
  2102   0018A0  6ADA               	clrf	fsr2h,c
  2103   0018A2  50DF               	movf	indf2,w,c
  2104   0018A4  6E05               	movwf	??_strcmp^0,c
  2105   0018A6  C004  FFF6         	movff	strcmp@r,tblptrl
  2106   0018AA                     	if	1	;There is more than 1 active tblptr byte
  2107   0018AA  0E10               	movlw	high __smallconst
  2108   0018AC  6EF7               	movwf	tblptrh,c
  2109   0018AE                     	endif
  2110   0018AE                     	if	0	;tblptru may be non-zero
  2111   0018AE                     	endif
  2112   0018AE                     	if	0	;tblptru may be non-zero
  2113   0018AE                     	endif
  2114   0018AE  0008               	tblrd		*
  2115   0018B0  50F5               	movf	tablat,w,c
  2116   0018B2  1805               	xorwf	??_strcmp^0,w,c
  2117   0018B4  A4D8               	btfss	status,2,c
  2118   0018B6  EF5F  F00C         	goto	u821
  2119   0018BA  EF61  F00C         	goto	u820
  2120   0018BE                     u821:
  2121   0018BE  EF6C  F00C         	goto	l2156
  2122   0018C2                     u820:
  2123   0018C2  5003               	movf	strcmp@l^0,w,c
  2124   0018C4  6ED9               	movwf	fsr2l,c
  2125   0018C6  6ADA               	clrf	fsr2h,c
  2126   0018C8  50DF               	movf	indf2,w,c
  2127   0018CA  A4D8               	btfss	status,2,c
  2128   0018CC  EF6A  F00C         	goto	u831
  2129   0018D0  EF6C  F00C         	goto	u830
  2130   0018D4                     u831:
  2131   0018D4  EF4C  F00C         	goto	l2150
  2132   0018D8                     u830:
  2133   0018D8                     l2156:
  2134   0018D8  5003               	movf	strcmp@l^0,w,c
  2135   0018DA  6ED9               	movwf	fsr2l,c
  2136   0018DC  6ADA               	clrf	fsr2h,c
  2137   0018DE  50DF               	movf	indf2,w,c
  2138   0018E0  6E05               	movwf	??_strcmp^0,c
  2139   0018E2  C004  FFF6         	movff	strcmp@r,tblptrl
  2140   0018E6                     	if	1	;There is more than 1 active tblptr byte
  2141   0018E6  0E10               	movlw	high __smallconst
  2142   0018E8  6EF7               	movwf	tblptrh,c
  2143   0018EA                     	endif
  2144   0018EA                     	if	0	;tblptru may be non-zero
  2145   0018EA                     	endif
  2146   0018EA                     	if	0	;tblptru may be non-zero
  2147   0018EA                     	endif
  2148   0018EA  0008               	tblrd		*
  2149   0018EC  50F5               	movf	tablat,w,c
  2150   0018EE  5C05               	subwf	??_strcmp^0,w,c
  2151   0018F0  6E03               	movwf	?_strcmp^0,c
  2152   0018F2  6A04               	clrf	(?_strcmp+1)^0,c
  2153   0018F4  A0D8               	btfss	status,0,c
  2154   0018F6  0604               	decf	(?_strcmp+1)^0,f,c
  2155   0018F8  0012               	return		;funcret
  2156   0018FA                     __end_of_strcmp:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _MRF24TransmitirDato *****************
  2160 ;; Defined at:
  2161 ;;		line 371 in file "drivers/scr/API_MRF24J40.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  i               1   15[COMRAM] char 
  2166 ;;  pos_memoria     1   16[COMRAM] unsigned char 
  2167 ;;  largo_cabece    1    0        unsigned char 
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      enum E3264
  2170 ;; Registers used:
  2171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;Total ram usage:        7 bytes
  2182 ;; Hardware stack levels used: 1
  2183 ;; Hardware stack levels required when called: 5
  2184 ;; This function calls:
  2185 ;;		_GetShortAddr
  2186 ;;		_SetLongAddr
  2187 ;;		_SetShortAddr
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text2
  2194   001400                     __ptext2:
  2195                           	callstack 0
  2196   001400                     _MRF24TransmitirDato:
  2197                           	callstack 25
  2198   001400                     
  2199                           ;drivers/scr/API_MRF24J40.c: 373:  if(estadoActual != INICIALIZACION_OK)
  2200   001400  503B               	movf	_estadoActual^0,w,c
  2201   001402  B4D8               	btfsc	status,2,c
  2202   001404  EF06  F00A         	goto	u711
  2203   001408  EF08  F00A         	goto	u710
  2204   00140C                     u711:
  2205   00140C  EF0B  F00A         	goto	l152
  2206   001410                     u710:
  2207   001410                     
  2208                           ;drivers/scr/API_MRF24J40.c: 374:   return OPERACION_NO_REALIZADA;
  2209   001410  0E07               	movlw	7
  2210   001412  EFA0  F00A         	goto	l153
  2211   001416                     l152:
  2212                           
  2213                           ;drivers/scr/API_MRF24J40.c: 375:  uint8_t pos_memoria = 0;
  2214   001416  6A11               	clrf	MRF24TransmitirDato@pos_memoria^0,c
  2215   001418                     
  2216                           ;drivers/scr/API_MRF24J40.c: 377:  SetLongAddr(pos_memoria++, largo_cabecera);
  2217   001418  0E00               	movlw	0
  2218   00141A  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2219   00141C  0E00               	movlw	0
  2220   00141E  6E06               	movwf	SetLongAddr@reg_address^0,c
  2221   001420  0E08               	movlw	8
  2222   001422  6E08               	movwf	SetLongAddr@valor^0,c
  2223   001424  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2224   001428  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2225   00142A                     
  2226                           ;drivers/scr/API_MRF24J40.c: 378:  SetLongAddr(pos_memoria++, mrf24_data_out_s.largo_men
      +                          saje + largo_cabecera);
  2227   00142A  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2228   00142E  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2229   001430  5035               	movf	(_mrf24_data_out_s+4)^0,w,c
  2230   001432  0F08               	addlw	8
  2231   001434  6E08               	movwf	SetLongAddr@valor^0,c
  2232   001436  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2233   00143A  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2234   00143C                     
  2235                           ;drivers/scr/API_MRF24J40.c: 379:  SetLongAddr(pos_memoria++, (0X01)|(0X20)|(0X40));
  2236   00143C  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2237   001440  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2238   001442  0E61               	movlw	97
  2239   001444  6E08               	movwf	SetLongAddr@valor^0,c
  2240   001446  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2241   00144A  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2242   00144C                     
  2243                           ;drivers/scr/API_MRF24J40.c: 380:  SetLongAddr(pos_memoria++, (0XC0)|(0X08));
  2244   00144C  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2245   001450  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2246   001452  0EC8               	movlw	200
  2247   001454  6E08               	movwf	SetLongAddr@valor^0,c
  2248   001456  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2249   00145A  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2250   00145C                     
  2251                           ;drivers/scr/API_MRF24J40.c: 381:  SetLongAddr(pos_memoria++, mrf24_data_config_s.sequen
      +                          ce_number++);
  2252   00145C  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2253   001460  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2254   001462  EE20  F062         	lfsr	2,_mrf24_data_config_s+2
  2255   001466  50DF               	movf	indf2,w,c
  2256   001468  2ADF               	incf	indf2,f,c
  2257   00146A  6E08               	movwf	SetLongAddr@valor^0,c
  2258   00146C  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2259   001470  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2260   001472                     
  2261                           ;drivers/scr/API_MRF24J40.c: 382:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out_s
      +                          .destinity_panid);
  2262   001472  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2263   001476  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2264   001478  C031  F008         	movff	_mrf24_data_out_s,SetLongAddr@valor
  2265   00147C  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2266   001480  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2267   001482                     
  2268                           ;drivers/scr/API_MRF24J40.c: 383:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out_
      +                          s.destinity_panid >> (0X08)));
  2269   001482  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2270   001486  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2271   001488  5032               	movf	(_mrf24_data_out_s+1)^0,w,c
  2272   00148A  6E08               	movwf	SetLongAddr@valor^0,c
  2273   00148C  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2274   001490  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2275   001492                     
  2276                           ;drivers/scr/API_MRF24J40.c: 384:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out_s
      +                          .destinity_address);
  2277   001492  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2278   001496  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2279   001498  C033  F008         	movff	_mrf24_data_out_s+2,SetLongAddr@valor
  2280   00149C  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2281   0014A0  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2282   0014A2                     
  2283                           ;drivers/scr/API_MRF24J40.c: 385:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out_
      +                          s.destinity_address >> (0X08)));
  2284   0014A2  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2285   0014A6  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2286   0014A8  5034               	movf	(_mrf24_data_out_s+3)^0,w,c
  2287   0014AA  6E08               	movwf	SetLongAddr@valor^0,c
  2288   0014AC  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2289   0014B0  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2290   0014B2                     
  2291                           ;drivers/scr/API_MRF24J40.c: 387:  for(int8_t i = 0; i < mrf24_data_out_s.largo_mensaje;
      +                           i++) {
  2292   0014B2  6A10               	clrf	MRF24TransmitirDato@i^0,c
  2293   0014B4  EF6D  F00A         	goto	l2044
  2294   0014B8                     l2038:
  2295                           
  2296                           ;drivers/scr/API_MRF24J40.c: 389:   SetLongAddr(pos_memoria++, mrf24_data_out_s.buffer_s
      +                          alida[i]);
  2297   0014B8  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2298   0014BC  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2299   0014BE  5036               	movf	(_mrf24_data_out_s+5)^0,w,c
  2300   0014C0  2410               	addwf	MRF24TransmitirDato@i^0,w,c
  2301   0014C2  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2302   0014C4  C00B  FFF6         	movff	??_MRF24TransmitirDato,tblptrl
  2303   0014C8                     	if	1	;There is more than 1 active tblptr byte
  2304   0014C8  0E10               	movlw	high __smallconst
  2305   0014CA  6EF7               	movwf	tblptrh,c
  2306   0014CC                     	endif
  2307   0014CC                     	if	0	;tblptru may be non-zero
  2308   0014CC                     	endif
  2309   0014CC                     	if	0	;tblptru may be non-zero
  2310   0014CC                     	endif
  2311   0014CC  0008               	tblrd		*
  2312   0014CE  CFF5 F008          	movff	tablat,SetLongAddr@valor
  2313   0014D2  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2314   0014D6  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2315   0014D8                     
  2316                           ;drivers/scr/API_MRF24J40.c: 390:  }
  2317   0014D8  2A10               	incf	MRF24TransmitirDato@i^0,f,c
  2318   0014DA                     l2044:
  2319   0014DA  5035               	movf	(_mrf24_data_out_s+4)^0,w,c
  2320   0014DC  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2321   0014DE  6A0C               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2322   0014E0  C010  F00D         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato+2
  2323   0014E4  6A0E               	clrf	(??_MRF24TransmitirDato+3)^0,c
  2324   0014E6  BE0D               	btfsc	(??_MRF24TransmitirDato+2)^0,7,c
  2325   0014E8  060E               	decf	(??_MRF24TransmitirDato+3)^0,f,c
  2326   0014EA  500B               	movf	??_MRF24TransmitirDato^0,w,c
  2327   0014EC  5C0D               	subwf	(??_MRF24TransmitirDato+2)^0,w,c
  2328   0014EE  500E               	movf	(??_MRF24TransmitirDato+3)^0,w,c
  2329   0014F0  0A80               	xorlw	128
  2330   0014F2  6E0F               	movwf	(??_MRF24TransmitirDato+4)^0,c
  2331   0014F4  500C               	movf	(??_MRF24TransmitirDato+1)^0,w,c
  2332   0014F6  0A80               	xorlw	128
  2333   0014F8  580F               	subwfb	(??_MRF24TransmitirDato+4)^0,w,c
  2334   0014FA  A0D8               	btfss	status,0,c
  2335   0014FC  EF82  F00A         	goto	u721
  2336   001500  EF84  F00A         	goto	u720
  2337   001504                     u721:
  2338   001504  EF5C  F00A         	goto	l2038
  2339   001508                     u720:
  2340   001508                     
  2341                           ;drivers/scr/API_MRF24J40.c: 391:  SetLongAddr(pos_memoria++, (0X00));
  2342   001508  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2343   00150C  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2344   00150E  0E00               	movlw	0
  2345   001510  6E08               	movwf	SetLongAddr@valor^0,c
  2346   001512  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2347   001516  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2348   001518                     
  2349                           ;drivers/scr/API_MRF24J40.c: 392:  SetShortAddr((0x1B), (0X04) | (0X01));
  2350   001518  0E05               	movlw	5
  2351   00151A  6E03               	movwf	SetShortAddr@valor^0,c
  2352   00151C  0E1B               	movlw	27
  2353   00151E  EC1B  F00E         	call	_SetShortAddr
  2354   001522                     
  2355                           ;drivers/scr/API_MRF24J40.c: 393:     if(GetShortAddr((0x24)) && (0X01))
  2356   001522  0E24               	movlw	36
  2357   001524  ECF5  F00D         	call	_GetShortAddr
  2358   001528  0900               	iorlw	0
  2359   00152A  B4D8               	btfsc	status,2,c
  2360   00152C  EF9A  F00A         	goto	u731
  2361   001530  EF9C  F00A         	goto	u730
  2362   001534                     u731:
  2363   001534  EF9F  F00A         	goto	l2058
  2364   001538                     u730:
  2365   001538                     
  2366                           ;drivers/scr/API_MRF24J40.c: 394:         return MSG_NO_RECIBIDO;
  2367   001538  0E02               	movlw	2
  2368   00153A  EFA0  F00A         	goto	l153
  2369   00153E                     l2058:
  2370                           
  2371                           ;drivers/scr/API_MRF24J40.c: 395:  return TRANSMISION_REALIZADA;
  2372   00153E  0E01               	movlw	1
  2373   001540                     l153:
  2374   001540  0012               	return		;funcret
  2375   001542                     __end_of_MRF24TransmitirDato:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function _MRF24SetPANIDDestino *****************
  2379 ;; Defined at:
  2380 ;;		line 358 in file "drivers/scr/API_MRF24J40.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  panid           2    0[COMRAM] unsigned short 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;		None
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      enum E3264
  2387 ;; Registers used:
  2388 ;;		wreg, status,2
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2398 ;;Total ram usage:        2 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 1
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_main
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text3
  2409   001C56                     __ptext3:
  2410                           	callstack 0
  2411   001C56                     _MRF24SetPANIDDestino:
  2412                           	callstack 29
  2413   001C56                     
  2414                           ;drivers/scr/API_MRF24J40.c: 360:  if(estadoActual != INICIALIZACION_OK)
  2415   001C56  503B               	movf	_estadoActual^0,w,c
  2416   001C58  B4D8               	btfsc	status,2,c
  2417   001C5A  EF31  F00E         	goto	u701
  2418   001C5E  EF33  F00E         	goto	u700
  2419   001C62                     u701:
  2420   001C62  EF35  F00E         	goto	l148
  2421   001C66                     u700:
  2422   001C66  EF39  F00E         	goto	l149
  2423   001C6A                     l148:
  2424                           
  2425                           ;drivers/scr/API_MRF24J40.c: 362:  mrf24_data_out_s.destinity_panid = panid;
  2426   001C6A  C001  F031         	movff	MRF24SetPANIDDestino@panid,_mrf24_data_out_s
  2427   001C6E  C002  F032         	movff	MRF24SetPANIDDestino@panid+1,_mrf24_data_out_s+1
  2428   001C72                     l149:
  2429   001C72  0012               	return		;funcret
  2430   001C74                     __end_of_MRF24SetPANIDDestino:
  2431                           	callstack 0
  2432                           
  2433 ;; *************** function _MRF24SetMensajeSalida *****************
  2434 ;; Defined at:
  2435 ;;		line 331 in file "drivers/scr/API_MRF24J40.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  2438 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2439 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;		None
  2442 ;; Return value:  Size  Location     Type
  2443 ;;                  1    wreg      enum E3264
  2444 ;; Registers used:
  2445 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2446 ;; Tracked objects:
  2447 ;;		On entry : 0/0
  2448 ;;		On exit  : 0/0
  2449 ;;		Unchanged: 0/0
  2450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2451 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2455 ;;Total ram usage:        1 bytes
  2456 ;; Hardware stack levels used: 1
  2457 ;; Hardware stack levels required when called: 2
  2458 ;; This function calls:
  2459 ;;		_strlen
  2460 ;; This function is called by:
  2461 ;;		_main
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text4
  2466   001A24                     __ptext4:
  2467                           	callstack 0
  2468   001A24                     _MRF24SetMensajeSalida:
  2469                           	callstack 28
  2470   001A24                     
  2471                           ;drivers/scr/API_MRF24J40.c: 333:  if(strlen(mensaje) == (0X00) || estadoActual != INICI
      +                          ALIZACION_OK)
  2472   001A24  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2473   001A28  EC6B  F00D         	call	_strlen	;wreg free
  2474   001A2C  5001               	movf	?_strlen^0,w,c
  2475   001A2E  1002               	iorwf	(?_strlen+1)^0,w,c
  2476   001A30  B4D8               	btfsc	status,2,c
  2477   001A32  EF1D  F00D         	goto	u671
  2478   001A36  EF1F  F00D         	goto	u670
  2479   001A3A                     u671:
  2480   001A3A  EF31  F00D         	goto	l141
  2481   001A3E                     u670:
  2482   001A3E  503B               	movf	_estadoActual^0,w,c
  2483   001A40  B4D8               	btfsc	status,2,c
  2484   001A42  EF25  F00D         	goto	u681
  2485   001A46  EF27  F00D         	goto	u680
  2486   001A4A                     u681:
  2487   001A4A  EF29  F00D         	goto	l1978
  2488   001A4E                     u680:
  2489   001A4E  EF31  F00D         	goto	l141
  2490   001A52                     l1978:
  2491                           
  2492                           ;drivers/scr/API_MRF24J40.c: 335:  mrf24_data_out_s.buffer_salida = mensaje;
  2493   001A52  C004  F036         	movff	MRF24SetMensajeSalida@mensaje,_mrf24_data_out_s+5
  2494   001A56                     
  2495                           ;drivers/scr/API_MRF24J40.c: 336:  mrf24_data_out_s.largo_mensaje = (uint8_t) strlen(men
      +                          saje);
  2496   001A56  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2497   001A5A  EC6B  F00D         	call	_strlen	;wreg free
  2498   001A5E  5001               	movf	?_strlen^0,w,c
  2499   001A60  6E35               	movwf	(_mrf24_data_out_s+4)^0,c
  2500   001A62                     l141:
  2501   001A62  0012               	return		;funcret
  2502   001A64                     __end_of_MRF24SetMensajeSalida:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _strlen *****************
  2506 ;; Defined at:
  2507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2510 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2511 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2514 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2515 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  2    0[COMRAM] unsigned int 
  2518 ;; Registers used:
  2519 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;Total ram usage:        3 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 1
  2532 ;; This function calls:
  2533 ;;		Nothing
  2534 ;; This function is called by:
  2535 ;;		_MRF24SetMensajeSalida
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text5
  2540   001AD6                     __ptext5:
  2541                           	callstack 0
  2542   001AD6                     _strlen:
  2543                           	callstack 28
  2544   001AD6  C001  F003         	movff	strlen@s,strlen@a
  2545   001ADA  EF70  F00D         	goto	l1948
  2546   001ADE                     l1946:
  2547   001ADE  2A01               	incf	strlen@s^0,f,c
  2548   001AE0                     l1948:
  2549   001AE0  C001  FFF6         	movff	strlen@s,tblptrl
  2550   001AE4                     	if	1	;There is more than 1 active tblptr byte
  2551   001AE4  0E10               	movlw	high __smallconst
  2552   001AE6  6EF7               	movwf	tblptrh,c
  2553   001AE8                     	endif
  2554   001AE8                     	if	0	;tblptru may be non-zero
  2555   001AE8                     	endif
  2556   001AE8                     	if	0	;tblptru may be non-zero
  2557   001AE8                     	endif
  2558   001AE8  0008               	tblrd		*
  2559   001AEA  50F5               	movf	tablat,w,c
  2560   001AEC  0900               	iorlw	0
  2561   001AEE  A4D8               	btfss	status,2,c
  2562   001AF0  EF7C  F00D         	goto	u661
  2563   001AF4  EF7E  F00D         	goto	u660
  2564   001AF8                     u661:
  2565   001AF8  EF6F  F00D         	goto	l1946
  2566   001AFC                     u660:
  2567   001AFC  5003               	movf	strlen@a^0,w,c
  2568   001AFE  5C01               	subwf	strlen@s^0,w,c
  2569   001B00  6E01               	movwf	?_strlen^0,c
  2570   001B02  6A02               	clrf	(?_strlen+1)^0,c
  2571   001B04  BE01               	btfsc	?_strlen^0,7,c
  2572   001B06  0602               	decf	(?_strlen+1)^0,f,c
  2573   001B08  0012               	return		;funcret
  2574   001B0A                     __end_of_strlen:
  2575                           	callstack 0
  2576                           
  2577 ;; *************** function _MRF24SetDireccionDestino *****************
  2578 ;; Defined at:
  2579 ;;		line 345 in file "drivers/scr/API_MRF24J40.c"
  2580 ;; Parameters:    Size  Location     Type
  2581 ;;  direccion       2    0[COMRAM] unsigned short 
  2582 ;; Auto vars:     Size  Location     Type
  2583 ;;		None
  2584 ;; Return value:  Size  Location     Type
  2585 ;;                  1    wreg      enum E3264
  2586 ;; Registers used:
  2587 ;;		wreg, status,2
  2588 ;; Tracked objects:
  2589 ;;		On entry : 0/0
  2590 ;;		On exit  : 0/0
  2591 ;;		Unchanged: 0/0
  2592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2593 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2597 ;;Total ram usage:        2 bytes
  2598 ;; Hardware stack levels used: 1
  2599 ;; Hardware stack levels required when called: 1
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text6
  2608   001C74                     __ptext6:
  2609                           	callstack 0
  2610   001C74                     _MRF24SetDireccionDestino:
  2611                           	callstack 29
  2612   001C74                     
  2613                           ;drivers/scr/API_MRF24J40.c: 347:  if(estadoActual != INICIALIZACION_OK)
  2614   001C74  503B               	movf	_estadoActual^0,w,c
  2615   001C76  B4D8               	btfsc	status,2,c
  2616   001C78  EF40  F00E         	goto	u691
  2617   001C7C  EF42  F00E         	goto	u690
  2618   001C80                     u691:
  2619   001C80  EF44  F00E         	goto	l144
  2620   001C84                     u690:
  2621   001C84  EF48  F00E         	goto	l145
  2622   001C88                     l144:
  2623                           
  2624                           ;drivers/scr/API_MRF24J40.c: 349:  mrf24_data_out_s.destinity_address = direccion;
  2625   001C88  C001  F033         	movff	MRF24SetDireccionDestino@direccion,_mrf24_data_out_s+2
  2626   001C8C  C002  F034         	movff	MRF24SetDireccionDestino@direccion+1,_mrf24_data_out_s+3
  2627   001C90                     l145:
  2628   001C90  0012               	return		;funcret
  2629   001C92                     __end_of_MRF24SetDireccionDestino:
  2630                           	callstack 0
  2631                           
  2632 ;; *************** function _MRF24ReciboPaquete *****************
  2633 ;; Defined at:
  2634 ;;		line 418 in file "drivers/scr/API_MRF24J40.c"
  2635 ;; Parameters:    Size  Location     Type
  2636 ;;		None
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  index           1   16[COMRAM] unsigned char 
  2639 ;;  largo_mensaj    1   15[COMRAM] unsigned char 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      enum E3264
  2642 ;; Registers used:
  2643 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;Total ram usage:        7 bytes
  2654 ;; Hardware stack levels used: 1
  2655 ;; Hardware stack levels required when called: 5
  2656 ;; This function calls:
  2657 ;;		_GetLongAddr
  2658 ;;		_GetShortAddr
  2659 ;;		_SetLongAddr
  2660 ;;		_SetShortAddr
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           	psect	text7
  2667   0017EE                     __ptext7:
  2668                           	callstack 0
  2669   0017EE                     _MRF24ReciboPaquete:
  2670                           	callstack 25
  2671   0017EE                     
  2672                           ;drivers/scr/API_MRF24J40.c: 420:  if(estadoActual != INICIALIZACION_OK)
  2673   0017EE  503B               	movf	_estadoActual^0,w,c
  2674   0017F0  B4D8               	btfsc	status,2,c
  2675   0017F2  EFFD  F00B         	goto	u741
  2676   0017F6  EFFF  F00B         	goto	u740
  2677   0017FA                     u741:
  2678   0017FA  EF01  F00C         	goto	l2066
  2679   0017FE                     u740:
  2680   0017FE  EF49  F00C         	goto	l166
  2681   001802                     l2066:
  2682                           
  2683                           ;drivers/scr/API_MRF24J40.c: 422:  uint8_t index;;drivers/scr/API_MRF24J40.c: 423:  uint
      +                          8_t largo_mensaje;;drivers/scr/API_MRF24J40.c: 424:  SetLongAddr((0x39), (0X04));
  2684   001802  0E00               	movlw	0
  2685   001804  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2686   001806  0E39               	movlw	57
  2687   001808  6E06               	movwf	SetLongAddr@reg_address^0,c
  2688   00180A  0E04               	movlw	4
  2689   00180C  6E08               	movwf	SetLongAddr@valor^0,c
  2690   00180E  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2691                           
  2692                           ;drivers/scr/API_MRF24J40.c: 425:  SetShortAddr((0x0D), (0X04));
  2693   001812  0E04               	movlw	4
  2694   001814  6E03               	movwf	SetShortAddr@valor^0,c
  2695   001816  0E0D               	movlw	13
  2696   001818  EC1B  F00E         	call	_SetShortAddr
  2697                           
  2698                           ;drivers/scr/API_MRF24J40.c: 426:  largo_mensaje = GetLongAddr((0x300));
  2699   00181C  0E03               	movlw	3
  2700   00181E  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2701   001820  0E00               	movlw	0
  2702   001822  6E06               	movwf	GetLongAddr@reg_address^0,c
  2703   001824  ECAE  F00C         	call	_GetLongAddr	;wreg free
  2704   001828  6E10               	movwf	MRF24ReciboPaquete@largo_mensaje^0,c
  2705   00182A                     
  2706                           ;drivers/scr/API_MRF24J40.c: 428:  for(index = 0; index < largo_mensaje - (0x04); index+
      +                          +) {
  2707   00182A  6A11               	clrf	MRF24ReciboPaquete@index^0,c
  2708   00182C  EF26  F00C         	goto	l2074
  2709   001830                     l2070:
  2710                           
  2711                           ;drivers/scr/API_MRF24J40.c: 430:   mrf24_data_in_s.buffer_entrada[index] = GetLongAddr(
      +                          (0x300) + (0X08) + index);
  2712   001830  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2713   001832  0F88               	addlw	low (_mrf24_data_in_s+6)
  2714   001834  6ED9               	movwf	fsr2l,c
  2715   001836  6ADA               	clrf	fsr2h,c
  2716   001838  0E08               	movlw	8
  2717   00183A  2411               	addwf	MRF24ReciboPaquete@index^0,w,c
  2718   00183C  6E06               	movwf	GetLongAddr@reg_address^0,c
  2719   00183E  6A07               	clrf	(GetLongAddr@reg_address+1)^0,c
  2720   001840  0E03               	movlw	3
  2721   001842  2207               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  2722   001844  ECAE  F00C         	call	_GetLongAddr	;wreg free
  2723   001848  6EDF               	movwf	indf2,c
  2724   00184A                     
  2725                           ;drivers/scr/API_MRF24J40.c: 431:  }
  2726   00184A  2A11               	incf	MRF24ReciboPaquete@index^0,f,c
  2727   00184C                     l2074:
  2728   00184C  0EFC               	movlw	252
  2729   00184E  2410               	addwf	MRF24ReciboPaquete@largo_mensaje^0,w,c
  2730   001850  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  2731   001852  6A0C               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  2732   001854  0EFF               	movlw	255
  2733   001856  220C               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  2734   001858  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2735   00185A  6E0D               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  2736   00185C  6A0E               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  2737   00185E  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  2738   001860  5C0D               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  2739   001862  500E               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  2740   001864  0A80               	xorlw	128
  2741   001866  6E0F               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  2742   001868  500C               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  2743   00186A  0A80               	xorlw	128
  2744   00186C  580F               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  2745   00186E  A0D8               	btfss	status,0,c
  2746   001870  EF3C  F00C         	goto	u751
  2747   001874  EF3E  F00C         	goto	u750
  2748   001878                     u751:
  2749   001878  EF18  F00C         	goto	l2070
  2750   00187C                     u750:
  2751   00187C                     
  2752                           ;drivers/scr/API_MRF24J40.c: 432:  SetLongAddr((0x39), (0X00));
  2753   00187C  0E00               	movlw	0
  2754   00187E  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2755   001880  0E39               	movlw	57
  2756   001882  6E06               	movwf	SetLongAddr@reg_address^0,c
  2757   001884  0E00               	movlw	0
  2758   001886  6E08               	movwf	SetLongAddr@valor^0,c
  2759   001888  ECF1  F00C         	call	_SetLongAddr	;wreg free
  2760                           
  2761                           ;drivers/scr/API_MRF24J40.c: 433:  (void)GetShortAddr((0x31));
  2762   00188C  0E31               	movlw	49
  2763   00188E  ECF5  F00D         	call	_GetShortAddr
  2764   001892                     l166:
  2765   001892  0012               	return		;funcret
  2766   001894                     __end_of_MRF24ReciboPaquete:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function _MRF24J40Init *****************
  2770 ;; Defined at:
  2771 ;;		line 315 in file "drivers/scr/API_MRF24J40.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      enum E3264
  2778 ;; Registers used:
  2779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;Total ram usage:        1 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 7
  2792 ;; This function calls:
  2793 ;;		_InicializoMRF24
  2794 ;;		_InicializoPines
  2795 ;;		_InicializoVariables
  2796 ;;		_SetResetPin
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text8
  2803   001A64                     __ptext8:
  2804                           	callstack 0
  2805   001A64                     _MRF24J40Init:
  2806                           	callstack 23
  2807   001A64                     
  2808                           ;drivers/scr/API_MRF24J40.c: 317:  InicializoVariables();
  2809   001A64  EC3F  F00B         	call	_InicializoVariables	;wreg free
  2810   001A68                     
  2811                           ;drivers/scr/API_MRF24J40.c: 318:  InicializoPines();
  2812   001A68  EC6C  F00E         	call	_InicializoPines	;wreg free
  2813   001A6C                     
  2814                           ;drivers/scr/API_MRF24J40.c: 319:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2815   001A6C  0E06               	movlw	6
  2816   001A6E  6E1A               	movwf	??_MRF24J40Init^0,c
  2817   001A70  0E30               	movlw	48
  2818   001A72                     u987:
  2819   001A72  2EE8               	decfsz	wreg,f,c
  2820   001A74  D7FE               	bra	u987
  2821   001A76  2E1A               	decfsz	??_MRF24J40Init^0,f,c
  2822   001A78  D7FC               	bra	u987
  2823   001A7A  F000 F000          	nop2	
  2824   001A7E                     
  2825                           ;drivers/scr/API_MRF24J40.c: 320:  SetResetPin(1);
  2826   001A7E  0E01               	movlw	1
  2827   001A80  EC87  F00E         	call	_SetResetPin
  2828   001A84                     
  2829                           ;drivers/scr/API_MRF24J40.c: 321:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2830   001A84  0E06               	movlw	6
  2831   001A86  6E1A               	movwf	??_MRF24J40Init^0,c
  2832   001A88  0E30               	movlw	48
  2833   001A8A                     u997:
  2834   001A8A  2EE8               	decfsz	wreg,f,c
  2835   001A8C  D7FE               	bra	u997
  2836   001A8E  2E1A               	decfsz	??_MRF24J40Init^0,f,c
  2837   001A90  D7FC               	bra	u997
  2838   001A92  F000 F000          	nop2	
  2839   001A96                     
  2840                           ;drivers/scr/API_MRF24J40.c: 322:  estadoActual = InicializoMRF24();
  2841   001A96  EC32  F009         	call	_InicializoMRF24	;wreg free
  2842   001A9A  6E3B               	movwf	_estadoActual^0,c
  2843   001A9C  0012               	return		;funcret
  2844   001A9E                     __end_of_MRF24J40Init:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _InicializoVariables *****************
  2848 ;; Defined at:
  2849 ;;		line 111 in file "drivers/scr/API_MRF24J40.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  i               2    1[COMRAM] int 
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2865 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2866 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2867 ;;Total ram usage:        3 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 1
  2870 ;; This function calls:
  2871 ;;		Nothing
  2872 ;; This function is called by:
  2873 ;;		_MRF24J40Init
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text9
  2878   00167E                     __ptext9:
  2879                           	callstack 0
  2880   00167E                     _InicializoVariables:
  2881                           	callstack 28
  2882   00167E                     
  2883                           ;drivers/scr/API_MRF24J40.c: 113:  for(int i = 0; i < 16; i++){
  2884   00167E  0E00               	movlw	0
  2885   001680  6E03               	movwf	(InicializoVariables@i+1)^0,c
  2886   001682  0E00               	movlw	0
  2887   001684  6E02               	movwf	InicializoVariables@i^0,c
  2888   001686                     l1858:
  2889                           
  2890                           ;drivers/scr/API_MRF24J40.c: 115:   if(i < 8)
  2891   001686  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  2892   001688  EF51  F00B         	goto	u600
  2893   00168C  5003               	movf	(InicializoVariables@i+1)^0,w,c
  2894   00168E  E107               	bnz	u601
  2895   001690  0E08               	movlw	8
  2896   001692  5C02               	subwf	InicializoVariables@i^0,w,c
  2897   001694  B0D8               	btfsc	status,0,c
  2898   001696  EF4F  F00B         	goto	u601
  2899   00169A  EF51  F00B         	goto	u600
  2900   00169E                     u601:
  2901   00169E  EF5F  F00B         	goto	l99
  2902   0016A2                     u600:
  2903   0016A2                     
  2904                           ;drivers/scr/API_MRF24J40.c: 116:    mrf24_data_config_s.my_mac[i] = default_mac_address
      +                          [i];
  2905   0016A2  5002               	movf	InicializoVariables@i^0,w,c
  2906   0016A4  0F11               	addlw	low _default_mac_address
  2907   0016A6  6E01               	movwf	??_InicializoVariables^0,c
  2908   0016A8  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  2909   0016AC                     	if	1	;There is more than 1 active tblptr byte
  2910   0016AC  0E10               	movlw	high __smallconst
  2911   0016AE  6EF7               	movwf	tblptrh,c
  2912   0016B0                     	endif
  2913   0016B0                     	if	0	;tblptru may be non-zero
  2914   0016B0                     	endif
  2915   0016B0                     	if	0	;tblptru may be non-zero
  2916   0016B0                     	endif
  2917   0016B0  5002               	movf	InicializoVariables@i^0,w,c
  2918   0016B2  0F74               	addlw	low (_mrf24_data_config_s+20)
  2919   0016B4  6ED9               	movwf	fsr2l,c
  2920   0016B6  6ADA               	clrf	fsr2h,c
  2921   0016B8  0008               	tblrd		*
  2922   0016BA  CFF5 FFDF          	movff	tablat,indf2
  2923   0016BE                     l99:
  2924                           
  2925                           ;drivers/scr/API_MRF24J40.c: 117:   mrf24_data_config_s.security_key[i] = default_securi
      +                          ty_key[i];
  2926   0016BE  5002               	movf	InicializoVariables@i^0,w,c
  2927   0016C0  0F01               	addlw	low _default_security_key
  2928   0016C2  6E01               	movwf	??_InicializoVariables^0,c
  2929   0016C4  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  2930   0016C8                     	if	1	;There is more than 1 active tblptr byte
  2931   0016C8  0E10               	movlw	high __smallconst
  2932   0016CA  6EF7               	movwf	tblptrh,c
  2933   0016CC                     	endif
  2934   0016CC                     	if	0	;tblptru may be non-zero
  2935   0016CC                     	endif
  2936   0016CC                     	if	0	;tblptru may be non-zero
  2937   0016CC                     	endif
  2938   0016CC  5002               	movf	InicializoVariables@i^0,w,c
  2939   0016CE  0F64               	addlw	low (_mrf24_data_config_s+4)
  2940   0016D0  6ED9               	movwf	fsr2l,c
  2941   0016D2  6ADA               	clrf	fsr2h,c
  2942   0016D4  0008               	tblrd		*
  2943   0016D6  CFF5 FFDF          	movff	tablat,indf2
  2944   0016DA                     
  2945                           ;drivers/scr/API_MRF24J40.c: 118:  }
  2946   0016DA  4A02               	infsnz	InicializoVariables@i^0,f,c
  2947   0016DC  2A03               	incf	(InicializoVariables@i+1)^0,f,c
  2948   0016DE  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  2949   0016E0  EF7B  F00B         	goto	u611
  2950   0016E4  5003               	movf	(InicializoVariables@i+1)^0,w,c
  2951   0016E6  E109               	bnz	u610
  2952   0016E8  0E10               	movlw	16
  2953   0016EA  5C02               	subwf	InicializoVariables@i^0,w,c
  2954   0016EC  A0D8               	btfss	status,0,c
  2955   0016EE  EF7B  F00B         	goto	u611
  2956   0016F2  EF7D  F00B         	goto	u610
  2957   0016F6                     u611:
  2958   0016F6  EF43  F00B         	goto	l1858
  2959   0016FA                     u610:
  2960   0016FA                     
  2961                           ;drivers/scr/API_MRF24J40.c: 119:  mrf24_data_config_s.sequence_number = (0X01);
  2962   0016FA  0E01               	movlw	1
  2963   0016FC  0100               	movlb	0	; () banked
  2964   0016FE  6F62               	movwf	(_mrf24_data_config_s+2)& (0+255),b
  2965                           
  2966                           ;drivers/scr/API_MRF24J40.c: 120:  mrf24_data_config_s.my_channel = CH_11;
  2967   001700  0E03               	movlw	3
  2968   001702  6F63               	movwf	(_mrf24_data_config_s+3)& (0+255),b
  2969   001704                     
  2970                           ; BSR set to: 0
  2971                           ;drivers/scr/API_MRF24J40.c: 121:  mrf24_data_config_s.get_new_msg = 0;
  2972   001704  6B60               	clrf	_mrf24_data_config_s& (0+255),b
  2973   001706                     
  2974                           ; BSR set to: 0
  2975                           ;drivers/scr/API_MRF24J40.c: 122:  mrf24_data_config_s.put_new_msg = 0;
  2976   001706  6B61               	clrf	(_mrf24_data_config_s+1)& (0+255),b
  2977                           
  2978                           ;drivers/scr/API_MRF24J40.c: 123:  mrf24_data_config_s.my_panid = (0x1234);
  2979   001708  0E12               	movlw	18
  2980   00170A  6F7D               	movwf	(_mrf24_data_config_s+29)& (0+255),b
  2981   00170C  0E34               	movlw	52
  2982   00170E  6F7C               	movwf	(_mrf24_data_config_s+28)& (0+255),b
  2983                           
  2984                           ;drivers/scr/API_MRF24J40.c: 124:  mrf24_data_config_s.my_address = (0x1112);
  2985   001710  0E11               	movlw	17
  2986   001712  6F7F               	movwf	(_mrf24_data_config_s+31)& (0+255),b
  2987   001714  0E12               	movlw	18
  2988   001716  6F7E               	movwf	(_mrf24_data_config_s+30)& (0+255),b
  2989                           
  2990                           ;drivers/scr/API_MRF24J40.c: 125:  mrf24_data_in_s.source_address = (0X00);
  2991   001718  0E00               	movlw	0
  2992   00171A  6F85               	movwf	(_mrf24_data_in_s+3)& (0+255),b
  2993   00171C  0E00               	movlw	0
  2994   00171E  6F84               	movwf	(_mrf24_data_in_s+2)& (0+255),b
  2995                           
  2996                           ;drivers/scr/API_MRF24J40.c: 126:  mrf24_data_in_s.source_panid = (0X00);
  2997   001720  0E00               	movlw	0
  2998   001722  6F83               	movwf	(_mrf24_data_in_s+1)& (0+255),b
  2999   001724  0E00               	movlw	0
  3000   001726  6F82               	movwf	_mrf24_data_in_s& (0+255),b
  3001   001728                     
  3002                           ; BSR set to: 0
  3003                           ;drivers/scr/API_MRF24J40.c: 127:  mrf24_data_in_s.tamano_mensaje = (0X00);
  3004   001728  6B86               	clrf	(_mrf24_data_in_s+4)& (0+255),b
  3005   00172A                     
  3006                           ; BSR set to: 0
  3007                           ;drivers/scr/API_MRF24J40.c: 128:  mrf24_data_in_s.buffer_entrada[0] = (0X00);
  3008   00172A  6B88               	clrf	(_mrf24_data_in_s+6)& (0+255),b
  3009                           
  3010                           ;drivers/scr/API_MRF24J40.c: 129:  mrf24_data_out_s.destinity_panid = (0X00);
  3011   00172C  0E00               	movlw	0
  3012   00172E  6E32               	movwf	(_mrf24_data_out_s+1)^0,c
  3013   001730  0E00               	movlw	0
  3014   001732  6E31               	movwf	_mrf24_data_out_s^0,c
  3015                           
  3016                           ;drivers/scr/API_MRF24J40.c: 130:  mrf24_data_out_s.destinity_address = (0X00);
  3017   001734  0E00               	movlw	0
  3018   001736  6E34               	movwf	(_mrf24_data_out_s+3)^0,c
  3019   001738  0E00               	movlw	0
  3020   00173A  6E33               	movwf	(_mrf24_data_out_s+2)^0,c
  3021   00173C                     
  3022                           ; BSR set to: 0
  3023                           ;drivers/scr/API_MRF24J40.c: 131:  mrf24_data_out_s.largo_mensaje = (0X00);
  3024   00173C  6A35               	clrf	(_mrf24_data_out_s+4)^0,c
  3025   00173E                     
  3026                           ; BSR set to: 0
  3027                           ;drivers/scr/API_MRF24J40.c: 132:  mrf24_data_out_s.buffer_salida = ((void*)0);
  3028   00173E  6A36               	clrf	(_mrf24_data_out_s+5)^0,c
  3029   001740                     
  3030                           ; BSR set to: 0
  3031   001740  0012               	return		;funcret
  3032   001742                     __end_of_InicializoVariables:
  3033                           	callstack 0
  3034                           
  3035 ;; *************** function _InicializoPines *****************
  3036 ;; Defined at:
  3037 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;		None
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;		None
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;Total ram usage:        0 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; Hardware stack levels required when called: 2
  3058 ;; This function calls:
  3059 ;;		_SetCSPin
  3060 ;;		_SetResetPin
  3061 ;;		_SetWakePin
  3062 ;; This function is called by:
  3063 ;;		_MRF24J40Init
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text10
  3068   001CD8                     __ptext10:
  3069                           	callstack 0
  3070   001CD8                     _InicializoPines:
  3071                           	callstack 27
  3072   001CD8                     
  3073                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  3074   001CD8  0E01               	movlw	1
  3075   001CDA  EC9C  F00E         	call	_SetCSPin
  3076                           
  3077                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  3078   001CDE  0E01               	movlw	1
  3079   001CE0  EC80  F00E         	call	_SetWakePin
  3080                           
  3081                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  3082   001CE4  0E00               	movlw	0
  3083   001CE6  EC87  F00E         	call	_SetResetPin
  3084   001CEA  0012               	return		;funcret
  3085   001CEC                     __end_of_InicializoPines:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _SetWakePin *****************
  3089 ;; Defined at:
  3090 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  estado          1    wreg     _Bool 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  estado          1    0[COMRAM] _Bool 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;Total ram usage:        1 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 1
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_InicializoPines
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text11
  3119   001D00                     __ptext11:
  3120                           	callstack 0
  3121   001D00                     _SetWakePin:
  3122                           	callstack 27
  3123                           
  3124                           ;incstack = 0
  3125                           ;SetWakePin@estado stored from wreg
  3126   001D00  6E01               	movwf	SetWakePin@estado^0,c
  3127   001D02                     
  3128                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  3129   001D02  B001               	btfsc	SetWakePin@estado^0,0,c
  3130   001D04  D002               	bra	u55
  3131   001D06  9E8B               	bcf	139,7,c	;volatile
  3132   001D08  D001               	bra	u56
  3133   001D0A                     u55:
  3134   001D0A  8E8B               	bsf	139,7,c	;volatile
  3135   001D0C                     u56:
  3136   001D0C  0012               	return		;funcret
  3137   001D0E                     __end_of_SetWakePin:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _SetResetPin *****************
  3141 ;; Defined at:
  3142 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;  estado          1    wreg     _Bool 
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  estado          1    0[COMRAM] _Bool 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;Total ram usage:        1 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 1
  3163 ;; This function calls:
  3164 ;;		Nothing
  3165 ;; This function is called by:
  3166 ;;		_InicializoPines
  3167 ;;		_MRF24J40Init
  3168 ;; This function uses a non-reentrant model
  3169 ;;
  3170                           
  3171                           	psect	text12
  3172   001D0E                     __ptext12:
  3173                           	callstack 0
  3174   001D0E                     _SetResetPin:
  3175                           	callstack 28
  3176                           
  3177                           ;incstack = 0
  3178                           ;SetResetPin@estado stored from wreg
  3179   001D0E  6E01               	movwf	SetResetPin@estado^0,c
  3180   001D10                     
  3181                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  3182   001D10  B001               	btfsc	SetResetPin@estado^0,0,c
  3183   001D12  D002               	bra	u65
  3184   001D14  988C               	bcf	140,4,c	;volatile
  3185   001D16  D001               	bra	u66
  3186   001D18                     u65:
  3187   001D18  888C               	bsf	140,4,c	;volatile
  3188   001D1A                     u66:
  3189   001D1A  0012               	return		;funcret
  3190   001D1C                     __end_of_SetResetPin:
  3191                           	callstack 0
  3192                           
  3193 ;; *************** function _InicializoMRF24 *****************
  3194 ;; Defined at:
  3195 ;;		line 141 in file "drivers/scr/API_MRF24J40.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;		None
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  delay_time_o    9   16[COMRAM] struct .
  3200 ;;  lectura         1   15[COMRAM] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      enum E3264
  3203 ;; Registers used:
  3204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3213 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3214 ;;Total ram usage:       11 bytes
  3215 ;; Hardware stack levels used: 1
  3216 ;; Hardware stack levels required when called: 6
  3217 ;; This function calls:
  3218 ;;		_DelayInit
  3219 ;;		_DelayRead
  3220 ;;		_DelayReset
  3221 ;;		_GetLongAddr
  3222 ;;		_GetShortAddr
  3223 ;;		_SetChannel
  3224 ;;		_SetDeviceAddress
  3225 ;;		_SetDeviceMACAddress
  3226 ;;		_SetLongAddr
  3227 ;;		_SetShortAddr
  3228 ;; This function is called by:
  3229 ;;		_MRF24J40Init
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text13
  3234   001264                     __ptext13:
  3235                           	callstack 0
  3236   001264                     _InicializoMRF24:
  3237                           	callstack 23
  3238   001264                     
  3239                           ;drivers/scr/API_MRF24J40.c: 143:  uint8_t lectura;;drivers/scr/API_MRF24J40.c: 144:  de
      +                          layNoBloqueanteData delay_time_out;;drivers/scr/API_MRF24J40.c: 145:  DelayInit(&delay_t
      +                          ime_out, 100);
  3240   001264  0E11               	movlw	low InicializoMRF24@delay_time_out
  3241   001266  6E01               	movwf	DelayInit@delay^0,c
  3242   001268  0E64               	movlw	100
  3243   00126A  6E02               	movwf	DelayInit@duration^0,c
  3244   00126C  0E00               	movlw	0
  3245   00126E  6E03               	movwf	(DelayInit@duration+1)^0,c
  3246   001270  0E00               	movlw	0
  3247   001272  6E04               	movwf	(DelayInit@duration+2)^0,c
  3248   001274  0E00               	movlw	0
  3249   001276  6E05               	movwf	(DelayInit@duration+3)^0,c
  3250   001278  ECCE  F00D         	call	_DelayInit	;wreg free
  3251   00127C                     
  3252                           ;drivers/scr/API_MRF24J40.c: 146:  SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  3253   00127C  0E07               	movlw	7
  3254   00127E  6E03               	movwf	SetShortAddr@valor^0,c
  3255   001280  0E2A               	movlw	42
  3256   001282  EC1B  F00E         	call	_SetShortAddr
  3257   001286                     
  3258                           ;drivers/scr/API_MRF24J40.c: 147:  DelayReset(&delay_time_out);
  3259   001286  0E11               	movlw	low InicializoMRF24@delay_time_out
  3260   001288  6E01               	movwf	DelayReset@delay^0,c
  3261   00128A  EC08  F00E         	call	_DelayReset	;wreg free
  3262   00128E                     l103:
  3263                           
  3264                           ;drivers/scr/API_MRF24J40.c: 151:   lectura = GetShortAddr((0x2A));
  3265   00128E  0E2A               	movlw	42
  3266   001290  ECF5  F00D         	call	_GetShortAddr
  3267   001294  6E10               	movwf	InicializoMRF24@lectura^0,c
  3268   001296                     
  3269                           ;drivers/scr/API_MRF24J40.c: 152:   if(DelayRead(&delay_time_out))
  3270   001296  0E11               	movlw	low InicializoMRF24@delay_time_out
  3271   001298  6E02               	movwf	DelayRead@delay^0,c
  3272   00129A  ECA1  F00B         	call	_DelayRead	;wreg free
  3273   00129E  0900               	iorlw	0
  3274   0012A0  B4D8               	btfsc	status,2,c
  3275   0012A2  EF55  F009         	goto	u621
  3276   0012A6  EF57  F009         	goto	u620
  3277   0012AA                     u621:
  3278   0012AA  EF5A  F009         	goto	l1894
  3279   0012AE                     u620:
  3280   0012AE                     l1890:
  3281                           
  3282                           ;drivers/scr/API_MRF24J40.c: 153:    return TIME_OUT_OCURRIDO;
  3283   0012AE  0E06               	movlw	6
  3284   0012B0  EFFF  F009         	goto	l105
  3285   0012B4                     l1894:
  3286                           
  3287                           ;drivers/scr/API_MRF24J40.c: 154:  }while((lectura & ((0X04) | (0X02) | (0X01))) != (0X0
      +                          0));
  3288   0012B4  C010  F00F         	movff	InicializoMRF24@lectura,??_InicializoMRF24
  3289   0012B8  0E07               	movlw	7
  3290   0012BA  160F               	andwf	??_InicializoMRF24^0,f,c
  3291   0012BC  A4D8               	btfss	status,2,c
  3292   0012BE  EF63  F009         	goto	u631
  3293   0012C2  EF65  F009         	goto	u630
  3294   0012C6                     u631:
  3295   0012C6  EF47  F009         	goto	l103
  3296   0012CA                     u630:
  3297   0012CA                     
  3298                           ;drivers/scr/API_MRF24J40.c: 155:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3299   0012CA  0E06               	movlw	6
  3300   0012CC  6E0F               	movwf	??_InicializoMRF24^0,c
  3301   0012CE  0E30               	movlw	48
  3302   0012D0                     u1007:
  3303   0012D0  2EE8               	decfsz	wreg,f,c
  3304   0012D2  D7FE               	bra	u1007
  3305   0012D4  2E0F               	decfsz	??_InicializoMRF24^0,f,c
  3306   0012D6  D7FC               	bra	u1007
  3307   0012D8  F000 F000          	nop2	
  3308   0012DC                     
  3309                           ;drivers/scr/API_MRF24J40.c: 156:  SetShortAddr((0x0D), (0X01));
  3310   0012DC  0E01               	movlw	1
  3311   0012DE  6E03               	movwf	SetShortAddr@valor^0,c
  3312   0012E0  0E0D               	movlw	13
  3313   0012E2  EC1B  F00E         	call	_SetShortAddr
  3314   0012E6                     
  3315                           ;drivers/scr/API_MRF24J40.c: 157:  SetDeviceAddress();
  3316   0012E6  ECB7  F00D         	call	_SetDeviceAddress	;wreg free
  3317   0012EA                     
  3318                           ;drivers/scr/API_MRF24J40.c: 158:  SetDeviceMACAddress();
  3319   0012EA  ECD0  F00C         	call	_SetDeviceMACAddress	;wreg free
  3320   0012EE                     
  3321                           ;drivers/scr/API_MRF24J40.c: 159:  SetLongAddr((0x202), (0X80));
  3322   0012EE  0E02               	movlw	2
  3323   0012F0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3324   0012F2  0E02               	movlw	2
  3325   0012F4  6E06               	movwf	SetLongAddr@reg_address^0,c
  3326   0012F6  0E80               	movlw	128
  3327   0012F8  6E08               	movwf	SetLongAddr@valor^0,c
  3328   0012FA  ECF1  F00C         	call	_SetLongAddr	;wreg free
  3329   0012FE                     
  3330                           ;drivers/scr/API_MRF24J40.c: 160:  SetLongAddr((0x203), (0XC0) | (0X38));
  3331   0012FE  0E02               	movlw	2
  3332   001300  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3333   001302  0E03               	movlw	3
  3334   001304  6E06               	movwf	SetLongAddr@reg_address^0,c
  3335   001306  0EF8               	movlw	248
  3336   001308  6E08               	movwf	SetLongAddr@valor^0,c
  3337   00130A  ECF1  F00C         	call	_SetLongAddr	;wreg free
  3338   00130E                     
  3339                           ;drivers/scr/API_MRF24J40.c: 161:  SetLongAddr((0x206), (0X80) | (0X10));
  3340   00130E  0E02               	movlw	2
  3341   001310  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3342   001312  0E06               	movlw	6
  3343   001314  6E06               	movwf	SetLongAddr@reg_address^0,c
  3344   001316  0E90               	movlw	144
  3345   001318  6E08               	movwf	SetLongAddr@valor^0,c
  3346   00131A  ECF1  F00C         	call	_SetLongAddr	;wreg free
  3347   00131E                     
  3348                           ;drivers/scr/API_MRF24J40.c: 162:  SetLongAddr((0x207), (0X80));
  3349   00131E  0E02               	movlw	2
  3350   001320  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3351   001322  0E07               	movlw	7
  3352   001324  6E06               	movwf	SetLongAddr@reg_address^0,c
  3353   001326  0E80               	movlw	128
  3354   001328  6E08               	movwf	SetLongAddr@valor^0,c
  3355   00132A  ECF1  F00C         	call	_SetLongAddr	;wreg free
  3356   00132E                     
  3357                           ;drivers/scr/API_MRF24J40.c: 163:  SetLongAddr((0x208), (0X10));
  3358   00132E  0E02               	movlw	2
  3359   001330  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3360   001332  0E08               	movlw	8
  3361   001334  6E06               	movwf	SetLongAddr@reg_address^0,c
  3362   001336  0E10               	movlw	16
  3363   001338  6E08               	movwf	SetLongAddr@valor^0,c
  3364   00133A  ECF1  F00C         	call	_SetLongAddr	;wreg free
  3365   00133E                     
  3366                           ;drivers/scr/API_MRF24J40.c: 164:  SetLongAddr((0x220), (0X20) | (0X01));
  3367   00133E  0E02               	movlw	2
  3368   001340  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3369   001342  0E20               	movlw	32
  3370   001344  6E06               	movwf	SetLongAddr@reg_address^0,c
  3371   001346  0E21               	movlw	33
  3372   001348  6E08               	movwf	SetLongAddr@valor^0,c
  3373   00134A  ECF1  F00C         	call	_SetLongAddr	;wreg free
  3374   00134E                     
  3375                           ;drivers/scr/API_MRF24J40.c: 165:  SetShortAddr((0x3A), (0X80));
  3376   00134E  0E80               	movlw	128
  3377   001350  6E03               	movwf	SetShortAddr@valor^0,c
  3378   001352  0E3A               	movlw	58
  3379   001354  EC1B  F00E         	call	_SetShortAddr
  3380   001358                     
  3381                           ;drivers/scr/API_MRF24J40.c: 166:  SetShortAddr((0x3E), (0X40));
  3382   001358  0E40               	movlw	64
  3383   00135A  6E03               	movwf	SetShortAddr@valor^0,c
  3384   00135C  0E3E               	movlw	62
  3385   00135E  EC1B  F00E         	call	_SetShortAddr
  3386   001362                     
  3387                           ;drivers/scr/API_MRF24J40.c: 167:  SetShortAddr((0x3F), (0X04) | (0X02));
  3388   001362  0E06               	movlw	6
  3389   001364  6E03               	movwf	SetShortAddr@valor^0,c
  3390   001366  0E3F               	movlw	63
  3391   001368  EC1B  F00E         	call	_SetShortAddr
  3392   00136C                     
  3393                           ;drivers/scr/API_MRF24J40.c: 168:  SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  3394   00136C  0E98               	movlw	152
  3395   00136E  6E03               	movwf	SetShortAddr@valor^0,c
  3396   001370  0E18               	movlw	24
  3397   001372  EC1B  F00E         	call	_SetShortAddr
  3398   001376                     
  3399                           ;drivers/scr/API_MRF24J40.c: 169:  SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0X01
      +                          ));
  3400   001376  0E95               	movlw	149
  3401   001378  6E03               	movwf	SetShortAddr@valor^0,c
  3402   00137A  0E2E               	movlw	46
  3403   00137C  EC1B  F00E         	call	_SetShortAddr
  3404   001380                     
  3405                           ;drivers/scr/API_MRF24J40.c: 170:  DelayReset(&delay_time_out);
  3406   001380  0E11               	movlw	low InicializoMRF24@delay_time_out
  3407   001382  6E01               	movwf	DelayReset@delay^0,c
  3408   001384  EC08  F00E         	call	_DelayReset	;wreg free
  3409   001388                     l1928:
  3410                           
  3411                           ;drivers/scr/API_MRF24J40.c: 174:   lectura = GetLongAddr((0x20f));
  3412   001388  0E02               	movlw	2
  3413   00138A  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3414   00138C  0E0F               	movlw	15
  3415   00138E  6E06               	movwf	GetLongAddr@reg_address^0,c
  3416   001390  ECAE  F00C         	call	_GetLongAddr	;wreg free
  3417   001394  6E10               	movwf	InicializoMRF24@lectura^0,c
  3418   001396                     
  3419                           ;drivers/scr/API_MRF24J40.c: 175:   if(DelayRead(&delay_time_out))
  3420   001396  0E11               	movlw	low InicializoMRF24@delay_time_out
  3421   001398  6E02               	movwf	DelayRead@delay^0,c
  3422   00139A  ECA1  F00B         	call	_DelayRead	;wreg free
  3423   00139E  0900               	iorlw	0
  3424   0013A0  B4D8               	btfsc	status,2,c
  3425   0013A2  EFD5  F009         	goto	u641
  3426   0013A6  EFD7  F009         	goto	u640
  3427   0013AA                     u641:
  3428   0013AA  EFD9  F009         	goto	l1936
  3429   0013AE                     u640:
  3430   0013AE  EF57  F009         	goto	l1890
  3431   0013B2                     l1936:
  3432                           
  3433                           ;drivers/scr/API_MRF24J40.c: 177:  }while(lectura != (0XA0));
  3434   0013B2  0EA0               	movlw	160
  3435   0013B4  1810               	xorwf	InicializoMRF24@lectura^0,w,c
  3436   0013B6  A4D8               	btfss	status,2,c
  3437   0013B8  EFE0  F009         	goto	u651
  3438   0013BC  EFE2  F009         	goto	u650
  3439   0013C0                     u651:
  3440   0013C0  EFC4  F009         	goto	l1928
  3441   0013C4                     u650:
  3442   0013C4                     
  3443                           ;drivers/scr/API_MRF24J40.c: 178:  SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0X10
      +                          ) | (0X04) | (0X01));
  3444   0013C4  0EF5               	movlw	245
  3445   0013C6  6E03               	movwf	SetShortAddr@valor^0,c
  3446   0013C8  0E32               	movlw	50
  3447   0013CA  EC1B  F00E         	call	_SetShortAddr
  3448                           
  3449                           ;drivers/scr/API_MRF24J40.c: 179:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  3450   0013CE  0EB9               	movlw	185
  3451   0013D0  6E03               	movwf	SetShortAddr@valor^0,c
  3452   0013D2  0E12               	movlw	18
  3453   0013D4  EC1B  F00E         	call	_SetShortAddr
  3454                           
  3455                           ;drivers/scr/API_MRF24J40.c: 180:  SetLongAddr((0x201), (0X02) | (0X01));
  3456   0013D8  0E02               	movlw	2
  3457   0013DA  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3458   0013DC  0E01               	movlw	1
  3459   0013DE  6E06               	movwf	SetLongAddr@reg_address^0,c
  3460   0013E0  0E03               	movlw	3
  3461   0013E2  6E08               	movwf	SetLongAddr@valor^0,c
  3462   0013E4  ECF1  F00C         	call	_SetLongAddr	;wreg free
  3463                           
  3464                           ;drivers/scr/API_MRF24J40.c: 181:  SetChannel();
  3465   0013E8  EC4F  F00D         	call	_SetChannel	;wreg free
  3466                           
  3467                           ;drivers/scr/API_MRF24J40.c: 182:  SetShortAddr((0x00), (0X00));
  3468   0013EC  0E00               	movlw	0
  3469   0013EE  6E03               	movwf	SetShortAddr@valor^0,c
  3470   0013F0  0E00               	movlw	0
  3471   0013F2  EC1B  F00E         	call	_SetShortAddr
  3472                           
  3473                           ;drivers/scr/API_MRF24J40.c: 183:  (void)GetShortAddr((0x31));
  3474   0013F6  0E31               	movlw	49
  3475   0013F8  ECF5  F00D         	call	_GetShortAddr
  3476   0013FC                     
  3477                           ;drivers/scr/API_MRF24J40.c: 184:  return INICIALIZACION_OK;
  3478   0013FC  0E00               	movlw	0
  3479   0013FE                     l105:
  3480   0013FE  0012               	return		;funcret
  3481   001400                     __end_of_InicializoMRF24:
  3482                           	callstack 0
  3483                           
  3484 ;; *************** function _SetDeviceMACAddress *****************
  3485 ;; Defined at:
  3486 ;;		line 298 in file "drivers/scr/API_MRF24J40.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;		None
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  i               2    4[COMRAM] int 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      void 
  3493 ;; Registers used:
  3494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3501 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;Total ram usage:        2 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 4
  3507 ;; This function calls:
  3508 ;;		_SetShortAddr
  3509 ;; This function is called by:
  3510 ;;		_InicializoMRF24
  3511 ;; This function uses a non-reentrant model
  3512 ;;
  3513                           
  3514                           	psect	text14
  3515   0019A0                     __ptext14:
  3516                           	callstack 0
  3517   0019A0                     _SetDeviceMACAddress:
  3518                           	callstack 24
  3519   0019A0                     
  3520                           ;drivers/scr/API_MRF24J40.c: 300:  long_mac_address_e = EADR0;
  3521   0019A0  0E05               	movlw	5
  3522   0019A2  6E3C               	movwf	_long_mac_address_e^0,c
  3523                           
  3524                           ;drivers/scr/API_MRF24J40.c: 302:  for(int i = 0; i < 8; i++) {
  3525   0019A4  0E00               	movlw	0
  3526   0019A6  6E06               	movwf	(SetDeviceMACAddress@i+1)^0,c
  3527   0019A8  0E00               	movlw	0
  3528   0019AA  6E05               	movwf	SetDeviceMACAddress@i^0,c
  3529   0019AC                     l1820:
  3530                           
  3531                           ;drivers/scr/API_MRF24J40.c: 304:   SetShortAddr(long_mac_address_e++, mrf24_data_config
      +                          _s.my_mac[i]);
  3532   0019AC  5005               	movf	SetDeviceMACAddress@i^0,w,c
  3533   0019AE  0F74               	addlw	low (_mrf24_data_config_s+20)
  3534   0019B0  6ED9               	movwf	fsr2l,c
  3535   0019B2  6ADA               	clrf	fsr2h,c
  3536   0019B4  50DF               	movf	indf2,w,c
  3537   0019B6  6E03               	movwf	SetShortAddr@valor^0,c
  3538   0019B8  503C               	movf	_long_mac_address_e^0,w,c
  3539   0019BA  EC1B  F00E         	call	_SetShortAddr
  3540   0019BE  2A3C               	incf	_long_mac_address_e^0,f,c
  3541   0019C0                     
  3542                           ;drivers/scr/API_MRF24J40.c: 305:  }
  3543   0019C0  4A05               	infsnz	SetDeviceMACAddress@i^0,f,c
  3544   0019C2  2A06               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  3545   0019C4  BE06               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  3546   0019C6  EFEE  F00C         	goto	u581
  3547   0019CA  5006               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  3548   0019CC  E109               	bnz	u580
  3549   0019CE  0E08               	movlw	8
  3550   0019D0  5C05               	subwf	SetDeviceMACAddress@i^0,w,c
  3551   0019D2  A0D8               	btfss	status,0,c
  3552   0019D4  EFEE  F00C         	goto	u581
  3553   0019D8  EFF0  F00C         	goto	u580
  3554   0019DC                     u581:
  3555   0019DC  EFD6  F00C         	goto	l1820
  3556   0019E0                     u580:
  3557   0019E0  0012               	return		;funcret
  3558   0019E2                     __end_of_SetDeviceMACAddress:
  3559                           	callstack 0
  3560                           
  3561 ;; *************** function _SetDeviceAddress *****************
  3562 ;; Defined at:
  3563 ;;		line 284 in file "drivers/scr/API_MRF24J40.c"
  3564 ;; Parameters:    Size  Location     Type
  3565 ;;		None
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;		None
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      void 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0, cstack
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3581 ;;Total ram usage:        0 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; Hardware stack levels required when called: 4
  3584 ;; This function calls:
  3585 ;;		_SetShortAddr
  3586 ;; This function is called by:
  3587 ;;		_InicializoMRF24
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text15
  3592   001B6E                     __ptext15:
  3593                           	callstack 0
  3594   001B6E                     _SetDeviceAddress:
  3595                           	callstack 24
  3596   001B6E                     
  3597                           ;drivers/scr/API_MRF24J40.c: 286:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config_s.m
      +                          y_address >> (0X08)));
  3598   001B6E  0100               	movlb	0	; () banked
  3599   001B70  517F               	movf	(_mrf24_data_config_s+31)& (0+255),w,b
  3600   001B72  6E03               	movwf	SetShortAddr@valor^0,c
  3601   001B74  0E04               	movlw	4
  3602   001B76  EC1B  F00E         	call	_SetShortAddr
  3603                           
  3604                           ;drivers/scr/API_MRF24J40.c: 287:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config_s.m
      +                          y_address));
  3605   001B7A  C07E  F003         	movff	_mrf24_data_config_s+30,SetShortAddr@valor
  3606   001B7E  0E03               	movlw	3
  3607   001B80  EC1B  F00E         	call	_SetShortAddr
  3608                           
  3609                           ;drivers/scr/API_MRF24J40.c: 288:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config_s.m
      +                          y_panid >> (0X08)));
  3610   001B84  0100               	movlb	0	; () banked
  3611   001B86  517D               	movf	(_mrf24_data_config_s+29)& (0+255),w,b
  3612   001B88  6E03               	movwf	SetShortAddr@valor^0,c
  3613   001B8A  0E02               	movlw	2
  3614   001B8C  EC1B  F00E         	call	_SetShortAddr
  3615                           
  3616                           ;drivers/scr/API_MRF24J40.c: 289:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config_s.m
      +                          y_panid));
  3617   001B90  C07C  F003         	movff	_mrf24_data_config_s+28,SetShortAddr@valor
  3618   001B94  0E01               	movlw	1
  3619   001B96  EC1B  F00E         	call	_SetShortAddr
  3620   001B9A  0012               	return		;funcret
  3621   001B9C                     __end_of_SetDeviceAddress:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _SetChannel *****************
  3625 ;; Defined at:
  3626 ;;		line 270 in file "drivers/scr/API_MRF24J40.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;		None
  3629 ;; Auto vars:     Size  Location     Type
  3630 ;;		None
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:        1 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 5
  3647 ;; This function calls:
  3648 ;;		_SetLongAddr
  3649 ;;		_SetShortAddr
  3650 ;; This function is called by:
  3651 ;;		_InicializoMRF24
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           	psect	text16
  3656   001A9E                     __ptext16:
  3657                           	callstack 0
  3658   001A9E                     _SetChannel:
  3659                           	callstack 23
  3660   001A9E                     
  3661                           ;drivers/scr/API_MRF24J40.c: 272:  SetLongAddr((0x200), mrf24_data_config_s.my_channel);
  3662   001A9E  0E02               	movlw	2
  3663   001AA0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3664   001AA2  0E00               	movlw	0
  3665   001AA4  6E06               	movwf	SetLongAddr@reg_address^0,c
  3666   001AA6  C063  F008         	movff	_mrf24_data_config_s+3,SetLongAddr@valor
  3667   001AAA  ECF1  F00C         	call	_SetLongAddr	;wreg free
  3668                           
  3669                           ;drivers/scr/API_MRF24J40.c: 273:  SetShortAddr((0x36), (0X04));
  3670   001AAE  0E04               	movlw	4
  3671   001AB0  6E03               	movwf	SetShortAddr@valor^0,c
  3672   001AB2  0E36               	movlw	54
  3673   001AB4  EC1B  F00E         	call	_SetShortAddr
  3674                           
  3675                           ;drivers/scr/API_MRF24J40.c: 274:  SetShortAddr((0x36), (0X00));
  3676   001AB8  0E00               	movlw	0
  3677   001ABA  6E03               	movwf	SetShortAddr@valor^0,c
  3678   001ABC  0E36               	movlw	54
  3679   001ABE  EC1B  F00E         	call	_SetShortAddr
  3680   001AC2                     
  3681                           ;drivers/scr/API_MRF24J40.c: 275:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3682   001AC2  0E06               	movlw	6
  3683   001AC4  6E0B               	movwf	??_SetChannel^0,c
  3684   001AC6  0E30               	movlw	48
  3685   001AC8                     u1017:
  3686   001AC8  2EE8               	decfsz	wreg,f,c
  3687   001ACA  D7FE               	bra	u1017
  3688   001ACC  2E0B               	decfsz	??_SetChannel^0,f,c
  3689   001ACE  D7FC               	bra	u1017
  3690   001AD0  F000 F000          	nop2	
  3691   001AD4  0012               	return		;funcret
  3692   001AD6                     __end_of_SetChannel:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _SetShortAddr *****************
  3696 ;; Defined at:
  3697 ;;		line 193 in file "drivers/scr/API_MRF24J40.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  reg_address     1    wreg     unsigned char 
  3700 ;;  valor           1    2[COMRAM] unsigned char 
  3701 ;; Auto vars:     Size  Location     Type
  3702 ;;  reg_address     1    3[COMRAM] unsigned char 
  3703 ;; Return value:  Size  Location     Type
  3704 ;;                  1    wreg      void 
  3705 ;; Registers used:
  3706 ;;		wreg, status,2, status,0, cstack
  3707 ;; Tracked objects:
  3708 ;;		On entry : 0/0
  3709 ;;		On exit  : 0/0
  3710 ;;		Unchanged: 0/0
  3711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3712 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3716 ;;Total ram usage:        2 bytes
  3717 ;; Hardware stack levels used: 1
  3718 ;; Hardware stack levels required when called: 3
  3719 ;; This function calls:
  3720 ;;		_SetCSPin
  3721 ;;		_WriteByteSPIPort
  3722 ;; This function is called by:
  3723 ;;		_InicializoMRF24
  3724 ;;		_SetChannel
  3725 ;;		_SetDeviceAddress
  3726 ;;		_SetDeviceMACAddress
  3727 ;;		_MRF24TransmitirDato
  3728 ;;		_MRF24ReciboPaquete
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text17
  3733   001C36                     __ptext17:
  3734                           	callstack 0
  3735   001C36                     _SetShortAddr:
  3736                           	callstack 26
  3737                           
  3738                           ;incstack = 0
  3739                           ;SetShortAddr@reg_address stored from wreg
  3740   001C36  6E04               	movwf	SetShortAddr@reg_address^0,c
  3741   001C38                     
  3742                           ;drivers/scr/API_MRF24J40.c: 198:  reg_address = (uint8_t) (reg_address << (0X01)) | (0x
      +                          01);
  3743   001C38  80D8               	bsf	status,0,c
  3744   001C3A  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  3745   001C3C                     
  3746                           ;drivers/scr/API_MRF24J40.c: 199:  SetCSPin(0);
  3747   001C3C  0E00               	movlw	0
  3748   001C3E  EC9C  F00E         	call	_SetCSPin
  3749   001C42                     
  3750                           ;drivers/scr/API_MRF24J40.c: 200:  WriteByteSPIPort(reg_address);
  3751   001C42  5004               	movf	SetShortAddr@reg_address^0,w,c
  3752   001C44  ECAA  F00E         	call	_WriteByteSPIPort
  3753   001C48                     
  3754                           ;drivers/scr/API_MRF24J40.c: 201:  WriteByteSPIPort(valor);
  3755   001C48  5003               	movf	SetShortAddr@valor^0,w,c
  3756   001C4A  ECAA  F00E         	call	_WriteByteSPIPort
  3757   001C4E                     
  3758                           ;drivers/scr/API_MRF24J40.c: 202:  SetCSPin(1);
  3759   001C4E  0E01               	movlw	1
  3760   001C50  EC9C  F00E         	call	_SetCSPin
  3761   001C54  0012               	return		;funcret
  3762   001C56                     __end_of_SetShortAddr:
  3763                           	callstack 0
  3764                           
  3765 ;; *************** function _SetLongAddr *****************
  3766 ;; Defined at:
  3767 ;;		line 232 in file "drivers/scr/API_MRF24J40.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  reg_address     2    5[COMRAM] unsigned short 
  3770 ;;  valor           1    7[COMRAM] unsigned char 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;		None
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0, cstack
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3782 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;Total ram usage:        5 bytes
  3787 ;; Hardware stack levels used: 1
  3788 ;; Hardware stack levels required when called: 4
  3789 ;; This function calls:
  3790 ;;		_SetCSPin
  3791 ;;		_Write2ByteSPIPort
  3792 ;;		_WriteByteSPIPort
  3793 ;; This function is called by:
  3794 ;;		_InicializoMRF24
  3795 ;;		_SetChannel
  3796 ;;		_MRF24TransmitirDato
  3797 ;;		_MRF24ReciboPaquete
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text18
  3802   0019E2                     __ptext18:
  3803                           	callstack 0
  3804   0019E2                     _SetLongAddr:
  3805                           	callstack 25
  3806   0019E2                     
  3807                           ;drivers/scr/API_MRF24J40.c: 237:  reg_address = (reg_address << (0X05)) | (0X8010);
  3808   0019E2  C006  F009         	movff	SetLongAddr@reg_address,??_SetLongAddr
  3809   0019E6  C007  F00A         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  3810   0019EA  0E05               	movlw	5
  3811   0019EC                     u555:
  3812   0019EC  90D8               	bcf	status,0,c
  3813   0019EE  3609               	rlcf	??_SetLongAddr^0,f,c
  3814   0019F0  360A               	rlcf	(??_SetLongAddr+1)^0,f,c
  3815   0019F2  2EE8               	decfsz	wreg,f,c
  3816   0019F4  EFF6  F00C         	goto	u555
  3817   0019F8  0E10               	movlw	16
  3818   0019FA  1009               	iorwf	??_SetLongAddr^0,w,c
  3819   0019FC  6E06               	movwf	SetLongAddr@reg_address^0,c
  3820   0019FE  0E80               	movlw	128
  3821   001A00  100A               	iorwf	(??_SetLongAddr+1)^0,w,c
  3822   001A02  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3823   001A04                     
  3824                           ;drivers/scr/API_MRF24J40.c: 238:  SetCSPin(0);
  3825   001A04  0E00               	movlw	0
  3826   001A06  EC9C  F00E         	call	_SetCSPin
  3827   001A0A                     
  3828                           ;drivers/scr/API_MRF24J40.c: 239:  Write2ByteSPIPort(reg_address);
  3829   001A0A  C006  F004         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  3830   001A0E  C007  F005         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3831   001A12  EC8E  F00E         	call	_Write2ByteSPIPort	;wreg free
  3832   001A16                     
  3833                           ;drivers/scr/API_MRF24J40.c: 240:  WriteByteSPIPort(valor);
  3834   001A16  5008               	movf	SetLongAddr@valor^0,w,c
  3835   001A18  ECAA  F00E         	call	_WriteByteSPIPort
  3836   001A1C                     
  3837                           ;drivers/scr/API_MRF24J40.c: 241:  SetCSPin(1);
  3838   001A1C  0E01               	movlw	1
  3839   001A1E  EC9C  F00E         	call	_SetCSPin
  3840   001A22  0012               	return		;funcret
  3841   001A24                     __end_of_SetLongAddr:
  3842                           	callstack 0
  3843                           
  3844 ;; *************** function _GetShortAddr *****************
  3845 ;; Defined at:
  3846 ;;		line 212 in file "drivers/scr/API_MRF24J40.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;  reg_address     1    wreg     unsigned char 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  reg_address     1    3[COMRAM] unsigned char 
  3851 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      unsigned char 
  3854 ;; Registers used:
  3855 ;;		wreg, status,2, status,0, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3865 ;;Total ram usage:        2 bytes
  3866 ;; Hardware stack levels used: 1
  3867 ;; Hardware stack levels required when called: 3
  3868 ;; This function calls:
  3869 ;;		_ReadByteSPIPort
  3870 ;;		_SetCSPin
  3871 ;;		_WriteByteSPIPort
  3872 ;; This function is called by:
  3873 ;;		_InicializoMRF24
  3874 ;;		_MRF24TransmitirDato
  3875 ;;		_MRF24ReciboPaquete
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text19
  3880   001BEA                     __ptext19:
  3881                           	callstack 0
  3882   001BEA                     _GetShortAddr:
  3883                           	callstack 26
  3884                           
  3885                           ;incstack = 0
  3886                           ;GetShortAddr@reg_address stored from wreg
  3887   001BEA  6E04               	movwf	GetShortAddr@reg_address^0,c
  3888   001BEC                     
  3889                           ;drivers/scr/API_MRF24J40.c: 218:  reg_address = (uint8_t) (reg_address << (0X01)) & (0x
      +                          7E);
  3890   001BEC  5004               	movf	GetShortAddr@reg_address^0,w,c
  3891   001BEE  2404               	addwf	GetShortAddr@reg_address^0,w,c
  3892   001BF0  0B7E               	andlw	126
  3893   001BF2  6E04               	movwf	GetShortAddr@reg_address^0,c
  3894   001BF4                     
  3895                           ;drivers/scr/API_MRF24J40.c: 219:  SetCSPin(0);
  3896   001BF4  0E00               	movlw	0
  3897   001BF6  EC9C  F00E         	call	_SetCSPin
  3898   001BFA                     
  3899                           ;drivers/scr/API_MRF24J40.c: 220:  WriteByteSPIPort(reg_address);
  3900   001BFA  5004               	movf	GetShortAddr@reg_address^0,w,c
  3901   001BFC  ECAA  F00E         	call	_WriteByteSPIPort
  3902   001C00                     
  3903                           ;drivers/scr/API_MRF24J40.c: 221:  leido_spi = ReadByteSPIPort();
  3904   001C00  ECAF  F00E         	call	_ReadByteSPIPort	;wreg free
  3905   001C04  6E03               	movwf	GetShortAddr@leido_spi^0,c
  3906   001C06                     
  3907                           ;drivers/scr/API_MRF24J40.c: 222:  SetCSPin(1);
  3908   001C06  0E01               	movlw	1
  3909   001C08  EC9C  F00E         	call	_SetCSPin
  3910   001C0C                     
  3911                           ;drivers/scr/API_MRF24J40.c: 223:  return leido_spi;
  3912   001C0C  5003               	movf	GetShortAddr@leido_spi^0,w,c
  3913   001C0E  0012               	return		;funcret
  3914   001C10                     __end_of_GetShortAddr:
  3915                           	callstack 0
  3916                           
  3917 ;; *************** function _WriteByteSPIPort *****************
  3918 ;; Defined at:
  3919 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  3920 ;; Parameters:    Size  Location     Type
  3921 ;;  dato            1    wreg     unsigned char 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  dato            1    1[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      void 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;Total ram usage:        1 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 2
  3940 ;; This function calls:
  3941 ;;		_SPIWriteByte
  3942 ;; This function is called by:
  3943 ;;		_SetShortAddr
  3944 ;;		_GetShortAddr
  3945 ;;		_SetLongAddr
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text20
  3950   001D54                     __ptext20:
  3951                           	callstack 0
  3952   001D54                     _WriteByteSPIPort:
  3953                           	callstack 26
  3954                           
  3955                           ;incstack = 0
  3956                           ;WriteByteSPIPort@dato stored from wreg
  3957   001D54  6E02               	movwf	WriteByteSPIPort@dato^0,c
  3958   001D56                     
  3959                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  3960   001D56  5002               	movf	WriteByteSPIPort@dato^0,w,c
  3961   001D58  EC49  F00E         	call	_SPIWriteByte
  3962   001D5C  0012               	return		;funcret
  3963   001D5E                     __end_of_WriteByteSPIPort:
  3964                           	callstack 0
  3965                           
  3966 ;; *************** function _GetLongAddr *****************
  3967 ;; Defined at:
  3968 ;;		line 251 in file "drivers/scr/API_MRF24J40.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  reg_address     2    5[COMRAM] unsigned short 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  respuesta       1    9[COMRAM] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      unsigned char 
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;Total ram usage:        5 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; Hardware stack levels required when called: 4
  3989 ;; This function calls:
  3990 ;;		_ReadByteSPIPort
  3991 ;;		_SetCSPin
  3992 ;;		_Write2ByteSPIPort
  3993 ;; This function is called by:
  3994 ;;		_InicializoMRF24
  3995 ;;		_MRF24ReciboPaquete
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text21
  4000   00195C                     __ptext21:
  4001                           	callstack 0
  4002   00195C                     _GetLongAddr:
  4003                           	callstack 25
  4004   00195C                     
  4005                           ;drivers/scr/API_MRF24J40.c: 256:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 257:  
      +                          reg_address = (reg_address << (0X05)) | (0X8000);
  4006   00195C  C006  F008         	movff	GetLongAddr@reg_address,??_GetLongAddr
  4007   001960  C007  F009         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  4008   001964  0E05               	movlw	5
  4009   001966                     u595:
  4010   001966  90D8               	bcf	status,0,c
  4011   001968  3608               	rlcf	??_GetLongAddr^0,f,c
  4012   00196A  3609               	rlcf	(??_GetLongAddr+1)^0,f,c
  4013   00196C  2EE8               	decfsz	wreg,f,c
  4014   00196E  EFB3  F00C         	goto	u595
  4015   001972  0E00               	movlw	0
  4016   001974  1008               	iorwf	??_GetLongAddr^0,w,c
  4017   001976  6E06               	movwf	GetLongAddr@reg_address^0,c
  4018   001978  0E80               	movlw	128
  4019   00197A  1009               	iorwf	(??_GetLongAddr+1)^0,w,c
  4020   00197C  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  4021   00197E                     
  4022                           ;drivers/scr/API_MRF24J40.c: 258:  SetCSPin(0);
  4023   00197E  0E00               	movlw	0
  4024   001980  EC9C  F00E         	call	_SetCSPin
  4025   001984                     
  4026                           ;drivers/scr/API_MRF24J40.c: 259:  Write2ByteSPIPort(reg_address);
  4027   001984  C006  F004         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  4028   001988  C007  F005         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  4029   00198C  EC8E  F00E         	call	_Write2ByteSPIPort	;wreg free
  4030   001990                     
  4031                           ;drivers/scr/API_MRF24J40.c: 260:  respuesta = ReadByteSPIPort();
  4032   001990  ECAF  F00E         	call	_ReadByteSPIPort	;wreg free
  4033   001994  6E0A               	movwf	GetLongAddr@respuesta^0,c
  4034   001996                     
  4035                           ;drivers/scr/API_MRF24J40.c: 261:  SetCSPin(1);
  4036   001996  0E01               	movlw	1
  4037   001998  EC9C  F00E         	call	_SetCSPin
  4038   00199C                     
  4039                           ;drivers/scr/API_MRF24J40.c: 262:  return respuesta;
  4040   00199C  500A               	movf	GetLongAddr@respuesta^0,w,c
  4041   00199E  0012               	return		;funcret
  4042   0019A0                     __end_of_GetLongAddr:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function _Write2ByteSPIPort *****************
  4046 ;; Defined at:
  4047 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  dato            2    3[COMRAM] unsigned short 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;		None
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  1    wreg      void 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4061 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4064 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;Total ram usage:        2 bytes
  4066 ;; Hardware stack levels used: 1
  4067 ;; Hardware stack levels required when called: 3
  4068 ;; This function calls:
  4069 ;;		_SPIWrite2Byte
  4070 ;; This function is called by:
  4071 ;;		_SetLongAddr
  4072 ;;		_GetLongAddr
  4073 ;; This function uses a non-reentrant model
  4074 ;;
  4075                           
  4076                           	psect	text22
  4077   001D1C                     __ptext22:
  4078                           	callstack 0
  4079   001D1C                     _Write2ByteSPIPort:
  4080                           	callstack 25
  4081   001D1C                     
  4082                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  4083   001D1C  C004  F002         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  4084   001D20  C005  F003         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  4085   001D24  EC95  F00E         	call	_SPIWrite2Byte	;wreg free
  4086   001D28  0012               	return		;funcret
  4087   001D2A                     __end_of_Write2ByteSPIPort:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function _SPIWrite2Byte *****************
  4091 ;; Defined at:
  4092 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;  dato            2    1[COMRAM] unsigned short 
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, status,2, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;Total ram usage:        2 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 2
  4113 ;; This function calls:
  4114 ;;		_SPIWriteByte
  4115 ;; This function is called by:
  4116 ;;		_Write2ByteSPIPort
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text23
  4121   001D2A                     __ptext23:
  4122                           	callstack 0
  4123   001D2A                     _SPIWrite2Byte:
  4124                           	callstack 25
  4125   001D2A                     
  4126                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  4127   001D2A  5003               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  4128   001D2C  EC49  F00E         	call	_SPIWriteByte
  4129                           
  4130                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  4131   001D30  5002               	movf	SPIWrite2Byte@dato^0,w,c
  4132   001D32  EC49  F00E         	call	_SPIWriteByte
  4133   001D36  0012               	return		;funcret
  4134   001D38                     __end_of_SPIWrite2Byte:
  4135                           	callstack 0
  4136                           
  4137 ;; *************** function _SPIWriteByte *****************
  4138 ;; Defined at:
  4139 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  dato            1    wreg     unsigned char 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  dato            1    0[COMRAM] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      void 
  4146 ;; Registers used:
  4147 ;;		wreg
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;Total ram usage:        1 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; Hardware stack levels required when called: 1
  4160 ;; This function calls:
  4161 ;;		Nothing
  4162 ;; This function is called by:
  4163 ;;		_WriteByteSPIPort
  4164 ;;		_SPIWrite2Byte
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text24
  4169   001C92                     __ptext24:
  4170                           	callstack 0
  4171   001C92                     _SPIWriteByte:
  4172                           	callstack 26
  4173                           
  4174                           ;incstack = 0
  4175                           ;SPIWriteByte@dato stored from wreg
  4176   001C92  6E01               	movwf	SPIWriteByte@dato^0,c
  4177   001C94                     
  4178                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  4179   001C94  969E               	bcf	158,3,c	;volatile
  4180   001C96                     
  4181                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  4182   001C96  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  4183   001C9A                     l198:
  4184   001C9A  A69E               	btfss	158,3,c	;volatile
  4185   001C9C  EF52  F00E         	goto	u521
  4186   001CA0  EF54  F00E         	goto	u520
  4187   001CA4                     u521:
  4188   001CA4  EF4D  F00E         	goto	l198
  4189   001CA8                     u520:
  4190   001CA8  0012               	return		;funcret
  4191   001CAA                     __end_of_SPIWriteByte:
  4192                           	callstack 0
  4193                           
  4194 ;; *************** function _SetCSPin *****************
  4195 ;; Defined at:
  4196 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  estado          1    wreg     _Bool 
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;  estado          1    0[COMRAM] _Bool 
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      void 
  4203 ;; Registers used:
  4204 ;;		wreg
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        1 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 1
  4217 ;; This function calls:
  4218 ;;		Nothing
  4219 ;; This function is called by:
  4220 ;;		_InicializoPines
  4221 ;;		_SetShortAddr
  4222 ;;		_GetShortAddr
  4223 ;;		_SetLongAddr
  4224 ;;		_GetLongAddr
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text25
  4229   001D38                     __ptext25:
  4230                           	callstack 0
  4231   001D38                     _SetCSPin:
  4232                           	callstack 27
  4233                           
  4234                           ;incstack = 0
  4235                           ;SetCSPin@estado stored from wreg
  4236   001D38  6E01               	movwf	SetCSPin@estado^0,c
  4237   001D3A                     
  4238                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  4239   001D3A  B001               	btfsc	SetCSPin@estado^0,0,c
  4240   001D3C  D002               	bra	u535
  4241   001D3E  9C8B               	bcf	139,6,c	;volatile
  4242   001D40  D001               	bra	u536
  4243   001D42                     u535:
  4244   001D42  8C8B               	bsf	139,6,c	;volatile
  4245   001D44                     u536:
  4246   001D44  0012               	return		;funcret
  4247   001D46                     __end_of_SetCSPin:
  4248                           	callstack 0
  4249                           
  4250 ;; *************** function _ReadByteSPIPort *****************
  4251 ;; Defined at:
  4252 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;		None
  4255 ;; Auto vars:     Size  Location     Type
  4256 ;;		None
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  1    wreg      unsigned char 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, cstack
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;Total ram usage:        0 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; Hardware stack levels required when called: 2
  4273 ;; This function calls:
  4274 ;;		_SPIRead
  4275 ;; This function is called by:
  4276 ;;		_GetShortAddr
  4277 ;;		_GetLongAddr
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text26
  4282   001D5E                     __ptext26:
  4283                           	callstack 0
  4284   001D5E                     _ReadByteSPIPort:
  4285                           	callstack 26
  4286   001D5E                     
  4287                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  4288   001D5E  EC61  F00E         	call	_SPIRead	;wreg free
  4289   001D62  0012               	return		;funcret
  4290   001D64                     __end_of_ReadByteSPIPort:
  4291                           	callstack 0
  4292                           
  4293 ;; *************** function _SPIRead *****************
  4294 ;; Defined at:
  4295 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;		None
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      unsigned char 
  4302 ;; Registers used:
  4303 ;;		wreg, status,2
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;Total ram usage:        0 bytes
  4314 ;; Hardware stack levels used: 1
  4315 ;; Hardware stack levels required when called: 1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_ReadByteSPIPort
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text27
  4324   001CC2                     __ptext27:
  4325                           	callstack 0
  4326   001CC2                     _SPIRead:
  4327                           	callstack 26
  4328   001CC2                     
  4329                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  4330   001CC2  9EC6               	bcf	198,7,c	;volatile
  4331                           
  4332                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  4333   001CC4  6AC9               	clrf	201,c	;volatile
  4334   001CC6                     l207:
  4335   001CC6  A0C7               	btfss	199,0,c	;volatile
  4336   001CC8  EF68  F00E         	goto	u541
  4337   001CCC  EF6A  F00E         	goto	u540
  4338   001CD0                     u541:
  4339   001CD0  EF63  F00E         	goto	l207
  4340   001CD4                     u540:
  4341   001CD4                     
  4342                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  4343   001CD4  50C9               	movf	201,w,c	;volatile
  4344   001CD6  0012               	return		;funcret
  4345   001CD8                     __end_of_SPIRead:
  4346                           	callstack 0
  4347                           
  4348 ;; *************** function _DelayReset *****************
  4349 ;; Defined at:
  4350 ;;		line 68 in file "drivers/scr/API_delay.c"
  4351 ;; Parameters:    Size  Location     Type
  4352 ;;  delay           1    0[COMRAM] PTR struct .
  4353 ;;		 -> InicializoMRF24@delay_time_out(9), 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;		None
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  1    wreg      void 
  4358 ;; Registers used:
  4359 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4365 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;Total ram usage:        1 bytes
  4370 ;; Hardware stack levels used: 1
  4371 ;; Hardware stack levels required when called: 1
  4372 ;; This function calls:
  4373 ;;		Nothing
  4374 ;; This function is called by:
  4375 ;;		_InicializoMRF24
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           	psect	text28
  4380   001C10                     __ptext28:
  4381                           	callstack 0
  4382   001C10                     _DelayReset:
  4383                           	callstack 27
  4384   001C10                     
  4385                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  4386   001C10  5001               	movf	DelayReset@delay^0,w,c
  4387   001C12  6ED9               	movwf	fsr2l,c
  4388   001C14  6ADA               	clrf	fsr2h,c
  4389   001C16  C037  FFDE         	movff	_timeStamp,postinc2
  4390   001C1A  C038  FFDE         	movff	_timeStamp+1,postinc2
  4391   001C1E  C039  FFDE         	movff	_timeStamp+2,postinc2
  4392   001C22  C03A  FFDE         	movff	_timeStamp+3,postinc2
  4393   001C26                     
  4394                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  4395   001C26  5001               	movf	DelayReset@delay^0,w,c
  4396   001C28  6ED9               	movwf	fsr2l,c
  4397   001C2A  6ADA               	clrf	fsr2h,c
  4398   001C2C  0E08               	movlw	8
  4399   001C2E  26D9               	addwf	fsr2l,f,c
  4400   001C30  0E01               	movlw	1
  4401   001C32  6EDF               	movwf	indf2,c
  4402   001C34  0012               	return		;funcret
  4403   001C36                     __end_of_DelayReset:
  4404                           	callstack 0
  4405                           
  4406 ;; *************** function _MRF24IsNewMsg *****************
  4407 ;; Defined at:
  4408 ;;		line 403 in file "drivers/scr/API_MRF24J40.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;		None
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      enum E3264
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, cstack
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;Total ram usage:        0 bytes
  4427 ;; Hardware stack levels used: 1
  4428 ;; Hardware stack levels required when called: 2
  4429 ;; This function calls:
  4430 ;;		_IsMRF24Interrup
  4431 ;; This function is called by:
  4432 ;;		_main
  4433 ;; This function uses a non-reentrant model
  4434 ;;
  4435                           
  4436                           	psect	text29
  4437   001B0A                     __ptext29:
  4438                           	callstack 0
  4439   001B0A                     _MRF24IsNewMsg:
  4440                           	callstack 28
  4441   001B0A                     
  4442                           ;drivers/scr/API_MRF24J40.c: 405:  if(estadoActual != INICIALIZACION_OK)
  4443   001B0A  503B               	movf	_estadoActual^0,w,c
  4444   001B0C  B4D8               	btfsc	status,2,c
  4445   001B0E  EF8B  F00D         	goto	u261
  4446   001B12  EF8D  F00D         	goto	u260
  4447   001B16                     u261:
  4448   001B16  EF90  F00D         	goto	l1482
  4449   001B1A                     u260:
  4450   001B1A                     
  4451                           ;drivers/scr/API_MRF24J40.c: 406:   return ERROR_INESPERADO;
  4452   001B1A  0E09               	movlw	9
  4453   001B1C  EF9E  F00D         	goto	l161
  4454   001B20                     l1482:
  4455                           
  4456                           ;drivers/scr/API_MRF24J40.c: 408:  if(!IsMRF24Interrup())
  4457   001B20  EC76  F00E         	call	_IsMRF24Interrup	;wreg free
  4458   001B24  0900               	iorlw	0
  4459   001B26  A4D8               	btfss	status,2,c
  4460   001B28  EF98  F00D         	goto	u271
  4461   001B2C  EF9A  F00D         	goto	u270
  4462   001B30                     u271:
  4463   001B30  EF9D  F00D         	goto	l1488
  4464   001B34                     u270:
  4465   001B34                     
  4466                           ;drivers/scr/API_MRF24J40.c: 409:   return MSG_PRESENTE;
  4467   001B34  0E03               	movlw	3
  4468   001B36  EF9E  F00D         	goto	l161
  4469   001B3A                     l1488:
  4470                           
  4471                           ;drivers/scr/API_MRF24J40.c: 410:  return MSG_NO_PRESENTE;
  4472   001B3A  0E04               	movlw	4
  4473   001B3C                     l161:
  4474   001B3C  0012               	return		;funcret
  4475   001B3E                     __end_of_MRF24IsNewMsg:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _IsMRF24Interrup *****************
  4479 ;; Defined at:
  4480 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;		None
  4483 ;; Auto vars:     Size  Location     Type
  4484 ;;		None
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      _Bool 
  4487 ;; Registers used:
  4488 ;;		wreg
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;Total ram usage:        0 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 1
  4501 ;; This function calls:
  4502 ;;		Nothing
  4503 ;; This function is called by:
  4504 ;;		_MRF24IsNewMsg
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text30
  4509   001CEC                     __ptext30:
  4510                           	callstack 0
  4511   001CEC                     _IsMRF24Interrup:
  4512                           	callstack 28
  4513   001CEC                     
  4514                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  4515   001CEC  B081               	btfsc	129,0,c	;volatile
  4516   001CEE  EF7B  F00E         	goto	u111
  4517   001CF2  EF7E  F00E         	goto	u110
  4518   001CF6                     u111:
  4519   001CF6  0E01               	movlw	1
  4520   001CF8  EF7F  F00E         	goto	u116
  4521   001CFC                     u110:
  4522   001CFC  0E00               	movlw	0
  4523   001CFE                     u116:
  4524   001CFE  0012               	return		;funcret
  4525   001D00                     __end_of_IsMRF24Interrup:
  4526                           	callstack 0
  4527                           
  4528 ;; *************** function _MRF24GetMensajeEntrada *****************
  4529 ;; Defined at:
  4530 ;;		line 442 in file "drivers/scr/API_MRF24J40.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;		None
  4535 ;; Return value:  Size  Location     Type
  4536 ;;                  1    0[COMRAM] PTR unsigned char 
  4537 ;; Registers used:
  4538 ;;		wreg, status,2, status,0
  4539 ;; Tracked objects:
  4540 ;;		On entry : 0/0
  4541 ;;		On exit  : 0/0
  4542 ;;		Unchanged: 0/0
  4543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4544 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;Total ram usage:        2 bytes
  4549 ;; Hardware stack levels used: 1
  4550 ;; Hardware stack levels required when called: 1
  4551 ;; This function calls:
  4552 ;;		Nothing
  4553 ;; This function is called by:
  4554 ;;		_main
  4555 ;; This function uses a non-reentrant model
  4556 ;;
  4557                           
  4558                           	psect	text31
  4559   001D64                     __ptext31:
  4560                           	callstack 0
  4561   001D64                     _MRF24GetMensajeEntrada:
  4562                           	callstack 29
  4563   001D64                     
  4564                           ;drivers/scr/API_MRF24J40.c: 444:  return mrf24_data_in_s.buffer_entrada;
  4565   001D64  0E82               	movlw	_mrf24_data_in_s& (0+255)
  4566   001D66  0F06               	addlw	6
  4567   001D68  0012               	return		;funcret
  4568   001D6A                     __end_of_MRF24GetMensajeEntrada:
  4569                           	callstack 0
  4570                           
  4571 ;; *************** function _DebounceFSMUpdate *****************
  4572 ;; Defined at:
  4573 ;;		line 34 in file "drivers/scr/API_debounce.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;  antirrebote_    1   14[COMRAM] PTR struct .
  4576 ;;		 -> main@boton1(11), 
  4577 ;;  estado_pin      1   15[COMRAM] _Bool 
  4578 ;; Auto vars:     Size  Location     Type
  4579 ;;		None
  4580 ;; Return value:  Size  Location     Type
  4581 ;;                  1    wreg      enum E2763
  4582 ;; Registers used:
  4583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4584 ;; Tracked objects:
  4585 ;;		On entry : 0/0
  4586 ;;		On exit  : 0/0
  4587 ;;		Unchanged: 0/0
  4588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4589 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4591 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4592 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4593 ;;Total ram usage:        4 bytes
  4594 ;; Hardware stack levels used: 1
  4595 ;; Hardware stack levels required when called: 3
  4596 ;; This function calls:
  4597 ;;		_DebounceFSMInit
  4598 ;;		_DelayRead
  4599 ;; This function is called by:
  4600 ;;		_main
  4601 ;; This function uses a non-reentrant model
  4602 ;;
  4603                           
  4604                           	psect	text32
  4605   001542                     __ptext32:
  4606                           	callstack 0
  4607   001542                     _DebounceFSMUpdate:
  4608                           	callstack 27
  4609   001542                     
  4610                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  4611   001542  EF1B  F00B         	goto	l2138
  4612   001546                     l2086:
  4613                           
  4614                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  4615   001546  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4616   001548  A4D8               	btfss	status,2,c
  4617   00154A  EFA9  F00A         	goto	u761
  4618   00154E  EFAB  F00A         	goto	u760
  4619   001552                     u761:
  4620   001552  EF3D  F00B         	goto	l2140
  4621   001556                     u760:
  4622   001556                     
  4623                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  4624   001556  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4625   001558  6ED9               	movwf	fsr2l,c
  4626   00155A  6ADA               	clrf	fsr2h,c
  4627   00155C  0E01               	movlw	1
  4628   00155E  26D9               	addwf	fsr2l,f,c
  4629   001560  0E01               	movlw	1
  4630   001562  6EDF               	movwf	indf2,c
  4631   001564  EF3D  F00B         	goto	l2140
  4632   001568                     l2090:
  4633                           
  4634                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4635   001568  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4636   00156A  0F02               	addlw	2
  4637   00156C  6E02               	movwf	DelayRead@delay^0,c
  4638   00156E  ECA1  F00B         	call	_DelayRead	;wreg free
  4639   001572  0900               	iorlw	0
  4640   001574  B4D8               	btfsc	status,2,c
  4641   001576  EFBF  F00A         	goto	u771
  4642   00157A  EFC1  F00A         	goto	u770
  4643   00157E                     u771:
  4644   00157E  EF3D  F00B         	goto	l2140
  4645   001582                     u770:
  4646   001582                     
  4647                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  4648   001582  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4649   001584  A4D8               	btfss	status,2,c
  4650   001586  EFC7  F00A         	goto	u781
  4651   00158A  EFC9  F00A         	goto	u780
  4652   00158E                     u781:
  4653   00158E  EFD3  F00A         	goto	l2102
  4654   001592                     u780:
  4655   001592                     
  4656                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4657   001592  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4658   001594  6ED9               	movwf	fsr2l,c
  4659   001596  6ADA               	clrf	fsr2h,c
  4660   001598  0E01               	movlw	1
  4661   00159A  26D9               	addwf	fsr2l,f,c
  4662   00159C  0E02               	movlw	2
  4663   00159E  6EDF               	movwf	indf2,c
  4664   0015A0                     
  4665                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  4666   0015A0  0E01               	movlw	1
  4667   0015A2  EF3E  F00B         	goto	l249
  4668   0015A6                     l2102:
  4669                           
  4670                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4671   0015A6  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4672   0015A8  6ED9               	movwf	fsr2l,c
  4673   0015AA  6ADA               	clrf	fsr2h,c
  4674   0015AC  0E01               	movlw	1
  4675   0015AE  26D9               	addwf	fsr2l,f,c
  4676   0015B0  6ADF               	clrf	indf2,c
  4677   0015B2                     l2104:
  4678                           
  4679                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  4680   0015B2  0E04               	movlw	4
  4681   0015B4  EF3E  F00B         	goto	l249
  4682   0015B8                     l2108:
  4683                           
  4684                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4685   0015B8  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4686   0015BA  0F02               	addlw	2
  4687   0015BC  6E02               	movwf	DelayRead@delay^0,c
  4688   0015BE  ECA1  F00B         	call	_DelayRead	;wreg free
  4689   0015C2  0900               	iorlw	0
  4690   0015C4  B4D8               	btfsc	status,2,c
  4691   0015C6  EFE7  F00A         	goto	u791
  4692   0015CA  EFE9  F00A         	goto	u790
  4693   0015CE                     u791:
  4694   0015CE  EF3D  F00B         	goto	l2140
  4695   0015D2                     u790:
  4696   0015D2                     
  4697                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  4698   0015D2  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4699   0015D4  B4D8               	btfsc	status,2,c
  4700   0015D6  EFEF  F00A         	goto	u801
  4701   0015DA  EFF1  F00A         	goto	u800
  4702   0015DE                     u801:
  4703   0015DE  EFFA  F00A         	goto	l2120
  4704   0015E2                     u800:
  4705   0015E2                     
  4706                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4707   0015E2  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4708   0015E4  6ED9               	movwf	fsr2l,c
  4709   0015E6  6ADA               	clrf	fsr2h,c
  4710   0015E8  0E01               	movlw	1
  4711   0015EA  26D9               	addwf	fsr2l,f,c
  4712   0015EC  6ADF               	clrf	indf2,c
  4713   0015EE                     
  4714                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  4715   0015EE  0E02               	movlw	2
  4716   0015F0  EF3E  F00B         	goto	l249
  4717   0015F4                     l2120:
  4718                           
  4719                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4720   0015F4  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4721   0015F6  6ED9               	movwf	fsr2l,c
  4722   0015F8  6ADA               	clrf	fsr2h,c
  4723   0015FA  0E01               	movlw	1
  4724   0015FC  26D9               	addwf	fsr2l,f,c
  4725   0015FE  0E02               	movlw	2
  4726   001600  6EDF               	movwf	indf2,c
  4727   001602  EFD9  F00A         	goto	l2104
  4728   001606                     l2126:
  4729                           
  4730                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  4731   001606  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4732   001608  B4D8               	btfsc	status,2,c
  4733   00160A  EF09  F00B         	goto	u811
  4734   00160E  EF0B  F00B         	goto	u810
  4735   001612                     u811:
  4736   001612  EF3D  F00B         	goto	l2140
  4737   001616                     u810:
  4738   001616                     
  4739                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  4740   001616  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4741   001618  6ED9               	movwf	fsr2l,c
  4742   00161A  6ADA               	clrf	fsr2h,c
  4743   00161C  0E01               	movlw	1
  4744   00161E  26D9               	addwf	fsr2l,f,c
  4745   001620  0E03               	movlw	3
  4746   001622  6EDF               	movwf	indf2,c
  4747   001624  EF3D  F00B         	goto	l2140
  4748   001628                     l2130:
  4749                           
  4750                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  4751   001628  C00F  F006         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  4752   00162C  EC9F  F00D         	call	_DebounceFSMInit	;wreg free
  4753   001630                     
  4754                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  4755   001630  0E00               	movlw	0
  4756   001632  EF3E  F00B         	goto	l249
  4757   001636                     l2138:
  4758   001636  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4759   001638  6ED9               	movwf	fsr2l,c
  4760   00163A  6ADA               	clrf	fsr2h,c
  4761   00163C  0E01               	movlw	1
  4762   00163E  26D9               	addwf	fsr2l,f,c
  4763   001640  50DF               	movf	indf2,w,c
  4764   001642  6E11               	movwf	??_DebounceFSMUpdate^0,c
  4765   001644  6A12               	clrf	(??_DebounceFSMUpdate+1)^0,c
  4766                           
  4767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4768                           ; Switch size 1, requested type "simple"
  4769                           ; Number of cases is 1, Range of values is 0 to 0
  4770                           ; switch strategies available:
  4771                           ; Name         Instructions Cycles
  4772                           ; simple_byte            4     3 (average)
  4773                           ;	Chosen strategy is simple_byte
  4774   001646  5012               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  4775   001648  0A00               	xorlw	0	; case 0
  4776   00164A  B4D8               	btfsc	status,2,c
  4777   00164C  EF2A  F00B         	goto	l2280
  4778   001650  EF14  F00B         	goto	l2130
  4779   001654                     l2280:
  4780                           
  4781                           ; Switch size 1, requested type "simple"
  4782                           ; Number of cases is 4, Range of values is 0 to 3
  4783                           ; switch strategies available:
  4784                           ; Name         Instructions Cycles
  4785                           ; simple_byte           13     7 (average)
  4786                           ;	Chosen strategy is simple_byte
  4787   001654  5011               	movf	??_DebounceFSMUpdate^0,w,c
  4788   001656  0A00               	xorlw	0	; case 0
  4789   001658  B4D8               	btfsc	status,2,c
  4790   00165A  EFA3  F00A         	goto	l2086
  4791   00165E  0A01               	xorlw	1	; case 1
  4792   001660  B4D8               	btfsc	status,2,c
  4793   001662  EFB4  F00A         	goto	l2090
  4794   001666  0A03               	xorlw	3	; case 2
  4795   001668  B4D8               	btfsc	status,2,c
  4796   00166A  EF03  F00B         	goto	l2126
  4797   00166E  0A01               	xorlw	1	; case 3
  4798   001670  B4D8               	btfsc	status,2,c
  4799   001672  EFDC  F00A         	goto	l2108
  4800   001676  EF14  F00B         	goto	l2130
  4801   00167A                     l2140:
  4802                           
  4803                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  4804   00167A  0E03               	movlw	3
  4805   00167C                     l249:
  4806   00167C  0012               	return		;funcret
  4807   00167E                     __end_of_DebounceFSMUpdate:
  4808                           	callstack 0
  4809                           
  4810 ;; *************** function _DelayRead *****************
  4811 ;; Defined at:
  4812 ;;		line 34 in file "drivers/scr/API_delay.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  delay           1    1[COMRAM] PTR struct .
  4815 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      _Bool 
  4820 ;; Registers used:
  4821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4827 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;Total ram usage:       13 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 2
  4834 ;; This function calls:
  4835 ;;		_DelayIsRunning
  4836 ;; This function is called by:
  4837 ;;		_InicializoMRF24
  4838 ;;		_DebounceFSMUpdate
  4839 ;;		_main
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text33
  4844   001742                     __ptext33:
  4845                           	callstack 0
  4846   001742                     _DelayRead:
  4847                           	callstack 26
  4848   001742                     
  4849                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  4850   001742  C002  F001         	movff	DelayRead@delay,DelayIsRunning@delay
  4851   001746  ECA3  F00E         	call	_DelayIsRunning	;wreg free
  4852   00174A  0900               	iorlw	0
  4853   00174C  A4D8               	btfss	status,2,c
  4854   00174E  EFAB  F00B         	goto	u561
  4855   001752  EFAD  F00B         	goto	u560
  4856   001756                     u561:
  4857   001756  EFC1  F00B         	goto	l1798
  4858   00175A                     u560:
  4859   00175A                     
  4860                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  4861   00175A  5002               	movf	DelayRead@delay^0,w,c
  4862   00175C  6ED9               	movwf	fsr2l,c
  4863   00175E  6ADA               	clrf	fsr2h,c
  4864   001760  C037  FFDE         	movff	_timeStamp,postinc2
  4865   001764  C038  FFDE         	movff	_timeStamp+1,postinc2
  4866   001768  C039  FFDE         	movff	_timeStamp+2,postinc2
  4867   00176C  C03A  FFDE         	movff	_timeStamp+3,postinc2
  4868   001770                     
  4869                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  4870   001770  5002               	movf	DelayRead@delay^0,w,c
  4871   001772  6ED9               	movwf	fsr2l,c
  4872   001774  6ADA               	clrf	fsr2h,c
  4873   001776  0E08               	movlw	8
  4874   001778  26D9               	addwf	fsr2l,f,c
  4875   00177A  0E01               	movlw	1
  4876   00177C  6EDF               	movwf	indf2,c
  4877                           
  4878                           ;drivers/scr/API_delay.c: 40:  } else {
  4879   00177E  EFF5  F00B         	goto	l1806
  4880   001782                     l1798:
  4881                           
  4882                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  4883   001782  5002               	movf	DelayRead@delay^0,w,c
  4884   001784  6ED9               	movwf	fsr2l,c
  4885   001786  6ADA               	clrf	fsr2h,c
  4886   001788  0E04               	movlw	4
  4887   00178A  26D9               	addwf	fsr2l,f,c
  4888   00178C  5002               	movf	DelayRead@delay^0,w,c
  4889   00178E  6EE1               	movwf	fsr1l,c
  4890   001790  6AE2               	clrf	fsr1h,c
  4891   001792  CFE6 F007          	movff	postinc1,??_DelayRead+4
  4892   001796  CFE6 F008          	movff	postinc1,??_DelayRead+5
  4893   00179A  CFE6 F009          	movff	postinc1,??_DelayRead+6
  4894   00179E  CFE6 F00A          	movff	postinc1,??_DelayRead+7
  4895   0017A2  5007               	movf	(??_DelayRead+4)^0,w,c
  4896   0017A4  5C37               	subwf	_timeStamp^0,w,c
  4897   0017A6  6E0B               	movwf	(??_DelayRead+8)^0,c
  4898   0017A8  5008               	movf	(??_DelayRead+5)^0,w,c
  4899   0017AA  5838               	subwfb	(_timeStamp+1)^0,w,c
  4900   0017AC  6E0C               	movwf	(??_DelayRead+9)^0,c
  4901   0017AE  5009               	movf	(??_DelayRead+6)^0,w,c
  4902   0017B0  5839               	subwfb	(_timeStamp+2)^0,w,c
  4903   0017B2  6E0D               	movwf	(??_DelayRead+10)^0,c
  4904   0017B4  500A               	movf	(??_DelayRead+7)^0,w,c
  4905   0017B6  583A               	subwfb	(_timeStamp+3)^0,w,c
  4906   0017B8  6E0E               	movwf	(??_DelayRead+11)^0,c
  4907   0017BA  50DE               	movf	postinc2,w,c
  4908   0017BC  5C0B               	subwf	(??_DelayRead+8)^0,w,c
  4909   0017BE  50DE               	movf	postinc2,w,c
  4910   0017C0  580C               	subwfb	(??_DelayRead+9)^0,w,c
  4911   0017C2  50DE               	movf	postinc2,w,c
  4912   0017C4  580D               	subwfb	(??_DelayRead+10)^0,w,c
  4913   0017C6  50DE               	movf	postinc2,w,c
  4914   0017C8  580E               	subwfb	(??_DelayRead+11)^0,w,c
  4915   0017CA  A0D8               	btfss	status,0,c
  4916   0017CC  EFEA  F00B         	goto	u571
  4917   0017D0  EFEC  F00B         	goto	u570
  4918   0017D4                     u571:
  4919   0017D4  EFF5  F00B         	goto	l1806
  4920   0017D8                     u570:
  4921   0017D8                     
  4922                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  4923   0017D8  5002               	movf	DelayRead@delay^0,w,c
  4924   0017DA  6ED9               	movwf	fsr2l,c
  4925   0017DC  6ADA               	clrf	fsr2h,c
  4926   0017DE  0E08               	movlw	8
  4927   0017E0  26D9               	addwf	fsr2l,f,c
  4928   0017E2  6ADF               	clrf	indf2,c
  4929   0017E4                     
  4930                           ;drivers/scr/API_delay.c: 45:    return 1;
  4931   0017E4  0E01               	movlw	1
  4932   0017E6  EFF6  F00B         	goto	l223
  4933   0017EA                     l1806:
  4934                           
  4935                           ;drivers/scr/API_delay.c: 48:  return 0;
  4936   0017EA  0E00               	movlw	0
  4937   0017EC                     l223:
  4938   0017EC  0012               	return		;funcret
  4939   0017EE                     __end_of_DelayRead:
  4940                           	callstack 0
  4941                           
  4942 ;; *************** function _DelayIsRunning *****************
  4943 ;; Defined at:
  4944 ;;		line 83 in file "drivers/scr/API_delay.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  delay           1    0[COMRAM] PTR struct .
  4947 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      _Bool 
  4952 ;; Registers used:
  4953 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4959 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;Total ram usage:        1 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; Hardware stack levels required when called: 1
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_DelayRead
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text34
  4974   001D46                     __ptext34:
  4975                           	callstack 0
  4976   001D46                     _DelayIsRunning:
  4977                           	callstack 26
  4978   001D46                     
  4979                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  4980   001D46  5001               	movf	DelayIsRunning@delay^0,w,c
  4981   001D48  6ED9               	movwf	fsr2l,c
  4982   001D4A  6ADA               	clrf	fsr2h,c
  4983   001D4C  0E08               	movlw	8
  4984   001D4E  26D9               	addwf	fsr2l,f,c
  4985   001D50  50DF               	movf	indf2,w,c
  4986   001D52  0012               	return		;funcret
  4987   001D54                     __end_of_DelayIsRunning:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _DebounceFSMInit *****************
  4991 ;; Defined at:
  4992 ;;		line 19 in file "drivers/scr/API_debounce.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  antirrebote_    1    5[COMRAM] PTR struct .
  4995 ;;		 -> main@boton1(11), 
  4996 ;; Auto vars:     Size  Location     Type
  4997 ;;		None
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      void 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5007 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;Total ram usage:        1 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; Hardware stack levels required when called: 2
  5014 ;; This function calls:
  5015 ;;		_DelayInit
  5016 ;; This function is called by:
  5017 ;;		_DebounceFSMUpdate
  5018 ;;		_main
  5019 ;; This function uses a non-reentrant model
  5020 ;;
  5021                           
  5022                           	psect	text35
  5023   001B3E                     __ptext35:
  5024                           	callstack 0
  5025   001B3E                     _DebounceFSMInit:
  5026                           	callstack 27
  5027   001B3E                     
  5028                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  5029   001B3E  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5030   001B40  6ED9               	movwf	fsr2l,c
  5031   001B42  6ADA               	clrf	fsr2h,c
  5032   001B44  0E01               	movlw	1
  5033   001B46  26D9               	addwf	fsr2l,f,c
  5034   001B48  6ADF               	clrf	indf2,c
  5035   001B4A                     
  5036                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  5037   001B4A  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5038   001B4C  0F02               	addlw	2
  5039   001B4E  6E01               	movwf	DelayInit@delay^0,c
  5040   001B50  0E28               	movlw	40
  5041   001B52  6E02               	movwf	DelayInit@duration^0,c
  5042   001B54  0E00               	movlw	0
  5043   001B56  6E03               	movwf	(DelayInit@duration+1)^0,c
  5044   001B58  0E00               	movlw	0
  5045   001B5A  6E04               	movwf	(DelayInit@duration+2)^0,c
  5046   001B5C  0E00               	movlw	0
  5047   001B5E  6E05               	movwf	(DelayInit@duration+3)^0,c
  5048   001B60  ECCE  F00D         	call	_DelayInit	;wreg free
  5049   001B64                     
  5050                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  5051   001B64  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5052   001B66  6ED9               	movwf	fsr2l,c
  5053   001B68  6ADA               	clrf	fsr2h,c
  5054   001B6A  6ADF               	clrf	indf2,c
  5055   001B6C  0012               	return		;funcret
  5056   001B6E                     __end_of_DebounceFSMInit:
  5057                           	callstack 0
  5058                           
  5059 ;; *************** function _DelayInit *****************
  5060 ;; Defined at:
  5061 ;;		line 22 in file "drivers/scr/API_delay.c"
  5062 ;; Parameters:    Size  Location     Type
  5063 ;;  delay           1    0[COMRAM] PTR struct .
  5064 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5065 ;;  duration        4    1[COMRAM] unsigned long 
  5066 ;; Auto vars:     Size  Location     Type
  5067 ;;		None
  5068 ;; Return value:  Size  Location     Type
  5069 ;;                  1    wreg      void 
  5070 ;; Registers used:
  5071 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5072 ;; Tracked objects:
  5073 ;;		On entry : 0/0
  5074 ;;		On exit  : 0/0
  5075 ;;		Unchanged: 0/0
  5076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5077 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5081 ;;Total ram usage:        5 bytes
  5082 ;; Hardware stack levels used: 1
  5083 ;; Hardware stack levels required when called: 1
  5084 ;; This function calls:
  5085 ;;		Nothing
  5086 ;; This function is called by:
  5087 ;;		_InicializoMRF24
  5088 ;;		_DebounceFSMInit
  5089 ;;		_main
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text36
  5094   001B9C                     __ptext36:
  5095                           	callstack 0
  5096   001B9C                     _DelayInit:
  5097                           	callstack 27
  5098   001B9C                     
  5099                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  5100   001B9C  5001               	movf	DelayInit@delay^0,w,c
  5101   001B9E  6ED9               	movwf	fsr2l,c
  5102   001BA0  6ADA               	clrf	fsr2h,c
  5103   001BA2  0E04               	movlw	4
  5104   001BA4  26D9               	addwf	fsr2l,f,c
  5105   001BA6  C002  FFDE         	movff	DelayInit@duration,postinc2
  5106   001BAA  C003  FFDE         	movff	DelayInit@duration+1,postinc2
  5107   001BAE  C004  FFDE         	movff	DelayInit@duration+2,postinc2
  5108   001BB2  C005  FFDE         	movff	DelayInit@duration+3,postinc2
  5109                           
  5110                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  5111   001BB6  5001               	movf	DelayInit@delay^0,w,c
  5112   001BB8  6ED9               	movwf	fsr2l,c
  5113   001BBA  6ADA               	clrf	fsr2h,c
  5114   001BBC  0E08               	movlw	8
  5115   001BBE  26D9               	addwf	fsr2l,f,c
  5116   001BC0  6ADF               	clrf	indf2,c
  5117   001BC2  0012               	return		;funcret
  5118   001BC4                     __end_of_DelayInit:
  5119                           	callstack 0
  5120                           
  5121 ;; *************** function _BoardInit *****************
  5122 ;; Defined at:
  5123 ;;		line 21 in file "hardware_config.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;		None
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      void 
  5130 ;; Registers used:
  5131 ;;		wreg, status,2, cstack
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5141 ;;Total ram usage:        0 bytes
  5142 ;; Hardware stack levels used: 1
  5143 ;; Hardware stack levels required when called: 2
  5144 ;; This function calls:
  5145 ;;		_SPIInit
  5146 ;; This function is called by:
  5147 ;;		_main
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           	psect	text37
  5152   0018FA                     __ptext37:
  5153                           	callstack 0
  5154   0018FA                     _BoardInit:
  5155                           	callstack 28
  5156   0018FA                     
  5157                           ;hardware_config.c: 23:     PORTA = 0;
  5158   0018FA  6A80               	clrf	128,c	;volatile
  5159                           
  5160                           ;hardware_config.c: 24:     PORTB = 0;
  5161   0018FC  6A81               	clrf	129,c	;volatile
  5162                           
  5163                           ;hardware_config.c: 25:     PORTC = 0;
  5164   0018FE  6A82               	clrf	130,c	;volatile
  5165                           
  5166                           ;hardware_config.c: 26:     PORTD = 0;
  5167   001900  6A83               	clrf	131,c	;volatile
  5168                           
  5169                           ;hardware_config.c: 27:     PORTE = 0;
  5170   001902  6A84               	clrf	132,c	;volatile
  5171                           
  5172                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  5173   001904  8C93               	bsf	147,6,c	;volatile
  5174                           
  5175                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  5176   001906  8E93               	bsf	147,7,c	;volatile
  5177                           
  5178                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  5179   001908  9496               	bcf	150,2,c	;volatile
  5180                           
  5181                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  5182   00190A  9096               	bcf	150,0,c	;volatile
  5183                           
  5184                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  5185   00190C  9296               	bcf	150,1,c	;volatile
  5186                           
  5187                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  5188   00190E  8494               	bsf	148,2,c	;volatile
  5189                           
  5190                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  5191   001910  848D               	bsf	141,2,c	;volatile
  5192                           
  5193                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  5194   001912  808D               	bsf	141,0,c	;volatile
  5195                           
  5196                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  5197   001914  828D               	bsf	141,1,c	;volatile
  5198                           
  5199                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  5200   001916  8093               	bsf	147,0,c	;volatile
  5201                           
  5202                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  5203   001918  9C94               	bcf	148,6,c	;volatile
  5204                           
  5205                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  5206   00191A  9E94               	bcf	148,7,c	;volatile
  5207                           
  5208                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  5209   00191C  9895               	bcf	149,4,c	;volatile
  5210                           
  5211                           ;hardware_config.c: 45:     IPEN = 0;
  5212   00191E  9ED0               	bcf	4048,7,c	;volatile
  5213                           
  5214                           ;hardware_config.c: 46:  GIE = 1;
  5215   001920  8EF2               	bsf	4082,7,c	;volatile
  5216                           
  5217                           ;hardware_config.c: 47:  PEIE = 1;
  5218   001922  8CF2               	bsf	4082,6,c	;volatile
  5219                           
  5220                           ;hardware_config.c: 48:     INT0E = 0;
  5221   001924  98F2               	bcf	4082,4,c	;volatile
  5222                           
  5223                           ;hardware_config.c: 49:  RBIE = 0;
  5224   001926  96F2               	bcf	4082,3,c	;volatile
  5225                           
  5226                           ;hardware_config.c: 50:  T0IE = 0;
  5227   001928  9AF2               	bcf	4082,5,c	;volatile
  5228                           
  5229                           ;hardware_config.c: 51:  TMR1IE = 1;
  5230   00192A  809D               	bsf	3997,0,c	;volatile
  5231                           
  5232                           ;hardware_config.c: 52:  TMR2IE = 0;
  5233   00192C  929D               	bcf	3997,1,c	;volatile
  5234                           
  5235                           ;hardware_config.c: 53:  CCP1IE = 0;
  5236   00192E  949D               	bcf	3997,2,c	;volatile
  5237                           
  5238                           ;hardware_config.c: 54:  CCP2IE = 0;
  5239   001930  90A0               	bcf	4000,0,c	;volatile
  5240                           
  5241                           ;hardware_config.c: 55:  EEIE = 0;
  5242   001932  98A0               	bcf	4000,4,c	;volatile
  5243                           
  5244                           ;hardware_config.c: 56:  SSPIE = 0;
  5245   001934  969D               	bcf	3997,3,c	;volatile
  5246                           
  5247                           ;hardware_config.c: 57:  BCLIE = 0;
  5248   001936  96A0               	bcf	4000,3,c	;volatile
  5249                           
  5250                           ;hardware_config.c: 58:  ADIE = 0;
  5251   001938  9C9D               	bcf	3997,6,c	;volatile
  5252                           
  5253                           ;hardware_config.c: 59:  RBIE = 0;
  5254   00193A  96F2               	bcf	4082,3,c	;volatile
  5255                           
  5256                           ;hardware_config.c: 60:  RCIE = 0;
  5257   00193C  9A9D               	bcf	3997,5,c	;volatile
  5258   00193E                     
  5259                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  5260   00193E  0E72               	movlw	114
  5261   001940  6ED3               	movwf	211,c	;volatile
  5262                           
  5263                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  5264   001942  0EDF               	movlw	223
  5265   001944  6E9B               	movwf	155,c	;volatile
  5266   001946                     
  5267                           ;hardware_config.c: 63:     RBPU = 1;
  5268   001946  8EF1               	bsf	4081,7,c	;volatile
  5269   001948                     
  5270                           ;hardware_config.c: 66:     T1RD16 = 0;
  5271   001948  9ECD               	bcf	4045,7,c	;volatile
  5272   00194A                     
  5273                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  5274   00194A  88CD               	bsf	4045,4,c	;volatile
  5275   00194C                     
  5276                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  5277   00194C  8ACD               	bsf	4045,5,c	;volatile
  5278   00194E                     
  5279                           ;hardware_config.c: 69:  T1SYNC = 0;
  5280   00194E  94CD               	bcf	4045,2,c	;volatile
  5281   001950                     
  5282                           ;hardware_config.c: 70:  T1OSCEN = 0;
  5283   001950  96CD               	bcf	4045,3,c	;volatile
  5284   001952                     
  5285                           ;hardware_config.c: 71:  TMR1CS = 0;
  5286   001952  92CD               	bcf	4045,1,c	;volatile
  5287   001954                     
  5288                           ;hardware_config.c: 72:  TMR1ON = 1;
  5289   001954  80CD               	bsf	4045,0,c	;volatile
  5290   001956                     
  5291                           ;hardware_config.c: 75:     SPIInit();
  5292   001956  EC55  F00E         	call	_SPIInit	;wreg free
  5293   00195A  0012               	return		;funcret
  5294   00195C                     __end_of_BoardInit:
  5295                           	callstack 0
  5296                           
  5297 ;; *************** function _SPIInit *****************
  5298 ;; Defined at:
  5299 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;		None
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  1    wreg      void 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;Total ram usage:        0 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; Hardware stack levels required when called: 1
  5320 ;; This function calls:
  5321 ;;		Nothing
  5322 ;; This function is called by:
  5323 ;;		_BoardInit
  5324 ;; This function uses a non-reentrant model
  5325 ;;
  5326                           
  5327                           	psect	text38
  5328   001CAA                     __ptext38:
  5329                           	callstack 0
  5330   001CAA                     _SPIInit:
  5331                           	callstack 28
  5332   001CAA                     
  5333                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  5334   001CAA  9694               	bcf	148,3,c	;volatile
  5335                           
  5336                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  5337   001CAC  9A94               	bcf	148,5,c	;volatile
  5338                           
  5339                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  5340   001CAE  8894               	bsf	148,4,c	;volatile
  5341                           
  5342                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  5343   001CB0  8EC7               	bsf	199,7,c	;volatile
  5344                           
  5345                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  5346   001CB2  8CC7               	bsf	199,6,c	;volatile
  5347   001CB4                     
  5348                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  5349   001CB4  0E01               	movlw	1
  5350   001CB6  6EC6               	movwf	198,c	;volatile
  5351   001CB8                     
  5352                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  5353   001CB8  8EC6               	bsf	198,7,c	;volatile
  5354   001CBA                     
  5355                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  5356   001CBA  9CC6               	bcf	198,6,c	;volatile
  5357   001CBC                     
  5358                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  5359   001CBC  8AC6               	bsf	198,5,c	;volatile
  5360   001CBE                     
  5361                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  5362   001CBE  98C6               	bcf	198,4,c	;volatile
  5363   001CC0  0012               	return		;funcret
  5364   001CC2                     __end_of_SPIInit:
  5365                           	callstack 0
  5366                           
  5367 ;; *************** function _isr *****************
  5368 ;; Defined at:
  5369 ;;		line 5 in file "drivers/inc/interrupciones.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;Total ram usage:        0 bytes
  5388 ;; Hardware stack levels used: 1
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		Interrupt level 2
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	intcode
  5397   000008                     __pintcode:
  5398                           	callstack 0
  5399   000008                     _isr:
  5400                           	callstack 23
  5401                           
  5402                           ;incstack = 0
  5403   000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5404   00000A                     
  5405                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  5406   00000A  A09D               	btfss	3997,0,c	;volatile
  5407   00000C  EF0A  F000         	goto	i2u96_41
  5408   000010  EF0C  F000         	goto	i2u96_40
  5409   000014                     i2u96_41:
  5410   000014  EF1E  F000         	goto	i2l404
  5411   000018                     i2u96_40:
  5412   000018  A09E               	btfss	3998,0,c	;volatile
  5413   00001A  EF11  F000         	goto	i2u97_41
  5414   00001E  EF13  F000         	goto	i2u97_40
  5415   000022                     i2u97_41:
  5416   000022  EF1E  F000         	goto	i2l404
  5417   000026                     i2u97_40:
  5418   000026                     
  5419                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  5420   000026  909E               	bcf	3998,0,c	;volatile
  5421   000028                     
  5422                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  5423   000028  0EF7               	movlw	247
  5424   00002A  6ECE               	movwf	206,c	;volatile
  5425                           
  5426                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  5427   00002C  0EFD               	movlw	253
  5428   00002E  6ECF               	movwf	207,c	;volatile
  5429   000030                     
  5430                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  5431   000030  0E01               	movlw	1
  5432   000032  2637               	addwf	_timeStamp^0,f,c
  5433   000034  0E00               	movlw	0
  5434   000036  2238               	addwfc	(_timeStamp+1)^0,f,c
  5435   000038  2239               	addwfc	(_timeStamp+2)^0,f,c
  5436   00003A  223A               	addwfc	(_timeStamp+3)^0,f,c
  5437   00003C                     i2l404:
  5438   00003C  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5439   00003E  0011               	retfie		f
  5440   000040                     __end_of_isr:
  5441                           	callstack 0
  5442                           
  5443                           	psect	rparam
  5444   000001                     ___rparam_used  equ	1
  5445   000000                     ___param_bank   equ	0
  5446   000000                     __Lparam        equ	__Lrparam
  5447   000000                     __Hparam        equ	__Hrparam
  5448                           
  5449                           	psect	temp
  5450   00004B                     btemp:
  5451                           	callstack 0
  5452   00004B                     	ds	1
  5453   00004B                     int$flags       set	btemp
  5454   00004C                     wtemp8          set	btemp+1
  5455   00004C                     ttemp5          set	btemp+1
  5456   00004F                     ttemp6          set	btemp+4
  5457   000053                     ttemp7          set	btemp+8
  5458                           
  5459                           	psect	idloc
  5460                           
  5461                           ;Config register IDLOC0 @ 0x200000
  5462                           ;	unspecified, using default values
  5463   200000                     	org	2097152
  5464   200000  FF                 	db	255
  5465                           
  5466                           ;Config register IDLOC1 @ 0x200001
  5467                           ;	unspecified, using default values
  5468   200001                     	org	2097153
  5469   200001  FF                 	db	255
  5470                           
  5471                           ;Config register IDLOC2 @ 0x200002
  5472                           ;	unspecified, using default values
  5473   200002                     	org	2097154
  5474   200002  FF                 	db	255
  5475                           
  5476                           ;Config register IDLOC3 @ 0x200003
  5477                           ;	unspecified, using default values
  5478   200003                     	org	2097155
  5479   200003  FF                 	db	255
  5480                           
  5481                           ;Config register IDLOC4 @ 0x200004
  5482                           ;	unspecified, using default values
  5483   200004                     	org	2097156
  5484   200004  FF                 	db	255
  5485                           
  5486                           ;Config register IDLOC5 @ 0x200005
  5487                           ;	unspecified, using default values
  5488   200005                     	org	2097157
  5489   200005  FF                 	db	255
  5490                           
  5491                           ;Config register IDLOC6 @ 0x200006
  5492                           ;	unspecified, using default values
  5493   200006                     	org	2097158
  5494   200006  FF                 	db	255
  5495                           
  5496                           ;Config register IDLOC7 @ 0x200007
  5497                           ;	unspecified, using default values
  5498   200007                     	org	2097159
  5499   200007  FF                 	db	255
  5500                           
  5501                           	psect	config
  5502                           
  5503                           ; Padding undefined space
  5504   300000                     	org	3145728
  5505   300000  FF                 	db	255
  5506                           
  5507                           ;Config register CONFIG1H @ 0x300001
  5508                           ;	Oscillator Selection bits
  5509                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5510                           ;	Fail-Safe Clock Monitor Enable bit
  5511                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5512                           ;	Internal/External Oscillator Switchover bit
  5513                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5514   300001                     	org	3145729
  5515   300001  08                 	db	8
  5516                           
  5517                           ;Config register CONFIG2L @ 0x300002
  5518                           ;	Power-up Timer Enable bit
  5519                           ;	PWRT = 0x1, unprogrammed default
  5520                           ;	Brown-out Reset Enable bits
  5521                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5522                           ;	Brown Out Reset Voltage bits
  5523                           ;	BORV = 22, VBOR set to 2.2 V nominal
  5524   300002                     	org	3145730
  5525   300002  11                 	db	17
  5526                           
  5527                           ;Config register CONFIG2H @ 0x300003
  5528                           ;	Watchdog Timer Enable bit
  5529                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5530                           ;	Watchdog Timer Postscale Select bits
  5531                           ;	WDTPS = 8192, 1:8192
  5532   300003                     	org	3145731
  5533   300003  1A                 	db	26
  5534                           
  5535                           ; Padding undefined space
  5536   300004                     	org	3145732
  5537   300004  FF                 	db	255
  5538                           
  5539                           ;Config register CONFIG3H @ 0x300005
  5540                           ;	CCP2 MUX bit
  5541                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5542                           ;	PORTB A/D Enable bit
  5543                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5544                           ;	Low-Power Timer1 Oscillator Enable bit
  5545                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5546                           ;	HFINTOSC Fast Start-up
  5547                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  5548                           ;	MCLR Pin Enable bit
  5549                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5550   300005                     	org	3145733
  5551   300005  01                 	db	1
  5552                           
  5553                           ;Config register CONFIG4L @ 0x300006
  5554                           ;	Stack Full/Underflow Reset Enable bit
  5555                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5556                           ;	Single-Supply ICSP Enable bit
  5557                           ;	LVP = OFF, Single-Supply ICSP disabled
  5558                           ;	Extended Instruction Set Enable bit
  5559                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5560                           ;	Background Debugger Enable bit
  5561                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5562   300006                     	org	3145734
  5563   300006  80                 	db	128
  5564                           
  5565                           ; Padding undefined space
  5566   300007                     	org	3145735
  5567   300007  FF                 	db	255
  5568                           
  5569                           ;Config register CONFIG5L @ 0x300008
  5570                           ;	Code Protection Block 0
  5571                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5572                           ;	Code Protection Block 1
  5573                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5574                           ;	Code Protection Block 2
  5575                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5576                           ;	Code Protection Block 3
  5577                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5578   300008                     	org	3145736
  5579   300008  0F                 	db	15
  5580                           
  5581                           ;Config register CONFIG5H @ 0x300009
  5582                           ;	Boot Block Code Protection bit
  5583                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5584                           ;	Data EEPROM Code Protection bit
  5585                           ;	CPD = OFF, Data EEPROM not code-protected
  5586   300009                     	org	3145737
  5587   300009  C0                 	db	192
  5588                           
  5589                           ;Config register CONFIG6L @ 0x30000A
  5590                           ;	Write Protection Block 0
  5591                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5592                           ;	Write Protection Block 1
  5593                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5594                           ;	Write Protection Block 2
  5595                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5596                           ;	Write Protection Block 3
  5597                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5598   30000A                     	org	3145738
  5599   30000A  0F                 	db	15
  5600                           
  5601                           ;Config register CONFIG6H @ 0x30000B
  5602                           ;	Configuration Register Write Protection bit
  5603                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5604                           ;	Boot Block Write Protection bit
  5605                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5606                           ;	Data EEPROM Write Protection bit
  5607                           ;	WRTD = OFF, Data EEPROM not write-protected
  5608   30000B                     	org	3145739
  5609   30000B  E0                 	db	224
  5610                           
  5611                           ;Config register CONFIG7L @ 0x30000C
  5612                           ;	unspecified, using default values
  5613                           ;	Table Read Protection Block 0
  5614                           ;	EBTR0 = 0x1, unprogrammed default
  5615                           ;	Table Read Protection Block 1
  5616                           ;	EBTR1 = 0x1, unprogrammed default
  5617                           ;	Table Read Protection Block 2
  5618                           ;	EBTR2 = 0x1, unprogrammed default
  5619                           ;	Table Read Protection Block 3
  5620                           ;	EBTR3 = 0x1, unprogrammed default
  5621   30000C                     	org	3145740
  5622   30000C  0F                 	db	15
  5623                           
  5624                           ;Config register CONFIG7H @ 0x30000D
  5625                           ;	Boot Block Table Read Protection bit
  5626                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5627   30000D                     	org	3145741
  5628   30000D  40                 	db	64
  5629                           tosu	equ	0xFFF
  5630                           tosh	equ	0xFFE
  5631                           tosl	equ	0xFFD
  5632                           stkptr	equ	0xFFC
  5633                           pclatu	equ	0xFFB
  5634                           pclath	equ	0xFFA
  5635                           pcl	equ	0xFF9
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           indf0	equ	0xFEF
  5643                           postinc0	equ	0xFEE
  5644                           postdec0	equ	0xFED
  5645                           preinc0	equ	0xFEC
  5646                           plusw0	equ	0xFEB
  5647                           fsr0h	equ	0xFEA
  5648                           fsr0l	equ	0xFE9
  5649                           wreg	equ	0xFE8
  5650                           indf1	equ	0xFE7
  5651                           postinc1	equ	0xFE6
  5652                           postdec1	equ	0xFE5
  5653                           preinc1	equ	0xFE4
  5654                           plusw1	equ	0xFE3
  5655                           fsr1h	equ	0xFE2
  5656                           fsr1l	equ	0xFE1
  5657                           bsr	equ	0xFE0
  5658                           indf2	equ	0xFDF
  5659                           postinc2	equ	0xFDE
  5660                           postdec2	equ	0xFDD
  5661                           preinc2	equ	0xFDC
  5662                           plusw2	equ	0xFDB
  5663                           fsr2h	equ	0xFDA
  5664                           fsr2l	equ	0xFD9
  5665                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    24
    Data        0
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      74
    BANK0           160      0      90
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DelayInit@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayIsRunning@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayRead@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), 

    mrf24_data_out_s$buffer_salida	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    MRF24SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    S288$buffer_salida	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    sp__MRF24BuscarDispositivos	PTR struct . size(1) Largest target is 14
		 -> MRF24BuscarDispositivos@algo(COMRAM[14]), 

    sp__MRF24GetMensajeEntrada	PTR unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in_s(BANK0[56]), mrf24_data_in_s$buffer_entrada(BANK0[50]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in_s(BANK0[56]), mrf24_data_in_s$buffer_entrada(BANK0[50]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_10(CODE[8]), STR_13(CODE[8]), STR_4(CODE[8]), STR_7(CODE[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _strcmp->_MRF24GetMensajeEntrada
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24SetMensajeSalida->_strlen
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_InicializoMRF24
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _InicializoMRF24->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _GetShortAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _GetLongAddr->_Write2ByteSPIPort
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    5845
                                             26 COMRAM    22    22      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
             _MRF24GetMensajeEntrada
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
           _MRF24SetDireccionDestino
              _MRF24SetMensajeSalida
               _MRF24SetPANIDDestino
                _MRF24TransmitirDato
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     120
                                              2 COMRAM     3     1      2
             _MRF24GetMensajeEntrada (ARG)
 ---------------------------------------------------------------------------------
 (1) _MRF24TransmitirDato                                  8     8      0     998
                                             10 COMRAM     7     7      0
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24SetPANIDDestino                                 2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetMensajeSalida                                1     0      1     165
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      92
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetDireccionDestino                             2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   7     7      0     942
                                             10 COMRAM     7     7      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         1     1      0    2459
                                             25 COMRAM     1     1      0
                    _InicializoMRF24
                    _InicializoPines
                _InicializoVariables
                        _SetResetPin
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InicializoMRF24                                     11    11      0    2229
                                             14 COMRAM    11    11      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceMACAddress                                  2     2      0     256
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceAddress                                     0     0      0     188
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetChannel                                           1     1      0     482
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     188
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     294
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     198
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetMensajeEntrada                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    4     2      2     610
                                             14 COMRAM     4     2      2
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (3) _DelayRead                                           13    12      1     160
                                              1 COMRAM    13    12      1
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (4) _DelayIsRunning                                       1     0      1      23
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      1     0      1     140
                                              5 COMRAM     1     0      1
                          _DelayInit
 ---------------------------------------------------------------------------------
 (3) _DelayInit                                            5     0      5      72
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24GetMensajeEntrada
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _InicializoMRF24
       _DelayInit
       _DelayRead
       _DelayReset
       _GetLongAddr
         _ReadByteSPIPort
           _SPIRead
         _SetCSPin
         _Write2ByteSPIPort
           _SPIWrite2Byte
             _SPIWriteByte
       _GetShortAddr
         _ReadByteSPIPort
         _SetCSPin
         _WriteByteSPIPort
           _SPIWriteByte
       _SetChannel
         _SetLongAddr
           _SetCSPin
           _Write2ByteSPIPort
           _WriteByteSPIPort
         _SetShortAddr
           _SetCSPin
           _WriteByteSPIPort
       _SetDeviceAddress
         _SetShortAddr
       _SetDeviceMACAddress
         _SetShortAddr
       _SetLongAddr
       _SetShortAddr
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetResetPin
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _MRF24SetDireccionDestino
   _MRF24SetMensajeSalida
     _strlen
   _MRF24SetPANIDDestino
   _MRF24TransmitirDato
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _strcmp
     _MRF24GetMensajeEntrada (ARG)

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      90     56.2%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     48      74     78.7%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     170      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon May 19 19:54:10 2025

                         _SSPSTATbits 0FC7                                    l21 1CEA  
                                  l30 1D1A                                    l24 1D44  
                                  l33 1CFE                                    l42 1D62  
                                  l27 1D0C                                    l36 1D5C  
                                  l39 1D28                       _IsMRF24Interrup 1CEC  
                                  l99 16BE                                    u55 1D0A  
                                  u56 1D0C                                    u65 1D18  
                                  u66 1D1A                         ?_MRF24J40Init 0001  
                                 l100 1740                                   l103 128E  
                                 l112 1C54                                   l201 1CA8  
                                 l121 199E                                   l105 13FE  
                                 l210 1CD6                                   l115 1C0E  
                                 l204 1D36                                   l124 1AD4  
                                 l132 19E0                                   l141 1A62  
                                 l118 1A22                                   l223 17EC  
                                 l207 1CC6                                   l127 1B9A  
                                 l135 1A9C                                   l232 1D52  
                                 l144 1C88                                   l152 1416  
                                 l217 1BC2                                   l161 1B3C  
                                 l145 1C90                                   l153 1540  
                                 l172 1D68                                   l148 1C6A  
                                 l229 1C34                                   l149 1C72  
                                 l166 1892                                   l239 1B6C  
                                 l249 167C                                   l195 1CC0  
                                 l198 1C9A                                   l294 10B0  
                                 l388 195A                                   _GIE 7F97  
                                 u110 1CFC                                   u111 1CF6  
                                 u116 1CFE                                   u260 1B1A  
                                 u261 1B16                                   u270 1B34  
                                 u271 1B30                                   u520 1CA8  
                                 u600 16A2                                   u521 1CA4  
                                 u601 169E                                   u610 16FA  
                                 u611 16F6                                   u540 1CD4  
                                 u620 12AE                                   u700 1C66  
                                 u541 1CD0                                   u621 12AA  
                                 u701 1C62                                   u630 12CA  
                                 u710 1410                                   u535 1D42  
                                 u631 12C6                                   u711 140C  
                                 u560 175A                                   u800 15E2  
                                 u536 1D44                                   u640 13AE  
                                 u720 1508                                   u561 1756  
                                 u801 15DE                                   u641 13AA  
                                 u721 1504                                   u570 17D8  
                                 u810 1616                                   u650 13C4  
                                 u730 1538                                   u571 17D4  
                                 u811 1612                                   u555 19EC  
                                 u651 13C0                                   u731 1534  
                                 u580 19E0                                   u740 17FE  
                                 u660 1AFC                                   u820 18C2  
                                 u900 11B0                                   u581 19DC  
                                 u741 17FA                                   u661 1AF8  
                                 u821 18BE                                   u901 11AC  
                                 u750 187C                                   u670 1A3E  
                                 u830 18D8                                   u910 11DE  
                                 u751 1878                                   u671 1A3A  
                                 u831 18D4                                   u911 11DA  
                                 u760 1556                                   u680 1A4E  
                                 u920 120C                                   u840 10D2  
                                 u761 1552                                   u681 1A4A  
                                 u921 1208                                   u841 10CE  
                                 u770 1582                                   u690 1C84  
                                 u930 123E                                   u850 10E4  
                                 u771 157E                                   u595 1966  
                                 u691 1C80                                   u931 123A  
                                 u851 10DC                                   u780 1592  
                                 u940 1250                                   u781 158E  
                                 u941 1248                                   u790 15D2  
                                 u870 111A                                   u791 15CE  
                                 u871 1114                                   u880 115E  
                                 u881 115A                                   u890 1182  
                                 u891 117E                                   u876 111C  
                                 u868 10E6                                   u958 1252  
                                 u987 1A72                                   u997 1A8A  
                                 _isr 0008                                   wreg 0FE8  
                 __end_of_GetLongAddr 19A0                                  l2000 1418  
                                l2010 144A                                  l2002 1428  
                                l2020 1472                                  l2012 144C  
                                l2004 142A                                  l2110 15D2  
                                l2102 15A6                                  l2030 14A0  
                                l2022 1480                                  l2014 145A  
                                l2006 143A                                  l2112 15E2  
                                l2120 15F4                                  l2104 15B2  
                                l1152 1D02                                  l2040 14D6  
                                l2032 14A2                                  l2024 1482  
                                l2016 145C                                  l2008 143C  
                                l2200 11B2                                  l2130 1628  
                                l2114 15EE                                  l2050 1518  
                                l2042 14D8                                  l2034 14B0  
                                l2026 1490                                  l2018 1470  
                                l2210 120C                                  l2202 11BE  
                                l2132 1630                                  l2108 15B8  
                                l2140 167A                                  l1156 1D10  
                                l1092 1B08                                  l2052 1522  
                                l2044 14DA                                  l2036 14B2  
                                l2028 1492                                  l2220 123E  
                                l2212 120E                                  l2204 11DE  
                                l2126 1606                                  l1246 1CEC  
                                l2070 1830                                  l2062 17EE  
                                l2054 1538                                  l2046 1508  
                                l2038 14B8                                  l1086 18F8  
                                l2150 1898                                  l2214 121A  
                                l2206 11E0                                  l1360 1CBA  
                                l2128 1616                                  l2080 1D64  
                                l2072 184A                                  l2048 1516  
                                l2152 189C                                  l2208 11EC  
                                l2216 1222                                  l2160 1070  
                                l1362 1CBC                                  l1354 1CAA  
                                l2090 1568                                  l2138 1636  
                                l2074 184C                                  l2066 1802  
                                l2058 153E                                  l2154 18C2  
                                l2218 1226                                  l2170 10A4  
                                l2162 1078                                  l1364 1CBE  
                                l1356 1CB4                                  l2092 1582  
                                l2084 1542                                  l2076 187C  
                                l2068 182A                                  l2156 18D8  
                                l2148 1894                                  l2180 10FE  
                                l2172 10B6                                  l2164 107C  
                                l1358 1CB8                                  l2094 1592  
                                l2086 1546                                  l1710 1C96  
                                l2190 1162                                  l2174 10BE  
                                l2166 1080                                  l1800 17D8  
                                l2280 1654                                  l2096 15A0  
                                l2088 1556                                  l1712 1D2A  
                                l1720 1D56                                  l2192 1182  
                                l2176 10D2                                  l2184 1106  
                                l2168 1098                                  l1802 17E4  
                                l1482 1B20                                  l1730 1CD4  
                                l1810 1B6E                                  l2194 1184  
                                l2178 10F6                                  l2186 114A  
                                l1580 193E                                  l1484 1B34  
                                l1476 1B0A                                  l1716 1D3A  
                                l1708 1C94                                  l1724 1D1C  
                                l1740 1C3C                                  l1820 19AC  
                                l1900 12E6                                  l2196 1190  
                                l2188 115E                                  l1590 194E  
                                l1582 1946                                  l1806 17EA  
                                l1478 1B1A                                  l1734 1D5E  
                                l1830 197E                                  l1750 19E2  
                                l1742 1C42                                  l1822 19BE  
                                l1814 19A0                                  l1910 131E  
                                l1902 12EA                                  l2198 11B0  
                                l2278 1134                                  l1592 1950  
                                l1584 1948                                  l1488 1B3A  
                                l1728 1CC2                                  l1832 1984  
                                l1752 1A04                                  l1744 1C48  
                                l1824 19C0                                  l1920 1362  
                                l1912 132E                                  l1904 12EE  
                                l1594 1952                                  l1586 194A  
                                l1578 18FA                                  l1762 1D46  
                                l1770 1C10                                  l1834 1990  
                                l1754 1A0A                                  l1746 1C4E  
                                l1738 1C38                                  l1842 1A9E  
                                l1826 19C4                                  l1930 1396  
                                l1922 136C                                  l1914 133E  
                                l1906 12FE                                  l1596 1954  
                                l1588 194C                                  l1772 1C26  
                                l1836 1996                                  l1828 195C  
                                l1780 1BF4                                  l1756 1A16  
                                l1844 1AC2                                  l1940 13FC  
                                l1924 1376                                  l1916 134E  
                                l1908 130E                                  l1860 16A2  
                                l1852 167E                                  l1598 1956  
                                l1766 1B9C                                  l1838 199C  
                                l1782 1BFA                                  l1758 1A1C  
                                l1926 1380                                  l1918 1358  
                                l1870 1706                                  l1862 16DA  
                                l1950 1AFC                                  l1792 1742  
                                l1784 1C00                                  l1776 1BEC  
                                l1936 13B2                                  l1928 1388  
                                l1848 1CD8                                  l1872 1728  
                                l1864 16DE                                  l1960 1A64  
                                l1944 1AD6                                  l1954 1B3E  
                                l1794 175A                                  l1786 1C06  
                                l1778 1BEC                                  l1938 13C4  
                                l1890 12AE                                  l1882 1264  
                                l1874 172A                                  l1866 16FA  
                                l1858 1686                                  l1970 1A96  
                                l1962 1A68                                  l1946 1ADE  
                                l1956 1B4A                                  l1796 1770  
                                l1788 1C0C                                  l1884 127C  
                                l1876 173C                                  l1868 1704  
                                l1964 1A6C                                  l1948 1AE0  
                                l1980 1A56                                  l1958 1B64  
                                l1798 1782                                  l1894 12B4  
                                l1886 1286                                  l1878 173E  
                                l1966 1A7E                                  l1974 1A24  
                                l1896 12CA                                  l1888 1296  
                                l1968 1A84                                  l1984 1C74  
                                l1976 1A3E                                  l1992 1400  
                                l1898 12DC                                  l1978 1A52  
                                l1994 1410                                  l1988 1C56  
                                l1998 1418                                  _ADIE 7CEE  
                                ?_isr 0001                                  _EEIE 7D04  
                                STR_1 1066                                  STR_2 105E  
                                STR_3 1046                                  STR_4 1046  
                                STR_5 1019                                  STR_6 103E  
                                STR_7 103E                                  STR_8 1027  
                                STR_9 1056                                  _T0IE 7F95  
                                u1007 12D0                                  u1017 1AC8  
                                _IPEN 7E87                                  _PEIE 7F96  
                                _RBIE 7F93                                  _RCIE 7CED  
                                _RBPU 7F8F                          _SPIWriteByte 1C92  
                                _main 1070                       __end_of_SPIInit 1CC2  
                     __end_of_SPIRead 1CD8                                  fsr1h 0FE2  
                                fsr2h 0FDA                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                btemp 004B                         _MRF24IsNewMsg 1B0A  
                          _DelayReset 1C10               GetShortAddr@reg_address 0004  
                                start 0040                     DelayInit@duration 0002  
                        ___param_bank 0000                     ??_ReadByteSPIPort 0001  
                               ??_isr 0001                        ??_MRF24J40Init 001A  
         __end_of_InicializoVariables 1742                         _SPIWrite2Byte 1D2A  
    __end_of_MRF24SetDireccionDestino 1C92                                 ?_main 0001  
                               _BCLIE 7D03                                 STR_10 1056  
                               STR_11 1019                                 STR_12 104E  
                               STR_13 104E                                 STR_14 1027  
                               STR_15 1033                                 _INT0E 7F94  
                               i2l404 003C                  SetDeviceMACAddress@i 0005  
                               _TMR1H 0FCF                                 _TMR1L 0FCE  
                               _PORTA 0F80                                 _PORTB 0F81  
                               _PORTC 0F82                                 _PORTD 0F83  
                               _PORTE 0F84                                 _SSPIE 7CEB  
                __end_of_GetShortAddr 1C10                       _InicializoMRF24 1264  
        MRF24SetMensajeSalida@mensaje 0004              ??_MRF24GetMensajeEntrada 0003  
                     _InicializoPines 1CD8               SetShortAddr@reg_address 0004  
                               tablat 0FF5                        ?_MRF24IsNewMsg 0001  
                               ttemp5 004C                                 ttemp6 004F  
                               ttemp7 0053                                 status 0FD8  
                    _mrf24_data_out_s 0031                                 wtemp8 004C  
             __end_of_IsMRF24Interrup 1D00                   _SetDeviceMACAddress 19A0  
                     __initialization 1BC4                          __end_of_main 1264  
DebounceFSMUpdate@antirrebote_boton_n 000F                        ?_SPIWrite2Byte 0002  
                    __end_of_SetCSPin 1D46                           _GetLongAddr 195C  
                       ??_SetLongAddr 0009                                ??_main 001B  
                       __activetblptr 0002                         ??_SetResetPin 0001  
                ?_SetDeviceMACAddress 0001                            _SetChannel 1A9E  
       InicializoMRF24@delay_time_out 0011                     ?_SetDeviceAddress 0001  
               _MRF24SetMensajeSalida 1A24                                _CCP1IE 7CEA  
                              _CCP2IE 7D00                             ??_SPIInit 0001  
                           ??_SPIRead 0001                    ??_SetDeviceAddress 0005  
                              _T1RD16 7E6F                                _T1SYNC 7E6A  
                              i2l2230 0026                                i2l2232 0028  
                              i2l2234 0030                                i2l2226 000A  
                              i2l2228 0018                            _SetWakePin 1D00  
                              _OSCCON 0FD3             MRF24SetPANIDDestino@panid 0001  
                              _TMR1IE 7CE8                                _TMR1IF 7CF0  
                              _TMR1CS 7E69                                _TMR2IE 7CE9  
                              _TMR1ON 7E68          __end_of_default_security_key 1011  
                              _SSPBUF 0FC9                           ?_DelayReset 0001  
                 DelayIsRunning@delay 0001               __end_of_InicializoMRF24 1400  
                              clear_0 1BCA                                clear_1 1BD6  
                              isa$std 0001                        SetCSPin@estado 0001  
             __end_of_InicializoPines 1CEC                                _strcmp 1894  
                              _strlen 1AD6                 ??_SetDeviceMACAddress 0005  
                InicializoVariables@i 0002                          __mediumconst 0000  
            _MRF24SetDireccionDestino 1C74                                tblptrh 0FF7  
                              tblptrl 0FF6                                tblptru 0FF8  
                 __end_of_SetLongAddr 1A24                    _MRF24ReciboPaquete 17EE  
                    ??_DelayIsRunning 0002                       ??_MRF24IsNewMsg 0001  
                 __end_of_SetResetPin 1D1C                 GetShortAddr@leido_spi 0003  
                   __end_of_DelayInit 1BC4                     __end_of_DelayRead 17EE  
                __end_of_MRF24J40Init 1A9E                            __accesstop 0060  
             __end_of__initialization 1BDC                   ?_MRF24ReciboPaquete 0001  
         __end_of_MRF24TransmitirDato 1542                     __end_of_BoardInit 195C  
                      DelayInit@delay 0001                         ___rparam_used 0001  
                      DelayRead@delay 0002                      SetWakePin@estado 0001  
                    ?_IsMRF24Interrup 0001                         ?_SetShortAddr 0003  
                      __pcstackCOMRAM 0001                       ??_SPIWrite2Byte 0004  
                  _long_mac_address_e 003C                  ??_MRF24ReciboPaquete 000B  
              ?_MRF24SetMensajeSalida 0004                           ?_SetChannel 0001  
                          __pbssBANK0 0060                           ?_SetWakePin 0001  
                           ?_SetCSPin 0001                       _ReadByteSPIPort 1D5E  
              InicializoMRF24@lectura 0010                          _GetShortAddr 1BEA  
              _MRF24GetMensajeEntrada 1D64                        ??_SetShortAddr 0004  
                    ?_InicializoMRF24 0001                           _SetLongAddr 19E2  
                             _T1CKPS0 7E6C                               _T1CKPS1 7E6D  
                             ?_strcmp 0003                               ?_strlen 0001  
                    ?_InicializoPines 0001                  _default_security_key 1001  
                             _T1OSCEN 7E6B                           _SetResetPin 1D0E  
        __end_of_MRF24SetPANIDDestino 1C74                               _OSCTUNE 0F9B  
                             i2u96_40 0018                               i2u96_41 0014  
                             i2u97_40 0026                               i2u97_41 0022  
                             _SSPCON1 0FC6                               _SPIInit 1CAA  
                             _SPIRead 1CC2                            ??_SetCSPin 0001  
                   SetShortAddr@valor 0003                               __Hparam 0000  
                             __Lparam 0000           MRF24BuscarDispositivos@algo 003D  
                   ??_DebounceFSMInit 0007                          __psmallconst 1000  
                             __pcinit 1BC4                          ?_GetLongAddr 0006  
                             __ramtop 1000                               __ptext0 1070  
                             __ptext1 1894                               __ptext2 1400  
                             __ptext3 1C56                               __ptext4 1A24  
                             __ptext5 1AD6                               __ptext6 1C74  
                             __ptext7 17EE                               __ptext8 1A64  
                             __ptext9 167E                      _WriteByteSPIPort 1D54  
             __end_of_ReadByteSPIPort 1D64                  end_of_initialization 1BDC  
                       __Lmediumconst 0000                          ??_DelayReset 0002  
                 _default_mac_address 1011                               postinc0 0FEE  
                             postinc1 0FE6                               postinc2 0FDE  
          ??_MRF24SetDireccionDestino 0003                               strcmp@l 0003  
                             strcmp@r 0004                               strlen@a 0003  
                             strlen@s 0001                          _MRF24J40Init 1A64  
                           _PORTBbits 0F81                             _PORTCbits 0F82  
                  __end_of_DelayReset 1C36                  WriteByteSPIPort@dato 0002  
                           _TRISBbits 0F93                             _TRISCbits 0F94  
                           _TRISDbits 0F95                             _TRISEbits 0F96  
                __end_of_SetShortAddr 1C56                 Write2ByteSPIPort@dato 0004  
                GetLongAddr@respuesta 000A                            main@boton1 0026  
                           _DelayInit 1B9C                             _DelayRead 1742  
                           _BoardInit 18FA                  _MRF24SetPANIDDestino 1C56  
                   _Write2ByteSPIPort 1D1C           __end_of_SetDeviceMACAddress 19E2  
             ??_MRF24SetMensajeSalida 0005                    ?_Write2ByteSPIPort 0004  
                     _mrf24_data_in_s 0082                        __end_of_strcmp 18FA  
                      __end_of_strlen 1B0A                          ??_SetChannel 000B  
                 start_initialization 1BC4                   ??_Write2ByteSPIPort 0006  
                         __end_of_isr 0040                      ?_ReadByteSPIPort 0001  
                       ?_SPIWriteByte 0001                          ??_SetWakePin 0001  
               __end_of_MRF24IsNewMsg 1B3E               ?_MRF24GetMensajeEntrada 0001  
                          ?_DelayInit 0001                            ?_DelayRead 0002  
                          ?_BoardInit 0001                 ?_MRF24SetPANIDDestino 0001  
           __end_of_Write2ByteSPIPort 1D2A                    __end_of_SetChannel 1AD6  
                        _estadoActual 003B                 __end_of_SPIWrite2Byte 1D38  
             MRF24ReciboPaquete@index 0011                          ?_SetLongAddr 0006  
                            ??_strcmp 0005                              ??_strlen 0003  
                  __end_of_SetWakePin 1D0E                     _DebounceFSMUpdate 1542  
                        ?_SetResetPin 0001                           __pbssCOMRAM 0031  
                  ?_DebounceFSMUpdate 000F                       DelayReset@delay 0001  
                            ?_SPIInit 0001                              ?_SPIRead 0001  
                      ??_SPIWriteByte 0001        __end_of_MRF24GetMensajeEntrada 1D6A  
                 ??_DebounceFSMUpdate 0011                      SPIWriteByte@dato 0001  
                     _DebounceFSMInit 1B3E                      _SetDeviceAddress 1B6E  
                 _InicializoVariables 167E              __end_of_WriteByteSPIPort 1D5E  
                           __pintcode 0008             __end_of_DebounceFSMUpdate 167E  
                   SetResetPin@estado 0001                           __smallconst 1000  
                ?_InicializoVariables 0001                      SetLongAddr@valor 0008  
                            _LATCbits 0F8B                              _LATDbits 0F8C  
                            _LATEbits 0F8D                           ??_DelayInit 0006  
                         ??_DelayRead 0003                ??_MRF24SetPANIDDestino 0003  
                         ??_BoardInit 0001                              _PIR1bits 0F9E  
                        _SetShortAddr 1C36                             _timeStamp 0037  
                  main@delay_parpadeo 001D                 ??_InicializoVariables 0001  
   MRF24SetDireccionDestino@direccion 0001                     ??_IsMRF24Interrup 0001  
             __end_of_DebounceFSMInit 1B6E                              _SetCSPin 1D38  
                            __Hrparam 0000                              __Lrparam 0000  
     MRF24ReciboPaquete@largo_mensaje 0010                  __end_of_SPIWriteByte 1CAA  
      MRF24TransmitirDato@pos_memoria 0011         __end_of_MRF24SetMensajeSalida 1A64  
                            __ptext10 1CD8                              __ptext11 1D00  
                            __ptext20 1D54                              __ptext12 1D0E  
                            __ptext21 195C                              __ptext13 1264  
                            __ptext30 1CEC                              __ptext22 1D1C  
                            __ptext14 19A0                              __ptext31 1D64  
                            __ptext23 1D2A                              __ptext15 1B6E  
                            __ptext32 1542                              __ptext24 1C92  
                            __ptext16 1A9E                              __ptext33 1742  
                            __ptext25 1D38                              __ptext17 1C36  
                            __ptext34 1D46                              __ptext26 1D5E  
                            __ptext18 19E2                   _MRF24TransmitirDato 1400  
                            __ptext35 1B3E                              __ptext27 1CC2  
                            __ptext19 1BEA                              __ptext36 1B9C  
                            __ptext28 1C10                              __ptext37 18FA  
                            __ptext29 1B0A                              __ptext38 1CAA  
           ?_MRF24SetDireccionDestino 0001                     ??_InicializoMRF24 000F  
                      _DelayIsRunning 1D46                     ??_InicializoPines 0002  
                       ?_GetShortAddr 0001                  ?_MRF24TransmitirDato 0001  
                            isa$xinst 0000                              int$flags 004B  
  DebounceFSMInit@antirrebote_boton_n 0006           __end_of_default_mac_address 1019  
            __end_of_SetDeviceAddress 1B9C                      ?_DebounceFSMInit 0006  
                            intlevel2 0000                __end_of_DelayIsRunning 1D54  
                MRF24TransmitirDato@i 0010                        ??_GetShortAddr 0003  
                 _mrf24_data_config_s 0060                 ??_MRF24TransmitirDato 000B  
                   ?_WriteByteSPIPort 0001            __end_of_MRF24ReciboPaquete 1894  
                       ??_GetLongAddr 0008                    ??_WriteByteSPIPort 0002  
              GetLongAddr@reg_address 0006                           _SSPCON1bits 0FC6  
         DebounceFSMUpdate@estado_pin 0010                     SPIWrite2Byte@dato 0002  
              SetLongAddr@reg_address 0006                       ?_DelayIsRunning 0001  
