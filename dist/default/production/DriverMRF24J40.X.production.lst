

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Apr 24 12:42:42 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Version 2.20
    57                           ; Generated 05/05/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F46K20 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000FE0                     bsr             equ	4064
    91   000FE9                     fsr0            equ	4073
    92   000FEA                     fsr0h           equ	4074
    93   000FE9                     fsr0l           equ	4073
    94   000FE1                     fsr1            equ	4065
    95   000FE2                     fsr1h           equ	4066
    96   000FE1                     fsr1l           equ	4065
    97   000FD9                     fsr2            equ	4057
    98   000FDA                     fsr2h           equ	4058
    99   000FD9                     fsr2l           equ	4057
   100   000FEF                     indf0           equ	4079
   101   000FE7                     indf1           equ	4071
   102   000FDF                     indf2           equ	4063
   103   000FF2                     intcon          equ	4082
   104   000000                     nvmcon          equ	0
   105   000FF9                     pcl             equ	4089
   106   000FFA                     pclath          equ	4090
   107   000FFB                     pclatu          equ	4091
   108   000FEB                     plusw0          equ	4075
   109   000FE3                     plusw1          equ	4067
   110   000FDB                     plusw2          equ	4059
   111   000FED                     postdec0        equ	4077
   112   000FE5                     postdec1        equ	4069
   113   000FDD                     postdec2        equ	4061
   114   000FEE                     postinc0        equ	4078
   115   000FE6                     postinc1        equ	4070
   116   000FDE                     postinc2        equ	4062
   117   000FEC                     preinc0         equ	4076
   118   000FE4                     preinc1         equ	4068
   119   000FDC                     preinc2         equ	4060
   120   000FF3                     prod            equ	4083
   121   000FF4                     prodh           equ	4084
   122   000FF3                     prodl           equ	4083
   123   000FD8                     status          equ	4056
   124   000FF5                     tablat          equ	4085
   125   000FF6                     tblptr          equ	4086
   126   000FF7                     tblptrh         equ	4087
   127   000FF6                     tblptrl         equ	4086
   128   000FF8                     tblptru         equ	4088
   129   000FFD                     tosl            equ	4093
   130   000FE8                     wreg            equ	4072
   131   000F77                     SSPMSK          equ	3959	;# 
   132   000F78                     SLRCON          equ	3960	;# 
   133   000F79                     CM2CON1         equ	3961	;# 
   134   000F7A                     CM2CON0         equ	3962	;# 
   135   000F7B                     CM1CON0         equ	3963	;# 
   136   000F7C                     WPUB            equ	3964	;# 
   137   000F7D                     IOCB            equ	3965	;# 
   138   000F7E                     ANSEL           equ	3966	;# 
   139   000F7F                     ANSELH          equ	3967	;# 
   140   000F80                     PORTA           equ	3968	;# 
   141   000F81                     PORTB           equ	3969	;# 
   142   000F82                     PORTC           equ	3970	;# 
   143   000F83                     PORTD           equ	3971	;# 
   144   000F84                     PORTE           equ	3972	;# 
   145   000F89                     LATA            equ	3977	;# 
   146   000F8A                     LATB            equ	3978	;# 
   147   000F8B                     LATC            equ	3979	;# 
   148   000F8C                     LATD            equ	3980	;# 
   149   000F8D                     LATE            equ	3981	;# 
   150   000F92                     TRISA           equ	3986	;# 
   151   000F92                     DDRA            equ	3986	;# 
   152   000F93                     TRISB           equ	3987	;# 
   153   000F93                     DDRB            equ	3987	;# 
   154   000F94                     TRISC           equ	3988	;# 
   155   000F94                     DDRC            equ	3988	;# 
   156   000F95                     TRISD           equ	3989	;# 
   157   000F95                     DDRD            equ	3989	;# 
   158   000F96                     TRISE           equ	3990	;# 
   159   000F96                     DDRE            equ	3990	;# 
   160   000F9B                     OSCTUNE         equ	3995	;# 
   161   000F9D                     PIE1            equ	3997	;# 
   162   000F9E                     PIR1            equ	3998	;# 
   163   000F9F                     IPR1            equ	3999	;# 
   164   000FA0                     PIE2            equ	4000	;# 
   165   000FA1                     PIR2            equ	4001	;# 
   166   000FA2                     IPR2            equ	4002	;# 
   167   000FA6                     EECON1          equ	4006	;# 
   168   000FA7                     EECON2          equ	4007	;# 
   169   000FA8                     EEDATA          equ	4008	;# 
   170   000FA9                     EEADR           equ	4009	;# 
   171   000FAA                     EEADRH          equ	4010	;# 
   172   000FAB                     RCSTA           equ	4011	;# 
   173   000FAB                     RCSTA1          equ	4011	;# 
   174   000FAC                     TXSTA           equ	4012	;# 
   175   000FAC                     TXSTA1          equ	4012	;# 
   176   000FAD                     TXREG           equ	4013	;# 
   177   000FAD                     TXREG1          equ	4013	;# 
   178   000FAE                     RCREG           equ	4014	;# 
   179   000FAE                     RCREG1          equ	4014	;# 
   180   000FAF                     SPBRG           equ	4015	;# 
   181   000FAF                     SPBRG1          equ	4015	;# 
   182   000FB0                     SPBRGH          equ	4016	;# 
   183   000FB1                     T3CON           equ	4017	;# 
   184   000FB2                     TMR3            equ	4018	;# 
   185   000FB2                     TMR3L           equ	4018	;# 
   186   000FB3                     TMR3H           equ	4019	;# 
   187   000FB4                     CVRCON2         equ	4020	;# 
   188   000FB5                     CVRCON          equ	4021	;# 
   189   000FB6                     ECCP1AS         equ	4022	;# 
   190   000FB7                     PWM1CON         equ	4023	;# 
   191   000FB8                     BAUDCON         equ	4024	;# 
   192   000FB8                     BAUDCTL         equ	4024	;# 
   193   000FB9                     PSTRCON         equ	4025	;# 
   194   000FBA                     CCP2CON         equ	4026	;# 
   195   000FBB                     CCPR2           equ	4027	;# 
   196   000FBB                     CCPR2L          equ	4027	;# 
   197   000FBC                     CCPR2H          equ	4028	;# 
   198   000FBD                     CCP1CON         equ	4029	;# 
   199   000FBE                     CCPR1           equ	4030	;# 
   200   000FBE                     CCPR1L          equ	4030	;# 
   201   000FBF                     CCPR1H          equ	4031	;# 
   202   000FC0                     ADCON2          equ	4032	;# 
   203   000FC1                     ADCON1          equ	4033	;# 
   204   000FC2                     ADCON0          equ	4034	;# 
   205   000FC3                     ADRES           equ	4035	;# 
   206   000FC3                     ADRESL          equ	4035	;# 
   207   000FC4                     ADRESH          equ	4036	;# 
   208   000FC5                     SSPCON2         equ	4037	;# 
   209   000FC6                     SSPCON1         equ	4038	;# 
   210   000FC7                     SSPSTAT         equ	4039	;# 
   211   000FC8                     SSPADD          equ	4040	;# 
   212   000FC9                     SSPBUF          equ	4041	;# 
   213   000FCA                     T2CON           equ	4042	;# 
   214   000FCB                     PR2             equ	4043	;# 
   215   000FCB                     MEMCON          equ	4043	;# 
   216   000FCC                     TMR2            equ	4044	;# 
   217   000FCD                     T1CON           equ	4045	;# 
   218   000FCE                     TMR1            equ	4046	;# 
   219   000FCE                     TMR1L           equ	4046	;# 
   220   000FCF                     TMR1H           equ	4047	;# 
   221   000FD0                     RCON            equ	4048	;# 
   222   000FD1                     WDTCON          equ	4049	;# 
   223   000FD2                     HLVDCON         equ	4050	;# 
   224   000FD2                     LVDCON          equ	4050	;# 
   225   000FD3                     OSCCON          equ	4051	;# 
   226   000FD5                     T0CON           equ	4053	;# 
   227   000FD6                     TMR0            equ	4054	;# 
   228   000FD6                     TMR0L           equ	4054	;# 
   229   000FD7                     TMR0H           equ	4055	;# 
   230   000FD8                     STATUS          equ	4056	;# 
   231   000FD9                     FSR2            equ	4057	;# 
   232   000FD9                     FSR2L           equ	4057	;# 
   233   000FDA                     FSR2H           equ	4058	;# 
   234   000FDB                     PLUSW2          equ	4059	;# 
   235   000FDC                     PREINC2         equ	4060	;# 
   236   000FDD                     POSTDEC2        equ	4061	;# 
   237   000FDE                     POSTINC2        equ	4062	;# 
   238   000FDF                     INDF2           equ	4063	;# 
   239   000FE0                     BSR             equ	4064	;# 
   240   000FE1                     FSR1            equ	4065	;# 
   241   000FE1                     FSR1L           equ	4065	;# 
   242   000FE2                     FSR1H           equ	4066	;# 
   243   000FE3                     PLUSW1          equ	4067	;# 
   244   000FE4                     PREINC1         equ	4068	;# 
   245   000FE5                     POSTDEC1        equ	4069	;# 
   246   000FE6                     POSTINC1        equ	4070	;# 
   247   000FE7                     INDF1           equ	4071	;# 
   248   000FE8                     WREG            equ	4072	;# 
   249   000FE9                     FSR0            equ	4073	;# 
   250   000FE9                     FSR0L           equ	4073	;# 
   251   000FEA                     FSR0H           equ	4074	;# 
   252   000FEB                     PLUSW0          equ	4075	;# 
   253   000FEC                     PREINC0         equ	4076	;# 
   254   000FED                     POSTDEC0        equ	4077	;# 
   255   000FEE                     POSTINC0        equ	4078	;# 
   256   000FEF                     INDF0           equ	4079	;# 
   257   000FF0                     INTCON3         equ	4080	;# 
   258   000FF1                     INTCON2         equ	4081	;# 
   259   000FF2                     INTCON          equ	4082	;# 
   260   000FF3                     PROD            equ	4083	;# 
   261   000FF3                     PRODL           equ	4083	;# 
   262   000FF4                     PRODH           equ	4084	;# 
   263   000FF5                     TABLAT          equ	4085	;# 
   264   000FF6                     TBLPTR          equ	4086	;# 
   265   000FF6                     TBLPTRL         equ	4086	;# 
   266   000FF7                     TBLPTRH         equ	4087	;# 
   267   000FF8                     TBLPTRU         equ	4088	;# 
   268   000FF9                     PCLAT           equ	4089	;# 
   269   000FF9                     PC              equ	4089	;# 
   270   000FF9                     PCL             equ	4089	;# 
   271   000FFA                     PCLATH          equ	4090	;# 
   272   000FFB                     PCLATU          equ	4091	;# 
   273   000FFC                     STKPTR          equ	4092	;# 
   274   000FFD                     TOS             equ	4093	;# 
   275   000FFD                     TOSL            equ	4093	;# 
   276   000FFE                     TOSH            equ	4094	;# 
   277   000FFF                     TOSU            equ	4095	;# 
   278   000F77                     SSPMSK          equ	3959	;# 
   279   000F78                     SLRCON          equ	3960	;# 
   280   000F79                     CM2CON1         equ	3961	;# 
   281   000F7A                     CM2CON0         equ	3962	;# 
   282   000F7B                     CM1CON0         equ	3963	;# 
   283   000F7C                     WPUB            equ	3964	;# 
   284   000F7D                     IOCB            equ	3965	;# 
   285   000F7E                     ANSEL           equ	3966	;# 
   286   000F7F                     ANSELH          equ	3967	;# 
   287   000F80                     PORTA           equ	3968	;# 
   288   000F81                     PORTB           equ	3969	;# 
   289   000F82                     PORTC           equ	3970	;# 
   290   000F83                     PORTD           equ	3971	;# 
   291   000F84                     PORTE           equ	3972	;# 
   292   000F89                     LATA            equ	3977	;# 
   293   000F8A                     LATB            equ	3978	;# 
   294   000F8B                     LATC            equ	3979	;# 
   295   000F8C                     LATD            equ	3980	;# 
   296   000F8D                     LATE            equ	3981	;# 
   297   000F92                     TRISA           equ	3986	;# 
   298   000F92                     DDRA            equ	3986	;# 
   299   000F93                     TRISB           equ	3987	;# 
   300   000F93                     DDRB            equ	3987	;# 
   301   000F94                     TRISC           equ	3988	;# 
   302   000F94                     DDRC            equ	3988	;# 
   303   000F95                     TRISD           equ	3989	;# 
   304   000F95                     DDRD            equ	3989	;# 
   305   000F96                     TRISE           equ	3990	;# 
   306   000F96                     DDRE            equ	3990	;# 
   307   000F9B                     OSCTUNE         equ	3995	;# 
   308   000F9D                     PIE1            equ	3997	;# 
   309   000F9E                     PIR1            equ	3998	;# 
   310   000F9F                     IPR1            equ	3999	;# 
   311   000FA0                     PIE2            equ	4000	;# 
   312   000FA1                     PIR2            equ	4001	;# 
   313   000FA2                     IPR2            equ	4002	;# 
   314   000FA6                     EECON1          equ	4006	;# 
   315   000FA7                     EECON2          equ	4007	;# 
   316   000FA8                     EEDATA          equ	4008	;# 
   317   000FA9                     EEADR           equ	4009	;# 
   318   000FAA                     EEADRH          equ	4010	;# 
   319   000FAB                     RCSTA           equ	4011	;# 
   320   000FAB                     RCSTA1          equ	4011	;# 
   321   000FAC                     TXSTA           equ	4012	;# 
   322   000FAC                     TXSTA1          equ	4012	;# 
   323   000FAD                     TXREG           equ	4013	;# 
   324   000FAD                     TXREG1          equ	4013	;# 
   325   000FAE                     RCREG           equ	4014	;# 
   326   000FAE                     RCREG1          equ	4014	;# 
   327   000FAF                     SPBRG           equ	4015	;# 
   328   000FAF                     SPBRG1          equ	4015	;# 
   329   000FB0                     SPBRGH          equ	4016	;# 
   330   000FB1                     T3CON           equ	4017	;# 
   331   000FB2                     TMR3            equ	4018	;# 
   332   000FB2                     TMR3L           equ	4018	;# 
   333   000FB3                     TMR3H           equ	4019	;# 
   334   000FB4                     CVRCON2         equ	4020	;# 
   335   000FB5                     CVRCON          equ	4021	;# 
   336   000FB6                     ECCP1AS         equ	4022	;# 
   337   000FB7                     PWM1CON         equ	4023	;# 
   338   000FB8                     BAUDCON         equ	4024	;# 
   339   000FB8                     BAUDCTL         equ	4024	;# 
   340   000FB9                     PSTRCON         equ	4025	;# 
   341   000FBA                     CCP2CON         equ	4026	;# 
   342   000FBB                     CCPR2           equ	4027	;# 
   343   000FBB                     CCPR2L          equ	4027	;# 
   344   000FBC                     CCPR2H          equ	4028	;# 
   345   000FBD                     CCP1CON         equ	4029	;# 
   346   000FBE                     CCPR1           equ	4030	;# 
   347   000FBE                     CCPR1L          equ	4030	;# 
   348   000FBF                     CCPR1H          equ	4031	;# 
   349   000FC0                     ADCON2          equ	4032	;# 
   350   000FC1                     ADCON1          equ	4033	;# 
   351   000FC2                     ADCON0          equ	4034	;# 
   352   000FC3                     ADRES           equ	4035	;# 
   353   000FC3                     ADRESL          equ	4035	;# 
   354   000FC4                     ADRESH          equ	4036	;# 
   355   000FC5                     SSPCON2         equ	4037	;# 
   356   000FC6                     SSPCON1         equ	4038	;# 
   357   000FC7                     SSPSTAT         equ	4039	;# 
   358   000FC8                     SSPADD          equ	4040	;# 
   359   000FC9                     SSPBUF          equ	4041	;# 
   360   000FCA                     T2CON           equ	4042	;# 
   361   000FCB                     PR2             equ	4043	;# 
   362   000FCB                     MEMCON          equ	4043	;# 
   363   000FCC                     TMR2            equ	4044	;# 
   364   000FCD                     T1CON           equ	4045	;# 
   365   000FCE                     TMR1            equ	4046	;# 
   366   000FCE                     TMR1L           equ	4046	;# 
   367   000FCF                     TMR1H           equ	4047	;# 
   368   000FD0                     RCON            equ	4048	;# 
   369   000FD1                     WDTCON          equ	4049	;# 
   370   000FD2                     HLVDCON         equ	4050	;# 
   371   000FD2                     LVDCON          equ	4050	;# 
   372   000FD3                     OSCCON          equ	4051	;# 
   373   000FD5                     T0CON           equ	4053	;# 
   374   000FD6                     TMR0            equ	4054	;# 
   375   000FD6                     TMR0L           equ	4054	;# 
   376   000FD7                     TMR0H           equ	4055	;# 
   377   000FD8                     STATUS          equ	4056	;# 
   378   000FD9                     FSR2            equ	4057	;# 
   379   000FD9                     FSR2L           equ	4057	;# 
   380   000FDA                     FSR2H           equ	4058	;# 
   381   000FDB                     PLUSW2          equ	4059	;# 
   382   000FDC                     PREINC2         equ	4060	;# 
   383   000FDD                     POSTDEC2        equ	4061	;# 
   384   000FDE                     POSTINC2        equ	4062	;# 
   385   000FDF                     INDF2           equ	4063	;# 
   386   000FE0                     BSR             equ	4064	;# 
   387   000FE1                     FSR1            equ	4065	;# 
   388   000FE1                     FSR1L           equ	4065	;# 
   389   000FE2                     FSR1H           equ	4066	;# 
   390   000FE3                     PLUSW1          equ	4067	;# 
   391   000FE4                     PREINC1         equ	4068	;# 
   392   000FE5                     POSTDEC1        equ	4069	;# 
   393   000FE6                     POSTINC1        equ	4070	;# 
   394   000FE7                     INDF1           equ	4071	;# 
   395   000FE8                     WREG            equ	4072	;# 
   396   000FE9                     FSR0            equ	4073	;# 
   397   000FE9                     FSR0L           equ	4073	;# 
   398   000FEA                     FSR0H           equ	4074	;# 
   399   000FEB                     PLUSW0          equ	4075	;# 
   400   000FEC                     PREINC0         equ	4076	;# 
   401   000FED                     POSTDEC0        equ	4077	;# 
   402   000FEE                     POSTINC0        equ	4078	;# 
   403   000FEF                     INDF0           equ	4079	;# 
   404   000FF0                     INTCON3         equ	4080	;# 
   405   000FF1                     INTCON2         equ	4081	;# 
   406   000FF2                     INTCON          equ	4082	;# 
   407   000FF3                     PROD            equ	4083	;# 
   408   000FF3                     PRODL           equ	4083	;# 
   409   000FF4                     PRODH           equ	4084	;# 
   410   000FF5                     TABLAT          equ	4085	;# 
   411   000FF6                     TBLPTR          equ	4086	;# 
   412   000FF6                     TBLPTRL         equ	4086	;# 
   413   000FF7                     TBLPTRH         equ	4087	;# 
   414   000FF8                     TBLPTRU         equ	4088	;# 
   415   000FF9                     PCLAT           equ	4089	;# 
   416   000FF9                     PC              equ	4089	;# 
   417   000FF9                     PCL             equ	4089	;# 
   418   000FFA                     PCLATH          equ	4090	;# 
   419   000FFB                     PCLATU          equ	4091	;# 
   420   000FFC                     STKPTR          equ	4092	;# 
   421   000FFD                     TOS             equ	4093	;# 
   422   000FFD                     TOSL            equ	4093	;# 
   423   000FFE                     TOSH            equ	4094	;# 
   424   000FFF                     TOSU            equ	4095	;# 
   425   000F77                     SSPMSK          equ	3959	;# 
   426   000F78                     SLRCON          equ	3960	;# 
   427   000F79                     CM2CON1         equ	3961	;# 
   428   000F7A                     CM2CON0         equ	3962	;# 
   429   000F7B                     CM1CON0         equ	3963	;# 
   430   000F7C                     WPUB            equ	3964	;# 
   431   000F7D                     IOCB            equ	3965	;# 
   432   000F7E                     ANSEL           equ	3966	;# 
   433   000F7F                     ANSELH          equ	3967	;# 
   434   000F80                     PORTA           equ	3968	;# 
   435   000F81                     PORTB           equ	3969	;# 
   436   000F82                     PORTC           equ	3970	;# 
   437   000F83                     PORTD           equ	3971	;# 
   438   000F84                     PORTE           equ	3972	;# 
   439   000F89                     LATA            equ	3977	;# 
   440   000F8A                     LATB            equ	3978	;# 
   441   000F8B                     LATC            equ	3979	;# 
   442   000F8C                     LATD            equ	3980	;# 
   443   000F8D                     LATE            equ	3981	;# 
   444   000F92                     TRISA           equ	3986	;# 
   445   000F92                     DDRA            equ	3986	;# 
   446   000F93                     TRISB           equ	3987	;# 
   447   000F93                     DDRB            equ	3987	;# 
   448   000F94                     TRISC           equ	3988	;# 
   449   000F94                     DDRC            equ	3988	;# 
   450   000F95                     TRISD           equ	3989	;# 
   451   000F95                     DDRD            equ	3989	;# 
   452   000F96                     TRISE           equ	3990	;# 
   453   000F96                     DDRE            equ	3990	;# 
   454   000F9B                     OSCTUNE         equ	3995	;# 
   455   000F9D                     PIE1            equ	3997	;# 
   456   000F9E                     PIR1            equ	3998	;# 
   457   000F9F                     IPR1            equ	3999	;# 
   458   000FA0                     PIE2            equ	4000	;# 
   459   000FA1                     PIR2            equ	4001	;# 
   460   000FA2                     IPR2            equ	4002	;# 
   461   000FA6                     EECON1          equ	4006	;# 
   462   000FA7                     EECON2          equ	4007	;# 
   463   000FA8                     EEDATA          equ	4008	;# 
   464   000FA9                     EEADR           equ	4009	;# 
   465   000FAA                     EEADRH          equ	4010	;# 
   466   000FAB                     RCSTA           equ	4011	;# 
   467   000FAB                     RCSTA1          equ	4011	;# 
   468   000FAC                     TXSTA           equ	4012	;# 
   469   000FAC                     TXSTA1          equ	4012	;# 
   470   000FAD                     TXREG           equ	4013	;# 
   471   000FAD                     TXREG1          equ	4013	;# 
   472   000FAE                     RCREG           equ	4014	;# 
   473   000FAE                     RCREG1          equ	4014	;# 
   474   000FAF                     SPBRG           equ	4015	;# 
   475   000FAF                     SPBRG1          equ	4015	;# 
   476   000FB0                     SPBRGH          equ	4016	;# 
   477   000FB1                     T3CON           equ	4017	;# 
   478   000FB2                     TMR3            equ	4018	;# 
   479   000FB2                     TMR3L           equ	4018	;# 
   480   000FB3                     TMR3H           equ	4019	;# 
   481   000FB4                     CVRCON2         equ	4020	;# 
   482   000FB5                     CVRCON          equ	4021	;# 
   483   000FB6                     ECCP1AS         equ	4022	;# 
   484   000FB7                     PWM1CON         equ	4023	;# 
   485   000FB8                     BAUDCON         equ	4024	;# 
   486   000FB8                     BAUDCTL         equ	4024	;# 
   487   000FB9                     PSTRCON         equ	4025	;# 
   488   000FBA                     CCP2CON         equ	4026	;# 
   489   000FBB                     CCPR2           equ	4027	;# 
   490   000FBB                     CCPR2L          equ	4027	;# 
   491   000FBC                     CCPR2H          equ	4028	;# 
   492   000FBD                     CCP1CON         equ	4029	;# 
   493   000FBE                     CCPR1           equ	4030	;# 
   494   000FBE                     CCPR1L          equ	4030	;# 
   495   000FBF                     CCPR1H          equ	4031	;# 
   496   000FC0                     ADCON2          equ	4032	;# 
   497   000FC1                     ADCON1          equ	4033	;# 
   498   000FC2                     ADCON0          equ	4034	;# 
   499   000FC3                     ADRES           equ	4035	;# 
   500   000FC3                     ADRESL          equ	4035	;# 
   501   000FC4                     ADRESH          equ	4036	;# 
   502   000FC5                     SSPCON2         equ	4037	;# 
   503   000FC6                     SSPCON1         equ	4038	;# 
   504   000FC7                     SSPSTAT         equ	4039	;# 
   505   000FC8                     SSPADD          equ	4040	;# 
   506   000FC9                     SSPBUF          equ	4041	;# 
   507   000FCA                     T2CON           equ	4042	;# 
   508   000FCB                     PR2             equ	4043	;# 
   509   000FCB                     MEMCON          equ	4043	;# 
   510   000FCC                     TMR2            equ	4044	;# 
   511   000FCD                     T1CON           equ	4045	;# 
   512   000FCE                     TMR1            equ	4046	;# 
   513   000FCE                     TMR1L           equ	4046	;# 
   514   000FCF                     TMR1H           equ	4047	;# 
   515   000FD0                     RCON            equ	4048	;# 
   516   000FD1                     WDTCON          equ	4049	;# 
   517   000FD2                     HLVDCON         equ	4050	;# 
   518   000FD2                     LVDCON          equ	4050	;# 
   519   000FD3                     OSCCON          equ	4051	;# 
   520   000FD5                     T0CON           equ	4053	;# 
   521   000FD6                     TMR0            equ	4054	;# 
   522   000FD6                     TMR0L           equ	4054	;# 
   523   000FD7                     TMR0H           equ	4055	;# 
   524   000FD8                     STATUS          equ	4056	;# 
   525   000FD9                     FSR2            equ	4057	;# 
   526   000FD9                     FSR2L           equ	4057	;# 
   527   000FDA                     FSR2H           equ	4058	;# 
   528   000FDB                     PLUSW2          equ	4059	;# 
   529   000FDC                     PREINC2         equ	4060	;# 
   530   000FDD                     POSTDEC2        equ	4061	;# 
   531   000FDE                     POSTINC2        equ	4062	;# 
   532   000FDF                     INDF2           equ	4063	;# 
   533   000FE0                     BSR             equ	4064	;# 
   534   000FE1                     FSR1            equ	4065	;# 
   535   000FE1                     FSR1L           equ	4065	;# 
   536   000FE2                     FSR1H           equ	4066	;# 
   537   000FE3                     PLUSW1          equ	4067	;# 
   538   000FE4                     PREINC1         equ	4068	;# 
   539   000FE5                     POSTDEC1        equ	4069	;# 
   540   000FE6                     POSTINC1        equ	4070	;# 
   541   000FE7                     INDF1           equ	4071	;# 
   542   000FE8                     WREG            equ	4072	;# 
   543   000FE9                     FSR0            equ	4073	;# 
   544   000FE9                     FSR0L           equ	4073	;# 
   545   000FEA                     FSR0H           equ	4074	;# 
   546   000FEB                     PLUSW0          equ	4075	;# 
   547   000FEC                     PREINC0         equ	4076	;# 
   548   000FED                     POSTDEC0        equ	4077	;# 
   549   000FEE                     POSTINC0        equ	4078	;# 
   550   000FEF                     INDF0           equ	4079	;# 
   551   000FF0                     INTCON3         equ	4080	;# 
   552   000FF1                     INTCON2         equ	4081	;# 
   553   000FF2                     INTCON          equ	4082	;# 
   554   000FF3                     PROD            equ	4083	;# 
   555   000FF3                     PRODL           equ	4083	;# 
   556   000FF4                     PRODH           equ	4084	;# 
   557   000FF5                     TABLAT          equ	4085	;# 
   558   000FF6                     TBLPTR          equ	4086	;# 
   559   000FF6                     TBLPTRL         equ	4086	;# 
   560   000FF7                     TBLPTRH         equ	4087	;# 
   561   000FF8                     TBLPTRU         equ	4088	;# 
   562   000FF9                     PCLAT           equ	4089	;# 
   563   000FF9                     PC              equ	4089	;# 
   564   000FF9                     PCL             equ	4089	;# 
   565   000FFA                     PCLATH          equ	4090	;# 
   566   000FFB                     PCLATU          equ	4091	;# 
   567   000FFC                     STKPTR          equ	4092	;# 
   568   000FFD                     TOS             equ	4093	;# 
   569   000FFD                     TOSL            equ	4093	;# 
   570   000FFE                     TOSH            equ	4094	;# 
   571   000FFF                     TOSU            equ	4095	;# 
   572   000F77                     SSPMSK          equ	3959	;# 
   573   000F78                     SLRCON          equ	3960	;# 
   574   000F79                     CM2CON1         equ	3961	;# 
   575   000F7A                     CM2CON0         equ	3962	;# 
   576   000F7B                     CM1CON0         equ	3963	;# 
   577   000F7C                     WPUB            equ	3964	;# 
   578   000F7D                     IOCB            equ	3965	;# 
   579   000F7E                     ANSEL           equ	3966	;# 
   580   000F7F                     ANSELH          equ	3967	;# 
   581   000F80                     PORTA           equ	3968	;# 
   582   000F81                     PORTB           equ	3969	;# 
   583   000F82                     PORTC           equ	3970	;# 
   584   000F83                     PORTD           equ	3971	;# 
   585   000F84                     PORTE           equ	3972	;# 
   586   000F89                     LATA            equ	3977	;# 
   587   000F8A                     LATB            equ	3978	;# 
   588   000F8B                     LATC            equ	3979	;# 
   589   000F8C                     LATD            equ	3980	;# 
   590   000F8D                     LATE            equ	3981	;# 
   591   000F92                     TRISA           equ	3986	;# 
   592   000F92                     DDRA            equ	3986	;# 
   593   000F93                     TRISB           equ	3987	;# 
   594   000F93                     DDRB            equ	3987	;# 
   595   000F94                     TRISC           equ	3988	;# 
   596   000F94                     DDRC            equ	3988	;# 
   597   000F95                     TRISD           equ	3989	;# 
   598   000F95                     DDRD            equ	3989	;# 
   599   000F96                     TRISE           equ	3990	;# 
   600   000F96                     DDRE            equ	3990	;# 
   601   000F9B                     OSCTUNE         equ	3995	;# 
   602   000F9D                     PIE1            equ	3997	;# 
   603   000F9E                     PIR1            equ	3998	;# 
   604   000F9F                     IPR1            equ	3999	;# 
   605   000FA0                     PIE2            equ	4000	;# 
   606   000FA1                     PIR2            equ	4001	;# 
   607   000FA2                     IPR2            equ	4002	;# 
   608   000FA6                     EECON1          equ	4006	;# 
   609   000FA7                     EECON2          equ	4007	;# 
   610   000FA8                     EEDATA          equ	4008	;# 
   611   000FA9                     EEADR           equ	4009	;# 
   612   000FAA                     EEADRH          equ	4010	;# 
   613   000FAB                     RCSTA           equ	4011	;# 
   614   000FAB                     RCSTA1          equ	4011	;# 
   615   000FAC                     TXSTA           equ	4012	;# 
   616   000FAC                     TXSTA1          equ	4012	;# 
   617   000FAD                     TXREG           equ	4013	;# 
   618   000FAD                     TXREG1          equ	4013	;# 
   619   000FAE                     RCREG           equ	4014	;# 
   620   000FAE                     RCREG1          equ	4014	;# 
   621   000FAF                     SPBRG           equ	4015	;# 
   622   000FAF                     SPBRG1          equ	4015	;# 
   623   000FB0                     SPBRGH          equ	4016	;# 
   624   000FB1                     T3CON           equ	4017	;# 
   625   000FB2                     TMR3            equ	4018	;# 
   626   000FB2                     TMR3L           equ	4018	;# 
   627   000FB3                     TMR3H           equ	4019	;# 
   628   000FB4                     CVRCON2         equ	4020	;# 
   629   000FB5                     CVRCON          equ	4021	;# 
   630   000FB6                     ECCP1AS         equ	4022	;# 
   631   000FB7                     PWM1CON         equ	4023	;# 
   632   000FB8                     BAUDCON         equ	4024	;# 
   633   000FB8                     BAUDCTL         equ	4024	;# 
   634   000FB9                     PSTRCON         equ	4025	;# 
   635   000FBA                     CCP2CON         equ	4026	;# 
   636   000FBB                     CCPR2           equ	4027	;# 
   637   000FBB                     CCPR2L          equ	4027	;# 
   638   000FBC                     CCPR2H          equ	4028	;# 
   639   000FBD                     CCP1CON         equ	4029	;# 
   640   000FBE                     CCPR1           equ	4030	;# 
   641   000FBE                     CCPR1L          equ	4030	;# 
   642   000FBF                     CCPR1H          equ	4031	;# 
   643   000FC0                     ADCON2          equ	4032	;# 
   644   000FC1                     ADCON1          equ	4033	;# 
   645   000FC2                     ADCON0          equ	4034	;# 
   646   000FC3                     ADRES           equ	4035	;# 
   647   000FC3                     ADRESL          equ	4035	;# 
   648   000FC4                     ADRESH          equ	4036	;# 
   649   000FC5                     SSPCON2         equ	4037	;# 
   650   000FC6                     SSPCON1         equ	4038	;# 
   651   000FC7                     SSPSTAT         equ	4039	;# 
   652   000FC8                     SSPADD          equ	4040	;# 
   653   000FC9                     SSPBUF          equ	4041	;# 
   654   000FCA                     T2CON           equ	4042	;# 
   655   000FCB                     PR2             equ	4043	;# 
   656   000FCB                     MEMCON          equ	4043	;# 
   657   000FCC                     TMR2            equ	4044	;# 
   658   000FCD                     T1CON           equ	4045	;# 
   659   000FCE                     TMR1            equ	4046	;# 
   660   000FCE                     TMR1L           equ	4046	;# 
   661   000FCF                     TMR1H           equ	4047	;# 
   662   000FD0                     RCON            equ	4048	;# 
   663   000FD1                     WDTCON          equ	4049	;# 
   664   000FD2                     HLVDCON         equ	4050	;# 
   665   000FD2                     LVDCON          equ	4050	;# 
   666   000FD3                     OSCCON          equ	4051	;# 
   667   000FD5                     T0CON           equ	4053	;# 
   668   000FD6                     TMR0            equ	4054	;# 
   669   000FD6                     TMR0L           equ	4054	;# 
   670   000FD7                     TMR0H           equ	4055	;# 
   671   000FD8                     STATUS          equ	4056	;# 
   672   000FD9                     FSR2            equ	4057	;# 
   673   000FD9                     FSR2L           equ	4057	;# 
   674   000FDA                     FSR2H           equ	4058	;# 
   675   000FDB                     PLUSW2          equ	4059	;# 
   676   000FDC                     PREINC2         equ	4060	;# 
   677   000FDD                     POSTDEC2        equ	4061	;# 
   678   000FDE                     POSTINC2        equ	4062	;# 
   679   000FDF                     INDF2           equ	4063	;# 
   680   000FE0                     BSR             equ	4064	;# 
   681   000FE1                     FSR1            equ	4065	;# 
   682   000FE1                     FSR1L           equ	4065	;# 
   683   000FE2                     FSR1H           equ	4066	;# 
   684   000FE3                     PLUSW1          equ	4067	;# 
   685   000FE4                     PREINC1         equ	4068	;# 
   686   000FE5                     POSTDEC1        equ	4069	;# 
   687   000FE6                     POSTINC1        equ	4070	;# 
   688   000FE7                     INDF1           equ	4071	;# 
   689   000FE8                     WREG            equ	4072	;# 
   690   000FE9                     FSR0            equ	4073	;# 
   691   000FE9                     FSR0L           equ	4073	;# 
   692   000FEA                     FSR0H           equ	4074	;# 
   693   000FEB                     PLUSW0          equ	4075	;# 
   694   000FEC                     PREINC0         equ	4076	;# 
   695   000FED                     POSTDEC0        equ	4077	;# 
   696   000FEE                     POSTINC0        equ	4078	;# 
   697   000FEF                     INDF0           equ	4079	;# 
   698   000FF0                     INTCON3         equ	4080	;# 
   699   000FF1                     INTCON2         equ	4081	;# 
   700   000FF2                     INTCON          equ	4082	;# 
   701   000FF3                     PROD            equ	4083	;# 
   702   000FF3                     PRODL           equ	4083	;# 
   703   000FF4                     PRODH           equ	4084	;# 
   704   000FF5                     TABLAT          equ	4085	;# 
   705   000FF6                     TBLPTR          equ	4086	;# 
   706   000FF6                     TBLPTRL         equ	4086	;# 
   707   000FF7                     TBLPTRH         equ	4087	;# 
   708   000FF8                     TBLPTRU         equ	4088	;# 
   709   000FF9                     PCLAT           equ	4089	;# 
   710   000FF9                     PC              equ	4089	;# 
   711   000FF9                     PCL             equ	4089	;# 
   712   000FFA                     PCLATH          equ	4090	;# 
   713   000FFB                     PCLATU          equ	4091	;# 
   714   000FFC                     STKPTR          equ	4092	;# 
   715   000FFD                     TOS             equ	4093	;# 
   716   000FFD                     TOSL            equ	4093	;# 
   717   000FFE                     TOSH            equ	4094	;# 
   718   000FFF                     TOSU            equ	4095	;# 
   719   000F77                     SSPMSK          equ	3959	;# 
   720   000F78                     SLRCON          equ	3960	;# 
   721   000F79                     CM2CON1         equ	3961	;# 
   722   000F7A                     CM2CON0         equ	3962	;# 
   723   000F7B                     CM1CON0         equ	3963	;# 
   724   000F7C                     WPUB            equ	3964	;# 
   725   000F7D                     IOCB            equ	3965	;# 
   726   000F7E                     ANSEL           equ	3966	;# 
   727   000F7F                     ANSELH          equ	3967	;# 
   728   000F80                     PORTA           equ	3968	;# 
   729   000F81                     PORTB           equ	3969	;# 
   730   000F82                     PORTC           equ	3970	;# 
   731   000F83                     PORTD           equ	3971	;# 
   732   000F84                     PORTE           equ	3972	;# 
   733   000F89                     LATA            equ	3977	;# 
   734   000F8A                     LATB            equ	3978	;# 
   735   000F8B                     LATC            equ	3979	;# 
   736   000F8C                     LATD            equ	3980	;# 
   737   000F8D                     LATE            equ	3981	;# 
   738   000F92                     TRISA           equ	3986	;# 
   739   000F92                     DDRA            equ	3986	;# 
   740   000F93                     TRISB           equ	3987	;# 
   741   000F93                     DDRB            equ	3987	;# 
   742   000F94                     TRISC           equ	3988	;# 
   743   000F94                     DDRC            equ	3988	;# 
   744   000F95                     TRISD           equ	3989	;# 
   745   000F95                     DDRD            equ	3989	;# 
   746   000F96                     TRISE           equ	3990	;# 
   747   000F96                     DDRE            equ	3990	;# 
   748   000F9B                     OSCTUNE         equ	3995	;# 
   749   000F9D                     PIE1            equ	3997	;# 
   750   000F9E                     PIR1            equ	3998	;# 
   751   000F9F                     IPR1            equ	3999	;# 
   752   000FA0                     PIE2            equ	4000	;# 
   753   000FA1                     PIR2            equ	4001	;# 
   754   000FA2                     IPR2            equ	4002	;# 
   755   000FA6                     EECON1          equ	4006	;# 
   756   000FA7                     EECON2          equ	4007	;# 
   757   000FA8                     EEDATA          equ	4008	;# 
   758   000FA9                     EEADR           equ	4009	;# 
   759   000FAA                     EEADRH          equ	4010	;# 
   760   000FAB                     RCSTA           equ	4011	;# 
   761   000FAB                     RCSTA1          equ	4011	;# 
   762   000FAC                     TXSTA           equ	4012	;# 
   763   000FAC                     TXSTA1          equ	4012	;# 
   764   000FAD                     TXREG           equ	4013	;# 
   765   000FAD                     TXREG1          equ	4013	;# 
   766   000FAE                     RCREG           equ	4014	;# 
   767   000FAE                     RCREG1          equ	4014	;# 
   768   000FAF                     SPBRG           equ	4015	;# 
   769   000FAF                     SPBRG1          equ	4015	;# 
   770   000FB0                     SPBRGH          equ	4016	;# 
   771   000FB1                     T3CON           equ	4017	;# 
   772   000FB2                     TMR3            equ	4018	;# 
   773   000FB2                     TMR3L           equ	4018	;# 
   774   000FB3                     TMR3H           equ	4019	;# 
   775   000FB4                     CVRCON2         equ	4020	;# 
   776   000FB5                     CVRCON          equ	4021	;# 
   777   000FB6                     ECCP1AS         equ	4022	;# 
   778   000FB7                     PWM1CON         equ	4023	;# 
   779   000FB8                     BAUDCON         equ	4024	;# 
   780   000FB8                     BAUDCTL         equ	4024	;# 
   781   000FB9                     PSTRCON         equ	4025	;# 
   782   000FBA                     CCP2CON         equ	4026	;# 
   783   000FBB                     CCPR2           equ	4027	;# 
   784   000FBB                     CCPR2L          equ	4027	;# 
   785   000FBC                     CCPR2H          equ	4028	;# 
   786   000FBD                     CCP1CON         equ	4029	;# 
   787   000FBE                     CCPR1           equ	4030	;# 
   788   000FBE                     CCPR1L          equ	4030	;# 
   789   000FBF                     CCPR1H          equ	4031	;# 
   790   000FC0                     ADCON2          equ	4032	;# 
   791   000FC1                     ADCON1          equ	4033	;# 
   792   000FC2                     ADCON0          equ	4034	;# 
   793   000FC3                     ADRES           equ	4035	;# 
   794   000FC3                     ADRESL          equ	4035	;# 
   795   000FC4                     ADRESH          equ	4036	;# 
   796   000FC5                     SSPCON2         equ	4037	;# 
   797   000FC6                     SSPCON1         equ	4038	;# 
   798   000FC7                     SSPSTAT         equ	4039	;# 
   799   000FC8                     SSPADD          equ	4040	;# 
   800   000FC9                     SSPBUF          equ	4041	;# 
   801   000FCA                     T2CON           equ	4042	;# 
   802   000FCB                     PR2             equ	4043	;# 
   803   000FCB                     MEMCON          equ	4043	;# 
   804   000FCC                     TMR2            equ	4044	;# 
   805   000FCD                     T1CON           equ	4045	;# 
   806   000FCE                     TMR1            equ	4046	;# 
   807   000FCE                     TMR1L           equ	4046	;# 
   808   000FCF                     TMR1H           equ	4047	;# 
   809   000FD0                     RCON            equ	4048	;# 
   810   000FD1                     WDTCON          equ	4049	;# 
   811   000FD2                     HLVDCON         equ	4050	;# 
   812   000FD2                     LVDCON          equ	4050	;# 
   813   000FD3                     OSCCON          equ	4051	;# 
   814   000FD5                     T0CON           equ	4053	;# 
   815   000FD6                     TMR0            equ	4054	;# 
   816   000FD6                     TMR0L           equ	4054	;# 
   817   000FD7                     TMR0H           equ	4055	;# 
   818   000FD8                     STATUS          equ	4056	;# 
   819   000FD9                     FSR2            equ	4057	;# 
   820   000FD9                     FSR2L           equ	4057	;# 
   821   000FDA                     FSR2H           equ	4058	;# 
   822   000FDB                     PLUSW2          equ	4059	;# 
   823   000FDC                     PREINC2         equ	4060	;# 
   824   000FDD                     POSTDEC2        equ	4061	;# 
   825   000FDE                     POSTINC2        equ	4062	;# 
   826   000FDF                     INDF2           equ	4063	;# 
   827   000FE0                     BSR             equ	4064	;# 
   828   000FE1                     FSR1            equ	4065	;# 
   829   000FE1                     FSR1L           equ	4065	;# 
   830   000FE2                     FSR1H           equ	4066	;# 
   831   000FE3                     PLUSW1          equ	4067	;# 
   832   000FE4                     PREINC1         equ	4068	;# 
   833   000FE5                     POSTDEC1        equ	4069	;# 
   834   000FE6                     POSTINC1        equ	4070	;# 
   835   000FE7                     INDF1           equ	4071	;# 
   836   000FE8                     WREG            equ	4072	;# 
   837   000FE9                     FSR0            equ	4073	;# 
   838   000FE9                     FSR0L           equ	4073	;# 
   839   000FEA                     FSR0H           equ	4074	;# 
   840   000FEB                     PLUSW0          equ	4075	;# 
   841   000FEC                     PREINC0         equ	4076	;# 
   842   000FED                     POSTDEC0        equ	4077	;# 
   843   000FEE                     POSTINC0        equ	4078	;# 
   844   000FEF                     INDF0           equ	4079	;# 
   845   000FF0                     INTCON3         equ	4080	;# 
   846   000FF1                     INTCON2         equ	4081	;# 
   847   000FF2                     INTCON          equ	4082	;# 
   848   000FF3                     PROD            equ	4083	;# 
   849   000FF3                     PRODL           equ	4083	;# 
   850   000FF4                     PRODH           equ	4084	;# 
   851   000FF5                     TABLAT          equ	4085	;# 
   852   000FF6                     TBLPTR          equ	4086	;# 
   853   000FF6                     TBLPTRL         equ	4086	;# 
   854   000FF7                     TBLPTRH         equ	4087	;# 
   855   000FF8                     TBLPTRU         equ	4088	;# 
   856   000FF9                     PCLAT           equ	4089	;# 
   857   000FF9                     PC              equ	4089	;# 
   858   000FF9                     PCL             equ	4089	;# 
   859   000FFA                     PCLATH          equ	4090	;# 
   860   000FFB                     PCLATU          equ	4091	;# 
   861   000FFC                     STKPTR          equ	4092	;# 
   862   000FFD                     TOS             equ	4093	;# 
   863   000FFD                     TOSL            equ	4093	;# 
   864   000FFE                     TOSH            equ	4094	;# 
   865   000FFF                     TOSU            equ	4095	;# 
   866   000F77                     SSPMSK          equ	3959	;# 
   867   000F78                     SLRCON          equ	3960	;# 
   868   000F79                     CM2CON1         equ	3961	;# 
   869   000F7A                     CM2CON0         equ	3962	;# 
   870   000F7B                     CM1CON0         equ	3963	;# 
   871   000F7C                     WPUB            equ	3964	;# 
   872   000F7D                     IOCB            equ	3965	;# 
   873   000F7E                     ANSEL           equ	3966	;# 
   874   000F7F                     ANSELH          equ	3967	;# 
   875   000F80                     PORTA           equ	3968	;# 
   876   000F81                     PORTB           equ	3969	;# 
   877   000F82                     PORTC           equ	3970	;# 
   878   000F83                     PORTD           equ	3971	;# 
   879   000F84                     PORTE           equ	3972	;# 
   880   000F89                     LATA            equ	3977	;# 
   881   000F8A                     LATB            equ	3978	;# 
   882   000F8B                     LATC            equ	3979	;# 
   883   000F8C                     LATD            equ	3980	;# 
   884   000F8D                     LATE            equ	3981	;# 
   885   000F92                     TRISA           equ	3986	;# 
   886   000F92                     DDRA            equ	3986	;# 
   887   000F93                     TRISB           equ	3987	;# 
   888   000F93                     DDRB            equ	3987	;# 
   889   000F94                     TRISC           equ	3988	;# 
   890   000F94                     DDRC            equ	3988	;# 
   891   000F95                     TRISD           equ	3989	;# 
   892   000F95                     DDRD            equ	3989	;# 
   893   000F96                     TRISE           equ	3990	;# 
   894   000F96                     DDRE            equ	3990	;# 
   895   000F9B                     OSCTUNE         equ	3995	;# 
   896   000F9D                     PIE1            equ	3997	;# 
   897   000F9E                     PIR1            equ	3998	;# 
   898   000F9F                     IPR1            equ	3999	;# 
   899   000FA0                     PIE2            equ	4000	;# 
   900   000FA1                     PIR2            equ	4001	;# 
   901   000FA2                     IPR2            equ	4002	;# 
   902   000FA6                     EECON1          equ	4006	;# 
   903   000FA7                     EECON2          equ	4007	;# 
   904   000FA8                     EEDATA          equ	4008	;# 
   905   000FA9                     EEADR           equ	4009	;# 
   906   000FAA                     EEADRH          equ	4010	;# 
   907   000FAB                     RCSTA           equ	4011	;# 
   908   000FAB                     RCSTA1          equ	4011	;# 
   909   000FAC                     TXSTA           equ	4012	;# 
   910   000FAC                     TXSTA1          equ	4012	;# 
   911   000FAD                     TXREG           equ	4013	;# 
   912   000FAD                     TXREG1          equ	4013	;# 
   913   000FAE                     RCREG           equ	4014	;# 
   914   000FAE                     RCREG1          equ	4014	;# 
   915   000FAF                     SPBRG           equ	4015	;# 
   916   000FAF                     SPBRG1          equ	4015	;# 
   917   000FB0                     SPBRGH          equ	4016	;# 
   918   000FB1                     T3CON           equ	4017	;# 
   919   000FB2                     TMR3            equ	4018	;# 
   920   000FB2                     TMR3L           equ	4018	;# 
   921   000FB3                     TMR3H           equ	4019	;# 
   922   000FB4                     CVRCON2         equ	4020	;# 
   923   000FB5                     CVRCON          equ	4021	;# 
   924   000FB6                     ECCP1AS         equ	4022	;# 
   925   000FB7                     PWM1CON         equ	4023	;# 
   926   000FB8                     BAUDCON         equ	4024	;# 
   927   000FB8                     BAUDCTL         equ	4024	;# 
   928   000FB9                     PSTRCON         equ	4025	;# 
   929   000FBA                     CCP2CON         equ	4026	;# 
   930   000FBB                     CCPR2           equ	4027	;# 
   931   000FBB                     CCPR2L          equ	4027	;# 
   932   000FBC                     CCPR2H          equ	4028	;# 
   933   000FBD                     CCP1CON         equ	4029	;# 
   934   000FBE                     CCPR1           equ	4030	;# 
   935   000FBE                     CCPR1L          equ	4030	;# 
   936   000FBF                     CCPR1H          equ	4031	;# 
   937   000FC0                     ADCON2          equ	4032	;# 
   938   000FC1                     ADCON1          equ	4033	;# 
   939   000FC2                     ADCON0          equ	4034	;# 
   940   000FC3                     ADRES           equ	4035	;# 
   941   000FC3                     ADRESL          equ	4035	;# 
   942   000FC4                     ADRESH          equ	4036	;# 
   943   000FC5                     SSPCON2         equ	4037	;# 
   944   000FC6                     SSPCON1         equ	4038	;# 
   945   000FC7                     SSPSTAT         equ	4039	;# 
   946   000FC8                     SSPADD          equ	4040	;# 
   947   000FC9                     SSPBUF          equ	4041	;# 
   948   000FCA                     T2CON           equ	4042	;# 
   949   000FCB                     PR2             equ	4043	;# 
   950   000FCB                     MEMCON          equ	4043	;# 
   951   000FCC                     TMR2            equ	4044	;# 
   952   000FCD                     T1CON           equ	4045	;# 
   953   000FCE                     TMR1            equ	4046	;# 
   954   000FCE                     TMR1L           equ	4046	;# 
   955   000FCF                     TMR1H           equ	4047	;# 
   956   000FD0                     RCON            equ	4048	;# 
   957   000FD1                     WDTCON          equ	4049	;# 
   958   000FD2                     HLVDCON         equ	4050	;# 
   959   000FD2                     LVDCON          equ	4050	;# 
   960   000FD3                     OSCCON          equ	4051	;# 
   961   000FD5                     T0CON           equ	4053	;# 
   962   000FD6                     TMR0            equ	4054	;# 
   963   000FD6                     TMR0L           equ	4054	;# 
   964   000FD7                     TMR0H           equ	4055	;# 
   965   000FD8                     STATUS          equ	4056	;# 
   966   000FD9                     FSR2            equ	4057	;# 
   967   000FD9                     FSR2L           equ	4057	;# 
   968   000FDA                     FSR2H           equ	4058	;# 
   969   000FDB                     PLUSW2          equ	4059	;# 
   970   000FDC                     PREINC2         equ	4060	;# 
   971   000FDD                     POSTDEC2        equ	4061	;# 
   972   000FDE                     POSTINC2        equ	4062	;# 
   973   000FDF                     INDF2           equ	4063	;# 
   974   000FE0                     BSR             equ	4064	;# 
   975   000FE1                     FSR1            equ	4065	;# 
   976   000FE1                     FSR1L           equ	4065	;# 
   977   000FE2                     FSR1H           equ	4066	;# 
   978   000FE3                     PLUSW1          equ	4067	;# 
   979   000FE4                     PREINC1         equ	4068	;# 
   980   000FE5                     POSTDEC1        equ	4069	;# 
   981   000FE6                     POSTINC1        equ	4070	;# 
   982   000FE7                     INDF1           equ	4071	;# 
   983   000FE8                     WREG            equ	4072	;# 
   984   000FE9                     FSR0            equ	4073	;# 
   985   000FE9                     FSR0L           equ	4073	;# 
   986   000FEA                     FSR0H           equ	4074	;# 
   987   000FEB                     PLUSW0          equ	4075	;# 
   988   000FEC                     PREINC0         equ	4076	;# 
   989   000FED                     POSTDEC0        equ	4077	;# 
   990   000FEE                     POSTINC0        equ	4078	;# 
   991   000FEF                     INDF0           equ	4079	;# 
   992   000FF0                     INTCON3         equ	4080	;# 
   993   000FF1                     INTCON2         equ	4081	;# 
   994   000FF2                     INTCON          equ	4082	;# 
   995   000FF3                     PROD            equ	4083	;# 
   996   000FF3                     PRODL           equ	4083	;# 
   997   000FF4                     PRODH           equ	4084	;# 
   998   000FF5                     TABLAT          equ	4085	;# 
   999   000FF6                     TBLPTR          equ	4086	;# 
  1000   000FF6                     TBLPTRL         equ	4086	;# 
  1001   000FF7                     TBLPTRH         equ	4087	;# 
  1002   000FF8                     TBLPTRU         equ	4088	;# 
  1003   000FF9                     PCLAT           equ	4089	;# 
  1004   000FF9                     PC              equ	4089	;# 
  1005   000FF9                     PCL             equ	4089	;# 
  1006   000FFA                     PCLATH          equ	4090	;# 
  1007   000FFB                     PCLATU          equ	4091	;# 
  1008   000FFC                     STKPTR          equ	4092	;# 
  1009   000FFD                     TOS             equ	4093	;# 
  1010   000FFD                     TOSL            equ	4093	;# 
  1011   000FFE                     TOSH            equ	4094	;# 
  1012   000FFF                     TOSU            equ	4095	;# 
  1013   000F77                     SSPMSK          equ	3959	;# 
  1014   000F78                     SLRCON          equ	3960	;# 
  1015   000F79                     CM2CON1         equ	3961	;# 
  1016   000F7A                     CM2CON0         equ	3962	;# 
  1017   000F7B                     CM1CON0         equ	3963	;# 
  1018   000F7C                     WPUB            equ	3964	;# 
  1019   000F7D                     IOCB            equ	3965	;# 
  1020   000F7E                     ANSEL           equ	3966	;# 
  1021   000F7F                     ANSELH          equ	3967	;# 
  1022   000F80                     PORTA           equ	3968	;# 
  1023   000F81                     PORTB           equ	3969	;# 
  1024   000F82                     PORTC           equ	3970	;# 
  1025   000F83                     PORTD           equ	3971	;# 
  1026   000F84                     PORTE           equ	3972	;# 
  1027   000F89                     LATA            equ	3977	;# 
  1028   000F8A                     LATB            equ	3978	;# 
  1029   000F8B                     LATC            equ	3979	;# 
  1030   000F8C                     LATD            equ	3980	;# 
  1031   000F8D                     LATE            equ	3981	;# 
  1032   000F92                     TRISA           equ	3986	;# 
  1033   000F92                     DDRA            equ	3986	;# 
  1034   000F93                     TRISB           equ	3987	;# 
  1035   000F93                     DDRB            equ	3987	;# 
  1036   000F94                     TRISC           equ	3988	;# 
  1037   000F94                     DDRC            equ	3988	;# 
  1038   000F95                     TRISD           equ	3989	;# 
  1039   000F95                     DDRD            equ	3989	;# 
  1040   000F96                     TRISE           equ	3990	;# 
  1041   000F96                     DDRE            equ	3990	;# 
  1042   000F9B                     OSCTUNE         equ	3995	;# 
  1043   000F9D                     PIE1            equ	3997	;# 
  1044   000F9E                     PIR1            equ	3998	;# 
  1045   000F9F                     IPR1            equ	3999	;# 
  1046   000FA0                     PIE2            equ	4000	;# 
  1047   000FA1                     PIR2            equ	4001	;# 
  1048   000FA2                     IPR2            equ	4002	;# 
  1049   000FA6                     EECON1          equ	4006	;# 
  1050   000FA7                     EECON2          equ	4007	;# 
  1051   000FA8                     EEDATA          equ	4008	;# 
  1052   000FA9                     EEADR           equ	4009	;# 
  1053   000FAA                     EEADRH          equ	4010	;# 
  1054   000FAB                     RCSTA           equ	4011	;# 
  1055   000FAB                     RCSTA1          equ	4011	;# 
  1056   000FAC                     TXSTA           equ	4012	;# 
  1057   000FAC                     TXSTA1          equ	4012	;# 
  1058   000FAD                     TXREG           equ	4013	;# 
  1059   000FAD                     TXREG1          equ	4013	;# 
  1060   000FAE                     RCREG           equ	4014	;# 
  1061   000FAE                     RCREG1          equ	4014	;# 
  1062   000FAF                     SPBRG           equ	4015	;# 
  1063   000FAF                     SPBRG1          equ	4015	;# 
  1064   000FB0                     SPBRGH          equ	4016	;# 
  1065   000FB1                     T3CON           equ	4017	;# 
  1066   000FB2                     TMR3            equ	4018	;# 
  1067   000FB2                     TMR3L           equ	4018	;# 
  1068   000FB3                     TMR3H           equ	4019	;# 
  1069   000FB4                     CVRCON2         equ	4020	;# 
  1070   000FB5                     CVRCON          equ	4021	;# 
  1071   000FB6                     ECCP1AS         equ	4022	;# 
  1072   000FB7                     PWM1CON         equ	4023	;# 
  1073   000FB8                     BAUDCON         equ	4024	;# 
  1074   000FB8                     BAUDCTL         equ	4024	;# 
  1075   000FB9                     PSTRCON         equ	4025	;# 
  1076   000FBA                     CCP2CON         equ	4026	;# 
  1077   000FBB                     CCPR2           equ	4027	;# 
  1078   000FBB                     CCPR2L          equ	4027	;# 
  1079   000FBC                     CCPR2H          equ	4028	;# 
  1080   000FBD                     CCP1CON         equ	4029	;# 
  1081   000FBE                     CCPR1           equ	4030	;# 
  1082   000FBE                     CCPR1L          equ	4030	;# 
  1083   000FBF                     CCPR1H          equ	4031	;# 
  1084   000FC0                     ADCON2          equ	4032	;# 
  1085   000FC1                     ADCON1          equ	4033	;# 
  1086   000FC2                     ADCON0          equ	4034	;# 
  1087   000FC3                     ADRES           equ	4035	;# 
  1088   000FC3                     ADRESL          equ	4035	;# 
  1089   000FC4                     ADRESH          equ	4036	;# 
  1090   000FC5                     SSPCON2         equ	4037	;# 
  1091   000FC6                     SSPCON1         equ	4038	;# 
  1092   000FC7                     SSPSTAT         equ	4039	;# 
  1093   000FC8                     SSPADD          equ	4040	;# 
  1094   000FC9                     SSPBUF          equ	4041	;# 
  1095   000FCA                     T2CON           equ	4042	;# 
  1096   000FCB                     PR2             equ	4043	;# 
  1097   000FCB                     MEMCON          equ	4043	;# 
  1098   000FCC                     TMR2            equ	4044	;# 
  1099   000FCD                     T1CON           equ	4045	;# 
  1100   000FCE                     TMR1            equ	4046	;# 
  1101   000FCE                     TMR1L           equ	4046	;# 
  1102   000FCF                     TMR1H           equ	4047	;# 
  1103   000FD0                     RCON            equ	4048	;# 
  1104   000FD1                     WDTCON          equ	4049	;# 
  1105   000FD2                     HLVDCON         equ	4050	;# 
  1106   000FD2                     LVDCON          equ	4050	;# 
  1107   000FD3                     OSCCON          equ	4051	;# 
  1108   000FD5                     T0CON           equ	4053	;# 
  1109   000FD6                     TMR0            equ	4054	;# 
  1110   000FD6                     TMR0L           equ	4054	;# 
  1111   000FD7                     TMR0H           equ	4055	;# 
  1112   000FD8                     STATUS          equ	4056	;# 
  1113   000FD9                     FSR2            equ	4057	;# 
  1114   000FD9                     FSR2L           equ	4057	;# 
  1115   000FDA                     FSR2H           equ	4058	;# 
  1116   000FDB                     PLUSW2          equ	4059	;# 
  1117   000FDC                     PREINC2         equ	4060	;# 
  1118   000FDD                     POSTDEC2        equ	4061	;# 
  1119   000FDE                     POSTINC2        equ	4062	;# 
  1120   000FDF                     INDF2           equ	4063	;# 
  1121   000FE0                     BSR             equ	4064	;# 
  1122   000FE1                     FSR1            equ	4065	;# 
  1123   000FE1                     FSR1L           equ	4065	;# 
  1124   000FE2                     FSR1H           equ	4066	;# 
  1125   000FE3                     PLUSW1          equ	4067	;# 
  1126   000FE4                     PREINC1         equ	4068	;# 
  1127   000FE5                     POSTDEC1        equ	4069	;# 
  1128   000FE6                     POSTINC1        equ	4070	;# 
  1129   000FE7                     INDF1           equ	4071	;# 
  1130   000FE8                     WREG            equ	4072	;# 
  1131   000FE9                     FSR0            equ	4073	;# 
  1132   000FE9                     FSR0L           equ	4073	;# 
  1133   000FEA                     FSR0H           equ	4074	;# 
  1134   000FEB                     PLUSW0          equ	4075	;# 
  1135   000FEC                     PREINC0         equ	4076	;# 
  1136   000FED                     POSTDEC0        equ	4077	;# 
  1137   000FEE                     POSTINC0        equ	4078	;# 
  1138   000FEF                     INDF0           equ	4079	;# 
  1139   000FF0                     INTCON3         equ	4080	;# 
  1140   000FF1                     INTCON2         equ	4081	;# 
  1141   000FF2                     INTCON          equ	4082	;# 
  1142   000FF3                     PROD            equ	4083	;# 
  1143   000FF3                     PRODL           equ	4083	;# 
  1144   000FF4                     PRODH           equ	4084	;# 
  1145   000FF5                     TABLAT          equ	4085	;# 
  1146   000FF6                     TBLPTR          equ	4086	;# 
  1147   000FF6                     TBLPTRL         equ	4086	;# 
  1148   000FF7                     TBLPTRH         equ	4087	;# 
  1149   000FF8                     TBLPTRU         equ	4088	;# 
  1150   000FF9                     PCLAT           equ	4089	;# 
  1151   000FF9                     PC              equ	4089	;# 
  1152   000FF9                     PCL             equ	4089	;# 
  1153   000FFA                     PCLATH          equ	4090	;# 
  1154   000FFB                     PCLATU          equ	4091	;# 
  1155   000FFC                     STKPTR          equ	4092	;# 
  1156   000FFD                     TOS             equ	4093	;# 
  1157   000FFD                     TOSL            equ	4093	;# 
  1158   000FFE                     TOSH            equ	4094	;# 
  1159   000FFF                     TOSU            equ	4095	;# 
  1160   000F77                     SSPMSK          equ	3959	;# 
  1161   000F78                     SLRCON          equ	3960	;# 
  1162   000F79                     CM2CON1         equ	3961	;# 
  1163   000F7A                     CM2CON0         equ	3962	;# 
  1164   000F7B                     CM1CON0         equ	3963	;# 
  1165   000F7C                     WPUB            equ	3964	;# 
  1166   000F7D                     IOCB            equ	3965	;# 
  1167   000F7E                     ANSEL           equ	3966	;# 
  1168   000F7F                     ANSELH          equ	3967	;# 
  1169   000F80                     PORTA           equ	3968	;# 
  1170   000F81                     PORTB           equ	3969	;# 
  1171   000F82                     PORTC           equ	3970	;# 
  1172   000F83                     PORTD           equ	3971	;# 
  1173   000F84                     PORTE           equ	3972	;# 
  1174   000F89                     LATA            equ	3977	;# 
  1175   000F8A                     LATB            equ	3978	;# 
  1176   000F8B                     LATC            equ	3979	;# 
  1177   000F8C                     LATD            equ	3980	;# 
  1178   000F8D                     LATE            equ	3981	;# 
  1179   000F92                     TRISA           equ	3986	;# 
  1180   000F92                     DDRA            equ	3986	;# 
  1181   000F93                     TRISB           equ	3987	;# 
  1182   000F93                     DDRB            equ	3987	;# 
  1183   000F94                     TRISC           equ	3988	;# 
  1184   000F94                     DDRC            equ	3988	;# 
  1185   000F95                     TRISD           equ	3989	;# 
  1186   000F95                     DDRD            equ	3989	;# 
  1187   000F96                     TRISE           equ	3990	;# 
  1188   000F96                     DDRE            equ	3990	;# 
  1189   000F9B                     OSCTUNE         equ	3995	;# 
  1190   000F9D                     PIE1            equ	3997	;# 
  1191   000F9E                     PIR1            equ	3998	;# 
  1192   000F9F                     IPR1            equ	3999	;# 
  1193   000FA0                     PIE2            equ	4000	;# 
  1194   000FA1                     PIR2            equ	4001	;# 
  1195   000FA2                     IPR2            equ	4002	;# 
  1196   000FA6                     EECON1          equ	4006	;# 
  1197   000FA7                     EECON2          equ	4007	;# 
  1198   000FA8                     EEDATA          equ	4008	;# 
  1199   000FA9                     EEADR           equ	4009	;# 
  1200   000FAA                     EEADRH          equ	4010	;# 
  1201   000FAB                     RCSTA           equ	4011	;# 
  1202   000FAB                     RCSTA1          equ	4011	;# 
  1203   000FAC                     TXSTA           equ	4012	;# 
  1204   000FAC                     TXSTA1          equ	4012	;# 
  1205   000FAD                     TXREG           equ	4013	;# 
  1206   000FAD                     TXREG1          equ	4013	;# 
  1207   000FAE                     RCREG           equ	4014	;# 
  1208   000FAE                     RCREG1          equ	4014	;# 
  1209   000FAF                     SPBRG           equ	4015	;# 
  1210   000FAF                     SPBRG1          equ	4015	;# 
  1211   000FB0                     SPBRGH          equ	4016	;# 
  1212   000FB1                     T3CON           equ	4017	;# 
  1213   000FB2                     TMR3            equ	4018	;# 
  1214   000FB2                     TMR3L           equ	4018	;# 
  1215   000FB3                     TMR3H           equ	4019	;# 
  1216   000FB4                     CVRCON2         equ	4020	;# 
  1217   000FB5                     CVRCON          equ	4021	;# 
  1218   000FB6                     ECCP1AS         equ	4022	;# 
  1219   000FB7                     PWM1CON         equ	4023	;# 
  1220   000FB8                     BAUDCON         equ	4024	;# 
  1221   000FB8                     BAUDCTL         equ	4024	;# 
  1222   000FB9                     PSTRCON         equ	4025	;# 
  1223   000FBA                     CCP2CON         equ	4026	;# 
  1224   000FBB                     CCPR2           equ	4027	;# 
  1225   000FBB                     CCPR2L          equ	4027	;# 
  1226   000FBC                     CCPR2H          equ	4028	;# 
  1227   000FBD                     CCP1CON         equ	4029	;# 
  1228   000FBE                     CCPR1           equ	4030	;# 
  1229   000FBE                     CCPR1L          equ	4030	;# 
  1230   000FBF                     CCPR1H          equ	4031	;# 
  1231   000FC0                     ADCON2          equ	4032	;# 
  1232   000FC1                     ADCON1          equ	4033	;# 
  1233   000FC2                     ADCON0          equ	4034	;# 
  1234   000FC3                     ADRES           equ	4035	;# 
  1235   000FC3                     ADRESL          equ	4035	;# 
  1236   000FC4                     ADRESH          equ	4036	;# 
  1237   000FC5                     SSPCON2         equ	4037	;# 
  1238   000FC6                     SSPCON1         equ	4038	;# 
  1239   000FC7                     SSPSTAT         equ	4039	;# 
  1240   000FC8                     SSPADD          equ	4040	;# 
  1241   000FC9                     SSPBUF          equ	4041	;# 
  1242   000FCA                     T2CON           equ	4042	;# 
  1243   000FCB                     PR2             equ	4043	;# 
  1244   000FCB                     MEMCON          equ	4043	;# 
  1245   000FCC                     TMR2            equ	4044	;# 
  1246   000FCD                     T1CON           equ	4045	;# 
  1247   000FCE                     TMR1            equ	4046	;# 
  1248   000FCE                     TMR1L           equ	4046	;# 
  1249   000FCF                     TMR1H           equ	4047	;# 
  1250   000FD0                     RCON            equ	4048	;# 
  1251   000FD1                     WDTCON          equ	4049	;# 
  1252   000FD2                     HLVDCON         equ	4050	;# 
  1253   000FD2                     LVDCON          equ	4050	;# 
  1254   000FD3                     OSCCON          equ	4051	;# 
  1255   000FD5                     T0CON           equ	4053	;# 
  1256   000FD6                     TMR0            equ	4054	;# 
  1257   000FD6                     TMR0L           equ	4054	;# 
  1258   000FD7                     TMR0H           equ	4055	;# 
  1259   000FD8                     STATUS          equ	4056	;# 
  1260   000FD9                     FSR2            equ	4057	;# 
  1261   000FD9                     FSR2L           equ	4057	;# 
  1262   000FDA                     FSR2H           equ	4058	;# 
  1263   000FDB                     PLUSW2          equ	4059	;# 
  1264   000FDC                     PREINC2         equ	4060	;# 
  1265   000FDD                     POSTDEC2        equ	4061	;# 
  1266   000FDE                     POSTINC2        equ	4062	;# 
  1267   000FDF                     INDF2           equ	4063	;# 
  1268   000FE0                     BSR             equ	4064	;# 
  1269   000FE1                     FSR1            equ	4065	;# 
  1270   000FE1                     FSR1L           equ	4065	;# 
  1271   000FE2                     FSR1H           equ	4066	;# 
  1272   000FE3                     PLUSW1          equ	4067	;# 
  1273   000FE4                     PREINC1         equ	4068	;# 
  1274   000FE5                     POSTDEC1        equ	4069	;# 
  1275   000FE6                     POSTINC1        equ	4070	;# 
  1276   000FE7                     INDF1           equ	4071	;# 
  1277   000FE8                     WREG            equ	4072	;# 
  1278   000FE9                     FSR0            equ	4073	;# 
  1279   000FE9                     FSR0L           equ	4073	;# 
  1280   000FEA                     FSR0H           equ	4074	;# 
  1281   000FEB                     PLUSW0          equ	4075	;# 
  1282   000FEC                     PREINC0         equ	4076	;# 
  1283   000FED                     POSTDEC0        equ	4077	;# 
  1284   000FEE                     POSTINC0        equ	4078	;# 
  1285   000FEF                     INDF0           equ	4079	;# 
  1286   000FF0                     INTCON3         equ	4080	;# 
  1287   000FF1                     INTCON2         equ	4081	;# 
  1288   000FF2                     INTCON          equ	4082	;# 
  1289   000FF3                     PROD            equ	4083	;# 
  1290   000FF3                     PRODL           equ	4083	;# 
  1291   000FF4                     PRODH           equ	4084	;# 
  1292   000FF5                     TABLAT          equ	4085	;# 
  1293   000FF6                     TBLPTR          equ	4086	;# 
  1294   000FF6                     TBLPTRL         equ	4086	;# 
  1295   000FF7                     TBLPTRH         equ	4087	;# 
  1296   000FF8                     TBLPTRU         equ	4088	;# 
  1297   000FF9                     PCLAT           equ	4089	;# 
  1298   000FF9                     PC              equ	4089	;# 
  1299   000FF9                     PCL             equ	4089	;# 
  1300   000FFA                     PCLATH          equ	4090	;# 
  1301   000FFB                     PCLATU          equ	4091	;# 
  1302   000FFC                     STKPTR          equ	4092	;# 
  1303   000FFD                     TOS             equ	4093	;# 
  1304   000FFD                     TOSL            equ	4093	;# 
  1305   000FFE                     TOSH            equ	4094	;# 
  1306   000FFF                     TOSU            equ	4095	;# 
  1307                           
  1308                           	psect	smallconst
  1309   001000                     __psmallconst:
  1310                           	callstack 0
  1311   001000  00                 	db	0
  1312   001001                     _default_security_key:
  1313                           	callstack 0
  1314   001001  00                 	db	0
  1315   001002  10                 	db	16
  1316   001003  25                 	db	37
  1317   001004  37                 	db	55
  1318   001005  04                 	db	4
  1319   001006  55                 	db	85
  1320   001007  06                 	db	6
  1321   001008  79                 	db	121
  1322   001009  08                 	db	8
  1323   00100A  09                 	db	9
  1324   00100B  10                 	db	16
  1325   00100C  11                 	db	17
  1326   00100D  12                 	db	18
  1327   00100E  13                 	db	19
  1328   00100F  14                 	db	20
  1329   001010  15                 	db	21
  1330   001011                     __end_of_default_security_key:
  1331                           	callstack 0
  1332   001011                     _default_mac_address:
  1333                           	callstack 0
  1334   001011  11                 	db	17
  1335   001012  28                 	db	40
  1336   001013  35                 	db	53
  1337   001014  44                 	db	68
  1338   001015  56                 	db	86
  1339   001016  66                 	db	102
  1340   001017  77                 	db	119
  1341   001018  01                 	db	1
  1342   001019                     __end_of_default_mac_address:
  1343                           	callstack 0
  1344   007CF0                     _TMR1IF         set	31984
  1345   007E68                     _TMR1ON         set	32360
  1346   007E69                     _TMR1CS         set	32361
  1347   007E6B                     _T1OSCEN        set	32363
  1348   007E6A                     _T1SYNC         set	32362
  1349   007E6D                     _T1CKPS1        set	32365
  1350   007E6C                     _T1CKPS0        set	32364
  1351   007E6F                     _T1RD16         set	32367
  1352   007F8F                     _RBPU           set	32655
  1353   007CED                     _RCIE           set	31981
  1354   007CEE                     _ADIE           set	31982
  1355   007D03                     _BCLIE          set	32003
  1356   007CEB                     _SSPIE          set	31979
  1357   007D04                     _EEIE           set	32004
  1358   007D00                     _CCP2IE         set	32000
  1359   007CEA                     _CCP1IE         set	31978
  1360   007CE9                     _TMR2IE         set	31977
  1361   007CE8                     _TMR1IE         set	31976
  1362   007F95                     _T0IE           set	32661
  1363   007F93                     _RBIE           set	32659
  1364   007F94                     _INT0E          set	32660
  1365   007F96                     _PEIE           set	32662
  1366   007F97                     _GIE            set	32663
  1367   007E87                     _IPEN           set	32391
  1368   000FCF                     _TMR1H          set	4047
  1369   000FCE                     _TMR1L          set	4046
  1370   000F9B                     _OSCTUNE        set	3995
  1371   000FD3                     _OSCCON         set	4051
  1372   000F95                     _TRISDbits      set	3989
  1373   000F96                     _TRISEbits      set	3990
  1374   000F93                     _TRISBbits      set	3987
  1375   000F84                     _PORTE          set	3972
  1376   000F83                     _PORTD          set	3971
  1377   000F82                     _PORTC          set	3970
  1378   000F81                     _PORTB          set	3969
  1379   000F80                     _PORTA          set	3968
  1380   000F8D                     _LATEbits       set	3981
  1381   000F82                     _PORTCbits      set	3970
  1382   000FC9                     _SSPBUF         set	4041
  1383   000F9E                     _PIR1bits       set	3998
  1384   000FC6                     _SSPCON1bits    set	4038
  1385   000FC6                     _SSPCON1        set	4038
  1386   000FC7                     _SSPSTATbits    set	4039
  1387   000F94                     _TRISCbits      set	3988
  1388   000F81                     _PORTBbits      set	3969
  1389   000F8C                     _LATDbits       set	3980
  1390   000F8B                     _LATCbits       set	3979
  1391   001019                     STR_5:
  1392   001019  4C                 	db	76	;'L'
  1393   00101A  65                 	db	101	;'e'
  1394   00101B  64                 	db	100	;'d'
  1395   00101C  20                 	db	32
  1396   00101D  65                 	db	101	;'e'
  1397   00101E  6E                 	db	110	;'n'
  1398   00101F  63                 	db	99	;'c'
  1399   001020  65                 	db	101	;'e'
  1400   001021  6E                 	db	110	;'n'
  1401   001022  64                 	db	100	;'d'
  1402   001023  69                 	db	105	;'i'
  1403   001024  64                 	db	100	;'d'
  1404   001025  6F                 	db	111	;'o'
  1405   001026  00                 	db	0
  1406   001027                     STR_8:
  1407   001027  4C                 	db	76	;'L'
  1408   001028  65                 	db	101	;'e'
  1409   001029  64                 	db	100	;'d'
  1410   00102A  20                 	db	32
  1411   00102B  61                 	db	97	;'a'
  1412   00102C  70                 	db	112	;'p'
  1413   00102D  61                 	db	97	;'a'
  1414   00102E  67                 	db	103	;'g'
  1415   00102F  61                 	db	97	;'a'
  1416   001030  64                 	db	100	;'d'
  1417   001031  6F                 	db	111	;'o'
  1418   001032  00                 	db	0
  1419   001033                     STR_15:
  1420   001033  43                 	db	67	;'C'
  1421   001034  6D                 	db	109	;'m'
  1422   001035  64                 	db	100	;'d'
  1423   001036  20                 	db	32
  1424   001037  65                 	db	101	;'e'
  1425   001038  72                 	db	114	;'r'
  1426   001039  72                 	db	114	;'r'
  1427   00103A  6F                 	db	111	;'o'
  1428   00103B  72                 	db	114	;'r'
  1429   00103C  2E                 	db	46
  1430   00103D  00                 	db	0
  1431   00103E                     STR_6:
  1432   00103E  43                 	db	67	;'C'
  1433   00103F  4D                 	db	77	;'M'
  1434   001040  44                 	db	68	;'D'
  1435   001041  3A                 	db	58	;':'
  1436   001042  41                 	db	65	;'A'
  1437   001043  4C                 	db	76	;'L'
  1438   001044  41                 	db	65	;'A'
  1439   001045  00                 	db	0
  1440   001046                     STR_3:
  1441   001046  43                 	db	67	;'C'
  1442   001047  4D                 	db	77	;'M'
  1443   001048  44                 	db	68	;'D'
  1444   001049  3A                 	db	58	;':'
  1445   00104A  50                 	db	80	;'P'
  1446   00104B  4C                 	db	76	;'L'
  1447   00104C  41                 	db	65	;'A'
  1448   00104D  00                 	db	0
  1449   00104E                     STR_12:
  1450   00104E  43                 	db	67	;'C'
  1451   00104F  4D                 	db	77	;'M'
  1452   001050  44                 	db	68	;'D'
  1453   001051  3A                 	db	58	;':'
  1454   001052  41                 	db	65	;'A'
  1455   001053  4C                 	db	76	;'L'
  1456   001054  52                 	db	82	;'R'
  1457   001055  00                 	db	0
  1458   001056                     STR_9:
  1459   001056  43                 	db	67	;'C'
  1460   001057  4D                 	db	77	;'M'
  1461   001058  44                 	db	68	;'D'
  1462   001059  3A                 	db	58	;':'
  1463   00105A  50                 	db	80	;'P'
  1464   00105B  4C                 	db	76	;'L'
  1465   00105C  52                 	db	82	;'R'
  1466   00105D  00                 	db	0
  1467   00105E                     STR_2:
  1468   00105E  43                 	db	67	;'C'
  1469   00105F  4D                 	db	77	;'M'
  1470   001060  44                 	db	68	;'D'
  1471   001061  3A                 	db	58	;':'
  1472   001062  41                 	db	65	;'A'
  1473   001063  4C                 	db	76	;'L'
  1474   001064  56                 	db	86	;'V'
  1475   001065  00                 	db	0
  1476   001066                     STR_1:
  1477   001066  43                 	db	67	;'C'
  1478   001067  4D                 	db	77	;'M'
  1479   001068  44                 	db	68	;'D'
  1480   001069  3A                 	db	58	;':'
  1481   00106A  50                 	db	80	;'P'
  1482   00106B  4C                 	db	76	;'L'
  1483   00106C  56                 	db	86	;'V'
  1484   00106D  00                 	db	0
  1485   001019                     STR_11          equ	STR_5
  1486   001027                     STR_14          equ	STR_8
  1487   001056                     STR_10          equ	STR_9
  1488   00104E                     STR_13          equ	STR_12
  1489   001046                     STR_4           equ	STR_3
  1490   00103E                     STR_7           equ	STR_6
  1491   00106E  00                 	db	0	; dummy byte at the end
  1492   000002                     __activetblptr  equ	2
  1493                           
  1494                           ; #config settings
  1495                           
  1496                           	psect	cinit
  1497   001B6C                     __pcinit:
  1498                           	callstack 0
  1499   001B6C                     start_initialization:
  1500                           	callstack 0
  1501   001B6C                     __initialization:
  1502                           	callstack 0
  1503                           
  1504                           ; Clear objects allocated to BANK0 (56 bytes)
  1505   001B6C  EE00  F060         	lfsr	0,__pbssBANK0
  1506   001B70  0E38               	movlw	56
  1507   001B72                     clear_0:
  1508   001B72  6AEE               	clrf	postinc0,c
  1509   001B74  06E8               	decf	wreg,f,c
  1510   001B76  E1FD               	bnz	clear_0
  1511                           
  1512                           ; Clear objects allocated to COMRAM (46 bytes)
  1513   001B78  EE00  F031         	lfsr	0,__pbssCOMRAM
  1514   001B7C  0E2E               	movlw	46
  1515   001B7E                     clear_1:
  1516   001B7E  6AEE               	clrf	postinc0,c
  1517   001B80  06E8               	decf	wreg,f,c
  1518   001B82  E1FD               	bnz	clear_1
  1519   001B84                     end_of_initialization:
  1520                           	callstack 0
  1521   001B84                     __end_of__initialization:
  1522                           	callstack 0
  1523   001B84  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1524   001B86  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1525   001B88  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1526   001B8A  6EF8               	movwf	tblptru,c
  1527   001B8C  0100               	movlb	0
  1528   001B8E  EF38  F008         	goto	_main	;jump to C main() function
  1529                           
  1530                           	psect	bssCOMRAM
  1531   000031                     __pbssCOMRAM:
  1532                           	callstack 0
  1533   000031                     _mrf24_data_config:
  1534                           	callstack 0
  1535   000031                     	ds	34
  1536   000053                     _mrf24_data_out:
  1537                           	callstack 0
  1538   000053                     	ds	6
  1539   000059                     _timeStamp:
  1540                           	callstack 0
  1541   000059                     	ds	4
  1542   00005D                     _long_mac_address:
  1543                           	callstack 0
  1544   00005D                     	ds	1
  1545   00005E                     _estadoActual:
  1546                           	callstack 0
  1547   00005E                     	ds	1
  1548                           
  1549                           	psect	bssBANK0
  1550   000060                     __pbssBANK0:
  1551                           	callstack 0
  1552   000060                     _mrf24_data_in:
  1553                           	callstack 0
  1554   000060                     	ds	56
  1555                           
  1556                           	psect	cstackCOMRAM
  1557   000001                     __pcstackCOMRAM:
  1558                           	callstack 0
  1559   000001                     ?_strlen:
  1560                           	callstack 0
  1561   000001                     SetCSPin@estado:
  1562                           	callstack 0
  1563   000001                     SetWakePin@estado:
  1564                           	callstack 0
  1565   000001                     SetResetPin@estado:
  1566                           	callstack 0
  1567   000001                     SPIWriteByte@dato:
  1568                           	callstack 0
  1569   000001                     DelayInit@delay:
  1570                           	callstack 0
  1571   000001                     DelayReset@delay:
  1572                           	callstack 0
  1573   000001                     DelayIsRunning@delay:
  1574                           	callstack 0
  1575   000001                     strlen@s:
  1576                           	callstack 0
  1577   000001                     MRF24SetDireccionDestino@direccion:
  1578                           	callstack 0
  1579   000001                     MRF24SetPANIDDestino@panid:
  1580                           	callstack 0
  1581   000001                     ??_InicializoVariables:
  1582   000001                     
  1583                           ; 1 bytes @ 0x0
  1584   000001                     	ds	1
  1585   000002                     WriteByteSPIPort@dato:
  1586                           	callstack 0
  1587   000002                     DelayRead@delay:
  1588                           	callstack 0
  1589   000002                     InicializoVariables@i:
  1590                           	callstack 0
  1591   000002                     SPIWrite2Byte@dato:
  1592                           	callstack 0
  1593   000002                     DelayInit@duration:
  1594                           	callstack 0
  1595   000002                     
  1596                           ; 1 bytes @ 0x1
  1597   000002                     	ds	1
  1598   000003                     ?_strcmp:
  1599                           	callstack 0
  1600   000003                     SetShortAddr@valor:
  1601                           	callstack 0
  1602   000003                     GetShortAddr@leido_spi:
  1603                           	callstack 0
  1604   000003                     strcmp@l:
  1605                           	callstack 0
  1606   000003                     strlen@a:
  1607                           	callstack 0
  1608   000003                     ??_DelayRead:
  1609   000003                     
  1610                           ; 1 bytes @ 0x2
  1611   000003                     	ds	1
  1612   000004                     SetShortAddr@reg_address:
  1613                           	callstack 0
  1614   000004                     GetShortAddr@reg_address:
  1615                           	callstack 0
  1616   000004                     MRF24SetMensajeSalida@mensaje:
  1617                           	callstack 0
  1618   000004                     strcmp@r:
  1619                           	callstack 0
  1620   000004                     Write2ByteSPIPort@dato:
  1621                           	callstack 0
  1622   000004                     
  1623                           ; 1 bytes @ 0x3
  1624   000004                     	ds	1
  1625   000005                     SetDeviceMACAddress@i:
  1626                           	callstack 0
  1627   000005                     ??_strcmp:
  1628   000005                     
  1629                           ; 1 bytes @ 0x4
  1630   000005                     	ds	1
  1631   000006                     DebounceFSMInit@antirrebote_boton_n:
  1632                           	callstack 0
  1633   000006                     SetLongAddr@reg_address:
  1634                           	callstack 0
  1635   000006                     GetLongAddr@reg_address:
  1636                           	callstack 0
  1637   000006                     
  1638                           ; 1 bytes @ 0x5
  1639   000006                     	ds	1
  1640   000007                     
  1641                           ; 1 bytes @ 0x6
  1642   000007                     	ds	1
  1643   000008                     SetLongAddr@valor:
  1644                           	callstack 0
  1645   000008                     ??_GetLongAddr:
  1646                           
  1647                           ; 1 bytes @ 0x7
  1648   000008                     	ds	1
  1649   000009                     ??_SetLongAddr:
  1650                           
  1651                           ; 1 bytes @ 0x8
  1652   000009                     	ds	1
  1653   00000A                     GetLongAddr@respuesta:
  1654                           	callstack 0
  1655                           
  1656                           ; 1 bytes @ 0x9
  1657   00000A                     	ds	1
  1658   00000B                     ??_SetChannel:
  1659   00000B                     ??_MRF24TransmitirDato:
  1660   00000B                     ??_MRF24ReciboPaquete:
  1661                           
  1662                           ; 1 bytes @ 0xA
  1663   00000B                     	ds	4
  1664   00000F                     DebounceFSMUpdate@antirrebote_boton_n:
  1665                           	callstack 0
  1666   00000F                     ??_InicializoMRF24:
  1667                           
  1668                           ; 1 bytes @ 0xE
  1669   00000F                     	ds	1
  1670   000010                     InicializoMRF24@lectura:
  1671                           	callstack 0
  1672   000010                     MRF24TransmitirDato@i:
  1673                           	callstack 0
  1674   000010                     MRF24ReciboPaquete@largo_mensaje:
  1675                           	callstack 0
  1676   000010                     DebounceFSMUpdate@estado_pin:
  1677                           	callstack 0
  1678                           
  1679                           ; 1 bytes @ 0xF
  1680   000010                     	ds	1
  1681   000011                     MRF24TransmitirDato@pos_memoria:
  1682                           	callstack 0
  1683   000011                     MRF24ReciboPaquete@index:
  1684                           	callstack 0
  1685   000011                     InicializoMRF24@delay_time_out:
  1686                           	callstack 0
  1687   000011                     ??_DebounceFSMUpdate:
  1688                           
  1689                           ; 1 bytes @ 0x10
  1690   000011                     	ds	9
  1691   00001A                     ??_MRF24J40Init:
  1692                           
  1693                           ; 1 bytes @ 0x19
  1694   00001A                     	ds	1
  1695   00001B                     ??_main:
  1696                           
  1697                           ; 1 bytes @ 0x1A
  1698   00001B                     	ds	2
  1699   00001D                     main@delay_parpadeo:
  1700                           	callstack 0
  1701                           
  1702                           ; 9 bytes @ 0x1C
  1703   00001D                     	ds	9
  1704   000026                     main@boton1:
  1705                           	callstack 0
  1706                           
  1707                           ; 11 bytes @ 0x25
  1708   000026                     	ds	11
  1709                           
  1710 ;;
  1711 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1712 ;;
  1713 ;; *************** function _main *****************
  1714 ;; Defined at:
  1715 ;;		line 28 in file "main.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;  boton1         11   37[COMRAM] struct .
  1720 ;;  delay_parpad    9   28[COMRAM] struct .
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1734 ;;Total ram usage:       22 bytes
  1735 ;; Hardware stack levels required when called: 8
  1736 ;; This function calls:
  1737 ;;		_BoardInit
  1738 ;;		_DebounceFSMInit
  1739 ;;		_DebounceFSMUpdate
  1740 ;;		_DelayInit
  1741 ;;		_DelayRead
  1742 ;;		_MRF24GetMensajeEntrada
  1743 ;;		_MRF24IsNewMsg
  1744 ;;		_MRF24J40Init
  1745 ;;		_MRF24ReciboPaquete
  1746 ;;		_MRF24SetDireccionDestino
  1747 ;;		_MRF24SetMensajeSalida
  1748 ;;		_MRF24SetPANIDDestino
  1749 ;;		_MRF24TransmitirDato
  1750 ;;		_strcmp
  1751 ;; This function is called by:
  1752 ;;		Startup code after reset
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           	psect	text0
  1757   001070                     __ptext0:
  1758                           	callstack 0
  1759   001070                     _main:
  1760                           	callstack 23
  1761   001070                     
  1762                           ;main.c: 30:     delayNoBloqueanteData delay_parpadeo;;main.c: 31:     debounceData_t bo
      +                          ton1;;main.c: 32:  DebounceFSMInit(&boton1);
  1763   001070  0E26               	movlw	low main@boton1
  1764   001072  6E06               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  1765   001074  EC75  F00D         	call	_DebounceFSMInit	;wreg free
  1766   001078                     
  1767                           ;main.c: 33:     BoardInit();
  1768   001078  EC53  F00C         	call	_BoardInit	;wreg free
  1769   00107C                     
  1770                           ;main.c: 34:     MRF24J40Init();
  1771   00107C  EC08  F00D         	call	_MRF24J40Init	;wreg free
  1772   001080                     
  1773                           ;main.c: 35:     DelayInit(&delay_parpadeo, 1000);
  1774   001080  0E1D               	movlw	low main@delay_parpadeo
  1775   001082  6E01               	movwf	DelayInit@delay^0,c
  1776   001084  0EE8               	movlw	232
  1777   001086  6E02               	movwf	DelayInit@duration^0,c
  1778   001088  0E03               	movlw	3
  1779   00108A  6E03               	movwf	(DelayInit@duration+1)^0,c
  1780   00108C  0E00               	movlw	0
  1781   00108E  6E04               	movwf	(DelayInit@duration+2)^0,c
  1782   001090  0E00               	movlw	0
  1783   001092  6E05               	movwf	(DelayInit@duration+3)^0,c
  1784   001094  ECA2  F00D         	call	_DelayInit	;wreg free
  1785   001098                     
  1786                           ;main.c: 36:     MRF24SetDireccionDestino(0x1111);
  1787   001098  0E11               	movlw	17
  1788   00109A  6E02               	movwf	(MRF24SetDireccionDestino@direccion+1)^0,c
  1789   00109C  0E11               	movlw	17
  1790   00109E  6E01               	movwf	MRF24SetDireccionDestino@direccion^0,c
  1791   0010A0  EC0E  F00E         	call	_MRF24SetDireccionDestino	;wreg free
  1792   0010A4                     
  1793                           ;main.c: 37:     MRF24SetPANIDDestino(0X1234);
  1794   0010A4  0E12               	movlw	18
  1795   0010A6  6E02               	movwf	(MRF24SetPANIDDestino@panid+1)^0,c
  1796   0010A8  0E34               	movlw	52
  1797   0010AA  6E01               	movwf	MRF24SetPANIDDestino@panid^0,c
  1798   0010AC  ECFF  F00D         	call	_MRF24SetPANIDDestino	;wreg free
  1799   0010B0                     l241:
  1800   0010B0  0004               	clrwdt		;# 
  1801                           
  1802                           ;main.c: 42:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  1803   0010B2  EF69  F008         	goto	l2149
  1804   0010B6                     l2139:
  1805                           
  1806                           ;main.c: 46:                 MRF24SetMensajeSalida("CMD:PLV");
  1807   0010B6  0E66               	movlw	low STR_1
  1808   0010B8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1809   0010BA  ECE8  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1810   0010BE                     l2141:
  1811                           
  1812                           ;main.c: 47:                 MRF24TransmitirDato();
  1813   0010BE  EC84  F00A         	call	_MRF24TransmitirDato	;wreg free
  1814                           
  1815                           ;main.c: 48:     break;
  1816   0010C2  EF8B  F008         	goto	l2151
  1817   0010C6                     l2143:
  1818                           
  1819                           ;main.c: 52:                 MRF24SetMensajeSalida("CMD:ALV");
  1820   0010C6  0E5E               	movlw	low STR_2
  1821   0010C8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1822   0010CA  ECE8  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1823   0010CE  EF5F  F008         	goto	l2141
  1824   0010D2                     l2149:
  1825   0010D2  0E26               	movlw	low main@boton1
  1826   0010D4  6E0F               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  1827   0010D6  B482               	btfsc	130,2,c	;volatile
  1828   0010D8  EF70  F008         	goto	u791
  1829   0010DC  EF73  F008         	goto	u790
  1830   0010E0                     u791:
  1831   0010E0  0E01               	movlw	1
  1832   0010E2  EF74  F008         	goto	u796
  1833   0010E6                     u790:
  1834   0010E6  0E00               	movlw	0
  1835   0010E8                     u796:
  1836   0010E8  6E10               	movwf	DebounceFSMUpdate@estado_pin^0,c
  1837   0010EA  ECE6  F009         	call	_DebounceFSMUpdate	;wreg free
  1838   0010EE  6E1B               	movwf	??_main^0,c
  1839   0010F0  6A1C               	clrf	(??_main+1)^0,c
  1840                           
  1841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1842                           ; Switch size 1, requested type "simple"
  1843                           ; Number of cases is 1, Range of values is 0 to 0
  1844                           ; switch strategies available:
  1845                           ; Name         Instructions Cycles
  1846                           ; simple_byte            4     3 (average)
  1847                           ;	Chosen strategy is simple_byte
  1848   0010F2  501C               	movf	(??_main+1)^0,w,c
  1849   0010F4  0A00               	xorlw	0	; case 0
  1850   0010F6  B4D8               	btfsc	status,2,c
  1851   0010F8  EF80  F008         	goto	l2231
  1852   0010FC  EF8B  F008         	goto	l2151
  1853   001100                     l2231:
  1854                           
  1855                           ; Switch size 1, requested type "simple"
  1856                           ; Number of cases is 2, Range of values is 1 to 2
  1857                           ; switch strategies available:
  1858                           ; Name         Instructions Cycles
  1859                           ; simple_byte            7     4 (average)
  1860                           ;	Chosen strategy is simple_byte
  1861   001100  501B               	movf	??_main^0,w,c
  1862   001102  0A01               	xorlw	1	; case 1
  1863   001104  B4D8               	btfsc	status,2,c
  1864   001106  EF5B  F008         	goto	l2139
  1865   00110A  0A03               	xorlw	3	; case 2
  1866   00110C  B4D8               	btfsc	status,2,c
  1867   00110E  EF63  F008         	goto	l2143
  1868   001112  EF8B  F008         	goto	l2151
  1869   001116                     l2151:
  1870                           
  1871                           ;main.c: 61:         if(MRF24IsNewMsg()) {
  1872   001116  EC5B  F00D         	call	_MRF24IsNewMsg	;wreg free
  1873   00111A  0900               	iorlw	0
  1874   00111C  B4D8               	btfsc	status,2,c
  1875   00111E  EF93  F008         	goto	u801
  1876   001122  EF95  F008         	goto	u800
  1877   001126                     u801:
  1878   001126  EFF9  F008         	goto	l2183
  1879   00112A                     u800:
  1880   00112A                     
  1881                           ;main.c: 63:             MRF24ReciboPaquete();
  1882   00112A  ECCD  F00B         	call	_MRF24ReciboPaquete	;wreg free
  1883   00112E                     
  1884                           ;main.c: 65:    if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLA")) {
  1885   00112E  EC86  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1886   001132  6E03               	movwf	strcmp@l^0,c
  1887   001134  0E46               	movlw	low STR_3
  1888   001136  6E04               	movwf	strcmp@r^0,c
  1889   001138  EC20  F00C         	call	_strcmp	;wreg free
  1890   00113C  5003               	movf	?_strcmp^0,w,c
  1891   00113E  1004               	iorwf	(?_strcmp+1)^0,w,c
  1892   001140  A4D8               	btfss	status,2,c
  1893   001142  EFA5  F008         	goto	u811
  1894   001146  EFA7  F008         	goto	u810
  1895   00114A                     u811:
  1896   00114A  EFAE  F008         	goto	l2161
  1897   00114E                     u810:
  1898   00114E                     
  1899                           ;main.c: 67:     LATEbits.LATE1 = 0;
  1900   00114E  928D               	bcf	141,1,c	;volatile
  1901   001150                     
  1902                           ;main.c: 68:                 MRF24SetMensajeSalida("Led encendido");
  1903   001150  0E19               	movlw	low STR_5
  1904   001152  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1905   001154  ECE8  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1906                           
  1907                           ;main.c: 69:    } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALA")) {
  1908   001158  EFF7  F008         	goto	l2181
  1909   00115C                     l2161:
  1910   00115C  EC86  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1911   001160  6E03               	movwf	strcmp@l^0,c
  1912   001162  0E3E               	movlw	low STR_6
  1913   001164  6E04               	movwf	strcmp@r^0,c
  1914   001166  EC20  F00C         	call	_strcmp	;wreg free
  1915   00116A  5003               	movf	?_strcmp^0,w,c
  1916   00116C  1004               	iorwf	(?_strcmp+1)^0,w,c
  1917   00116E  A4D8               	btfss	status,2,c
  1918   001170  EFBC  F008         	goto	u821
  1919   001174  EFBE  F008         	goto	u820
  1920   001178                     u821:
  1921   001178  EFC5  F008         	goto	l2167
  1922   00117C                     u820:
  1923   00117C                     
  1924                           ;main.c: 71:     LATEbits.LATE1 = 1;
  1925   00117C  828D               	bsf	141,1,c	;volatile
  1926   00117E                     
  1927                           ;main.c: 72:                 MRF24SetMensajeSalida("Led apagado");
  1928   00117E  0E27               	movlw	low STR_8
  1929   001180  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1930   001182  ECE8  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1931                           
  1932                           ;main.c: 73:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLR")) 
      +                          {
  1933   001186  EFF7  F008         	goto	l2181
  1934   00118A                     l2167:
  1935   00118A  EC86  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1936   00118E  6E03               	movwf	strcmp@l^0,c
  1937   001190  0E56               	movlw	low STR_9
  1938   001192  6E04               	movwf	strcmp@r^0,c
  1939   001194  EC20  F00C         	call	_strcmp	;wreg free
  1940   001198  5003               	movf	?_strcmp^0,w,c
  1941   00119A  1004               	iorwf	(?_strcmp+1)^0,w,c
  1942   00119C  A4D8               	btfss	status,2,c
  1943   00119E  EFD3  F008         	goto	u831
  1944   0011A2  EFD5  F008         	goto	u830
  1945   0011A6                     u831:
  1946   0011A6  EFDC  F008         	goto	l2173
  1947   0011AA                     u830:
  1948   0011AA                     
  1949                           ;main.c: 75:     LATEbits.LATE2 = 0;
  1950   0011AA  948D               	bcf	141,2,c	;volatile
  1951   0011AC                     
  1952                           ;main.c: 76:                 MRF24SetMensajeSalida("Led encendido");
  1953   0011AC  0E19               	movlw	low STR_5
  1954   0011AE  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1955   0011B0  ECE8  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1956                           
  1957                           ;main.c: 77:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALR")) 
      +                          {
  1958   0011B4  EFF7  F008         	goto	l2181
  1959   0011B8                     l2173:
  1960   0011B8  EC86  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1961   0011BC  6E03               	movwf	strcmp@l^0,c
  1962   0011BE  0E4E               	movlw	low STR_12
  1963   0011C0  6E04               	movwf	strcmp@r^0,c
  1964   0011C2  EC20  F00C         	call	_strcmp	;wreg free
  1965   0011C6  5003               	movf	?_strcmp^0,w,c
  1966   0011C8  1004               	iorwf	(?_strcmp+1)^0,w,c
  1967   0011CA  A4D8               	btfss	status,2,c
  1968   0011CC  EFEA  F008         	goto	u841
  1969   0011D0  EFEC  F008         	goto	u840
  1970   0011D4                     u841:
  1971   0011D4  EFF3  F008         	goto	l2179
  1972   0011D8                     u840:
  1973   0011D8                     
  1974                           ;main.c: 79:     LATEbits.LATE2 = 1;
  1975   0011D8  848D               	bsf	141,2,c	;volatile
  1976   0011DA                     
  1977                           ;main.c: 80:                 MRF24SetMensajeSalida("Led apagado");
  1978   0011DA  0E27               	movlw	low STR_8
  1979   0011DC  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1980   0011DE  ECE8  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1981                           
  1982                           ;main.c: 81:             } else {
  1983   0011E2  EFF7  F008         	goto	l2181
  1984   0011E6                     l2179:
  1985                           
  1986                           ;main.c: 83:                 MRF24SetMensajeSalida("Cmd error.");
  1987   0011E6  0E33               	movlw	low STR_15
  1988   0011E8  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1989   0011EA  ECE8  F00C         	call	_MRF24SetMensajeSalida	;wreg free
  1990   0011EE                     l2181:
  1991                           
  1992                           ;main.c: 85:             MRF24TransmitirDato();
  1993   0011EE  EC84  F00A         	call	_MRF24TransmitirDato	;wreg free
  1994   0011F2                     l2183:
  1995                           
  1996                           ;main.c: 88:         if(DelayRead(&delay_parpadeo)) {
  1997   0011F2  0E1D               	movlw	low main@delay_parpadeo
  1998   0011F4  6E02               	movwf	DelayRead@delay^0,c
  1999   0011F6  EC77  F00B         	call	_DelayRead	;wreg free
  2000   0011FA  0900               	iorlw	0
  2001   0011FC  B4D8               	btfsc	status,2,c
  2002   0011FE  EF03  F009         	goto	u851
  2003   001202  EF05  F009         	goto	u850
  2004   001206                     u851:
  2005   001206  EF58  F008         	goto	l241
  2006   00120A                     u850:
  2007   00120A                     
  2008                           ;main.c: 89:             LATEbits.LATE0 = !LATEbits.LATE0;
  2009   00120A  A08D               	btfss	141,0,c	;volatile
  2010   00120C  EF0A  F009         	goto	u861
  2011   001210  EF0E  F009         	goto	u860
  2012   001214                     u861:
  2013   001214  6A1B               	clrf	??_main^0,c
  2014   001216  2A1B               	incf	??_main^0,f,c
  2015   001218  EF0F  F009         	goto	u878
  2016   00121C                     u860:
  2017   00121C  6A1B               	clrf	??_main^0,c
  2018   00121E                     u878:
  2019   00121E  508D               	movf	141,w,c	;volatile
  2020   001220  181B               	xorwf	??_main^0,w,c
  2021   001222  0BFE               	andlw	-2
  2022   001224  181B               	xorwf	??_main^0,w,c
  2023   001226  6E8D               	movwf	141,c	;volatile
  2024   001228  EF58  F008         	goto	l241
  2025   00122C  EF20  F000         	goto	start
  2026   001230                     __end_of_main:
  2027                           	callstack 0
  2028                           
  2029 ;; *************** function _strcmp *****************
  2030 ;; Defined at:
  2031 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  2032 ;; Parameters:    Size  Location     Type
  2033 ;;  l               1    2[COMRAM] PTR const unsigned char 
  2034 ;;		 -> mrf24_data_in$buffer_entrada(50), mrf24_data_in(56), 
  2035 ;;  r               1    3[COMRAM] PTR const unsigned char 
  2036 ;;		 -> STR_13(8), STR_10(8), STR_7(8), STR_4(8), 
  2037 ;; Auto vars:     Size  Location     Type
  2038 ;;		None
  2039 ;; Return value:  Size  Location     Type
  2040 ;;                  2    2[COMRAM] int 
  2041 ;; Registers used:
  2042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2043 ;; Tracked objects:
  2044 ;;		On entry : 0/0
  2045 ;;		On exit  : 0/0
  2046 ;;		Unchanged: 0/0
  2047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2048 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;Total ram usage:        3 bytes
  2053 ;; Hardware stack levels used: 1
  2054 ;; Hardware stack levels required when called: 1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_main
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text1
  2063   001840                     __ptext1:
  2064                           	callstack 0
  2065   001840                     _strcmp:
  2066                           	callstack 29
  2067   001840  EF24  F00C         	goto	l2119
  2068   001844                     l2117:
  2069   001844  2A03               	incf	strcmp@l^0,f,c
  2070   001846  2A04               	incf	strcmp@r^0,f,c
  2071   001848                     l2119:
  2072   001848  5003               	movf	strcmp@l^0,w,c
  2073   00184A  6ED9               	movwf	fsr2l,c
  2074   00184C  6ADA               	clrf	fsr2h,c
  2075   00184E  50DF               	movf	indf2,w,c
  2076   001850  6E05               	movwf	??_strcmp^0,c
  2077   001852  C004  FFF6         	movff	strcmp@r,tblptrl
  2078   001856                     	if	1	;There is more than 1 active tblptr byte
  2079   001856  0E10               	movlw	high __smallconst
  2080   001858  6EF7               	movwf	tblptrh,c
  2081   00185A                     	endif
  2082   00185A                     	if	0	;tblptru may be non-zero
  2083   00185A                     	endif
  2084   00185A                     	if	0	;tblptru may be non-zero
  2085   00185A                     	endif
  2086   00185A  0008               	tblrd		*
  2087   00185C  50F5               	movf	tablat,w,c
  2088   00185E  1805               	xorwf	??_strcmp^0,w,c
  2089   001860  A4D8               	btfss	status,2,c
  2090   001862  EF35  F00C         	goto	u771
  2091   001866  EF37  F00C         	goto	u770
  2092   00186A                     u771:
  2093   00186A  EF42  F00C         	goto	l2123
  2094   00186E                     u770:
  2095   00186E  5003               	movf	strcmp@l^0,w,c
  2096   001870  6ED9               	movwf	fsr2l,c
  2097   001872  6ADA               	clrf	fsr2h,c
  2098   001874  50DF               	movf	indf2,w,c
  2099   001876  A4D8               	btfss	status,2,c
  2100   001878  EF40  F00C         	goto	u781
  2101   00187C  EF42  F00C         	goto	u780
  2102   001880                     u781:
  2103   001880  EF22  F00C         	goto	l2117
  2104   001884                     u780:
  2105   001884                     l2123:
  2106   001884  5003               	movf	strcmp@l^0,w,c
  2107   001886  6ED9               	movwf	fsr2l,c
  2108   001888  6ADA               	clrf	fsr2h,c
  2109   00188A  50DF               	movf	indf2,w,c
  2110   00188C  6E05               	movwf	??_strcmp^0,c
  2111   00188E  C004  FFF6         	movff	strcmp@r,tblptrl
  2112   001892                     	if	1	;There is more than 1 active tblptr byte
  2113   001892  0E10               	movlw	high __smallconst
  2114   001894  6EF7               	movwf	tblptrh,c
  2115   001896                     	endif
  2116   001896                     	if	0	;tblptru may be non-zero
  2117   001896                     	endif
  2118   001896                     	if	0	;tblptru may be non-zero
  2119   001896                     	endif
  2120   001896  0008               	tblrd		*
  2121   001898  50F5               	movf	tablat,w,c
  2122   00189A  5C05               	subwf	??_strcmp^0,w,c
  2123   00189C  6E03               	movwf	?_strcmp^0,c
  2124   00189E  6A04               	clrf	(?_strcmp+1)^0,c
  2125   0018A0  A0D8               	btfss	status,0,c
  2126   0018A2  0604               	decf	(?_strcmp+1)^0,f,c
  2127   0018A4  0012               	return		;funcret
  2128   0018A6                     __end_of_strcmp:
  2129                           	callstack 0
  2130                           
  2131 ;; *************** function _MRF24TransmitirDato *****************
  2132 ;; Defined at:
  2133 ;;		line 763 in file "drivers/scr/API_MRF24J40.c"
  2134 ;; Parameters:    Size  Location     Type
  2135 ;;		None
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  i               1   15[COMRAM] char 
  2138 ;;  pos_memoria     1   16[COMRAM] unsigned char 
  2139 ;;  largo_cabece    1    0        unsigned char 
  2140 ;; Return value:  Size  Location     Type
  2141 ;;                  1    wreg      enum E3263
  2142 ;; Registers used:
  2143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2153 ;;Total ram usage:        7 bytes
  2154 ;; Hardware stack levels used: 1
  2155 ;; Hardware stack levels required when called: 5
  2156 ;; This function calls:
  2157 ;;		_SetLongAddr
  2158 ;;		_SetShortAddr
  2159 ;; This function is called by:
  2160 ;;		_main
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text2
  2165   001508                     __ptext2:
  2166                           	callstack 0
  2167   001508                     _MRF24TransmitirDato:
  2168                           	callstack 25
  2169   001508                     
  2170                           ;drivers/scr/API_MRF24J40.c: 765:  if(estadoActual != INICIALIZACION_OK)
  2171   001508  505E               	movf	_estadoActual^0,w,c
  2172   00150A  B4D8               	btfsc	status,2,c
  2173   00150C  EF8A  F00A         	goto	u671
  2174   001510  EF8C  F00A         	goto	u670
  2175   001514                     u671:
  2176   001514  EF8E  F00A         	goto	l152
  2177   001518                     u670:
  2178   001518  EF14  F00B         	goto	l153
  2179   00151C                     l152:
  2180                           
  2181                           ;drivers/scr/API_MRF24J40.c: 767:  uint8_t pos_memoria = 0;
  2182   00151C  6A11               	clrf	MRF24TransmitirDato@pos_memoria^0,c
  2183   00151E                     
  2184                           ;drivers/scr/API_MRF24J40.c: 769:  SetLongAddr(pos_memoria++, largo_cabecera);
  2185   00151E  0E00               	movlw	0
  2186   001520  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2187   001522  0E00               	movlw	0
  2188   001524  6E06               	movwf	SetLongAddr@reg_address^0,c
  2189   001526  0E08               	movlw	8
  2190   001528  6E08               	movwf	SetLongAddr@valor^0,c
  2191   00152A  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2192   00152E  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2193   001530                     
  2194                           ;drivers/scr/API_MRF24J40.c: 770:  SetLongAddr(pos_memoria++, mrf24_data_out.largo_mensa
      +                          je + largo_cabecera);
  2195   001530  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2196   001534  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2197   001536  5057               	movf	(_mrf24_data_out+4)^0,w,c
  2198   001538  0F08               	addlw	8
  2199   00153A  6E08               	movwf	SetLongAddr@valor^0,c
  2200   00153C  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2201   001540  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2202   001542                     
  2203                           ;drivers/scr/API_MRF24J40.c: 771:  SetLongAddr(pos_memoria++, (0X01)|(0X20)|(0X40));
  2204   001542  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2205   001546  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2206   001548  0E61               	movlw	97
  2207   00154A  6E08               	movwf	SetLongAddr@valor^0,c
  2208   00154C  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2209   001550  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2210   001552                     
  2211                           ;drivers/scr/API_MRF24J40.c: 772:  SetLongAddr(pos_memoria++, (0XC0)|(0X08));
  2212   001552  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2213   001556  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2214   001558  0EC8               	movlw	200
  2215   00155A  6E08               	movwf	SetLongAddr@valor^0,c
  2216   00155C  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2217   001560  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2218   001562                     
  2219                           ;drivers/scr/API_MRF24J40.c: 773:  SetLongAddr(pos_memoria++, mrf24_data_config.sequence
      +                          _number++);
  2220   001562  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2221   001566  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2222   001568  EE20  F033         	lfsr	2,_mrf24_data_config+2
  2223   00156C  50DF               	movf	indf2,w,c
  2224   00156E  2ADF               	incf	indf2,f,c
  2225   001570  6E08               	movwf	SetLongAddr@valor^0,c
  2226   001572  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2227   001576  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2228   001578                     
  2229                           ;drivers/scr/API_MRF24J40.c: 774:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_panid);
  2230   001578  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2231   00157C  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2232   00157E  C053  F008         	movff	_mrf24_data_out,SetLongAddr@valor
  2233   001582  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2234   001586  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2235   001588                     
  2236                           ;drivers/scr/API_MRF24J40.c: 775:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_panid >> (0X08)));
  2237   001588  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2238   00158C  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2239   00158E  5054               	movf	(_mrf24_data_out+1)^0,w,c
  2240   001590  6E08               	movwf	SetLongAddr@valor^0,c
  2241   001592  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2242   001596  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2243   001598                     
  2244                           ;drivers/scr/API_MRF24J40.c: 776:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_address);
  2245   001598  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2246   00159C  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2247   00159E  C055  F008         	movff	_mrf24_data_out+2,SetLongAddr@valor
  2248   0015A2  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2249   0015A6  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2250   0015A8                     
  2251                           ;drivers/scr/API_MRF24J40.c: 777:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_address >> (0X08)));
  2252   0015A8  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2253   0015AC  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2254   0015AE  5056               	movf	(_mrf24_data_out+3)^0,w,c
  2255   0015B0  6E08               	movwf	SetLongAddr@valor^0,c
  2256   0015B2  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2257   0015B6  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2258   0015B8                     
  2259                           ;drivers/scr/API_MRF24J40.c: 779:  for(int8_t i = 0; i < mrf24_data_out.largo_mensaje; i
      +                          ++) {
  2260   0015B8  6A10               	clrf	MRF24TransmitirDato@i^0,c
  2261   0015BA  EFF0  F00A         	goto	l2019
  2262   0015BE                     l2013:
  2263                           
  2264                           ;drivers/scr/API_MRF24J40.c: 781:   SetLongAddr(pos_memoria++, mrf24_data_out.buffer_sal
      +                          ida[i]);
  2265   0015BE  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2266   0015C2  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2267   0015C4  5058               	movf	(_mrf24_data_out+5)^0,w,c
  2268   0015C6  2410               	addwf	MRF24TransmitirDato@i^0,w,c
  2269   0015C8  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2270   0015CA  C00B  FFF6         	movff	??_MRF24TransmitirDato,tblptrl
  2271   0015CE                     	if	1	;There is more than 1 active tblptr byte
  2272   0015CE  0E10               	movlw	high __smallconst
  2273   0015D0  6EF7               	movwf	tblptrh,c
  2274   0015D2                     	endif
  2275   0015D2                     	if	0	;tblptru may be non-zero
  2276   0015D2                     	endif
  2277   0015D2                     	if	0	;tblptru may be non-zero
  2278   0015D2                     	endif
  2279   0015D2  0008               	tblrd		*
  2280   0015D4  CFF5 F008          	movff	tablat,SetLongAddr@valor
  2281   0015D8  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2282   0015DC  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2283   0015DE                     
  2284                           ;drivers/scr/API_MRF24J40.c: 782:  }
  2285   0015DE  2A10               	incf	MRF24TransmitirDato@i^0,f,c
  2286   0015E0                     l2019:
  2287   0015E0  5057               	movf	(_mrf24_data_out+4)^0,w,c
  2288   0015E2  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2289   0015E4  6A0C               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2290   0015E6  C010  F00D         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato+2
  2291   0015EA  6A0E               	clrf	(??_MRF24TransmitirDato+3)^0,c
  2292   0015EC  BE0D               	btfsc	(??_MRF24TransmitirDato+2)^0,7,c
  2293   0015EE  060E               	decf	(??_MRF24TransmitirDato+3)^0,f,c
  2294   0015F0  500B               	movf	??_MRF24TransmitirDato^0,w,c
  2295   0015F2  5C0D               	subwf	(??_MRF24TransmitirDato+2)^0,w,c
  2296   0015F4  500E               	movf	(??_MRF24TransmitirDato+3)^0,w,c
  2297   0015F6  0A80               	xorlw	128
  2298   0015F8  6E0F               	movwf	(??_MRF24TransmitirDato+4)^0,c
  2299   0015FA  500C               	movf	(??_MRF24TransmitirDato+1)^0,w,c
  2300   0015FC  0A80               	xorlw	128
  2301   0015FE  580F               	subwfb	(??_MRF24TransmitirDato+4)^0,w,c
  2302   001600  A0D8               	btfss	status,0,c
  2303   001602  EF05  F00B         	goto	u681
  2304   001606  EF07  F00B         	goto	u680
  2305   00160A                     u681:
  2306   00160A  EFDF  F00A         	goto	l2013
  2307   00160E                     u680:
  2308   00160E                     
  2309                           ;drivers/scr/API_MRF24J40.c: 783:  SetLongAddr(pos_memoria++, (0X00));
  2310   00160E  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2311   001612  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2312   001614  0E00               	movlw	0
  2313   001616  6E08               	movwf	SetLongAddr@valor^0,c
  2314   001618  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2315   00161C  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2316   00161E                     
  2317                           ;drivers/scr/API_MRF24J40.c: 784:  SetShortAddr((0x1B), (0X04) | (0X01));
  2318   00161E  0E05               	movlw	5
  2319   001620  6E03               	movwf	SetShortAddr@valor^0,c
  2320   001622  0E1B               	movlw	27
  2321   001624  ECEF  F00D         	call	_SetShortAddr
  2322   001628                     l153:
  2323   001628  0012               	return		;funcret
  2324   00162A                     __end_of_MRF24TransmitirDato:
  2325                           	callstack 0
  2326                           
  2327 ;; *************** function _MRF24SetPANIDDestino *****************
  2328 ;; Defined at:
  2329 ;;		line 750 in file "drivers/scr/API_MRF24J40.c"
  2330 ;; Parameters:    Size  Location     Type
  2331 ;;  panid           2    0[COMRAM] unsigned short 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;		None
  2334 ;; Return value:  Size  Location     Type
  2335 ;;                  1    wreg      enum E3263
  2336 ;; Registers used:
  2337 ;;		wreg, status,2
  2338 ;; Tracked objects:
  2339 ;;		On entry : 0/0
  2340 ;;		On exit  : 0/0
  2341 ;;		Unchanged: 0/0
  2342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;Total ram usage:        2 bytes
  2348 ;; Hardware stack levels used: 1
  2349 ;; Hardware stack levels required when called: 1
  2350 ;; This function calls:
  2351 ;;		Nothing
  2352 ;; This function is called by:
  2353 ;;		_main
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text3
  2358   001BFE                     __ptext3:
  2359                           	callstack 0
  2360   001BFE                     _MRF24SetPANIDDestino:
  2361                           	callstack 29
  2362   001BFE                     
  2363                           ;drivers/scr/API_MRF24J40.c: 752:  if(estadoActual != INICIALIZACION_OK)
  2364   001BFE  505E               	movf	_estadoActual^0,w,c
  2365   001C00  B4D8               	btfsc	status,2,c
  2366   001C02  EF05  F00E         	goto	u661
  2367   001C06  EF07  F00E         	goto	u660
  2368   001C0A                     u661:
  2369   001C0A  EF09  F00E         	goto	l148
  2370   001C0E                     u660:
  2371   001C0E  EF0D  F00E         	goto	l149
  2372   001C12                     l148:
  2373                           
  2374                           ;drivers/scr/API_MRF24J40.c: 754:  mrf24_data_out.destinity_panid = panid;
  2375   001C12  C001  F053         	movff	MRF24SetPANIDDestino@panid,_mrf24_data_out
  2376   001C16  C002  F054         	movff	MRF24SetPANIDDestino@panid+1,_mrf24_data_out+1
  2377   001C1A                     l149:
  2378   001C1A  0012               	return		;funcret
  2379   001C1C                     __end_of_MRF24SetPANIDDestino:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _MRF24SetMensajeSalida *****************
  2383 ;; Defined at:
  2384 ;;		line 723 in file "drivers/scr/API_MRF24J40.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  2387 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2388 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;		None
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      enum E3263
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2400 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 2
  2407 ;; This function calls:
  2408 ;;		_strlen
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text4
  2415   0019D0                     __ptext4:
  2416                           	callstack 0
  2417   0019D0                     _MRF24SetMensajeSalida:
  2418                           	callstack 28
  2419   0019D0                     
  2420                           ;drivers/scr/API_MRF24J40.c: 725:  if(strlen(mensaje) == (0X00) || estadoActual != INICI
      +                          ALIZACION_OK)
  2421   0019D0  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2422   0019D4  EC41  F00D         	call	_strlen	;wreg free
  2423   0019D8  5001               	movf	?_strlen^0,w,c
  2424   0019DA  1002               	iorwf	(?_strlen+1)^0,w,c
  2425   0019DC  B4D8               	btfsc	status,2,c
  2426   0019DE  EFF3  F00C         	goto	u631
  2427   0019E2  EFF5  F00C         	goto	u630
  2428   0019E6                     u631:
  2429   0019E6  EF07  F00D         	goto	l141
  2430   0019EA                     u630:
  2431   0019EA  505E               	movf	_estadoActual^0,w,c
  2432   0019EC  B4D8               	btfsc	status,2,c
  2433   0019EE  EFFB  F00C         	goto	u641
  2434   0019F2  EFFD  F00C         	goto	u640
  2435   0019F6                     u641:
  2436   0019F6  EFFF  F00C         	goto	l1955
  2437   0019FA                     u640:
  2438   0019FA  EF07  F00D         	goto	l141
  2439   0019FE                     l1955:
  2440                           
  2441                           ;drivers/scr/API_MRF24J40.c: 727:  mrf24_data_out.buffer_salida = mensaje;
  2442   0019FE  C004  F058         	movff	MRF24SetMensajeSalida@mensaje,_mrf24_data_out+5
  2443   001A02                     
  2444                           ;drivers/scr/API_MRF24J40.c: 728:  mrf24_data_out.largo_mensaje = (uint8_t) strlen(mensa
      +                          je);
  2445   001A02  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2446   001A06  EC41  F00D         	call	_strlen	;wreg free
  2447   001A0A  5001               	movf	?_strlen^0,w,c
  2448   001A0C  6E57               	movwf	(_mrf24_data_out+4)^0,c
  2449   001A0E                     l141:
  2450   001A0E  0012               	return		;funcret
  2451   001A10                     __end_of_MRF24SetMensajeSalida:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _strlen *****************
  2455 ;; Defined at:
  2456 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2459 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2460 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2463 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2464 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  2    0[COMRAM] unsigned int 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2474 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2477 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2478 ;;Total ram usage:        3 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; Hardware stack levels required when called: 1
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_MRF24SetMensajeSalida
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text5
  2489   001A82                     __ptext5:
  2490                           	callstack 0
  2491   001A82                     _strlen:
  2492                           	callstack 28
  2493   001A82  C001  F003         	movff	strlen@s,strlen@a
  2494   001A86  EF46  F00D         	goto	l1925
  2495   001A8A                     l1923:
  2496   001A8A  2A01               	incf	strlen@s^0,f,c
  2497   001A8C                     l1925:
  2498   001A8C  C001  FFF6         	movff	strlen@s,tblptrl
  2499   001A90                     	if	1	;There is more than 1 active tblptr byte
  2500   001A90  0E10               	movlw	high __smallconst
  2501   001A92  6EF7               	movwf	tblptrh,c
  2502   001A94                     	endif
  2503   001A94                     	if	0	;tblptru may be non-zero
  2504   001A94                     	endif
  2505   001A94                     	if	0	;tblptru may be non-zero
  2506   001A94                     	endif
  2507   001A94  0008               	tblrd		*
  2508   001A96  50F5               	movf	tablat,w,c
  2509   001A98  0900               	iorlw	0
  2510   001A9A  A4D8               	btfss	status,2,c
  2511   001A9C  EF52  F00D         	goto	u621
  2512   001AA0  EF54  F00D         	goto	u620
  2513   001AA4                     u621:
  2514   001AA4  EF45  F00D         	goto	l1923
  2515   001AA8                     u620:
  2516   001AA8  5003               	movf	strlen@a^0,w,c
  2517   001AAA  5C01               	subwf	strlen@s^0,w,c
  2518   001AAC  6E01               	movwf	?_strlen^0,c
  2519   001AAE  6A02               	clrf	(?_strlen+1)^0,c
  2520   001AB0  BE01               	btfsc	?_strlen^0,7,c
  2521   001AB2  0602               	decf	(?_strlen+1)^0,f,c
  2522   001AB4  0012               	return		;funcret
  2523   001AB6                     __end_of_strlen:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function _MRF24SetDireccionDestino *****************
  2527 ;; Defined at:
  2528 ;;		line 737 in file "drivers/scr/API_MRF24J40.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;  direccion       2    0[COMRAM] unsigned short 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      enum E3263
  2535 ;; Registers used:
  2536 ;;		wreg, status,2
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;Total ram usage:        2 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_main
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556                           	psect	text6
  2557   001C1C                     __ptext6:
  2558                           	callstack 0
  2559   001C1C                     _MRF24SetDireccionDestino:
  2560                           	callstack 29
  2561   001C1C                     
  2562                           ;drivers/scr/API_MRF24J40.c: 739:  if(estadoActual != INICIALIZACION_OK)
  2563   001C1C  505E               	movf	_estadoActual^0,w,c
  2564   001C1E  B4D8               	btfsc	status,2,c
  2565   001C20  EF14  F00E         	goto	u651
  2566   001C24  EF16  F00E         	goto	u650
  2567   001C28                     u651:
  2568   001C28  EF18  F00E         	goto	l144
  2569   001C2C                     u650:
  2570   001C2C  EF1C  F00E         	goto	l145
  2571   001C30                     l144:
  2572                           
  2573                           ;drivers/scr/API_MRF24J40.c: 741:  mrf24_data_out.destinity_address = direccion;
  2574   001C30  C001  F055         	movff	MRF24SetDireccionDestino@direccion,_mrf24_data_out+2
  2575   001C34  C002  F056         	movff	MRF24SetDireccionDestino@direccion+1,_mrf24_data_out+3
  2576   001C38                     l145:
  2577   001C38  0012               	return		;funcret
  2578   001C3A                     __end_of_MRF24SetDireccionDestino:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _MRF24ReciboPaquete *****************
  2582 ;; Defined at:
  2583 ;;		line 808 in file "drivers/scr/API_MRF24J40.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;		None
  2586 ;; Auto vars:     Size  Location     Type
  2587 ;;  index           1   16[COMRAM] unsigned char 
  2588 ;;  largo_mensaj    1   15[COMRAM] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      enum E3263
  2591 ;; Registers used:
  2592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2600 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;Total ram usage:        7 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 5
  2605 ;; This function calls:
  2606 ;;		_GetLongAddr
  2607 ;;		_GetShortAddr
  2608 ;;		_SetLongAddr
  2609 ;;		_SetShortAddr
  2610 ;; This function is called by:
  2611 ;;		_main
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text7
  2616   00179A                     __ptext7:
  2617                           	callstack 0
  2618   00179A                     _MRF24ReciboPaquete:
  2619                           	callstack 25
  2620   00179A                     
  2621                           ;drivers/scr/API_MRF24J40.c: 810:  if(estadoActual != INICIALIZACION_OK)
  2622   00179A  505E               	movf	_estadoActual^0,w,c
  2623   00179C  B4D8               	btfsc	status,2,c
  2624   00179E  EFD3  F00B         	goto	u691
  2625   0017A2  EFD5  F00B         	goto	u690
  2626   0017A6                     u691:
  2627   0017A6  EFD7  F00B         	goto	l2033
  2628   0017AA                     u690:
  2629   0017AA  EF1F  F00C         	goto	l165
  2630   0017AE                     l2033:
  2631                           
  2632                           ;drivers/scr/API_MRF24J40.c: 812:  uint8_t index;;drivers/scr/API_MRF24J40.c: 813:  uint
      +                          8_t largo_mensaje;;drivers/scr/API_MRF24J40.c: 814:  SetLongAddr((0x39), (0X04));
  2633   0017AE  0E00               	movlw	0
  2634   0017B0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2635   0017B2  0E39               	movlw	57
  2636   0017B4  6E06               	movwf	SetLongAddr@reg_address^0,c
  2637   0017B6  0E04               	movlw	4
  2638   0017B8  6E08               	movwf	SetLongAddr@valor^0,c
  2639   0017BA  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2640                           
  2641                           ;drivers/scr/API_MRF24J40.c: 815:  SetShortAddr((0x0D), (0X04));
  2642   0017BE  0E04               	movlw	4
  2643   0017C0  6E03               	movwf	SetShortAddr@valor^0,c
  2644   0017C2  0E0D               	movlw	13
  2645   0017C4  ECEF  F00D         	call	_SetShortAddr
  2646                           
  2647                           ;drivers/scr/API_MRF24J40.c: 816:  largo_mensaje = GetLongAddr((0x300));
  2648   0017C8  0E03               	movlw	3
  2649   0017CA  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2650   0017CC  0E00               	movlw	0
  2651   0017CE  6E06               	movwf	GetLongAddr@reg_address^0,c
  2652   0017D0  EC84  F00C         	call	_GetLongAddr	;wreg free
  2653   0017D4  6E10               	movwf	MRF24ReciboPaquete@largo_mensaje^0,c
  2654   0017D6                     
  2655                           ;drivers/scr/API_MRF24J40.c: 818:  for(index = 0; index < largo_mensaje - (0x04); index+
      +                          +) {
  2656   0017D6  6A11               	clrf	MRF24ReciboPaquete@index^0,c
  2657   0017D8  EFFC  F00B         	goto	l2041
  2658   0017DC                     l2037:
  2659                           
  2660                           ;drivers/scr/API_MRF24J40.c: 820:   mrf24_data_in.buffer_entrada[index] = GetLongAddr((0
      +                          x300) + (0X08) + index);
  2661   0017DC  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2662   0017DE  0F66               	addlw	low (_mrf24_data_in+6)
  2663   0017E0  6ED9               	movwf	fsr2l,c
  2664   0017E2  6ADA               	clrf	fsr2h,c
  2665   0017E4  0E08               	movlw	8
  2666   0017E6  2411               	addwf	MRF24ReciboPaquete@index^0,w,c
  2667   0017E8  6E06               	movwf	GetLongAddr@reg_address^0,c
  2668   0017EA  6A07               	clrf	(GetLongAddr@reg_address+1)^0,c
  2669   0017EC  0E03               	movlw	3
  2670   0017EE  2207               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  2671   0017F0  EC84  F00C         	call	_GetLongAddr	;wreg free
  2672   0017F4  6EDF               	movwf	indf2,c
  2673   0017F6                     
  2674                           ;drivers/scr/API_MRF24J40.c: 821:  }
  2675   0017F6  2A11               	incf	MRF24ReciboPaquete@index^0,f,c
  2676   0017F8                     l2041:
  2677   0017F8  0EFC               	movlw	252
  2678   0017FA  2410               	addwf	MRF24ReciboPaquete@largo_mensaje^0,w,c
  2679   0017FC  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  2680   0017FE  6A0C               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  2681   001800  0EFF               	movlw	255
  2682   001802  220C               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  2683   001804  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2684   001806  6E0D               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  2685   001808  6A0E               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  2686   00180A  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  2687   00180C  5C0D               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  2688   00180E  500E               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  2689   001810  0A80               	xorlw	128
  2690   001812  6E0F               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  2691   001814  500C               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  2692   001816  0A80               	xorlw	128
  2693   001818  580F               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  2694   00181A  A0D8               	btfss	status,0,c
  2695   00181C  EF12  F00C         	goto	u701
  2696   001820  EF14  F00C         	goto	u700
  2697   001824                     u701:
  2698   001824  EFEE  F00B         	goto	l2037
  2699   001828                     u700:
  2700   001828                     
  2701                           ;drivers/scr/API_MRF24J40.c: 822:  SetLongAddr((0x39), (0X00));
  2702   001828  0E00               	movlw	0
  2703   00182A  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2704   00182C  0E39               	movlw	57
  2705   00182E  6E06               	movwf	SetLongAddr@reg_address^0,c
  2706   001830  0E00               	movlw	0
  2707   001832  6E08               	movwf	SetLongAddr@valor^0,c
  2708   001834  ECC7  F00C         	call	_SetLongAddr	;wreg free
  2709                           
  2710                           ;drivers/scr/API_MRF24J40.c: 823:  (void)GetShortAddr((0x31));
  2711   001838  0E31               	movlw	49
  2712   00183A  ECC9  F00D         	call	_GetShortAddr
  2713   00183E                     l165:
  2714   00183E  0012               	return		;funcret
  2715   001840                     __end_of_MRF24ReciboPaquete:
  2716                           	callstack 0
  2717                           
  2718 ;; *************** function _MRF24J40Init *****************
  2719 ;; Defined at:
  2720 ;;		line 707 in file "drivers/scr/API_MRF24J40.c"
  2721 ;; Parameters:    Size  Location     Type
  2722 ;;		None
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      enum E3263
  2727 ;; Registers used:
  2728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2738 ;;Total ram usage:        1 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 7
  2741 ;; This function calls:
  2742 ;;		_InicializoMRF24
  2743 ;;		_InicializoPines
  2744 ;;		_InicializoVariables
  2745 ;;		_SetResetPin
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           	psect	text8
  2752   001A10                     __ptext8:
  2753                           	callstack 0
  2754   001A10                     _MRF24J40Init:
  2755                           	callstack 23
  2756   001A10                     
  2757                           ;drivers/scr/API_MRF24J40.c: 709:  InicializoVariables();
  2758   001A10  EC15  F00B         	call	_InicializoVariables	;wreg free
  2759   001A14                     
  2760                           ;drivers/scr/API_MRF24J40.c: 710:  InicializoPines();
  2761   001A14  EC40  F00E         	call	_InicializoPines	;wreg free
  2762   001A18                     
  2763                           ;drivers/scr/API_MRF24J40.c: 711:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2764   001A18  0E06               	movlw	6
  2765   001A1A  6E1A               	movwf	??_MRF24J40Init^0,c
  2766   001A1C  0E30               	movlw	48
  2767   001A1E                     u887:
  2768   001A1E  2EE8               	decfsz	wreg,f,c
  2769   001A20  D7FE               	bra	u887
  2770   001A22  2E1A               	decfsz	??_MRF24J40Init^0,f,c
  2771   001A24  D7FC               	bra	u887
  2772   001A26  F000 F000          	nop2	
  2773   001A2A                     
  2774                           ;drivers/scr/API_MRF24J40.c: 712:  SetResetPin(1);
  2775   001A2A  0E01               	movlw	1
  2776   001A2C  EC5B  F00E         	call	_SetResetPin
  2777   001A30                     
  2778                           ;drivers/scr/API_MRF24J40.c: 713:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2779   001A30  0E06               	movlw	6
  2780   001A32  6E1A               	movwf	??_MRF24J40Init^0,c
  2781   001A34  0E30               	movlw	48
  2782   001A36                     u897:
  2783   001A36  2EE8               	decfsz	wreg,f,c
  2784   001A38  D7FE               	bra	u897
  2785   001A3A  2E1A               	decfsz	??_MRF24J40Init^0,f,c
  2786   001A3C  D7FC               	bra	u897
  2787   001A3E  F000 F000          	nop2	
  2788   001A42                     
  2789                           ;drivers/scr/API_MRF24J40.c: 714:  estadoActual = InicializoMRF24();
  2790   001A42  EC18  F009         	call	_InicializoMRF24	;wreg free
  2791   001A46  6E5E               	movwf	_estadoActual^0,c
  2792   001A48  0012               	return		;funcret
  2793   001A4A                     __end_of_MRF24J40Init:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function _InicializoVariables *****************
  2797 ;; Defined at:
  2798 ;;		line 503 in file "drivers/scr/API_MRF24J40.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  i               2    1[COMRAM] int 
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;Total ram usage:        3 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 1
  2819 ;; This function calls:
  2820 ;;		Nothing
  2821 ;; This function is called by:
  2822 ;;		_MRF24J40Init
  2823 ;; This function uses a non-reentrant model
  2824 ;;
  2825                           
  2826                           	psect	text9
  2827   00162A                     __ptext9:
  2828                           	callstack 0
  2829   00162A                     _InicializoVariables:
  2830                           	callstack 28
  2831   00162A                     
  2832                           ;drivers/scr/API_MRF24J40.c: 505:  for(int i = 0; i < 16; i++){
  2833   00162A  0E00               	movlw	0
  2834   00162C  6E03               	movwf	(InicializoVariables@i+1)^0,c
  2835   00162E  0E00               	movlw	0
  2836   001630  6E02               	movwf	InicializoVariables@i^0,c
  2837   001632                     l1835:
  2838                           
  2839                           ;drivers/scr/API_MRF24J40.c: 507:   if(i < 8)
  2840   001632  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  2841   001634  EF27  F00B         	goto	u560
  2842   001638  5003               	movf	(InicializoVariables@i+1)^0,w,c
  2843   00163A  E107               	bnz	u561
  2844   00163C  0E08               	movlw	8
  2845   00163E  5C02               	subwf	InicializoVariables@i^0,w,c
  2846   001640  B0D8               	btfsc	status,0,c
  2847   001642  EF25  F00B         	goto	u561
  2848   001646  EF27  F00B         	goto	u560
  2849   00164A                     u561:
  2850   00164A  EF35  F00B         	goto	l99
  2851   00164E                     u560:
  2852   00164E                     
  2853                           ;drivers/scr/API_MRF24J40.c: 508:    mrf24_data_config.my_mac[i] = default_mac_address[i
      +                          ];
  2854   00164E  5002               	movf	InicializoVariables@i^0,w,c
  2855   001650  0F11               	addlw	low _default_mac_address
  2856   001652  6E01               	movwf	??_InicializoVariables^0,c
  2857   001654  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  2858   001658                     	if	1	;There is more than 1 active tblptr byte
  2859   001658  0E10               	movlw	high __smallconst
  2860   00165A  6EF7               	movwf	tblptrh,c
  2861   00165C                     	endif
  2862   00165C                     	if	0	;tblptru may be non-zero
  2863   00165C                     	endif
  2864   00165C                     	if	0	;tblptru may be non-zero
  2865   00165C                     	endif
  2866   00165C  5002               	movf	InicializoVariables@i^0,w,c
  2867   00165E  0F45               	addlw	low (_mrf24_data_config+20)
  2868   001660  6ED9               	movwf	fsr2l,c
  2869   001662  6ADA               	clrf	fsr2h,c
  2870   001664  0008               	tblrd		*
  2871   001666  CFF5 FFDF          	movff	tablat,indf2
  2872   00166A                     l99:
  2873                           
  2874                           ;drivers/scr/API_MRF24J40.c: 509:   mrf24_data_config.security_key[i] = default_security
      +                          _key[i];
  2875   00166A  5002               	movf	InicializoVariables@i^0,w,c
  2876   00166C  0F01               	addlw	low _default_security_key
  2877   00166E  6E01               	movwf	??_InicializoVariables^0,c
  2878   001670  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  2879   001674                     	if	1	;There is more than 1 active tblptr byte
  2880   001674  0E10               	movlw	high __smallconst
  2881   001676  6EF7               	movwf	tblptrh,c
  2882   001678                     	endif
  2883   001678                     	if	0	;tblptru may be non-zero
  2884   001678                     	endif
  2885   001678                     	if	0	;tblptru may be non-zero
  2886   001678                     	endif
  2887   001678  5002               	movf	InicializoVariables@i^0,w,c
  2888   00167A  0F35               	addlw	low (_mrf24_data_config+4)
  2889   00167C  6ED9               	movwf	fsr2l,c
  2890   00167E  6ADA               	clrf	fsr2h,c
  2891   001680  0008               	tblrd		*
  2892   001682  CFF5 FFDF          	movff	tablat,indf2
  2893   001686                     
  2894                           ;drivers/scr/API_MRF24J40.c: 510:  }
  2895   001686  4A02               	infsnz	InicializoVariables@i^0,f,c
  2896   001688  2A03               	incf	(InicializoVariables@i+1)^0,f,c
  2897   00168A  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  2898   00168C  EF51  F00B         	goto	u571
  2899   001690  5003               	movf	(InicializoVariables@i+1)^0,w,c
  2900   001692  E109               	bnz	u570
  2901   001694  0E10               	movlw	16
  2902   001696  5C02               	subwf	InicializoVariables@i^0,w,c
  2903   001698  A0D8               	btfss	status,0,c
  2904   00169A  EF51  F00B         	goto	u571
  2905   00169E  EF53  F00B         	goto	u570
  2906   0016A2                     u571:
  2907   0016A2  EF19  F00B         	goto	l1835
  2908   0016A6                     u570:
  2909   0016A6                     
  2910                           ;drivers/scr/API_MRF24J40.c: 511:  mrf24_data_config.sequence_number = (0X01);
  2911   0016A6  0E01               	movlw	1
  2912   0016A8  6E33               	movwf	(_mrf24_data_config+2)^0,c
  2913                           
  2914                           ;drivers/scr/API_MRF24J40.c: 512:  mrf24_data_config.my_channel = CH_11;
  2915   0016AA  0E03               	movlw	3
  2916   0016AC  6E34               	movwf	(_mrf24_data_config+3)^0,c
  2917   0016AE                     
  2918                           ;drivers/scr/API_MRF24J40.c: 513:  mrf24_data_config.get_new_msg = 0;
  2919   0016AE  6A31               	clrf	_mrf24_data_config^0,c
  2920   0016B0                     
  2921                           ;drivers/scr/API_MRF24J40.c: 514:  mrf24_data_config.put_new_msg = 0;
  2922   0016B0  6A32               	clrf	(_mrf24_data_config+1)^0,c
  2923                           
  2924                           ;drivers/scr/API_MRF24J40.c: 515:  mrf24_data_config.my_panid = (0x1234);
  2925   0016B2  0E12               	movlw	18
  2926   0016B4  6E4E               	movwf	(_mrf24_data_config+29)^0,c
  2927   0016B6  0E34               	movlw	52
  2928   0016B8  6E4D               	movwf	(_mrf24_data_config+28)^0,c
  2929                           
  2930                           ;drivers/scr/API_MRF24J40.c: 516:  mrf24_data_config.my_address = (0x1111);
  2931   0016BA  0E11               	movlw	17
  2932   0016BC  6E50               	movwf	(_mrf24_data_config+31)^0,c
  2933   0016BE  0E11               	movlw	17
  2934   0016C0  6E4F               	movwf	(_mrf24_data_config+30)^0,c
  2935                           
  2936                           ;drivers/scr/API_MRF24J40.c: 517:  mrf24_data_in.source_address = (0X00);
  2937   0016C2  0E00               	movlw	0
  2938   0016C4  0100               	movlb	0	; () banked
  2939   0016C6  6F63               	movwf	(_mrf24_data_in+3)& (0+255),b
  2940   0016C8  0E00               	movlw	0
  2941   0016CA  6F62               	movwf	(_mrf24_data_in+2)& (0+255),b
  2942                           
  2943                           ;drivers/scr/API_MRF24J40.c: 518:  mrf24_data_in.source_panid = (0X00);
  2944   0016CC  0E00               	movlw	0
  2945   0016CE  6F61               	movwf	(_mrf24_data_in+1)& (0+255),b
  2946   0016D0  0E00               	movlw	0
  2947   0016D2  6F60               	movwf	_mrf24_data_in& (0+255),b
  2948   0016D4                     
  2949                           ; BSR set to: 0
  2950                           ;drivers/scr/API_MRF24J40.c: 519:  mrf24_data_in.tamano_mensaje = (0X00);
  2951   0016D4  6B64               	clrf	(_mrf24_data_in+4)& (0+255),b
  2952   0016D6                     
  2953                           ; BSR set to: 0
  2954                           ;drivers/scr/API_MRF24J40.c: 520:  mrf24_data_in.buffer_entrada[0] = (0X00);
  2955   0016D6  6B66               	clrf	(_mrf24_data_in+6)& (0+255),b
  2956                           
  2957                           ;drivers/scr/API_MRF24J40.c: 521:  mrf24_data_out.destinity_panid = (0X00);
  2958   0016D8  0E00               	movlw	0
  2959   0016DA  6E54               	movwf	(_mrf24_data_out+1)^0,c
  2960   0016DC  0E00               	movlw	0
  2961   0016DE  6E53               	movwf	_mrf24_data_out^0,c
  2962                           
  2963                           ;drivers/scr/API_MRF24J40.c: 522:  mrf24_data_out.destinity_address = (0X00);
  2964   0016E0  0E00               	movlw	0
  2965   0016E2  6E56               	movwf	(_mrf24_data_out+3)^0,c
  2966   0016E4  0E00               	movlw	0
  2967   0016E6  6E55               	movwf	(_mrf24_data_out+2)^0,c
  2968   0016E8                     
  2969                           ; BSR set to: 0
  2970                           ;drivers/scr/API_MRF24J40.c: 523:  mrf24_data_out.largo_mensaje = (0X00);
  2971   0016E8  6A57               	clrf	(_mrf24_data_out+4)^0,c
  2972   0016EA                     
  2973                           ; BSR set to: 0
  2974                           ;drivers/scr/API_MRF24J40.c: 524:  mrf24_data_out.buffer_salida = ((void*)0);
  2975   0016EA  6A58               	clrf	(_mrf24_data_out+5)^0,c
  2976   0016EC                     
  2977                           ; BSR set to: 0
  2978   0016EC  0012               	return		;funcret
  2979   0016EE                     __end_of_InicializoVariables:
  2980                           	callstack 0
  2981                           
  2982 ;; *************** function _InicializoPines *****************
  2983 ;; Defined at:
  2984 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  2985 ;; Parameters:    Size  Location     Type
  2986 ;;		None
  2987 ;; Auto vars:     Size  Location     Type
  2988 ;;		None
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  1    wreg      void 
  2991 ;; Registers used:
  2992 ;;		wreg, cstack
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;Total ram usage:        0 bytes
  3003 ;; Hardware stack levels used: 1
  3004 ;; Hardware stack levels required when called: 2
  3005 ;; This function calls:
  3006 ;;		_SetCSPin
  3007 ;;		_SetResetPin
  3008 ;;		_SetWakePin
  3009 ;; This function is called by:
  3010 ;;		_MRF24J40Init
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text10
  3015   001C80                     __ptext10:
  3016                           	callstack 0
  3017   001C80                     _InicializoPines:
  3018                           	callstack 27
  3019   001C80                     
  3020                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  3021   001C80  0E01               	movlw	1
  3022   001C82  EC70  F00E         	call	_SetCSPin
  3023                           
  3024                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  3025   001C86  0E01               	movlw	1
  3026   001C88  EC54  F00E         	call	_SetWakePin
  3027                           
  3028                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  3029   001C8C  0E00               	movlw	0
  3030   001C8E  EC5B  F00E         	call	_SetResetPin
  3031   001C92  0012               	return		;funcret
  3032   001C94                     __end_of_InicializoPines:
  3033                           	callstack 0
  3034                           
  3035 ;; *************** function _SetWakePin *****************
  3036 ;; Defined at:
  3037 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  3038 ;; Parameters:    Size  Location     Type
  3039 ;;  estado          1    wreg     _Bool 
  3040 ;; Auto vars:     Size  Location     Type
  3041 ;;  estado          1    0[COMRAM] _Bool 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      void 
  3044 ;; Registers used:
  3045 ;;		wreg
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;Total ram usage:        1 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; Hardware stack levels required when called: 1
  3058 ;; This function calls:
  3059 ;;		Nothing
  3060 ;; This function is called by:
  3061 ;;		_InicializoPines
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text11
  3066   001CA8                     __ptext11:
  3067                           	callstack 0
  3068   001CA8                     _SetWakePin:
  3069                           	callstack 27
  3070                           
  3071                           ;incstack = 0
  3072                           ;SetWakePin@estado stored from wreg
  3073   001CA8  6E01               	movwf	SetWakePin@estado^0,c
  3074   001CAA                     
  3075                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  3076   001CAA  B001               	btfsc	SetWakePin@estado^0,0,c
  3077   001CAC  D002               	bra	u55
  3078   001CAE  9E8B               	bcf	139,7,c	;volatile
  3079   001CB0  D001               	bra	u56
  3080   001CB2                     u55:
  3081   001CB2  8E8B               	bsf	139,7,c	;volatile
  3082   001CB4                     u56:
  3083   001CB4  0012               	return		;funcret
  3084   001CB6                     __end_of_SetWakePin:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _SetResetPin *****************
  3088 ;; Defined at:
  3089 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;  estado          1    wreg     _Bool 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  estado          1    0[COMRAM] _Bool 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;Total ram usage:        1 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 1
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_InicializoPines
  3114 ;;		_MRF24J40Init
  3115 ;; This function uses a non-reentrant model
  3116 ;;
  3117                           
  3118                           	psect	text12
  3119   001CB6                     __ptext12:
  3120                           	callstack 0
  3121   001CB6                     _SetResetPin:
  3122                           	callstack 28
  3123                           
  3124                           ;incstack = 0
  3125                           ;SetResetPin@estado stored from wreg
  3126   001CB6  6E01               	movwf	SetResetPin@estado^0,c
  3127   001CB8                     
  3128                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  3129   001CB8  B001               	btfsc	SetResetPin@estado^0,0,c
  3130   001CBA  D002               	bra	u65
  3131   001CBC  988C               	bcf	140,4,c	;volatile
  3132   001CBE  D001               	bra	u66
  3133   001CC0                     u65:
  3134   001CC0  888C               	bsf	140,4,c	;volatile
  3135   001CC2                     u66:
  3136   001CC2  0012               	return		;funcret
  3137   001CC4                     __end_of_SetResetPin:
  3138                           	callstack 0
  3139                           
  3140 ;; *************** function _InicializoMRF24 *****************
  3141 ;; Defined at:
  3142 ;;		line 533 in file "drivers/scr/API_MRF24J40.c"
  3143 ;; Parameters:    Size  Location     Type
  3144 ;;		None
  3145 ;; Auto vars:     Size  Location     Type
  3146 ;;  delay_time_o    9   16[COMRAM] struct .
  3147 ;;  lectura         1   15[COMRAM] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      enum E3263
  3150 ;; Registers used:
  3151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;Total ram usage:       11 bytes
  3162 ;; Hardware stack levels used: 1
  3163 ;; Hardware stack levels required when called: 6
  3164 ;; This function calls:
  3165 ;;		_DelayInit
  3166 ;;		_DelayRead
  3167 ;;		_DelayReset
  3168 ;;		_GetLongAddr
  3169 ;;		_GetShortAddr
  3170 ;;		_SetChannel
  3171 ;;		_SetDeviceAddress
  3172 ;;		_SetDeviceMACAddress
  3173 ;;		_SetLongAddr
  3174 ;;		_SetShortAddr
  3175 ;; This function is called by:
  3176 ;;		_MRF24J40Init
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text13
  3181   001230                     __ptext13:
  3182                           	callstack 0
  3183   001230                     _InicializoMRF24:
  3184                           	callstack 23
  3185   001230                     
  3186                           ;drivers/scr/API_MRF24J40.c: 535:  uint8_t lectura;;drivers/scr/API_MRF24J40.c: 536:  de
      +                          layNoBloqueanteData delay_time_out;;drivers/scr/API_MRF24J40.c: 537:  DelayInit(&delay_t
      +                          ime_out, 100);
  3187   001230  0E11               	movlw	low InicializoMRF24@delay_time_out
  3188   001232  6E01               	movwf	DelayInit@delay^0,c
  3189   001234  0E64               	movlw	100
  3190   001236  6E02               	movwf	DelayInit@duration^0,c
  3191   001238  0E00               	movlw	0
  3192   00123A  6E03               	movwf	(DelayInit@duration+1)^0,c
  3193   00123C  0E00               	movlw	0
  3194   00123E  6E04               	movwf	(DelayInit@duration+2)^0,c
  3195   001240  0E00               	movlw	0
  3196   001242  6E05               	movwf	(DelayInit@duration+3)^0,c
  3197   001244  ECA2  F00D         	call	_DelayInit	;wreg free
  3198   001248                     
  3199                           ;drivers/scr/API_MRF24J40.c: 538:  SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  3200   001248  0E07               	movlw	7
  3201   00124A  6E03               	movwf	SetShortAddr@valor^0,c
  3202   00124C  0E2A               	movlw	42
  3203   00124E  ECEF  F00D         	call	_SetShortAddr
  3204   001252                     
  3205                           ;drivers/scr/API_MRF24J40.c: 539:  DelayReset(&delay_time_out);
  3206   001252  0E11               	movlw	low InicializoMRF24@delay_time_out
  3207   001254  6E01               	movwf	DelayReset@delay^0,c
  3208   001256  ECDC  F00D         	call	_DelayReset	;wreg free
  3209   00125A                     l103:
  3210                           
  3211                           ;drivers/scr/API_MRF24J40.c: 543:   lectura = GetShortAddr((0x2A));
  3212   00125A  0E2A               	movlw	42
  3213   00125C  ECC9  F00D         	call	_GetShortAddr
  3214   001260  6E10               	movwf	InicializoMRF24@lectura^0,c
  3215   001262                     
  3216                           ;drivers/scr/API_MRF24J40.c: 544:   if(DelayRead(&delay_time_out))
  3217   001262  0E11               	movlw	low InicializoMRF24@delay_time_out
  3218   001264  6E02               	movwf	DelayRead@delay^0,c
  3219   001266  EC77  F00B         	call	_DelayRead	;wreg free
  3220   00126A  0900               	iorlw	0
  3221   00126C  B4D8               	btfsc	status,2,c
  3222   00126E  EF3B  F009         	goto	u581
  3223   001272  EF3D  F009         	goto	u580
  3224   001276                     u581:
  3225   001276  EF40  F009         	goto	l1871
  3226   00127A                     u580:
  3227   00127A                     l1867:
  3228                           
  3229                           ;drivers/scr/API_MRF24J40.c: 545:    return TIME_OUT_OCURRIDO;
  3230   00127A  0E05               	movlw	5
  3231   00127C  EFE5  F009         	goto	l105
  3232   001280                     l1871:
  3233                           
  3234                           ;drivers/scr/API_MRF24J40.c: 546:  }while((lectura & ((0X04) | (0X02) | (0X01))) != (0X0
      +                          0));
  3235   001280  C010  F00F         	movff	InicializoMRF24@lectura,??_InicializoMRF24
  3236   001284  0E07               	movlw	7
  3237   001286  160F               	andwf	??_InicializoMRF24^0,f,c
  3238   001288  A4D8               	btfss	status,2,c
  3239   00128A  EF49  F009         	goto	u591
  3240   00128E  EF4B  F009         	goto	u590
  3241   001292                     u591:
  3242   001292  EF2D  F009         	goto	l103
  3243   001296                     u590:
  3244   001296                     
  3245                           ;drivers/scr/API_MRF24J40.c: 547:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3246   001296  0E06               	movlw	6
  3247   001298  6E0F               	movwf	??_InicializoMRF24^0,c
  3248   00129A  0E30               	movlw	48
  3249   00129C                     u907:
  3250   00129C  2EE8               	decfsz	wreg,f,c
  3251   00129E  D7FE               	bra	u907
  3252   0012A0  2E0F               	decfsz	??_InicializoMRF24^0,f,c
  3253   0012A2  D7FC               	bra	u907
  3254   0012A4  F000 F000          	nop2	
  3255   0012A8                     
  3256                           ;drivers/scr/API_MRF24J40.c: 548:  SetShortAddr((0x0D), (0X01));
  3257   0012A8  0E01               	movlw	1
  3258   0012AA  6E03               	movwf	SetShortAddr@valor^0,c
  3259   0012AC  0E0D               	movlw	13
  3260   0012AE  ECEF  F00D         	call	_SetShortAddr
  3261   0012B2                     
  3262                           ;drivers/scr/API_MRF24J40.c: 549:  SetDeviceAddress();
  3263   0012B2  EC8D  F00D         	call	_SetDeviceAddress	;wreg free
  3264   0012B6                     
  3265                           ;drivers/scr/API_MRF24J40.c: 550:  SetDeviceMACAddress();
  3266   0012B6  ECA6  F00C         	call	_SetDeviceMACAddress	;wreg free
  3267   0012BA                     
  3268                           ;drivers/scr/API_MRF24J40.c: 551:  SetLongAddr((0x202), (0X80));
  3269   0012BA  0E02               	movlw	2
  3270   0012BC  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3271   0012BE  0E02               	movlw	2
  3272   0012C0  6E06               	movwf	SetLongAddr@reg_address^0,c
  3273   0012C2  0E80               	movlw	128
  3274   0012C4  6E08               	movwf	SetLongAddr@valor^0,c
  3275   0012C6  ECC7  F00C         	call	_SetLongAddr	;wreg free
  3276   0012CA                     
  3277                           ;drivers/scr/API_MRF24J40.c: 552:  SetLongAddr((0x203), (0XC0) | (0X38));
  3278   0012CA  0E02               	movlw	2
  3279   0012CC  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3280   0012CE  0E03               	movlw	3
  3281   0012D0  6E06               	movwf	SetLongAddr@reg_address^0,c
  3282   0012D2  0EF8               	movlw	248
  3283   0012D4  6E08               	movwf	SetLongAddr@valor^0,c
  3284   0012D6  ECC7  F00C         	call	_SetLongAddr	;wreg free
  3285   0012DA                     
  3286                           ;drivers/scr/API_MRF24J40.c: 553:  SetLongAddr((0x206), (0X80) | (0X10));
  3287   0012DA  0E02               	movlw	2
  3288   0012DC  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3289   0012DE  0E06               	movlw	6
  3290   0012E0  6E06               	movwf	SetLongAddr@reg_address^0,c
  3291   0012E2  0E90               	movlw	144
  3292   0012E4  6E08               	movwf	SetLongAddr@valor^0,c
  3293   0012E6  ECC7  F00C         	call	_SetLongAddr	;wreg free
  3294   0012EA                     
  3295                           ;drivers/scr/API_MRF24J40.c: 554:  SetLongAddr((0x207), (0X80));
  3296   0012EA  0E02               	movlw	2
  3297   0012EC  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3298   0012EE  0E07               	movlw	7
  3299   0012F0  6E06               	movwf	SetLongAddr@reg_address^0,c
  3300   0012F2  0E80               	movlw	128
  3301   0012F4  6E08               	movwf	SetLongAddr@valor^0,c
  3302   0012F6  ECC7  F00C         	call	_SetLongAddr	;wreg free
  3303   0012FA                     
  3304                           ;drivers/scr/API_MRF24J40.c: 555:  SetLongAddr((0x208), (0X10));
  3305   0012FA  0E02               	movlw	2
  3306   0012FC  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3307   0012FE  0E08               	movlw	8
  3308   001300  6E06               	movwf	SetLongAddr@reg_address^0,c
  3309   001302  0E10               	movlw	16
  3310   001304  6E08               	movwf	SetLongAddr@valor^0,c
  3311   001306  ECC7  F00C         	call	_SetLongAddr	;wreg free
  3312   00130A                     
  3313                           ;drivers/scr/API_MRF24J40.c: 556:  SetLongAddr((0x220), (0X20) | (0X01));
  3314   00130A  0E02               	movlw	2
  3315   00130C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3316   00130E  0E20               	movlw	32
  3317   001310  6E06               	movwf	SetLongAddr@reg_address^0,c
  3318   001312  0E21               	movlw	33
  3319   001314  6E08               	movwf	SetLongAddr@valor^0,c
  3320   001316  ECC7  F00C         	call	_SetLongAddr	;wreg free
  3321   00131A                     
  3322                           ;drivers/scr/API_MRF24J40.c: 557:  SetShortAddr((0x3A), (0X80));
  3323   00131A  0E80               	movlw	128
  3324   00131C  6E03               	movwf	SetShortAddr@valor^0,c
  3325   00131E  0E3A               	movlw	58
  3326   001320  ECEF  F00D         	call	_SetShortAddr
  3327   001324                     
  3328                           ;drivers/scr/API_MRF24J40.c: 558:  SetShortAddr((0x3E), (0X40));
  3329   001324  0E40               	movlw	64
  3330   001326  6E03               	movwf	SetShortAddr@valor^0,c
  3331   001328  0E3E               	movlw	62
  3332   00132A  ECEF  F00D         	call	_SetShortAddr
  3333   00132E                     
  3334                           ;drivers/scr/API_MRF24J40.c: 559:  SetShortAddr((0x3F), (0X04) | (0X02));
  3335   00132E  0E06               	movlw	6
  3336   001330  6E03               	movwf	SetShortAddr@valor^0,c
  3337   001332  0E3F               	movlw	63
  3338   001334  ECEF  F00D         	call	_SetShortAddr
  3339   001338                     
  3340                           ;drivers/scr/API_MRF24J40.c: 560:  SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  3341   001338  0E98               	movlw	152
  3342   00133A  6E03               	movwf	SetShortAddr@valor^0,c
  3343   00133C  0E18               	movlw	24
  3344   00133E  ECEF  F00D         	call	_SetShortAddr
  3345   001342                     
  3346                           ;drivers/scr/API_MRF24J40.c: 561:  SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0X01
      +                          ));
  3347   001342  0E95               	movlw	149
  3348   001344  6E03               	movwf	SetShortAddr@valor^0,c
  3349   001346  0E2E               	movlw	46
  3350   001348  ECEF  F00D         	call	_SetShortAddr
  3351   00134C                     
  3352                           ;drivers/scr/API_MRF24J40.c: 562:  DelayReset(&delay_time_out);
  3353   00134C  0E11               	movlw	low InicializoMRF24@delay_time_out
  3354   00134E  6E01               	movwf	DelayReset@delay^0,c
  3355   001350  ECDC  F00D         	call	_DelayReset	;wreg free
  3356   001354                     l1905:
  3357                           
  3358                           ;drivers/scr/API_MRF24J40.c: 566:   lectura = GetLongAddr((0x20f));
  3359   001354  0E02               	movlw	2
  3360   001356  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3361   001358  0E0F               	movlw	15
  3362   00135A  6E06               	movwf	GetLongAddr@reg_address^0,c
  3363   00135C  EC84  F00C         	call	_GetLongAddr	;wreg free
  3364   001360  6E10               	movwf	InicializoMRF24@lectura^0,c
  3365   001362                     
  3366                           ;drivers/scr/API_MRF24J40.c: 567:   if(DelayRead(&delay_time_out))
  3367   001362  0E11               	movlw	low InicializoMRF24@delay_time_out
  3368   001364  6E02               	movwf	DelayRead@delay^0,c
  3369   001366  EC77  F00B         	call	_DelayRead	;wreg free
  3370   00136A  0900               	iorlw	0
  3371   00136C  B4D8               	btfsc	status,2,c
  3372   00136E  EFBB  F009         	goto	u601
  3373   001372  EFBD  F009         	goto	u600
  3374   001376                     u601:
  3375   001376  EFBF  F009         	goto	l1913
  3376   00137A                     u600:
  3377   00137A  EF3D  F009         	goto	l1867
  3378   00137E                     l1913:
  3379                           
  3380                           ;drivers/scr/API_MRF24J40.c: 569:  }while(lectura != (0XA0));
  3381   00137E  0EA0               	movlw	160
  3382   001380  1810               	xorwf	InicializoMRF24@lectura^0,w,c
  3383   001382  A4D8               	btfss	status,2,c
  3384   001384  EFC6  F009         	goto	u611
  3385   001388  EFC8  F009         	goto	u610
  3386   00138C                     u611:
  3387   00138C  EFAA  F009         	goto	l1905
  3388   001390                     u610:
  3389   001390                     
  3390                           ;drivers/scr/API_MRF24J40.c: 570:  SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0X10
      +                          ) | (0X04) | (0X01));
  3391   001390  0EF5               	movlw	245
  3392   001392  6E03               	movwf	SetShortAddr@valor^0,c
  3393   001394  0E32               	movlw	50
  3394   001396  ECEF  F00D         	call	_SetShortAddr
  3395                           
  3396                           ;drivers/scr/API_MRF24J40.c: 571:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  3397   00139A  0EB9               	movlw	185
  3398   00139C  6E03               	movwf	SetShortAddr@valor^0,c
  3399   00139E  0E12               	movlw	18
  3400   0013A0  ECEF  F00D         	call	_SetShortAddr
  3401                           
  3402                           ;drivers/scr/API_MRF24J40.c: 572:  SetLongAddr((0x201), (0X02) | (0X01));
  3403   0013A4  0E02               	movlw	2
  3404   0013A6  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3405   0013A8  0E01               	movlw	1
  3406   0013AA  6E06               	movwf	SetLongAddr@reg_address^0,c
  3407   0013AC  0E03               	movlw	3
  3408   0013AE  6E08               	movwf	SetLongAddr@valor^0,c
  3409   0013B0  ECC7  F00C         	call	_SetLongAddr	;wreg free
  3410                           
  3411                           ;drivers/scr/API_MRF24J40.c: 573:  SetChannel();
  3412   0013B4  EC25  F00D         	call	_SetChannel	;wreg free
  3413                           
  3414                           ;drivers/scr/API_MRF24J40.c: 574:  SetShortAddr((0x00), (0X00));
  3415   0013B8  0E00               	movlw	0
  3416   0013BA  6E03               	movwf	SetShortAddr@valor^0,c
  3417   0013BC  0E00               	movlw	0
  3418   0013BE  ECEF  F00D         	call	_SetShortAddr
  3419                           
  3420                           ;drivers/scr/API_MRF24J40.c: 575:  (void)GetShortAddr((0x31));
  3421   0013C2  0E31               	movlw	49
  3422   0013C4  ECC9  F00D         	call	_GetShortAddr
  3423   0013C8                     
  3424                           ;drivers/scr/API_MRF24J40.c: 576:  return INICIALIZACION_OK;
  3425   0013C8  0E00               	movlw	0
  3426   0013CA                     l105:
  3427   0013CA  0012               	return		;funcret
  3428   0013CC                     __end_of_InicializoMRF24:
  3429                           	callstack 0
  3430                           
  3431 ;; *************** function _SetDeviceMACAddress *****************
  3432 ;; Defined at:
  3433 ;;		line 690 in file "drivers/scr/API_MRF24J40.c"
  3434 ;; Parameters:    Size  Location     Type
  3435 ;;		None
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  i               2    4[COMRAM] int 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3448 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3451 ;;Total ram usage:        2 bytes
  3452 ;; Hardware stack levels used: 1
  3453 ;; Hardware stack levels required when called: 4
  3454 ;; This function calls:
  3455 ;;		_SetShortAddr
  3456 ;; This function is called by:
  3457 ;;		_InicializoMRF24
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text14
  3462   00194C                     __ptext14:
  3463                           	callstack 0
  3464   00194C                     _SetDeviceMACAddress:
  3465                           	callstack 24
  3466   00194C                     
  3467                           ;drivers/scr/API_MRF24J40.c: 692:  long_mac_address = EADR0;
  3468   00194C  0E05               	movlw	5
  3469   00194E  6E5D               	movwf	_long_mac_address^0,c
  3470                           
  3471                           ;drivers/scr/API_MRF24J40.c: 694:  for(int i = 0; i < 8; i++) {
  3472   001950  0E00               	movlw	0
  3473   001952  6E06               	movwf	(SetDeviceMACAddress@i+1)^0,c
  3474   001954  0E00               	movlw	0
  3475   001956  6E05               	movwf	SetDeviceMACAddress@i^0,c
  3476   001958                     l1797:
  3477                           
  3478                           ;drivers/scr/API_MRF24J40.c: 696:   SetShortAddr(long_mac_address++, mrf24_data_config.m
      +                          y_mac[i]);
  3479   001958  5005               	movf	SetDeviceMACAddress@i^0,w,c
  3480   00195A  0F45               	addlw	low (_mrf24_data_config+20)
  3481   00195C  6ED9               	movwf	fsr2l,c
  3482   00195E  6ADA               	clrf	fsr2h,c
  3483   001960  50DF               	movf	indf2,w,c
  3484   001962  6E03               	movwf	SetShortAddr@valor^0,c
  3485   001964  505D               	movf	_long_mac_address^0,w,c
  3486   001966  ECEF  F00D         	call	_SetShortAddr
  3487   00196A  2A5D               	incf	_long_mac_address^0,f,c
  3488   00196C                     
  3489                           ;drivers/scr/API_MRF24J40.c: 697:  }
  3490   00196C  4A05               	infsnz	SetDeviceMACAddress@i^0,f,c
  3491   00196E  2A06               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  3492   001970  BE06               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  3493   001972  EFC4  F00C         	goto	u541
  3494   001976  5006               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  3495   001978  E109               	bnz	u540
  3496   00197A  0E08               	movlw	8
  3497   00197C  5C05               	subwf	SetDeviceMACAddress@i^0,w,c
  3498   00197E  A0D8               	btfss	status,0,c
  3499   001980  EFC4  F00C         	goto	u541
  3500   001984  EFC6  F00C         	goto	u540
  3501   001988                     u541:
  3502   001988  EFAC  F00C         	goto	l1797
  3503   00198C                     u540:
  3504   00198C  0012               	return		;funcret
  3505   00198E                     __end_of_SetDeviceMACAddress:
  3506                           	callstack 0
  3507                           
  3508 ;; *************** function _SetDeviceAddress *****************
  3509 ;; Defined at:
  3510 ;;		line 676 in file "drivers/scr/API_MRF24J40.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;		None
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, status,2, status,0, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3528 ;;Total ram usage:        0 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 4
  3531 ;; This function calls:
  3532 ;;		_SetShortAddr
  3533 ;; This function is called by:
  3534 ;;		_InicializoMRF24
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text15
  3539   001B1A                     __ptext15:
  3540                           	callstack 0
  3541   001B1A                     _SetDeviceAddress:
  3542                           	callstack 24
  3543   001B1A                     
  3544                           ;drivers/scr/API_MRF24J40.c: 678:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> (0X08)));
  3545   001B1A  5050               	movf	(_mrf24_data_config+31)^0,w,c
  3546   001B1C  6E03               	movwf	SetShortAddr@valor^0,c
  3547   001B1E  0E04               	movlw	4
  3548   001B20  ECEF  F00D         	call	_SetShortAddr
  3549                           
  3550                           ;drivers/scr/API_MRF24J40.c: 679:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  3551   001B24  C04F  F003         	movff	_mrf24_data_config+30,SetShortAddr@valor
  3552   001B28  0E03               	movlw	3
  3553   001B2A  ECEF  F00D         	call	_SetShortAddr
  3554                           
  3555                           ;drivers/scr/API_MRF24J40.c: 680:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> (0X08)));
  3556   001B2E  504E               	movf	(_mrf24_data_config+29)^0,w,c
  3557   001B30  6E03               	movwf	SetShortAddr@valor^0,c
  3558   001B32  0E02               	movlw	2
  3559   001B34  ECEF  F00D         	call	_SetShortAddr
  3560                           
  3561                           ;drivers/scr/API_MRF24J40.c: 681:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  3562   001B38  C04D  F003         	movff	_mrf24_data_config+28,SetShortAddr@valor
  3563   001B3C  0E01               	movlw	1
  3564   001B3E  ECEF  F00D         	call	_SetShortAddr
  3565   001B42  0012               	return		;funcret
  3566   001B44                     __end_of_SetDeviceAddress:
  3567                           	callstack 0
  3568                           
  3569 ;; *************** function _SetChannel *****************
  3570 ;; Defined at:
  3571 ;;		line 662 in file "drivers/scr/API_MRF24J40.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;Total ram usage:        1 bytes
  3590 ;; Hardware stack levels used: 1
  3591 ;; Hardware stack levels required when called: 5
  3592 ;; This function calls:
  3593 ;;		_SetLongAddr
  3594 ;;		_SetShortAddr
  3595 ;; This function is called by:
  3596 ;;		_InicializoMRF24
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text16
  3601   001A4A                     __ptext16:
  3602                           	callstack 0
  3603   001A4A                     _SetChannel:
  3604                           	callstack 23
  3605   001A4A                     
  3606                           ;drivers/scr/API_MRF24J40.c: 664:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  3607   001A4A  0E02               	movlw	2
  3608   001A4C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3609   001A4E  0E00               	movlw	0
  3610   001A50  6E06               	movwf	SetLongAddr@reg_address^0,c
  3611   001A52  C034  F008         	movff	_mrf24_data_config+3,SetLongAddr@valor
  3612   001A56  ECC7  F00C         	call	_SetLongAddr	;wreg free
  3613                           
  3614                           ;drivers/scr/API_MRF24J40.c: 665:  SetShortAddr((0x36), (0X04));
  3615   001A5A  0E04               	movlw	4
  3616   001A5C  6E03               	movwf	SetShortAddr@valor^0,c
  3617   001A5E  0E36               	movlw	54
  3618   001A60  ECEF  F00D         	call	_SetShortAddr
  3619                           
  3620                           ;drivers/scr/API_MRF24J40.c: 666:  SetShortAddr((0x36), (0X00));
  3621   001A64  0E00               	movlw	0
  3622   001A66  6E03               	movwf	SetShortAddr@valor^0,c
  3623   001A68  0E36               	movlw	54
  3624   001A6A  ECEF  F00D         	call	_SetShortAddr
  3625   001A6E                     
  3626                           ;drivers/scr/API_MRF24J40.c: 667:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3627   001A6E  0E06               	movlw	6
  3628   001A70  6E0B               	movwf	??_SetChannel^0,c
  3629   001A72  0E30               	movlw	48
  3630   001A74                     u917:
  3631   001A74  2EE8               	decfsz	wreg,f,c
  3632   001A76  D7FE               	bra	u917
  3633   001A78  2E0B               	decfsz	??_SetChannel^0,f,c
  3634   001A7A  D7FC               	bra	u917
  3635   001A7C  F000 F000          	nop2	
  3636   001A80  0012               	return		;funcret
  3637   001A82                     __end_of_SetChannel:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _SetShortAddr *****************
  3641 ;; Defined at:
  3642 ;;		line 585 in file "drivers/scr/API_MRF24J40.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  reg_address     1    wreg     unsigned char 
  3645 ;;  valor           1    2[COMRAM] unsigned char 
  3646 ;; Auto vars:     Size  Location     Type
  3647 ;;  reg_address     1    3[COMRAM] unsigned char 
  3648 ;; Return value:  Size  Location     Type
  3649 ;;                  1    wreg      void 
  3650 ;; Registers used:
  3651 ;;		wreg, status,2, status,0, cstack
  3652 ;; Tracked objects:
  3653 ;;		On entry : 0/0
  3654 ;;		On exit  : 0/0
  3655 ;;		Unchanged: 0/0
  3656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3657 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3660 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;Total ram usage:        2 bytes
  3662 ;; Hardware stack levels used: 1
  3663 ;; Hardware stack levels required when called: 3
  3664 ;; This function calls:
  3665 ;;		_SetCSPin
  3666 ;;		_WriteByteSPIPort
  3667 ;; This function is called by:
  3668 ;;		_InicializoMRF24
  3669 ;;		_SetChannel
  3670 ;;		_SetDeviceAddress
  3671 ;;		_SetDeviceMACAddress
  3672 ;;		_MRF24TransmitirDato
  3673 ;;		_MRF24ReciboPaquete
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           	psect	text17
  3678   001BDE                     __ptext17:
  3679                           	callstack 0
  3680   001BDE                     _SetShortAddr:
  3681                           	callstack 26
  3682                           
  3683                           ;incstack = 0
  3684                           ;SetShortAddr@reg_address stored from wreg
  3685   001BDE  6E04               	movwf	SetShortAddr@reg_address^0,c
  3686   001BE0                     
  3687                           ;drivers/scr/API_MRF24J40.c: 590:  reg_address = (uint8_t) (reg_address << (0X01)) | (0x
      +                          01);
  3688   001BE0  80D8               	bsf	status,0,c
  3689   001BE2  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  3690   001BE4                     
  3691                           ;drivers/scr/API_MRF24J40.c: 591:  SetCSPin(0);
  3692   001BE4  0E00               	movlw	0
  3693   001BE6  EC70  F00E         	call	_SetCSPin
  3694   001BEA                     
  3695                           ;drivers/scr/API_MRF24J40.c: 592:  WriteByteSPIPort(reg_address);
  3696   001BEA  5004               	movf	SetShortAddr@reg_address^0,w,c
  3697   001BEC  EC7E  F00E         	call	_WriteByteSPIPort
  3698   001BF0                     
  3699                           ;drivers/scr/API_MRF24J40.c: 593:  WriteByteSPIPort(valor);
  3700   001BF0  5003               	movf	SetShortAddr@valor^0,w,c
  3701   001BF2  EC7E  F00E         	call	_WriteByteSPIPort
  3702   001BF6                     
  3703                           ;drivers/scr/API_MRF24J40.c: 594:  SetCSPin(1);
  3704   001BF6  0E01               	movlw	1
  3705   001BF8  EC70  F00E         	call	_SetCSPin
  3706   001BFC  0012               	return		;funcret
  3707   001BFE                     __end_of_SetShortAddr:
  3708                           	callstack 0
  3709                           
  3710 ;; *************** function _SetLongAddr *****************
  3711 ;; Defined at:
  3712 ;;		line 624 in file "drivers/scr/API_MRF24J40.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  reg_address     2    5[COMRAM] unsigned short 
  3715 ;;  valor           1    7[COMRAM] unsigned char 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3727 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;Total ram usage:        5 bytes
  3732 ;; Hardware stack levels used: 1
  3733 ;; Hardware stack levels required when called: 4
  3734 ;; This function calls:
  3735 ;;		_SetCSPin
  3736 ;;		_Write2ByteSPIPort
  3737 ;;		_WriteByteSPIPort
  3738 ;; This function is called by:
  3739 ;;		_InicializoMRF24
  3740 ;;		_SetChannel
  3741 ;;		_MRF24TransmitirDato
  3742 ;;		_MRF24ReciboPaquete
  3743 ;; This function uses a non-reentrant model
  3744 ;;
  3745                           
  3746                           	psect	text18
  3747   00198E                     __ptext18:
  3748                           	callstack 0
  3749   00198E                     _SetLongAddr:
  3750                           	callstack 25
  3751   00198E                     
  3752                           ;drivers/scr/API_MRF24J40.c: 629:  reg_address = (reg_address << (0X05)) | (0X8010);
  3753   00198E  C006  F009         	movff	SetLongAddr@reg_address,??_SetLongAddr
  3754   001992  C007  F00A         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  3755   001996  0E05               	movlw	5
  3756   001998                     u515:
  3757   001998  90D8               	bcf	status,0,c
  3758   00199A  3609               	rlcf	??_SetLongAddr^0,f,c
  3759   00199C  360A               	rlcf	(??_SetLongAddr+1)^0,f,c
  3760   00199E  2EE8               	decfsz	wreg,f,c
  3761   0019A0  EFCC  F00C         	goto	u515
  3762   0019A4  0E10               	movlw	16
  3763   0019A6  1009               	iorwf	??_SetLongAddr^0,w,c
  3764   0019A8  6E06               	movwf	SetLongAddr@reg_address^0,c
  3765   0019AA  0E80               	movlw	128
  3766   0019AC  100A               	iorwf	(??_SetLongAddr+1)^0,w,c
  3767   0019AE  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3768   0019B0                     
  3769                           ;drivers/scr/API_MRF24J40.c: 630:  SetCSPin(0);
  3770   0019B0  0E00               	movlw	0
  3771   0019B2  EC70  F00E         	call	_SetCSPin
  3772   0019B6                     
  3773                           ;drivers/scr/API_MRF24J40.c: 631:  Write2ByteSPIPort(reg_address);
  3774   0019B6  C006  F004         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  3775   0019BA  C007  F005         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3776   0019BE  EC62  F00E         	call	_Write2ByteSPIPort	;wreg free
  3777   0019C2                     
  3778                           ;drivers/scr/API_MRF24J40.c: 632:  WriteByteSPIPort(valor);
  3779   0019C2  5008               	movf	SetLongAddr@valor^0,w,c
  3780   0019C4  EC7E  F00E         	call	_WriteByteSPIPort
  3781   0019C8                     
  3782                           ;drivers/scr/API_MRF24J40.c: 633:  SetCSPin(1);
  3783   0019C8  0E01               	movlw	1
  3784   0019CA  EC70  F00E         	call	_SetCSPin
  3785   0019CE  0012               	return		;funcret
  3786   0019D0                     __end_of_SetLongAddr:
  3787                           	callstack 0
  3788                           
  3789 ;; *************** function _GetShortAddr *****************
  3790 ;; Defined at:
  3791 ;;		line 604 in file "drivers/scr/API_MRF24J40.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  reg_address     1    wreg     unsigned char 
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;  reg_address     1    3[COMRAM] unsigned char 
  3796 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      unsigned char 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;Total ram usage:        2 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 3
  3813 ;; This function calls:
  3814 ;;		_ReadByteSPIPort
  3815 ;;		_SetCSPin
  3816 ;;		_WriteByteSPIPort
  3817 ;; This function is called by:
  3818 ;;		_InicializoMRF24
  3819 ;;		_MRF24ReciboPaquete
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text19
  3824   001B92                     __ptext19:
  3825                           	callstack 0
  3826   001B92                     _GetShortAddr:
  3827                           	callstack 26
  3828                           
  3829                           ;incstack = 0
  3830                           ;GetShortAddr@reg_address stored from wreg
  3831   001B92  6E04               	movwf	GetShortAddr@reg_address^0,c
  3832   001B94                     
  3833                           ;drivers/scr/API_MRF24J40.c: 610:  reg_address = (uint8_t) (reg_address << (0X01)) & (0x
      +                          7E);
  3834   001B94  5004               	movf	GetShortAddr@reg_address^0,w,c
  3835   001B96  2404               	addwf	GetShortAddr@reg_address^0,w,c
  3836   001B98  0B7E               	andlw	126
  3837   001B9A  6E04               	movwf	GetShortAddr@reg_address^0,c
  3838   001B9C                     
  3839                           ;drivers/scr/API_MRF24J40.c: 611:  SetCSPin(0);
  3840   001B9C  0E00               	movlw	0
  3841   001B9E  EC70  F00E         	call	_SetCSPin
  3842   001BA2                     
  3843                           ;drivers/scr/API_MRF24J40.c: 612:  WriteByteSPIPort(reg_address);
  3844   001BA2  5004               	movf	GetShortAddr@reg_address^0,w,c
  3845   001BA4  EC7E  F00E         	call	_WriteByteSPIPort
  3846   001BA8                     
  3847                           ;drivers/scr/API_MRF24J40.c: 613:  leido_spi = ReadByteSPIPort();
  3848   001BA8  EC83  F00E         	call	_ReadByteSPIPort	;wreg free
  3849   001BAC  6E03               	movwf	GetShortAddr@leido_spi^0,c
  3850   001BAE                     
  3851                           ;drivers/scr/API_MRF24J40.c: 614:  SetCSPin(1);
  3852   001BAE  0E01               	movlw	1
  3853   001BB0  EC70  F00E         	call	_SetCSPin
  3854   001BB4                     
  3855                           ;drivers/scr/API_MRF24J40.c: 615:  return leido_spi;
  3856   001BB4  5003               	movf	GetShortAddr@leido_spi^0,w,c
  3857   001BB6  0012               	return		;funcret
  3858   001BB8                     __end_of_GetShortAddr:
  3859                           	callstack 0
  3860                           
  3861 ;; *************** function _WriteByteSPIPort *****************
  3862 ;; Defined at:
  3863 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;  dato            1    wreg     unsigned char 
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  dato            1    1[COMRAM] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, status,2, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;Total ram usage:        1 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 2
  3884 ;; This function calls:
  3885 ;;		_SPIWriteByte
  3886 ;; This function is called by:
  3887 ;;		_SetShortAddr
  3888 ;;		_GetShortAddr
  3889 ;;		_SetLongAddr
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text20
  3894   001CFC                     __ptext20:
  3895                           	callstack 0
  3896   001CFC                     _WriteByteSPIPort:
  3897                           	callstack 26
  3898                           
  3899                           ;incstack = 0
  3900                           ;WriteByteSPIPort@dato stored from wreg
  3901   001CFC  6E02               	movwf	WriteByteSPIPort@dato^0,c
  3902   001CFE                     
  3903                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  3904   001CFE  5002               	movf	WriteByteSPIPort@dato^0,w,c
  3905   001D00  EC1D  F00E         	call	_SPIWriteByte
  3906   001D04  0012               	return		;funcret
  3907   001D06                     __end_of_WriteByteSPIPort:
  3908                           	callstack 0
  3909                           
  3910 ;; *************** function _GetLongAddr *****************
  3911 ;; Defined at:
  3912 ;;		line 643 in file "drivers/scr/API_MRF24J40.c"
  3913 ;; Parameters:    Size  Location     Type
  3914 ;;  reg_address     2    5[COMRAM] unsigned short 
  3915 ;; Auto vars:     Size  Location     Type
  3916 ;;  respuesta       1    9[COMRAM] unsigned char 
  3917 ;; Return value:  Size  Location     Type
  3918 ;;                  1    wreg      unsigned char 
  3919 ;; Registers used:
  3920 ;;		wreg, status,2, status,0, cstack
  3921 ;; Tracked objects:
  3922 ;;		On entry : 0/0
  3923 ;;		On exit  : 0/0
  3924 ;;		Unchanged: 0/0
  3925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3930 ;;Total ram usage:        5 bytes
  3931 ;; Hardware stack levels used: 1
  3932 ;; Hardware stack levels required when called: 4
  3933 ;; This function calls:
  3934 ;;		_ReadByteSPIPort
  3935 ;;		_SetCSPin
  3936 ;;		_Write2ByteSPIPort
  3937 ;; This function is called by:
  3938 ;;		_InicializoMRF24
  3939 ;;		_MRF24ReciboPaquete
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text21
  3944   001908                     __ptext21:
  3945                           	callstack 0
  3946   001908                     _GetLongAddr:
  3947                           	callstack 25
  3948   001908                     
  3949                           ;drivers/scr/API_MRF24J40.c: 648:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 649:  
      +                          reg_address = (reg_address << (0X05)) | (0X8000);
  3950   001908  C006  F008         	movff	GetLongAddr@reg_address,??_GetLongAddr
  3951   00190C  C007  F009         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  3952   001910  0E05               	movlw	5
  3953   001912                     u555:
  3954   001912  90D8               	bcf	status,0,c
  3955   001914  3608               	rlcf	??_GetLongAddr^0,f,c
  3956   001916  3609               	rlcf	(??_GetLongAddr+1)^0,f,c
  3957   001918  2EE8               	decfsz	wreg,f,c
  3958   00191A  EF89  F00C         	goto	u555
  3959   00191E  0E00               	movlw	0
  3960   001920  1008               	iorwf	??_GetLongAddr^0,w,c
  3961   001922  6E06               	movwf	GetLongAddr@reg_address^0,c
  3962   001924  0E80               	movlw	128
  3963   001926  1009               	iorwf	(??_GetLongAddr+1)^0,w,c
  3964   001928  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3965   00192A                     
  3966                           ;drivers/scr/API_MRF24J40.c: 650:  SetCSPin(0);
  3967   00192A  0E00               	movlw	0
  3968   00192C  EC70  F00E         	call	_SetCSPin
  3969   001930                     
  3970                           ;drivers/scr/API_MRF24J40.c: 651:  Write2ByteSPIPort(reg_address);
  3971   001930  C006  F004         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  3972   001934  C007  F005         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3973   001938  EC62  F00E         	call	_Write2ByteSPIPort	;wreg free
  3974   00193C                     
  3975                           ;drivers/scr/API_MRF24J40.c: 652:  respuesta = ReadByteSPIPort();
  3976   00193C  EC83  F00E         	call	_ReadByteSPIPort	;wreg free
  3977   001940  6E0A               	movwf	GetLongAddr@respuesta^0,c
  3978   001942                     
  3979                           ;drivers/scr/API_MRF24J40.c: 653:  SetCSPin(1);
  3980   001942  0E01               	movlw	1
  3981   001944  EC70  F00E         	call	_SetCSPin
  3982   001948                     
  3983                           ;drivers/scr/API_MRF24J40.c: 654:  return respuesta;
  3984   001948  500A               	movf	GetLongAddr@respuesta^0,w,c
  3985   00194A  0012               	return		;funcret
  3986   00194C                     __end_of_GetLongAddr:
  3987                           	callstack 0
  3988                           
  3989 ;; *************** function _Write2ByteSPIPort *****************
  3990 ;; Defined at:
  3991 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  dato            2    3[COMRAM] unsigned short 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;		None
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      void 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4005 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4009 ;;Total ram usage:        2 bytes
  4010 ;; Hardware stack levels used: 1
  4011 ;; Hardware stack levels required when called: 3
  4012 ;; This function calls:
  4013 ;;		_SPIWrite2Byte
  4014 ;; This function is called by:
  4015 ;;		_SetLongAddr
  4016 ;;		_GetLongAddr
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text22
  4021   001CC4                     __ptext22:
  4022                           	callstack 0
  4023   001CC4                     _Write2ByteSPIPort:
  4024                           	callstack 25
  4025   001CC4                     
  4026                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  4027   001CC4  C004  F002         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  4028   001CC8  C005  F003         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  4029   001CCC  EC69  F00E         	call	_SPIWrite2Byte	;wreg free
  4030   001CD0  0012               	return		;funcret
  4031   001CD2                     __end_of_Write2ByteSPIPort:
  4032                           	callstack 0
  4033                           
  4034 ;; *************** function _SPIWrite2Byte *****************
  4035 ;; Defined at:
  4036 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  dato            2    1[COMRAM] unsigned short 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;		None
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  1    wreg      void 
  4043 ;; Registers used:
  4044 ;;		wreg, status,2, cstack
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;Total ram usage:        2 bytes
  4055 ;; Hardware stack levels used: 1
  4056 ;; Hardware stack levels required when called: 2
  4057 ;; This function calls:
  4058 ;;		_SPIWriteByte
  4059 ;; This function is called by:
  4060 ;;		_Write2ByteSPIPort
  4061 ;; This function uses a non-reentrant model
  4062 ;;
  4063                           
  4064                           	psect	text23
  4065   001CD2                     __ptext23:
  4066                           	callstack 0
  4067   001CD2                     _SPIWrite2Byte:
  4068                           	callstack 25
  4069   001CD2                     
  4070                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  4071   001CD2  5003               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  4072   001CD4  EC1D  F00E         	call	_SPIWriteByte
  4073                           
  4074                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  4075   001CD8  5002               	movf	SPIWrite2Byte@dato^0,w,c
  4076   001CDA  EC1D  F00E         	call	_SPIWriteByte
  4077   001CDE  0012               	return		;funcret
  4078   001CE0                     __end_of_SPIWrite2Byte:
  4079                           	callstack 0
  4080                           
  4081 ;; *************** function _SPIWriteByte *****************
  4082 ;; Defined at:
  4083 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;  dato            1    wreg     unsigned char 
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;  dato            1    0[COMRAM] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;Total ram usage:        1 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; Hardware stack levels required when called: 1
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_WriteByteSPIPort
  4108 ;;		_SPIWrite2Byte
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112                           	psect	text24
  4113   001C3A                     __ptext24:
  4114                           	callstack 0
  4115   001C3A                     _SPIWriteByte:
  4116                           	callstack 26
  4117                           
  4118                           ;incstack = 0
  4119                           ;SPIWriteByte@dato stored from wreg
  4120   001C3A  6E01               	movwf	SPIWriteByte@dato^0,c
  4121   001C3C                     
  4122                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  4123   001C3C  969E               	bcf	158,3,c	;volatile
  4124   001C3E                     
  4125                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  4126   001C3E  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  4127   001C42                     l192:
  4128   001C42  A69E               	btfss	158,3,c	;volatile
  4129   001C44  EF26  F00E         	goto	u481
  4130   001C48  EF28  F00E         	goto	u480
  4131   001C4C                     u481:
  4132   001C4C  EF21  F00E         	goto	l192
  4133   001C50                     u480:
  4134   001C50  0012               	return		;funcret
  4135   001C52                     __end_of_SPIWriteByte:
  4136                           	callstack 0
  4137                           
  4138 ;; *************** function _SetCSPin *****************
  4139 ;; Defined at:
  4140 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  4141 ;; Parameters:    Size  Location     Type
  4142 ;;  estado          1    wreg     _Bool 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;  estado          1    0[COMRAM] _Bool 
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  1    wreg      void 
  4147 ;; Registers used:
  4148 ;;		wreg
  4149 ;; Tracked objects:
  4150 ;;		On entry : 0/0
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4158 ;;Total ram usage:        1 bytes
  4159 ;; Hardware stack levels used: 1
  4160 ;; Hardware stack levels required when called: 1
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_InicializoPines
  4165 ;;		_SetShortAddr
  4166 ;;		_GetShortAddr
  4167 ;;		_SetLongAddr
  4168 ;;		_GetLongAddr
  4169 ;; This function uses a non-reentrant model
  4170 ;;
  4171                           
  4172                           	psect	text25
  4173   001CE0                     __ptext25:
  4174                           	callstack 0
  4175   001CE0                     _SetCSPin:
  4176                           	callstack 27
  4177                           
  4178                           ;incstack = 0
  4179                           ;SetCSPin@estado stored from wreg
  4180   001CE0  6E01               	movwf	SetCSPin@estado^0,c
  4181   001CE2                     
  4182                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  4183   001CE2  B001               	btfsc	SetCSPin@estado^0,0,c
  4184   001CE4  D002               	bra	u495
  4185   001CE6  9C8B               	bcf	139,6,c	;volatile
  4186   001CE8  D001               	bra	u496
  4187   001CEA                     u495:
  4188   001CEA  8C8B               	bsf	139,6,c	;volatile
  4189   001CEC                     u496:
  4190   001CEC  0012               	return		;funcret
  4191   001CEE                     __end_of_SetCSPin:
  4192                           	callstack 0
  4193                           
  4194 ;; *************** function _ReadByteSPIPort *****************
  4195 ;; Defined at:
  4196 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;		None
  4199 ;; Auto vars:     Size  Location     Type
  4200 ;;		None
  4201 ;; Return value:  Size  Location     Type
  4202 ;;                  1    wreg      unsigned char 
  4203 ;; Registers used:
  4204 ;;		wreg, status,2, cstack
  4205 ;; Tracked objects:
  4206 ;;		On entry : 0/0
  4207 ;;		On exit  : 0/0
  4208 ;;		Unchanged: 0/0
  4209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;Total ram usage:        0 bytes
  4215 ;; Hardware stack levels used: 1
  4216 ;; Hardware stack levels required when called: 2
  4217 ;; This function calls:
  4218 ;;		_SPIRead
  4219 ;; This function is called by:
  4220 ;;		_GetShortAddr
  4221 ;;		_GetLongAddr
  4222 ;; This function uses a non-reentrant model
  4223 ;;
  4224                           
  4225                           	psect	text26
  4226   001D06                     __ptext26:
  4227                           	callstack 0
  4228   001D06                     _ReadByteSPIPort:
  4229                           	callstack 26
  4230   001D06                     
  4231                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  4232   001D06  EC35  F00E         	call	_SPIRead	;wreg free
  4233   001D0A  0012               	return		;funcret
  4234   001D0C                     __end_of_ReadByteSPIPort:
  4235                           	callstack 0
  4236                           
  4237 ;; *************** function _SPIRead *****************
  4238 ;; Defined at:
  4239 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      unsigned char 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;Total ram usage:        0 bytes
  4258 ;; Hardware stack levels used: 1
  4259 ;; Hardware stack levels required when called: 1
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_ReadByteSPIPort
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text27
  4268   001C6A                     __ptext27:
  4269                           	callstack 0
  4270   001C6A                     _SPIRead:
  4271                           	callstack 26
  4272   001C6A                     
  4273                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  4274   001C6A  9EC6               	bcf	198,7,c	;volatile
  4275                           
  4276                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  4277   001C6C  6AC9               	clrf	201,c	;volatile
  4278   001C6E                     l201:
  4279   001C6E  A0C7               	btfss	199,0,c	;volatile
  4280   001C70  EF3C  F00E         	goto	u501
  4281   001C74  EF3E  F00E         	goto	u500
  4282   001C78                     u501:
  4283   001C78  EF37  F00E         	goto	l201
  4284   001C7C                     u500:
  4285   001C7C                     
  4286                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  4287   001C7C  50C9               	movf	201,w,c	;volatile
  4288   001C7E  0012               	return		;funcret
  4289   001C80                     __end_of_SPIRead:
  4290                           	callstack 0
  4291                           
  4292 ;; *************** function _DelayReset *****************
  4293 ;; Defined at:
  4294 ;;		line 68 in file "drivers/scr/API_delay.c"
  4295 ;; Parameters:    Size  Location     Type
  4296 ;;  delay           1    0[COMRAM] PTR struct .
  4297 ;;		 -> InicializoMRF24@delay_time_out(9), 
  4298 ;; Auto vars:     Size  Location     Type
  4299 ;;		None
  4300 ;; Return value:  Size  Location     Type
  4301 ;;                  1    wreg      void 
  4302 ;; Registers used:
  4303 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4304 ;; Tracked objects:
  4305 ;;		On entry : 0/0
  4306 ;;		On exit  : 0/0
  4307 ;;		Unchanged: 0/0
  4308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4309 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4313 ;;Total ram usage:        1 bytes
  4314 ;; Hardware stack levels used: 1
  4315 ;; Hardware stack levels required when called: 1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_InicializoMRF24
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text28
  4324   001BB8                     __ptext28:
  4325                           	callstack 0
  4326   001BB8                     _DelayReset:
  4327                           	callstack 27
  4328   001BB8                     
  4329                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  4330   001BB8  5001               	movf	DelayReset@delay^0,w,c
  4331   001BBA  6ED9               	movwf	fsr2l,c
  4332   001BBC  6ADA               	clrf	fsr2h,c
  4333   001BBE  C059  FFDE         	movff	_timeStamp,postinc2
  4334   001BC2  C05A  FFDE         	movff	_timeStamp+1,postinc2
  4335   001BC6  C05B  FFDE         	movff	_timeStamp+2,postinc2
  4336   001BCA  C05C  FFDE         	movff	_timeStamp+3,postinc2
  4337   001BCE                     
  4338                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  4339   001BCE  5001               	movf	DelayReset@delay^0,w,c
  4340   001BD0  6ED9               	movwf	fsr2l,c
  4341   001BD2  6ADA               	clrf	fsr2h,c
  4342   001BD4  0E08               	movlw	8
  4343   001BD6  26D9               	addwf	fsr2l,f,c
  4344   001BD8  0E01               	movlw	1
  4345   001BDA  6EDF               	movwf	indf2,c
  4346   001BDC  0012               	return		;funcret
  4347   001BDE                     __end_of_DelayReset:
  4348                           	callstack 0
  4349                           
  4350 ;; *************** function _MRF24IsNewMsg *****************
  4351 ;; Defined at:
  4352 ;;		line 793 in file "drivers/scr/API_MRF24J40.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;		None
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;		None
  4357 ;; Return value:  Size  Location     Type
  4358 ;;                  1    wreg      enum E3263
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4370 ;;Total ram usage:        0 bytes
  4371 ;; Hardware stack levels used: 1
  4372 ;; Hardware stack levels required when called: 2
  4373 ;; This function calls:
  4374 ;;		_IsMRF24Interrup
  4375 ;; This function is called by:
  4376 ;;		_main
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text29
  4381   001AB6                     __ptext29:
  4382                           	callstack 0
  4383   001AB6                     _MRF24IsNewMsg:
  4384                           	callstack 28
  4385   001AB6                     
  4386                           ;drivers/scr/API_MRF24J40.c: 795:  if(estadoActual != INICIALIZACION_OK)
  4387   001AB6  505E               	movf	_estadoActual^0,w,c
  4388   001AB8  B4D8               	btfsc	status,2,c
  4389   001ABA  EF61  F00D         	goto	u251
  4390   001ABE  EF63  F00D         	goto	u250
  4391   001AC2                     u251:
  4392   001AC2  EF66  F00D         	goto	l1463
  4393   001AC6                     u250:
  4394   001AC6                     
  4395                           ;drivers/scr/API_MRF24J40.c: 796:   return ERROR_INESPERADO;
  4396   001AC6  0E08               	movlw	8
  4397   001AC8  EF74  F00D         	goto	l160
  4398   001ACC                     l1463:
  4399                           
  4400                           ;drivers/scr/API_MRF24J40.c: 798:  if(!IsMRF24Interrup())
  4401   001ACC  EC4A  F00E         	call	_IsMRF24Interrup	;wreg free
  4402   001AD0  0900               	iorlw	0
  4403   001AD2  A4D8               	btfss	status,2,c
  4404   001AD4  EF6E  F00D         	goto	u261
  4405   001AD8  EF70  F00D         	goto	u260
  4406   001ADC                     u261:
  4407   001ADC  EF73  F00D         	goto	l1469
  4408   001AE0                     u260:
  4409   001AE0                     
  4410                           ;drivers/scr/API_MRF24J40.c: 799:   return MSG_PRESENTE;
  4411   001AE0  0E02               	movlw	2
  4412   001AE2  EF74  F00D         	goto	l160
  4413   001AE6                     l1469:
  4414                           
  4415                           ;drivers/scr/API_MRF24J40.c: 800:  return MSG_NO_PRESENTE;
  4416   001AE6  0E03               	movlw	3
  4417   001AE8                     l160:
  4418   001AE8  0012               	return		;funcret
  4419   001AEA                     __end_of_MRF24IsNewMsg:
  4420                           	callstack 0
  4421                           
  4422 ;; *************** function _IsMRF24Interrup *****************
  4423 ;; Defined at:
  4424 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  4425 ;; Parameters:    Size  Location     Type
  4426 ;;		None
  4427 ;; Auto vars:     Size  Location     Type
  4428 ;;		None
  4429 ;; Return value:  Size  Location     Type
  4430 ;;                  1    wreg      _Bool 
  4431 ;; Registers used:
  4432 ;;		wreg
  4433 ;; Tracked objects:
  4434 ;;		On entry : 0/0
  4435 ;;		On exit  : 0/0
  4436 ;;		Unchanged: 0/0
  4437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4442 ;;Total ram usage:        0 bytes
  4443 ;; Hardware stack levels used: 1
  4444 ;; Hardware stack levels required when called: 1
  4445 ;; This function calls:
  4446 ;;		Nothing
  4447 ;; This function is called by:
  4448 ;;		_MRF24IsNewMsg
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text30
  4453   001C94                     __ptext30:
  4454                           	callstack 0
  4455   001C94                     _IsMRF24Interrup:
  4456                           	callstack 28
  4457   001C94                     
  4458                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  4459   001C94  B081               	btfsc	129,0,c	;volatile
  4460   001C96  EF4F  F00E         	goto	u111
  4461   001C9A  EF52  F00E         	goto	u110
  4462   001C9E                     u111:
  4463   001C9E  0E01               	movlw	1
  4464   001CA0  EF53  F00E         	goto	u116
  4465   001CA4                     u110:
  4466   001CA4  0E00               	movlw	0
  4467   001CA6                     u116:
  4468   001CA6  0012               	return		;funcret
  4469   001CA8                     __end_of_IsMRF24Interrup:
  4470                           	callstack 0
  4471                           
  4472 ;; *************** function _MRF24GetMensajeEntrada *****************
  4473 ;; Defined at:
  4474 ;;		line 832 in file "drivers/scr/API_MRF24J40.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    0[COMRAM] PTR unsigned char 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2, status,0
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;Total ram usage:        2 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_main
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text31
  4503   001D0C                     __ptext31:
  4504                           	callstack 0
  4505   001D0C                     _MRF24GetMensajeEntrada:
  4506                           	callstack 29
  4507   001D0C                     
  4508                           ;drivers/scr/API_MRF24J40.c: 834:  return mrf24_data_in.buffer_entrada;
  4509   001D0C  0E60               	movlw	_mrf24_data_in& (0+255)
  4510   001D0E  0F06               	addlw	6
  4511   001D10  0012               	return		;funcret
  4512   001D12                     __end_of_MRF24GetMensajeEntrada:
  4513                           	callstack 0
  4514                           
  4515 ;; *************** function _DebounceFSMUpdate *****************
  4516 ;; Defined at:
  4517 ;;		line 34 in file "drivers/scr/API_debounce.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;  antirrebote_    1   14[COMRAM] PTR struct .
  4520 ;;		 -> main@boton1(11), 
  4521 ;;  estado_pin      1   15[COMRAM] _Bool 
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      enum E3292
  4526 ;; Registers used:
  4527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4535 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;Total ram usage:        4 bytes
  4538 ;; Hardware stack levels used: 1
  4539 ;; Hardware stack levels required when called: 3
  4540 ;; This function calls:
  4541 ;;		_DebounceFSMInit
  4542 ;;		_DelayRead
  4543 ;; This function is called by:
  4544 ;;		_main
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text32
  4549   0013CC                     __ptext32:
  4550                           	callstack 0
  4551   0013CC                     _DebounceFSMUpdate:
  4552                           	callstack 27
  4553   0013CC                     
  4554                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  4555   0013CC  EF60  F00A         	goto	l2105
  4556   0013D0                     l2053:
  4557                           
  4558                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  4559   0013D0  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4560   0013D2  A4D8               	btfss	status,2,c
  4561   0013D4  EFEE  F009         	goto	u711
  4562   0013D8  EFF0  F009         	goto	u710
  4563   0013DC                     u711:
  4564   0013DC  EF82  F00A         	goto	l2107
  4565   0013E0                     u710:
  4566   0013E0                     
  4567                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  4568   0013E0  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4569   0013E2  6ED9               	movwf	fsr2l,c
  4570   0013E4  6ADA               	clrf	fsr2h,c
  4571   0013E6  0E01               	movlw	1
  4572   0013E8  26D9               	addwf	fsr2l,f,c
  4573   0013EA  0E01               	movlw	1
  4574   0013EC  6EDF               	movwf	indf2,c
  4575   0013EE  EF82  F00A         	goto	l2107
  4576   0013F2                     l2057:
  4577                           
  4578                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4579   0013F2  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4580   0013F4  0F02               	addlw	2
  4581   0013F6  6E02               	movwf	DelayRead@delay^0,c
  4582   0013F8  EC77  F00B         	call	_DelayRead	;wreg free
  4583   0013FC  0900               	iorlw	0
  4584   0013FE  B4D8               	btfsc	status,2,c
  4585   001400  EF04  F00A         	goto	u721
  4586   001404  EF06  F00A         	goto	u720
  4587   001408                     u721:
  4588   001408  EF82  F00A         	goto	l2107
  4589   00140C                     u720:
  4590   00140C                     
  4591                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  4592   00140C  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4593   00140E  A4D8               	btfss	status,2,c
  4594   001410  EF0C  F00A         	goto	u731
  4595   001414  EF0E  F00A         	goto	u730
  4596   001418                     u731:
  4597   001418  EF18  F00A         	goto	l2069
  4598   00141C                     u730:
  4599   00141C                     
  4600                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4601   00141C  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4602   00141E  6ED9               	movwf	fsr2l,c
  4603   001420  6ADA               	clrf	fsr2h,c
  4604   001422  0E01               	movlw	1
  4605   001424  26D9               	addwf	fsr2l,f,c
  4606   001426  0E02               	movlw	2
  4607   001428  6EDF               	movwf	indf2,c
  4608   00142A                     
  4609                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  4610   00142A  0E01               	movlw	1
  4611   00142C  EF83  F00A         	goto	l389
  4612   001430                     l2069:
  4613                           
  4614                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4615   001430  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4616   001432  6ED9               	movwf	fsr2l,c
  4617   001434  6ADA               	clrf	fsr2h,c
  4618   001436  0E01               	movlw	1
  4619   001438  26D9               	addwf	fsr2l,f,c
  4620   00143A  6ADF               	clrf	indf2,c
  4621   00143C                     l2071:
  4622                           
  4623                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  4624   00143C  0E04               	movlw	4
  4625   00143E  EF83  F00A         	goto	l389
  4626   001442                     l2075:
  4627                           
  4628                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4629   001442  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4630   001444  0F02               	addlw	2
  4631   001446  6E02               	movwf	DelayRead@delay^0,c
  4632   001448  EC77  F00B         	call	_DelayRead	;wreg free
  4633   00144C  0900               	iorlw	0
  4634   00144E  B4D8               	btfsc	status,2,c
  4635   001450  EF2C  F00A         	goto	u741
  4636   001454  EF2E  F00A         	goto	u740
  4637   001458                     u741:
  4638   001458  EF82  F00A         	goto	l2107
  4639   00145C                     u740:
  4640   00145C                     
  4641                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  4642   00145C  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4643   00145E  B4D8               	btfsc	status,2,c
  4644   001460  EF34  F00A         	goto	u751
  4645   001464  EF36  F00A         	goto	u750
  4646   001468                     u751:
  4647   001468  EF3F  F00A         	goto	l2087
  4648   00146C                     u750:
  4649   00146C                     
  4650                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4651   00146C  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4652   00146E  6ED9               	movwf	fsr2l,c
  4653   001470  6ADA               	clrf	fsr2h,c
  4654   001472  0E01               	movlw	1
  4655   001474  26D9               	addwf	fsr2l,f,c
  4656   001476  6ADF               	clrf	indf2,c
  4657   001478                     
  4658                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  4659   001478  0E02               	movlw	2
  4660   00147A  EF83  F00A         	goto	l389
  4661   00147E                     l2087:
  4662                           
  4663                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4664   00147E  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4665   001480  6ED9               	movwf	fsr2l,c
  4666   001482  6ADA               	clrf	fsr2h,c
  4667   001484  0E01               	movlw	1
  4668   001486  26D9               	addwf	fsr2l,f,c
  4669   001488  0E02               	movlw	2
  4670   00148A  6EDF               	movwf	indf2,c
  4671   00148C  EF1E  F00A         	goto	l2071
  4672   001490                     l2093:
  4673                           
  4674                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  4675   001490  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4676   001492  B4D8               	btfsc	status,2,c
  4677   001494  EF4E  F00A         	goto	u761
  4678   001498  EF50  F00A         	goto	u760
  4679   00149C                     u761:
  4680   00149C  EF82  F00A         	goto	l2107
  4681   0014A0                     u760:
  4682   0014A0                     
  4683                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  4684   0014A0  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4685   0014A2  6ED9               	movwf	fsr2l,c
  4686   0014A4  6ADA               	clrf	fsr2h,c
  4687   0014A6  0E01               	movlw	1
  4688   0014A8  26D9               	addwf	fsr2l,f,c
  4689   0014AA  0E03               	movlw	3
  4690   0014AC  6EDF               	movwf	indf2,c
  4691   0014AE  EF82  F00A         	goto	l2107
  4692   0014B2                     l2097:
  4693                           
  4694                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  4695   0014B2  C00F  F006         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  4696   0014B6  EC75  F00D         	call	_DebounceFSMInit	;wreg free
  4697   0014BA                     
  4698                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  4699   0014BA  0E00               	movlw	0
  4700   0014BC  EF83  F00A         	goto	l389
  4701   0014C0                     l2105:
  4702   0014C0  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4703   0014C2  6ED9               	movwf	fsr2l,c
  4704   0014C4  6ADA               	clrf	fsr2h,c
  4705   0014C6  0E01               	movlw	1
  4706   0014C8  26D9               	addwf	fsr2l,f,c
  4707   0014CA  50DF               	movf	indf2,w,c
  4708   0014CC  6E11               	movwf	??_DebounceFSMUpdate^0,c
  4709   0014CE  6A12               	clrf	(??_DebounceFSMUpdate+1)^0,c
  4710                           
  4711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4712                           ; Switch size 1, requested type "simple"
  4713                           ; Number of cases is 1, Range of values is 0 to 0
  4714                           ; switch strategies available:
  4715                           ; Name         Instructions Cycles
  4716                           ; simple_byte            4     3 (average)
  4717                           ;	Chosen strategy is simple_byte
  4718   0014D0  5012               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  4719   0014D2  0A00               	xorlw	0	; case 0
  4720   0014D4  B4D8               	btfsc	status,2,c
  4721   0014D6  EF6F  F00A         	goto	l2233
  4722   0014DA  EF59  F00A         	goto	l2097
  4723   0014DE                     l2233:
  4724                           
  4725                           ; Switch size 1, requested type "simple"
  4726                           ; Number of cases is 4, Range of values is 0 to 3
  4727                           ; switch strategies available:
  4728                           ; Name         Instructions Cycles
  4729                           ; simple_byte           13     7 (average)
  4730                           ;	Chosen strategy is simple_byte
  4731   0014DE  5011               	movf	??_DebounceFSMUpdate^0,w,c
  4732   0014E0  0A00               	xorlw	0	; case 0
  4733   0014E2  B4D8               	btfsc	status,2,c
  4734   0014E4  EFE8  F009         	goto	l2053
  4735   0014E8  0A01               	xorlw	1	; case 1
  4736   0014EA  B4D8               	btfsc	status,2,c
  4737   0014EC  EFF9  F009         	goto	l2057
  4738   0014F0  0A03               	xorlw	3	; case 2
  4739   0014F2  B4D8               	btfsc	status,2,c
  4740   0014F4  EF48  F00A         	goto	l2093
  4741   0014F8  0A01               	xorlw	1	; case 3
  4742   0014FA  B4D8               	btfsc	status,2,c
  4743   0014FC  EF21  F00A         	goto	l2075
  4744   001500  EF59  F00A         	goto	l2097
  4745   001504                     l2107:
  4746                           
  4747                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  4748   001504  0E03               	movlw	3
  4749   001506                     l389:
  4750   001506  0012               	return		;funcret
  4751   001508                     __end_of_DebounceFSMUpdate:
  4752                           	callstack 0
  4753                           
  4754 ;; *************** function _DelayRead *****************
  4755 ;; Defined at:
  4756 ;;		line 34 in file "drivers/scr/API_delay.c"
  4757 ;; Parameters:    Size  Location     Type
  4758 ;;  delay           1    1[COMRAM] PTR struct .
  4759 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4760 ;; Auto vars:     Size  Location     Type
  4761 ;;		None
  4762 ;; Return value:  Size  Location     Type
  4763 ;;                  1    wreg      _Bool 
  4764 ;; Registers used:
  4765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4766 ;; Tracked objects:
  4767 ;;		On entry : 0/0
  4768 ;;		On exit  : 0/0
  4769 ;;		Unchanged: 0/0
  4770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4771 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4774 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4775 ;;Total ram usage:       13 bytes
  4776 ;; Hardware stack levels used: 1
  4777 ;; Hardware stack levels required when called: 2
  4778 ;; This function calls:
  4779 ;;		_DelayIsRunning
  4780 ;; This function is called by:
  4781 ;;		_InicializoMRF24
  4782 ;;		_main
  4783 ;;		_DebounceFSMUpdate
  4784 ;; This function uses a non-reentrant model
  4785 ;;
  4786                           
  4787                           	psect	text33
  4788   0016EE                     __ptext33:
  4789                           	callstack 0
  4790   0016EE                     _DelayRead:
  4791                           	callstack 26
  4792   0016EE                     
  4793                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  4794   0016EE  C002  F001         	movff	DelayRead@delay,DelayIsRunning@delay
  4795   0016F2  EC77  F00E         	call	_DelayIsRunning	;wreg free
  4796   0016F6  0900               	iorlw	0
  4797   0016F8  A4D8               	btfss	status,2,c
  4798   0016FA  EF81  F00B         	goto	u521
  4799   0016FE  EF83  F00B         	goto	u520
  4800   001702                     u521:
  4801   001702  EF97  F00B         	goto	l1775
  4802   001706                     u520:
  4803   001706                     
  4804                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  4805   001706  5002               	movf	DelayRead@delay^0,w,c
  4806   001708  6ED9               	movwf	fsr2l,c
  4807   00170A  6ADA               	clrf	fsr2h,c
  4808   00170C  C059  FFDE         	movff	_timeStamp,postinc2
  4809   001710  C05A  FFDE         	movff	_timeStamp+1,postinc2
  4810   001714  C05B  FFDE         	movff	_timeStamp+2,postinc2
  4811   001718  C05C  FFDE         	movff	_timeStamp+3,postinc2
  4812   00171C                     
  4813                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  4814   00171C  5002               	movf	DelayRead@delay^0,w,c
  4815   00171E  6ED9               	movwf	fsr2l,c
  4816   001720  6ADA               	clrf	fsr2h,c
  4817   001722  0E08               	movlw	8
  4818   001724  26D9               	addwf	fsr2l,f,c
  4819   001726  0E01               	movlw	1
  4820   001728  6EDF               	movwf	indf2,c
  4821                           
  4822                           ;drivers/scr/API_delay.c: 40:  } else {
  4823   00172A  EFCB  F00B         	goto	l1783
  4824   00172E                     l1775:
  4825                           
  4826                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  4827   00172E  5002               	movf	DelayRead@delay^0,w,c
  4828   001730  6ED9               	movwf	fsr2l,c
  4829   001732  6ADA               	clrf	fsr2h,c
  4830   001734  0E04               	movlw	4
  4831   001736  26D9               	addwf	fsr2l,f,c
  4832   001738  5002               	movf	DelayRead@delay^0,w,c
  4833   00173A  6EE1               	movwf	fsr1l,c
  4834   00173C  6AE2               	clrf	fsr1h,c
  4835   00173E  CFE6 F007          	movff	postinc1,??_DelayRead+4
  4836   001742  CFE6 F008          	movff	postinc1,??_DelayRead+5
  4837   001746  CFE6 F009          	movff	postinc1,??_DelayRead+6
  4838   00174A  CFE6 F00A          	movff	postinc1,??_DelayRead+7
  4839   00174E  5007               	movf	(??_DelayRead+4)^0,w,c
  4840   001750  5C59               	subwf	_timeStamp^0,w,c
  4841   001752  6E0B               	movwf	(??_DelayRead+8)^0,c
  4842   001754  5008               	movf	(??_DelayRead+5)^0,w,c
  4843   001756  585A               	subwfb	(_timeStamp+1)^0,w,c
  4844   001758  6E0C               	movwf	(??_DelayRead+9)^0,c
  4845   00175A  5009               	movf	(??_DelayRead+6)^0,w,c
  4846   00175C  585B               	subwfb	(_timeStamp+2)^0,w,c
  4847   00175E  6E0D               	movwf	(??_DelayRead+10)^0,c
  4848   001760  500A               	movf	(??_DelayRead+7)^0,w,c
  4849   001762  585C               	subwfb	(_timeStamp+3)^0,w,c
  4850   001764  6E0E               	movwf	(??_DelayRead+11)^0,c
  4851   001766  50DE               	movf	postinc2,w,c
  4852   001768  5C0B               	subwf	(??_DelayRead+8)^0,w,c
  4853   00176A  50DE               	movf	postinc2,w,c
  4854   00176C  580C               	subwfb	(??_DelayRead+9)^0,w,c
  4855   00176E  50DE               	movf	postinc2,w,c
  4856   001770  580D               	subwfb	(??_DelayRead+10)^0,w,c
  4857   001772  50DE               	movf	postinc2,w,c
  4858   001774  580E               	subwfb	(??_DelayRead+11)^0,w,c
  4859   001776  A0D8               	btfss	status,0,c
  4860   001778  EFC0  F00B         	goto	u531
  4861   00177C  EFC2  F00B         	goto	u530
  4862   001780                     u531:
  4863   001780  EFCB  F00B         	goto	l1783
  4864   001784                     u530:
  4865   001784                     
  4866                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  4867   001784  5002               	movf	DelayRead@delay^0,w,c
  4868   001786  6ED9               	movwf	fsr2l,c
  4869   001788  6ADA               	clrf	fsr2h,c
  4870   00178A  0E08               	movlw	8
  4871   00178C  26D9               	addwf	fsr2l,f,c
  4872   00178E  6ADF               	clrf	indf2,c
  4873   001790                     
  4874                           ;drivers/scr/API_delay.c: 45:    return 1;
  4875   001790  0E01               	movlw	1
  4876   001792  EFCC  F00B         	goto	l363
  4877   001796                     l1783:
  4878                           
  4879                           ;drivers/scr/API_delay.c: 48:  return 0;
  4880   001796  0E00               	movlw	0
  4881   001798                     l363:
  4882   001798  0012               	return		;funcret
  4883   00179A                     __end_of_DelayRead:
  4884                           	callstack 0
  4885                           
  4886 ;; *************** function _DelayIsRunning *****************
  4887 ;; Defined at:
  4888 ;;		line 83 in file "drivers/scr/API_delay.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  delay           1    0[COMRAM] PTR struct .
  4891 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;		None
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      _Bool 
  4896 ;; Registers used:
  4897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4903 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;Total ram usage:        1 bytes
  4908 ;; Hardware stack levels used: 1
  4909 ;; Hardware stack levels required when called: 1
  4910 ;; This function calls:
  4911 ;;		Nothing
  4912 ;; This function is called by:
  4913 ;;		_DelayRead
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           	psect	text34
  4918   001CEE                     __ptext34:
  4919                           	callstack 0
  4920   001CEE                     _DelayIsRunning:
  4921                           	callstack 26
  4922   001CEE                     
  4923                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  4924   001CEE  5001               	movf	DelayIsRunning@delay^0,w,c
  4925   001CF0  6ED9               	movwf	fsr2l,c
  4926   001CF2  6ADA               	clrf	fsr2h,c
  4927   001CF4  0E08               	movlw	8
  4928   001CF6  26D9               	addwf	fsr2l,f,c
  4929   001CF8  50DF               	movf	indf2,w,c
  4930   001CFA  0012               	return		;funcret
  4931   001CFC                     __end_of_DelayIsRunning:
  4932                           	callstack 0
  4933                           
  4934 ;; *************** function _DebounceFSMInit *****************
  4935 ;; Defined at:
  4936 ;;		line 19 in file "drivers/scr/API_debounce.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;  antirrebote_    1    5[COMRAM] PTR struct .
  4939 ;;		 -> main@boton1(11), 
  4940 ;; Auto vars:     Size  Location     Type
  4941 ;;		None
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      void 
  4944 ;; Registers used:
  4945 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/0
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4951 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;Total ram usage:        1 bytes
  4956 ;; Hardware stack levels used: 1
  4957 ;; Hardware stack levels required when called: 2
  4958 ;; This function calls:
  4959 ;;		_DelayInit
  4960 ;; This function is called by:
  4961 ;;		_main
  4962 ;;		_DebounceFSMUpdate
  4963 ;; This function uses a non-reentrant model
  4964 ;;
  4965                           
  4966                           	psect	text35
  4967   001AEA                     __ptext35:
  4968                           	callstack 0
  4969   001AEA                     _DebounceFSMInit:
  4970                           	callstack 27
  4971   001AEA                     
  4972                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  4973   001AEA  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4974   001AEC  6ED9               	movwf	fsr2l,c
  4975   001AEE  6ADA               	clrf	fsr2h,c
  4976   001AF0  0E01               	movlw	1
  4977   001AF2  26D9               	addwf	fsr2l,f,c
  4978   001AF4  6ADF               	clrf	indf2,c
  4979   001AF6                     
  4980                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  4981   001AF6  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4982   001AF8  0F02               	addlw	2
  4983   001AFA  6E01               	movwf	DelayInit@delay^0,c
  4984   001AFC  0E28               	movlw	40
  4985   001AFE  6E02               	movwf	DelayInit@duration^0,c
  4986   001B00  0E00               	movlw	0
  4987   001B02  6E03               	movwf	(DelayInit@duration+1)^0,c
  4988   001B04  0E00               	movlw	0
  4989   001B06  6E04               	movwf	(DelayInit@duration+2)^0,c
  4990   001B08  0E00               	movlw	0
  4991   001B0A  6E05               	movwf	(DelayInit@duration+3)^0,c
  4992   001B0C  ECA2  F00D         	call	_DelayInit	;wreg free
  4993   001B10                     
  4994                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  4995   001B10  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4996   001B12  6ED9               	movwf	fsr2l,c
  4997   001B14  6ADA               	clrf	fsr2h,c
  4998   001B16  6ADF               	clrf	indf2,c
  4999   001B18  0012               	return		;funcret
  5000   001B1A                     __end_of_DebounceFSMInit:
  5001                           	callstack 0
  5002                           
  5003 ;; *************** function _DelayInit *****************
  5004 ;; Defined at:
  5005 ;;		line 22 in file "drivers/scr/API_delay.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;  delay           1    0[COMRAM] PTR struct .
  5008 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5009 ;;  duration        4    1[COMRAM] unsigned long 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;		None
  5012 ;; Return value:  Size  Location     Type
  5013 ;;                  1    wreg      void 
  5014 ;; Registers used:
  5015 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5016 ;; Tracked objects:
  5017 ;;		On entry : 0/0
  5018 ;;		On exit  : 0/0
  5019 ;;		Unchanged: 0/0
  5020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5021 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5025 ;;Total ram usage:        5 bytes
  5026 ;; Hardware stack levels used: 1
  5027 ;; Hardware stack levels required when called: 1
  5028 ;; This function calls:
  5029 ;;		Nothing
  5030 ;; This function is called by:
  5031 ;;		_InicializoMRF24
  5032 ;;		_main
  5033 ;;		_DebounceFSMInit
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           	psect	text36
  5038   001B44                     __ptext36:
  5039                           	callstack 0
  5040   001B44                     _DelayInit:
  5041                           	callstack 27
  5042   001B44                     
  5043                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  5044   001B44  5001               	movf	DelayInit@delay^0,w,c
  5045   001B46  6ED9               	movwf	fsr2l,c
  5046   001B48  6ADA               	clrf	fsr2h,c
  5047   001B4A  0E04               	movlw	4
  5048   001B4C  26D9               	addwf	fsr2l,f,c
  5049   001B4E  C002  FFDE         	movff	DelayInit@duration,postinc2
  5050   001B52  C003  FFDE         	movff	DelayInit@duration+1,postinc2
  5051   001B56  C004  FFDE         	movff	DelayInit@duration+2,postinc2
  5052   001B5A  C005  FFDE         	movff	DelayInit@duration+3,postinc2
  5053                           
  5054                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  5055   001B5E  5001               	movf	DelayInit@delay^0,w,c
  5056   001B60  6ED9               	movwf	fsr2l,c
  5057   001B62  6ADA               	clrf	fsr2h,c
  5058   001B64  0E08               	movlw	8
  5059   001B66  26D9               	addwf	fsr2l,f,c
  5060   001B68  6ADF               	clrf	indf2,c
  5061   001B6A  0012               	return		;funcret
  5062   001B6C                     __end_of_DelayInit:
  5063                           	callstack 0
  5064                           
  5065 ;; *************** function _BoardInit *****************
  5066 ;; Defined at:
  5067 ;;		line 21 in file "hardware_config.c"
  5068 ;; Parameters:    Size  Location     Type
  5069 ;;		None
  5070 ;; Auto vars:     Size  Location     Type
  5071 ;;		None
  5072 ;; Return value:  Size  Location     Type
  5073 ;;                  1    wreg      void 
  5074 ;; Registers used:
  5075 ;;		wreg, status,2, cstack
  5076 ;; Tracked objects:
  5077 ;;		On entry : 0/0
  5078 ;;		On exit  : 0/0
  5079 ;;		Unchanged: 0/0
  5080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;Total ram usage:        0 bytes
  5086 ;; Hardware stack levels used: 1
  5087 ;; Hardware stack levels required when called: 2
  5088 ;; This function calls:
  5089 ;;		_SPIInit
  5090 ;; This function is called by:
  5091 ;;		_main
  5092 ;; This function uses a non-reentrant model
  5093 ;;
  5094                           
  5095                           	psect	text37
  5096   0018A6                     __ptext37:
  5097                           	callstack 0
  5098   0018A6                     _BoardInit:
  5099                           	callstack 28
  5100   0018A6                     
  5101                           ;hardware_config.c: 23:     PORTA = 0;
  5102   0018A6  6A80               	clrf	128,c	;volatile
  5103                           
  5104                           ;hardware_config.c: 24:     PORTB = 0;
  5105   0018A8  6A81               	clrf	129,c	;volatile
  5106                           
  5107                           ;hardware_config.c: 25:     PORTC = 0;
  5108   0018AA  6A82               	clrf	130,c	;volatile
  5109                           
  5110                           ;hardware_config.c: 26:     PORTD = 0;
  5111   0018AC  6A83               	clrf	131,c	;volatile
  5112                           
  5113                           ;hardware_config.c: 27:     PORTE = 0;
  5114   0018AE  6A84               	clrf	132,c	;volatile
  5115                           
  5116                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  5117   0018B0  8C93               	bsf	147,6,c	;volatile
  5118                           
  5119                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  5120   0018B2  8E93               	bsf	147,7,c	;volatile
  5121                           
  5122                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  5123   0018B4  9496               	bcf	150,2,c	;volatile
  5124                           
  5125                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  5126   0018B6  9096               	bcf	150,0,c	;volatile
  5127                           
  5128                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  5129   0018B8  9296               	bcf	150,1,c	;volatile
  5130                           
  5131                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  5132   0018BA  8494               	bsf	148,2,c	;volatile
  5133                           
  5134                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  5135   0018BC  848D               	bsf	141,2,c	;volatile
  5136                           
  5137                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  5138   0018BE  808D               	bsf	141,0,c	;volatile
  5139                           
  5140                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  5141   0018C0  828D               	bsf	141,1,c	;volatile
  5142                           
  5143                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  5144   0018C2  8093               	bsf	147,0,c	;volatile
  5145                           
  5146                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  5147   0018C4  9C94               	bcf	148,6,c	;volatile
  5148                           
  5149                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  5150   0018C6  9E94               	bcf	148,7,c	;volatile
  5151                           
  5152                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  5153   0018C8  9895               	bcf	149,4,c	;volatile
  5154                           
  5155                           ;hardware_config.c: 45:     IPEN = 0;
  5156   0018CA  9ED0               	bcf	4048,7,c	;volatile
  5157                           
  5158                           ;hardware_config.c: 46:  GIE = 1;
  5159   0018CC  8EF2               	bsf	4082,7,c	;volatile
  5160                           
  5161                           ;hardware_config.c: 47:  PEIE = 1;
  5162   0018CE  8CF2               	bsf	4082,6,c	;volatile
  5163                           
  5164                           ;hardware_config.c: 48:     INT0E = 0;
  5165   0018D0  98F2               	bcf	4082,4,c	;volatile
  5166                           
  5167                           ;hardware_config.c: 49:  RBIE = 0;
  5168   0018D2  96F2               	bcf	4082,3,c	;volatile
  5169                           
  5170                           ;hardware_config.c: 50:  T0IE = 0;
  5171   0018D4  9AF2               	bcf	4082,5,c	;volatile
  5172                           
  5173                           ;hardware_config.c: 51:  TMR1IE = 1;
  5174   0018D6  809D               	bsf	3997,0,c	;volatile
  5175                           
  5176                           ;hardware_config.c: 52:  TMR2IE = 0;
  5177   0018D8  929D               	bcf	3997,1,c	;volatile
  5178                           
  5179                           ;hardware_config.c: 53:  CCP1IE = 0;
  5180   0018DA  949D               	bcf	3997,2,c	;volatile
  5181                           
  5182                           ;hardware_config.c: 54:  CCP2IE = 0;
  5183   0018DC  90A0               	bcf	4000,0,c	;volatile
  5184                           
  5185                           ;hardware_config.c: 55:  EEIE = 0;
  5186   0018DE  98A0               	bcf	4000,4,c	;volatile
  5187                           
  5188                           ;hardware_config.c: 56:  SSPIE = 0;
  5189   0018E0  969D               	bcf	3997,3,c	;volatile
  5190                           
  5191                           ;hardware_config.c: 57:  BCLIE = 0;
  5192   0018E2  96A0               	bcf	4000,3,c	;volatile
  5193                           
  5194                           ;hardware_config.c: 58:  ADIE = 0;
  5195   0018E4  9C9D               	bcf	3997,6,c	;volatile
  5196                           
  5197                           ;hardware_config.c: 59:  RBIE = 0;
  5198   0018E6  96F2               	bcf	4082,3,c	;volatile
  5199                           
  5200                           ;hardware_config.c: 60:  RCIE = 0;
  5201   0018E8  9A9D               	bcf	3997,5,c	;volatile
  5202   0018EA                     
  5203                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  5204   0018EA  0E72               	movlw	114
  5205   0018EC  6ED3               	movwf	211,c	;volatile
  5206                           
  5207                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  5208   0018EE  0EDF               	movlw	223
  5209   0018F0  6E9B               	movwf	155,c	;volatile
  5210   0018F2                     
  5211                           ;hardware_config.c: 63:     RBPU = 1;
  5212   0018F2  8EF1               	bsf	4081,7,c	;volatile
  5213   0018F4                     
  5214                           ;hardware_config.c: 66:     T1RD16 = 0;
  5215   0018F4  9ECD               	bcf	4045,7,c	;volatile
  5216   0018F6                     
  5217                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  5218   0018F6  88CD               	bsf	4045,4,c	;volatile
  5219   0018F8                     
  5220                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  5221   0018F8  8ACD               	bsf	4045,5,c	;volatile
  5222   0018FA                     
  5223                           ;hardware_config.c: 69:  T1SYNC = 0;
  5224   0018FA  94CD               	bcf	4045,2,c	;volatile
  5225   0018FC                     
  5226                           ;hardware_config.c: 70:  T1OSCEN = 0;
  5227   0018FC  96CD               	bcf	4045,3,c	;volatile
  5228   0018FE                     
  5229                           ;hardware_config.c: 71:  TMR1CS = 0;
  5230   0018FE  92CD               	bcf	4045,1,c	;volatile
  5231   001900                     
  5232                           ;hardware_config.c: 72:  TMR1ON = 1;
  5233   001900  80CD               	bsf	4045,0,c	;volatile
  5234   001902                     
  5235                           ;hardware_config.c: 75:     SPIInit();
  5236   001902  EC29  F00E         	call	_SPIInit	;wreg free
  5237   001906  0012               	return		;funcret
  5238   001908                     __end_of_BoardInit:
  5239                           	callstack 0
  5240                           
  5241 ;; *************** function _SPIInit *****************
  5242 ;; Defined at:
  5243 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  5244 ;; Parameters:    Size  Location     Type
  5245 ;;		None
  5246 ;; Auto vars:     Size  Location     Type
  5247 ;;		None
  5248 ;; Return value:  Size  Location     Type
  5249 ;;                  1    wreg      void 
  5250 ;; Registers used:
  5251 ;;		wreg, status,2
  5252 ;; Tracked objects:
  5253 ;;		On entry : 0/0
  5254 ;;		On exit  : 0/0
  5255 ;;		Unchanged: 0/0
  5256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5261 ;;Total ram usage:        0 bytes
  5262 ;; Hardware stack levels used: 1
  5263 ;; Hardware stack levels required when called: 1
  5264 ;; This function calls:
  5265 ;;		Nothing
  5266 ;; This function is called by:
  5267 ;;		_BoardInit
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text38
  5272   001C52                     __ptext38:
  5273                           	callstack 0
  5274   001C52                     _SPIInit:
  5275                           	callstack 28
  5276   001C52                     
  5277                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  5278   001C52  9694               	bcf	148,3,c	;volatile
  5279                           
  5280                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  5281   001C54  9A94               	bcf	148,5,c	;volatile
  5282                           
  5283                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  5284   001C56  8894               	bsf	148,4,c	;volatile
  5285                           
  5286                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  5287   001C58  8EC7               	bsf	199,7,c	;volatile
  5288                           
  5289                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  5290   001C5A  8CC7               	bsf	199,6,c	;volatile
  5291   001C5C                     
  5292                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  5293   001C5C  0E01               	movlw	1
  5294   001C5E  6EC6               	movwf	198,c	;volatile
  5295   001C60                     
  5296                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  5297   001C60  8EC6               	bsf	198,7,c	;volatile
  5298   001C62                     
  5299                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  5300   001C62  9CC6               	bcf	198,6,c	;volatile
  5301   001C64                     
  5302                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  5303   001C64  8AC6               	bsf	198,5,c	;volatile
  5304   001C66                     
  5305                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  5306   001C66  98C6               	bcf	198,4,c	;volatile
  5307   001C68  0012               	return		;funcret
  5308   001C6A                     __end_of_SPIInit:
  5309                           	callstack 0
  5310                           
  5311 ;; *************** function _isr *****************
  5312 ;; Defined at:
  5313 ;;		line 5 in file "drivers/inc/interrupciones.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      void 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2, status,0
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;Total ram usage:        0 bytes
  5332 ;; Hardware stack levels used: 1
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		Interrupt level 2
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	intcode
  5341   000008                     __pintcode:
  5342                           	callstack 0
  5343   000008                     _isr:
  5344                           	callstack 23
  5345                           
  5346                           ;incstack = 0
  5347   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5348   00000A                     
  5349                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  5350   00000A  A09D               	btfss	3997,0,c	;volatile
  5351   00000C  EF0A  F000         	goto	i2u46_41
  5352   000010  EF0C  F000         	goto	i2u46_40
  5353   000014                     i2u46_41:
  5354   000014  EF1E  F000         	goto	i2l350
  5355   000018                     i2u46_40:
  5356   000018  A09E               	btfss	3998,0,c	;volatile
  5357   00001A  EF11  F000         	goto	i2u47_41
  5358   00001E  EF13  F000         	goto	i2u47_40
  5359   000022                     i2u47_41:
  5360   000022  EF1E  F000         	goto	i2l350
  5361   000026                     i2u47_40:
  5362   000026                     
  5363                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  5364   000026  909E               	bcf	3998,0,c	;volatile
  5365   000028                     
  5366                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  5367   000028  0EF7               	movlw	247
  5368   00002A  6ECE               	movwf	206,c	;volatile
  5369                           
  5370                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  5371   00002C  0EFD               	movlw	253
  5372   00002E  6ECF               	movwf	207,c	;volatile
  5373   000030                     
  5374                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  5375   000030  0E01               	movlw	1
  5376   000032  2659               	addwf	_timeStamp^0,f,c
  5377   000034  0E00               	movlw	0
  5378   000036  225A               	addwfc	(_timeStamp+1)^0,f,c
  5379   000038  225B               	addwfc	(_timeStamp+2)^0,f,c
  5380   00003A  225C               	addwfc	(_timeStamp+3)^0,f,c
  5381   00003C                     i2l350:
  5382   00003C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5383   00003E  0011               	retfie		f
  5384   000040                     __end_of_isr:
  5385                           	callstack 0
  5386                           
  5387                           	psect	rparam
  5388   000001                     ___rparam_used  equ	1
  5389   000000                     ___param_bank   equ	0
  5390   000000                     __Lparam        equ	__Lrparam
  5391   000000                     __Hparam        equ	__Hrparam
  5392                           
  5393                           	psect	temp
  5394   00005F                     btemp:
  5395                           	callstack 0
  5396   00005F                     	ds	1
  5397   00005F                     int$flags       set	btemp
  5398   000060                     wtemp8          set	btemp+1
  5399   000060                     ttemp5          set	btemp+1
  5400   000063                     ttemp6          set	btemp+4
  5401   000067                     ttemp7          set	btemp+8
  5402                           
  5403                           	psect	idloc
  5404                           
  5405                           ;Config register IDLOC0 @ 0x200000
  5406                           ;	unspecified, using default values
  5407   200000                     	org	2097152
  5408   200000  FF                 	db	255
  5409                           
  5410                           ;Config register IDLOC1 @ 0x200001
  5411                           ;	unspecified, using default values
  5412   200001                     	org	2097153
  5413   200001  FF                 	db	255
  5414                           
  5415                           ;Config register IDLOC2 @ 0x200002
  5416                           ;	unspecified, using default values
  5417   200002                     	org	2097154
  5418   200002  FF                 	db	255
  5419                           
  5420                           ;Config register IDLOC3 @ 0x200003
  5421                           ;	unspecified, using default values
  5422   200003                     	org	2097155
  5423   200003  FF                 	db	255
  5424                           
  5425                           ;Config register IDLOC4 @ 0x200004
  5426                           ;	unspecified, using default values
  5427   200004                     	org	2097156
  5428   200004  FF                 	db	255
  5429                           
  5430                           ;Config register IDLOC5 @ 0x200005
  5431                           ;	unspecified, using default values
  5432   200005                     	org	2097157
  5433   200005  FF                 	db	255
  5434                           
  5435                           ;Config register IDLOC6 @ 0x200006
  5436                           ;	unspecified, using default values
  5437   200006                     	org	2097158
  5438   200006  FF                 	db	255
  5439                           
  5440                           ;Config register IDLOC7 @ 0x200007
  5441                           ;	unspecified, using default values
  5442   200007                     	org	2097159
  5443   200007  FF                 	db	255
  5444                           
  5445                           	psect	config
  5446                           
  5447                           ; Padding undefined space
  5448   300000                     	org	3145728
  5449   300000  FF                 	db	255
  5450                           
  5451                           ;Config register CONFIG1H @ 0x300001
  5452                           ;	Oscillator Selection bits
  5453                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5454                           ;	Fail-Safe Clock Monitor Enable bit
  5455                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5456                           ;	Internal/External Oscillator Switchover bit
  5457                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5458   300001                     	org	3145729
  5459   300001  08                 	db	8
  5460                           
  5461                           ;Config register CONFIG2L @ 0x300002
  5462                           ;	Power-up Timer Enable bit
  5463                           ;	PWRT = 0x1, unprogrammed default
  5464                           ;	Brown-out Reset Enable bits
  5465                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5466                           ;	Brown Out Reset Voltage bits
  5467                           ;	BORV = 22, VBOR set to 2.2 V nominal
  5468   300002                     	org	3145730
  5469   300002  11                 	db	17
  5470                           
  5471                           ;Config register CONFIG2H @ 0x300003
  5472                           ;	Watchdog Timer Enable bit
  5473                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5474                           ;	Watchdog Timer Postscale Select bits
  5475                           ;	WDTPS = 8192, 1:8192
  5476   300003                     	org	3145731
  5477   300003  1A                 	db	26
  5478                           
  5479                           ; Padding undefined space
  5480   300004                     	org	3145732
  5481   300004  FF                 	db	255
  5482                           
  5483                           ;Config register CONFIG3H @ 0x300005
  5484                           ;	CCP2 MUX bit
  5485                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5486                           ;	PORTB A/D Enable bit
  5487                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5488                           ;	Low-Power Timer1 Oscillator Enable bit
  5489                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5490                           ;	HFINTOSC Fast Start-up
  5491                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  5492                           ;	MCLR Pin Enable bit
  5493                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5494   300005                     	org	3145733
  5495   300005  01                 	db	1
  5496                           
  5497                           ;Config register CONFIG4L @ 0x300006
  5498                           ;	Stack Full/Underflow Reset Enable bit
  5499                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5500                           ;	Single-Supply ICSP Enable bit
  5501                           ;	LVP = OFF, Single-Supply ICSP disabled
  5502                           ;	Extended Instruction Set Enable bit
  5503                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5504                           ;	Background Debugger Enable bit
  5505                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5506   300006                     	org	3145734
  5507   300006  80                 	db	128
  5508                           
  5509                           ; Padding undefined space
  5510   300007                     	org	3145735
  5511   300007  FF                 	db	255
  5512                           
  5513                           ;Config register CONFIG5L @ 0x300008
  5514                           ;	Code Protection Block 0
  5515                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5516                           ;	Code Protection Block 1
  5517                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5518                           ;	Code Protection Block 2
  5519                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5520                           ;	Code Protection Block 3
  5521                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5522   300008                     	org	3145736
  5523   300008  0F                 	db	15
  5524                           
  5525                           ;Config register CONFIG5H @ 0x300009
  5526                           ;	Boot Block Code Protection bit
  5527                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5528                           ;	Data EEPROM Code Protection bit
  5529                           ;	CPD = OFF, Data EEPROM not code-protected
  5530   300009                     	org	3145737
  5531   300009  C0                 	db	192
  5532                           
  5533                           ;Config register CONFIG6L @ 0x30000A
  5534                           ;	Write Protection Block 0
  5535                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5536                           ;	Write Protection Block 1
  5537                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5538                           ;	Write Protection Block 2
  5539                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5540                           ;	Write Protection Block 3
  5541                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5542   30000A                     	org	3145738
  5543   30000A  0F                 	db	15
  5544                           
  5545                           ;Config register CONFIG6H @ 0x30000B
  5546                           ;	Configuration Register Write Protection bit
  5547                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5548                           ;	Boot Block Write Protection bit
  5549                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5550                           ;	Data EEPROM Write Protection bit
  5551                           ;	WRTD = OFF, Data EEPROM not write-protected
  5552   30000B                     	org	3145739
  5553   30000B  E0                 	db	224
  5554                           
  5555                           ;Config register CONFIG7L @ 0x30000C
  5556                           ;	unspecified, using default values
  5557                           ;	Table Read Protection Block 0
  5558                           ;	EBTR0 = 0x1, unprogrammed default
  5559                           ;	Table Read Protection Block 1
  5560                           ;	EBTR1 = 0x1, unprogrammed default
  5561                           ;	Table Read Protection Block 2
  5562                           ;	EBTR2 = 0x1, unprogrammed default
  5563                           ;	Table Read Protection Block 3
  5564                           ;	EBTR3 = 0x1, unprogrammed default
  5565   30000C                     	org	3145740
  5566   30000C  0F                 	db	15
  5567                           
  5568                           ;Config register CONFIG7H @ 0x30000D
  5569                           ;	Boot Block Table Read Protection bit
  5570                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5571   30000D                     	org	3145741
  5572   30000D  40                 	db	64
  5573                           tosu	equ	0xFFF
  5574                           tosh	equ	0xFFE
  5575                           tosl	equ	0xFFD
  5576                           stkptr	equ	0xFFC
  5577                           pclatu	equ	0xFFB
  5578                           pclath	equ	0xFFA
  5579                           pcl	equ	0xFF9
  5580                           tblptru	equ	0xFF8
  5581                           tblptrh	equ	0xFF7
  5582                           tblptrl	equ	0xFF6
  5583                           tablat	equ	0xFF5
  5584                           prodh	equ	0xFF4
  5585                           prodl	equ	0xFF3
  5586                           indf0	equ	0xFEF
  5587                           postinc0	equ	0xFEE
  5588                           postdec0	equ	0xFED
  5589                           preinc0	equ	0xFEC
  5590                           plusw0	equ	0xFEB
  5591                           fsr0h	equ	0xFEA
  5592                           fsr0l	equ	0xFE9
  5593                           wreg	equ	0xFE8
  5594                           indf1	equ	0xFE7
  5595                           postinc1	equ	0xFE6
  5596                           postdec1	equ	0xFE5
  5597                           preinc1	equ	0xFE4
  5598                           plusw1	equ	0xFE3
  5599                           fsr1h	equ	0xFE2
  5600                           fsr1l	equ	0xFE1
  5601                           bsr	equ	0xFE0
  5602                           indf2	equ	0xFDF
  5603                           postinc2	equ	0xFDE
  5604                           postdec2	equ	0xFDD
  5605                           preinc2	equ	0xFDC
  5606                           plusw2	equ	0xFDB
  5607                           fsr2h	equ	0xFDA
  5608                           fsr2l	equ	0xFD9
  5609                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    24
    Data        0
    BSS         102
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      94
    BANK0           160      0      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DelayInit@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayIsRunning@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayRead@delay	PTR struct . size(1) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), 

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    MRF24SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    S278$buffer_salida	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    sp__MRF24GetMensajeEntrada	PTR unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in(BANK0[56]), mrf24_data_in$buffer_entrada(BANK0[50]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in(BANK0[56]), mrf24_data_in$buffer_entrada(BANK0[50]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_10(CODE[8]), STR_13(CODE[8]), STR_4(CODE[8]), STR_7(CODE[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _strcmp->_MRF24GetMensajeEntrada
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24SetMensajeSalida->_strlen
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_InicializoMRF24
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _InicializoMRF24->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _GetShortAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _GetLongAddr->_Write2ByteSPIPort
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    5674
                                             26 COMRAM    22    22      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
             _MRF24GetMensajeEntrada
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
           _MRF24SetDireccionDestino
              _MRF24SetMensajeSalida
               _MRF24SetPANIDDestino
                _MRF24TransmitirDato
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     120
                                              2 COMRAM     3     1      2
             _MRF24GetMensajeEntrada (ARG)
 ---------------------------------------------------------------------------------
 (1) _MRF24TransmitirDato                                  8     8      0     827
                                             10 COMRAM     7     7      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24SetPANIDDestino                                 2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetMensajeSalida                                1     0      1     165
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      92
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetDireccionDestino                             2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   7     7      0     942
                                             10 COMRAM     7     7      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         1     1      0    2459
                                             25 COMRAM     1     1      0
                    _InicializoMRF24
                    _InicializoPines
                _InicializoVariables
                        _SetResetPin
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InicializoMRF24                                     11    11      0    2229
                                             14 COMRAM    11    11      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceMACAddress                                  2     2      0     256
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceAddress                                     0     0      0     188
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetChannel                                           1     1      0     482
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     188
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     294
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     198
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetMensajeEntrada                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    4     2      2     610
                                             14 COMRAM     4     2      2
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (3) _DelayRead                                           13    12      1     160
                                              1 COMRAM    13    12      1
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (4) _DelayIsRunning                                       1     0      1      23
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      1     0      1     140
                                              5 COMRAM     1     0      1
                          _DelayInit
 ---------------------------------------------------------------------------------
 (3) _DelayInit                                            5     0      5      72
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24GetMensajeEntrada
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _InicializoMRF24
       _DelayInit
       _DelayRead
       _DelayReset
       _GetLongAddr
         _ReadByteSPIPort
           _SPIRead
         _SetCSPin
         _Write2ByteSPIPort
           _SPIWrite2Byte
             _SPIWriteByte
       _GetShortAddr
         _ReadByteSPIPort
         _SetCSPin
         _WriteByteSPIPort
           _SPIWriteByte
       _SetChannel
         _SetLongAddr
           _SetCSPin
           _Write2ByteSPIPort
           _WriteByteSPIPort
         _SetShortAddr
           _SetCSPin
           _WriteByteSPIPort
       _SetDeviceAddress
         _SetShortAddr
       _SetDeviceMACAddress
         _SetShortAddr
       _SetLongAddr
       _SetShortAddr
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetResetPin
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _MRF24SetDireccionDestino
   _MRF24SetMensajeSalida
     _strlen
   _MRF24SetPANIDDestino
   _MRF24TransmitirDato
     _SetLongAddr
     _SetShortAddr
   _strcmp
     _MRF24GetMensajeEntrada (ARG)

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      56     35.0%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     48      94    100.0%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     150      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Apr 24 12:42:42 2025

                         _SSPSTATbits 0FC7                                    l21 1C92  
                                  l30 1CC2                                    l24 1CEC  
                                  l33 1CA6                                    l42 1D0A  
                                  l27 1CB4                                    l36 1D04  
                                  l39 1CD0                       _IsMRF24Interrup 1C94  
                                  l99 166A                                    u55 1CB2  
                                  u56 1CB4                                    u65 1CC0  
                                  u66 1CC2                         ?_MRF24J40Init 0001  
                                 l100 16EC                                   l103 125A  
                                 l112 1BFC                                   l201 1C6E  
                                 l121 194A                                   l105 13CA  
                                 l115 1BB6                                   l204 1C7E  
                                 l124 1A80                                   l132 198C  
                                 l141 1A0E                                   l118 19CE  
                                 l127 1B42                                   l135 1A48  
                                 l160 1AE8                                   l144 1C30  
                                 l152 151C                                   l145 1C38  
                                 l153 1628                                   l241 10B0  
                                 l171 1D10                                   l148 1C12  
                                 l165 183E                                   l149 1C1A  
                                 l334 1906                                   l192 1C42  
                                 l363 1798                                   l195 1C50  
                                 l372 1CFA                                   l189 1C68  
                                 l357 1B6A                                   l198 1CDE  
                                 l369 1BDC                                   l379 1B18  
                                 l389 1506                                   _GIE 7F97  
                                 u110 1CA4                                   u111 1C9E  
                                 u116 1CA6                                   u250 1AC6  
                                 u251 1AC2                                   u260 1AE0  
                                 u500 1C7C                                   u261 1ADC  
                                 u501 1C78                                   u520 1706  
                                 u600 137A                                   u521 1702  
                                 u601 1376                                   u530 1784  
                                 u610 1390                                   u531 1780  
                                 u515 1998                                   u611 138C  
                                 u540 198C                                   u700 1828  
                                 u620 1AA8                                   u541 1988  
                                 u701 1824                                   u621 1AA4  
                                 u710 13E0                                   u630 19EA  
                                 u711 13DC                                   u631 19E6  
                                 u720 140C                                   u480 1C50  
                                 u560 164E                                   u640 19FA  
                                 u800 112A                                   u721 1408  
                                 u481 1C4C                                   u561 164A  
                                 u641 19F6                                   u801 1126  
                                 u730 141C                                   u570 16A6  
                                 u650 1C2C                                   u810 114E  
                                 u731 1418                                   u555 1912  
                                 u571 16A2                                   u651 1C28  
                                 u811 114A                                   u740 145C  
                                 u580 127A                                   u660 1C0E  
                                 u820 117C                                   u741 1458  
                                 u581 1276                                   u661 1C0A  
                                 u821 1178                                   u750 146C  
                                 u590 1296                                   u670 1518  
                                 u830 11AA                                   u751 1468  
                                 u495 1CEA                                   u591 1292  
                                 u671 1514                                   u831 11A6  
                                 u760 14A0                                   u496 1CEC  
                                 u680 160E                                   u840 11D8  
                                 u761 149C                                   u681 160A  
                                 u841 11D4                                   u690 17AA  
                                 u770 186E                                   u850 120A  
                                 u907 129C                                   u691 17A6  
                                 u771 186A                                   u851 1206  
                                 u780 1884                                   u860 121C  
                                 u917 1A74                                   u781 1880  
                                 u861 1214                                   u790 10E6  
                                 u791 10E0                                   u796 10E8  
                                 u878 121E                                   u887 1A1E  
                                 u897 1A36                                   _isr 0008  
                                 wreg 0FE8                   __end_of_GetLongAddr 194C  
                                l2001 1596                                  l2011 15B8  
                                l2003 1598                                  l2021 160E  
                                l2013 15BE                                  l2005 15A6  
                                l2023 161C                                  l2015 15DC  
                                l2007 15A8                                  l2105 14C0  
                                l1145 1CAA                                  l2041 17F8  
                                l2033 17AE                                  l2025 161E  
                                l2017 15DE                                  l2009 15B6  
                                l2121 186E                                  l2107 1504  
                                l2051 13CC                                  l2043 1828  
                                l2035 17D6                                  l2019 15E0  
                                l2123 1884                                  l2115 1840  
                                l2131 107C                                  l1501 18F4  
                                l2061 141C                                  l2053 13D0  
                                l1149 1CB8                                  l2037 17DC  
                                l2029 179A                                  l1085 1AB4  
                                l2117 1844                                  l2141 10BE  
                                l2133 1080                                  l1351 1C62  
                                l1511 18FE                                  l1503 18F6  
                                l2071 143C                                  l2063 142A  
                                l2055 13E0                                  l2047 1D0C  
                                l1239 1C94                                  l2039 17F6  
                                l1079 18A4                                  l2119 1848  
                                l2231 1100                                  l2143 10C6  
                                l2151 1116                                  l2135 1098  
                                l2127 1070                                  l1353 1C64  
                                l1345 1C52                                  l1513 1900  
                                l1505 18F8                                  l2233 14DE  
                                l2081 1478                                  l2057 13F2  
                                l2161 115C                                  l2153 112A  
                                l2137 10A4                                  l2129 1078  
                                l1355 1C66                                  l1347 1C5C  
                                l1515 1902                                  l1507 18FA  
                                l2075 1442                                  l2059 140C  
                                l2171 11AC                                  l2163 117C  
                                l2155 112E                                  l2139 10B6  
                                l1349 1C60                                  l1509 18FC  
                                l2093 1490                                  l2077 145C  
                                l2069 1430                                  l1701 1CC4  
                                l2173 11B8                                  l2165 117E  
                                l2181 11EE                                  l2157 114E  
                                l2149 10D2                                  l2095 14A0  
                                l2079 146C                                  l2087 147E  
                                l1463 1ACC                                  l1711 1D06  
                                l2175 11D8                                  l2167 118A  
                                l2159 1150                                  l2183 11F2  
                                l2097 14B2                                  l1465 1AE0  
                                l1457 1AB6                                  l1705 1C6A  
                                l1721 1BF0                                  l1801 196C  
                                l2185 120A                                  l2177 11DA  
                                l2169 11AA                                  l2099 14BA  
                                l1459 1AC6                                  l1707 1C7C  
                                l1811 193C                                  l1731 19B6  
                                l1723 1BF6                                  l1715 1BE0  
                                l1803 1970                                  l2179 11E6  
                                l1469 1AE6                                  l1813 1942  
                                l1805 1908                                  l1733 19C2  
                                l1717 1BE4                                  l1821 1A6E  
                                l1901 1342                                  l1495 18A6  
                                l1743 1B44                                  l1815 1948  
                                l1807 192A                                  l1735 19C8  
                                l1727 198E                                  l1719 1BEA  
                                l1903 134C                                  l1497 18EA  
                                l1809 1930                                  l1761 1BA8  
                                l1753 1B94                                  l1729 19B0  
                                l1913 137E                                  l1905 1354  
                                l1825 1C80                                  l1841 168A  
                                l1921 1A82                                  l1499 18F2  
                                l1931 1AEA                                  l1739 1CEE  
                                l1771 1706                                  l1747 1BB8  
                                l1763 1BAE                                  l1755 1B94  
                                l1819 1A4A                                  l1915 1390  
                                l1907 1362                                  l1851 16D6  
                                l1843 16A6                                  l1835 1632  
                                l1923 1A8A                                  l1933 1AF6  
                                l1773 171C                                  l1749 1BCE  
                                l1693 1CE2                                  l1685 1C3C  
                                l1765 1BB4                                  l1757 1B9C  
                                l1917 13C8                                  l1861 1248  
                                l1853 16E8                                  l1845 16AE  
                                l1837 164E                                  l1829 162A  
                                l1941 1A18                                  l1925 1A8C  
                                l1935 1B10                                  l1783 1796  
                                l1775 172E                                  l1687 1C3E  
                                l1759 1BA2                                  l1791 194C  
                                l1871 1280                                  l1863 1252  
                                l1855 16EA                                  l1847 16B0  
                                l1839 1686                                  l1943 1A2A  
                                l1927 1AA8                                  l1951 19D0  
                                l1777 1784                                  l1769 16EE  
                                l1689 1CD2                                  l1697 1CFE  
                                l1881 12BA                                  l1873 1296  
                                l1865 1262                                  l1849 16D4  
                                l1945 1A30                                  l1937 1A10  
                                l1961 1C1C                                  l1953 19EA  
                                l1779 1790                                  l1787 1B1A  
                                l1891 130A                                  l1883 12CA  
                                l1875 12A8                                  l1867 127A  
                                l1859 1230                                  l1947 1A42  
                                l1939 1A14                                  l1955 19FE  
                                l1797 1958                                  l1893 131A  
                                l1885 12DA                                  l1877 12B2  
                                l1957 1A02                                  l1965 1BFE  
                                l1981 1540                                  l1973 151E  
                                l1799 196A                                  l1895 1324  
                                l1887 12EA                                  l1879 12B6  
                                l1991 1562                                  l1983 1542  
                                l1975 151E                                  l1897 132E  
                                l1889 12FA                                  l1993 1576  
                                l1985 1550                                  l1977 152E  
                                l1969 1508                                  l1899 1338  
                                l1995 1578                                  l1987 1552  
                                l1979 1530                                  l1997 1586  
                                l1989 1560                                  l1999 1588  
                                _ADIE 7CEE                                  ?_isr 0001  
                                _EEIE 7D04                                  STR_1 1066  
                                STR_2 105E                                  STR_3 1046  
                                STR_4 1046                                  STR_5 1019  
                                STR_6 103E                                  STR_7 103E  
                                STR_8 1027                                  STR_9 1056  
                                _T0IE 7F95                                  _IPEN 7E87  
                                _PEIE 7F96                                  _RBIE 7F93  
                                _RCIE 7CED                                  _RBPU 7F8F  
                        _SPIWriteByte 1C3A                                  _main 1070  
                     __end_of_SPIInit 1C6A                       __end_of_SPIRead 1C80  
                                fsr1h 0FE2                                  fsr2h 0FDA  
                                indf2 0FDF                                  fsr1l 0FE1  
                                fsr2l 0FD9                                  btemp 005F  
                       _MRF24IsNewMsg 1AB6                            _DelayReset 1BB8  
             GetShortAddr@reg_address 0004                                  start 0040  
                   DelayInit@duration 0002                          ___param_bank 0000  
                    _long_mac_address 005D                     ??_ReadByteSPIPort 0001  
                               ??_isr 0001                        ??_MRF24J40Init 001A  
         __end_of_InicializoVariables 16EE                         _SPIWrite2Byte 1CD2  
    __end_of_MRF24SetDireccionDestino 1C3A                                 ?_main 0001  
                               _BCLIE 7D03                                 STR_10 1056  
                               STR_11 1019                                 STR_12 104E  
                               STR_13 104E                                 STR_14 1027  
                               STR_15 1033                                 _INT0E 7F94  
                               i2l350 003C                  SetDeviceMACAddress@i 0005  
                               _TMR1H 0FCF                                 _TMR1L 0FCE  
                               _PORTA 0F80                                 _PORTB 0F81  
                               _PORTC 0F82                                 _PORTD 0F83  
                               _PORTE 0F84                                 _SSPIE 7CEB  
                __end_of_GetShortAddr 1BB8                       _InicializoMRF24 1230  
        MRF24SetMensajeSalida@mensaje 0004              ??_MRF24GetMensajeEntrada 0003  
                     _InicializoPines 1C80               SetShortAddr@reg_address 0004  
                               tablat 0FF5                        ?_MRF24IsNewMsg 0001  
                               ttemp5 0060                                 ttemp6 0063  
                               ttemp7 0067                                 status 0FD8  
                               wtemp8 0060               __end_of_IsMRF24Interrup 1CA8  
                 _SetDeviceMACAddress 194C                       __initialization 1B6C  
                        __end_of_main 1230  DebounceFSMUpdate@antirrebote_boton_n 000F  
                      ?_SPIWrite2Byte 0002                      __end_of_SetCSPin 1CEE  
                         _GetLongAddr 1908                         ??_SetLongAddr 0009  
                              ??_main 001B                         __activetblptr 0002  
                       ??_SetResetPin 0001                  ?_SetDeviceMACAddress 0001  
                          _SetChannel 1A4A         InicializoMRF24@delay_time_out 0011  
                   ?_SetDeviceAddress 0001                 _MRF24SetMensajeSalida 19D0  
                              _CCP1IE 7CEA                                _CCP2IE 7D00  
                           ??_SPIInit 0001                             ??_SPIRead 0001  
                  ??_SetDeviceAddress 0005                                _T1RD16 7E6F  
                              _T1SYNC 7E6A                                i2l1661 000A  
                              i2l1663 0018                                i2l1665 0026  
                              i2l1667 0028                                i2l1669 0030  
                          _SetWakePin 1CA8                                _OSCCON 0FD3  
           MRF24SetPANIDDestino@panid 0001                                _TMR1IE 7CE8  
                              _TMR1IF 7CF0                                _TMR1CS 7E69  
                              _TMR2IE 7CE9                                _TMR1ON 7E68  
        __end_of_default_security_key 1011                                _SSPBUF 0FC9  
                         ?_DelayReset 0001                   DelayIsRunning@delay 0001  
             __end_of_InicializoMRF24 13CC                                clear_0 1B72  
                              clear_1 1B7E                                isa$std 0001  
                      SetCSPin@estado 0001               __end_of_InicializoPines 1C94  
                              _strcmp 1840                                _strlen 1A82  
               ??_SetDeviceMACAddress 0005                  InicializoVariables@i 0002  
                        __mediumconst 0000                     _mrf24_data_config 0031  
            _MRF24SetDireccionDestino 1C1C                                tblptrh 0FF7  
                              tblptrl 0FF6                                tblptru 0FF8  
                 __end_of_SetLongAddr 19D0                    _MRF24ReciboPaquete 179A  
                    ??_DelayIsRunning 0002                       ??_MRF24IsNewMsg 0001  
                 __end_of_SetResetPin 1CC4                 GetShortAddr@leido_spi 0003  
                   __end_of_DelayInit 1B6C                     __end_of_DelayRead 179A  
                __end_of_MRF24J40Init 1A4A                            __accesstop 0060  
             __end_of__initialization 1B84                   ?_MRF24ReciboPaquete 0001  
         __end_of_MRF24TransmitirDato 162A                     __end_of_BoardInit 1908  
                      DelayInit@delay 0001                         ___rparam_used 0001  
                      DelayRead@delay 0002                      SetWakePin@estado 0001  
                    ?_IsMRF24Interrup 0001                         ?_SetShortAddr 0003  
                      __pcstackCOMRAM 0001                       ??_SPIWrite2Byte 0004  
                ??_MRF24ReciboPaquete 000B                ?_MRF24SetMensajeSalida 0004  
                         ?_SetChannel 0001                            __pbssBANK0 0060  
                         ?_SetWakePin 0001                             ?_SetCSPin 0001  
                     _ReadByteSPIPort 1D06                InicializoMRF24@lectura 0010  
                        _GetShortAddr 1B92                _MRF24GetMensajeEntrada 1D0C  
                      ??_SetShortAddr 0004                      ?_InicializoMRF24 0001  
                         _SetLongAddr 198E                               _T1CKPS0 7E6C  
                             _T1CKPS1 7E6D                               ?_strcmp 0003  
                             ?_strlen 0001                      ?_InicializoPines 0001  
                _default_security_key 1001                               _T1OSCEN 7E6B  
                         _SetResetPin 1CB6          __end_of_MRF24SetPANIDDestino 1C1C  
                             i2u46_40 0018                               i2u46_41 0014  
                             _OSCTUNE 0F9B                               i2u47_40 0026  
                             i2u47_41 0022                               _SSPCON1 0FC6  
                             _SPIInit 1C52                               _SPIRead 1C6A  
                          ??_SetCSPin 0001                     SetShortAddr@valor 0003  
                             __Hparam 0000                               __Lparam 0000  
                   ??_DebounceFSMInit 0007                          __psmallconst 1000  
                             __pcinit 1B6C                          ?_GetLongAddr 0006  
                             __ramtop 1000                               __ptext0 1070  
                             __ptext1 1840                               __ptext2 1508  
                             __ptext3 1BFE                               __ptext4 19D0  
                             __ptext5 1A82                               __ptext6 1C1C  
                             __ptext7 179A                               __ptext8 1A10  
                             __ptext9 162A                      _WriteByteSPIPort 1CFC  
             __end_of_ReadByteSPIPort 1D0C                  end_of_initialization 1B84  
                       __Lmediumconst 0000                          ??_DelayReset 0002  
                 _default_mac_address 1011                               postinc0 0FEE  
                             postinc1 0FE6                               postinc2 0FDE  
          ??_MRF24SetDireccionDestino 0003                               strcmp@l 0003  
                             strcmp@r 0004                               strlen@a 0003  
                             strlen@s 0001                          _MRF24J40Init 1A10  
                           _PORTBbits 0F81                             _PORTCbits 0F82  
                  __end_of_DelayReset 1BDE                  WriteByteSPIPort@dato 0002  
                           _TRISBbits 0F93                             _TRISCbits 0F94  
                           _TRISDbits 0F95                             _TRISEbits 0F96  
                __end_of_SetShortAddr 1BFE                 Write2ByteSPIPort@dato 0004  
                GetLongAddr@respuesta 000A                            main@boton1 0026  
                           _DelayInit 1B44                             _DelayRead 16EE  
                           _BoardInit 18A6                  _MRF24SetPANIDDestino 1BFE  
                   _Write2ByteSPIPort 1CC4           __end_of_SetDeviceMACAddress 198E  
             ??_MRF24SetMensajeSalida 0005                    ?_Write2ByteSPIPort 0004  
                      __end_of_strcmp 18A6                        __end_of_strlen 1AB6  
                        ??_SetChannel 000B                   start_initialization 1B6C  
                 ??_Write2ByteSPIPort 0006                           __end_of_isr 0040  
                    ?_ReadByteSPIPort 0001                         ?_SPIWriteByte 0001  
                        ??_SetWakePin 0001                 __end_of_MRF24IsNewMsg 1AEA  
             ?_MRF24GetMensajeEntrada 0001                            ?_DelayInit 0001  
                          ?_DelayRead 0002                            ?_BoardInit 0001  
               ?_MRF24SetPANIDDestino 0001             __end_of_Write2ByteSPIPort 1CD2  
                  __end_of_SetChannel 1A82                          _estadoActual 005E  
               __end_of_SPIWrite2Byte 1CE0               MRF24ReciboPaquete@index 0011  
                        ?_SetLongAddr 0006                              ??_strcmp 0005  
                            ??_strlen 0003                    __end_of_SetWakePin 1CB6  
                   _DebounceFSMUpdate 13CC                          ?_SetResetPin 0001  
                         __pbssCOMRAM 0031                    ?_DebounceFSMUpdate 000F  
                     DelayReset@delay 0001                              ?_SPIInit 0001  
                            ?_SPIRead 0001                        ??_SPIWriteByte 0001  
      __end_of_MRF24GetMensajeEntrada 1D12                   ??_DebounceFSMUpdate 0011  
                    SPIWriteByte@dato 0001                       _DebounceFSMInit 1AEA  
                    _SetDeviceAddress 1B1A                   _InicializoVariables 162A  
            __end_of_WriteByteSPIPort 1D06                             __pintcode 0008  
           __end_of_DebounceFSMUpdate 1508                     SetResetPin@estado 0001  
                         __smallconst 1000                  ?_InicializoVariables 0001  
                    SetLongAddr@valor 0008                              _LATCbits 0F8B  
                            _LATDbits 0F8C                              _LATEbits 0F8D  
                         ??_DelayInit 0006                           ??_DelayRead 0003  
              ??_MRF24SetPANIDDestino 0003                           ??_BoardInit 0001  
                            _PIR1bits 0F9E                          _SetShortAddr 1BDE  
                           _timeStamp 0059                    main@delay_parpadeo 001D  
               ??_InicializoVariables 0001     MRF24SetDireccionDestino@direccion 0001  
                   ??_IsMRF24Interrup 0001               __end_of_DebounceFSMInit 1B1A  
                      _mrf24_data_out 0053                              _SetCSPin 1CE0  
                            __Hrparam 0000                              __Lrparam 0000  
     MRF24ReciboPaquete@largo_mensaje 0010                  __end_of_SPIWriteByte 1C52  
      MRF24TransmitirDato@pos_memoria 0011         __end_of_MRF24SetMensajeSalida 1A10  
                            __ptext10 1C80                              __ptext11 1CA8  
                            __ptext20 1CFC                              __ptext12 1CB6  
                            __ptext21 1908                              __ptext13 1230  
                            __ptext30 1C94                              __ptext22 1CC4  
                            __ptext14 194C                              __ptext31 1D0C  
                            __ptext23 1CD2                              __ptext15 1B1A  
                            __ptext32 13CC                              __ptext24 1C3A  
                            __ptext16 1A4A                              __ptext33 16EE  
                            __ptext25 1CE0                              __ptext17 1BDE  
                            __ptext34 1CEE                              __ptext26 1D06  
                            __ptext18 198E                   _MRF24TransmitirDato 1508  
                            __ptext35 1AEA                              __ptext27 1C6A  
                            __ptext19 1B92                              __ptext36 1B44  
                            __ptext28 1BB8                              __ptext37 18A6  
                            __ptext29 1AB6                              __ptext38 1C52  
           ?_MRF24SetDireccionDestino 0001                     ??_InicializoMRF24 000F  
                      _DelayIsRunning 1CEE                     ??_InicializoPines 0002  
                       ?_GetShortAddr 0001                  ?_MRF24TransmitirDato 0001  
                            isa$xinst 0000                              int$flags 005F  
  DebounceFSMInit@antirrebote_boton_n 0006           __end_of_default_mac_address 1019  
                       _mrf24_data_in 0060              __end_of_SetDeviceAddress 1B44  
                    ?_DebounceFSMInit 0006                              intlevel2 0000  
              __end_of_DelayIsRunning 1CFC                  MRF24TransmitirDato@i 0010  
                      ??_GetShortAddr 0003                 ??_MRF24TransmitirDato 000B  
                   ?_WriteByteSPIPort 0001            __end_of_MRF24ReciboPaquete 1840  
                       ??_GetLongAddr 0008                    ??_WriteByteSPIPort 0002  
              GetLongAddr@reg_address 0006                           _SSPCON1bits 0FC6  
         DebounceFSMUpdate@estado_pin 0010                     SPIWrite2Byte@dato 0002  
              SetLongAddr@reg_address 0006                       ?_DelayIsRunning 0001  
