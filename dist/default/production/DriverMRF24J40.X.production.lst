

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Apr 20 13:29:25 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Version 2.20
    58                           ; Generated 05/05/2020 GMT
    59                           ; 
    60                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F46K20 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000FE0                     bsr             equ	4064
    92   000FE9                     fsr0            equ	4073
    93   000FEA                     fsr0h           equ	4074
    94   000FE9                     fsr0l           equ	4073
    95   000FE1                     fsr1            equ	4065
    96   000FE2                     fsr1h           equ	4066
    97   000FE1                     fsr1l           equ	4065
    98   000FD9                     fsr2            equ	4057
    99   000FDA                     fsr2h           equ	4058
   100   000FD9                     fsr2l           equ	4057
   101   000FEF                     indf0           equ	4079
   102   000FE7                     indf1           equ	4071
   103   000FDF                     indf2           equ	4063
   104   000FF2                     intcon          equ	4082
   105   000000                     nvmcon          equ	0
   106   000FF9                     pcl             equ	4089
   107   000FFA                     pclath          equ	4090
   108   000FFB                     pclatu          equ	4091
   109   000FEB                     plusw0          equ	4075
   110   000FE3                     plusw1          equ	4067
   111   000FDB                     plusw2          equ	4059
   112   000FED                     postdec0        equ	4077
   113   000FE5                     postdec1        equ	4069
   114   000FDD                     postdec2        equ	4061
   115   000FEE                     postinc0        equ	4078
   116   000FE6                     postinc1        equ	4070
   117   000FDE                     postinc2        equ	4062
   118   000FEC                     preinc0         equ	4076
   119   000FE4                     preinc1         equ	4068
   120   000FDC                     preinc2         equ	4060
   121   000FF3                     prod            equ	4083
   122   000FF4                     prodh           equ	4084
   123   000FF3                     prodl           equ	4083
   124   000FD8                     status          equ	4056
   125   000FF5                     tablat          equ	4085
   126   000FF6                     tblptr          equ	4086
   127   000FF7                     tblptrh         equ	4087
   128   000FF6                     tblptrl         equ	4086
   129   000FF8                     tblptru         equ	4088
   130   000FFD                     tosl            equ	4093
   131   000FE8                     wreg            equ	4072
   132   000F77                     SSPMSK          equ	3959	;# 
   133   000F78                     SLRCON          equ	3960	;# 
   134   000F79                     CM2CON1         equ	3961	;# 
   135   000F7A                     CM2CON0         equ	3962	;# 
   136   000F7B                     CM1CON0         equ	3963	;# 
   137   000F7C                     WPUB            equ	3964	;# 
   138   000F7D                     IOCB            equ	3965	;# 
   139   000F7E                     ANSEL           equ	3966	;# 
   140   000F7F                     ANSELH          equ	3967	;# 
   141   000F80                     PORTA           equ	3968	;# 
   142   000F81                     PORTB           equ	3969	;# 
   143   000F82                     PORTC           equ	3970	;# 
   144   000F83                     PORTD           equ	3971	;# 
   145   000F84                     PORTE           equ	3972	;# 
   146   000F89                     LATA            equ	3977	;# 
   147   000F8A                     LATB            equ	3978	;# 
   148   000F8B                     LATC            equ	3979	;# 
   149   000F8C                     LATD            equ	3980	;# 
   150   000F8D                     LATE            equ	3981	;# 
   151   000F92                     TRISA           equ	3986	;# 
   152   000F92                     DDRA            equ	3986	;# 
   153   000F93                     TRISB           equ	3987	;# 
   154   000F93                     DDRB            equ	3987	;# 
   155   000F94                     TRISC           equ	3988	;# 
   156   000F94                     DDRC            equ	3988	;# 
   157   000F95                     TRISD           equ	3989	;# 
   158   000F95                     DDRD            equ	3989	;# 
   159   000F96                     TRISE           equ	3990	;# 
   160   000F96                     DDRE            equ	3990	;# 
   161   000F9B                     OSCTUNE         equ	3995	;# 
   162   000F9D                     PIE1            equ	3997	;# 
   163   000F9E                     PIR1            equ	3998	;# 
   164   000F9F                     IPR1            equ	3999	;# 
   165   000FA0                     PIE2            equ	4000	;# 
   166   000FA1                     PIR2            equ	4001	;# 
   167   000FA2                     IPR2            equ	4002	;# 
   168   000FA6                     EECON1          equ	4006	;# 
   169   000FA7                     EECON2          equ	4007	;# 
   170   000FA8                     EEDATA          equ	4008	;# 
   171   000FA9                     EEADR           equ	4009	;# 
   172   000FAA                     EEADRH          equ	4010	;# 
   173   000FAB                     RCSTA           equ	4011	;# 
   174   000FAB                     RCSTA1          equ	4011	;# 
   175   000FAC                     TXSTA           equ	4012	;# 
   176   000FAC                     TXSTA1          equ	4012	;# 
   177   000FAD                     TXREG           equ	4013	;# 
   178   000FAD                     TXREG1          equ	4013	;# 
   179   000FAE                     RCREG           equ	4014	;# 
   180   000FAE                     RCREG1          equ	4014	;# 
   181   000FAF                     SPBRG           equ	4015	;# 
   182   000FAF                     SPBRG1          equ	4015	;# 
   183   000FB0                     SPBRGH          equ	4016	;# 
   184   000FB1                     T3CON           equ	4017	;# 
   185   000FB2                     TMR3            equ	4018	;# 
   186   000FB2                     TMR3L           equ	4018	;# 
   187   000FB3                     TMR3H           equ	4019	;# 
   188   000FB4                     CVRCON2         equ	4020	;# 
   189   000FB5                     CVRCON          equ	4021	;# 
   190   000FB6                     ECCP1AS         equ	4022	;# 
   191   000FB7                     PWM1CON         equ	4023	;# 
   192   000FB8                     BAUDCON         equ	4024	;# 
   193   000FB8                     BAUDCTL         equ	4024	;# 
   194   000FB9                     PSTRCON         equ	4025	;# 
   195   000FBA                     CCP2CON         equ	4026	;# 
   196   000FBB                     CCPR2           equ	4027	;# 
   197   000FBB                     CCPR2L          equ	4027	;# 
   198   000FBC                     CCPR2H          equ	4028	;# 
   199   000FBD                     CCP1CON         equ	4029	;# 
   200   000FBE                     CCPR1           equ	4030	;# 
   201   000FBE                     CCPR1L          equ	4030	;# 
   202   000FBF                     CCPR1H          equ	4031	;# 
   203   000FC0                     ADCON2          equ	4032	;# 
   204   000FC1                     ADCON1          equ	4033	;# 
   205   000FC2                     ADCON0          equ	4034	;# 
   206   000FC3                     ADRES           equ	4035	;# 
   207   000FC3                     ADRESL          equ	4035	;# 
   208   000FC4                     ADRESH          equ	4036	;# 
   209   000FC5                     SSPCON2         equ	4037	;# 
   210   000FC6                     SSPCON1         equ	4038	;# 
   211   000FC7                     SSPSTAT         equ	4039	;# 
   212   000FC8                     SSPADD          equ	4040	;# 
   213   000FC9                     SSPBUF          equ	4041	;# 
   214   000FCA                     T2CON           equ	4042	;# 
   215   000FCB                     PR2             equ	4043	;# 
   216   000FCB                     MEMCON          equ	4043	;# 
   217   000FCC                     TMR2            equ	4044	;# 
   218   000FCD                     T1CON           equ	4045	;# 
   219   000FCE                     TMR1            equ	4046	;# 
   220   000FCE                     TMR1L           equ	4046	;# 
   221   000FCF                     TMR1H           equ	4047	;# 
   222   000FD0                     RCON            equ	4048	;# 
   223   000FD1                     WDTCON          equ	4049	;# 
   224   000FD2                     HLVDCON         equ	4050	;# 
   225   000FD2                     LVDCON          equ	4050	;# 
   226   000FD3                     OSCCON          equ	4051	;# 
   227   000FD5                     T0CON           equ	4053	;# 
   228   000FD6                     TMR0            equ	4054	;# 
   229   000FD6                     TMR0L           equ	4054	;# 
   230   000FD7                     TMR0H           equ	4055	;# 
   231   000FD8                     STATUS          equ	4056	;# 
   232   000FD9                     FSR2            equ	4057	;# 
   233   000FD9                     FSR2L           equ	4057	;# 
   234   000FDA                     FSR2H           equ	4058	;# 
   235   000FDB                     PLUSW2          equ	4059	;# 
   236   000FDC                     PREINC2         equ	4060	;# 
   237   000FDD                     POSTDEC2        equ	4061	;# 
   238   000FDE                     POSTINC2        equ	4062	;# 
   239   000FDF                     INDF2           equ	4063	;# 
   240   000FE0                     BSR             equ	4064	;# 
   241   000FE1                     FSR1            equ	4065	;# 
   242   000FE1                     FSR1L           equ	4065	;# 
   243   000FE2                     FSR1H           equ	4066	;# 
   244   000FE3                     PLUSW1          equ	4067	;# 
   245   000FE4                     PREINC1         equ	4068	;# 
   246   000FE5                     POSTDEC1        equ	4069	;# 
   247   000FE6                     POSTINC1        equ	4070	;# 
   248   000FE7                     INDF1           equ	4071	;# 
   249   000FE8                     WREG            equ	4072	;# 
   250   000FE9                     FSR0            equ	4073	;# 
   251   000FE9                     FSR0L           equ	4073	;# 
   252   000FEA                     FSR0H           equ	4074	;# 
   253   000FEB                     PLUSW0          equ	4075	;# 
   254   000FEC                     PREINC0         equ	4076	;# 
   255   000FED                     POSTDEC0        equ	4077	;# 
   256   000FEE                     POSTINC0        equ	4078	;# 
   257   000FEF                     INDF0           equ	4079	;# 
   258   000FF0                     INTCON3         equ	4080	;# 
   259   000FF1                     INTCON2         equ	4081	;# 
   260   000FF2                     INTCON          equ	4082	;# 
   261   000FF3                     PROD            equ	4083	;# 
   262   000FF3                     PRODL           equ	4083	;# 
   263   000FF4                     PRODH           equ	4084	;# 
   264   000FF5                     TABLAT          equ	4085	;# 
   265   000FF6                     TBLPTR          equ	4086	;# 
   266   000FF6                     TBLPTRL         equ	4086	;# 
   267   000FF7                     TBLPTRH         equ	4087	;# 
   268   000FF8                     TBLPTRU         equ	4088	;# 
   269   000FF9                     PCLAT           equ	4089	;# 
   270   000FF9                     PC              equ	4089	;# 
   271   000FF9                     PCL             equ	4089	;# 
   272   000FFA                     PCLATH          equ	4090	;# 
   273   000FFB                     PCLATU          equ	4091	;# 
   274   000FFC                     STKPTR          equ	4092	;# 
   275   000FFD                     TOS             equ	4093	;# 
   276   000FFD                     TOSL            equ	4093	;# 
   277   000FFE                     TOSH            equ	4094	;# 
   278   000FFF                     TOSU            equ	4095	;# 
   279   000F77                     SSPMSK          equ	3959	;# 
   280   000F78                     SLRCON          equ	3960	;# 
   281   000F79                     CM2CON1         equ	3961	;# 
   282   000F7A                     CM2CON0         equ	3962	;# 
   283   000F7B                     CM1CON0         equ	3963	;# 
   284   000F7C                     WPUB            equ	3964	;# 
   285   000F7D                     IOCB            equ	3965	;# 
   286   000F7E                     ANSEL           equ	3966	;# 
   287   000F7F                     ANSELH          equ	3967	;# 
   288   000F80                     PORTA           equ	3968	;# 
   289   000F81                     PORTB           equ	3969	;# 
   290   000F82                     PORTC           equ	3970	;# 
   291   000F83                     PORTD           equ	3971	;# 
   292   000F84                     PORTE           equ	3972	;# 
   293   000F89                     LATA            equ	3977	;# 
   294   000F8A                     LATB            equ	3978	;# 
   295   000F8B                     LATC            equ	3979	;# 
   296   000F8C                     LATD            equ	3980	;# 
   297   000F8D                     LATE            equ	3981	;# 
   298   000F92                     TRISA           equ	3986	;# 
   299   000F92                     DDRA            equ	3986	;# 
   300   000F93                     TRISB           equ	3987	;# 
   301   000F93                     DDRB            equ	3987	;# 
   302   000F94                     TRISC           equ	3988	;# 
   303   000F94                     DDRC            equ	3988	;# 
   304   000F95                     TRISD           equ	3989	;# 
   305   000F95                     DDRD            equ	3989	;# 
   306   000F96                     TRISE           equ	3990	;# 
   307   000F96                     DDRE            equ	3990	;# 
   308   000F9B                     OSCTUNE         equ	3995	;# 
   309   000F9D                     PIE1            equ	3997	;# 
   310   000F9E                     PIR1            equ	3998	;# 
   311   000F9F                     IPR1            equ	3999	;# 
   312   000FA0                     PIE2            equ	4000	;# 
   313   000FA1                     PIR2            equ	4001	;# 
   314   000FA2                     IPR2            equ	4002	;# 
   315   000FA6                     EECON1          equ	4006	;# 
   316   000FA7                     EECON2          equ	4007	;# 
   317   000FA8                     EEDATA          equ	4008	;# 
   318   000FA9                     EEADR           equ	4009	;# 
   319   000FAA                     EEADRH          equ	4010	;# 
   320   000FAB                     RCSTA           equ	4011	;# 
   321   000FAB                     RCSTA1          equ	4011	;# 
   322   000FAC                     TXSTA           equ	4012	;# 
   323   000FAC                     TXSTA1          equ	4012	;# 
   324   000FAD                     TXREG           equ	4013	;# 
   325   000FAD                     TXREG1          equ	4013	;# 
   326   000FAE                     RCREG           equ	4014	;# 
   327   000FAE                     RCREG1          equ	4014	;# 
   328   000FAF                     SPBRG           equ	4015	;# 
   329   000FAF                     SPBRG1          equ	4015	;# 
   330   000FB0                     SPBRGH          equ	4016	;# 
   331   000FB1                     T3CON           equ	4017	;# 
   332   000FB2                     TMR3            equ	4018	;# 
   333   000FB2                     TMR3L           equ	4018	;# 
   334   000FB3                     TMR3H           equ	4019	;# 
   335   000FB4                     CVRCON2         equ	4020	;# 
   336   000FB5                     CVRCON          equ	4021	;# 
   337   000FB6                     ECCP1AS         equ	4022	;# 
   338   000FB7                     PWM1CON         equ	4023	;# 
   339   000FB8                     BAUDCON         equ	4024	;# 
   340   000FB8                     BAUDCTL         equ	4024	;# 
   341   000FB9                     PSTRCON         equ	4025	;# 
   342   000FBA                     CCP2CON         equ	4026	;# 
   343   000FBB                     CCPR2           equ	4027	;# 
   344   000FBB                     CCPR2L          equ	4027	;# 
   345   000FBC                     CCPR2H          equ	4028	;# 
   346   000FBD                     CCP1CON         equ	4029	;# 
   347   000FBE                     CCPR1           equ	4030	;# 
   348   000FBE                     CCPR1L          equ	4030	;# 
   349   000FBF                     CCPR1H          equ	4031	;# 
   350   000FC0                     ADCON2          equ	4032	;# 
   351   000FC1                     ADCON1          equ	4033	;# 
   352   000FC2                     ADCON0          equ	4034	;# 
   353   000FC3                     ADRES           equ	4035	;# 
   354   000FC3                     ADRESL          equ	4035	;# 
   355   000FC4                     ADRESH          equ	4036	;# 
   356   000FC5                     SSPCON2         equ	4037	;# 
   357   000FC6                     SSPCON1         equ	4038	;# 
   358   000FC7                     SSPSTAT         equ	4039	;# 
   359   000FC8                     SSPADD          equ	4040	;# 
   360   000FC9                     SSPBUF          equ	4041	;# 
   361   000FCA                     T2CON           equ	4042	;# 
   362   000FCB                     PR2             equ	4043	;# 
   363   000FCB                     MEMCON          equ	4043	;# 
   364   000FCC                     TMR2            equ	4044	;# 
   365   000FCD                     T1CON           equ	4045	;# 
   366   000FCE                     TMR1            equ	4046	;# 
   367   000FCE                     TMR1L           equ	4046	;# 
   368   000FCF                     TMR1H           equ	4047	;# 
   369   000FD0                     RCON            equ	4048	;# 
   370   000FD1                     WDTCON          equ	4049	;# 
   371   000FD2                     HLVDCON         equ	4050	;# 
   372   000FD2                     LVDCON          equ	4050	;# 
   373   000FD3                     OSCCON          equ	4051	;# 
   374   000FD5                     T0CON           equ	4053	;# 
   375   000FD6                     TMR0            equ	4054	;# 
   376   000FD6                     TMR0L           equ	4054	;# 
   377   000FD7                     TMR0H           equ	4055	;# 
   378   000FD8                     STATUS          equ	4056	;# 
   379   000FD9                     FSR2            equ	4057	;# 
   380   000FD9                     FSR2L           equ	4057	;# 
   381   000FDA                     FSR2H           equ	4058	;# 
   382   000FDB                     PLUSW2          equ	4059	;# 
   383   000FDC                     PREINC2         equ	4060	;# 
   384   000FDD                     POSTDEC2        equ	4061	;# 
   385   000FDE                     POSTINC2        equ	4062	;# 
   386   000FDF                     INDF2           equ	4063	;# 
   387   000FE0                     BSR             equ	4064	;# 
   388   000FE1                     FSR1            equ	4065	;# 
   389   000FE1                     FSR1L           equ	4065	;# 
   390   000FE2                     FSR1H           equ	4066	;# 
   391   000FE3                     PLUSW1          equ	4067	;# 
   392   000FE4                     PREINC1         equ	4068	;# 
   393   000FE5                     POSTDEC1        equ	4069	;# 
   394   000FE6                     POSTINC1        equ	4070	;# 
   395   000FE7                     INDF1           equ	4071	;# 
   396   000FE8                     WREG            equ	4072	;# 
   397   000FE9                     FSR0            equ	4073	;# 
   398   000FE9                     FSR0L           equ	4073	;# 
   399   000FEA                     FSR0H           equ	4074	;# 
   400   000FEB                     PLUSW0          equ	4075	;# 
   401   000FEC                     PREINC0         equ	4076	;# 
   402   000FED                     POSTDEC0        equ	4077	;# 
   403   000FEE                     POSTINC0        equ	4078	;# 
   404   000FEF                     INDF0           equ	4079	;# 
   405   000FF0                     INTCON3         equ	4080	;# 
   406   000FF1                     INTCON2         equ	4081	;# 
   407   000FF2                     INTCON          equ	4082	;# 
   408   000FF3                     PROD            equ	4083	;# 
   409   000FF3                     PRODL           equ	4083	;# 
   410   000FF4                     PRODH           equ	4084	;# 
   411   000FF5                     TABLAT          equ	4085	;# 
   412   000FF6                     TBLPTR          equ	4086	;# 
   413   000FF6                     TBLPTRL         equ	4086	;# 
   414   000FF7                     TBLPTRH         equ	4087	;# 
   415   000FF8                     TBLPTRU         equ	4088	;# 
   416   000FF9                     PCLAT           equ	4089	;# 
   417   000FF9                     PC              equ	4089	;# 
   418   000FF9                     PCL             equ	4089	;# 
   419   000FFA                     PCLATH          equ	4090	;# 
   420   000FFB                     PCLATU          equ	4091	;# 
   421   000FFC                     STKPTR          equ	4092	;# 
   422   000FFD                     TOS             equ	4093	;# 
   423   000FFD                     TOSL            equ	4093	;# 
   424   000FFE                     TOSH            equ	4094	;# 
   425   000FFF                     TOSU            equ	4095	;# 
   426   000F77                     SSPMSK          equ	3959	;# 
   427   000F78                     SLRCON          equ	3960	;# 
   428   000F79                     CM2CON1         equ	3961	;# 
   429   000F7A                     CM2CON0         equ	3962	;# 
   430   000F7B                     CM1CON0         equ	3963	;# 
   431   000F7C                     WPUB            equ	3964	;# 
   432   000F7D                     IOCB            equ	3965	;# 
   433   000F7E                     ANSEL           equ	3966	;# 
   434   000F7F                     ANSELH          equ	3967	;# 
   435   000F80                     PORTA           equ	3968	;# 
   436   000F81                     PORTB           equ	3969	;# 
   437   000F82                     PORTC           equ	3970	;# 
   438   000F83                     PORTD           equ	3971	;# 
   439   000F84                     PORTE           equ	3972	;# 
   440   000F89                     LATA            equ	3977	;# 
   441   000F8A                     LATB            equ	3978	;# 
   442   000F8B                     LATC            equ	3979	;# 
   443   000F8C                     LATD            equ	3980	;# 
   444   000F8D                     LATE            equ	3981	;# 
   445   000F92                     TRISA           equ	3986	;# 
   446   000F92                     DDRA            equ	3986	;# 
   447   000F93                     TRISB           equ	3987	;# 
   448   000F93                     DDRB            equ	3987	;# 
   449   000F94                     TRISC           equ	3988	;# 
   450   000F94                     DDRC            equ	3988	;# 
   451   000F95                     TRISD           equ	3989	;# 
   452   000F95                     DDRD            equ	3989	;# 
   453   000F96                     TRISE           equ	3990	;# 
   454   000F96                     DDRE            equ	3990	;# 
   455   000F9B                     OSCTUNE         equ	3995	;# 
   456   000F9D                     PIE1            equ	3997	;# 
   457   000F9E                     PIR1            equ	3998	;# 
   458   000F9F                     IPR1            equ	3999	;# 
   459   000FA0                     PIE2            equ	4000	;# 
   460   000FA1                     PIR2            equ	4001	;# 
   461   000FA2                     IPR2            equ	4002	;# 
   462   000FA6                     EECON1          equ	4006	;# 
   463   000FA7                     EECON2          equ	4007	;# 
   464   000FA8                     EEDATA          equ	4008	;# 
   465   000FA9                     EEADR           equ	4009	;# 
   466   000FAA                     EEADRH          equ	4010	;# 
   467   000FAB                     RCSTA           equ	4011	;# 
   468   000FAB                     RCSTA1          equ	4011	;# 
   469   000FAC                     TXSTA           equ	4012	;# 
   470   000FAC                     TXSTA1          equ	4012	;# 
   471   000FAD                     TXREG           equ	4013	;# 
   472   000FAD                     TXREG1          equ	4013	;# 
   473   000FAE                     RCREG           equ	4014	;# 
   474   000FAE                     RCREG1          equ	4014	;# 
   475   000FAF                     SPBRG           equ	4015	;# 
   476   000FAF                     SPBRG1          equ	4015	;# 
   477   000FB0                     SPBRGH          equ	4016	;# 
   478   000FB1                     T3CON           equ	4017	;# 
   479   000FB2                     TMR3            equ	4018	;# 
   480   000FB2                     TMR3L           equ	4018	;# 
   481   000FB3                     TMR3H           equ	4019	;# 
   482   000FB4                     CVRCON2         equ	4020	;# 
   483   000FB5                     CVRCON          equ	4021	;# 
   484   000FB6                     ECCP1AS         equ	4022	;# 
   485   000FB7                     PWM1CON         equ	4023	;# 
   486   000FB8                     BAUDCON         equ	4024	;# 
   487   000FB8                     BAUDCTL         equ	4024	;# 
   488   000FB9                     PSTRCON         equ	4025	;# 
   489   000FBA                     CCP2CON         equ	4026	;# 
   490   000FBB                     CCPR2           equ	4027	;# 
   491   000FBB                     CCPR2L          equ	4027	;# 
   492   000FBC                     CCPR2H          equ	4028	;# 
   493   000FBD                     CCP1CON         equ	4029	;# 
   494   000FBE                     CCPR1           equ	4030	;# 
   495   000FBE                     CCPR1L          equ	4030	;# 
   496   000FBF                     CCPR1H          equ	4031	;# 
   497   000FC0                     ADCON2          equ	4032	;# 
   498   000FC1                     ADCON1          equ	4033	;# 
   499   000FC2                     ADCON0          equ	4034	;# 
   500   000FC3                     ADRES           equ	4035	;# 
   501   000FC3                     ADRESL          equ	4035	;# 
   502   000FC4                     ADRESH          equ	4036	;# 
   503   000FC5                     SSPCON2         equ	4037	;# 
   504   000FC6                     SSPCON1         equ	4038	;# 
   505   000FC7                     SSPSTAT         equ	4039	;# 
   506   000FC8                     SSPADD          equ	4040	;# 
   507   000FC9                     SSPBUF          equ	4041	;# 
   508   000FCA                     T2CON           equ	4042	;# 
   509   000FCB                     PR2             equ	4043	;# 
   510   000FCB                     MEMCON          equ	4043	;# 
   511   000FCC                     TMR2            equ	4044	;# 
   512   000FCD                     T1CON           equ	4045	;# 
   513   000FCE                     TMR1            equ	4046	;# 
   514   000FCE                     TMR1L           equ	4046	;# 
   515   000FCF                     TMR1H           equ	4047	;# 
   516   000FD0                     RCON            equ	4048	;# 
   517   000FD1                     WDTCON          equ	4049	;# 
   518   000FD2                     HLVDCON         equ	4050	;# 
   519   000FD2                     LVDCON          equ	4050	;# 
   520   000FD3                     OSCCON          equ	4051	;# 
   521   000FD5                     T0CON           equ	4053	;# 
   522   000FD6                     TMR0            equ	4054	;# 
   523   000FD6                     TMR0L           equ	4054	;# 
   524   000FD7                     TMR0H           equ	4055	;# 
   525   000FD8                     STATUS          equ	4056	;# 
   526   000FD9                     FSR2            equ	4057	;# 
   527   000FD9                     FSR2L           equ	4057	;# 
   528   000FDA                     FSR2H           equ	4058	;# 
   529   000FDB                     PLUSW2          equ	4059	;# 
   530   000FDC                     PREINC2         equ	4060	;# 
   531   000FDD                     POSTDEC2        equ	4061	;# 
   532   000FDE                     POSTINC2        equ	4062	;# 
   533   000FDF                     INDF2           equ	4063	;# 
   534   000FE0                     BSR             equ	4064	;# 
   535   000FE1                     FSR1            equ	4065	;# 
   536   000FE1                     FSR1L           equ	4065	;# 
   537   000FE2                     FSR1H           equ	4066	;# 
   538   000FE3                     PLUSW1          equ	4067	;# 
   539   000FE4                     PREINC1         equ	4068	;# 
   540   000FE5                     POSTDEC1        equ	4069	;# 
   541   000FE6                     POSTINC1        equ	4070	;# 
   542   000FE7                     INDF1           equ	4071	;# 
   543   000FE8                     WREG            equ	4072	;# 
   544   000FE9                     FSR0            equ	4073	;# 
   545   000FE9                     FSR0L           equ	4073	;# 
   546   000FEA                     FSR0H           equ	4074	;# 
   547   000FEB                     PLUSW0          equ	4075	;# 
   548   000FEC                     PREINC0         equ	4076	;# 
   549   000FED                     POSTDEC0        equ	4077	;# 
   550   000FEE                     POSTINC0        equ	4078	;# 
   551   000FEF                     INDF0           equ	4079	;# 
   552   000FF0                     INTCON3         equ	4080	;# 
   553   000FF1                     INTCON2         equ	4081	;# 
   554   000FF2                     INTCON          equ	4082	;# 
   555   000FF3                     PROD            equ	4083	;# 
   556   000FF3                     PRODL           equ	4083	;# 
   557   000FF4                     PRODH           equ	4084	;# 
   558   000FF5                     TABLAT          equ	4085	;# 
   559   000FF6                     TBLPTR          equ	4086	;# 
   560   000FF6                     TBLPTRL         equ	4086	;# 
   561   000FF7                     TBLPTRH         equ	4087	;# 
   562   000FF8                     TBLPTRU         equ	4088	;# 
   563   000FF9                     PCLAT           equ	4089	;# 
   564   000FF9                     PC              equ	4089	;# 
   565   000FF9                     PCL             equ	4089	;# 
   566   000FFA                     PCLATH          equ	4090	;# 
   567   000FFB                     PCLATU          equ	4091	;# 
   568   000FFC                     STKPTR          equ	4092	;# 
   569   000FFD                     TOS             equ	4093	;# 
   570   000FFD                     TOSL            equ	4093	;# 
   571   000FFE                     TOSH            equ	4094	;# 
   572   000FFF                     TOSU            equ	4095	;# 
   573   000F77                     SSPMSK          equ	3959	;# 
   574   000F78                     SLRCON          equ	3960	;# 
   575   000F79                     CM2CON1         equ	3961	;# 
   576   000F7A                     CM2CON0         equ	3962	;# 
   577   000F7B                     CM1CON0         equ	3963	;# 
   578   000F7C                     WPUB            equ	3964	;# 
   579   000F7D                     IOCB            equ	3965	;# 
   580   000F7E                     ANSEL           equ	3966	;# 
   581   000F7F                     ANSELH          equ	3967	;# 
   582   000F80                     PORTA           equ	3968	;# 
   583   000F81                     PORTB           equ	3969	;# 
   584   000F82                     PORTC           equ	3970	;# 
   585   000F83                     PORTD           equ	3971	;# 
   586   000F84                     PORTE           equ	3972	;# 
   587   000F89                     LATA            equ	3977	;# 
   588   000F8A                     LATB            equ	3978	;# 
   589   000F8B                     LATC            equ	3979	;# 
   590   000F8C                     LATD            equ	3980	;# 
   591   000F8D                     LATE            equ	3981	;# 
   592   000F92                     TRISA           equ	3986	;# 
   593   000F92                     DDRA            equ	3986	;# 
   594   000F93                     TRISB           equ	3987	;# 
   595   000F93                     DDRB            equ	3987	;# 
   596   000F94                     TRISC           equ	3988	;# 
   597   000F94                     DDRC            equ	3988	;# 
   598   000F95                     TRISD           equ	3989	;# 
   599   000F95                     DDRD            equ	3989	;# 
   600   000F96                     TRISE           equ	3990	;# 
   601   000F96                     DDRE            equ	3990	;# 
   602   000F9B                     OSCTUNE         equ	3995	;# 
   603   000F9D                     PIE1            equ	3997	;# 
   604   000F9E                     PIR1            equ	3998	;# 
   605   000F9F                     IPR1            equ	3999	;# 
   606   000FA0                     PIE2            equ	4000	;# 
   607   000FA1                     PIR2            equ	4001	;# 
   608   000FA2                     IPR2            equ	4002	;# 
   609   000FA6                     EECON1          equ	4006	;# 
   610   000FA7                     EECON2          equ	4007	;# 
   611   000FA8                     EEDATA          equ	4008	;# 
   612   000FA9                     EEADR           equ	4009	;# 
   613   000FAA                     EEADRH          equ	4010	;# 
   614   000FAB                     RCSTA           equ	4011	;# 
   615   000FAB                     RCSTA1          equ	4011	;# 
   616   000FAC                     TXSTA           equ	4012	;# 
   617   000FAC                     TXSTA1          equ	4012	;# 
   618   000FAD                     TXREG           equ	4013	;# 
   619   000FAD                     TXREG1          equ	4013	;# 
   620   000FAE                     RCREG           equ	4014	;# 
   621   000FAE                     RCREG1          equ	4014	;# 
   622   000FAF                     SPBRG           equ	4015	;# 
   623   000FAF                     SPBRG1          equ	4015	;# 
   624   000FB0                     SPBRGH          equ	4016	;# 
   625   000FB1                     T3CON           equ	4017	;# 
   626   000FB2                     TMR3            equ	4018	;# 
   627   000FB2                     TMR3L           equ	4018	;# 
   628   000FB3                     TMR3H           equ	4019	;# 
   629   000FB4                     CVRCON2         equ	4020	;# 
   630   000FB5                     CVRCON          equ	4021	;# 
   631   000FB6                     ECCP1AS         equ	4022	;# 
   632   000FB7                     PWM1CON         equ	4023	;# 
   633   000FB8                     BAUDCON         equ	4024	;# 
   634   000FB8                     BAUDCTL         equ	4024	;# 
   635   000FB9                     PSTRCON         equ	4025	;# 
   636   000FBA                     CCP2CON         equ	4026	;# 
   637   000FBB                     CCPR2           equ	4027	;# 
   638   000FBB                     CCPR2L          equ	4027	;# 
   639   000FBC                     CCPR2H          equ	4028	;# 
   640   000FBD                     CCP1CON         equ	4029	;# 
   641   000FBE                     CCPR1           equ	4030	;# 
   642   000FBE                     CCPR1L          equ	4030	;# 
   643   000FBF                     CCPR1H          equ	4031	;# 
   644   000FC0                     ADCON2          equ	4032	;# 
   645   000FC1                     ADCON1          equ	4033	;# 
   646   000FC2                     ADCON0          equ	4034	;# 
   647   000FC3                     ADRES           equ	4035	;# 
   648   000FC3                     ADRESL          equ	4035	;# 
   649   000FC4                     ADRESH          equ	4036	;# 
   650   000FC5                     SSPCON2         equ	4037	;# 
   651   000FC6                     SSPCON1         equ	4038	;# 
   652   000FC7                     SSPSTAT         equ	4039	;# 
   653   000FC8                     SSPADD          equ	4040	;# 
   654   000FC9                     SSPBUF          equ	4041	;# 
   655   000FCA                     T2CON           equ	4042	;# 
   656   000FCB                     PR2             equ	4043	;# 
   657   000FCB                     MEMCON          equ	4043	;# 
   658   000FCC                     TMR2            equ	4044	;# 
   659   000FCD                     T1CON           equ	4045	;# 
   660   000FCE                     TMR1            equ	4046	;# 
   661   000FCE                     TMR1L           equ	4046	;# 
   662   000FCF                     TMR1H           equ	4047	;# 
   663   000FD0                     RCON            equ	4048	;# 
   664   000FD1                     WDTCON          equ	4049	;# 
   665   000FD2                     HLVDCON         equ	4050	;# 
   666   000FD2                     LVDCON          equ	4050	;# 
   667   000FD3                     OSCCON          equ	4051	;# 
   668   000FD5                     T0CON           equ	4053	;# 
   669   000FD6                     TMR0            equ	4054	;# 
   670   000FD6                     TMR0L           equ	4054	;# 
   671   000FD7                     TMR0H           equ	4055	;# 
   672   000FD8                     STATUS          equ	4056	;# 
   673   000FD9                     FSR2            equ	4057	;# 
   674   000FD9                     FSR2L           equ	4057	;# 
   675   000FDA                     FSR2H           equ	4058	;# 
   676   000FDB                     PLUSW2          equ	4059	;# 
   677   000FDC                     PREINC2         equ	4060	;# 
   678   000FDD                     POSTDEC2        equ	4061	;# 
   679   000FDE                     POSTINC2        equ	4062	;# 
   680   000FDF                     INDF2           equ	4063	;# 
   681   000FE0                     BSR             equ	4064	;# 
   682   000FE1                     FSR1            equ	4065	;# 
   683   000FE1                     FSR1L           equ	4065	;# 
   684   000FE2                     FSR1H           equ	4066	;# 
   685   000FE3                     PLUSW1          equ	4067	;# 
   686   000FE4                     PREINC1         equ	4068	;# 
   687   000FE5                     POSTDEC1        equ	4069	;# 
   688   000FE6                     POSTINC1        equ	4070	;# 
   689   000FE7                     INDF1           equ	4071	;# 
   690   000FE8                     WREG            equ	4072	;# 
   691   000FE9                     FSR0            equ	4073	;# 
   692   000FE9                     FSR0L           equ	4073	;# 
   693   000FEA                     FSR0H           equ	4074	;# 
   694   000FEB                     PLUSW0          equ	4075	;# 
   695   000FEC                     PREINC0         equ	4076	;# 
   696   000FED                     POSTDEC0        equ	4077	;# 
   697   000FEE                     POSTINC0        equ	4078	;# 
   698   000FEF                     INDF0           equ	4079	;# 
   699   000FF0                     INTCON3         equ	4080	;# 
   700   000FF1                     INTCON2         equ	4081	;# 
   701   000FF2                     INTCON          equ	4082	;# 
   702   000FF3                     PROD            equ	4083	;# 
   703   000FF3                     PRODL           equ	4083	;# 
   704   000FF4                     PRODH           equ	4084	;# 
   705   000FF5                     TABLAT          equ	4085	;# 
   706   000FF6                     TBLPTR          equ	4086	;# 
   707   000FF6                     TBLPTRL         equ	4086	;# 
   708   000FF7                     TBLPTRH         equ	4087	;# 
   709   000FF8                     TBLPTRU         equ	4088	;# 
   710   000FF9                     PCLAT           equ	4089	;# 
   711   000FF9                     PC              equ	4089	;# 
   712   000FF9                     PCL             equ	4089	;# 
   713   000FFA                     PCLATH          equ	4090	;# 
   714   000FFB                     PCLATU          equ	4091	;# 
   715   000FFC                     STKPTR          equ	4092	;# 
   716   000FFD                     TOS             equ	4093	;# 
   717   000FFD                     TOSL            equ	4093	;# 
   718   000FFE                     TOSH            equ	4094	;# 
   719   000FFF                     TOSU            equ	4095	;# 
   720   000F77                     SSPMSK          equ	3959	;# 
   721   000F78                     SLRCON          equ	3960	;# 
   722   000F79                     CM2CON1         equ	3961	;# 
   723   000F7A                     CM2CON0         equ	3962	;# 
   724   000F7B                     CM1CON0         equ	3963	;# 
   725   000F7C                     WPUB            equ	3964	;# 
   726   000F7D                     IOCB            equ	3965	;# 
   727   000F7E                     ANSEL           equ	3966	;# 
   728   000F7F                     ANSELH          equ	3967	;# 
   729   000F80                     PORTA           equ	3968	;# 
   730   000F81                     PORTB           equ	3969	;# 
   731   000F82                     PORTC           equ	3970	;# 
   732   000F83                     PORTD           equ	3971	;# 
   733   000F84                     PORTE           equ	3972	;# 
   734   000F89                     LATA            equ	3977	;# 
   735   000F8A                     LATB            equ	3978	;# 
   736   000F8B                     LATC            equ	3979	;# 
   737   000F8C                     LATD            equ	3980	;# 
   738   000F8D                     LATE            equ	3981	;# 
   739   000F92                     TRISA           equ	3986	;# 
   740   000F92                     DDRA            equ	3986	;# 
   741   000F93                     TRISB           equ	3987	;# 
   742   000F93                     DDRB            equ	3987	;# 
   743   000F94                     TRISC           equ	3988	;# 
   744   000F94                     DDRC            equ	3988	;# 
   745   000F95                     TRISD           equ	3989	;# 
   746   000F95                     DDRD            equ	3989	;# 
   747   000F96                     TRISE           equ	3990	;# 
   748   000F96                     DDRE            equ	3990	;# 
   749   000F9B                     OSCTUNE         equ	3995	;# 
   750   000F9D                     PIE1            equ	3997	;# 
   751   000F9E                     PIR1            equ	3998	;# 
   752   000F9F                     IPR1            equ	3999	;# 
   753   000FA0                     PIE2            equ	4000	;# 
   754   000FA1                     PIR2            equ	4001	;# 
   755   000FA2                     IPR2            equ	4002	;# 
   756   000FA6                     EECON1          equ	4006	;# 
   757   000FA7                     EECON2          equ	4007	;# 
   758   000FA8                     EEDATA          equ	4008	;# 
   759   000FA9                     EEADR           equ	4009	;# 
   760   000FAA                     EEADRH          equ	4010	;# 
   761   000FAB                     RCSTA           equ	4011	;# 
   762   000FAB                     RCSTA1          equ	4011	;# 
   763   000FAC                     TXSTA           equ	4012	;# 
   764   000FAC                     TXSTA1          equ	4012	;# 
   765   000FAD                     TXREG           equ	4013	;# 
   766   000FAD                     TXREG1          equ	4013	;# 
   767   000FAE                     RCREG           equ	4014	;# 
   768   000FAE                     RCREG1          equ	4014	;# 
   769   000FAF                     SPBRG           equ	4015	;# 
   770   000FAF                     SPBRG1          equ	4015	;# 
   771   000FB0                     SPBRGH          equ	4016	;# 
   772   000FB1                     T3CON           equ	4017	;# 
   773   000FB2                     TMR3            equ	4018	;# 
   774   000FB2                     TMR3L           equ	4018	;# 
   775   000FB3                     TMR3H           equ	4019	;# 
   776   000FB4                     CVRCON2         equ	4020	;# 
   777   000FB5                     CVRCON          equ	4021	;# 
   778   000FB6                     ECCP1AS         equ	4022	;# 
   779   000FB7                     PWM1CON         equ	4023	;# 
   780   000FB8                     BAUDCON         equ	4024	;# 
   781   000FB8                     BAUDCTL         equ	4024	;# 
   782   000FB9                     PSTRCON         equ	4025	;# 
   783   000FBA                     CCP2CON         equ	4026	;# 
   784   000FBB                     CCPR2           equ	4027	;# 
   785   000FBB                     CCPR2L          equ	4027	;# 
   786   000FBC                     CCPR2H          equ	4028	;# 
   787   000FBD                     CCP1CON         equ	4029	;# 
   788   000FBE                     CCPR1           equ	4030	;# 
   789   000FBE                     CCPR1L          equ	4030	;# 
   790   000FBF                     CCPR1H          equ	4031	;# 
   791   000FC0                     ADCON2          equ	4032	;# 
   792   000FC1                     ADCON1          equ	4033	;# 
   793   000FC2                     ADCON0          equ	4034	;# 
   794   000FC3                     ADRES           equ	4035	;# 
   795   000FC3                     ADRESL          equ	4035	;# 
   796   000FC4                     ADRESH          equ	4036	;# 
   797   000FC5                     SSPCON2         equ	4037	;# 
   798   000FC6                     SSPCON1         equ	4038	;# 
   799   000FC7                     SSPSTAT         equ	4039	;# 
   800   000FC8                     SSPADD          equ	4040	;# 
   801   000FC9                     SSPBUF          equ	4041	;# 
   802   000FCA                     T2CON           equ	4042	;# 
   803   000FCB                     PR2             equ	4043	;# 
   804   000FCB                     MEMCON          equ	4043	;# 
   805   000FCC                     TMR2            equ	4044	;# 
   806   000FCD                     T1CON           equ	4045	;# 
   807   000FCE                     TMR1            equ	4046	;# 
   808   000FCE                     TMR1L           equ	4046	;# 
   809   000FCF                     TMR1H           equ	4047	;# 
   810   000FD0                     RCON            equ	4048	;# 
   811   000FD1                     WDTCON          equ	4049	;# 
   812   000FD2                     HLVDCON         equ	4050	;# 
   813   000FD2                     LVDCON          equ	4050	;# 
   814   000FD3                     OSCCON          equ	4051	;# 
   815   000FD5                     T0CON           equ	4053	;# 
   816   000FD6                     TMR0            equ	4054	;# 
   817   000FD6                     TMR0L           equ	4054	;# 
   818   000FD7                     TMR0H           equ	4055	;# 
   819   000FD8                     STATUS          equ	4056	;# 
   820   000FD9                     FSR2            equ	4057	;# 
   821   000FD9                     FSR2L           equ	4057	;# 
   822   000FDA                     FSR2H           equ	4058	;# 
   823   000FDB                     PLUSW2          equ	4059	;# 
   824   000FDC                     PREINC2         equ	4060	;# 
   825   000FDD                     POSTDEC2        equ	4061	;# 
   826   000FDE                     POSTINC2        equ	4062	;# 
   827   000FDF                     INDF2           equ	4063	;# 
   828   000FE0                     BSR             equ	4064	;# 
   829   000FE1                     FSR1            equ	4065	;# 
   830   000FE1                     FSR1L           equ	4065	;# 
   831   000FE2                     FSR1H           equ	4066	;# 
   832   000FE3                     PLUSW1          equ	4067	;# 
   833   000FE4                     PREINC1         equ	4068	;# 
   834   000FE5                     POSTDEC1        equ	4069	;# 
   835   000FE6                     POSTINC1        equ	4070	;# 
   836   000FE7                     INDF1           equ	4071	;# 
   837   000FE8                     WREG            equ	4072	;# 
   838   000FE9                     FSR0            equ	4073	;# 
   839   000FE9                     FSR0L           equ	4073	;# 
   840   000FEA                     FSR0H           equ	4074	;# 
   841   000FEB                     PLUSW0          equ	4075	;# 
   842   000FEC                     PREINC0         equ	4076	;# 
   843   000FED                     POSTDEC0        equ	4077	;# 
   844   000FEE                     POSTINC0        equ	4078	;# 
   845   000FEF                     INDF0           equ	4079	;# 
   846   000FF0                     INTCON3         equ	4080	;# 
   847   000FF1                     INTCON2         equ	4081	;# 
   848   000FF2                     INTCON          equ	4082	;# 
   849   000FF3                     PROD            equ	4083	;# 
   850   000FF3                     PRODL           equ	4083	;# 
   851   000FF4                     PRODH           equ	4084	;# 
   852   000FF5                     TABLAT          equ	4085	;# 
   853   000FF6                     TBLPTR          equ	4086	;# 
   854   000FF6                     TBLPTRL         equ	4086	;# 
   855   000FF7                     TBLPTRH         equ	4087	;# 
   856   000FF8                     TBLPTRU         equ	4088	;# 
   857   000FF9                     PCLAT           equ	4089	;# 
   858   000FF9                     PC              equ	4089	;# 
   859   000FF9                     PCL             equ	4089	;# 
   860   000FFA                     PCLATH          equ	4090	;# 
   861   000FFB                     PCLATU          equ	4091	;# 
   862   000FFC                     STKPTR          equ	4092	;# 
   863   000FFD                     TOS             equ	4093	;# 
   864   000FFD                     TOSL            equ	4093	;# 
   865   000FFE                     TOSH            equ	4094	;# 
   866   000FFF                     TOSU            equ	4095	;# 
   867   000F77                     SSPMSK          equ	3959	;# 
   868   000F78                     SLRCON          equ	3960	;# 
   869   000F79                     CM2CON1         equ	3961	;# 
   870   000F7A                     CM2CON0         equ	3962	;# 
   871   000F7B                     CM1CON0         equ	3963	;# 
   872   000F7C                     WPUB            equ	3964	;# 
   873   000F7D                     IOCB            equ	3965	;# 
   874   000F7E                     ANSEL           equ	3966	;# 
   875   000F7F                     ANSELH          equ	3967	;# 
   876   000F80                     PORTA           equ	3968	;# 
   877   000F81                     PORTB           equ	3969	;# 
   878   000F82                     PORTC           equ	3970	;# 
   879   000F83                     PORTD           equ	3971	;# 
   880   000F84                     PORTE           equ	3972	;# 
   881   000F89                     LATA            equ	3977	;# 
   882   000F8A                     LATB            equ	3978	;# 
   883   000F8B                     LATC            equ	3979	;# 
   884   000F8C                     LATD            equ	3980	;# 
   885   000F8D                     LATE            equ	3981	;# 
   886   000F92                     TRISA           equ	3986	;# 
   887   000F92                     DDRA            equ	3986	;# 
   888   000F93                     TRISB           equ	3987	;# 
   889   000F93                     DDRB            equ	3987	;# 
   890   000F94                     TRISC           equ	3988	;# 
   891   000F94                     DDRC            equ	3988	;# 
   892   000F95                     TRISD           equ	3989	;# 
   893   000F95                     DDRD            equ	3989	;# 
   894   000F96                     TRISE           equ	3990	;# 
   895   000F96                     DDRE            equ	3990	;# 
   896   000F9B                     OSCTUNE         equ	3995	;# 
   897   000F9D                     PIE1            equ	3997	;# 
   898   000F9E                     PIR1            equ	3998	;# 
   899   000F9F                     IPR1            equ	3999	;# 
   900   000FA0                     PIE2            equ	4000	;# 
   901   000FA1                     PIR2            equ	4001	;# 
   902   000FA2                     IPR2            equ	4002	;# 
   903   000FA6                     EECON1          equ	4006	;# 
   904   000FA7                     EECON2          equ	4007	;# 
   905   000FA8                     EEDATA          equ	4008	;# 
   906   000FA9                     EEADR           equ	4009	;# 
   907   000FAA                     EEADRH          equ	4010	;# 
   908   000FAB                     RCSTA           equ	4011	;# 
   909   000FAB                     RCSTA1          equ	4011	;# 
   910   000FAC                     TXSTA           equ	4012	;# 
   911   000FAC                     TXSTA1          equ	4012	;# 
   912   000FAD                     TXREG           equ	4013	;# 
   913   000FAD                     TXREG1          equ	4013	;# 
   914   000FAE                     RCREG           equ	4014	;# 
   915   000FAE                     RCREG1          equ	4014	;# 
   916   000FAF                     SPBRG           equ	4015	;# 
   917   000FAF                     SPBRG1          equ	4015	;# 
   918   000FB0                     SPBRGH          equ	4016	;# 
   919   000FB1                     T3CON           equ	4017	;# 
   920   000FB2                     TMR3            equ	4018	;# 
   921   000FB2                     TMR3L           equ	4018	;# 
   922   000FB3                     TMR3H           equ	4019	;# 
   923   000FB4                     CVRCON2         equ	4020	;# 
   924   000FB5                     CVRCON          equ	4021	;# 
   925   000FB6                     ECCP1AS         equ	4022	;# 
   926   000FB7                     PWM1CON         equ	4023	;# 
   927   000FB8                     BAUDCON         equ	4024	;# 
   928   000FB8                     BAUDCTL         equ	4024	;# 
   929   000FB9                     PSTRCON         equ	4025	;# 
   930   000FBA                     CCP2CON         equ	4026	;# 
   931   000FBB                     CCPR2           equ	4027	;# 
   932   000FBB                     CCPR2L          equ	4027	;# 
   933   000FBC                     CCPR2H          equ	4028	;# 
   934   000FBD                     CCP1CON         equ	4029	;# 
   935   000FBE                     CCPR1           equ	4030	;# 
   936   000FBE                     CCPR1L          equ	4030	;# 
   937   000FBF                     CCPR1H          equ	4031	;# 
   938   000FC0                     ADCON2          equ	4032	;# 
   939   000FC1                     ADCON1          equ	4033	;# 
   940   000FC2                     ADCON0          equ	4034	;# 
   941   000FC3                     ADRES           equ	4035	;# 
   942   000FC3                     ADRESL          equ	4035	;# 
   943   000FC4                     ADRESH          equ	4036	;# 
   944   000FC5                     SSPCON2         equ	4037	;# 
   945   000FC6                     SSPCON1         equ	4038	;# 
   946   000FC7                     SSPSTAT         equ	4039	;# 
   947   000FC8                     SSPADD          equ	4040	;# 
   948   000FC9                     SSPBUF          equ	4041	;# 
   949   000FCA                     T2CON           equ	4042	;# 
   950   000FCB                     PR2             equ	4043	;# 
   951   000FCB                     MEMCON          equ	4043	;# 
   952   000FCC                     TMR2            equ	4044	;# 
   953   000FCD                     T1CON           equ	4045	;# 
   954   000FCE                     TMR1            equ	4046	;# 
   955   000FCE                     TMR1L           equ	4046	;# 
   956   000FCF                     TMR1H           equ	4047	;# 
   957   000FD0                     RCON            equ	4048	;# 
   958   000FD1                     WDTCON          equ	4049	;# 
   959   000FD2                     HLVDCON         equ	4050	;# 
   960   000FD2                     LVDCON          equ	4050	;# 
   961   000FD3                     OSCCON          equ	4051	;# 
   962   000FD5                     T0CON           equ	4053	;# 
   963   000FD6                     TMR0            equ	4054	;# 
   964   000FD6                     TMR0L           equ	4054	;# 
   965   000FD7                     TMR0H           equ	4055	;# 
   966   000FD8                     STATUS          equ	4056	;# 
   967   000FD9                     FSR2            equ	4057	;# 
   968   000FD9                     FSR2L           equ	4057	;# 
   969   000FDA                     FSR2H           equ	4058	;# 
   970   000FDB                     PLUSW2          equ	4059	;# 
   971   000FDC                     PREINC2         equ	4060	;# 
   972   000FDD                     POSTDEC2        equ	4061	;# 
   973   000FDE                     POSTINC2        equ	4062	;# 
   974   000FDF                     INDF2           equ	4063	;# 
   975   000FE0                     BSR             equ	4064	;# 
   976   000FE1                     FSR1            equ	4065	;# 
   977   000FE1                     FSR1L           equ	4065	;# 
   978   000FE2                     FSR1H           equ	4066	;# 
   979   000FE3                     PLUSW1          equ	4067	;# 
   980   000FE4                     PREINC1         equ	4068	;# 
   981   000FE5                     POSTDEC1        equ	4069	;# 
   982   000FE6                     POSTINC1        equ	4070	;# 
   983   000FE7                     INDF1           equ	4071	;# 
   984   000FE8                     WREG            equ	4072	;# 
   985   000FE9                     FSR0            equ	4073	;# 
   986   000FE9                     FSR0L           equ	4073	;# 
   987   000FEA                     FSR0H           equ	4074	;# 
   988   000FEB                     PLUSW0          equ	4075	;# 
   989   000FEC                     PREINC0         equ	4076	;# 
   990   000FED                     POSTDEC0        equ	4077	;# 
   991   000FEE                     POSTINC0        equ	4078	;# 
   992   000FEF                     INDF0           equ	4079	;# 
   993   000FF0                     INTCON3         equ	4080	;# 
   994   000FF1                     INTCON2         equ	4081	;# 
   995   000FF2                     INTCON          equ	4082	;# 
   996   000FF3                     PROD            equ	4083	;# 
   997   000FF3                     PRODL           equ	4083	;# 
   998   000FF4                     PRODH           equ	4084	;# 
   999   000FF5                     TABLAT          equ	4085	;# 
  1000   000FF6                     TBLPTR          equ	4086	;# 
  1001   000FF6                     TBLPTRL         equ	4086	;# 
  1002   000FF7                     TBLPTRH         equ	4087	;# 
  1003   000FF8                     TBLPTRU         equ	4088	;# 
  1004   000FF9                     PCLAT           equ	4089	;# 
  1005   000FF9                     PC              equ	4089	;# 
  1006   000FF9                     PCL             equ	4089	;# 
  1007   000FFA                     PCLATH          equ	4090	;# 
  1008   000FFB                     PCLATU          equ	4091	;# 
  1009   000FFC                     STKPTR          equ	4092	;# 
  1010   000FFD                     TOS             equ	4093	;# 
  1011   000FFD                     TOSL            equ	4093	;# 
  1012   000FFE                     TOSH            equ	4094	;# 
  1013   000FFF                     TOSU            equ	4095	;# 
  1014   000F77                     SSPMSK          equ	3959	;# 
  1015   000F78                     SLRCON          equ	3960	;# 
  1016   000F79                     CM2CON1         equ	3961	;# 
  1017   000F7A                     CM2CON0         equ	3962	;# 
  1018   000F7B                     CM1CON0         equ	3963	;# 
  1019   000F7C                     WPUB            equ	3964	;# 
  1020   000F7D                     IOCB            equ	3965	;# 
  1021   000F7E                     ANSEL           equ	3966	;# 
  1022   000F7F                     ANSELH          equ	3967	;# 
  1023   000F80                     PORTA           equ	3968	;# 
  1024   000F81                     PORTB           equ	3969	;# 
  1025   000F82                     PORTC           equ	3970	;# 
  1026   000F83                     PORTD           equ	3971	;# 
  1027   000F84                     PORTE           equ	3972	;# 
  1028   000F89                     LATA            equ	3977	;# 
  1029   000F8A                     LATB            equ	3978	;# 
  1030   000F8B                     LATC            equ	3979	;# 
  1031   000F8C                     LATD            equ	3980	;# 
  1032   000F8D                     LATE            equ	3981	;# 
  1033   000F92                     TRISA           equ	3986	;# 
  1034   000F92                     DDRA            equ	3986	;# 
  1035   000F93                     TRISB           equ	3987	;# 
  1036   000F93                     DDRB            equ	3987	;# 
  1037   000F94                     TRISC           equ	3988	;# 
  1038   000F94                     DDRC            equ	3988	;# 
  1039   000F95                     TRISD           equ	3989	;# 
  1040   000F95                     DDRD            equ	3989	;# 
  1041   000F96                     TRISE           equ	3990	;# 
  1042   000F96                     DDRE            equ	3990	;# 
  1043   000F9B                     OSCTUNE         equ	3995	;# 
  1044   000F9D                     PIE1            equ	3997	;# 
  1045   000F9E                     PIR1            equ	3998	;# 
  1046   000F9F                     IPR1            equ	3999	;# 
  1047   000FA0                     PIE2            equ	4000	;# 
  1048   000FA1                     PIR2            equ	4001	;# 
  1049   000FA2                     IPR2            equ	4002	;# 
  1050   000FA6                     EECON1          equ	4006	;# 
  1051   000FA7                     EECON2          equ	4007	;# 
  1052   000FA8                     EEDATA          equ	4008	;# 
  1053   000FA9                     EEADR           equ	4009	;# 
  1054   000FAA                     EEADRH          equ	4010	;# 
  1055   000FAB                     RCSTA           equ	4011	;# 
  1056   000FAB                     RCSTA1          equ	4011	;# 
  1057   000FAC                     TXSTA           equ	4012	;# 
  1058   000FAC                     TXSTA1          equ	4012	;# 
  1059   000FAD                     TXREG           equ	4013	;# 
  1060   000FAD                     TXREG1          equ	4013	;# 
  1061   000FAE                     RCREG           equ	4014	;# 
  1062   000FAE                     RCREG1          equ	4014	;# 
  1063   000FAF                     SPBRG           equ	4015	;# 
  1064   000FAF                     SPBRG1          equ	4015	;# 
  1065   000FB0                     SPBRGH          equ	4016	;# 
  1066   000FB1                     T3CON           equ	4017	;# 
  1067   000FB2                     TMR3            equ	4018	;# 
  1068   000FB2                     TMR3L           equ	4018	;# 
  1069   000FB3                     TMR3H           equ	4019	;# 
  1070   000FB4                     CVRCON2         equ	4020	;# 
  1071   000FB5                     CVRCON          equ	4021	;# 
  1072   000FB6                     ECCP1AS         equ	4022	;# 
  1073   000FB7                     PWM1CON         equ	4023	;# 
  1074   000FB8                     BAUDCON         equ	4024	;# 
  1075   000FB8                     BAUDCTL         equ	4024	;# 
  1076   000FB9                     PSTRCON         equ	4025	;# 
  1077   000FBA                     CCP2CON         equ	4026	;# 
  1078   000FBB                     CCPR2           equ	4027	;# 
  1079   000FBB                     CCPR2L          equ	4027	;# 
  1080   000FBC                     CCPR2H          equ	4028	;# 
  1081   000FBD                     CCP1CON         equ	4029	;# 
  1082   000FBE                     CCPR1           equ	4030	;# 
  1083   000FBE                     CCPR1L          equ	4030	;# 
  1084   000FBF                     CCPR1H          equ	4031	;# 
  1085   000FC0                     ADCON2          equ	4032	;# 
  1086   000FC1                     ADCON1          equ	4033	;# 
  1087   000FC2                     ADCON0          equ	4034	;# 
  1088   000FC3                     ADRES           equ	4035	;# 
  1089   000FC3                     ADRESL          equ	4035	;# 
  1090   000FC4                     ADRESH          equ	4036	;# 
  1091   000FC5                     SSPCON2         equ	4037	;# 
  1092   000FC6                     SSPCON1         equ	4038	;# 
  1093   000FC7                     SSPSTAT         equ	4039	;# 
  1094   000FC8                     SSPADD          equ	4040	;# 
  1095   000FC9                     SSPBUF          equ	4041	;# 
  1096   000FCA                     T2CON           equ	4042	;# 
  1097   000FCB                     PR2             equ	4043	;# 
  1098   000FCB                     MEMCON          equ	4043	;# 
  1099   000FCC                     TMR2            equ	4044	;# 
  1100   000FCD                     T1CON           equ	4045	;# 
  1101   000FCE                     TMR1            equ	4046	;# 
  1102   000FCE                     TMR1L           equ	4046	;# 
  1103   000FCF                     TMR1H           equ	4047	;# 
  1104   000FD0                     RCON            equ	4048	;# 
  1105   000FD1                     WDTCON          equ	4049	;# 
  1106   000FD2                     HLVDCON         equ	4050	;# 
  1107   000FD2                     LVDCON          equ	4050	;# 
  1108   000FD3                     OSCCON          equ	4051	;# 
  1109   000FD5                     T0CON           equ	4053	;# 
  1110   000FD6                     TMR0            equ	4054	;# 
  1111   000FD6                     TMR0L           equ	4054	;# 
  1112   000FD7                     TMR0H           equ	4055	;# 
  1113   000FD8                     STATUS          equ	4056	;# 
  1114   000FD9                     FSR2            equ	4057	;# 
  1115   000FD9                     FSR2L           equ	4057	;# 
  1116   000FDA                     FSR2H           equ	4058	;# 
  1117   000FDB                     PLUSW2          equ	4059	;# 
  1118   000FDC                     PREINC2         equ	4060	;# 
  1119   000FDD                     POSTDEC2        equ	4061	;# 
  1120   000FDE                     POSTINC2        equ	4062	;# 
  1121   000FDF                     INDF2           equ	4063	;# 
  1122   000FE0                     BSR             equ	4064	;# 
  1123   000FE1                     FSR1            equ	4065	;# 
  1124   000FE1                     FSR1L           equ	4065	;# 
  1125   000FE2                     FSR1H           equ	4066	;# 
  1126   000FE3                     PLUSW1          equ	4067	;# 
  1127   000FE4                     PREINC1         equ	4068	;# 
  1128   000FE5                     POSTDEC1        equ	4069	;# 
  1129   000FE6                     POSTINC1        equ	4070	;# 
  1130   000FE7                     INDF1           equ	4071	;# 
  1131   000FE8                     WREG            equ	4072	;# 
  1132   000FE9                     FSR0            equ	4073	;# 
  1133   000FE9                     FSR0L           equ	4073	;# 
  1134   000FEA                     FSR0H           equ	4074	;# 
  1135   000FEB                     PLUSW0          equ	4075	;# 
  1136   000FEC                     PREINC0         equ	4076	;# 
  1137   000FED                     POSTDEC0        equ	4077	;# 
  1138   000FEE                     POSTINC0        equ	4078	;# 
  1139   000FEF                     INDF0           equ	4079	;# 
  1140   000FF0                     INTCON3         equ	4080	;# 
  1141   000FF1                     INTCON2         equ	4081	;# 
  1142   000FF2                     INTCON          equ	4082	;# 
  1143   000FF3                     PROD            equ	4083	;# 
  1144   000FF3                     PRODL           equ	4083	;# 
  1145   000FF4                     PRODH           equ	4084	;# 
  1146   000FF5                     TABLAT          equ	4085	;# 
  1147   000FF6                     TBLPTR          equ	4086	;# 
  1148   000FF6                     TBLPTRL         equ	4086	;# 
  1149   000FF7                     TBLPTRH         equ	4087	;# 
  1150   000FF8                     TBLPTRU         equ	4088	;# 
  1151   000FF9                     PCLAT           equ	4089	;# 
  1152   000FF9                     PC              equ	4089	;# 
  1153   000FF9                     PCL             equ	4089	;# 
  1154   000FFA                     PCLATH          equ	4090	;# 
  1155   000FFB                     PCLATU          equ	4091	;# 
  1156   000FFC                     STKPTR          equ	4092	;# 
  1157   000FFD                     TOS             equ	4093	;# 
  1158   000FFD                     TOSL            equ	4093	;# 
  1159   000FFE                     TOSH            equ	4094	;# 
  1160   000FFF                     TOSU            equ	4095	;# 
  1161   000F77                     SSPMSK          equ	3959	;# 
  1162   000F78                     SLRCON          equ	3960	;# 
  1163   000F79                     CM2CON1         equ	3961	;# 
  1164   000F7A                     CM2CON0         equ	3962	;# 
  1165   000F7B                     CM1CON0         equ	3963	;# 
  1166   000F7C                     WPUB            equ	3964	;# 
  1167   000F7D                     IOCB            equ	3965	;# 
  1168   000F7E                     ANSEL           equ	3966	;# 
  1169   000F7F                     ANSELH          equ	3967	;# 
  1170   000F80                     PORTA           equ	3968	;# 
  1171   000F81                     PORTB           equ	3969	;# 
  1172   000F82                     PORTC           equ	3970	;# 
  1173   000F83                     PORTD           equ	3971	;# 
  1174   000F84                     PORTE           equ	3972	;# 
  1175   000F89                     LATA            equ	3977	;# 
  1176   000F8A                     LATB            equ	3978	;# 
  1177   000F8B                     LATC            equ	3979	;# 
  1178   000F8C                     LATD            equ	3980	;# 
  1179   000F8D                     LATE            equ	3981	;# 
  1180   000F92                     TRISA           equ	3986	;# 
  1181   000F92                     DDRA            equ	3986	;# 
  1182   000F93                     TRISB           equ	3987	;# 
  1183   000F93                     DDRB            equ	3987	;# 
  1184   000F94                     TRISC           equ	3988	;# 
  1185   000F94                     DDRC            equ	3988	;# 
  1186   000F95                     TRISD           equ	3989	;# 
  1187   000F95                     DDRD            equ	3989	;# 
  1188   000F96                     TRISE           equ	3990	;# 
  1189   000F96                     DDRE            equ	3990	;# 
  1190   000F9B                     OSCTUNE         equ	3995	;# 
  1191   000F9D                     PIE1            equ	3997	;# 
  1192   000F9E                     PIR1            equ	3998	;# 
  1193   000F9F                     IPR1            equ	3999	;# 
  1194   000FA0                     PIE2            equ	4000	;# 
  1195   000FA1                     PIR2            equ	4001	;# 
  1196   000FA2                     IPR2            equ	4002	;# 
  1197   000FA6                     EECON1          equ	4006	;# 
  1198   000FA7                     EECON2          equ	4007	;# 
  1199   000FA8                     EEDATA          equ	4008	;# 
  1200   000FA9                     EEADR           equ	4009	;# 
  1201   000FAA                     EEADRH          equ	4010	;# 
  1202   000FAB                     RCSTA           equ	4011	;# 
  1203   000FAB                     RCSTA1          equ	4011	;# 
  1204   000FAC                     TXSTA           equ	4012	;# 
  1205   000FAC                     TXSTA1          equ	4012	;# 
  1206   000FAD                     TXREG           equ	4013	;# 
  1207   000FAD                     TXREG1          equ	4013	;# 
  1208   000FAE                     RCREG           equ	4014	;# 
  1209   000FAE                     RCREG1          equ	4014	;# 
  1210   000FAF                     SPBRG           equ	4015	;# 
  1211   000FAF                     SPBRG1          equ	4015	;# 
  1212   000FB0                     SPBRGH          equ	4016	;# 
  1213   000FB1                     T3CON           equ	4017	;# 
  1214   000FB2                     TMR3            equ	4018	;# 
  1215   000FB2                     TMR3L           equ	4018	;# 
  1216   000FB3                     TMR3H           equ	4019	;# 
  1217   000FB4                     CVRCON2         equ	4020	;# 
  1218   000FB5                     CVRCON          equ	4021	;# 
  1219   000FB6                     ECCP1AS         equ	4022	;# 
  1220   000FB7                     PWM1CON         equ	4023	;# 
  1221   000FB8                     BAUDCON         equ	4024	;# 
  1222   000FB8                     BAUDCTL         equ	4024	;# 
  1223   000FB9                     PSTRCON         equ	4025	;# 
  1224   000FBA                     CCP2CON         equ	4026	;# 
  1225   000FBB                     CCPR2           equ	4027	;# 
  1226   000FBB                     CCPR2L          equ	4027	;# 
  1227   000FBC                     CCPR2H          equ	4028	;# 
  1228   000FBD                     CCP1CON         equ	4029	;# 
  1229   000FBE                     CCPR1           equ	4030	;# 
  1230   000FBE                     CCPR1L          equ	4030	;# 
  1231   000FBF                     CCPR1H          equ	4031	;# 
  1232   000FC0                     ADCON2          equ	4032	;# 
  1233   000FC1                     ADCON1          equ	4033	;# 
  1234   000FC2                     ADCON0          equ	4034	;# 
  1235   000FC3                     ADRES           equ	4035	;# 
  1236   000FC3                     ADRESL          equ	4035	;# 
  1237   000FC4                     ADRESH          equ	4036	;# 
  1238   000FC5                     SSPCON2         equ	4037	;# 
  1239   000FC6                     SSPCON1         equ	4038	;# 
  1240   000FC7                     SSPSTAT         equ	4039	;# 
  1241   000FC8                     SSPADD          equ	4040	;# 
  1242   000FC9                     SSPBUF          equ	4041	;# 
  1243   000FCA                     T2CON           equ	4042	;# 
  1244   000FCB                     PR2             equ	4043	;# 
  1245   000FCB                     MEMCON          equ	4043	;# 
  1246   000FCC                     TMR2            equ	4044	;# 
  1247   000FCD                     T1CON           equ	4045	;# 
  1248   000FCE                     TMR1            equ	4046	;# 
  1249   000FCE                     TMR1L           equ	4046	;# 
  1250   000FCF                     TMR1H           equ	4047	;# 
  1251   000FD0                     RCON            equ	4048	;# 
  1252   000FD1                     WDTCON          equ	4049	;# 
  1253   000FD2                     HLVDCON         equ	4050	;# 
  1254   000FD2                     LVDCON          equ	4050	;# 
  1255   000FD3                     OSCCON          equ	4051	;# 
  1256   000FD5                     T0CON           equ	4053	;# 
  1257   000FD6                     TMR0            equ	4054	;# 
  1258   000FD6                     TMR0L           equ	4054	;# 
  1259   000FD7                     TMR0H           equ	4055	;# 
  1260   000FD8                     STATUS          equ	4056	;# 
  1261   000FD9                     FSR2            equ	4057	;# 
  1262   000FD9                     FSR2L           equ	4057	;# 
  1263   000FDA                     FSR2H           equ	4058	;# 
  1264   000FDB                     PLUSW2          equ	4059	;# 
  1265   000FDC                     PREINC2         equ	4060	;# 
  1266   000FDD                     POSTDEC2        equ	4061	;# 
  1267   000FDE                     POSTINC2        equ	4062	;# 
  1268   000FDF                     INDF2           equ	4063	;# 
  1269   000FE0                     BSR             equ	4064	;# 
  1270   000FE1                     FSR1            equ	4065	;# 
  1271   000FE1                     FSR1L           equ	4065	;# 
  1272   000FE2                     FSR1H           equ	4066	;# 
  1273   000FE3                     PLUSW1          equ	4067	;# 
  1274   000FE4                     PREINC1         equ	4068	;# 
  1275   000FE5                     POSTDEC1        equ	4069	;# 
  1276   000FE6                     POSTINC1        equ	4070	;# 
  1277   000FE7                     INDF1           equ	4071	;# 
  1278   000FE8                     WREG            equ	4072	;# 
  1279   000FE9                     FSR0            equ	4073	;# 
  1280   000FE9                     FSR0L           equ	4073	;# 
  1281   000FEA                     FSR0H           equ	4074	;# 
  1282   000FEB                     PLUSW0          equ	4075	;# 
  1283   000FEC                     PREINC0         equ	4076	;# 
  1284   000FED                     POSTDEC0        equ	4077	;# 
  1285   000FEE                     POSTINC0        equ	4078	;# 
  1286   000FEF                     INDF0           equ	4079	;# 
  1287   000FF0                     INTCON3         equ	4080	;# 
  1288   000FF1                     INTCON2         equ	4081	;# 
  1289   000FF2                     INTCON          equ	4082	;# 
  1290   000FF3                     PROD            equ	4083	;# 
  1291   000FF3                     PRODL           equ	4083	;# 
  1292   000FF4                     PRODH           equ	4084	;# 
  1293   000FF5                     TABLAT          equ	4085	;# 
  1294   000FF6                     TBLPTR          equ	4086	;# 
  1295   000FF6                     TBLPTRL         equ	4086	;# 
  1296   000FF7                     TBLPTRH         equ	4087	;# 
  1297   000FF8                     TBLPTRU         equ	4088	;# 
  1298   000FF9                     PCLAT           equ	4089	;# 
  1299   000FF9                     PC              equ	4089	;# 
  1300   000FF9                     PCL             equ	4089	;# 
  1301   000FFA                     PCLATH          equ	4090	;# 
  1302   000FFB                     PCLATU          equ	4091	;# 
  1303   000FFC                     STKPTR          equ	4092	;# 
  1304   000FFD                     TOS             equ	4093	;# 
  1305   000FFD                     TOSL            equ	4093	;# 
  1306   000FFE                     TOSH            equ	4094	;# 
  1307   000FFF                     TOSU            equ	4095	;# 
  1308                           
  1309                           	psect	smallconst
  1310   001000                     __psmallconst:
  1311                           	callstack 0
  1312   001000  00                 	db	0
  1313   001001                     _default_security_key:
  1314                           	callstack 0
  1315   001001  00                 	db	0
  1316   001002  10                 	db	16
  1317   001003  25                 	db	37
  1318   001004  37                 	db	55
  1319   001005  04                 	db	4
  1320   001006  55                 	db	85
  1321   001007  06                 	db	6
  1322   001008  79                 	db	121
  1323   001009  08                 	db	8
  1324   00100A  09                 	db	9
  1325   00100B  10                 	db	16
  1326   00100C  11                 	db	17
  1327   00100D  12                 	db	18
  1328   00100E  13                 	db	19
  1329   00100F  14                 	db	20
  1330   001010  15                 	db	21
  1331   001011                     __end_of_default_security_key:
  1332                           	callstack 0
  1333   001011                     _default_mac_address:
  1334                           	callstack 0
  1335   001011  11                 	db	17
  1336   001012  28                 	db	40
  1337   001013  35                 	db	53
  1338   001014  44                 	db	68
  1339   001015  56                 	db	86
  1340   001016  66                 	db	102
  1341   001017  77                 	db	119
  1342   001018  01                 	db	1
  1343   001019                     __end_of_default_mac_address:
  1344                           	callstack 0
  1345   007CF0                     _TMR1IF         set	31984
  1346   007E68                     _TMR1ON         set	32360
  1347   007E69                     _TMR1CS         set	32361
  1348   007E6B                     _T1OSCEN        set	32363
  1349   007E6A                     _T1SYNC         set	32362
  1350   007E6D                     _T1CKPS1        set	32365
  1351   007E6C                     _T1CKPS0        set	32364
  1352   007E6F                     _T1RD16         set	32367
  1353   007F8F                     _RBPU           set	32655
  1354   007CED                     _RCIE           set	31981
  1355   007CEE                     _ADIE           set	31982
  1356   007D03                     _BCLIE          set	32003
  1357   007CEB                     _SSPIE          set	31979
  1358   007D04                     _EEIE           set	32004
  1359   007D00                     _CCP2IE         set	32000
  1360   007CEA                     _CCP1IE         set	31978
  1361   007CE9                     _TMR2IE         set	31977
  1362   007CE8                     _TMR1IE         set	31976
  1363   007F95                     _T0IE           set	32661
  1364   007F93                     _RBIE           set	32659
  1365   007F94                     _INT0E          set	32660
  1366   007F96                     _PEIE           set	32662
  1367   007F97                     _GIE            set	32663
  1368   007E87                     _IPEN           set	32391
  1369   000FCF                     _TMR1H          set	4047
  1370   000FCE                     _TMR1L          set	4046
  1371   000F9B                     _OSCTUNE        set	3995
  1372   000FD3                     _OSCCON         set	4051
  1373   000F95                     _TRISDbits      set	3989
  1374   000F96                     _TRISEbits      set	3990
  1375   000F93                     _TRISBbits      set	3987
  1376   000F84                     _PORTE          set	3972
  1377   000F83                     _PORTD          set	3971
  1378   000F82                     _PORTC          set	3970
  1379   000F81                     _PORTB          set	3969
  1380   000F80                     _PORTA          set	3968
  1381   000F82                     _PORTCbits      set	3970
  1382   000F8D                     _LATEbits       set	3981
  1383   000FC9                     _SSPBUF         set	4041
  1384   000F9E                     _PIR1bits       set	3998
  1385   000FC6                     _SSPCON1bits    set	4038
  1386   000FC6                     _SSPCON1        set	4038
  1387   000FC7                     _SSPSTATbits    set	4039
  1388   000F94                     _TRISCbits      set	3988
  1389   000F81                     _PORTBbits      set	3969
  1390   000F8C                     _LATDbits       set	3980
  1391   000F8B                     _LATCbits       set	3979
  1392   001019                     STR_5:
  1393   001019  43                 	db	67	;'C'
  1394   00101A  4D                 	db	77	;'M'
  1395   00101B  44                 	db	68	;'D'
  1396   00101C  3A                 	db	58	;':'
  1397   00101D  41                 	db	65	;'A'
  1398   00101E  4C                 	db	76	;'L'
  1399   00101F  41                 	db	65	;'A'
  1400   001020  00                 	db	0
  1401   001021                     STR_3:
  1402   001021  43                 	db	67	;'C'
  1403   001022  4D                 	db	77	;'M'
  1404   001023  44                 	db	68	;'D'
  1405   001024  3A                 	db	58	;':'
  1406   001025  50                 	db	80	;'P'
  1407   001026  4C                 	db	76	;'L'
  1408   001027  41                 	db	65	;'A'
  1409   001028  00                 	db	0
  1410   001029                     STR_9:
  1411   001029  43                 	db	67	;'C'
  1412   00102A  4D                 	db	77	;'M'
  1413   00102B  44                 	db	68	;'D'
  1414   00102C  3A                 	db	58	;':'
  1415   00102D  41                 	db	65	;'A'
  1416   00102E  4C                 	db	76	;'L'
  1417   00102F  52                 	db	82	;'R'
  1418   001030  00                 	db	0
  1419   001031                     STR_7:
  1420   001031  43                 	db	67	;'C'
  1421   001032  4D                 	db	77	;'M'
  1422   001033  44                 	db	68	;'D'
  1423   001034  3A                 	db	58	;':'
  1424   001035  50                 	db	80	;'P'
  1425   001036  4C                 	db	76	;'L'
  1426   001037  52                 	db	82	;'R'
  1427   001038  00                 	db	0
  1428   001039                     STR_2:
  1429   001039  43                 	db	67	;'C'
  1430   00103A  4D                 	db	77	;'M'
  1431   00103B  44                 	db	68	;'D'
  1432   00103C  3A                 	db	58	;':'
  1433   00103D  41                 	db	65	;'A'
  1434   00103E  4C                 	db	76	;'L'
  1435   00103F  56                 	db	86	;'V'
  1436   001040  00                 	db	0
  1437   001041                     STR_1:
  1438   001041  43                 	db	67	;'C'
  1439   001042  4D                 	db	77	;'M'
  1440   001043  44                 	db	68	;'D'
  1441   001044  3A                 	db	58	;':'
  1442   001045  50                 	db	80	;'P'
  1443   001046  4C                 	db	76	;'L'
  1444   001047  56                 	db	86	;'V'
  1445   001048  00                 	db	0
  1446   001031                     STR_8           equ	STR_7
  1447   001029                     STR_10          equ	STR_9
  1448   001021                     STR_4           equ	STR_3
  1449   001019                     STR_6           equ	STR_5
  1450   001049  00                 	db	0	; dummy byte at the end
  1451   000002                     __activetblptr  equ	2
  1452                           
  1453                           ; #config settings
  1454                           
  1455                           	psect	cinit
  1456   001A9C                     __pcinit:
  1457                           	callstack 0
  1458   001A9C                     start_initialization:
  1459                           	callstack 0
  1460   001A9C                     __initialization:
  1461                           	callstack 0
  1462                           
  1463                           ; Clear objects allocated to BANK0 (56 bytes)
  1464   001A9C  EE00  F0A6         	lfsr	0,__pbssBANK0
  1465   001AA0  0E38               	movlw	56
  1466   001AA2                     clear_0:
  1467   001AA2  6AEE               	clrf	postinc0,c
  1468   001AA4  06E8               	decf	wreg,f,c
  1469   001AA6  E1FD               	bnz	clear_0
  1470                           
  1471                           ; Clear objects allocated to COMRAM (45 bytes)
  1472   001AA8  EE00  F001         	lfsr	0,__pbssCOMRAM
  1473   001AAC  0E2D               	movlw	45
  1474   001AAE                     clear_1:
  1475   001AAE  6AEE               	clrf	postinc0,c
  1476   001AB0  06E8               	decf	wreg,f,c
  1477   001AB2  E1FD               	bnz	clear_1
  1478   001AB4                     end_of_initialization:
  1479                           	callstack 0
  1480   001AB4                     __end_of__initialization:
  1481                           	callstack 0
  1482   001AB4  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1483   001AB6  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1484   001AB8  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1485   001ABA  6EF8               	movwf	tblptru,c
  1486   001ABC  0100               	movlb	0
  1487   001ABE  EF0A  F009         	goto	_main	;jump to C main() function
  1488                           
  1489                           	psect	bssCOMRAM
  1490   000001                     __pbssCOMRAM:
  1491                           	callstack 0
  1492   000001                     _mrf24_data_config:
  1493                           	callstack 0
  1494   000001                     	ds	34
  1495   000023                     _mrf24_data_out:
  1496                           	callstack 0
  1497   000023                     	ds	6
  1498   000029                     _timeStamp:
  1499                           	callstack 0
  1500   000029                     	ds	4
  1501   00002D                     _long_mac_address:
  1502                           	callstack 0
  1503   00002D                     	ds	1
  1504                           
  1505                           	psect	bssBANK0
  1506   0000A6                     __pbssBANK0:
  1507                           	callstack 0
  1508   0000A6                     _mrf24_data_in:
  1509                           	callstack 0
  1510   0000A6                     	ds	56
  1511                           
  1512                           	psect	cstackBANK0
  1513   000060                     __pcstackBANK0:
  1514                           	callstack 0
  1515   000060                     main@cadena:
  1516                           	callstack 0
  1517                           
  1518                           ; 50 bytes @ 0x0
  1519   000060                     	ds	50
  1520   000092                     main@delay_parpadeo:
  1521                           	callstack 0
  1522                           
  1523                           ; 9 bytes @ 0x32
  1524   000092                     	ds	9
  1525   00009B                     main@boton1:
  1526                           	callstack 0
  1527                           
  1528                           ; 11 bytes @ 0x3B
  1529   00009B                     	ds	11
  1530                           
  1531                           	psect	cstackCOMRAM
  1532   00002E                     __pcstackCOMRAM:
  1533                           	callstack 0
  1534   00002E                     ?_strlen:
  1535                           	callstack 0
  1536   00002E                     SetCSPin@estado:
  1537                           	callstack 0
  1538   00002E                     SetWakePin@estado:
  1539                           	callstack 0
  1540   00002E                     SetResetPin@estado:
  1541                           	callstack 0
  1542   00002E                     SPIWriteByte@dato:
  1543                           	callstack 0
  1544   00002E                     DelayInit@delay:
  1545                           	callstack 0
  1546   00002E                     DelayReset@delay:
  1547                           	callstack 0
  1548   00002E                     DelayIsRunning@delay:
  1549                           	callstack 0
  1550   00002E                     strlen@s:
  1551                           	callstack 0
  1552   00002E                     MRF24SetDireccionDestino@direccion:
  1553                           	callstack 0
  1554   00002E                     MRF24SetPANIDDestino@panid:
  1555                           	callstack 0
  1556   00002E                     ??_InicializoVariables:
  1557   00002E                     
  1558                           ; 1 bytes @ 0x0
  1559   00002E                     	ds	1
  1560   00002F                     WriteByteSPIPort@dato:
  1561                           	callstack 0
  1562   00002F                     DelayRead@delay:
  1563                           	callstack 0
  1564   00002F                     InicializoVariables@i:
  1565                           	callstack 0
  1566   00002F                     SPIWrite2Byte@dato:
  1567                           	callstack 0
  1568   00002F                     DelayInit@duration:
  1569                           	callstack 0
  1570   00002F                     
  1571                           ; 1 bytes @ 0x1
  1572   00002F                     	ds	1
  1573   000030                     ?_strcmp:
  1574                           	callstack 0
  1575   000030                     SetShortAddr@valor:
  1576                           	callstack 0
  1577   000030                     GetShortAddr@leido_spi:
  1578                           	callstack 0
  1579   000030                     strcmp@l:
  1580                           	callstack 0
  1581   000030                     strcpy@dest:
  1582                           	callstack 0
  1583   000030                     strlen@a:
  1584                           	callstack 0
  1585   000030                     ??_DelayRead:
  1586   000030                     
  1587                           ; 1 bytes @ 0x2
  1588   000030                     	ds	1
  1589   000031                     SetShortAddr@reg_address:
  1590                           	callstack 0
  1591   000031                     GetShortAddr@reg_address:
  1592                           	callstack 0
  1593   000031                     MRF24SetMensajeSalida@mensaje:
  1594                           	callstack 0
  1595   000031                     strcmp@r:
  1596                           	callstack 0
  1597   000031                     strcpy@src:
  1598                           	callstack 0
  1599   000031                     Write2ByteSPIPort@dato:
  1600                           	callstack 0
  1601   000031                     
  1602                           ; 1 bytes @ 0x3
  1603   000031                     	ds	1
  1604   000032                     strcpy@d:
  1605                           	callstack 0
  1606   000032                     SetDeviceMACAddress@i:
  1607                           	callstack 0
  1608   000032                     ??_strcmp:
  1609   000032                     
  1610                           ; 1 bytes @ 0x4
  1611   000032                     	ds	1
  1612   000033                     DebounceFSMInit@antirrebote_boton_n:
  1613                           	callstack 0
  1614   000033                     SetLongAddr@reg_address:
  1615                           	callstack 0
  1616   000033                     GetLongAddr@reg_address:
  1617                           	callstack 0
  1618   000033                     
  1619                           ; 1 bytes @ 0x5
  1620   000033                     	ds	1
  1621   000034                     
  1622                           ; 1 bytes @ 0x6
  1623   000034                     	ds	1
  1624   000035                     SetLongAddr@valor:
  1625                           	callstack 0
  1626   000035                     ??_GetLongAddr:
  1627                           
  1628                           ; 1 bytes @ 0x7
  1629   000035                     	ds	1
  1630   000036                     ??_SetLongAddr:
  1631                           
  1632                           ; 1 bytes @ 0x8
  1633   000036                     	ds	1
  1634   000037                     GetLongAddr@respuesta:
  1635                           	callstack 0
  1636                           
  1637                           ; 1 bytes @ 0x9
  1638   000037                     	ds	1
  1639   000038                     ??_SetChannel:
  1640   000038                     ??_MRF24TransmitirDato:
  1641   000038                     ??_MRF24ReciboPaquete:
  1642                           
  1643                           ; 1 bytes @ 0xA
  1644   000038                     	ds	4
  1645   00003C                     DebounceFSMUpdate@antirrebote_boton_n:
  1646                           	callstack 0
  1647   00003C                     ??_MRF24J40Init:
  1648                           
  1649                           ; 1 bytes @ 0xE
  1650   00003C                     	ds	1
  1651   00003D                     MRF24J40Init@lectura:
  1652                           	callstack 0
  1653   00003D                     MRF24TransmitirDato@i:
  1654                           	callstack 0
  1655   00003D                     MRF24ReciboPaquete@largo_mensaje:
  1656                           	callstack 0
  1657   00003D                     DebounceFSMUpdate@estado_pin:
  1658                           	callstack 0
  1659                           
  1660                           ; 1 bytes @ 0xF
  1661   00003D                     	ds	1
  1662   00003E                     MRF24TransmitirDato@pos_memoria:
  1663                           	callstack 0
  1664   00003E                     MRF24ReciboPaquete@index:
  1665                           	callstack 0
  1666   00003E                     MRF24J40Init@delay_time_out:
  1667                           	callstack 0
  1668   00003E                     ??_DebounceFSMUpdate:
  1669                           
  1670                           ; 1 bytes @ 0x10
  1671   00003E                     	ds	9
  1672   000047                     ??_main:
  1673                           
  1674                           ; 1 bytes @ 0x19
  1675   000047                     	ds	2
  1676                           
  1677 ;;
  1678 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1679 ;;
  1680 ;; *************** function _main *****************
  1681 ;; Defined at:
  1682 ;;		line 28 in file "main.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;		None
  1685 ;; Auto vars:     Size  Location     Type
  1686 ;;  cadena         50    0[BANK0 ] unsigned char [50]
  1687 ;;  boton1         11   59[BANK0 ] struct .
  1688 ;;  delay_parpad    9   50[BANK0 ] struct .
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  1    wreg      void 
  1691 ;; Registers used:
  1692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Locals:         0      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1701 ;;      Totals:         2      70       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1702 ;;Total ram usage:       72 bytes
  1703 ;; Hardware stack levels required when called: 7
  1704 ;; This function calls:
  1705 ;;		_BoardInit
  1706 ;;		_DebounceFSMInit
  1707 ;;		_DebounceFSMUpdate
  1708 ;;		_DelayInit
  1709 ;;		_DelayRead
  1710 ;;		_MRF24GetMensajeEntrada
  1711 ;;		_MRF24IsNewMsg
  1712 ;;		_MRF24J40Init
  1713 ;;		_MRF24ReciboPaquete
  1714 ;;		_MRF24SetDireccionDestino
  1715 ;;		_MRF24SetMensajeSalida
  1716 ;;		_MRF24SetPANIDDestino
  1717 ;;		_MRF24TransmitirDato
  1718 ;;		_strcmp
  1719 ;;		_strcpy
  1720 ;; This function is called by:
  1721 ;;		Startup code after reset
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text0
  1726   001214                     __ptext0:
  1727                           	callstack 0
  1728   001214                     _main:
  1729                           	callstack 24
  1730   001214                     
  1731                           ;main.c: 30:     delayNoBloqueanteData delay_parpadeo;;main.c: 31:     debounceData_t bo
      +                          ton1;;main.c: 32:  DebounceFSMInit(&boton1);
  1732   001214  0E9B               	movlw	low main@boton1
  1733   001216  6E33               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  1734   001218  ECF8  F00C         	call	_DebounceFSMInit	;wreg free
  1735   00121C                     
  1736                           ;main.c: 33:     BoardInit();
  1737   00121C  EC2D  F00C         	call	_BoardInit	;wreg free
  1738   001220                     
  1739                           ;main.c: 34:     MRF24J40Init();
  1740   001220  EC25  F008         	call	_MRF24J40Init	;wreg free
  1741   001224                     
  1742                           ;main.c: 35:     DelayInit(&delay_parpadeo, 1000);
  1743   001224  0E92               	movlw	low main@delay_parpadeo
  1744   001226  6E2E               	movwf	DelayInit@delay^0,c
  1745   001228  0EE8               	movlw	232
  1746   00122A  6E2F               	movwf	DelayInit@duration^0,c
  1747   00122C  0E03               	movlw	3
  1748   00122E  6E30               	movwf	(DelayInit@duration+1)^0,c
  1749   001230  0E00               	movlw	0
  1750   001232  6E31               	movwf	(DelayInit@duration+2)^0,c
  1751   001234  0E00               	movlw	0
  1752   001236  6E32               	movwf	(DelayInit@duration+3)^0,c
  1753   001238  EC3A  F00D         	call	_DelayInit	;wreg free
  1754   00123C                     
  1755                           ;main.c: 36:     MRF24SetDireccionDestino(0x1111);
  1756   00123C  0E11               	movlw	17
  1757   00123E  6E2F               	movwf	(MRF24SetDireccionDestino@direccion+1)^0,c
  1758   001240  0E11               	movlw	17
  1759   001242  6E2E               	movwf	MRF24SetDireccionDestino@direccion^0,c
  1760   001244  EC13  F00E         	call	_MRF24SetDireccionDestino	;wreg free
  1761   001248                     
  1762                           ;main.c: 37:     MRF24SetPANIDDestino(0X1234);
  1763   001248  0E12               	movlw	18
  1764   00124A  6E2F               	movwf	(MRF24SetPANIDDestino@panid+1)^0,c
  1765   00124C  0E34               	movlw	52
  1766   00124E  6E2E               	movwf	MRF24SetPANIDDestino@panid^0,c
  1767   001250  EC0E  F00E         	call	_MRF24SetPANIDDestino	;wreg free
  1768   001254                     l233:
  1769   001254  0004               	clrwdt		;# 
  1770                           
  1771                           ;main.c: 42:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  1772   001256  EF3D  F009         	goto	l2136
  1773   00125A                     l235:
  1774                           
  1775                           ;main.c: 46:                 LATEbits.LATE2 = 0;
  1776   00125A  948D               	bcf	141,2,c	;volatile
  1777   00125C                     
  1778                           ;main.c: 47:                 MRF24SetMensajeSalida("CMD:PLV");
  1779   00125C  0E41               	movlw	low STR_1
  1780   00125E  6E31               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1781   001260  ECDB  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1782   001264                     l2128:
  1783                           
  1784                           ;main.c: 48:                 MRF24TransmitirDato();
  1785   001264  EC7C  F00A         	call	_MRF24TransmitirDato	;wreg free
  1786                           
  1787                           ;main.c: 49:     break;
  1788   001268  EF5F  F009         	goto	l2138
  1789   00126C                     l237:
  1790                           
  1791                           ;main.c: 53:                 LATEbits.LATE2 = 1;
  1792   00126C  848D               	bsf	141,2,c	;volatile
  1793   00126E                     
  1794                           ;main.c: 54:                 MRF24SetMensajeSalida("CMD:ALV");
  1795   00126E  0E39               	movlw	low STR_2
  1796   001270  6E31               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1797   001272  ECDB  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1798   001276  EF32  F009         	goto	l2128
  1799   00127A                     l2136:
  1800   00127A  0E9B               	movlw	low main@boton1
  1801   00127C  6E3C               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  1802   00127E  B482               	btfsc	130,2,c	;volatile
  1803   001280  EF44  F009         	goto	u741
  1804   001284  EF47  F009         	goto	u740
  1805   001288                     u741:
  1806   001288  0E01               	movlw	1
  1807   00128A  EF48  F009         	goto	u746
  1808   00128E                     u740:
  1809   00128E  0E00               	movlw	0
  1810   001290                     u746:
  1811   001290  6E3D               	movwf	DebounceFSMUpdate@estado_pin^0,c
  1812   001292  ECDE  F009         	call	_DebounceFSMUpdate	;wreg free
  1813   001296  6E47               	movwf	??_main^0,c
  1814   001298  6A48               	clrf	(??_main+1)^0,c
  1815                           
  1816                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1817                           ; Switch size 1, requested type "simple"
  1818                           ; Number of cases is 1, Range of values is 0 to 0
  1819                           ; switch strategies available:
  1820                           ; Name         Instructions Cycles
  1821                           ; simple_byte            4     3 (average)
  1822                           ;	Chosen strategy is simple_byte
  1823   00129A  5048               	movf	(??_main+1)^0,w,c
  1824   00129C  0A00               	xorlw	0	; case 0
  1825   00129E  B4D8               	btfsc	status,2,c
  1826   0012A0  EF54  F009         	goto	l2210
  1827   0012A4  EF5F  F009         	goto	l2138
  1828   0012A8                     l2210:
  1829                           
  1830                           ; Switch size 1, requested type "simple"
  1831                           ; Number of cases is 2, Range of values is 1 to 2
  1832                           ; switch strategies available:
  1833                           ; Name         Instructions Cycles
  1834                           ; simple_byte            7     4 (average)
  1835                           ;	Chosen strategy is simple_byte
  1836   0012A8  5047               	movf	??_main^0,w,c
  1837   0012AA  0A01               	xorlw	1	; case 1
  1838   0012AC  B4D8               	btfsc	status,2,c
  1839   0012AE  EF2D  F009         	goto	l235
  1840   0012B2  0A03               	xorlw	3	; case 2
  1841   0012B4  B4D8               	btfsc	status,2,c
  1842   0012B6  EF36  F009         	goto	l237
  1843   0012BA  EF5F  F009         	goto	l2138
  1844   0012BE                     l2138:
  1845                           
  1846                           ;main.c: 63:         if(MRF24IsNewMsg()) {
  1847   0012BE  EC97  F00D         	call	_MRF24IsNewMsg	;wreg free
  1848   0012C2  0900               	iorlw	0
  1849   0012C4  B4D8               	btfsc	status,2,c
  1850   0012C6  EF67  F009         	goto	u751
  1851   0012CA  EF69  F009         	goto	u750
  1852   0012CE                     u751:
  1853   0012CE  EFBF  F009         	goto	l2162
  1854   0012D2                     u750:
  1855   0012D2                     
  1856                           ;main.c: 65:             MRF24ReciboPaquete();
  1857   0012D2  ECB1  F00B         	call	_MRF24ReciboPaquete	;wreg free
  1858   0012D6                     
  1859                           ;main.c: 66:             char cadena[50] ;;main.c: 68:             strcpy(cadena,MRF24Ge
      +                          tMensajeEntrada() );
  1860   0012D6  0E60               	movlw	low main@cadena
  1861   0012D8  6E30               	movwf	strcpy@dest^0,c
  1862   0012DA  EC20  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1863   0012DE  6E31               	movwf	strcpy@src^0,c
  1864   0012E0  EC10  F00D         	call	_strcpy	;wreg free
  1865   0012E4                     
  1866                           ;main.c: 71:             __nop();
  1867   0012E4  0000               	nop	
  1868   0012E6                     
  1869                           ;main.c: 72:    if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLA"))
  1870   0012E6  EC20  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1871   0012EA  6E30               	movwf	strcmp@l^0,c
  1872   0012EC  0E21               	movlw	low STR_3
  1873   0012EE  6E31               	movwf	strcmp@r^0,c
  1874   0012F0  ECFA  F00B         	call	_strcmp	;wreg free
  1875   0012F4  5030               	movf	?_strcmp^0,w,c
  1876   0012F6  1031               	iorwf	(?_strcmp+1)^0,w,c
  1877   0012F8  A4D8               	btfss	status,2,c
  1878   0012FA  EF81  F009         	goto	u761
  1879   0012FE  EF83  F009         	goto	u760
  1880   001302                     u761:
  1881   001302  EF86  F009         	goto	l2150
  1882   001306                     u760:
  1883   001306                     
  1884                           ;main.c: 73:     LATEbits.LATE1 = 0;
  1885   001306  928D               	bcf	141,1,c	;volatile
  1886   001308  EFBF  F009         	goto	l2162
  1887   00130C                     l2150:
  1888   00130C  EC20  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1889   001310  6E30               	movwf	strcmp@l^0,c
  1890   001312  0E19               	movlw	low STR_5
  1891   001314  6E31               	movwf	strcmp@r^0,c
  1892   001316  ECFA  F00B         	call	_strcmp	;wreg free
  1893   00131A  5030               	movf	?_strcmp^0,w,c
  1894   00131C  1031               	iorwf	(?_strcmp+1)^0,w,c
  1895   00131E  A4D8               	btfss	status,2,c
  1896   001320  EF94  F009         	goto	u771
  1897   001324  EF96  F009         	goto	u770
  1898   001328                     u771:
  1899   001328  EF99  F009         	goto	l2154
  1900   00132C                     u770:
  1901   00132C                     
  1902                           ;main.c: 76:     LATEbits.LATE1 = 1;
  1903   00132C  828D               	bsf	141,1,c	;volatile
  1904   00132E  EFBF  F009         	goto	l2162
  1905   001332                     l2154:
  1906   001332  EC20  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1907   001336  6E30               	movwf	strcmp@l^0,c
  1908   001338  0E31               	movlw	low STR_7
  1909   00133A  6E31               	movwf	strcmp@r^0,c
  1910   00133C  ECFA  F00B         	call	_strcmp	;wreg free
  1911   001340  5030               	movf	?_strcmp^0,w,c
  1912   001342  1031               	iorwf	(?_strcmp+1)^0,w,c
  1913   001344  A4D8               	btfss	status,2,c
  1914   001346  EFA7  F009         	goto	u781
  1915   00134A  EFA9  F009         	goto	u780
  1916   00134E                     u781:
  1917   00134E  EFAC  F009         	goto	l2158
  1918   001352                     u780:
  1919   001352                     
  1920                           ;main.c: 79:     LATEbits.LATE2 = 0;
  1921   001352  948D               	bcf	141,2,c	;volatile
  1922   001354  EFBF  F009         	goto	l2162
  1923   001358                     l2158:
  1924   001358  EC20  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1925   00135C  6E30               	movwf	strcmp@l^0,c
  1926   00135E  0E29               	movlw	low STR_9
  1927   001360  6E31               	movwf	strcmp@r^0,c
  1928   001362  ECFA  F00B         	call	_strcmp	;wreg free
  1929   001366  5030               	movf	?_strcmp^0,w,c
  1930   001368  1031               	iorwf	(?_strcmp+1)^0,w,c
  1931   00136A  A4D8               	btfss	status,2,c
  1932   00136C  EFBA  F009         	goto	u791
  1933   001370  EFBC  F009         	goto	u790
  1934   001374                     u791:
  1935   001374  EFBF  F009         	goto	l241
  1936   001378                     u790:
  1937   001378                     
  1938                           ;main.c: 82:     LATEbits.LATE2 = 1;
  1939   001378  848D               	bsf	141,2,c	;volatile
  1940   00137A  EFBF  F009         	goto	l2162
  1941   00137E                     l241:
  1942   00137E                     l2162:
  1943                           
  1944                           ;main.c: 85:         if(DelayRead(&delay_parpadeo)) {
  1945   00137E  0E92               	movlw	low main@delay_parpadeo
  1946   001380  6E2F               	movwf	DelayRead@delay^0,c
  1947   001382  EC5B  F00B         	call	_DelayRead	;wreg free
  1948   001386  0900               	iorlw	0
  1949   001388  B4D8               	btfsc	status,2,c
  1950   00138A  EFC9  F009         	goto	u801
  1951   00138E  EFCB  F009         	goto	u800
  1952   001392                     u801:
  1953   001392  EF2A  F009         	goto	l233
  1954   001396                     u800:
  1955   001396                     
  1956                           ;main.c: 86:             LATEbits.LATE0 = !LATEbits.LATE0;
  1957   001396  A08D               	btfss	141,0,c	;volatile
  1958   001398  EFD0  F009         	goto	u811
  1959   00139C  EFD4  F009         	goto	u810
  1960   0013A0                     u811:
  1961   0013A0  6A47               	clrf	??_main^0,c
  1962   0013A2  2A47               	incf	??_main^0,f,c
  1963   0013A4  EFD5  F009         	goto	u828
  1964   0013A8                     u810:
  1965   0013A8  6A47               	clrf	??_main^0,c
  1966   0013AA                     u828:
  1967   0013AA  508D               	movf	141,w,c	;volatile
  1968   0013AC  1847               	xorwf	??_main^0,w,c
  1969   0013AE  0BFE               	andlw	-2
  1970   0013B0  1847               	xorwf	??_main^0,w,c
  1971   0013B2  6E8D               	movwf	141,c	;volatile
  1972   0013B4  EF2A  F009         	goto	l233
  1973   0013B8  EF20  F000         	goto	start
  1974   0013BC                     __end_of_main:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _strcpy *****************
  1978 ;; Defined at:
  1979 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcpy.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  dest            1    2[COMRAM] PTR unsigned char 
  1982 ;;		 -> main@cadena(50), 
  1983 ;;  src             1    3[COMRAM] PTR const unsigned char 
  1984 ;;		 -> mrf24_data_in$buffer_entrada(50), mrf24_data_in(56), 
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;  d               1    4[COMRAM] PTR unsigned char 
  1987 ;;		 -> main@cadena(50), 
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    2[COMRAM] PTR unsigned char 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2001 ;;Total ram usage:        3 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 1
  2004 ;; This function calls:
  2005 ;;		Nothing
  2006 ;; This function is called by:
  2007 ;;		_main
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text1
  2012   001A20                     __ptext1:
  2013                           	callstack 0
  2014   001A20                     _strcpy:
  2015                           	callstack 29
  2016   001A20  C030  F032         	movff	strcpy@dest,strcpy@d
  2017   001A24                     l2100:
  2018   001A24  2A31               	incf	strcpy@src^0,f,c
  2019   001A26  0431               	decf	strcpy@src^0,w,c
  2020   001A28  6ED9               	movwf	fsr2l,c
  2021   001A2A  6ADA               	clrf	fsr2h,c
  2022   001A2C  2A32               	incf	strcpy@d^0,f,c
  2023   001A2E  0432               	decf	strcpy@d^0,w,c
  2024   001A30  6EE1               	movwf	fsr1l,c
  2025   001A32  6AE2               	clrf	fsr1h,c
  2026   001A34  CFDF FFE7          	movff	indf2,indf1
  2027   001A38  50E7               	movf	indf1,w,c
  2028   001A3A  A4D8               	btfss	status,2,c
  2029   001A3C  EF22  F00D         	goto	u711
  2030   001A40  EF24  F00D         	goto	u710
  2031   001A44                     u711:
  2032   001A44  EF12  F00D         	goto	l2100
  2033   001A48                     u710:
  2034   001A48  0012               	return		;funcret
  2035   001A4A                     __end_of_strcpy:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _strcmp *****************
  2039 ;; Defined at:
  2040 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  l               1    2[COMRAM] PTR const unsigned char 
  2043 ;;		 -> mrf24_data_in$buffer_entrada(50), mrf24_data_in(56), 
  2044 ;;  r               1    3[COMRAM] PTR const unsigned char 
  2045 ;;		 -> STR_10(8), STR_8(8), STR_6(8), STR_4(8), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  2    2[COMRAM] int 
  2050 ;; Registers used:
  2051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2052 ;; Tracked objects:
  2053 ;;		On entry : 0/0
  2054 ;;		On exit  : 0/0
  2055 ;;		Unchanged: 0/0
  2056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;Total ram usage:        3 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 1
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_main
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text2
  2072   0017F4                     __ptext2:
  2073                           	callstack 0
  2074   0017F4                     _strcmp:
  2075                           	callstack 29
  2076   0017F4  EFFE  F00B         	goto	l2106
  2077   0017F8                     l2104:
  2078   0017F8  2A30               	incf	strcmp@l^0,f,c
  2079   0017FA  2A31               	incf	strcmp@r^0,f,c
  2080   0017FC                     l2106:
  2081   0017FC  5030               	movf	strcmp@l^0,w,c
  2082   0017FE  6ED9               	movwf	fsr2l,c
  2083   001800  6ADA               	clrf	fsr2h,c
  2084   001802  50DF               	movf	indf2,w,c
  2085   001804  6E32               	movwf	??_strcmp^0,c
  2086   001806  C031  FFF6         	movff	strcmp@r,tblptrl
  2087   00180A                     	if	1	;There is more than 1 active tblptr byte
  2088   00180A  0E10               	movlw	high __smallconst
  2089   00180C  6EF7               	movwf	tblptrh,c
  2090   00180E                     	endif
  2091   00180E                     	if	0	;tblptru may be non-zero
  2092   00180E                     	endif
  2093   00180E                     	if	0	;tblptru may be non-zero
  2094   00180E                     	endif
  2095   00180E  0008               	tblrd		*
  2096   001810  50F5               	movf	tablat,w,c
  2097   001812  1832               	xorwf	??_strcmp^0,w,c
  2098   001814  A4D8               	btfss	status,2,c
  2099   001816  EF0F  F00C         	goto	u721
  2100   00181A  EF11  F00C         	goto	u720
  2101   00181E                     u721:
  2102   00181E  EF1C  F00C         	goto	l2110
  2103   001822                     u720:
  2104   001822  5030               	movf	strcmp@l^0,w,c
  2105   001824  6ED9               	movwf	fsr2l,c
  2106   001826  6ADA               	clrf	fsr2h,c
  2107   001828  50DF               	movf	indf2,w,c
  2108   00182A  A4D8               	btfss	status,2,c
  2109   00182C  EF1A  F00C         	goto	u731
  2110   001830  EF1C  F00C         	goto	u730
  2111   001834                     u731:
  2112   001834  EFFC  F00B         	goto	l2104
  2113   001838                     u730:
  2114   001838                     l2110:
  2115   001838  5030               	movf	strcmp@l^0,w,c
  2116   00183A  6ED9               	movwf	fsr2l,c
  2117   00183C  6ADA               	clrf	fsr2h,c
  2118   00183E  50DF               	movf	indf2,w,c
  2119   001840  6E32               	movwf	??_strcmp^0,c
  2120   001842  C031  FFF6         	movff	strcmp@r,tblptrl
  2121   001846                     	if	1	;There is more than 1 active tblptr byte
  2122   001846  0E10               	movlw	high __smallconst
  2123   001848  6EF7               	movwf	tblptrh,c
  2124   00184A                     	endif
  2125   00184A                     	if	0	;tblptru may be non-zero
  2126   00184A                     	endif
  2127   00184A                     	if	0	;tblptru may be non-zero
  2128   00184A                     	endif
  2129   00184A  0008               	tblrd		*
  2130   00184C  50F5               	movf	tablat,w,c
  2131   00184E  5C32               	subwf	??_strcmp^0,w,c
  2132   001850  6E30               	movwf	?_strcmp^0,c
  2133   001852  6A31               	clrf	(?_strcmp+1)^0,c
  2134   001854  A0D8               	btfss	status,0,c
  2135   001856  0631               	decf	(?_strcmp+1)^0,f,c
  2136   001858  0012               	return		;funcret
  2137   00185A                     __end_of_strcmp:
  2138                           	callstack 0
  2139                           
  2140 ;; *************** function _MRF24TransmitirDato *****************
  2141 ;; Defined at:
  2142 ;;		line 724 in file "drivers/scr/API_MRF24J40.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  i               1   15[COMRAM] char 
  2147 ;;  pos_memoria     1   16[COMRAM] unsigned char 
  2148 ;;  largo_cabece    1    0        unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/0
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;Total ram usage:        7 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 5
  2165 ;; This function calls:
  2166 ;;		_SetLongAddr
  2167 ;;		_SetShortAddr
  2168 ;; This function is called by:
  2169 ;;		_main
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text3
  2174   0014F8                     __ptext3:
  2175                           	callstack 0
  2176   0014F8                     _MRF24TransmitirDato:
  2177                           	callstack 25
  2178   0014F8                     
  2179                           ;drivers/scr/API_MRF24J40.c: 726:  uint8_t pos_memoria = 0;
  2180   0014F8  6A3E               	clrf	MRF24TransmitirDato@pos_memoria^0,c
  2181   0014FA                     
  2182                           ;drivers/scr/API_MRF24J40.c: 728:  SetLongAddr(pos_memoria++, largo_cabecera);
  2183   0014FA  0E00               	movlw	0
  2184   0014FC  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  2185   0014FE  0E00               	movlw	0
  2186   001500  6E33               	movwf	SetLongAddr@reg_address^0,c
  2187   001502  0E08               	movlw	8
  2188   001504  6E35               	movwf	SetLongAddr@valor^0,c
  2189   001506  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2190   00150A  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2191   00150C                     
  2192                           ;drivers/scr/API_MRF24J40.c: 729:  SetLongAddr(pos_memoria++, mrf24_data_out.largo_mensa
      +                          je + largo_cabecera);
  2193   00150C  C03E  F033         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2194   001510  6A34               	clrf	(SetLongAddr@reg_address+1)^0,c
  2195   001512  5027               	movf	(_mrf24_data_out+4)^0,w,c
  2196   001514  0F08               	addlw	8
  2197   001516  6E35               	movwf	SetLongAddr@valor^0,c
  2198   001518  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2199   00151C  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2200   00151E                     
  2201                           ;drivers/scr/API_MRF24J40.c: 730:  SetLongAddr(pos_memoria++, (0X01)|(0X20)|(0X40));
  2202   00151E  C03E  F033         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2203   001522  6A34               	clrf	(SetLongAddr@reg_address+1)^0,c
  2204   001524  0E61               	movlw	97
  2205   001526  6E35               	movwf	SetLongAddr@valor^0,c
  2206   001528  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2207   00152C  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2208   00152E                     
  2209                           ;drivers/scr/API_MRF24J40.c: 731:  SetLongAddr(pos_memoria++, (0XC0)|(0X08));
  2210   00152E  C03E  F033         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2211   001532  6A34               	clrf	(SetLongAddr@reg_address+1)^0,c
  2212   001534  0EC8               	movlw	200
  2213   001536  6E35               	movwf	SetLongAddr@valor^0,c
  2214   001538  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2215   00153C  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2216   00153E                     
  2217                           ;drivers/scr/API_MRF24J40.c: 732:  SetLongAddr(pos_memoria++, mrf24_data_config.sequence
      +                          _number++);
  2218   00153E  C03E  F033         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2219   001542  6A34               	clrf	(SetLongAddr@reg_address+1)^0,c
  2220   001544  EE20  F003         	lfsr	2,_mrf24_data_config+2
  2221   001548  50DF               	movf	indf2,w,c
  2222   00154A  2ADF               	incf	indf2,f,c
  2223   00154C  6E35               	movwf	SetLongAddr@valor^0,c
  2224   00154E  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2225   001552  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2226   001554                     
  2227                           ;drivers/scr/API_MRF24J40.c: 733:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_panid);
  2228   001554  C03E  F033         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2229   001558  6A34               	clrf	(SetLongAddr@reg_address+1)^0,c
  2230   00155A  C023  F035         	movff	_mrf24_data_out,SetLongAddr@valor
  2231   00155E  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2232   001562  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2233   001564                     
  2234                           ;drivers/scr/API_MRF24J40.c: 734:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_panid >> (0X08)));
  2235   001564  C03E  F033         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2236   001568  6A34               	clrf	(SetLongAddr@reg_address+1)^0,c
  2237   00156A  5024               	movf	(_mrf24_data_out+1)^0,w,c
  2238   00156C  6E35               	movwf	SetLongAddr@valor^0,c
  2239   00156E  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2240   001572  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2241   001574                     
  2242                           ;drivers/scr/API_MRF24J40.c: 735:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_address);
  2243   001574  C03E  F033         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2244   001578  6A34               	clrf	(SetLongAddr@reg_address+1)^0,c
  2245   00157A  C025  F035         	movff	_mrf24_data_out+2,SetLongAddr@valor
  2246   00157E  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2247   001582  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2248   001584                     
  2249                           ;drivers/scr/API_MRF24J40.c: 736:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_address >> (0X08)));
  2250   001584  C03E  F033         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2251   001588  6A34               	clrf	(SetLongAddr@reg_address+1)^0,c
  2252   00158A  5026               	movf	(_mrf24_data_out+3)^0,w,c
  2253   00158C  6E35               	movwf	SetLongAddr@valor^0,c
  2254   00158E  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2255   001592  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2256   001594                     
  2257                           ;drivers/scr/API_MRF24J40.c: 738:     for(int8_t i = 0; i < mrf24_data_out.largo_mensaje
      +                          ; i++) {
  2258   001594  6A3D               	clrf	MRF24TransmitirDato@i^0,c
  2259   001596  EFDE  F00A         	goto	l1978
  2260   00159A                     l1972:
  2261                           
  2262                           ;drivers/scr/API_MRF24J40.c: 740:   SetLongAddr(pos_memoria++, mrf24_data_out.buffer_sal
      +                          ida[i]);
  2263   00159A  C03E  F033         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2264   00159E  6A34               	clrf	(SetLongAddr@reg_address+1)^0,c
  2265   0015A0  5028               	movf	(_mrf24_data_out+5)^0,w,c
  2266   0015A2  243D               	addwf	MRF24TransmitirDato@i^0,w,c
  2267   0015A4  6E38               	movwf	??_MRF24TransmitirDato^0,c
  2268   0015A6  C038  FFF6         	movff	??_MRF24TransmitirDato,tblptrl
  2269   0015AA                     	if	1	;There is more than 1 active tblptr byte
  2270   0015AA  0E10               	movlw	high __smallconst
  2271   0015AC  6EF7               	movwf	tblptrh,c
  2272   0015AE                     	endif
  2273   0015AE                     	if	0	;tblptru may be non-zero
  2274   0015AE                     	endif
  2275   0015AE                     	if	0	;tblptru may be non-zero
  2276   0015AE                     	endif
  2277   0015AE  0008               	tblrd		*
  2278   0015B0  CFF5 F035          	movff	tablat,SetLongAddr@valor
  2279   0015B4  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2280   0015B8  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2281   0015BA                     
  2282                           ;drivers/scr/API_MRF24J40.c: 741:  }
  2283   0015BA  2A3D               	incf	MRF24TransmitirDato@i^0,f,c
  2284   0015BC                     l1978:
  2285   0015BC  5027               	movf	(_mrf24_data_out+4)^0,w,c
  2286   0015BE  6E38               	movwf	??_MRF24TransmitirDato^0,c
  2287   0015C0  6A39               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2288   0015C2  C03D  F03A         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato+2
  2289   0015C6  6A3B               	clrf	(??_MRF24TransmitirDato+3)^0,c
  2290   0015C8  BE3A               	btfsc	(??_MRF24TransmitirDato+2)^0,7,c
  2291   0015CA  063B               	decf	(??_MRF24TransmitirDato+3)^0,f,c
  2292   0015CC  5038               	movf	??_MRF24TransmitirDato^0,w,c
  2293   0015CE  5C3A               	subwf	(??_MRF24TransmitirDato+2)^0,w,c
  2294   0015D0  503B               	movf	(??_MRF24TransmitirDato+3)^0,w,c
  2295   0015D2  0A80               	xorlw	128
  2296   0015D4  6E3C               	movwf	(??_MRF24TransmitirDato+4)^0,c
  2297   0015D6  5039               	movf	(??_MRF24TransmitirDato+1)^0,w,c
  2298   0015D8  0A80               	xorlw	128
  2299   0015DA  583C               	subwfb	(??_MRF24TransmitirDato+4)^0,w,c
  2300   0015DC  A0D8               	btfss	status,0,c
  2301   0015DE  EFF3  F00A         	goto	u611
  2302   0015E2  EFF5  F00A         	goto	u610
  2303   0015E6                     u611:
  2304   0015E6  EFCD  F00A         	goto	l1972
  2305   0015EA                     u610:
  2306   0015EA                     
  2307                           ;drivers/scr/API_MRF24J40.c: 742:     SetLongAddr(pos_memoria++, (0X00));
  2308   0015EA  C03E  F033         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2309   0015EE  6A34               	clrf	(SetLongAddr@reg_address+1)^0,c
  2310   0015F0  0E00               	movlw	0
  2311   0015F2  6E35               	movwf	SetLongAddr@valor^0,c
  2312   0015F4  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2313   0015F8  2A3E               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2314   0015FA                     
  2315                           ;drivers/scr/API_MRF24J40.c: 743:  SetShortAddr((0x1B), (0X04) | (0X01));
  2316   0015FA  0E05               	movlw	5
  2317   0015FC  6E30               	movwf	SetShortAddr@valor^0,c
  2318   0015FE  0E1B               	movlw	27
  2319   001600  EC87  F00D         	call	_SetShortAddr
  2320   001604  0012               	return		;funcret
  2321   001606                     __end_of_MRF24TransmitirDato:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _MRF24SetPANIDDestino *****************
  2325 ;; Defined at:
  2326 ;;		line 713 in file "drivers/scr/API_MRF24J40.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  panid           2    0[COMRAM] unsigned short 
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		None
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2340 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2344 ;;Total ram usage:        2 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 1
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text4
  2355   001C1C                     __ptext4:
  2356                           	callstack 0
  2357   001C1C                     _MRF24SetPANIDDestino:
  2358                           	callstack 29
  2359   001C1C                     
  2360                           ;drivers/scr/API_MRF24J40.c: 715:     mrf24_data_out.destinity_panid = panid;
  2361   001C1C  C02E  F023         	movff	MRF24SetPANIDDestino@panid,_mrf24_data_out
  2362   001C20  C02F  F024         	movff	MRF24SetPANIDDestino@panid+1,_mrf24_data_out+1
  2363   001C24  0012               	return		;funcret
  2364   001C26                     __end_of_MRF24SetPANIDDestino:
  2365                           	callstack 0
  2366                           
  2367 ;; *************** function _MRF24SetMensajeSalida *****************
  2368 ;; Defined at:
  2369 ;;		line 690 in file "drivers/scr/API_MRF24J40.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  2372 ;;		 -> STR_2(8), STR_1(8), 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;Total ram usage:        1 bytes
  2389 ;; Hardware stack levels used: 1
  2390 ;; Hardware stack levels required when called: 2
  2391 ;; This function calls:
  2392 ;;		_strlen
  2393 ;; This function is called by:
  2394 ;;		_main
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text5
  2399   001BB6                     __ptext5:
  2400                           	callstack 0
  2401   001BB6                     _MRF24SetMensajeSalida:
  2402                           	callstack 28
  2403   001BB6                     
  2404                           ;drivers/scr/API_MRF24J40.c: 692:     mrf24_data_out.buffer_salida = mensaje;
  2405   001BB6  C031  F028         	movff	MRF24SetMensajeSalida@mensaje,_mrf24_data_out+5
  2406   001BBA                     
  2407                           ;drivers/scr/API_MRF24J40.c: 693:     mrf24_data_out.largo_mensaje = (uint8_t) strlen(me
      +                          nsaje);
  2408   001BBA  C031  F02E         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2409   001BBE  ECDE  F00C         	call	_strlen	;wreg free
  2410   001BC2  502E               	movf	?_strlen^0,w,c
  2411   001BC4  6E27               	movwf	(_mrf24_data_out+4)^0,c
  2412   001BC6  0012               	return		;funcret
  2413   001BC8                     __end_of_MRF24SetMensajeSalida:
  2414                           	callstack 0
  2415                           
  2416 ;; *************** function _strlen *****************
  2417 ;; Defined at:
  2418 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2421 ;;		 -> STR_2(8), STR_1(8), 
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2424 ;;		 -> STR_2(8), STR_1(8), 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  2    0[COMRAM] unsigned int 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2434 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2438 ;;Total ram usage:        3 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; Hardware stack levels required when called: 1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_MRF24SetMensajeSalida
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text6
  2449   0019BC                     __ptext6:
  2450                           	callstack 0
  2451   0019BC                     _strlen:
  2452                           	callstack 28
  2453   0019BC  C02E  F030         	movff	strlen@s,strlen@a
  2454   0019C0  EFE3  F00C         	goto	l1826
  2455   0019C4                     l1824:
  2456   0019C4  2A2E               	incf	strlen@s^0,f,c
  2457   0019C6                     l1826:
  2458   0019C6  C02E  FFF6         	movff	strlen@s,tblptrl
  2459   0019CA                     	if	1	;There is more than 1 active tblptr byte
  2460   0019CA  0E10               	movlw	high __smallconst
  2461   0019CC  6EF7               	movwf	tblptrh,c
  2462   0019CE                     	endif
  2463   0019CE                     	if	0	;tblptru may be non-zero
  2464   0019CE                     	endif
  2465   0019CE                     	if	0	;tblptru may be non-zero
  2466   0019CE                     	endif
  2467   0019CE  0008               	tblrd		*
  2468   0019D0  50F5               	movf	tablat,w,c
  2469   0019D2  0900               	iorlw	0
  2470   0019D4  A4D8               	btfss	status,2,c
  2471   0019D6  EFEF  F00C         	goto	u561
  2472   0019DA  EFF1  F00C         	goto	u560
  2473   0019DE                     u561:
  2474   0019DE  EFE2  F00C         	goto	l1824
  2475   0019E2                     u560:
  2476   0019E2  5030               	movf	strlen@a^0,w,c
  2477   0019E4  5C2E               	subwf	strlen@s^0,w,c
  2478   0019E6  6E2E               	movwf	?_strlen^0,c
  2479   0019E8  6A2F               	clrf	(?_strlen+1)^0,c
  2480   0019EA  BE2E               	btfsc	?_strlen^0,7,c
  2481   0019EC  062F               	decf	(?_strlen+1)^0,f,c
  2482   0019EE  0012               	return		;funcret
  2483   0019F0                     __end_of_strlen:
  2484                           	callstack 0
  2485                           
  2486 ;; *************** function _MRF24SetDireccionDestino *****************
  2487 ;; Defined at:
  2488 ;;		line 702 in file "drivers/scr/API_MRF24J40.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  direccion       2    0[COMRAM] unsigned short 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  1    wreg      void 
  2495 ;; Registers used:
  2496 ;;		None
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;Total ram usage:        2 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_main
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text7
  2517   001C26                     __ptext7:
  2518                           	callstack 0
  2519   001C26                     _MRF24SetDireccionDestino:
  2520                           	callstack 29
  2521   001C26                     
  2522                           ;drivers/scr/API_MRF24J40.c: 704:     mrf24_data_out.destinity_address = direccion;
  2523   001C26  C02E  F025         	movff	MRF24SetDireccionDestino@direccion,_mrf24_data_out+2
  2524   001C2A  C02F  F026         	movff	MRF24SetDireccionDestino@direccion+1,_mrf24_data_out+3
  2525   001C2E  0012               	return		;funcret
  2526   001C30                     __end_of_MRF24SetDireccionDestino:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _MRF24ReciboPaquete *****************
  2530 ;; Defined at:
  2531 ;;		line 762 in file "drivers/scr/API_MRF24J40.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  index           1   16[COMRAM] unsigned char 
  2536 ;;  largo_mensaj    1   15[COMRAM] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  1    wreg      void 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;Total ram usage:        7 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; Hardware stack levels required when called: 5
  2553 ;; This function calls:
  2554 ;;		_GetLongAddr
  2555 ;;		_GetShortAddr
  2556 ;;		_SetLongAddr
  2557 ;;		_SetShortAddr
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           	psect	text8
  2564   001762                     __ptext8:
  2565                           	callstack 0
  2566   001762                     _MRF24ReciboPaquete:
  2567                           	callstack 25
  2568   001762                     
  2569                           ;drivers/scr/API_MRF24J40.c: 764:  uint8_t index;;drivers/scr/API_MRF24J40.c: 765:  uint
      +                          8_t largo_mensaje;;drivers/scr/API_MRF24J40.c: 766:  SetLongAddr((0x39), (0X04));
  2570   001762  0E00               	movlw	0
  2571   001764  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  2572   001766  0E39               	movlw	57
  2573   001768  6E33               	movwf	SetLongAddr@reg_address^0,c
  2574   00176A  0E04               	movlw	4
  2575   00176C  6E35               	movwf	SetLongAddr@valor^0,c
  2576   00176E  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2577                           
  2578                           ;drivers/scr/API_MRF24J40.c: 767:  SetShortAddr((0x0D), (0X04));
  2579   001772  0E04               	movlw	4
  2580   001774  6E30               	movwf	SetShortAddr@valor^0,c
  2581   001776  0E0D               	movlw	13
  2582   001778  EC87  F00D         	call	_SetShortAddr
  2583                           
  2584                           ;drivers/scr/API_MRF24J40.c: 768:  largo_mensaje = GetLongAddr((0x300));
  2585   00177C  0E03               	movlw	3
  2586   00177E  6E34               	movwf	(GetLongAddr@reg_address+1)^0,c
  2587   001780  0E00               	movlw	0
  2588   001782  6E33               	movwf	GetLongAddr@reg_address^0,c
  2589   001784  EC5E  F00C         	call	_GetLongAddr	;wreg free
  2590   001788  6E3D               	movwf	MRF24ReciboPaquete@largo_mensaje^0,c
  2591   00178A                     
  2592                           ;drivers/scr/API_MRF24J40.c: 770:  for(index = 0; index < largo_mensaje - (0x04); index+
      +                          +) {
  2593   00178A  6A3E               	clrf	MRF24ReciboPaquete@index^0,c
  2594   00178C  EFD6  F00B         	goto	l2000
  2595   001790                     l1996:
  2596                           
  2597                           ;drivers/scr/API_MRF24J40.c: 772:   mrf24_data_in.buffer_entrada[index] = GetLongAddr((0
      +                          x300) + (0X08) + index);
  2598   001790  503E               	movf	MRF24ReciboPaquete@index^0,w,c
  2599   001792  0FAC               	addlw	low (_mrf24_data_in+6)
  2600   001794  6ED9               	movwf	fsr2l,c
  2601   001796  6ADA               	clrf	fsr2h,c
  2602   001798  0E08               	movlw	8
  2603   00179A  243E               	addwf	MRF24ReciboPaquete@index^0,w,c
  2604   00179C  6E33               	movwf	GetLongAddr@reg_address^0,c
  2605   00179E  6A34               	clrf	(GetLongAddr@reg_address+1)^0,c
  2606   0017A0  0E03               	movlw	3
  2607   0017A2  2234               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  2608   0017A4  EC5E  F00C         	call	_GetLongAddr	;wreg free
  2609   0017A8  6EDF               	movwf	indf2,c
  2610   0017AA                     
  2611                           ;drivers/scr/API_MRF24J40.c: 773:  }
  2612   0017AA  2A3E               	incf	MRF24ReciboPaquete@index^0,f,c
  2613   0017AC                     l2000:
  2614   0017AC  0EFC               	movlw	252
  2615   0017AE  243D               	addwf	MRF24ReciboPaquete@largo_mensaje^0,w,c
  2616   0017B0  6E38               	movwf	??_MRF24ReciboPaquete^0,c
  2617   0017B2  6A39               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  2618   0017B4  0EFF               	movlw	255
  2619   0017B6  2239               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  2620   0017B8  503E               	movf	MRF24ReciboPaquete@index^0,w,c
  2621   0017BA  6E3A               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  2622   0017BC  6A3B               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  2623   0017BE  5038               	movf	??_MRF24ReciboPaquete^0,w,c
  2624   0017C0  5C3A               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  2625   0017C2  503B               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  2626   0017C4  0A80               	xorlw	128
  2627   0017C6  6E3C               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  2628   0017C8  5039               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  2629   0017CA  0A80               	xorlw	128
  2630   0017CC  583C               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  2631   0017CE  A0D8               	btfss	status,0,c
  2632   0017D0  EFEC  F00B         	goto	u641
  2633   0017D4  EFEE  F00B         	goto	u640
  2634   0017D8                     u641:
  2635   0017D8  EFC8  F00B         	goto	l1996
  2636   0017DC                     u640:
  2637   0017DC                     
  2638                           ;drivers/scr/API_MRF24J40.c: 774:  SetLongAddr((0x39), (0X00));
  2639   0017DC  0E00               	movlw	0
  2640   0017DE  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  2641   0017E0  0E39               	movlw	57
  2642   0017E2  6E33               	movwf	SetLongAddr@reg_address^0,c
  2643   0017E4  0E00               	movlw	0
  2644   0017E6  6E35               	movwf	SetLongAddr@valor^0,c
  2645   0017E8  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2646                           
  2647                           ;drivers/scr/API_MRF24J40.c: 775:  (void)GetShortAddr((0x31));
  2648   0017EC  0E31               	movlw	49
  2649   0017EE  EC61  F00D         	call	_GetShortAddr
  2650   0017F2  0012               	return		;funcret
  2651   0017F4                     __end_of_MRF24ReciboPaquete:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function _MRF24J40Init *****************
  2655 ;; Defined at:
  2656 ;;		line 501 in file "drivers/scr/API_MRF24J40.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  delay_time_o    9   16[COMRAM] struct .
  2661 ;;  lectura         1   15[COMRAM] unsigned char 
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      enum E3263
  2664 ;; Registers used:
  2665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2675 ;;Total ram usage:       11 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 6
  2678 ;; This function calls:
  2679 ;;		_DelayInit
  2680 ;;		_DelayRead
  2681 ;;		_DelayReset
  2682 ;;		_GetLongAddr
  2683 ;;		_GetShortAddr
  2684 ;;		_InicializoPines
  2685 ;;		_InicializoVariables
  2686 ;;		_SetChannel
  2687 ;;		_SetDeviceAddress
  2688 ;;		_SetDeviceMACAddress
  2689 ;;		_SetLongAddr
  2690 ;;		_SetResetPin
  2691 ;;		_SetShortAddr
  2692 ;; This function is called by:
  2693 ;;		_main
  2694 ;; This function uses a non-reentrant model
  2695 ;;
  2696                           
  2697                           	psect	text9
  2698   00104A                     __ptext9:
  2699                           	callstack 0
  2700   00104A                     _MRF24J40Init:
  2701                           	callstack 24
  2702   00104A                     
  2703                           ;drivers/scr/API_MRF24J40.c: 503:     uint8_t lectura;;drivers/scr/API_MRF24J40.c: 504: 
      +                              delayNoBloqueanteData delay_time_out;;drivers/scr/API_MRF24J40.c: 505:     DelayInit
      +                          (&delay_time_out, 100);
  2704   00104A  0E3E               	movlw	low MRF24J40Init@delay_time_out
  2705   00104C  6E2E               	movwf	DelayInit@delay^0,c
  2706   00104E  0E64               	movlw	100
  2707   001050  6E2F               	movwf	DelayInit@duration^0,c
  2708   001052  0E00               	movlw	0
  2709   001054  6E30               	movwf	(DelayInit@duration+1)^0,c
  2710   001056  0E00               	movlw	0
  2711   001058  6E31               	movwf	(DelayInit@duration+2)^0,c
  2712   00105A  0E00               	movlw	0
  2713   00105C  6E32               	movwf	(DelayInit@duration+3)^0,c
  2714   00105E  EC3A  F00D         	call	_DelayInit	;wreg free
  2715   001062                     
  2716                           ;drivers/scr/API_MRF24J40.c: 506:     InicializoVariables();
  2717   001062  EC03  F00B         	call	_InicializoVariables	;wreg free
  2718   001066                     
  2719                           ;drivers/scr/API_MRF24J40.c: 507:     InicializoPines();
  2720   001066  ECC7  F00D         	call	_InicializoPines	;wreg free
  2721   00106A                     
  2722                           ;drivers/scr/API_MRF24J40.c: 508:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2723   00106A  0E06               	movlw	6
  2724   00106C  6E3C               	movwf	??_MRF24J40Init^0,c
  2725   00106E  0E30               	movlw	48
  2726   001070                     u837:
  2727   001070  2EE8               	decfsz	wreg,f,c
  2728   001072  D7FE               	bra	u837
  2729   001074  2E3C               	decfsz	??_MRF24J40Init^0,f,c
  2730   001076  D7FC               	bra	u837
  2731   001078  F000 F000          	nop2	
  2732   00107C                     
  2733                           ;drivers/scr/API_MRF24J40.c: 509:     SetResetPin(1);
  2734   00107C  0E01               	movlw	1
  2735   00107E  ECEB  F00D         	call	_SetResetPin
  2736   001082                     
  2737                           ;drivers/scr/API_MRF24J40.c: 510:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2738   001082  0E06               	movlw	6
  2739   001084  6E3C               	movwf	??_MRF24J40Init^0,c
  2740   001086  0E30               	movlw	48
  2741   001088                     u847:
  2742   001088  2EE8               	decfsz	wreg,f,c
  2743   00108A  D7FE               	bra	u847
  2744   00108C  2E3C               	decfsz	??_MRF24J40Init^0,f,c
  2745   00108E  D7FC               	bra	u847
  2746   001090  F000 F000          	nop2	
  2747   001094                     
  2748                           ;drivers/scr/API_MRF24J40.c: 511:     SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  2749   001094  0E07               	movlw	7
  2750   001096  6E30               	movwf	SetShortAddr@valor^0,c
  2751   001098  0E2A               	movlw	42
  2752   00109A  EC87  F00D         	call	_SetShortAddr
  2753   00109E                     
  2754                           ;drivers/scr/API_MRF24J40.c: 512:     DelayReset(&delay_time_out);
  2755   00109E  0E3E               	movlw	low MRF24J40Init@delay_time_out
  2756   0010A0  6E2E               	movwf	DelayReset@delay^0,c
  2757   0010A2  EC74  F00D         	call	_DelayReset	;wreg free
  2758   0010A6                     l1868:
  2759                           
  2760                           ;drivers/scr/API_MRF24J40.c: 515:         lectura = GetShortAddr((0x2A));
  2761   0010A6  0E2A               	movlw	42
  2762   0010A8  EC61  F00D         	call	_GetShortAddr
  2763   0010AC  6E3D               	movwf	MRF24J40Init@lectura^0,c
  2764   0010AE                     
  2765                           ;drivers/scr/API_MRF24J40.c: 516:   if(DelayRead(&delay_time_out))
  2766   0010AE  0E3E               	movlw	low MRF24J40Init@delay_time_out
  2767   0010B0  6E2F               	movwf	DelayRead@delay^0,c
  2768   0010B2  EC5B  F00B         	call	_DelayRead	;wreg free
  2769   0010B6  0900               	iorlw	0
  2770   0010B8  B4D8               	btfsc	status,2,c
  2771   0010BA  EF61  F008         	goto	u571
  2772   0010BE  EF63  F008         	goto	u570
  2773   0010C2                     u571:
  2774   0010C2  EF65  F008         	goto	l1874
  2775   0010C6                     u570:
  2776   0010C6  EF09  F009         	goto	l99
  2777   0010CA                     l1874:
  2778                           
  2779                           ;drivers/scr/API_MRF24J40.c: 518:     }while((lectura & ((0X04) | (0X02) | (0X01))) != (
      +                          0X00));
  2780   0010CA  C03D  F03C         	movff	MRF24J40Init@lectura,??_MRF24J40Init
  2781   0010CE  0E07               	movlw	7
  2782   0010D0  163C               	andwf	??_MRF24J40Init^0,f,c
  2783   0010D2  A4D8               	btfss	status,2,c
  2784   0010D4  EF6E  F008         	goto	u581
  2785   0010D8  EF70  F008         	goto	u580
  2786   0010DC                     u581:
  2787   0010DC  EF53  F008         	goto	l1868
  2788   0010E0                     u580:
  2789   0010E0                     
  2790                           ;drivers/scr/API_MRF24J40.c: 519:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2791   0010E0  0E06               	movlw	6
  2792   0010E2  6E3C               	movwf	??_MRF24J40Init^0,c
  2793   0010E4  0E30               	movlw	48
  2794   0010E6                     u857:
  2795   0010E6  2EE8               	decfsz	wreg,f,c
  2796   0010E8  D7FE               	bra	u857
  2797   0010EA  2E3C               	decfsz	??_MRF24J40Init^0,f,c
  2798   0010EC  D7FC               	bra	u857
  2799   0010EE  F000 F000          	nop2	
  2800   0010F2                     
  2801                           ;drivers/scr/API_MRF24J40.c: 520:     SetShortAddr((0x0D), (0X01));
  2802   0010F2  0E01               	movlw	1
  2803   0010F4  6E30               	movwf	SetShortAddr@valor^0,c
  2804   0010F6  0E0D               	movlw	13
  2805   0010F8  EC87  F00D         	call	_SetShortAddr
  2806   0010FC                     
  2807                           ;drivers/scr/API_MRF24J40.c: 521:     SetDeviceAddress();
  2808   0010FC  EC25  F00D         	call	_SetDeviceAddress	;wreg free
  2809   001100                     
  2810                           ;drivers/scr/API_MRF24J40.c: 522:     SetDeviceMACAddress();
  2811   001100  EC80  F00C         	call	_SetDeviceMACAddress	;wreg free
  2812   001104                     
  2813                           ;drivers/scr/API_MRF24J40.c: 523:     SetLongAddr((0x202), (0X80));
  2814   001104  0E02               	movlw	2
  2815   001106  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  2816   001108  0E02               	movlw	2
  2817   00110A  6E33               	movwf	SetLongAddr@reg_address^0,c
  2818   00110C  0E80               	movlw	128
  2819   00110E  6E35               	movwf	SetLongAddr@valor^0,c
  2820   001110  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2821   001114                     
  2822                           ;drivers/scr/API_MRF24J40.c: 524:     SetLongAddr((0x203), (0XC0) | (0X38));
  2823   001114  0E02               	movlw	2
  2824   001116  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  2825   001118  0E03               	movlw	3
  2826   00111A  6E33               	movwf	SetLongAddr@reg_address^0,c
  2827   00111C  0EF8               	movlw	248
  2828   00111E  6E35               	movwf	SetLongAddr@valor^0,c
  2829   001120  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2830   001124                     
  2831                           ;drivers/scr/API_MRF24J40.c: 525:  SetLongAddr((0x206), (0X80) | (0X10));
  2832   001124  0E02               	movlw	2
  2833   001126  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  2834   001128  0E06               	movlw	6
  2835   00112A  6E33               	movwf	SetLongAddr@reg_address^0,c
  2836   00112C  0E90               	movlw	144
  2837   00112E  6E35               	movwf	SetLongAddr@valor^0,c
  2838   001130  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2839   001134                     
  2840                           ;drivers/scr/API_MRF24J40.c: 526:  SetLongAddr((0x207), (0X80));
  2841   001134  0E02               	movlw	2
  2842   001136  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  2843   001138  0E07               	movlw	7
  2844   00113A  6E33               	movwf	SetLongAddr@reg_address^0,c
  2845   00113C  0E80               	movlw	128
  2846   00113E  6E35               	movwf	SetLongAddr@valor^0,c
  2847   001140  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2848   001144                     
  2849                           ;drivers/scr/API_MRF24J40.c: 527:  SetLongAddr((0x208), (0X10));
  2850   001144  0E02               	movlw	2
  2851   001146  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  2852   001148  0E08               	movlw	8
  2853   00114A  6E33               	movwf	SetLongAddr@reg_address^0,c
  2854   00114C  0E10               	movlw	16
  2855   00114E  6E35               	movwf	SetLongAddr@valor^0,c
  2856   001150  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2857   001154                     
  2858                           ;drivers/scr/API_MRF24J40.c: 528:  SetLongAddr((0x220), (0X20) | (0X01));
  2859   001154  0E02               	movlw	2
  2860   001156  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  2861   001158  0E20               	movlw	32
  2862   00115A  6E33               	movwf	SetLongAddr@reg_address^0,c
  2863   00115C  0E21               	movlw	33
  2864   00115E  6E35               	movwf	SetLongAddr@valor^0,c
  2865   001160  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2866   001164                     
  2867                           ;drivers/scr/API_MRF24J40.c: 529:     SetShortAddr((0x3A), (0X80));
  2868   001164  0E80               	movlw	128
  2869   001166  6E30               	movwf	SetShortAddr@valor^0,c
  2870   001168  0E3A               	movlw	58
  2871   00116A  EC87  F00D         	call	_SetShortAddr
  2872   00116E                     
  2873                           ;drivers/scr/API_MRF24J40.c: 530:     SetShortAddr((0x3E), (0X40));
  2874   00116E  0E40               	movlw	64
  2875   001170  6E30               	movwf	SetShortAddr@valor^0,c
  2876   001172  0E3E               	movlw	62
  2877   001174  EC87  F00D         	call	_SetShortAddr
  2878   001178                     
  2879                           ;drivers/scr/API_MRF24J40.c: 531:     SetShortAddr((0x3F), (0X04) | (0X02));
  2880   001178  0E06               	movlw	6
  2881   00117A  6E30               	movwf	SetShortAddr@valor^0,c
  2882   00117C  0E3F               	movlw	63
  2883   00117E  EC87  F00D         	call	_SetShortAddr
  2884   001182                     
  2885                           ;drivers/scr/API_MRF24J40.c: 532:     SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  2886   001182  0E98               	movlw	152
  2887   001184  6E30               	movwf	SetShortAddr@valor^0,c
  2888   001186  0E18               	movlw	24
  2889   001188  EC87  F00D         	call	_SetShortAddr
  2890   00118C                     
  2891                           ;drivers/scr/API_MRF24J40.c: 533:     SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0
      +                          X01));
  2892   00118C  0E95               	movlw	149
  2893   00118E  6E30               	movwf	SetShortAddr@valor^0,c
  2894   001190  0E2E               	movlw	46
  2895   001192  EC87  F00D         	call	_SetShortAddr
  2896   001196                     
  2897                           ;drivers/scr/API_MRF24J40.c: 534:     DelayReset(&delay_time_out);
  2898   001196  0E3E               	movlw	low MRF24J40Init@delay_time_out
  2899   001198  6E2E               	movwf	DelayReset@delay^0,c
  2900   00119A  EC74  F00D         	call	_DelayReset	;wreg free
  2901   00119E                     l1908:
  2902                           
  2903                           ;drivers/scr/API_MRF24J40.c: 537:   lectura = GetLongAddr((0x20f));
  2904   00119E  0E02               	movlw	2
  2905   0011A0  6E34               	movwf	(GetLongAddr@reg_address+1)^0,c
  2906   0011A2  0E0F               	movlw	15
  2907   0011A4  6E33               	movwf	GetLongAddr@reg_address^0,c
  2908   0011A6  EC5E  F00C         	call	_GetLongAddr	;wreg free
  2909   0011AA  6E3D               	movwf	MRF24J40Init@lectura^0,c
  2910   0011AC                     
  2911                           ;drivers/scr/API_MRF24J40.c: 538:   if(DelayRead(&delay_time_out))
  2912   0011AC  0E3E               	movlw	low MRF24J40Init@delay_time_out
  2913   0011AE  6E2F               	movwf	DelayRead@delay^0,c
  2914   0011B0  EC5B  F00B         	call	_DelayRead	;wreg free
  2915   0011B4  0900               	iorlw	0
  2916   0011B6  B4D8               	btfsc	status,2,c
  2917   0011B8  EFE0  F008         	goto	u591
  2918   0011BC  EFE2  F008         	goto	u590
  2919   0011C0                     u591:
  2920   0011C0  EFE4  F008         	goto	l1914
  2921   0011C4                     u590:
  2922   0011C4  EF09  F009         	goto	l99
  2923   0011C8                     l1914:
  2924                           
  2925                           ;drivers/scr/API_MRF24J40.c: 540:  }while(lectura != (0XA0));
  2926   0011C8  0EA0               	movlw	160
  2927   0011CA  183D               	xorwf	MRF24J40Init@lectura^0,w,c
  2928   0011CC  A4D8               	btfss	status,2,c
  2929   0011CE  EFEB  F008         	goto	u601
  2930   0011D2  EFED  F008         	goto	u600
  2931   0011D6                     u601:
  2932   0011D6  EFCF  F008         	goto	l1908
  2933   0011DA                     u600:
  2934   0011DA                     
  2935                           ;drivers/scr/API_MRF24J40.c: 541:     SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0
      +                          X10) | (0X04) | (0X01));
  2936   0011DA  0EF5               	movlw	245
  2937   0011DC  6E30               	movwf	SetShortAddr@valor^0,c
  2938   0011DE  0E32               	movlw	50
  2939   0011E0  EC87  F00D         	call	_SetShortAddr
  2940                           
  2941                           ;drivers/scr/API_MRF24J40.c: 542:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  2942   0011E4  0EB9               	movlw	185
  2943   0011E6  6E30               	movwf	SetShortAddr@valor^0,c
  2944   0011E8  0E12               	movlw	18
  2945   0011EA  EC87  F00D         	call	_SetShortAddr
  2946                           
  2947                           ;drivers/scr/API_MRF24J40.c: 543:   SetLongAddr((0x201), (0X02) | (0X01));
  2948   0011EE  0E02               	movlw	2
  2949   0011F0  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  2950   0011F2  0E01               	movlw	1
  2951   0011F4  6E33               	movwf	SetLongAddr@reg_address^0,c
  2952   0011F6  0E03               	movlw	3
  2953   0011F8  6E35               	movwf	SetLongAddr@valor^0,c
  2954   0011FA  ECA1  F00C         	call	_SetLongAddr	;wreg free
  2955                           
  2956                           ;drivers/scr/API_MRF24J40.c: 544:  SetChannel();
  2957   0011FE  ECC2  F00C         	call	_SetChannel	;wreg free
  2958                           
  2959                           ;drivers/scr/API_MRF24J40.c: 545:  SetShortAddr((0x00), (0X00));
  2960   001202  0E00               	movlw	0
  2961   001204  6E30               	movwf	SetShortAddr@valor^0,c
  2962   001206  0E00               	movlw	0
  2963   001208  EC87  F00D         	call	_SetShortAddr
  2964                           
  2965                           ;drivers/scr/API_MRF24J40.c: 546:  (void)GetShortAddr((0x31));
  2966   00120C  0E31               	movlw	49
  2967   00120E  EC61  F00D         	call	_GetShortAddr
  2968   001212                     l99:
  2969   001212  0012               	return		;funcret
  2970   001214                     __end_of_MRF24J40Init:
  2971                           	callstack 0
  2972                           
  2973 ;; *************** function _SetDeviceMACAddress *****************
  2974 ;; Defined at:
  2975 ;;		line 672 in file "drivers/scr/API_MRF24J40.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;		None
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;  i               2    4[COMRAM] int 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;Total ram usage:        2 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 4
  2996 ;; This function calls:
  2997 ;;		_SetShortAddr
  2998 ;; This function is called by:
  2999 ;;		_MRF24J40Init
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text10
  3004   001900                     __ptext10:
  3005                           	callstack 0
  3006   001900                     _SetDeviceMACAddress:
  3007                           	callstack 25
  3008   001900                     
  3009                           ;drivers/scr/API_MRF24J40.c: 674:     long_mac_address = EADR0;
  3010   001900  0E05               	movlw	5
  3011   001902  6E2D               	movwf	_long_mac_address^0,c
  3012                           
  3013                           ;drivers/scr/API_MRF24J40.c: 676:     for(int i = 0; i < 8; i++) {
  3014   001904  0E00               	movlw	0
  3015   001906  6E33               	movwf	(SetDeviceMACAddress@i+1)^0,c
  3016   001908  0E00               	movlw	0
  3017   00190A  6E32               	movwf	SetDeviceMACAddress@i^0,c
  3018   00190C                     l1794:
  3019                           
  3020                           ;drivers/scr/API_MRF24J40.c: 678:         SetShortAddr(long_mac_address++, mrf24_data_co
      +                          nfig.my_mac[i]);
  3021   00190C  5032               	movf	SetDeviceMACAddress@i^0,w,c
  3022   00190E  0F15               	addlw	low (_mrf24_data_config+20)
  3023   001910  6ED9               	movwf	fsr2l,c
  3024   001912  6ADA               	clrf	fsr2h,c
  3025   001914  50DF               	movf	indf2,w,c
  3026   001916  6E30               	movwf	SetShortAddr@valor^0,c
  3027   001918  502D               	movf	_long_mac_address^0,w,c
  3028   00191A  EC87  F00D         	call	_SetShortAddr
  3029   00191E  2A2D               	incf	_long_mac_address^0,f,c
  3030   001920                     
  3031                           ;drivers/scr/API_MRF24J40.c: 679:     }
  3032   001920  4A32               	infsnz	SetDeviceMACAddress@i^0,f,c
  3033   001922  2A33               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  3034   001924  BE33               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  3035   001926  EF9E  F00C         	goto	u541
  3036   00192A  5033               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  3037   00192C  E109               	bnz	u540
  3038   00192E  0E08               	movlw	8
  3039   001930  5C32               	subwf	SetDeviceMACAddress@i^0,w,c
  3040   001932  A0D8               	btfss	status,0,c
  3041   001934  EF9E  F00C         	goto	u541
  3042   001938  EFA0  F00C         	goto	u540
  3043   00193C                     u541:
  3044   00193C  EF86  F00C         	goto	l1794
  3045   001940                     u540:
  3046   001940  0012               	return		;funcret
  3047   001942                     __end_of_SetDeviceMACAddress:
  3048                           	callstack 0
  3049                           
  3050 ;; *************** function _SetDeviceAddress *****************
  3051 ;; Defined at:
  3052 ;;		line 658 in file "drivers/scr/API_MRF24J40.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;		None
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;		None
  3057 ;; Return value:  Size  Location     Type
  3058 ;;                  1    wreg      void 
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0, cstack
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;Total ram usage:        0 bytes
  3071 ;; Hardware stack levels used: 1
  3072 ;; Hardware stack levels required when called: 4
  3073 ;; This function calls:
  3074 ;;		_SetShortAddr
  3075 ;; This function is called by:
  3076 ;;		_MRF24J40Init
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text11
  3081   001A4A                     __ptext11:
  3082                           	callstack 0
  3083   001A4A                     _SetDeviceAddress:
  3084                           	callstack 25
  3085   001A4A                     
  3086                           ;drivers/scr/API_MRF24J40.c: 660:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> (0X08)));
  3087   001A4A  5020               	movf	(_mrf24_data_config+31)^0,w,c
  3088   001A4C  6E30               	movwf	SetShortAddr@valor^0,c
  3089   001A4E  0E04               	movlw	4
  3090   001A50  EC87  F00D         	call	_SetShortAddr
  3091                           
  3092                           ;drivers/scr/API_MRF24J40.c: 661:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  3093   001A54  C01F  F030         	movff	_mrf24_data_config+30,SetShortAddr@valor
  3094   001A58  0E03               	movlw	3
  3095   001A5A  EC87  F00D         	call	_SetShortAddr
  3096                           
  3097                           ;drivers/scr/API_MRF24J40.c: 662:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> (0X08)));
  3098   001A5E  501E               	movf	(_mrf24_data_config+29)^0,w,c
  3099   001A60  6E30               	movwf	SetShortAddr@valor^0,c
  3100   001A62  0E02               	movlw	2
  3101   001A64  EC87  F00D         	call	_SetShortAddr
  3102                           
  3103                           ;drivers/scr/API_MRF24J40.c: 663:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  3104   001A68  C01D  F030         	movff	_mrf24_data_config+28,SetShortAddr@valor
  3105   001A6C  0E01               	movlw	1
  3106   001A6E  EC87  F00D         	call	_SetShortAddr
  3107   001A72  0012               	return		;funcret
  3108   001A74                     __end_of_SetDeviceAddress:
  3109                           	callstack 0
  3110                           
  3111 ;; *************** function _SetChannel *****************
  3112 ;; Defined at:
  3113 ;;		line 644 in file "drivers/scr/API_MRF24J40.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;		None
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;		None
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1    wreg      void 
  3120 ;; Registers used:
  3121 ;;		wreg, status,2, status,0, cstack
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;Total ram usage:        1 bytes
  3132 ;; Hardware stack levels used: 1
  3133 ;; Hardware stack levels required when called: 5
  3134 ;; This function calls:
  3135 ;;		_SetLongAddr
  3136 ;;		_SetShortAddr
  3137 ;; This function is called by:
  3138 ;;		_MRF24J40Init
  3139 ;; This function uses a non-reentrant model
  3140 ;;
  3141                           
  3142                           	psect	text12
  3143   001984                     __ptext12:
  3144                           	callstack 0
  3145   001984                     _SetChannel:
  3146                           	callstack 24
  3147   001984                     
  3148                           ;drivers/scr/API_MRF24J40.c: 646:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  3149   001984  0E02               	movlw	2
  3150   001986  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  3151   001988  0E00               	movlw	0
  3152   00198A  6E33               	movwf	SetLongAddr@reg_address^0,c
  3153   00198C  C004  F035         	movff	_mrf24_data_config+3,SetLongAddr@valor
  3154   001990  ECA1  F00C         	call	_SetLongAddr	;wreg free
  3155                           
  3156                           ;drivers/scr/API_MRF24J40.c: 647:  SetShortAddr((0x36), (0X04));
  3157   001994  0E04               	movlw	4
  3158   001996  6E30               	movwf	SetShortAddr@valor^0,c
  3159   001998  0E36               	movlw	54
  3160   00199A  EC87  F00D         	call	_SetShortAddr
  3161                           
  3162                           ;drivers/scr/API_MRF24J40.c: 648:  SetShortAddr((0x36), (0X00));
  3163   00199E  0E00               	movlw	0
  3164   0019A0  6E30               	movwf	SetShortAddr@valor^0,c
  3165   0019A2  0E36               	movlw	54
  3166   0019A4  EC87  F00D         	call	_SetShortAddr
  3167   0019A8                     
  3168                           ;drivers/scr/API_MRF24J40.c: 649:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3169   0019A8  0E06               	movlw	6
  3170   0019AA  6E38               	movwf	??_SetChannel^0,c
  3171   0019AC  0E30               	movlw	48
  3172   0019AE                     u867:
  3173   0019AE  2EE8               	decfsz	wreg,f,c
  3174   0019B0  D7FE               	bra	u867
  3175   0019B2  2E38               	decfsz	??_SetChannel^0,f,c
  3176   0019B4  D7FC               	bra	u867
  3177   0019B6  F000 F000          	nop2	
  3178   0019BA  0012               	return		;funcret
  3179   0019BC                     __end_of_SetChannel:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function _SetShortAddr *****************
  3183 ;; Defined at:
  3184 ;;		line 582 in file "drivers/scr/API_MRF24J40.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  reg_address     1    wreg     unsigned char 
  3187 ;;  valor           1    2[COMRAM] unsigned char 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  reg_address     1    3[COMRAM] unsigned char 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, status,2, status,0, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3199 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3200 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3202 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3203 ;;Total ram usage:        2 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; Hardware stack levels required when called: 3
  3206 ;; This function calls:
  3207 ;;		_SetCSPin
  3208 ;;		_WriteByteSPIPort
  3209 ;; This function is called by:
  3210 ;;		_MRF24J40Init
  3211 ;;		_SetChannel
  3212 ;;		_SetDeviceAddress
  3213 ;;		_SetDeviceMACAddress
  3214 ;;		_MRF24TransmitirDato
  3215 ;;		_MRF24ReciboPaquete
  3216 ;; This function uses a non-reentrant model
  3217 ;;
  3218                           
  3219                           	psect	text13
  3220   001B0E                     __ptext13:
  3221                           	callstack 0
  3222   001B0E                     _SetShortAddr:
  3223                           	callstack 26
  3224                           
  3225                           ;incstack = 0
  3226                           ;SetShortAddr@reg_address stored from wreg
  3227   001B0E  6E31               	movwf	SetShortAddr@reg_address^0,c
  3228   001B10                     
  3229                           ;drivers/scr/API_MRF24J40.c: 584:     reg_address = (uint8_t) (reg_address << (0X01)) | 
      +                          (0x01);
  3230   001B10  80D8               	bsf	status,0,c
  3231   001B12  3631               	rlcf	SetShortAddr@reg_address^0,f,c
  3232   001B14                     
  3233                           ;drivers/scr/API_MRF24J40.c: 585:     SetCSPin(0);
  3234   001B14  0E00               	movlw	0
  3235   001B16  EC00  F00E         	call	_SetCSPin
  3236   001B1A                     
  3237                           ;drivers/scr/API_MRF24J40.c: 586:  WriteByteSPIPort(reg_address);
  3238   001B1A  5031               	movf	SetShortAddr@reg_address^0,w,c
  3239   001B1C  EC18  F00E         	call	_WriteByteSPIPort
  3240   001B20                     
  3241                           ;drivers/scr/API_MRF24J40.c: 587:  WriteByteSPIPort(valor);
  3242   001B20  5030               	movf	SetShortAddr@valor^0,w,c
  3243   001B22  EC18  F00E         	call	_WriteByteSPIPort
  3244   001B26                     
  3245                           ;drivers/scr/API_MRF24J40.c: 588:     SetCSPin(1);
  3246   001B26  0E01               	movlw	1
  3247   001B28  EC00  F00E         	call	_SetCSPin
  3248   001B2C  0012               	return		;funcret
  3249   001B2E                     __end_of_SetShortAddr:
  3250                           	callstack 0
  3251                           
  3252 ;; *************** function _SetLongAddr *****************
  3253 ;; Defined at:
  3254 ;;		line 613 in file "drivers/scr/API_MRF24J40.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;  reg_address     2    5[COMRAM] unsigned short 
  3257 ;;  valor           1    7[COMRAM] unsigned char 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;		None
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3269 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3273 ;;Total ram usage:        5 bytes
  3274 ;; Hardware stack levels used: 1
  3275 ;; Hardware stack levels required when called: 4
  3276 ;; This function calls:
  3277 ;;		_SetCSPin
  3278 ;;		_Write2ByteSPIPort
  3279 ;;		_WriteByteSPIPort
  3280 ;; This function is called by:
  3281 ;;		_MRF24J40Init
  3282 ;;		_SetChannel
  3283 ;;		_MRF24TransmitirDato
  3284 ;;		_MRF24ReciboPaquete
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           	psect	text14
  3289   001942                     __ptext14:
  3290                           	callstack 0
  3291   001942                     _SetLongAddr:
  3292                           	callstack 25
  3293   001942                     
  3294                           ;drivers/scr/API_MRF24J40.c: 615:     reg_address = (reg_address << (0X05)) | (0X8010);
  3295   001942  C033  F036         	movff	SetLongAddr@reg_address,??_SetLongAddr
  3296   001946  C034  F037         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  3297   00194A  0E05               	movlw	5
  3298   00194C                     u485:
  3299   00194C  90D8               	bcf	status,0,c
  3300   00194E  3636               	rlcf	??_SetLongAddr^0,f,c
  3301   001950  3637               	rlcf	(??_SetLongAddr+1)^0,f,c
  3302   001952  2EE8               	decfsz	wreg,f,c
  3303   001954  EFA6  F00C         	goto	u485
  3304   001958  0E10               	movlw	16
  3305   00195A  1036               	iorwf	??_SetLongAddr^0,w,c
  3306   00195C  6E33               	movwf	SetLongAddr@reg_address^0,c
  3307   00195E  0E80               	movlw	128
  3308   001960  1037               	iorwf	(??_SetLongAddr+1)^0,w,c
  3309   001962  6E34               	movwf	(SetLongAddr@reg_address+1)^0,c
  3310   001964                     
  3311                           ;drivers/scr/API_MRF24J40.c: 616:     SetCSPin(0);
  3312   001964  0E00               	movlw	0
  3313   001966  EC00  F00E         	call	_SetCSPin
  3314   00196A                     
  3315                           ;drivers/scr/API_MRF24J40.c: 617:     Write2ByteSPIPort(reg_address);
  3316   00196A  C033  F031         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  3317   00196E  C034  F032         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3318   001972  ECF2  F00D         	call	_Write2ByteSPIPort	;wreg free
  3319   001976                     
  3320                           ;drivers/scr/API_MRF24J40.c: 618:  WriteByteSPIPort(valor);
  3321   001976  5035               	movf	SetLongAddr@valor^0,w,c
  3322   001978  EC18  F00E         	call	_WriteByteSPIPort
  3323   00197C                     
  3324                           ;drivers/scr/API_MRF24J40.c: 619:     SetCSPin(1);
  3325   00197C  0E01               	movlw	1
  3326   00197E  EC00  F00E         	call	_SetCSPin
  3327   001982  0012               	return		;funcret
  3328   001984                     __end_of_SetLongAddr:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _InicializoVariables *****************
  3332 ;; Defined at:
  3333 ;;		line 556 in file "drivers/scr/API_MRF24J40.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  i               2    1[COMRAM] int 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;Total ram usage:        3 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 1
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_MRF24J40Init
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text15
  3362   001606                     __ptext15:
  3363                           	callstack 0
  3364   001606                     _InicializoVariables:
  3365                           	callstack 28
  3366   001606                     
  3367                           ;drivers/scr/API_MRF24J40.c: 558:     for(int i = 0; i < 16; i++){
  3368   001606  0E00               	movlw	0
  3369   001608  6E30               	movwf	(InicializoVariables@i+1)^0,c
  3370   00160A  0E00               	movlw	0
  3371   00160C  6E2F               	movwf	InicializoVariables@i^0,c
  3372   00160E                     l1724:
  3373                           
  3374                           ;drivers/scr/API_MRF24J40.c: 560:         if(i < 8)
  3375   00160E  BE30               	btfsc	(InicializoVariables@i+1)^0,7,c
  3376   001610  EF15  F00B         	goto	u500
  3377   001614  5030               	movf	(InicializoVariables@i+1)^0,w,c
  3378   001616  E107               	bnz	u501
  3379   001618  0E08               	movlw	8
  3380   00161A  5C2F               	subwf	InicializoVariables@i^0,w,c
  3381   00161C  B0D8               	btfsc	status,0,c
  3382   00161E  EF13  F00B         	goto	u501
  3383   001622  EF15  F00B         	goto	u500
  3384   001626                     u501:
  3385   001626  EF23  F00B         	goto	l108
  3386   00162A                     u500:
  3387   00162A                     
  3388                           ;drivers/scr/API_MRF24J40.c: 561:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  3389   00162A  502F               	movf	InicializoVariables@i^0,w,c
  3390   00162C  0F11               	addlw	low _default_mac_address
  3391   00162E  6E2E               	movwf	??_InicializoVariables^0,c
  3392   001630  C02E  FFF6         	movff	??_InicializoVariables,tblptrl
  3393   001634                     	if	1	;There is more than 1 active tblptr byte
  3394   001634  0E10               	movlw	high __smallconst
  3395   001636  6EF7               	movwf	tblptrh,c
  3396   001638                     	endif
  3397   001638                     	if	0	;tblptru may be non-zero
  3398   001638                     	endif
  3399   001638                     	if	0	;tblptru may be non-zero
  3400   001638                     	endif
  3401   001638  502F               	movf	InicializoVariables@i^0,w,c
  3402   00163A  0F15               	addlw	low (_mrf24_data_config+20)
  3403   00163C  6ED9               	movwf	fsr2l,c
  3404   00163E  6ADA               	clrf	fsr2h,c
  3405   001640  0008               	tblrd		*
  3406   001642  CFF5 FFDF          	movff	tablat,indf2
  3407   001646                     l108:
  3408                           
  3409                           ;drivers/scr/API_MRF24J40.c: 562:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  3410   001646  502F               	movf	InicializoVariables@i^0,w,c
  3411   001648  0F01               	addlw	low _default_security_key
  3412   00164A  6E2E               	movwf	??_InicializoVariables^0,c
  3413   00164C  C02E  FFF6         	movff	??_InicializoVariables,tblptrl
  3414   001650                     	if	1	;There is more than 1 active tblptr byte
  3415   001650  0E10               	movlw	high __smallconst
  3416   001652  6EF7               	movwf	tblptrh,c
  3417   001654                     	endif
  3418   001654                     	if	0	;tblptru may be non-zero
  3419   001654                     	endif
  3420   001654                     	if	0	;tblptru may be non-zero
  3421   001654                     	endif
  3422   001654  502F               	movf	InicializoVariables@i^0,w,c
  3423   001656  0F05               	addlw	low (_mrf24_data_config+4)
  3424   001658  6ED9               	movwf	fsr2l,c
  3425   00165A  6ADA               	clrf	fsr2h,c
  3426   00165C  0008               	tblrd		*
  3427   00165E  CFF5 FFDF          	movff	tablat,indf2
  3428   001662                     
  3429                           ;drivers/scr/API_MRF24J40.c: 563:     }
  3430   001662  4A2F               	infsnz	InicializoVariables@i^0,f,c
  3431   001664  2A30               	incf	(InicializoVariables@i+1)^0,f,c
  3432   001666  BE30               	btfsc	(InicializoVariables@i+1)^0,7,c
  3433   001668  EF3F  F00B         	goto	u511
  3434   00166C  5030               	movf	(InicializoVariables@i+1)^0,w,c
  3435   00166E  E109               	bnz	u510
  3436   001670  0E10               	movlw	16
  3437   001672  5C2F               	subwf	InicializoVariables@i^0,w,c
  3438   001674  A0D8               	btfss	status,0,c
  3439   001676  EF3F  F00B         	goto	u511
  3440   00167A  EF41  F00B         	goto	u510
  3441   00167E                     u511:
  3442   00167E  EF07  F00B         	goto	l1724
  3443   001682                     u510:
  3444   001682                     
  3445                           ;drivers/scr/API_MRF24J40.c: 564:     mrf24_data_config.sequence_number = (0X01);
  3446   001682  0E01               	movlw	1
  3447   001684  6E03               	movwf	(_mrf24_data_config+2)^0,c
  3448                           
  3449                           ;drivers/scr/API_MRF24J40.c: 565:     mrf24_data_config.my_channel = CH_11;
  3450   001686  0E03               	movlw	3
  3451   001688  6E04               	movwf	(_mrf24_data_config+3)^0,c
  3452   00168A                     
  3453                           ;drivers/scr/API_MRF24J40.c: 566:     mrf24_data_config.get_new_msg = 0;
  3454   00168A  6A01               	clrf	_mrf24_data_config^0,c
  3455   00168C                     
  3456                           ;drivers/scr/API_MRF24J40.c: 567:     mrf24_data_config.put_new_msg = 0;
  3457   00168C  6A02               	clrf	(_mrf24_data_config+1)^0,c
  3458                           
  3459                           ;drivers/scr/API_MRF24J40.c: 568:     mrf24_data_config.my_panid = (0x1234);
  3460   00168E  0E12               	movlw	18
  3461   001690  6E1E               	movwf	(_mrf24_data_config+29)^0,c
  3462   001692  0E34               	movlw	52
  3463   001694  6E1D               	movwf	(_mrf24_data_config+28)^0,c
  3464                           
  3465                           ;drivers/scr/API_MRF24J40.c: 569:     mrf24_data_config.my_address = (0x1112);
  3466   001696  0E11               	movlw	17
  3467   001698  6E20               	movwf	(_mrf24_data_config+31)^0,c
  3468   00169A  0E12               	movlw	18
  3469   00169C  6E1F               	movwf	(_mrf24_data_config+30)^0,c
  3470                           
  3471                           ;drivers/scr/API_MRF24J40.c: 570:     mrf24_data_in.source_address = (0X00);
  3472   00169E  0E00               	movlw	0
  3473   0016A0  0100               	movlb	0	; () banked
  3474   0016A2  6FA9               	movwf	(_mrf24_data_in+3)& (0+255),b
  3475   0016A4  0E00               	movlw	0
  3476   0016A6  6FA8               	movwf	(_mrf24_data_in+2)& (0+255),b
  3477                           
  3478                           ;drivers/scr/API_MRF24J40.c: 571:     mrf24_data_in.source_panid = (0X00);
  3479   0016A8  0E00               	movlw	0
  3480   0016AA  6FA7               	movwf	(_mrf24_data_in+1)& (0+255),b
  3481   0016AC  0E00               	movlw	0
  3482   0016AE  6FA6               	movwf	_mrf24_data_in& (0+255),b
  3483   0016B0                     
  3484                           ; BSR set to: 0
  3485                           ;drivers/scr/API_MRF24J40.c: 572:     mrf24_data_in.tamano_mensaje = (0X00);
  3486   0016B0  6BAA               	clrf	(_mrf24_data_in+4)& (0+255),b
  3487   0016B2                     
  3488                           ; BSR set to: 0
  3489                           ;drivers/scr/API_MRF24J40.c: 573:     mrf24_data_in.buffer_entrada[0] = (0X00);
  3490   0016B2  6BAC               	clrf	(_mrf24_data_in+6)& (0+255),b
  3491   0016B4                     
  3492                           ; BSR set to: 0
  3493   0016B4  0012               	return		;funcret
  3494   0016B6                     __end_of_InicializoVariables:
  3495                           	callstack 0
  3496                           
  3497 ;; *************** function _InicializoPines *****************
  3498 ;; Defined at:
  3499 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  3500 ;; Parameters:    Size  Location     Type
  3501 ;;		None
  3502 ;; Auto vars:     Size  Location     Type
  3503 ;;		None
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  1    wreg      void 
  3506 ;; Registers used:
  3507 ;;		wreg, cstack
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;Total ram usage:        0 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; Hardware stack levels required when called: 2
  3520 ;; This function calls:
  3521 ;;		_SetCSPin
  3522 ;;		_SetResetPin
  3523 ;;		_SetWakePin
  3524 ;; This function is called by:
  3525 ;;		_MRF24J40Init
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529                           	psect	text16
  3530   001B8E                     __ptext16:
  3531                           	callstack 0
  3532   001B8E                     _InicializoPines:
  3533                           	callstack 27
  3534   001B8E                     
  3535                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  3536   001B8E  0E01               	movlw	1
  3537   001B90  EC00  F00E         	call	_SetCSPin
  3538                           
  3539                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  3540   001B94  0E01               	movlw	1
  3541   001B96  ECE4  F00D         	call	_SetWakePin
  3542                           
  3543                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  3544   001B9A  0E00               	movlw	0
  3545   001B9C  ECEB  F00D         	call	_SetResetPin
  3546   001BA0  0012               	return		;funcret
  3547   001BA2                     __end_of_InicializoPines:
  3548                           	callstack 0
  3549                           
  3550 ;; *************** function _SetWakePin *****************
  3551 ;; Defined at:
  3552 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  estado          1    wreg     _Bool 
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;  estado          1    0[COMRAM] _Bool 
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;Total ram usage:        1 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; Hardware stack levels required when called: 1
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_InicializoPines
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text17
  3581   001BC8                     __ptext17:
  3582                           	callstack 0
  3583   001BC8                     _SetWakePin:
  3584                           	callstack 27
  3585                           
  3586                           ;incstack = 0
  3587                           ;SetWakePin@estado stored from wreg
  3588   001BC8  6E2E               	movwf	SetWakePin@estado^0,c
  3589   001BCA                     
  3590                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  3591   001BCA  B02E               	btfsc	SetWakePin@estado^0,0,c
  3592   001BCC  D002               	bra	u465
  3593   001BCE  9E8B               	bcf	139,7,c	;volatile
  3594   001BD0  D001               	bra	u466
  3595   001BD2                     u465:
  3596   001BD2  8E8B               	bsf	139,7,c	;volatile
  3597   001BD4                     u466:
  3598   001BD4  0012               	return		;funcret
  3599   001BD6                     __end_of_SetWakePin:
  3600                           	callstack 0
  3601                           
  3602 ;; *************** function _SetResetPin *****************
  3603 ;; Defined at:
  3604 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  estado          1    wreg     _Bool 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  estado          1    0[COMRAM] _Bool 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;Total ram usage:        1 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_InicializoPines
  3629 ;;		_MRF24J40Init
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text18
  3634   001BD6                     __ptext18:
  3635                           	callstack 0
  3636   001BD6                     _SetResetPin:
  3637                           	callstack 28
  3638                           
  3639                           ;incstack = 0
  3640                           ;SetResetPin@estado stored from wreg
  3641   001BD6  6E2E               	movwf	SetResetPin@estado^0,c
  3642   001BD8                     
  3643                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  3644   001BD8  B02E               	btfsc	SetResetPin@estado^0,0,c
  3645   001BDA  D002               	bra	u475
  3646   001BDC  988C               	bcf	140,4,c	;volatile
  3647   001BDE  D001               	bra	u476
  3648   001BE0                     u475:
  3649   001BE0  888C               	bsf	140,4,c	;volatile
  3650   001BE2                     u476:
  3651   001BE2  0012               	return		;funcret
  3652   001BE4                     __end_of_SetResetPin:
  3653                           	callstack 0
  3654                           
  3655 ;; *************** function _GetShortAddr *****************
  3656 ;; Defined at:
  3657 ;;		line 597 in file "drivers/scr/API_MRF24J40.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;  reg_address     1    wreg     unsigned char 
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;  reg_address     1    3[COMRAM] unsigned char 
  3662 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  1    wreg      unsigned char 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;Total ram usage:        2 bytes
  3677 ;; Hardware stack levels used: 1
  3678 ;; Hardware stack levels required when called: 3
  3679 ;; This function calls:
  3680 ;;		_ReadByteSPIPort
  3681 ;;		_SetCSPin
  3682 ;;		_WriteByteSPIPort
  3683 ;; This function is called by:
  3684 ;;		_MRF24J40Init
  3685 ;;		_MRF24ReciboPaquete
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text19
  3690   001AC2                     __ptext19:
  3691                           	callstack 0
  3692   001AC2                     _GetShortAddr:
  3693                           	callstack 26
  3694                           
  3695                           ;incstack = 0
  3696                           ;GetShortAddr@reg_address stored from wreg
  3697   001AC2  6E31               	movwf	GetShortAddr@reg_address^0,c
  3698   001AC4                     
  3699                           ;drivers/scr/API_MRF24J40.c: 600:     reg_address = (uint8_t) (reg_address << (0X01)) & 
      +                          (0x7E);
  3700   001AC4  5031               	movf	GetShortAddr@reg_address^0,w,c
  3701   001AC6  2431               	addwf	GetShortAddr@reg_address^0,w,c
  3702   001AC8  0B7E               	andlw	126
  3703   001ACA  6E31               	movwf	GetShortAddr@reg_address^0,c
  3704   001ACC                     
  3705                           ;drivers/scr/API_MRF24J40.c: 601:     SetCSPin(0);
  3706   001ACC  0E00               	movlw	0
  3707   001ACE  EC00  F00E         	call	_SetCSPin
  3708   001AD2                     
  3709                           ;drivers/scr/API_MRF24J40.c: 602:     WriteByteSPIPort(reg_address);
  3710   001AD2  5031               	movf	GetShortAddr@reg_address^0,w,c
  3711   001AD4  EC18  F00E         	call	_WriteByteSPIPort
  3712   001AD8                     
  3713                           ;drivers/scr/API_MRF24J40.c: 603:     leido_spi = ReadByteSPIPort();
  3714   001AD8  EC1D  F00E         	call	_ReadByteSPIPort	;wreg free
  3715   001ADC  6E30               	movwf	GetShortAddr@leido_spi^0,c
  3716   001ADE                     
  3717                           ;drivers/scr/API_MRF24J40.c: 604:     SetCSPin(1);
  3718   001ADE  0E01               	movlw	1
  3719   001AE0  EC00  F00E         	call	_SetCSPin
  3720   001AE4                     
  3721                           ;drivers/scr/API_MRF24J40.c: 605:  return leido_spi;
  3722   001AE4  5030               	movf	GetShortAddr@leido_spi^0,w,c
  3723   001AE6  0012               	return		;funcret
  3724   001AE8                     __end_of_GetShortAddr:
  3725                           	callstack 0
  3726                           
  3727 ;; *************** function _WriteByteSPIPort *****************
  3728 ;; Defined at:
  3729 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  dato            1    wreg     unsigned char 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;  dato            1    1[COMRAM] unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;Total ram usage:        1 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 2
  3750 ;; This function calls:
  3751 ;;		_SPIWriteByte
  3752 ;; This function is called by:
  3753 ;;		_SetShortAddr
  3754 ;;		_GetShortAddr
  3755 ;;		_SetLongAddr
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           	psect	text20
  3760   001C30                     __ptext20:
  3761                           	callstack 0
  3762   001C30                     _WriteByteSPIPort:
  3763                           	callstack 26
  3764                           
  3765                           ;incstack = 0
  3766                           ;WriteByteSPIPort@dato stored from wreg
  3767   001C30  6E2F               	movwf	WriteByteSPIPort@dato^0,c
  3768   001C32                     
  3769                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  3770   001C32  502F               	movf	WriteByteSPIPort@dato^0,w,c
  3771   001C34  ECA4  F00D         	call	_SPIWriteByte
  3772   001C38  0012               	return		;funcret
  3773   001C3A                     __end_of_WriteByteSPIPort:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _GetLongAddr *****************
  3777 ;; Defined at:
  3778 ;;		line 628 in file "drivers/scr/API_MRF24J40.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  reg_address     2    5[COMRAM] unsigned short 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  respuesta       1    9[COMRAM] unsigned char 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      unsigned char 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3792 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;Total ram usage:        5 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 4
  3799 ;; This function calls:
  3800 ;;		_ReadByteSPIPort
  3801 ;;		_SetCSPin
  3802 ;;		_Write2ByteSPIPort
  3803 ;; This function is called by:
  3804 ;;		_MRF24J40Init
  3805 ;;		_MRF24ReciboPaquete
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           	psect	text21
  3810   0018BC                     __ptext21:
  3811                           	callstack 0
  3812   0018BC                     _GetLongAddr:
  3813                           	callstack 25
  3814   0018BC                     
  3815                           ;drivers/scr/API_MRF24J40.c: 630:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 631:  
      +                             reg_address = (reg_address << (0X05)) | (0X8000);
  3816   0018BC  C033  F035         	movff	GetLongAddr@reg_address,??_GetLongAddr
  3817   0018C0  C034  F036         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  3818   0018C4  0E05               	movlw	5
  3819   0018C6                     u555:
  3820   0018C6  90D8               	bcf	status,0,c
  3821   0018C8  3635               	rlcf	??_GetLongAddr^0,f,c
  3822   0018CA  3636               	rlcf	(??_GetLongAddr+1)^0,f,c
  3823   0018CC  2EE8               	decfsz	wreg,f,c
  3824   0018CE  EF63  F00C         	goto	u555
  3825   0018D2  0E00               	movlw	0
  3826   0018D4  1035               	iorwf	??_GetLongAddr^0,w,c
  3827   0018D6  6E33               	movwf	GetLongAddr@reg_address^0,c
  3828   0018D8  0E80               	movlw	128
  3829   0018DA  1036               	iorwf	(??_GetLongAddr+1)^0,w,c
  3830   0018DC  6E34               	movwf	(GetLongAddr@reg_address+1)^0,c
  3831   0018DE                     
  3832                           ;drivers/scr/API_MRF24J40.c: 632:     SetCSPin(0);
  3833   0018DE  0E00               	movlw	0
  3834   0018E0  EC00  F00E         	call	_SetCSPin
  3835   0018E4                     
  3836                           ;drivers/scr/API_MRF24J40.c: 633:     Write2ByteSPIPort(reg_address);
  3837   0018E4  C033  F031         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  3838   0018E8  C034  F032         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3839   0018EC  ECF2  F00D         	call	_Write2ByteSPIPort	;wreg free
  3840   0018F0                     
  3841                           ;drivers/scr/API_MRF24J40.c: 634:  respuesta = ReadByteSPIPort();
  3842   0018F0  EC1D  F00E         	call	_ReadByteSPIPort	;wreg free
  3843   0018F4  6E37               	movwf	GetLongAddr@respuesta^0,c
  3844   0018F6                     
  3845                           ;drivers/scr/API_MRF24J40.c: 635:     SetCSPin(1);
  3846   0018F6  0E01               	movlw	1
  3847   0018F8  EC00  F00E         	call	_SetCSPin
  3848   0018FC                     
  3849                           ;drivers/scr/API_MRF24J40.c: 636:  return respuesta;
  3850   0018FC  5037               	movf	GetLongAddr@respuesta^0,w,c
  3851   0018FE  0012               	return		;funcret
  3852   001900                     __end_of_GetLongAddr:
  3853                           	callstack 0
  3854                           
  3855 ;; *************** function _Write2ByteSPIPort *****************
  3856 ;; Defined at:
  3857 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  dato            2    3[COMRAM] unsigned short 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;Total ram usage:        2 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 3
  3878 ;; This function calls:
  3879 ;;		_SPIWrite2Byte
  3880 ;; This function is called by:
  3881 ;;		_SetLongAddr
  3882 ;;		_GetLongAddr
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text22
  3887   001BE4                     __ptext22:
  3888                           	callstack 0
  3889   001BE4                     _Write2ByteSPIPort:
  3890                           	callstack 25
  3891   001BE4                     
  3892                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  3893   001BE4  C031  F02F         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  3894   001BE8  C032  F030         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  3895   001BEC  ECF9  F00D         	call	_SPIWrite2Byte	;wreg free
  3896   001BF0  0012               	return		;funcret
  3897   001BF2                     __end_of_Write2ByteSPIPort:
  3898                           	callstack 0
  3899                           
  3900 ;; *************** function _SPIWrite2Byte *****************
  3901 ;; Defined at:
  3902 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;  dato            2    1[COMRAM] unsigned short 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, status,2, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3916 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;Total ram usage:        2 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 2
  3923 ;; This function calls:
  3924 ;;		_SPIWriteByte
  3925 ;; This function is called by:
  3926 ;;		_Write2ByteSPIPort
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text23
  3931   001BF2                     __ptext23:
  3932                           	callstack 0
  3933   001BF2                     _SPIWrite2Byte:
  3934                           	callstack 25
  3935   001BF2                     
  3936                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  3937   001BF2  5030               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  3938   001BF4  ECA4  F00D         	call	_SPIWriteByte
  3939                           
  3940                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  3941   001BF8  502F               	movf	SPIWrite2Byte@dato^0,w,c
  3942   001BFA  ECA4  F00D         	call	_SPIWriteByte
  3943   001BFE  0012               	return		;funcret
  3944   001C00                     __end_of_SPIWrite2Byte:
  3945                           	callstack 0
  3946                           
  3947 ;; *************** function _SPIWriteByte *****************
  3948 ;; Defined at:
  3949 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;  dato            1    wreg     unsigned char 
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  dato            1    0[COMRAM] unsigned char 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3964 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3966 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3967 ;;Total ram usage:        1 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 1
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_WriteByteSPIPort
  3974 ;;		_SPIWrite2Byte
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text24
  3979   001B48                     __ptext24:
  3980                           	callstack 0
  3981   001B48                     _SPIWriteByte:
  3982                           	callstack 26
  3983                           
  3984                           ;incstack = 0
  3985                           ;SPIWriteByte@dato stored from wreg
  3986   001B48  6E2E               	movwf	SPIWriteByte@dato^0,c
  3987   001B4A                     
  3988                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  3989   001B4A  969E               	bcf	158,3,c	;volatile
  3990   001B4C                     
  3991                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  3992   001B4C  C02E  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  3993   001B50                     l180:
  3994   001B50  A69E               	btfss	158,3,c	;volatile
  3995   001B52  EFAD  F00D         	goto	u431
  3996   001B56  EFAF  F00D         	goto	u430
  3997   001B5A                     u431:
  3998   001B5A  EFA8  F00D         	goto	l180
  3999   001B5E                     u430:
  4000   001B5E  0012               	return		;funcret
  4001   001B60                     __end_of_SPIWriteByte:
  4002                           	callstack 0
  4003                           
  4004 ;; *************** function _SetCSPin *****************
  4005 ;; Defined at:
  4006 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  estado          1    wreg     _Bool 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  estado          1    0[COMRAM] _Bool 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;Total ram usage:        1 bytes
  4025 ;; Hardware stack levels used: 1
  4026 ;; Hardware stack levels required when called: 1
  4027 ;; This function calls:
  4028 ;;		Nothing
  4029 ;; This function is called by:
  4030 ;;		_InicializoPines
  4031 ;;		_SetShortAddr
  4032 ;;		_GetShortAddr
  4033 ;;		_SetLongAddr
  4034 ;;		_GetLongAddr
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text25
  4039   001C00                     __ptext25:
  4040                           	callstack 0
  4041   001C00                     _SetCSPin:
  4042                           	callstack 27
  4043                           
  4044                           ;incstack = 0
  4045                           ;SetCSPin@estado stored from wreg
  4046   001C00  6E2E               	movwf	SetCSPin@estado^0,c
  4047   001C02                     
  4048                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  4049   001C02  B02E               	btfsc	SetCSPin@estado^0,0,c
  4050   001C04  D002               	bra	u445
  4051   001C06  9C8B               	bcf	139,6,c	;volatile
  4052   001C08  D001               	bra	u446
  4053   001C0A                     u445:
  4054   001C0A  8C8B               	bsf	139,6,c	;volatile
  4055   001C0C                     u446:
  4056   001C0C  0012               	return		;funcret
  4057   001C0E                     __end_of_SetCSPin:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _ReadByteSPIPort *****************
  4061 ;; Defined at:
  4062 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;		None
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;		None
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  1    wreg      unsigned char 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, cstack
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4080 ;;Total ram usage:        0 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; Hardware stack levels required when called: 2
  4083 ;; This function calls:
  4084 ;;		_SPIRead
  4085 ;; This function is called by:
  4086 ;;		_GetShortAddr
  4087 ;;		_GetLongAddr
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text26
  4092   001C3A                     __ptext26:
  4093                           	callstack 0
  4094   001C3A                     _ReadByteSPIPort:
  4095                           	callstack 26
  4096   001C3A                     
  4097                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  4098   001C3A  ECBC  F00D         	call	_SPIRead	;wreg free
  4099   001C3E  0012               	return		;funcret
  4100   001C40                     __end_of_ReadByteSPIPort:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _SPIRead *****************
  4104 ;; Defined at:
  4105 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      unsigned char 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;Total ram usage:        0 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 1
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_ReadByteSPIPort
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text27
  4134   001B78                     __ptext27:
  4135                           	callstack 0
  4136   001B78                     _SPIRead:
  4137                           	callstack 26
  4138   001B78                     
  4139                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  4140   001B78  9EC6               	bcf	198,7,c	;volatile
  4141                           
  4142                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  4143   001B7A  6AC9               	clrf	201,c	;volatile
  4144   001B7C                     l189:
  4145   001B7C  A0C7               	btfss	199,0,c	;volatile
  4146   001B7E  EFC3  F00D         	goto	u451
  4147   001B82  EFC5  F00D         	goto	u450
  4148   001B86                     u451:
  4149   001B86  EFBE  F00D         	goto	l189
  4150   001B8A                     u450:
  4151   001B8A                     
  4152                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  4153   001B8A  50C9               	movf	201,w,c	;volatile
  4154   001B8C  0012               	return		;funcret
  4155   001B8E                     __end_of_SPIRead:
  4156                           	callstack 0
  4157                           
  4158 ;; *************** function _DelayReset *****************
  4159 ;; Defined at:
  4160 ;;		line 68 in file "drivers/scr/API_delay.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;  delay           1    0[COMRAM] PTR struct .
  4163 ;;		 -> MRF24J40Init@delay_time_out(9), 
  4164 ;; Auto vars:     Size  Location     Type
  4165 ;;		None
  4166 ;; Return value:  Size  Location     Type
  4167 ;;                  1    wreg      void 
  4168 ;; Registers used:
  4169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4170 ;; Tracked objects:
  4171 ;;		On entry : 0/0
  4172 ;;		On exit  : 0/0
  4173 ;;		Unchanged: 0/0
  4174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4175 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;Total ram usage:        1 bytes
  4180 ;; Hardware stack levels used: 1
  4181 ;; Hardware stack levels required when called: 1
  4182 ;; This function calls:
  4183 ;;		Nothing
  4184 ;; This function is called by:
  4185 ;;		_MRF24J40Init
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text28
  4190   001AE8                     __ptext28:
  4191                           	callstack 0
  4192   001AE8                     _DelayReset:
  4193                           	callstack 28
  4194   001AE8                     
  4195                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  4196   001AE8  502E               	movf	DelayReset@delay^0,w,c
  4197   001AEA  6ED9               	movwf	fsr2l,c
  4198   001AEC  6ADA               	clrf	fsr2h,c
  4199   001AEE  C029  FFDE         	movff	_timeStamp,postinc2
  4200   001AF2  C02A  FFDE         	movff	_timeStamp+1,postinc2
  4201   001AF6  C02B  FFDE         	movff	_timeStamp+2,postinc2
  4202   001AFA  C02C  FFDE         	movff	_timeStamp+3,postinc2
  4203   001AFE                     
  4204                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  4205   001AFE  502E               	movf	DelayReset@delay^0,w,c
  4206   001B00  6ED9               	movwf	fsr2l,c
  4207   001B02  6ADA               	clrf	fsr2h,c
  4208   001B04  0E08               	movlw	8
  4209   001B06  26D9               	addwf	fsr2l,f,c
  4210   001B08  0E01               	movlw	1
  4211   001B0A  6EDF               	movwf	indf2,c
  4212   001B0C  0012               	return		;funcret
  4213   001B0E                     __end_of_DelayReset:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function _MRF24IsNewMsg *****************
  4217 ;; Defined at:
  4218 ;;		line 752 in file "drivers/scr/API_MRF24J40.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;		None
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      _Bool 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4236 ;;Total ram usage:        0 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; Hardware stack levels required when called: 2
  4239 ;; This function calls:
  4240 ;;		_IsMRF24Interrup
  4241 ;; This function is called by:
  4242 ;;		_main
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text29
  4247   001B2E                     __ptext29:
  4248                           	callstack 0
  4249   001B2E                     _MRF24IsNewMsg:
  4250                           	callstack 28
  4251   001B2E                     
  4252                           ;drivers/scr/API_MRF24J40.c: 754:  return !IsMRF24Interrup();
  4253   001B2E  ECD1  F00D         	call	_IsMRF24Interrup	;wreg free
  4254   001B32  0900               	iorlw	0
  4255   001B34  B4D8               	btfsc	status,2,c
  4256   001B36  EF9F  F00D         	goto	u621
  4257   001B3A  EFA2  F00D         	goto	u620
  4258   001B3E                     u621:
  4259   001B3E  0E01               	movlw	1
  4260   001B40  EFA3  F00D         	goto	u630
  4261   001B44                     u620:
  4262   001B44  0E00               	movlw	0
  4263   001B46                     u630:
  4264   001B46  0012               	return		;funcret
  4265   001B48                     __end_of_MRF24IsNewMsg:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _IsMRF24Interrup *****************
  4269 ;; Defined at:
  4270 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      _Bool 
  4277 ;; Registers used:
  4278 ;;		wreg
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;Total ram usage:        0 bytes
  4289 ;; Hardware stack levels used: 1
  4290 ;; Hardware stack levels required when called: 1
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_MRF24IsNewMsg
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           	psect	text30
  4299   001BA2                     __ptext30:
  4300                           	callstack 0
  4301   001BA2                     _IsMRF24Interrup:
  4302                           	callstack 28
  4303   001BA2                     
  4304                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  4305   001BA2  B081               	btfsc	129,0,c	;volatile
  4306   001BA4  EFD6  F00D         	goto	u491
  4307   001BA8  EFD9  F00D         	goto	u490
  4308   001BAC                     u491:
  4309   001BAC  0E01               	movlw	1
  4310   001BAE  EFDA  F00D         	goto	u496
  4311   001BB2                     u490:
  4312   001BB2  0E00               	movlw	0
  4313   001BB4                     u496:
  4314   001BB4  0012               	return		;funcret
  4315   001BB6                     __end_of_IsMRF24Interrup:
  4316                           	callstack 0
  4317                           
  4318 ;; *************** function _MRF24GetMensajeEntrada *****************
  4319 ;; Defined at:
  4320 ;;		line 784 in file "drivers/scr/API_MRF24J40.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    0[COMRAM] PTR unsigned char 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;Total ram usage:        2 bytes
  4339 ;; Hardware stack levels used: 1
  4340 ;; Hardware stack levels required when called: 1
  4341 ;; This function calls:
  4342 ;;		Nothing
  4343 ;; This function is called by:
  4344 ;;		_main
  4345 ;; This function uses a non-reentrant model
  4346 ;;
  4347                           
  4348                           	psect	text31
  4349   001C40                     __ptext31:
  4350                           	callstack 0
  4351   001C40                     _MRF24GetMensajeEntrada:
  4352                           	callstack 29
  4353   001C40                     
  4354                           ;drivers/scr/API_MRF24J40.c: 786:  return mrf24_data_in.buffer_entrada;
  4355   001C40  0EA6               	movlw	_mrf24_data_in& (0+255)
  4356   001C42  0F06               	addlw	6
  4357   001C44  0012               	return		;funcret
  4358   001C46                     __end_of_MRF24GetMensajeEntrada:
  4359                           	callstack 0
  4360                           
  4361 ;; *************** function _DebounceFSMUpdate *****************
  4362 ;; Defined at:
  4363 ;;		line 34 in file "drivers/scr/API_debounce.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  antirrebote_    1   14[COMRAM] PTR struct .
  4366 ;;		 -> main@boton1(11), 
  4367 ;;  estado_pin      1   15[COMRAM] _Bool 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      enum E3287
  4372 ;; Registers used:
  4373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4379 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;Total ram usage:        4 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; Hardware stack levels required when called: 3
  4386 ;; This function calls:
  4387 ;;		_DebounceFSMInit
  4388 ;;		_DelayRead
  4389 ;; This function is called by:
  4390 ;;		_main
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text32
  4395   0013BC                     __ptext32:
  4396                           	callstack 0
  4397   0013BC                     _DebounceFSMUpdate:
  4398                           	callstack 27
  4399   0013BC                     
  4400                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  4401   0013BC  EF58  F00A         	goto	l2088
  4402   0013C0                     l2036:
  4403                           
  4404                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  4405   0013C0  503D               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4406   0013C2  A4D8               	btfss	status,2,c
  4407   0013C4  EFE6  F009         	goto	u651
  4408   0013C8  EFE8  F009         	goto	u650
  4409   0013CC                     u651:
  4410   0013CC  EF7A  F00A         	goto	l2090
  4411   0013D0                     u650:
  4412   0013D0                     
  4413                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  4414   0013D0  503C               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4415   0013D2  6ED9               	movwf	fsr2l,c
  4416   0013D4  6ADA               	clrf	fsr2h,c
  4417   0013D6  0E01               	movlw	1
  4418   0013D8  26D9               	addwf	fsr2l,f,c
  4419   0013DA  0E01               	movlw	1
  4420   0013DC  6EDF               	movwf	indf2,c
  4421   0013DE  EF7A  F00A         	goto	l2090
  4422   0013E2                     l2040:
  4423                           
  4424                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4425   0013E2  503C               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4426   0013E4  0F02               	addlw	2
  4427   0013E6  6E2F               	movwf	DelayRead@delay^0,c
  4428   0013E8  EC5B  F00B         	call	_DelayRead	;wreg free
  4429   0013EC  0900               	iorlw	0
  4430   0013EE  B4D8               	btfsc	status,2,c
  4431   0013F0  EFFC  F009         	goto	u661
  4432   0013F4  EFFE  F009         	goto	u660
  4433   0013F8                     u661:
  4434   0013F8  EF7A  F00A         	goto	l2090
  4435   0013FC                     u660:
  4436   0013FC                     
  4437                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  4438   0013FC  503D               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4439   0013FE  A4D8               	btfss	status,2,c
  4440   001400  EF04  F00A         	goto	u671
  4441   001404  EF06  F00A         	goto	u670
  4442   001408                     u671:
  4443   001408  EF10  F00A         	goto	l2052
  4444   00140C                     u670:
  4445   00140C                     
  4446                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4447   00140C  503C               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4448   00140E  6ED9               	movwf	fsr2l,c
  4449   001410  6ADA               	clrf	fsr2h,c
  4450   001412  0E01               	movlw	1
  4451   001414  26D9               	addwf	fsr2l,f,c
  4452   001416  0E02               	movlw	2
  4453   001418  6EDF               	movwf	indf2,c
  4454   00141A                     
  4455                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  4456   00141A  0E01               	movlw	1
  4457   00141C  EF7B  F00A         	goto	l380
  4458   001420                     l2052:
  4459                           
  4460                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4461   001420  503C               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4462   001422  6ED9               	movwf	fsr2l,c
  4463   001424  6ADA               	clrf	fsr2h,c
  4464   001426  0E01               	movlw	1
  4465   001428  26D9               	addwf	fsr2l,f,c
  4466   00142A  6ADF               	clrf	indf2,c
  4467   00142C                     l2054:
  4468                           
  4469                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  4470   00142C  0E04               	movlw	4
  4471   00142E  EF7B  F00A         	goto	l380
  4472   001432                     l2058:
  4473                           
  4474                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4475   001432  503C               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4476   001434  0F02               	addlw	2
  4477   001436  6E2F               	movwf	DelayRead@delay^0,c
  4478   001438  EC5B  F00B         	call	_DelayRead	;wreg free
  4479   00143C  0900               	iorlw	0
  4480   00143E  B4D8               	btfsc	status,2,c
  4481   001440  EF24  F00A         	goto	u681
  4482   001444  EF26  F00A         	goto	u680
  4483   001448                     u681:
  4484   001448  EF7A  F00A         	goto	l2090
  4485   00144C                     u680:
  4486   00144C                     
  4487                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  4488   00144C  503D               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4489   00144E  B4D8               	btfsc	status,2,c
  4490   001450  EF2C  F00A         	goto	u691
  4491   001454  EF2E  F00A         	goto	u690
  4492   001458                     u691:
  4493   001458  EF37  F00A         	goto	l2070
  4494   00145C                     u690:
  4495   00145C                     
  4496                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4497   00145C  503C               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4498   00145E  6ED9               	movwf	fsr2l,c
  4499   001460  6ADA               	clrf	fsr2h,c
  4500   001462  0E01               	movlw	1
  4501   001464  26D9               	addwf	fsr2l,f,c
  4502   001466  6ADF               	clrf	indf2,c
  4503   001468                     
  4504                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  4505   001468  0E02               	movlw	2
  4506   00146A  EF7B  F00A         	goto	l380
  4507   00146E                     l2070:
  4508                           
  4509                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4510   00146E  503C               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4511   001470  6ED9               	movwf	fsr2l,c
  4512   001472  6ADA               	clrf	fsr2h,c
  4513   001474  0E01               	movlw	1
  4514   001476  26D9               	addwf	fsr2l,f,c
  4515   001478  0E02               	movlw	2
  4516   00147A  6EDF               	movwf	indf2,c
  4517   00147C  EF16  F00A         	goto	l2054
  4518   001480                     l2076:
  4519                           
  4520                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  4521   001480  503D               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4522   001482  B4D8               	btfsc	status,2,c
  4523   001484  EF46  F00A         	goto	u701
  4524   001488  EF48  F00A         	goto	u700
  4525   00148C                     u701:
  4526   00148C  EF7A  F00A         	goto	l2090
  4527   001490                     u700:
  4528   001490                     
  4529                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  4530   001490  503C               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4531   001492  6ED9               	movwf	fsr2l,c
  4532   001494  6ADA               	clrf	fsr2h,c
  4533   001496  0E01               	movlw	1
  4534   001498  26D9               	addwf	fsr2l,f,c
  4535   00149A  0E03               	movlw	3
  4536   00149C  6EDF               	movwf	indf2,c
  4537   00149E  EF7A  F00A         	goto	l2090
  4538   0014A2                     l2080:
  4539                           
  4540                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  4541   0014A2  C03C  F033         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  4542   0014A6  ECF8  F00C         	call	_DebounceFSMInit	;wreg free
  4543   0014AA                     
  4544                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  4545   0014AA  0E00               	movlw	0
  4546   0014AC  EF7B  F00A         	goto	l380
  4547   0014B0                     l2088:
  4548   0014B0  503C               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4549   0014B2  6ED9               	movwf	fsr2l,c
  4550   0014B4  6ADA               	clrf	fsr2h,c
  4551   0014B6  0E01               	movlw	1
  4552   0014B8  26D9               	addwf	fsr2l,f,c
  4553   0014BA  50DF               	movf	indf2,w,c
  4554   0014BC  6E3E               	movwf	??_DebounceFSMUpdate^0,c
  4555   0014BE  6A3F               	clrf	(??_DebounceFSMUpdate+1)^0,c
  4556                           
  4557                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4558                           ; Switch size 1, requested type "simple"
  4559                           ; Number of cases is 1, Range of values is 0 to 0
  4560                           ; switch strategies available:
  4561                           ; Name         Instructions Cycles
  4562                           ; simple_byte            4     3 (average)
  4563                           ;	Chosen strategy is simple_byte
  4564   0014C0  503F               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  4565   0014C2  0A00               	xorlw	0	; case 0
  4566   0014C4  B4D8               	btfsc	status,2,c
  4567   0014C6  EF67  F00A         	goto	l2212
  4568   0014CA  EF51  F00A         	goto	l2080
  4569   0014CE                     l2212:
  4570                           
  4571                           ; Switch size 1, requested type "simple"
  4572                           ; Number of cases is 4, Range of values is 0 to 3
  4573                           ; switch strategies available:
  4574                           ; Name         Instructions Cycles
  4575                           ; simple_byte           13     7 (average)
  4576                           ;	Chosen strategy is simple_byte
  4577   0014CE  503E               	movf	??_DebounceFSMUpdate^0,w,c
  4578   0014D0  0A00               	xorlw	0	; case 0
  4579   0014D2  B4D8               	btfsc	status,2,c
  4580   0014D4  EFE0  F009         	goto	l2036
  4581   0014D8  0A01               	xorlw	1	; case 1
  4582   0014DA  B4D8               	btfsc	status,2,c
  4583   0014DC  EFF1  F009         	goto	l2040
  4584   0014E0  0A03               	xorlw	3	; case 2
  4585   0014E2  B4D8               	btfsc	status,2,c
  4586   0014E4  EF40  F00A         	goto	l2076
  4587   0014E8  0A01               	xorlw	1	; case 3
  4588   0014EA  B4D8               	btfsc	status,2,c
  4589   0014EC  EF19  F00A         	goto	l2058
  4590   0014F0  EF51  F00A         	goto	l2080
  4591   0014F4                     l2090:
  4592                           
  4593                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  4594   0014F4  0E03               	movlw	3
  4595   0014F6                     l380:
  4596   0014F6  0012               	return		;funcret
  4597   0014F8                     __end_of_DebounceFSMUpdate:
  4598                           	callstack 0
  4599                           
  4600 ;; *************** function _DelayRead *****************
  4601 ;; Defined at:
  4602 ;;		line 34 in file "drivers/scr/API_delay.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  delay           1    1[COMRAM] PTR struct .
  4605 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;		None
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      _Bool 
  4610 ;; Registers used:
  4611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4617 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4620 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4621 ;;Total ram usage:       13 bytes
  4622 ;; Hardware stack levels used: 1
  4623 ;; Hardware stack levels required when called: 2
  4624 ;; This function calls:
  4625 ;;		_DelayIsRunning
  4626 ;; This function is called by:
  4627 ;;		_MRF24J40Init
  4628 ;;		_main
  4629 ;;		_DebounceFSMUpdate
  4630 ;; This function uses a non-reentrant model
  4631 ;;
  4632                           
  4633                           	psect	text33
  4634   0016B6                     __ptext33:
  4635                           	callstack 0
  4636   0016B6                     _DelayRead:
  4637                           	callstack 27
  4638   0016B6                     
  4639                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  4640   0016B6  C02F  F02E         	movff	DelayRead@delay,DelayIsRunning@delay
  4641   0016BA  EC07  F00E         	call	_DelayIsRunning	;wreg free
  4642   0016BE  0900               	iorlw	0
  4643   0016C0  A4D8               	btfss	status,2,c
  4644   0016C2  EF65  F00B         	goto	u521
  4645   0016C6  EF67  F00B         	goto	u520
  4646   0016CA                     u521:
  4647   0016CA  EF7B  F00B         	goto	l1772
  4648   0016CE                     u520:
  4649   0016CE                     
  4650                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  4651   0016CE  502F               	movf	DelayRead@delay^0,w,c
  4652   0016D0  6ED9               	movwf	fsr2l,c
  4653   0016D2  6ADA               	clrf	fsr2h,c
  4654   0016D4  C029  FFDE         	movff	_timeStamp,postinc2
  4655   0016D8  C02A  FFDE         	movff	_timeStamp+1,postinc2
  4656   0016DC  C02B  FFDE         	movff	_timeStamp+2,postinc2
  4657   0016E0  C02C  FFDE         	movff	_timeStamp+3,postinc2
  4658   0016E4                     
  4659                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  4660   0016E4  502F               	movf	DelayRead@delay^0,w,c
  4661   0016E6  6ED9               	movwf	fsr2l,c
  4662   0016E8  6ADA               	clrf	fsr2h,c
  4663   0016EA  0E08               	movlw	8
  4664   0016EC  26D9               	addwf	fsr2l,f,c
  4665   0016EE  0E01               	movlw	1
  4666   0016F0  6EDF               	movwf	indf2,c
  4667                           
  4668                           ;drivers/scr/API_delay.c: 40:  } else {
  4669   0016F2  EFAF  F00B         	goto	l1780
  4670   0016F6                     l1772:
  4671                           
  4672                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  4673   0016F6  502F               	movf	DelayRead@delay^0,w,c
  4674   0016F8  6ED9               	movwf	fsr2l,c
  4675   0016FA  6ADA               	clrf	fsr2h,c
  4676   0016FC  0E04               	movlw	4
  4677   0016FE  26D9               	addwf	fsr2l,f,c
  4678   001700  502F               	movf	DelayRead@delay^0,w,c
  4679   001702  6EE1               	movwf	fsr1l,c
  4680   001704  6AE2               	clrf	fsr1h,c
  4681   001706  CFE6 F034          	movff	postinc1,??_DelayRead+4
  4682   00170A  CFE6 F035          	movff	postinc1,??_DelayRead+5
  4683   00170E  CFE6 F036          	movff	postinc1,??_DelayRead+6
  4684   001712  CFE6 F037          	movff	postinc1,??_DelayRead+7
  4685   001716  5034               	movf	(??_DelayRead+4)^0,w,c
  4686   001718  5C29               	subwf	_timeStamp^0,w,c
  4687   00171A  6E38               	movwf	(??_DelayRead+8)^0,c
  4688   00171C  5035               	movf	(??_DelayRead+5)^0,w,c
  4689   00171E  582A               	subwfb	(_timeStamp+1)^0,w,c
  4690   001720  6E39               	movwf	(??_DelayRead+9)^0,c
  4691   001722  5036               	movf	(??_DelayRead+6)^0,w,c
  4692   001724  582B               	subwfb	(_timeStamp+2)^0,w,c
  4693   001726  6E3A               	movwf	(??_DelayRead+10)^0,c
  4694   001728  5037               	movf	(??_DelayRead+7)^0,w,c
  4695   00172A  582C               	subwfb	(_timeStamp+3)^0,w,c
  4696   00172C  6E3B               	movwf	(??_DelayRead+11)^0,c
  4697   00172E  50DE               	movf	postinc2,w,c
  4698   001730  5C38               	subwf	(??_DelayRead+8)^0,w,c
  4699   001732  50DE               	movf	postinc2,w,c
  4700   001734  5839               	subwfb	(??_DelayRead+9)^0,w,c
  4701   001736  50DE               	movf	postinc2,w,c
  4702   001738  583A               	subwfb	(??_DelayRead+10)^0,w,c
  4703   00173A  50DE               	movf	postinc2,w,c
  4704   00173C  583B               	subwfb	(??_DelayRead+11)^0,w,c
  4705   00173E  A0D8               	btfss	status,0,c
  4706   001740  EFA4  F00B         	goto	u531
  4707   001744  EFA6  F00B         	goto	u530
  4708   001748                     u531:
  4709   001748  EFAF  F00B         	goto	l1780
  4710   00174C                     u530:
  4711   00174C                     
  4712                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  4713   00174C  502F               	movf	DelayRead@delay^0,w,c
  4714   00174E  6ED9               	movwf	fsr2l,c
  4715   001750  6ADA               	clrf	fsr2h,c
  4716   001752  0E08               	movlw	8
  4717   001754  26D9               	addwf	fsr2l,f,c
  4718   001756  6ADF               	clrf	indf2,c
  4719   001758                     
  4720                           ;drivers/scr/API_delay.c: 45:    return 1;
  4721   001758  0E01               	movlw	1
  4722   00175A  EFB0  F00B         	goto	l354
  4723   00175E                     l1780:
  4724                           
  4725                           ;drivers/scr/API_delay.c: 48:  return 0;
  4726   00175E  0E00               	movlw	0
  4727   001760                     l354:
  4728   001760  0012               	return		;funcret
  4729   001762                     __end_of_DelayRead:
  4730                           	callstack 0
  4731                           
  4732 ;; *************** function _DelayIsRunning *****************
  4733 ;; Defined at:
  4734 ;;		line 83 in file "drivers/scr/API_delay.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  delay           1    0[COMRAM] PTR struct .
  4737 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      _Bool 
  4742 ;; Registers used:
  4743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4749 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4753 ;;Total ram usage:        1 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; Hardware stack levels required when called: 1
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_DelayRead
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text34
  4764   001C0E                     __ptext34:
  4765                           	callstack 0
  4766   001C0E                     _DelayIsRunning:
  4767                           	callstack 27
  4768   001C0E                     
  4769                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  4770   001C0E  502E               	movf	DelayIsRunning@delay^0,w,c
  4771   001C10  6ED9               	movwf	fsr2l,c
  4772   001C12  6ADA               	clrf	fsr2h,c
  4773   001C14  0E08               	movlw	8
  4774   001C16  26D9               	addwf	fsr2l,f,c
  4775   001C18  50DF               	movf	indf2,w,c
  4776   001C1A  0012               	return		;funcret
  4777   001C1C                     __end_of_DelayIsRunning:
  4778                           	callstack 0
  4779                           
  4780 ;; *************** function _DebounceFSMInit *****************
  4781 ;; Defined at:
  4782 ;;		line 19 in file "drivers/scr/API_debounce.c"
  4783 ;; Parameters:    Size  Location     Type
  4784 ;;  antirrebote_    1    5[COMRAM] PTR struct .
  4785 ;;		 -> main@boton1(11), 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;		None
  4788 ;; Return value:  Size  Location     Type
  4789 ;;                  1    wreg      void 
  4790 ;; Registers used:
  4791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4797 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;Total ram usage:        1 bytes
  4802 ;; Hardware stack levels used: 1
  4803 ;; Hardware stack levels required when called: 2
  4804 ;; This function calls:
  4805 ;;		_DelayInit
  4806 ;; This function is called by:
  4807 ;;		_main
  4808 ;;		_DebounceFSMUpdate
  4809 ;; This function uses a non-reentrant model
  4810 ;;
  4811                           
  4812                           	psect	text35
  4813   0019F0                     __ptext35:
  4814                           	callstack 0
  4815   0019F0                     _DebounceFSMInit:
  4816                           	callstack 27
  4817   0019F0                     
  4818                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  4819   0019F0  5033               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4820   0019F2  6ED9               	movwf	fsr2l,c
  4821   0019F4  6ADA               	clrf	fsr2h,c
  4822   0019F6  0E01               	movlw	1
  4823   0019F8  26D9               	addwf	fsr2l,f,c
  4824   0019FA  6ADF               	clrf	indf2,c
  4825   0019FC                     
  4826                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  4827   0019FC  5033               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4828   0019FE  0F02               	addlw	2
  4829   001A00  6E2E               	movwf	DelayInit@delay^0,c
  4830   001A02  0E28               	movlw	40
  4831   001A04  6E2F               	movwf	DelayInit@duration^0,c
  4832   001A06  0E00               	movlw	0
  4833   001A08  6E30               	movwf	(DelayInit@duration+1)^0,c
  4834   001A0A  0E00               	movlw	0
  4835   001A0C  6E31               	movwf	(DelayInit@duration+2)^0,c
  4836   001A0E  0E00               	movlw	0
  4837   001A10  6E32               	movwf	(DelayInit@duration+3)^0,c
  4838   001A12  EC3A  F00D         	call	_DelayInit	;wreg free
  4839   001A16                     
  4840                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  4841   001A16  5033               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4842   001A18  6ED9               	movwf	fsr2l,c
  4843   001A1A  6ADA               	clrf	fsr2h,c
  4844   001A1C  6ADF               	clrf	indf2,c
  4845   001A1E  0012               	return		;funcret
  4846   001A20                     __end_of_DebounceFSMInit:
  4847                           	callstack 0
  4848                           
  4849 ;; *************** function _DelayInit *****************
  4850 ;; Defined at:
  4851 ;;		line 22 in file "drivers/scr/API_delay.c"
  4852 ;; Parameters:    Size  Location     Type
  4853 ;;  delay           1    0[COMRAM] PTR struct .
  4854 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  4855 ;;  duration        4    1[COMRAM] unsigned long 
  4856 ;; Auto vars:     Size  Location     Type
  4857 ;;		None
  4858 ;; Return value:  Size  Location     Type
  4859 ;;                  1    wreg      void 
  4860 ;; Registers used:
  4861 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4862 ;; Tracked objects:
  4863 ;;		On entry : 0/0
  4864 ;;		On exit  : 0/0
  4865 ;;		Unchanged: 0/0
  4866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4867 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4870 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4871 ;;Total ram usage:        5 bytes
  4872 ;; Hardware stack levels used: 1
  4873 ;; Hardware stack levels required when called: 1
  4874 ;; This function calls:
  4875 ;;		Nothing
  4876 ;; This function is called by:
  4877 ;;		_MRF24J40Init
  4878 ;;		_main
  4879 ;;		_DebounceFSMInit
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           
  4883                           	psect	text36
  4884   001A74                     __ptext36:
  4885                           	callstack 0
  4886   001A74                     _DelayInit:
  4887                           	callstack 28
  4888   001A74                     
  4889                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  4890   001A74  502E               	movf	DelayInit@delay^0,w,c
  4891   001A76  6ED9               	movwf	fsr2l,c
  4892   001A78  6ADA               	clrf	fsr2h,c
  4893   001A7A  0E04               	movlw	4
  4894   001A7C  26D9               	addwf	fsr2l,f,c
  4895   001A7E  C02F  FFDE         	movff	DelayInit@duration,postinc2
  4896   001A82  C030  FFDE         	movff	DelayInit@duration+1,postinc2
  4897   001A86  C031  FFDE         	movff	DelayInit@duration+2,postinc2
  4898   001A8A  C032  FFDE         	movff	DelayInit@duration+3,postinc2
  4899                           
  4900                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  4901   001A8E  502E               	movf	DelayInit@delay^0,w,c
  4902   001A90  6ED9               	movwf	fsr2l,c
  4903   001A92  6ADA               	clrf	fsr2h,c
  4904   001A94  0E08               	movlw	8
  4905   001A96  26D9               	addwf	fsr2l,f,c
  4906   001A98  6ADF               	clrf	indf2,c
  4907   001A9A  0012               	return		;funcret
  4908   001A9C                     __end_of_DelayInit:
  4909                           	callstack 0
  4910                           
  4911 ;; *************** function _BoardInit *****************
  4912 ;; Defined at:
  4913 ;;		line 21 in file "hardware_config.c"
  4914 ;; Parameters:    Size  Location     Type
  4915 ;;		None
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  1    wreg      void 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, cstack
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4931 ;;Total ram usage:        0 bytes
  4932 ;; Hardware stack levels used: 1
  4933 ;; Hardware stack levels required when called: 2
  4934 ;; This function calls:
  4935 ;;		_SPIInit
  4936 ;; This function is called by:
  4937 ;;		_main
  4938 ;; This function uses a non-reentrant model
  4939 ;;
  4940                           
  4941                           	psect	text37
  4942   00185A                     __ptext37:
  4943                           	callstack 0
  4944   00185A                     _BoardInit:
  4945                           	callstack 28
  4946   00185A                     
  4947                           ;hardware_config.c: 23:     PORTA = 0;
  4948   00185A  6A80               	clrf	128,c	;volatile
  4949                           
  4950                           ;hardware_config.c: 24:     PORTB = 0;
  4951   00185C  6A81               	clrf	129,c	;volatile
  4952                           
  4953                           ;hardware_config.c: 25:     PORTC = 0;
  4954   00185E  6A82               	clrf	130,c	;volatile
  4955                           
  4956                           ;hardware_config.c: 26:     PORTD = 0;
  4957   001860  6A83               	clrf	131,c	;volatile
  4958                           
  4959                           ;hardware_config.c: 27:     PORTE = 0;
  4960   001862  6A84               	clrf	132,c	;volatile
  4961                           
  4962                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  4963   001864  8C93               	bsf	147,6,c	;volatile
  4964                           
  4965                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  4966   001866  8E93               	bsf	147,7,c	;volatile
  4967                           
  4968                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  4969   001868  9496               	bcf	150,2,c	;volatile
  4970                           
  4971                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  4972   00186A  9096               	bcf	150,0,c	;volatile
  4973                           
  4974                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  4975   00186C  9296               	bcf	150,1,c	;volatile
  4976                           
  4977                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  4978   00186E  8494               	bsf	148,2,c	;volatile
  4979                           
  4980                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  4981   001870  848D               	bsf	141,2,c	;volatile
  4982                           
  4983                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  4984   001872  808D               	bsf	141,0,c	;volatile
  4985                           
  4986                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  4987   001874  828D               	bsf	141,1,c	;volatile
  4988                           
  4989                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  4990   001876  8093               	bsf	147,0,c	;volatile
  4991                           
  4992                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  4993   001878  9C94               	bcf	148,6,c	;volatile
  4994                           
  4995                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  4996   00187A  9E94               	bcf	148,7,c	;volatile
  4997                           
  4998                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  4999   00187C  9895               	bcf	149,4,c	;volatile
  5000                           
  5001                           ;hardware_config.c: 45:     IPEN = 0;
  5002   00187E  9ED0               	bcf	4048,7,c	;volatile
  5003                           
  5004                           ;hardware_config.c: 46:  GIE = 1;
  5005   001880  8EF2               	bsf	4082,7,c	;volatile
  5006                           
  5007                           ;hardware_config.c: 47:  PEIE = 1;
  5008   001882  8CF2               	bsf	4082,6,c	;volatile
  5009                           
  5010                           ;hardware_config.c: 48:     INT0E = 0;
  5011   001884  98F2               	bcf	4082,4,c	;volatile
  5012                           
  5013                           ;hardware_config.c: 49:  RBIE = 0;
  5014   001886  96F2               	bcf	4082,3,c	;volatile
  5015                           
  5016                           ;hardware_config.c: 50:  T0IE = 0;
  5017   001888  9AF2               	bcf	4082,5,c	;volatile
  5018                           
  5019                           ;hardware_config.c: 51:  TMR1IE = 1;
  5020   00188A  809D               	bsf	3997,0,c	;volatile
  5021                           
  5022                           ;hardware_config.c: 52:  TMR2IE = 0;
  5023   00188C  929D               	bcf	3997,1,c	;volatile
  5024                           
  5025                           ;hardware_config.c: 53:  CCP1IE = 0;
  5026   00188E  949D               	bcf	3997,2,c	;volatile
  5027                           
  5028                           ;hardware_config.c: 54:  CCP2IE = 0;
  5029   001890  90A0               	bcf	4000,0,c	;volatile
  5030                           
  5031                           ;hardware_config.c: 55:  EEIE = 0;
  5032   001892  98A0               	bcf	4000,4,c	;volatile
  5033                           
  5034                           ;hardware_config.c: 56:  SSPIE = 0;
  5035   001894  969D               	bcf	3997,3,c	;volatile
  5036                           
  5037                           ;hardware_config.c: 57:  BCLIE = 0;
  5038   001896  96A0               	bcf	4000,3,c	;volatile
  5039                           
  5040                           ;hardware_config.c: 58:  ADIE = 0;
  5041   001898  9C9D               	bcf	3997,6,c	;volatile
  5042                           
  5043                           ;hardware_config.c: 59:  RBIE = 0;
  5044   00189A  96F2               	bcf	4082,3,c	;volatile
  5045                           
  5046                           ;hardware_config.c: 60:  RCIE = 0;
  5047   00189C  9A9D               	bcf	3997,5,c	;volatile
  5048   00189E                     
  5049                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  5050   00189E  0E72               	movlw	114
  5051   0018A0  6ED3               	movwf	211,c	;volatile
  5052                           
  5053                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  5054   0018A2  0EDF               	movlw	223
  5055   0018A4  6E9B               	movwf	155,c	;volatile
  5056   0018A6                     
  5057                           ;hardware_config.c: 63:     RBPU = 1;
  5058   0018A6  8EF1               	bsf	4081,7,c	;volatile
  5059   0018A8                     
  5060                           ;hardware_config.c: 66:     T1RD16 = 0;
  5061   0018A8  9ECD               	bcf	4045,7,c	;volatile
  5062   0018AA                     
  5063                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  5064   0018AA  88CD               	bsf	4045,4,c	;volatile
  5065   0018AC                     
  5066                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  5067   0018AC  8ACD               	bsf	4045,5,c	;volatile
  5068   0018AE                     
  5069                           ;hardware_config.c: 69:  T1SYNC = 0;
  5070   0018AE  94CD               	bcf	4045,2,c	;volatile
  5071   0018B0                     
  5072                           ;hardware_config.c: 70:  T1OSCEN = 0;
  5073   0018B0  96CD               	bcf	4045,3,c	;volatile
  5074   0018B2                     
  5075                           ;hardware_config.c: 71:  TMR1CS = 0;
  5076   0018B2  92CD               	bcf	4045,1,c	;volatile
  5077   0018B4                     
  5078                           ;hardware_config.c: 72:  TMR1ON = 1;
  5079   0018B4  80CD               	bsf	4045,0,c	;volatile
  5080   0018B6                     
  5081                           ;hardware_config.c: 75:     SPIInit();
  5082   0018B6  ECB0  F00D         	call	_SPIInit	;wreg free
  5083   0018BA  0012               	return		;funcret
  5084   0018BC                     __end_of_BoardInit:
  5085                           	callstack 0
  5086                           
  5087 ;; *************** function _SPIInit *****************
  5088 ;; Defined at:
  5089 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;		None
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;		None
  5094 ;; Return value:  Size  Location     Type
  5095 ;;                  1    wreg      void 
  5096 ;; Registers used:
  5097 ;;		wreg, status,2
  5098 ;; Tracked objects:
  5099 ;;		On entry : 0/0
  5100 ;;		On exit  : 0/0
  5101 ;;		Unchanged: 0/0
  5102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5107 ;;Total ram usage:        0 bytes
  5108 ;; Hardware stack levels used: 1
  5109 ;; Hardware stack levels required when called: 1
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		_BoardInit
  5114 ;; This function uses a non-reentrant model
  5115 ;;
  5116                           
  5117                           	psect	text38
  5118   001B60                     __ptext38:
  5119                           	callstack 0
  5120   001B60                     _SPIInit:
  5121                           	callstack 28
  5122   001B60                     
  5123                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  5124   001B60  9694               	bcf	148,3,c	;volatile
  5125                           
  5126                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  5127   001B62  9A94               	bcf	148,5,c	;volatile
  5128                           
  5129                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  5130   001B64  8894               	bsf	148,4,c	;volatile
  5131                           
  5132                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  5133   001B66  8EC7               	bsf	199,7,c	;volatile
  5134                           
  5135                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  5136   001B68  8CC7               	bsf	199,6,c	;volatile
  5137   001B6A                     
  5138                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  5139   001B6A  0E01               	movlw	1
  5140   001B6C  6EC6               	movwf	198,c	;volatile
  5141   001B6E                     
  5142                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  5143   001B6E  8EC6               	bsf	198,7,c	;volatile
  5144   001B70                     
  5145                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  5146   001B70  9CC6               	bcf	198,6,c	;volatile
  5147   001B72                     
  5148                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  5149   001B72  8AC6               	bsf	198,5,c	;volatile
  5150   001B74                     
  5151                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  5152   001B74  98C6               	bcf	198,4,c	;volatile
  5153   001B76  0012               	return		;funcret
  5154   001B78                     __end_of_SPIInit:
  5155                           	callstack 0
  5156                           
  5157 ;; *************** function _isr *****************
  5158 ;; Defined at:
  5159 ;;		line 5 in file "drivers/inc/interrupciones.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;		None
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  1    wreg      void 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2, status,0
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;Total ram usage:        0 bytes
  5178 ;; Hardware stack levels used: 1
  5179 ;; This function calls:
  5180 ;;		Nothing
  5181 ;; This function is called by:
  5182 ;;		Interrupt level 2
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	intcode
  5187   000008                     __pintcode:
  5188                           	callstack 0
  5189   000008                     _isr:
  5190                           	callstack 24
  5191                           
  5192                           ;incstack = 0
  5193   000008  8249               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5194   00000A                     
  5195                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  5196   00000A  A09D               	btfss	3997,0,c	;volatile
  5197   00000C  EF0A  F000         	goto	i2u41_41
  5198   000010  EF0C  F000         	goto	i2u41_40
  5199   000014                     i2u41_41:
  5200   000014  EF1E  F000         	goto	i2l341
  5201   000018                     i2u41_40:
  5202   000018  A09E               	btfss	3998,0,c	;volatile
  5203   00001A  EF11  F000         	goto	i2u42_41
  5204   00001E  EF13  F000         	goto	i2u42_40
  5205   000022                     i2u42_41:
  5206   000022  EF1E  F000         	goto	i2l341
  5207   000026                     i2u42_40:
  5208   000026                     
  5209                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  5210   000026  909E               	bcf	3998,0,c	;volatile
  5211   000028                     
  5212                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  5213   000028  0EF7               	movlw	247
  5214   00002A  6ECE               	movwf	206,c	;volatile
  5215                           
  5216                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  5217   00002C  0EFD               	movlw	253
  5218   00002E  6ECF               	movwf	207,c	;volatile
  5219   000030                     
  5220                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  5221   000030  0E01               	movlw	1
  5222   000032  2629               	addwf	_timeStamp^0,f,c
  5223   000034  0E00               	movlw	0
  5224   000036  222A               	addwfc	(_timeStamp+1)^0,f,c
  5225   000038  222B               	addwfc	(_timeStamp+2)^0,f,c
  5226   00003A  222C               	addwfc	(_timeStamp+3)^0,f,c
  5227   00003C                     i2l341:
  5228   00003C  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5229   00003E  0011               	retfie		f
  5230   000040                     __end_of_isr:
  5231                           	callstack 0
  5232                           
  5233                           	psect	rparam
  5234   000001                     ___rparam_used  equ	1
  5235   000000                     ___param_bank   equ	0
  5236   000000                     __Lparam        equ	__Lrparam
  5237   000000                     __Hparam        equ	__Hrparam
  5238                           
  5239                           	psect	temp
  5240   000049                     btemp:
  5241                           	callstack 0
  5242   000049                     	ds	1
  5243   000049                     int$flags       set	btemp
  5244   00004A                     wtemp8          set	btemp+1
  5245   00004A                     ttemp5          set	btemp+1
  5246   00004D                     ttemp6          set	btemp+4
  5247   000051                     ttemp7          set	btemp+8
  5248                           
  5249                           	psect	idloc
  5250                           
  5251                           ;Config register IDLOC0 @ 0x200000
  5252                           ;	unspecified, using default values
  5253   200000                     	org	2097152
  5254   200000  FF                 	db	255
  5255                           
  5256                           ;Config register IDLOC1 @ 0x200001
  5257                           ;	unspecified, using default values
  5258   200001                     	org	2097153
  5259   200001  FF                 	db	255
  5260                           
  5261                           ;Config register IDLOC2 @ 0x200002
  5262                           ;	unspecified, using default values
  5263   200002                     	org	2097154
  5264   200002  FF                 	db	255
  5265                           
  5266                           ;Config register IDLOC3 @ 0x200003
  5267                           ;	unspecified, using default values
  5268   200003                     	org	2097155
  5269   200003  FF                 	db	255
  5270                           
  5271                           ;Config register IDLOC4 @ 0x200004
  5272                           ;	unspecified, using default values
  5273   200004                     	org	2097156
  5274   200004  FF                 	db	255
  5275                           
  5276                           ;Config register IDLOC5 @ 0x200005
  5277                           ;	unspecified, using default values
  5278   200005                     	org	2097157
  5279   200005  FF                 	db	255
  5280                           
  5281                           ;Config register IDLOC6 @ 0x200006
  5282                           ;	unspecified, using default values
  5283   200006                     	org	2097158
  5284   200006  FF                 	db	255
  5285                           
  5286                           ;Config register IDLOC7 @ 0x200007
  5287                           ;	unspecified, using default values
  5288   200007                     	org	2097159
  5289   200007  FF                 	db	255
  5290                           
  5291                           	psect	config
  5292                           
  5293                           ; Padding undefined space
  5294   300000                     	org	3145728
  5295   300000  FF                 	db	255
  5296                           
  5297                           ;Config register CONFIG1H @ 0x300001
  5298                           ;	Oscillator Selection bits
  5299                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5300                           ;	Fail-Safe Clock Monitor Enable bit
  5301                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5302                           ;	Internal/External Oscillator Switchover bit
  5303                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5304   300001                     	org	3145729
  5305   300001  08                 	db	8
  5306                           
  5307                           ;Config register CONFIG2L @ 0x300002
  5308                           ;	Power-up Timer Enable bit
  5309                           ;	PWRT = 0x1, unprogrammed default
  5310                           ;	Brown-out Reset Enable bits
  5311                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5312                           ;	Brown Out Reset Voltage bits
  5313                           ;	BORV = 22, VBOR set to 2.2 V nominal
  5314   300002                     	org	3145730
  5315   300002  11                 	db	17
  5316                           
  5317                           ;Config register CONFIG2H @ 0x300003
  5318                           ;	Watchdog Timer Enable bit
  5319                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5320                           ;	Watchdog Timer Postscale Select bits
  5321                           ;	WDTPS = 8192, 1:8192
  5322   300003                     	org	3145731
  5323   300003  1A                 	db	26
  5324                           
  5325                           ; Padding undefined space
  5326   300004                     	org	3145732
  5327   300004  FF                 	db	255
  5328                           
  5329                           ;Config register CONFIG3H @ 0x300005
  5330                           ;	CCP2 MUX bit
  5331                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5332                           ;	PORTB A/D Enable bit
  5333                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5334                           ;	Low-Power Timer1 Oscillator Enable bit
  5335                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5336                           ;	HFINTOSC Fast Start-up
  5337                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  5338                           ;	MCLR Pin Enable bit
  5339                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5340   300005                     	org	3145733
  5341   300005  01                 	db	1
  5342                           
  5343                           ;Config register CONFIG4L @ 0x300006
  5344                           ;	Stack Full/Underflow Reset Enable bit
  5345                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5346                           ;	Single-Supply ICSP Enable bit
  5347                           ;	LVP = OFF, Single-Supply ICSP disabled
  5348                           ;	Extended Instruction Set Enable bit
  5349                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5350                           ;	Background Debugger Enable bit
  5351                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5352   300006                     	org	3145734
  5353   300006  80                 	db	128
  5354                           
  5355                           ; Padding undefined space
  5356   300007                     	org	3145735
  5357   300007  FF                 	db	255
  5358                           
  5359                           ;Config register CONFIG5L @ 0x300008
  5360                           ;	Code Protection Block 0
  5361                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5362                           ;	Code Protection Block 1
  5363                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5364                           ;	Code Protection Block 2
  5365                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5366                           ;	Code Protection Block 3
  5367                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5368   300008                     	org	3145736
  5369   300008  0F                 	db	15
  5370                           
  5371                           ;Config register CONFIG5H @ 0x300009
  5372                           ;	Boot Block Code Protection bit
  5373                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5374                           ;	Data EEPROM Code Protection bit
  5375                           ;	CPD = OFF, Data EEPROM not code-protected
  5376   300009                     	org	3145737
  5377   300009  C0                 	db	192
  5378                           
  5379                           ;Config register CONFIG6L @ 0x30000A
  5380                           ;	Write Protection Block 0
  5381                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5382                           ;	Write Protection Block 1
  5383                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5384                           ;	Write Protection Block 2
  5385                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5386                           ;	Write Protection Block 3
  5387                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5388   30000A                     	org	3145738
  5389   30000A  0F                 	db	15
  5390                           
  5391                           ;Config register CONFIG6H @ 0x30000B
  5392                           ;	Configuration Register Write Protection bit
  5393                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5394                           ;	Boot Block Write Protection bit
  5395                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5396                           ;	Data EEPROM Write Protection bit
  5397                           ;	WRTD = OFF, Data EEPROM not write-protected
  5398   30000B                     	org	3145739
  5399   30000B  E0                 	db	224
  5400                           
  5401                           ;Config register CONFIG7L @ 0x30000C
  5402                           ;	unspecified, using default values
  5403                           ;	Table Read Protection Block 0
  5404                           ;	EBTR0 = 0x1, unprogrammed default
  5405                           ;	Table Read Protection Block 1
  5406                           ;	EBTR1 = 0x1, unprogrammed default
  5407                           ;	Table Read Protection Block 2
  5408                           ;	EBTR2 = 0x1, unprogrammed default
  5409                           ;	Table Read Protection Block 3
  5410                           ;	EBTR3 = 0x1, unprogrammed default
  5411   30000C                     	org	3145740
  5412   30000C  0F                 	db	15
  5413                           
  5414                           ;Config register CONFIG7H @ 0x30000D
  5415                           ;	Boot Block Table Read Protection bit
  5416                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5417   30000D                     	org	3145741
  5418   30000D  40                 	db	64
  5419                           tosu	equ	0xFFF
  5420                           tosh	equ	0xFFE
  5421                           tosl	equ	0xFFD
  5422                           stkptr	equ	0xFFC
  5423                           pclatu	equ	0xFFB
  5424                           pclath	equ	0xFFA
  5425                           pcl	equ	0xFF9
  5426                           tblptru	equ	0xFF8
  5427                           tblptrh	equ	0xFF7
  5428                           tblptrl	equ	0xFF6
  5429                           tablat	equ	0xFF5
  5430                           prodh	equ	0xFF4
  5431                           prodl	equ	0xFF3
  5432                           indf0	equ	0xFEF
  5433                           postinc0	equ	0xFEE
  5434                           postdec0	equ	0xFED
  5435                           preinc0	equ	0xFEC
  5436                           plusw0	equ	0xFEB
  5437                           fsr0h	equ	0xFEA
  5438                           fsr0l	equ	0xFE9
  5439                           wreg	equ	0xFE8
  5440                           indf1	equ	0xFE7
  5441                           postinc1	equ	0xFE6
  5442                           postdec1	equ	0xFE5
  5443                           preinc1	equ	0xFE4
  5444                           plusw1	equ	0xFE3
  5445                           fsr1h	equ	0xFE2
  5446                           fsr1l	equ	0xFE1
  5447                           bsr	equ	0xFE0
  5448                           indf2	equ	0xFDF
  5449                           postinc2	equ	0xFDE
  5450                           postdec2	equ	0xFDD
  5451                           preinc2	equ	0xFDC
  5452                           plusw2	equ	0xFDB
  5453                           fsr2h	equ	0xFDA
  5454                           fsr2l	equ	0xFD9
  5455                           status	equ	0xFD8

Data Sizes:
    Strings     48
    Constant    24
    Data        0
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     27      72
    BANK0           160     70     126
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(BANK0[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(BANK0[11]), 

    DelayInit@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(BANK0[11]), main@delay_parpadeo(BANK0[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayIsRunning@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(BANK0[11]), main@delay_parpadeo(BANK0[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayRead@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(BANK0[11]), main@delay_parpadeo(BANK0[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> MRF24J40Init@delay_time_out(COMRAM[9]), 

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    MRF24SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    S268$buffer_salida	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    sp__MRF24GetMensajeEntrada	PTR unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in(BANK0[56]), mrf24_data_in$buffer_entrada(BANK0[50]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 50
		 -> main@cadena(BANK0[50]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in(BANK0[56]), mrf24_data_in$buffer_entrada(BANK0[50]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_10(CODE[8]), STR_4(CODE[8]), STR_6(CODE[8]), STR_8(CODE[8]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 50
		 -> main@cadena(BANK0[50]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 50
		 -> main@cadena(BANK0[50]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in(BANK0[56]), mrf24_data_in$buffer_entrada(BANK0[50]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _strcpy->_MRF24GetMensajeEntrada
    _strcmp->_MRF24GetMensajeEntrada
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24SetMensajeSalida->_strlen
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _GetShortAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _GetLongAddr->_Write2ByteSPIPort
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                72    72      0    5787
                                             25 COMRAM     2     2      0
                                              0 BANK0     70    70      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
             _MRF24GetMensajeEntrada
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
           _MRF24SetDireccionDestino
              _MRF24SetMensajeSalida
               _MRF24SetPANIDDestino
                _MRF24TransmitirDato
                             _strcmp
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               3     1      2      75
                                              2 COMRAM     3     1      2
             _MRF24GetMensajeEntrada (ARG)
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     120
                                              2 COMRAM     3     1      2
             _MRF24GetMensajeEntrada (ARG)
 ---------------------------------------------------------------------------------
 (1) _MRF24TransmitirDato                                  8     8      0     827
                                             10 COMRAM     7     7      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24SetPANIDDestino                                 2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetMensajeSalida                                1     0      1     137
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetDireccionDestino                             2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   7     7      0     942
                                             10 COMRAM     7     7      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                        11    11      0    2501
                                             14 COMRAM    11    11      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  2     2      0     256
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     188
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           1     1      0     482
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     188
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     294
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      87
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     198
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetMensajeEntrada                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    4     2      2     610
                                             14 COMRAM     4     2      2
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (2) _DelayRead                                           13    12      1     160
                                              1 COMRAM    13    12      1
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (3) _DelayIsRunning                                       1     0      1      23
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      1     0      1     140
                                              5 COMRAM     1     0      1
                          _DelayInit
 ---------------------------------------------------------------------------------
 (2) _DelayInit                                            5     0      5      72
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24GetMensajeEntrada
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _DelayInit
     _DelayRead
     _DelayReset
     _GetLongAddr
       _ReadByteSPIPort
         _SPIRead
       _SetCSPin
       _Write2ByteSPIPort
         _SPIWrite2Byte
           _SPIWriteByte
     _GetShortAddr
       _ReadByteSPIPort
       _SetCSPin
       _WriteByteSPIPort
         _SPIWriteByte
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _SetLongAddr
         _SetCSPin
         _Write2ByteSPIPort
         _WriteByteSPIPort
       _SetShortAddr
         _SetCSPin
         _WriteByteSPIPort
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _MRF24SetDireccionDestino
   _MRF24SetMensajeSalida
     _strlen
   _MRF24SetPANIDDestino
   _MRF24TransmitirDato
     _SetLongAddr
     _SetShortAddr
   _strcmp
     _MRF24GetMensajeEntrada (ARG)
   _strcpy
     _MRF24GetMensajeEntrada (ARG)

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160     70     126     78.8%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     27      72     76.6%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     198      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Apr 20 13:29:25 2025

                         _SSPSTATbits 0FC7                                    l21 1BA0  
                                  l30 1BE2                                    l24 1C0C  
                                  l33 1BB4                                    l42 1C3E  
                                  l27 1BD4                                    l36 1C38  
                                  l39 1BF0                       _IsMRF24Interrup 1BA2  
                                  l99 1212                         ?_MRF24J40Init 002E  
                                 l112 1B2C                                   l121 18FE  
                                 l115 1AE6                                   l108 1646  
                                 l124 19BA                                   l132 1940  
                                 l109 16B4                                   l141 1C24  
                                 l150 1B46                                   l118 1982  
                                 l127 1A72                                   l135 1BC6  
                                 l241 137E                                   l233 1254  
                                 l138 1C2E                                   l147 1604  
                                 l235 125A                                   l180 1B50  
                                 l156 17F2                                   l325 18BA  
                                 l237 126C                                   l159 1C44  
                                 l183 1B5E                                   l360 1B0C  
                                 l192 1B8C                                   l177 1B76  
                                 l370 1A1E                                   l354 1760  
                                 l186 1BFE                                   l363 1C1A  
                                 l348 1A9A                                   l380 14F6  
                                 l189 1B7C                                   _GIE 7F97  
                                 u500 162A                                   u501 1626  
                                 u430 1B5E                                   u510 1682  
                                 u431 1B5A                                   u511 167E  
                                 u520 16CE                                   u600 11DA  
                                 u521 16CA                                   u601 11D6  
                                 u530 174C                                   u450 1B8A  
                                 u610 15EA                                   u531 1748  
                                 u451 1B86                                   u611 15E6  
                                 u700 1490                                   u620 1B44  
                                 u540 1940                                   u701 148C  
                                 u621 1B3E                                   u445 1C0A  
                                 u541 193C                                   u630 1B46  
                                 u446 1C0C                                   u710 1A48  
                                 u711 1A44                                   u640 17DC  
                                 u560 19E2                                   u720 1822  
                                 u800 1396                                   u465 1BD2  
                                 u641 17D8                                   u561 19DE  
                                 u721 181E                                   u801 1392  
                                 u650 13D0                                   u490 1BB2  
                                 u466 1BD4                                   u570 10C6  
                                 u730 1838                                   u810 13A8  
                                 u651 13CC                                   u491 1BAC  
                                 u555 18C6                                   u475 1BE0  
                                 u571 10C2                                   u731 1834  
                                 u811 13A0                                   u660 13FC  
                                 u476 1BE2                                   u580 10E0  
                                 u740 128E                                   u661 13F8  
                                 u485 194C                                   u581 10DC  
                                 u741 1288                                   u670 140C  
                                 u590 11C4                                   u750 12D2  
                                 u671 1408                                   u591 11C0  
                                 u751 12CE                                   u680 144C  
                                 u496 1BB4                                   u760 1306  
                                 u681 1448                                   u761 1302  
                                 u690 145C                                   u770 132C  
                                 u746 1290                                   u691 1458  
                                 u771 1328                                   u828 13AA  
                                 u780 1352                                   u837 1070  
                                 u781 134E                                   u790 1378  
                                 u847 1088                                   u791 1374  
                                 u857 10E6                                   u867 19AE  
                                 _isr 0008                                   wreg 0FE8  
                 __end_of_GetLongAddr 1900                                  l2000 17AC  
                                l2010 185A                                  l2002 17DC  
                                l2020 18AC                                  l2012 189E  
                                l2100 1A24                                  l2030 18B6  
                                l2022 18AE                                  l2014 18A6  
                                l2006 1C40                                  l1070 1858  
                                l2110 1838                                  l2102 17F4  
                                l2024 18B0                                  l2016 18A8  
                                l2040 13E2                                  l2104 17F8  
                                l2120 1224                                  l2026 18B2  
                                l2018 18AA                                  l2042 13FC  
                                l2034 13BC                                  l1082 19EE  
                                l2106 17FC                                  l2210 12A8  
                                l2130 126E                                  l2122 123C  
                                l2114 1214                                  l2028 18B4  
                                l2212 14CE                                  l2060 144C  
                                l2044 140C                                  l2052 1420  
                                l2036 13C0                                  l2108 1822  
                                l1076 1A48                                  l2140 12D2  
                                l2124 1248                                  l2116 121C  
                                l2062 145C                                  l2070 146E  
                                l2054 142C                                  l2046 141A  
                                l2038 13D0                                  l2150 130C  
                                l2142 12D6                                  l2126 125C  
                                l2118 1220                                  l2080 14A2  
                                l2064 1468                                  l2160 1378  
                                l2152 132C                                  l2144 12E4  
                                l2128 1264                                  l2136 127A  
                                l2082 14AA                                  l2058 1432  
                                l2090 14F4                                  l2154 1332  
                                l2146 12E6                                  l2162 137E  
                                l2138 12BE                                  l2076 1480  
                                l1700 1976                                  l2164 1396  
                                l2156 1352                                  l2148 1306  
                                l2078 1490                                  l1710 1B8E  
                                l1702 197C                                  l2158 1358  
                                l2088 14B0                                  l1640 1B4A  
                                l1800 1924                                  l1706 1C0E  
                                l1714 1BA2                                  l1642 1B4C  
                                l1810 18F6                                  l1802 18BC  
                                l1730 1666                                  l2098 1A20  
                                l1660 1B78                                  l1644 1BF2  
                                l1812 18FC                                  l1804 18DE  
                                l1652 1C32                                  l1740 16B2  
                                l1732 1682                                  l1724 160E  
                                l1900 1178                                  l1662 1B8A  
                                l1806 18E4                                  l1750 1AC4  
                                l1670 1BD8                                  l1734 168A  
                                l1726 162A                                  l1718 1606  
                                l1910 11AC                                  l1902 1182  
                                l1822 19BC                                  l1840 1B72  
                                l1832 1B60                                  l1744 1AE8  
                                l1648 1C02                                  l1656 1BE4  
                                l1808 18F0                                  l1760 1ADE  
                                l1752 1AC4                                  l1736 168C  
                                l1728 1662                                  l1816 1984  
                                l1904 118C                                  l1824 19C4  
                                l1920 1BB6                                  l1842 1B74  
                                l1834 1B6A                                  l1850 1A16  
                                l1770 16E4                                  l1746 1AFE  
                                l1674 1C3A                                  l1762 1AE4  
                                l1754 1ACC                                  l1666 1BCA  
                                l1738 16B0                                  l1690 1B26  
                                l1682 1B10                                  l1818 19A8  
                                l1914 11C8                                  l1906 1196  
                                l1826 19C6                                  l1922 1BBA  
                                l1930 14F8                                  l1836 1B6E  
                                l1780 175E                                  l1772 16F6  
                                l1756 1AD2                                  l1684 1B14  
                                l1916 11DA                                  l1908 119E  
                                l1860 107C                                  l1852 104A  
                                l1828 19E2                                  l1940 151C  
                                l1932 14FA                                  l1838 1B70  
                                l1678 1A74                                  l1846 19F0  
                                l1774 174C                                  l1766 16B6  
                                l1758 1AD8                                  l1694 1942  
                                l1686 1B1A                                  l1870 10AE  
                                l1862 1082                                  l1854 1062  
                                l1926 1C26                                  l1950 153E  
                                l1942 151E                                  l1934 14FA  
                                l1848 19FC                                  l1776 1758  
                                l1768 16CE                                  l1696 1964  
                                l1688 1B20                                  l1784 1A4A  
                                l1880 10FC                                  l1864 1094  
                                l1856 1066                                  l1928 1C1C  
                                l1960 1572                                  l1952 1552  
                                l1944 152C                                  l1936 150A  
                                l1698 196A                                  l1794 190C  
                                l1890 1134                                  l1882 1100  
                                l1874 10CA                                  l1866 109E  
                                l1858 106A                                  l1970 1594  
                                l1962 1574                                  l1954 1554  
                                l1946 152E                                  l1938 150C  
                                l1796 191E                                  l1788 1900  
                                l1892 1144                                  l1884 1104  
                                l1876 10E0                                  l1868 10A6  
                                l1980 15EA                                  l1972 159A  
                                l1964 1582                                  l1956 1562  
                                l1948 153C                                  l1798 1920  
                                l1894 1154                                  l1886 1114  
                                l1878 10F2                                  l1982 15F8  
                                l1974 15B8                                  l1966 1584  
                                l1958 1564                                  l1896 1164  
                                l1888 1124                                  l1992 1762  
                                l1984 15FA                                  l1976 15BA  
                                l1968 1592                                  l1898 116E  
                                l1994 178A                                  l1978 15BC  
                                l1988 1B2E                                  l1996 1790  
                                l1998 17AA                                  _ADIE 7CEE  
                                ?_isr 002E                                  _EEIE 7D04  
                                STR_1 1041                                  STR_2 1039  
                                STR_3 1021                                  STR_4 1021  
                                STR_5 1019                                  STR_6 1019  
                                STR_7 1031                                  STR_8 1031  
                                STR_9 1029                                  _T0IE 7F95  
                                _IPEN 7E87                                  _PEIE 7F96  
                                _RBIE 7F93                                  _RCIE 7CED  
                                _RBPU 7F8F                          _SPIWriteByte 1B48  
                                _main 1214                       __end_of_SPIInit 1B78  
                     __end_of_SPIRead 1B8E                                  fsr1h 0FE2  
                                fsr2h 0FDA                                  indf1 0FE7  
                                indf2 0FDF                                  fsr1l 0FE1  
                                fsr2l 0FD9                                  btemp 0049  
                       _MRF24IsNewMsg 1B2E                            _DelayReset 1AE8  
             GetShortAddr@reg_address 0031                                  start 0040  
                   DelayInit@duration 002F                          ___param_bank 0000  
                    _long_mac_address 002D                     ??_ReadByteSPIPort 002E  
                               ??_isr 002E                        ??_MRF24J40Init 003C  
         __end_of_InicializoVariables 16B6                         _SPIWrite2Byte 1BF2  
    __end_of_MRF24SetDireccionDestino 1C30                                 ?_main 002E  
                               _BCLIE 7D03                                 STR_10 1029  
                               _INT0E 7F94                                 i2l341 003C  
                SetDeviceMACAddress@i 0032                                 _TMR1H 0FCF  
                               _TMR1L 0FCE                                 _PORTA 0F80  
                               _PORTB 0F81                                 _PORTC 0F82  
                               _PORTD 0F83                                 _PORTE 0F84  
                               _SSPIE 7CEB                  __end_of_GetShortAddr 1AE8  
        MRF24SetMensajeSalida@mensaje 0031              ??_MRF24GetMensajeEntrada 0030  
                     _InicializoPines 1B8E               SetShortAddr@reg_address 0031  
                 MRF24J40Init@lectura 003D                                 tablat 0FF5  
                      ?_MRF24IsNewMsg 002E                                 ttemp5 004A  
                               ttemp6 004D                                 ttemp7 0051  
                               status 0FD8                                 wtemp8 004A  
             __end_of_IsMRF24Interrup 1BB6                   _SetDeviceMACAddress 1900  
                     __initialization 1A9C                          __end_of_main 13BC  
DebounceFSMUpdate@antirrebote_boton_n 003C                        ?_SPIWrite2Byte 002F  
                    __end_of_SetCSPin 1C0E                           _GetLongAddr 18BC  
                       ??_SetLongAddr 0036                                ??_main 0047  
                       __activetblptr 0002                         ??_SetResetPin 002E  
                ?_SetDeviceMACAddress 002E                            _SetChannel 1984  
                   ?_SetDeviceAddress 002E                 _MRF24SetMensajeSalida 1BB6  
                              _CCP1IE 7CEA                                _CCP2IE 7D00  
                           ??_SPIInit 002E                             ??_SPIRead 002E  
                  ??_SetDeviceAddress 0032            MRF24J40Init@delay_time_out 003E  
                              _T1RD16 7E6F                                _T1SYNC 7E6A  
                              i2l1620 0026                                i2l1622 0028  
                              i2l1624 0030                                i2l1616 000A  
                              i2l1618 0018                            _SetWakePin 1BC8  
                              _OSCCON 0FD3             MRF24SetPANIDDestino@panid 002E  
                              _TMR1IE 7CE8                                _TMR1IF 7CF0  
                              _TMR1CS 7E69                                _TMR2IE 7CE9  
                              _TMR1ON 7E68          __end_of_default_security_key 1011  
                              _SSPBUF 0FC9                           ?_DelayReset 002E  
                 DelayIsRunning@delay 002E                                clear_0 1AA2  
                              clear_1 1AAE                                isa$std 0001  
                      SetCSPin@estado 002E               __end_of_InicializoPines 1BA2  
                              _strcmp 17F4                                _strcpy 1A20  
                              _strlen 19BC                 ??_SetDeviceMACAddress 0032  
                InicializoVariables@i 002F                          __mediumconst 0000  
                   _mrf24_data_config 0001              _MRF24SetDireccionDestino 1C26  
                              tblptrh 0FF7                                tblptrl 0FF6  
                              tblptru 0FF8                   __end_of_SetLongAddr 1984  
                  _MRF24ReciboPaquete 1762                      ??_DelayIsRunning 002F  
                     ??_MRF24IsNewMsg 002E                   __end_of_SetResetPin 1BE4  
               GetShortAddr@leido_spi 0030                     __end_of_DelayInit 1A9C  
                   __end_of_DelayRead 1762                  __end_of_MRF24J40Init 1214  
                          __accesstop 0060               __end_of__initialization 1AB4  
                 ?_MRF24ReciboPaquete 002E           __end_of_MRF24TransmitirDato 1606  
                   __end_of_BoardInit 18BC                        DelayInit@delay 002E  
                       ___rparam_used 0001                        DelayRead@delay 002F  
                    SetWakePin@estado 002E                      ?_IsMRF24Interrup 002E  
                       ?_SetShortAddr 0030                        __pcstackCOMRAM 002E  
                     ??_SPIWrite2Byte 0031                  ??_MRF24ReciboPaquete 0038  
              ?_MRF24SetMensajeSalida 0031                           ?_SetChannel 002E  
                          __pbssBANK0 00A6                           ?_SetWakePin 002E  
                           ?_SetCSPin 002E                       _ReadByteSPIPort 1C3A  
                        _GetShortAddr 1AC2                _MRF24GetMensajeEntrada 1C40  
                      ??_SetShortAddr 0031                           _SetLongAddr 1942  
                             _T1CKPS0 7E6C                               _T1CKPS1 7E6D  
                             ?_strcmp 0030                               ?_strcpy 0030  
                             ?_strlen 002E                      ?_InicializoPines 002E  
                _default_security_key 1001                               _T1OSCEN 7E6B  
                         _SetResetPin 1BD6          __end_of_MRF24SetPANIDDestino 1C26  
                             i2u41_40 0018                               i2u41_41 0014  
                             i2u42_40 0026                               i2u42_41 0022  
                             _OSCTUNE 0F9B                               _SSPCON1 0FC6  
                             _SPIInit 1B60                               _SPIRead 1B78  
                          ??_SetCSPin 002E                     SetShortAddr@valor 0030  
                             __Hparam 0000                               __Lparam 0000  
                   ??_DebounceFSMInit 0034                          __psmallconst 1000  
                             __pcinit 1A9C                          ?_GetLongAddr 0033  
                             __ramtop 1000                               __ptext0 1214  
                             __ptext1 1A20                               __ptext2 17F4  
                             __ptext3 14F8                               __ptext4 1C1C  
                             __ptext5 1BB6                               __ptext6 19BC  
                             __ptext7 1C26                               __ptext8 1762  
                             __ptext9 104A                      _WriteByteSPIPort 1C30  
             __end_of_ReadByteSPIPort 1C40                  end_of_initialization 1AB4  
                       __Lmediumconst 0000                          ??_DelayReset 002F  
                 _default_mac_address 1011                               postinc0 0FEE  
                             postinc1 0FE6                               postinc2 0FDE  
          ??_MRF24SetDireccionDestino 0030                               strcmp@l 0030  
                             strcmp@r 0031                               strcpy@d 0032  
                             strlen@a 0030                               strlen@s 002E  
                        _MRF24J40Init 104A                             _PORTBbits 0F81  
                           _PORTCbits 0F82                    __end_of_DelayReset 1B0E  
                WriteByteSPIPort@dato 002F                             _TRISBbits 0F93  
                           _TRISCbits 0F94                             _TRISDbits 0F95  
                           _TRISEbits 0F96                  __end_of_SetShortAddr 1B2E  
               Write2ByteSPIPort@dato 0031                            main@cadena 0060  
                GetLongAddr@respuesta 0037                            main@boton1 009B  
                           _DelayInit 1A74                             _DelayRead 16B6  
                           _BoardInit 185A                  _MRF24SetPANIDDestino 1C1C  
                   _Write2ByteSPIPort 1BE4           __end_of_SetDeviceMACAddress 1942  
             ??_MRF24SetMensajeSalida 0032                    ?_Write2ByteSPIPort 0031  
                      __end_of_strcmp 185A                        __end_of_strcpy 1A4A  
                      __end_of_strlen 19F0                          ??_SetChannel 0038  
                 start_initialization 1A9C                   ??_Write2ByteSPIPort 0033  
                         __end_of_isr 0040                      ?_ReadByteSPIPort 002E  
                       ?_SPIWriteByte 002E                          ??_SetWakePin 002E  
               __end_of_MRF24IsNewMsg 1B48               ?_MRF24GetMensajeEntrada 002E  
                          ?_DelayInit 002E                            ?_DelayRead 002F  
                          ?_BoardInit 002E                 ?_MRF24SetPANIDDestino 002E  
           __end_of_Write2ByteSPIPort 1BF2                    __end_of_SetChannel 19BC  
               __end_of_SPIWrite2Byte 1C00               MRF24ReciboPaquete@index 003E  
                        ?_SetLongAddr 0033                              ??_strcmp 0032  
                            ??_strcpy 0032                              ??_strlen 0030  
                  __end_of_SetWakePin 1BD6                     _DebounceFSMUpdate 13BC  
                        ?_SetResetPin 002E                           __pbssCOMRAM 0001  
                  ?_DebounceFSMUpdate 003C                         __pcstackBANK0 0060  
                     DelayReset@delay 002E                              ?_SPIInit 002E  
                            ?_SPIRead 002E                        ??_SPIWriteByte 002E  
      __end_of_MRF24GetMensajeEntrada 1C46                   ??_DebounceFSMUpdate 003E  
                    SPIWriteByte@dato 002E                       _DebounceFSMInit 19F0  
                    _SetDeviceAddress 1A4A                   _InicializoVariables 1606  
            __end_of_WriteByteSPIPort 1C3A                             __pintcode 0008  
           __end_of_DebounceFSMUpdate 14F8                     SetResetPin@estado 002E  
                         __smallconst 1000                  ?_InicializoVariables 002E  
                    SetLongAddr@valor 0035                              _LATCbits 0F8B  
                            _LATDbits 0F8C                              _LATEbits 0F8D  
                         ??_DelayInit 0033                           ??_DelayRead 0030  
              ??_MRF24SetPANIDDestino 0030                           ??_BoardInit 002E  
                            _PIR1bits 0F9E                          _SetShortAddr 1B0E  
                           _timeStamp 0029                    main@delay_parpadeo 0092  
               ??_InicializoVariables 002E     MRF24SetDireccionDestino@direccion 002E  
                   ??_IsMRF24Interrup 002E               __end_of_DebounceFSMInit 1A20  
                      _mrf24_data_out 0023                              _SetCSPin 1C00  
                            __Hrparam 0000                              __Lrparam 0000  
     MRF24ReciboPaquete@largo_mensaje 003D                  __end_of_SPIWriteByte 1B60  
      MRF24TransmitirDato@pos_memoria 003E         __end_of_MRF24SetMensajeSalida 1BC8  
                            __ptext10 1900                              __ptext11 1A4A  
                            __ptext20 1C30                              __ptext12 1984  
                            __ptext21 18BC                              __ptext13 1B0E  
                            __ptext30 1BA2                              __ptext22 1BE4  
                            __ptext14 1942                              __ptext31 1C40  
                            __ptext23 1BF2                              __ptext15 1606  
                            __ptext32 13BC                              __ptext24 1B48  
                            __ptext16 1B8E                              __ptext33 16B6  
                            __ptext25 1C00                              __ptext17 1BC8  
                            __ptext34 1C0E                              __ptext26 1C3A  
                            __ptext18 1BD6                   _MRF24TransmitirDato 14F8  
                            __ptext35 19F0                              __ptext27 1B78  
                            __ptext19 1AC2                              __ptext36 1A74  
                            __ptext28 1AE8                              __ptext37 185A  
                            __ptext29 1B2E                              __ptext38 1B60  
           ?_MRF24SetDireccionDestino 002E                            strcpy@dest 0030  
                      _DelayIsRunning 1C0E                     ??_InicializoPines 002F  
                       ?_GetShortAddr 002E                  ?_MRF24TransmitirDato 002E  
                            isa$xinst 0000                              int$flags 0049  
  DebounceFSMInit@antirrebote_boton_n 0033           __end_of_default_mac_address 1019  
                       _mrf24_data_in 00A6              __end_of_SetDeviceAddress 1A74  
                    ?_DebounceFSMInit 0033                              intlevel2 0000  
              __end_of_DelayIsRunning 1C1C                  MRF24TransmitirDato@i 003D  
                      ??_GetShortAddr 0030                             strcpy@src 0031  
               ??_MRF24TransmitirDato 0038                     ?_WriteByteSPIPort 002E  
          __end_of_MRF24ReciboPaquete 17F4                         ??_GetLongAddr 0035  
                  ??_WriteByteSPIPort 002F                GetLongAddr@reg_address 0033  
                         _SSPCON1bits 0FC6           DebounceFSMUpdate@estado_pin 003D  
                   SPIWrite2Byte@dato 002F                SetLongAddr@reg_address 0033  
                     ?_DelayIsRunning 002E  
