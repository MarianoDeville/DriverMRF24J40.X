

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Apr 20 16:44:06 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Version 2.20
    56                           ; Generated 05/05/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F46K20 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000FE0                     bsr             equ	4064
    90   000FE9                     fsr0            equ	4073
    91   000FEA                     fsr0h           equ	4074
    92   000FE9                     fsr0l           equ	4073
    93   000FE1                     fsr1            equ	4065
    94   000FE2                     fsr1h           equ	4066
    95   000FE1                     fsr1l           equ	4065
    96   000FD9                     fsr2            equ	4057
    97   000FDA                     fsr2h           equ	4058
    98   000FD9                     fsr2l           equ	4057
    99   000FEF                     indf0           equ	4079
   100   000FE7                     indf1           equ	4071
   101   000FDF                     indf2           equ	4063
   102   000FF2                     intcon          equ	4082
   103   000000                     nvmcon          equ	0
   104   000FF9                     pcl             equ	4089
   105   000FFA                     pclath          equ	4090
   106   000FFB                     pclatu          equ	4091
   107   000FEB                     plusw0          equ	4075
   108   000FE3                     plusw1          equ	4067
   109   000FDB                     plusw2          equ	4059
   110   000FED                     postdec0        equ	4077
   111   000FE5                     postdec1        equ	4069
   112   000FDD                     postdec2        equ	4061
   113   000FEE                     postinc0        equ	4078
   114   000FE6                     postinc1        equ	4070
   115   000FDE                     postinc2        equ	4062
   116   000FEC                     preinc0         equ	4076
   117   000FE4                     preinc1         equ	4068
   118   000FDC                     preinc2         equ	4060
   119   000FF3                     prod            equ	4083
   120   000FF4                     prodh           equ	4084
   121   000FF3                     prodl           equ	4083
   122   000FD8                     status          equ	4056
   123   000FF5                     tablat          equ	4085
   124   000FF6                     tblptr          equ	4086
   125   000FF7                     tblptrh         equ	4087
   126   000FF6                     tblptrl         equ	4086
   127   000FF8                     tblptru         equ	4088
   128   000FFD                     tosl            equ	4093
   129   000FE8                     wreg            equ	4072
   130   000F77                     SSPMSK          equ	3959	;# 
   131   000F78                     SLRCON          equ	3960	;# 
   132   000F79                     CM2CON1         equ	3961	;# 
   133   000F7A                     CM2CON0         equ	3962	;# 
   134   000F7B                     CM1CON0         equ	3963	;# 
   135   000F7C                     WPUB            equ	3964	;# 
   136   000F7D                     IOCB            equ	3965	;# 
   137   000F7E                     ANSEL           equ	3966	;# 
   138   000F7F                     ANSELH          equ	3967	;# 
   139   000F80                     PORTA           equ	3968	;# 
   140   000F81                     PORTB           equ	3969	;# 
   141   000F82                     PORTC           equ	3970	;# 
   142   000F83                     PORTD           equ	3971	;# 
   143   000F84                     PORTE           equ	3972	;# 
   144   000F89                     LATA            equ	3977	;# 
   145   000F8A                     LATB            equ	3978	;# 
   146   000F8B                     LATC            equ	3979	;# 
   147   000F8C                     LATD            equ	3980	;# 
   148   000F8D                     LATE            equ	3981	;# 
   149   000F92                     TRISA           equ	3986	;# 
   150   000F92                     DDRA            equ	3986	;# 
   151   000F93                     TRISB           equ	3987	;# 
   152   000F93                     DDRB            equ	3987	;# 
   153   000F94                     TRISC           equ	3988	;# 
   154   000F94                     DDRC            equ	3988	;# 
   155   000F95                     TRISD           equ	3989	;# 
   156   000F95                     DDRD            equ	3989	;# 
   157   000F96                     TRISE           equ	3990	;# 
   158   000F96                     DDRE            equ	3990	;# 
   159   000F9B                     OSCTUNE         equ	3995	;# 
   160   000F9D                     PIE1            equ	3997	;# 
   161   000F9E                     PIR1            equ	3998	;# 
   162   000F9F                     IPR1            equ	3999	;# 
   163   000FA0                     PIE2            equ	4000	;# 
   164   000FA1                     PIR2            equ	4001	;# 
   165   000FA2                     IPR2            equ	4002	;# 
   166   000FA6                     EECON1          equ	4006	;# 
   167   000FA7                     EECON2          equ	4007	;# 
   168   000FA8                     EEDATA          equ	4008	;# 
   169   000FA9                     EEADR           equ	4009	;# 
   170   000FAA                     EEADRH          equ	4010	;# 
   171   000FAB                     RCSTA           equ	4011	;# 
   172   000FAB                     RCSTA1          equ	4011	;# 
   173   000FAC                     TXSTA           equ	4012	;# 
   174   000FAC                     TXSTA1          equ	4012	;# 
   175   000FAD                     TXREG           equ	4013	;# 
   176   000FAD                     TXREG1          equ	4013	;# 
   177   000FAE                     RCREG           equ	4014	;# 
   178   000FAE                     RCREG1          equ	4014	;# 
   179   000FAF                     SPBRG           equ	4015	;# 
   180   000FAF                     SPBRG1          equ	4015	;# 
   181   000FB0                     SPBRGH          equ	4016	;# 
   182   000FB1                     T3CON           equ	4017	;# 
   183   000FB2                     TMR3            equ	4018	;# 
   184   000FB2                     TMR3L           equ	4018	;# 
   185   000FB3                     TMR3H           equ	4019	;# 
   186   000FB4                     CVRCON2         equ	4020	;# 
   187   000FB5                     CVRCON          equ	4021	;# 
   188   000FB6                     ECCP1AS         equ	4022	;# 
   189   000FB7                     PWM1CON         equ	4023	;# 
   190   000FB8                     BAUDCON         equ	4024	;# 
   191   000FB8                     BAUDCTL         equ	4024	;# 
   192   000FB9                     PSTRCON         equ	4025	;# 
   193   000FBA                     CCP2CON         equ	4026	;# 
   194   000FBB                     CCPR2           equ	4027	;# 
   195   000FBB                     CCPR2L          equ	4027	;# 
   196   000FBC                     CCPR2H          equ	4028	;# 
   197   000FBD                     CCP1CON         equ	4029	;# 
   198   000FBE                     CCPR1           equ	4030	;# 
   199   000FBE                     CCPR1L          equ	4030	;# 
   200   000FBF                     CCPR1H          equ	4031	;# 
   201   000FC0                     ADCON2          equ	4032	;# 
   202   000FC1                     ADCON1          equ	4033	;# 
   203   000FC2                     ADCON0          equ	4034	;# 
   204   000FC3                     ADRES           equ	4035	;# 
   205   000FC3                     ADRESL          equ	4035	;# 
   206   000FC4                     ADRESH          equ	4036	;# 
   207   000FC5                     SSPCON2         equ	4037	;# 
   208   000FC6                     SSPCON1         equ	4038	;# 
   209   000FC7                     SSPSTAT         equ	4039	;# 
   210   000FC8                     SSPADD          equ	4040	;# 
   211   000FC9                     SSPBUF          equ	4041	;# 
   212   000FCA                     T2CON           equ	4042	;# 
   213   000FCB                     PR2             equ	4043	;# 
   214   000FCB                     MEMCON          equ	4043	;# 
   215   000FCC                     TMR2            equ	4044	;# 
   216   000FCD                     T1CON           equ	4045	;# 
   217   000FCE                     TMR1            equ	4046	;# 
   218   000FCE                     TMR1L           equ	4046	;# 
   219   000FCF                     TMR1H           equ	4047	;# 
   220   000FD0                     RCON            equ	4048	;# 
   221   000FD1                     WDTCON          equ	4049	;# 
   222   000FD2                     HLVDCON         equ	4050	;# 
   223   000FD2                     LVDCON          equ	4050	;# 
   224   000FD3                     OSCCON          equ	4051	;# 
   225   000FD5                     T0CON           equ	4053	;# 
   226   000FD6                     TMR0            equ	4054	;# 
   227   000FD6                     TMR0L           equ	4054	;# 
   228   000FD7                     TMR0H           equ	4055	;# 
   229   000FD8                     STATUS          equ	4056	;# 
   230   000FD9                     FSR2            equ	4057	;# 
   231   000FD9                     FSR2L           equ	4057	;# 
   232   000FDA                     FSR2H           equ	4058	;# 
   233   000FDB                     PLUSW2          equ	4059	;# 
   234   000FDC                     PREINC2         equ	4060	;# 
   235   000FDD                     POSTDEC2        equ	4061	;# 
   236   000FDE                     POSTINC2        equ	4062	;# 
   237   000FDF                     INDF2           equ	4063	;# 
   238   000FE0                     BSR             equ	4064	;# 
   239   000FE1                     FSR1            equ	4065	;# 
   240   000FE1                     FSR1L           equ	4065	;# 
   241   000FE2                     FSR1H           equ	4066	;# 
   242   000FE3                     PLUSW1          equ	4067	;# 
   243   000FE4                     PREINC1         equ	4068	;# 
   244   000FE5                     POSTDEC1        equ	4069	;# 
   245   000FE6                     POSTINC1        equ	4070	;# 
   246   000FE7                     INDF1           equ	4071	;# 
   247   000FE8                     WREG            equ	4072	;# 
   248   000FE9                     FSR0            equ	4073	;# 
   249   000FE9                     FSR0L           equ	4073	;# 
   250   000FEA                     FSR0H           equ	4074	;# 
   251   000FEB                     PLUSW0          equ	4075	;# 
   252   000FEC                     PREINC0         equ	4076	;# 
   253   000FED                     POSTDEC0        equ	4077	;# 
   254   000FEE                     POSTINC0        equ	4078	;# 
   255   000FEF                     INDF0           equ	4079	;# 
   256   000FF0                     INTCON3         equ	4080	;# 
   257   000FF1                     INTCON2         equ	4081	;# 
   258   000FF2                     INTCON          equ	4082	;# 
   259   000FF3                     PROD            equ	4083	;# 
   260   000FF3                     PRODL           equ	4083	;# 
   261   000FF4                     PRODH           equ	4084	;# 
   262   000FF5                     TABLAT          equ	4085	;# 
   263   000FF6                     TBLPTR          equ	4086	;# 
   264   000FF6                     TBLPTRL         equ	4086	;# 
   265   000FF7                     TBLPTRH         equ	4087	;# 
   266   000FF8                     TBLPTRU         equ	4088	;# 
   267   000FF9                     PCLAT           equ	4089	;# 
   268   000FF9                     PC              equ	4089	;# 
   269   000FF9                     PCL             equ	4089	;# 
   270   000FFA                     PCLATH          equ	4090	;# 
   271   000FFB                     PCLATU          equ	4091	;# 
   272   000FFC                     STKPTR          equ	4092	;# 
   273   000FFD                     TOS             equ	4093	;# 
   274   000FFD                     TOSL            equ	4093	;# 
   275   000FFE                     TOSH            equ	4094	;# 
   276   000FFF                     TOSU            equ	4095	;# 
   277   000F77                     SSPMSK          equ	3959	;# 
   278   000F78                     SLRCON          equ	3960	;# 
   279   000F79                     CM2CON1         equ	3961	;# 
   280   000F7A                     CM2CON0         equ	3962	;# 
   281   000F7B                     CM1CON0         equ	3963	;# 
   282   000F7C                     WPUB            equ	3964	;# 
   283   000F7D                     IOCB            equ	3965	;# 
   284   000F7E                     ANSEL           equ	3966	;# 
   285   000F7F                     ANSELH          equ	3967	;# 
   286   000F80                     PORTA           equ	3968	;# 
   287   000F81                     PORTB           equ	3969	;# 
   288   000F82                     PORTC           equ	3970	;# 
   289   000F83                     PORTD           equ	3971	;# 
   290   000F84                     PORTE           equ	3972	;# 
   291   000F89                     LATA            equ	3977	;# 
   292   000F8A                     LATB            equ	3978	;# 
   293   000F8B                     LATC            equ	3979	;# 
   294   000F8C                     LATD            equ	3980	;# 
   295   000F8D                     LATE            equ	3981	;# 
   296   000F92                     TRISA           equ	3986	;# 
   297   000F92                     DDRA            equ	3986	;# 
   298   000F93                     TRISB           equ	3987	;# 
   299   000F93                     DDRB            equ	3987	;# 
   300   000F94                     TRISC           equ	3988	;# 
   301   000F94                     DDRC            equ	3988	;# 
   302   000F95                     TRISD           equ	3989	;# 
   303   000F95                     DDRD            equ	3989	;# 
   304   000F96                     TRISE           equ	3990	;# 
   305   000F96                     DDRE            equ	3990	;# 
   306   000F9B                     OSCTUNE         equ	3995	;# 
   307   000F9D                     PIE1            equ	3997	;# 
   308   000F9E                     PIR1            equ	3998	;# 
   309   000F9F                     IPR1            equ	3999	;# 
   310   000FA0                     PIE2            equ	4000	;# 
   311   000FA1                     PIR2            equ	4001	;# 
   312   000FA2                     IPR2            equ	4002	;# 
   313   000FA6                     EECON1          equ	4006	;# 
   314   000FA7                     EECON2          equ	4007	;# 
   315   000FA8                     EEDATA          equ	4008	;# 
   316   000FA9                     EEADR           equ	4009	;# 
   317   000FAA                     EEADRH          equ	4010	;# 
   318   000FAB                     RCSTA           equ	4011	;# 
   319   000FAB                     RCSTA1          equ	4011	;# 
   320   000FAC                     TXSTA           equ	4012	;# 
   321   000FAC                     TXSTA1          equ	4012	;# 
   322   000FAD                     TXREG           equ	4013	;# 
   323   000FAD                     TXREG1          equ	4013	;# 
   324   000FAE                     RCREG           equ	4014	;# 
   325   000FAE                     RCREG1          equ	4014	;# 
   326   000FAF                     SPBRG           equ	4015	;# 
   327   000FAF                     SPBRG1          equ	4015	;# 
   328   000FB0                     SPBRGH          equ	4016	;# 
   329   000FB1                     T3CON           equ	4017	;# 
   330   000FB2                     TMR3            equ	4018	;# 
   331   000FB2                     TMR3L           equ	4018	;# 
   332   000FB3                     TMR3H           equ	4019	;# 
   333   000FB4                     CVRCON2         equ	4020	;# 
   334   000FB5                     CVRCON          equ	4021	;# 
   335   000FB6                     ECCP1AS         equ	4022	;# 
   336   000FB7                     PWM1CON         equ	4023	;# 
   337   000FB8                     BAUDCON         equ	4024	;# 
   338   000FB8                     BAUDCTL         equ	4024	;# 
   339   000FB9                     PSTRCON         equ	4025	;# 
   340   000FBA                     CCP2CON         equ	4026	;# 
   341   000FBB                     CCPR2           equ	4027	;# 
   342   000FBB                     CCPR2L          equ	4027	;# 
   343   000FBC                     CCPR2H          equ	4028	;# 
   344   000FBD                     CCP1CON         equ	4029	;# 
   345   000FBE                     CCPR1           equ	4030	;# 
   346   000FBE                     CCPR1L          equ	4030	;# 
   347   000FBF                     CCPR1H          equ	4031	;# 
   348   000FC0                     ADCON2          equ	4032	;# 
   349   000FC1                     ADCON1          equ	4033	;# 
   350   000FC2                     ADCON0          equ	4034	;# 
   351   000FC3                     ADRES           equ	4035	;# 
   352   000FC3                     ADRESL          equ	4035	;# 
   353   000FC4                     ADRESH          equ	4036	;# 
   354   000FC5                     SSPCON2         equ	4037	;# 
   355   000FC6                     SSPCON1         equ	4038	;# 
   356   000FC7                     SSPSTAT         equ	4039	;# 
   357   000FC8                     SSPADD          equ	4040	;# 
   358   000FC9                     SSPBUF          equ	4041	;# 
   359   000FCA                     T2CON           equ	4042	;# 
   360   000FCB                     PR2             equ	4043	;# 
   361   000FCB                     MEMCON          equ	4043	;# 
   362   000FCC                     TMR2            equ	4044	;# 
   363   000FCD                     T1CON           equ	4045	;# 
   364   000FCE                     TMR1            equ	4046	;# 
   365   000FCE                     TMR1L           equ	4046	;# 
   366   000FCF                     TMR1H           equ	4047	;# 
   367   000FD0                     RCON            equ	4048	;# 
   368   000FD1                     WDTCON          equ	4049	;# 
   369   000FD2                     HLVDCON         equ	4050	;# 
   370   000FD2                     LVDCON          equ	4050	;# 
   371   000FD3                     OSCCON          equ	4051	;# 
   372   000FD5                     T0CON           equ	4053	;# 
   373   000FD6                     TMR0            equ	4054	;# 
   374   000FD6                     TMR0L           equ	4054	;# 
   375   000FD7                     TMR0H           equ	4055	;# 
   376   000FD8                     STATUS          equ	4056	;# 
   377   000FD9                     FSR2            equ	4057	;# 
   378   000FD9                     FSR2L           equ	4057	;# 
   379   000FDA                     FSR2H           equ	4058	;# 
   380   000FDB                     PLUSW2          equ	4059	;# 
   381   000FDC                     PREINC2         equ	4060	;# 
   382   000FDD                     POSTDEC2        equ	4061	;# 
   383   000FDE                     POSTINC2        equ	4062	;# 
   384   000FDF                     INDF2           equ	4063	;# 
   385   000FE0                     BSR             equ	4064	;# 
   386   000FE1                     FSR1            equ	4065	;# 
   387   000FE1                     FSR1L           equ	4065	;# 
   388   000FE2                     FSR1H           equ	4066	;# 
   389   000FE3                     PLUSW1          equ	4067	;# 
   390   000FE4                     PREINC1         equ	4068	;# 
   391   000FE5                     POSTDEC1        equ	4069	;# 
   392   000FE6                     POSTINC1        equ	4070	;# 
   393   000FE7                     INDF1           equ	4071	;# 
   394   000FE8                     WREG            equ	4072	;# 
   395   000FE9                     FSR0            equ	4073	;# 
   396   000FE9                     FSR0L           equ	4073	;# 
   397   000FEA                     FSR0H           equ	4074	;# 
   398   000FEB                     PLUSW0          equ	4075	;# 
   399   000FEC                     PREINC0         equ	4076	;# 
   400   000FED                     POSTDEC0        equ	4077	;# 
   401   000FEE                     POSTINC0        equ	4078	;# 
   402   000FEF                     INDF0           equ	4079	;# 
   403   000FF0                     INTCON3         equ	4080	;# 
   404   000FF1                     INTCON2         equ	4081	;# 
   405   000FF2                     INTCON          equ	4082	;# 
   406   000FF3                     PROD            equ	4083	;# 
   407   000FF3                     PRODL           equ	4083	;# 
   408   000FF4                     PRODH           equ	4084	;# 
   409   000FF5                     TABLAT          equ	4085	;# 
   410   000FF6                     TBLPTR          equ	4086	;# 
   411   000FF6                     TBLPTRL         equ	4086	;# 
   412   000FF7                     TBLPTRH         equ	4087	;# 
   413   000FF8                     TBLPTRU         equ	4088	;# 
   414   000FF9                     PCLAT           equ	4089	;# 
   415   000FF9                     PC              equ	4089	;# 
   416   000FF9                     PCL             equ	4089	;# 
   417   000FFA                     PCLATH          equ	4090	;# 
   418   000FFB                     PCLATU          equ	4091	;# 
   419   000FFC                     STKPTR          equ	4092	;# 
   420   000FFD                     TOS             equ	4093	;# 
   421   000FFD                     TOSL            equ	4093	;# 
   422   000FFE                     TOSH            equ	4094	;# 
   423   000FFF                     TOSU            equ	4095	;# 
   424   000F77                     SSPMSK          equ	3959	;# 
   425   000F78                     SLRCON          equ	3960	;# 
   426   000F79                     CM2CON1         equ	3961	;# 
   427   000F7A                     CM2CON0         equ	3962	;# 
   428   000F7B                     CM1CON0         equ	3963	;# 
   429   000F7C                     WPUB            equ	3964	;# 
   430   000F7D                     IOCB            equ	3965	;# 
   431   000F7E                     ANSEL           equ	3966	;# 
   432   000F7F                     ANSELH          equ	3967	;# 
   433   000F80                     PORTA           equ	3968	;# 
   434   000F81                     PORTB           equ	3969	;# 
   435   000F82                     PORTC           equ	3970	;# 
   436   000F83                     PORTD           equ	3971	;# 
   437   000F84                     PORTE           equ	3972	;# 
   438   000F89                     LATA            equ	3977	;# 
   439   000F8A                     LATB            equ	3978	;# 
   440   000F8B                     LATC            equ	3979	;# 
   441   000F8C                     LATD            equ	3980	;# 
   442   000F8D                     LATE            equ	3981	;# 
   443   000F92                     TRISA           equ	3986	;# 
   444   000F92                     DDRA            equ	3986	;# 
   445   000F93                     TRISB           equ	3987	;# 
   446   000F93                     DDRB            equ	3987	;# 
   447   000F94                     TRISC           equ	3988	;# 
   448   000F94                     DDRC            equ	3988	;# 
   449   000F95                     TRISD           equ	3989	;# 
   450   000F95                     DDRD            equ	3989	;# 
   451   000F96                     TRISE           equ	3990	;# 
   452   000F96                     DDRE            equ	3990	;# 
   453   000F9B                     OSCTUNE         equ	3995	;# 
   454   000F9D                     PIE1            equ	3997	;# 
   455   000F9E                     PIR1            equ	3998	;# 
   456   000F9F                     IPR1            equ	3999	;# 
   457   000FA0                     PIE2            equ	4000	;# 
   458   000FA1                     PIR2            equ	4001	;# 
   459   000FA2                     IPR2            equ	4002	;# 
   460   000FA6                     EECON1          equ	4006	;# 
   461   000FA7                     EECON2          equ	4007	;# 
   462   000FA8                     EEDATA          equ	4008	;# 
   463   000FA9                     EEADR           equ	4009	;# 
   464   000FAA                     EEADRH          equ	4010	;# 
   465   000FAB                     RCSTA           equ	4011	;# 
   466   000FAB                     RCSTA1          equ	4011	;# 
   467   000FAC                     TXSTA           equ	4012	;# 
   468   000FAC                     TXSTA1          equ	4012	;# 
   469   000FAD                     TXREG           equ	4013	;# 
   470   000FAD                     TXREG1          equ	4013	;# 
   471   000FAE                     RCREG           equ	4014	;# 
   472   000FAE                     RCREG1          equ	4014	;# 
   473   000FAF                     SPBRG           equ	4015	;# 
   474   000FAF                     SPBRG1          equ	4015	;# 
   475   000FB0                     SPBRGH          equ	4016	;# 
   476   000FB1                     T3CON           equ	4017	;# 
   477   000FB2                     TMR3            equ	4018	;# 
   478   000FB2                     TMR3L           equ	4018	;# 
   479   000FB3                     TMR3H           equ	4019	;# 
   480   000FB4                     CVRCON2         equ	4020	;# 
   481   000FB5                     CVRCON          equ	4021	;# 
   482   000FB6                     ECCP1AS         equ	4022	;# 
   483   000FB7                     PWM1CON         equ	4023	;# 
   484   000FB8                     BAUDCON         equ	4024	;# 
   485   000FB8                     BAUDCTL         equ	4024	;# 
   486   000FB9                     PSTRCON         equ	4025	;# 
   487   000FBA                     CCP2CON         equ	4026	;# 
   488   000FBB                     CCPR2           equ	4027	;# 
   489   000FBB                     CCPR2L          equ	4027	;# 
   490   000FBC                     CCPR2H          equ	4028	;# 
   491   000FBD                     CCP1CON         equ	4029	;# 
   492   000FBE                     CCPR1           equ	4030	;# 
   493   000FBE                     CCPR1L          equ	4030	;# 
   494   000FBF                     CCPR1H          equ	4031	;# 
   495   000FC0                     ADCON2          equ	4032	;# 
   496   000FC1                     ADCON1          equ	4033	;# 
   497   000FC2                     ADCON0          equ	4034	;# 
   498   000FC3                     ADRES           equ	4035	;# 
   499   000FC3                     ADRESL          equ	4035	;# 
   500   000FC4                     ADRESH          equ	4036	;# 
   501   000FC5                     SSPCON2         equ	4037	;# 
   502   000FC6                     SSPCON1         equ	4038	;# 
   503   000FC7                     SSPSTAT         equ	4039	;# 
   504   000FC8                     SSPADD          equ	4040	;# 
   505   000FC9                     SSPBUF          equ	4041	;# 
   506   000FCA                     T2CON           equ	4042	;# 
   507   000FCB                     PR2             equ	4043	;# 
   508   000FCB                     MEMCON          equ	4043	;# 
   509   000FCC                     TMR2            equ	4044	;# 
   510   000FCD                     T1CON           equ	4045	;# 
   511   000FCE                     TMR1            equ	4046	;# 
   512   000FCE                     TMR1L           equ	4046	;# 
   513   000FCF                     TMR1H           equ	4047	;# 
   514   000FD0                     RCON            equ	4048	;# 
   515   000FD1                     WDTCON          equ	4049	;# 
   516   000FD2                     HLVDCON         equ	4050	;# 
   517   000FD2                     LVDCON          equ	4050	;# 
   518   000FD3                     OSCCON          equ	4051	;# 
   519   000FD5                     T0CON           equ	4053	;# 
   520   000FD6                     TMR0            equ	4054	;# 
   521   000FD6                     TMR0L           equ	4054	;# 
   522   000FD7                     TMR0H           equ	4055	;# 
   523   000FD8                     STATUS          equ	4056	;# 
   524   000FD9                     FSR2            equ	4057	;# 
   525   000FD9                     FSR2L           equ	4057	;# 
   526   000FDA                     FSR2H           equ	4058	;# 
   527   000FDB                     PLUSW2          equ	4059	;# 
   528   000FDC                     PREINC2         equ	4060	;# 
   529   000FDD                     POSTDEC2        equ	4061	;# 
   530   000FDE                     POSTINC2        equ	4062	;# 
   531   000FDF                     INDF2           equ	4063	;# 
   532   000FE0                     BSR             equ	4064	;# 
   533   000FE1                     FSR1            equ	4065	;# 
   534   000FE1                     FSR1L           equ	4065	;# 
   535   000FE2                     FSR1H           equ	4066	;# 
   536   000FE3                     PLUSW1          equ	4067	;# 
   537   000FE4                     PREINC1         equ	4068	;# 
   538   000FE5                     POSTDEC1        equ	4069	;# 
   539   000FE6                     POSTINC1        equ	4070	;# 
   540   000FE7                     INDF1           equ	4071	;# 
   541   000FE8                     WREG            equ	4072	;# 
   542   000FE9                     FSR0            equ	4073	;# 
   543   000FE9                     FSR0L           equ	4073	;# 
   544   000FEA                     FSR0H           equ	4074	;# 
   545   000FEB                     PLUSW0          equ	4075	;# 
   546   000FEC                     PREINC0         equ	4076	;# 
   547   000FED                     POSTDEC0        equ	4077	;# 
   548   000FEE                     POSTINC0        equ	4078	;# 
   549   000FEF                     INDF0           equ	4079	;# 
   550   000FF0                     INTCON3         equ	4080	;# 
   551   000FF1                     INTCON2         equ	4081	;# 
   552   000FF2                     INTCON          equ	4082	;# 
   553   000FF3                     PROD            equ	4083	;# 
   554   000FF3                     PRODL           equ	4083	;# 
   555   000FF4                     PRODH           equ	4084	;# 
   556   000FF5                     TABLAT          equ	4085	;# 
   557   000FF6                     TBLPTR          equ	4086	;# 
   558   000FF6                     TBLPTRL         equ	4086	;# 
   559   000FF7                     TBLPTRH         equ	4087	;# 
   560   000FF8                     TBLPTRU         equ	4088	;# 
   561   000FF9                     PCLAT           equ	4089	;# 
   562   000FF9                     PC              equ	4089	;# 
   563   000FF9                     PCL             equ	4089	;# 
   564   000FFA                     PCLATH          equ	4090	;# 
   565   000FFB                     PCLATU          equ	4091	;# 
   566   000FFC                     STKPTR          equ	4092	;# 
   567   000FFD                     TOS             equ	4093	;# 
   568   000FFD                     TOSL            equ	4093	;# 
   569   000FFE                     TOSH            equ	4094	;# 
   570   000FFF                     TOSU            equ	4095	;# 
   571   000F77                     SSPMSK          equ	3959	;# 
   572   000F78                     SLRCON          equ	3960	;# 
   573   000F79                     CM2CON1         equ	3961	;# 
   574   000F7A                     CM2CON0         equ	3962	;# 
   575   000F7B                     CM1CON0         equ	3963	;# 
   576   000F7C                     WPUB            equ	3964	;# 
   577   000F7D                     IOCB            equ	3965	;# 
   578   000F7E                     ANSEL           equ	3966	;# 
   579   000F7F                     ANSELH          equ	3967	;# 
   580   000F80                     PORTA           equ	3968	;# 
   581   000F81                     PORTB           equ	3969	;# 
   582   000F82                     PORTC           equ	3970	;# 
   583   000F83                     PORTD           equ	3971	;# 
   584   000F84                     PORTE           equ	3972	;# 
   585   000F89                     LATA            equ	3977	;# 
   586   000F8A                     LATB            equ	3978	;# 
   587   000F8B                     LATC            equ	3979	;# 
   588   000F8C                     LATD            equ	3980	;# 
   589   000F8D                     LATE            equ	3981	;# 
   590   000F92                     TRISA           equ	3986	;# 
   591   000F92                     DDRA            equ	3986	;# 
   592   000F93                     TRISB           equ	3987	;# 
   593   000F93                     DDRB            equ	3987	;# 
   594   000F94                     TRISC           equ	3988	;# 
   595   000F94                     DDRC            equ	3988	;# 
   596   000F95                     TRISD           equ	3989	;# 
   597   000F95                     DDRD            equ	3989	;# 
   598   000F96                     TRISE           equ	3990	;# 
   599   000F96                     DDRE            equ	3990	;# 
   600   000F9B                     OSCTUNE         equ	3995	;# 
   601   000F9D                     PIE1            equ	3997	;# 
   602   000F9E                     PIR1            equ	3998	;# 
   603   000F9F                     IPR1            equ	3999	;# 
   604   000FA0                     PIE2            equ	4000	;# 
   605   000FA1                     PIR2            equ	4001	;# 
   606   000FA2                     IPR2            equ	4002	;# 
   607   000FA6                     EECON1          equ	4006	;# 
   608   000FA7                     EECON2          equ	4007	;# 
   609   000FA8                     EEDATA          equ	4008	;# 
   610   000FA9                     EEADR           equ	4009	;# 
   611   000FAA                     EEADRH          equ	4010	;# 
   612   000FAB                     RCSTA           equ	4011	;# 
   613   000FAB                     RCSTA1          equ	4011	;# 
   614   000FAC                     TXSTA           equ	4012	;# 
   615   000FAC                     TXSTA1          equ	4012	;# 
   616   000FAD                     TXREG           equ	4013	;# 
   617   000FAD                     TXREG1          equ	4013	;# 
   618   000FAE                     RCREG           equ	4014	;# 
   619   000FAE                     RCREG1          equ	4014	;# 
   620   000FAF                     SPBRG           equ	4015	;# 
   621   000FAF                     SPBRG1          equ	4015	;# 
   622   000FB0                     SPBRGH          equ	4016	;# 
   623   000FB1                     T3CON           equ	4017	;# 
   624   000FB2                     TMR3            equ	4018	;# 
   625   000FB2                     TMR3L           equ	4018	;# 
   626   000FB3                     TMR3H           equ	4019	;# 
   627   000FB4                     CVRCON2         equ	4020	;# 
   628   000FB5                     CVRCON          equ	4021	;# 
   629   000FB6                     ECCP1AS         equ	4022	;# 
   630   000FB7                     PWM1CON         equ	4023	;# 
   631   000FB8                     BAUDCON         equ	4024	;# 
   632   000FB8                     BAUDCTL         equ	4024	;# 
   633   000FB9                     PSTRCON         equ	4025	;# 
   634   000FBA                     CCP2CON         equ	4026	;# 
   635   000FBB                     CCPR2           equ	4027	;# 
   636   000FBB                     CCPR2L          equ	4027	;# 
   637   000FBC                     CCPR2H          equ	4028	;# 
   638   000FBD                     CCP1CON         equ	4029	;# 
   639   000FBE                     CCPR1           equ	4030	;# 
   640   000FBE                     CCPR1L          equ	4030	;# 
   641   000FBF                     CCPR1H          equ	4031	;# 
   642   000FC0                     ADCON2          equ	4032	;# 
   643   000FC1                     ADCON1          equ	4033	;# 
   644   000FC2                     ADCON0          equ	4034	;# 
   645   000FC3                     ADRES           equ	4035	;# 
   646   000FC3                     ADRESL          equ	4035	;# 
   647   000FC4                     ADRESH          equ	4036	;# 
   648   000FC5                     SSPCON2         equ	4037	;# 
   649   000FC6                     SSPCON1         equ	4038	;# 
   650   000FC7                     SSPSTAT         equ	4039	;# 
   651   000FC8                     SSPADD          equ	4040	;# 
   652   000FC9                     SSPBUF          equ	4041	;# 
   653   000FCA                     T2CON           equ	4042	;# 
   654   000FCB                     PR2             equ	4043	;# 
   655   000FCB                     MEMCON          equ	4043	;# 
   656   000FCC                     TMR2            equ	4044	;# 
   657   000FCD                     T1CON           equ	4045	;# 
   658   000FCE                     TMR1            equ	4046	;# 
   659   000FCE                     TMR1L           equ	4046	;# 
   660   000FCF                     TMR1H           equ	4047	;# 
   661   000FD0                     RCON            equ	4048	;# 
   662   000FD1                     WDTCON          equ	4049	;# 
   663   000FD2                     HLVDCON         equ	4050	;# 
   664   000FD2                     LVDCON          equ	4050	;# 
   665   000FD3                     OSCCON          equ	4051	;# 
   666   000FD5                     T0CON           equ	4053	;# 
   667   000FD6                     TMR0            equ	4054	;# 
   668   000FD6                     TMR0L           equ	4054	;# 
   669   000FD7                     TMR0H           equ	4055	;# 
   670   000FD8                     STATUS          equ	4056	;# 
   671   000FD9                     FSR2            equ	4057	;# 
   672   000FD9                     FSR2L           equ	4057	;# 
   673   000FDA                     FSR2H           equ	4058	;# 
   674   000FDB                     PLUSW2          equ	4059	;# 
   675   000FDC                     PREINC2         equ	4060	;# 
   676   000FDD                     POSTDEC2        equ	4061	;# 
   677   000FDE                     POSTINC2        equ	4062	;# 
   678   000FDF                     INDF2           equ	4063	;# 
   679   000FE0                     BSR             equ	4064	;# 
   680   000FE1                     FSR1            equ	4065	;# 
   681   000FE1                     FSR1L           equ	4065	;# 
   682   000FE2                     FSR1H           equ	4066	;# 
   683   000FE3                     PLUSW1          equ	4067	;# 
   684   000FE4                     PREINC1         equ	4068	;# 
   685   000FE5                     POSTDEC1        equ	4069	;# 
   686   000FE6                     POSTINC1        equ	4070	;# 
   687   000FE7                     INDF1           equ	4071	;# 
   688   000FE8                     WREG            equ	4072	;# 
   689   000FE9                     FSR0            equ	4073	;# 
   690   000FE9                     FSR0L           equ	4073	;# 
   691   000FEA                     FSR0H           equ	4074	;# 
   692   000FEB                     PLUSW0          equ	4075	;# 
   693   000FEC                     PREINC0         equ	4076	;# 
   694   000FED                     POSTDEC0        equ	4077	;# 
   695   000FEE                     POSTINC0        equ	4078	;# 
   696   000FEF                     INDF0           equ	4079	;# 
   697   000FF0                     INTCON3         equ	4080	;# 
   698   000FF1                     INTCON2         equ	4081	;# 
   699   000FF2                     INTCON          equ	4082	;# 
   700   000FF3                     PROD            equ	4083	;# 
   701   000FF3                     PRODL           equ	4083	;# 
   702   000FF4                     PRODH           equ	4084	;# 
   703   000FF5                     TABLAT          equ	4085	;# 
   704   000FF6                     TBLPTR          equ	4086	;# 
   705   000FF6                     TBLPTRL         equ	4086	;# 
   706   000FF7                     TBLPTRH         equ	4087	;# 
   707   000FF8                     TBLPTRU         equ	4088	;# 
   708   000FF9                     PCLAT           equ	4089	;# 
   709   000FF9                     PC              equ	4089	;# 
   710   000FF9                     PCL             equ	4089	;# 
   711   000FFA                     PCLATH          equ	4090	;# 
   712   000FFB                     PCLATU          equ	4091	;# 
   713   000FFC                     STKPTR          equ	4092	;# 
   714   000FFD                     TOS             equ	4093	;# 
   715   000FFD                     TOSL            equ	4093	;# 
   716   000FFE                     TOSH            equ	4094	;# 
   717   000FFF                     TOSU            equ	4095	;# 
   718   000F77                     SSPMSK          equ	3959	;# 
   719   000F78                     SLRCON          equ	3960	;# 
   720   000F79                     CM2CON1         equ	3961	;# 
   721   000F7A                     CM2CON0         equ	3962	;# 
   722   000F7B                     CM1CON0         equ	3963	;# 
   723   000F7C                     WPUB            equ	3964	;# 
   724   000F7D                     IOCB            equ	3965	;# 
   725   000F7E                     ANSEL           equ	3966	;# 
   726   000F7F                     ANSELH          equ	3967	;# 
   727   000F80                     PORTA           equ	3968	;# 
   728   000F81                     PORTB           equ	3969	;# 
   729   000F82                     PORTC           equ	3970	;# 
   730   000F83                     PORTD           equ	3971	;# 
   731   000F84                     PORTE           equ	3972	;# 
   732   000F89                     LATA            equ	3977	;# 
   733   000F8A                     LATB            equ	3978	;# 
   734   000F8B                     LATC            equ	3979	;# 
   735   000F8C                     LATD            equ	3980	;# 
   736   000F8D                     LATE            equ	3981	;# 
   737   000F92                     TRISA           equ	3986	;# 
   738   000F92                     DDRA            equ	3986	;# 
   739   000F93                     TRISB           equ	3987	;# 
   740   000F93                     DDRB            equ	3987	;# 
   741   000F94                     TRISC           equ	3988	;# 
   742   000F94                     DDRC            equ	3988	;# 
   743   000F95                     TRISD           equ	3989	;# 
   744   000F95                     DDRD            equ	3989	;# 
   745   000F96                     TRISE           equ	3990	;# 
   746   000F96                     DDRE            equ	3990	;# 
   747   000F9B                     OSCTUNE         equ	3995	;# 
   748   000F9D                     PIE1            equ	3997	;# 
   749   000F9E                     PIR1            equ	3998	;# 
   750   000F9F                     IPR1            equ	3999	;# 
   751   000FA0                     PIE2            equ	4000	;# 
   752   000FA1                     PIR2            equ	4001	;# 
   753   000FA2                     IPR2            equ	4002	;# 
   754   000FA6                     EECON1          equ	4006	;# 
   755   000FA7                     EECON2          equ	4007	;# 
   756   000FA8                     EEDATA          equ	4008	;# 
   757   000FA9                     EEADR           equ	4009	;# 
   758   000FAA                     EEADRH          equ	4010	;# 
   759   000FAB                     RCSTA           equ	4011	;# 
   760   000FAB                     RCSTA1          equ	4011	;# 
   761   000FAC                     TXSTA           equ	4012	;# 
   762   000FAC                     TXSTA1          equ	4012	;# 
   763   000FAD                     TXREG           equ	4013	;# 
   764   000FAD                     TXREG1          equ	4013	;# 
   765   000FAE                     RCREG           equ	4014	;# 
   766   000FAE                     RCREG1          equ	4014	;# 
   767   000FAF                     SPBRG           equ	4015	;# 
   768   000FAF                     SPBRG1          equ	4015	;# 
   769   000FB0                     SPBRGH          equ	4016	;# 
   770   000FB1                     T3CON           equ	4017	;# 
   771   000FB2                     TMR3            equ	4018	;# 
   772   000FB2                     TMR3L           equ	4018	;# 
   773   000FB3                     TMR3H           equ	4019	;# 
   774   000FB4                     CVRCON2         equ	4020	;# 
   775   000FB5                     CVRCON          equ	4021	;# 
   776   000FB6                     ECCP1AS         equ	4022	;# 
   777   000FB7                     PWM1CON         equ	4023	;# 
   778   000FB8                     BAUDCON         equ	4024	;# 
   779   000FB8                     BAUDCTL         equ	4024	;# 
   780   000FB9                     PSTRCON         equ	4025	;# 
   781   000FBA                     CCP2CON         equ	4026	;# 
   782   000FBB                     CCPR2           equ	4027	;# 
   783   000FBB                     CCPR2L          equ	4027	;# 
   784   000FBC                     CCPR2H          equ	4028	;# 
   785   000FBD                     CCP1CON         equ	4029	;# 
   786   000FBE                     CCPR1           equ	4030	;# 
   787   000FBE                     CCPR1L          equ	4030	;# 
   788   000FBF                     CCPR1H          equ	4031	;# 
   789   000FC0                     ADCON2          equ	4032	;# 
   790   000FC1                     ADCON1          equ	4033	;# 
   791   000FC2                     ADCON0          equ	4034	;# 
   792   000FC3                     ADRES           equ	4035	;# 
   793   000FC3                     ADRESL          equ	4035	;# 
   794   000FC4                     ADRESH          equ	4036	;# 
   795   000FC5                     SSPCON2         equ	4037	;# 
   796   000FC6                     SSPCON1         equ	4038	;# 
   797   000FC7                     SSPSTAT         equ	4039	;# 
   798   000FC8                     SSPADD          equ	4040	;# 
   799   000FC9                     SSPBUF          equ	4041	;# 
   800   000FCA                     T2CON           equ	4042	;# 
   801   000FCB                     PR2             equ	4043	;# 
   802   000FCB                     MEMCON          equ	4043	;# 
   803   000FCC                     TMR2            equ	4044	;# 
   804   000FCD                     T1CON           equ	4045	;# 
   805   000FCE                     TMR1            equ	4046	;# 
   806   000FCE                     TMR1L           equ	4046	;# 
   807   000FCF                     TMR1H           equ	4047	;# 
   808   000FD0                     RCON            equ	4048	;# 
   809   000FD1                     WDTCON          equ	4049	;# 
   810   000FD2                     HLVDCON         equ	4050	;# 
   811   000FD2                     LVDCON          equ	4050	;# 
   812   000FD3                     OSCCON          equ	4051	;# 
   813   000FD5                     T0CON           equ	4053	;# 
   814   000FD6                     TMR0            equ	4054	;# 
   815   000FD6                     TMR0L           equ	4054	;# 
   816   000FD7                     TMR0H           equ	4055	;# 
   817   000FD8                     STATUS          equ	4056	;# 
   818   000FD9                     FSR2            equ	4057	;# 
   819   000FD9                     FSR2L           equ	4057	;# 
   820   000FDA                     FSR2H           equ	4058	;# 
   821   000FDB                     PLUSW2          equ	4059	;# 
   822   000FDC                     PREINC2         equ	4060	;# 
   823   000FDD                     POSTDEC2        equ	4061	;# 
   824   000FDE                     POSTINC2        equ	4062	;# 
   825   000FDF                     INDF2           equ	4063	;# 
   826   000FE0                     BSR             equ	4064	;# 
   827   000FE1                     FSR1            equ	4065	;# 
   828   000FE1                     FSR1L           equ	4065	;# 
   829   000FE2                     FSR1H           equ	4066	;# 
   830   000FE3                     PLUSW1          equ	4067	;# 
   831   000FE4                     PREINC1         equ	4068	;# 
   832   000FE5                     POSTDEC1        equ	4069	;# 
   833   000FE6                     POSTINC1        equ	4070	;# 
   834   000FE7                     INDF1           equ	4071	;# 
   835   000FE8                     WREG            equ	4072	;# 
   836   000FE9                     FSR0            equ	4073	;# 
   837   000FE9                     FSR0L           equ	4073	;# 
   838   000FEA                     FSR0H           equ	4074	;# 
   839   000FEB                     PLUSW0          equ	4075	;# 
   840   000FEC                     PREINC0         equ	4076	;# 
   841   000FED                     POSTDEC0        equ	4077	;# 
   842   000FEE                     POSTINC0        equ	4078	;# 
   843   000FEF                     INDF0           equ	4079	;# 
   844   000FF0                     INTCON3         equ	4080	;# 
   845   000FF1                     INTCON2         equ	4081	;# 
   846   000FF2                     INTCON          equ	4082	;# 
   847   000FF3                     PROD            equ	4083	;# 
   848   000FF3                     PRODL           equ	4083	;# 
   849   000FF4                     PRODH           equ	4084	;# 
   850   000FF5                     TABLAT          equ	4085	;# 
   851   000FF6                     TBLPTR          equ	4086	;# 
   852   000FF6                     TBLPTRL         equ	4086	;# 
   853   000FF7                     TBLPTRH         equ	4087	;# 
   854   000FF8                     TBLPTRU         equ	4088	;# 
   855   000FF9                     PCLAT           equ	4089	;# 
   856   000FF9                     PC              equ	4089	;# 
   857   000FF9                     PCL             equ	4089	;# 
   858   000FFA                     PCLATH          equ	4090	;# 
   859   000FFB                     PCLATU          equ	4091	;# 
   860   000FFC                     STKPTR          equ	4092	;# 
   861   000FFD                     TOS             equ	4093	;# 
   862   000FFD                     TOSL            equ	4093	;# 
   863   000FFE                     TOSH            equ	4094	;# 
   864   000FFF                     TOSU            equ	4095	;# 
   865   000F77                     SSPMSK          equ	3959	;# 
   866   000F78                     SLRCON          equ	3960	;# 
   867   000F79                     CM2CON1         equ	3961	;# 
   868   000F7A                     CM2CON0         equ	3962	;# 
   869   000F7B                     CM1CON0         equ	3963	;# 
   870   000F7C                     WPUB            equ	3964	;# 
   871   000F7D                     IOCB            equ	3965	;# 
   872   000F7E                     ANSEL           equ	3966	;# 
   873   000F7F                     ANSELH          equ	3967	;# 
   874   000F80                     PORTA           equ	3968	;# 
   875   000F81                     PORTB           equ	3969	;# 
   876   000F82                     PORTC           equ	3970	;# 
   877   000F83                     PORTD           equ	3971	;# 
   878   000F84                     PORTE           equ	3972	;# 
   879   000F89                     LATA            equ	3977	;# 
   880   000F8A                     LATB            equ	3978	;# 
   881   000F8B                     LATC            equ	3979	;# 
   882   000F8C                     LATD            equ	3980	;# 
   883   000F8D                     LATE            equ	3981	;# 
   884   000F92                     TRISA           equ	3986	;# 
   885   000F92                     DDRA            equ	3986	;# 
   886   000F93                     TRISB           equ	3987	;# 
   887   000F93                     DDRB            equ	3987	;# 
   888   000F94                     TRISC           equ	3988	;# 
   889   000F94                     DDRC            equ	3988	;# 
   890   000F95                     TRISD           equ	3989	;# 
   891   000F95                     DDRD            equ	3989	;# 
   892   000F96                     TRISE           equ	3990	;# 
   893   000F96                     DDRE            equ	3990	;# 
   894   000F9B                     OSCTUNE         equ	3995	;# 
   895   000F9D                     PIE1            equ	3997	;# 
   896   000F9E                     PIR1            equ	3998	;# 
   897   000F9F                     IPR1            equ	3999	;# 
   898   000FA0                     PIE2            equ	4000	;# 
   899   000FA1                     PIR2            equ	4001	;# 
   900   000FA2                     IPR2            equ	4002	;# 
   901   000FA6                     EECON1          equ	4006	;# 
   902   000FA7                     EECON2          equ	4007	;# 
   903   000FA8                     EEDATA          equ	4008	;# 
   904   000FA9                     EEADR           equ	4009	;# 
   905   000FAA                     EEADRH          equ	4010	;# 
   906   000FAB                     RCSTA           equ	4011	;# 
   907   000FAB                     RCSTA1          equ	4011	;# 
   908   000FAC                     TXSTA           equ	4012	;# 
   909   000FAC                     TXSTA1          equ	4012	;# 
   910   000FAD                     TXREG           equ	4013	;# 
   911   000FAD                     TXREG1          equ	4013	;# 
   912   000FAE                     RCREG           equ	4014	;# 
   913   000FAE                     RCREG1          equ	4014	;# 
   914   000FAF                     SPBRG           equ	4015	;# 
   915   000FAF                     SPBRG1          equ	4015	;# 
   916   000FB0                     SPBRGH          equ	4016	;# 
   917   000FB1                     T3CON           equ	4017	;# 
   918   000FB2                     TMR3            equ	4018	;# 
   919   000FB2                     TMR3L           equ	4018	;# 
   920   000FB3                     TMR3H           equ	4019	;# 
   921   000FB4                     CVRCON2         equ	4020	;# 
   922   000FB5                     CVRCON          equ	4021	;# 
   923   000FB6                     ECCP1AS         equ	4022	;# 
   924   000FB7                     PWM1CON         equ	4023	;# 
   925   000FB8                     BAUDCON         equ	4024	;# 
   926   000FB8                     BAUDCTL         equ	4024	;# 
   927   000FB9                     PSTRCON         equ	4025	;# 
   928   000FBA                     CCP2CON         equ	4026	;# 
   929   000FBB                     CCPR2           equ	4027	;# 
   930   000FBB                     CCPR2L          equ	4027	;# 
   931   000FBC                     CCPR2H          equ	4028	;# 
   932   000FBD                     CCP1CON         equ	4029	;# 
   933   000FBE                     CCPR1           equ	4030	;# 
   934   000FBE                     CCPR1L          equ	4030	;# 
   935   000FBF                     CCPR1H          equ	4031	;# 
   936   000FC0                     ADCON2          equ	4032	;# 
   937   000FC1                     ADCON1          equ	4033	;# 
   938   000FC2                     ADCON0          equ	4034	;# 
   939   000FC3                     ADRES           equ	4035	;# 
   940   000FC3                     ADRESL          equ	4035	;# 
   941   000FC4                     ADRESH          equ	4036	;# 
   942   000FC5                     SSPCON2         equ	4037	;# 
   943   000FC6                     SSPCON1         equ	4038	;# 
   944   000FC7                     SSPSTAT         equ	4039	;# 
   945   000FC8                     SSPADD          equ	4040	;# 
   946   000FC9                     SSPBUF          equ	4041	;# 
   947   000FCA                     T2CON           equ	4042	;# 
   948   000FCB                     PR2             equ	4043	;# 
   949   000FCB                     MEMCON          equ	4043	;# 
   950   000FCC                     TMR2            equ	4044	;# 
   951   000FCD                     T1CON           equ	4045	;# 
   952   000FCE                     TMR1            equ	4046	;# 
   953   000FCE                     TMR1L           equ	4046	;# 
   954   000FCF                     TMR1H           equ	4047	;# 
   955   000FD0                     RCON            equ	4048	;# 
   956   000FD1                     WDTCON          equ	4049	;# 
   957   000FD2                     HLVDCON         equ	4050	;# 
   958   000FD2                     LVDCON          equ	4050	;# 
   959   000FD3                     OSCCON          equ	4051	;# 
   960   000FD5                     T0CON           equ	4053	;# 
   961   000FD6                     TMR0            equ	4054	;# 
   962   000FD6                     TMR0L           equ	4054	;# 
   963   000FD7                     TMR0H           equ	4055	;# 
   964   000FD8                     STATUS          equ	4056	;# 
   965   000FD9                     FSR2            equ	4057	;# 
   966   000FD9                     FSR2L           equ	4057	;# 
   967   000FDA                     FSR2H           equ	4058	;# 
   968   000FDB                     PLUSW2          equ	4059	;# 
   969   000FDC                     PREINC2         equ	4060	;# 
   970   000FDD                     POSTDEC2        equ	4061	;# 
   971   000FDE                     POSTINC2        equ	4062	;# 
   972   000FDF                     INDF2           equ	4063	;# 
   973   000FE0                     BSR             equ	4064	;# 
   974   000FE1                     FSR1            equ	4065	;# 
   975   000FE1                     FSR1L           equ	4065	;# 
   976   000FE2                     FSR1H           equ	4066	;# 
   977   000FE3                     PLUSW1          equ	4067	;# 
   978   000FE4                     PREINC1         equ	4068	;# 
   979   000FE5                     POSTDEC1        equ	4069	;# 
   980   000FE6                     POSTINC1        equ	4070	;# 
   981   000FE7                     INDF1           equ	4071	;# 
   982   000FE8                     WREG            equ	4072	;# 
   983   000FE9                     FSR0            equ	4073	;# 
   984   000FE9                     FSR0L           equ	4073	;# 
   985   000FEA                     FSR0H           equ	4074	;# 
   986   000FEB                     PLUSW0          equ	4075	;# 
   987   000FEC                     PREINC0         equ	4076	;# 
   988   000FED                     POSTDEC0        equ	4077	;# 
   989   000FEE                     POSTINC0        equ	4078	;# 
   990   000FEF                     INDF0           equ	4079	;# 
   991   000FF0                     INTCON3         equ	4080	;# 
   992   000FF1                     INTCON2         equ	4081	;# 
   993   000FF2                     INTCON          equ	4082	;# 
   994   000FF3                     PROD            equ	4083	;# 
   995   000FF3                     PRODL           equ	4083	;# 
   996   000FF4                     PRODH           equ	4084	;# 
   997   000FF5                     TABLAT          equ	4085	;# 
   998   000FF6                     TBLPTR          equ	4086	;# 
   999   000FF6                     TBLPTRL         equ	4086	;# 
  1000   000FF7                     TBLPTRH         equ	4087	;# 
  1001   000FF8                     TBLPTRU         equ	4088	;# 
  1002   000FF9                     PCLAT           equ	4089	;# 
  1003   000FF9                     PC              equ	4089	;# 
  1004   000FF9                     PCL             equ	4089	;# 
  1005   000FFA                     PCLATH          equ	4090	;# 
  1006   000FFB                     PCLATU          equ	4091	;# 
  1007   000FFC                     STKPTR          equ	4092	;# 
  1008   000FFD                     TOS             equ	4093	;# 
  1009   000FFD                     TOSL            equ	4093	;# 
  1010   000FFE                     TOSH            equ	4094	;# 
  1011   000FFF                     TOSU            equ	4095	;# 
  1012   000F77                     SSPMSK          equ	3959	;# 
  1013   000F78                     SLRCON          equ	3960	;# 
  1014   000F79                     CM2CON1         equ	3961	;# 
  1015   000F7A                     CM2CON0         equ	3962	;# 
  1016   000F7B                     CM1CON0         equ	3963	;# 
  1017   000F7C                     WPUB            equ	3964	;# 
  1018   000F7D                     IOCB            equ	3965	;# 
  1019   000F7E                     ANSEL           equ	3966	;# 
  1020   000F7F                     ANSELH          equ	3967	;# 
  1021   000F80                     PORTA           equ	3968	;# 
  1022   000F81                     PORTB           equ	3969	;# 
  1023   000F82                     PORTC           equ	3970	;# 
  1024   000F83                     PORTD           equ	3971	;# 
  1025   000F84                     PORTE           equ	3972	;# 
  1026   000F89                     LATA            equ	3977	;# 
  1027   000F8A                     LATB            equ	3978	;# 
  1028   000F8B                     LATC            equ	3979	;# 
  1029   000F8C                     LATD            equ	3980	;# 
  1030   000F8D                     LATE            equ	3981	;# 
  1031   000F92                     TRISA           equ	3986	;# 
  1032   000F92                     DDRA            equ	3986	;# 
  1033   000F93                     TRISB           equ	3987	;# 
  1034   000F93                     DDRB            equ	3987	;# 
  1035   000F94                     TRISC           equ	3988	;# 
  1036   000F94                     DDRC            equ	3988	;# 
  1037   000F95                     TRISD           equ	3989	;# 
  1038   000F95                     DDRD            equ	3989	;# 
  1039   000F96                     TRISE           equ	3990	;# 
  1040   000F96                     DDRE            equ	3990	;# 
  1041   000F9B                     OSCTUNE         equ	3995	;# 
  1042   000F9D                     PIE1            equ	3997	;# 
  1043   000F9E                     PIR1            equ	3998	;# 
  1044   000F9F                     IPR1            equ	3999	;# 
  1045   000FA0                     PIE2            equ	4000	;# 
  1046   000FA1                     PIR2            equ	4001	;# 
  1047   000FA2                     IPR2            equ	4002	;# 
  1048   000FA6                     EECON1          equ	4006	;# 
  1049   000FA7                     EECON2          equ	4007	;# 
  1050   000FA8                     EEDATA          equ	4008	;# 
  1051   000FA9                     EEADR           equ	4009	;# 
  1052   000FAA                     EEADRH          equ	4010	;# 
  1053   000FAB                     RCSTA           equ	4011	;# 
  1054   000FAB                     RCSTA1          equ	4011	;# 
  1055   000FAC                     TXSTA           equ	4012	;# 
  1056   000FAC                     TXSTA1          equ	4012	;# 
  1057   000FAD                     TXREG           equ	4013	;# 
  1058   000FAD                     TXREG1          equ	4013	;# 
  1059   000FAE                     RCREG           equ	4014	;# 
  1060   000FAE                     RCREG1          equ	4014	;# 
  1061   000FAF                     SPBRG           equ	4015	;# 
  1062   000FAF                     SPBRG1          equ	4015	;# 
  1063   000FB0                     SPBRGH          equ	4016	;# 
  1064   000FB1                     T3CON           equ	4017	;# 
  1065   000FB2                     TMR3            equ	4018	;# 
  1066   000FB2                     TMR3L           equ	4018	;# 
  1067   000FB3                     TMR3H           equ	4019	;# 
  1068   000FB4                     CVRCON2         equ	4020	;# 
  1069   000FB5                     CVRCON          equ	4021	;# 
  1070   000FB6                     ECCP1AS         equ	4022	;# 
  1071   000FB7                     PWM1CON         equ	4023	;# 
  1072   000FB8                     BAUDCON         equ	4024	;# 
  1073   000FB8                     BAUDCTL         equ	4024	;# 
  1074   000FB9                     PSTRCON         equ	4025	;# 
  1075   000FBA                     CCP2CON         equ	4026	;# 
  1076   000FBB                     CCPR2           equ	4027	;# 
  1077   000FBB                     CCPR2L          equ	4027	;# 
  1078   000FBC                     CCPR2H          equ	4028	;# 
  1079   000FBD                     CCP1CON         equ	4029	;# 
  1080   000FBE                     CCPR1           equ	4030	;# 
  1081   000FBE                     CCPR1L          equ	4030	;# 
  1082   000FBF                     CCPR1H          equ	4031	;# 
  1083   000FC0                     ADCON2          equ	4032	;# 
  1084   000FC1                     ADCON1          equ	4033	;# 
  1085   000FC2                     ADCON0          equ	4034	;# 
  1086   000FC3                     ADRES           equ	4035	;# 
  1087   000FC3                     ADRESL          equ	4035	;# 
  1088   000FC4                     ADRESH          equ	4036	;# 
  1089   000FC5                     SSPCON2         equ	4037	;# 
  1090   000FC6                     SSPCON1         equ	4038	;# 
  1091   000FC7                     SSPSTAT         equ	4039	;# 
  1092   000FC8                     SSPADD          equ	4040	;# 
  1093   000FC9                     SSPBUF          equ	4041	;# 
  1094   000FCA                     T2CON           equ	4042	;# 
  1095   000FCB                     PR2             equ	4043	;# 
  1096   000FCB                     MEMCON          equ	4043	;# 
  1097   000FCC                     TMR2            equ	4044	;# 
  1098   000FCD                     T1CON           equ	4045	;# 
  1099   000FCE                     TMR1            equ	4046	;# 
  1100   000FCE                     TMR1L           equ	4046	;# 
  1101   000FCF                     TMR1H           equ	4047	;# 
  1102   000FD0                     RCON            equ	4048	;# 
  1103   000FD1                     WDTCON          equ	4049	;# 
  1104   000FD2                     HLVDCON         equ	4050	;# 
  1105   000FD2                     LVDCON          equ	4050	;# 
  1106   000FD3                     OSCCON          equ	4051	;# 
  1107   000FD5                     T0CON           equ	4053	;# 
  1108   000FD6                     TMR0            equ	4054	;# 
  1109   000FD6                     TMR0L           equ	4054	;# 
  1110   000FD7                     TMR0H           equ	4055	;# 
  1111   000FD8                     STATUS          equ	4056	;# 
  1112   000FD9                     FSR2            equ	4057	;# 
  1113   000FD9                     FSR2L           equ	4057	;# 
  1114   000FDA                     FSR2H           equ	4058	;# 
  1115   000FDB                     PLUSW2          equ	4059	;# 
  1116   000FDC                     PREINC2         equ	4060	;# 
  1117   000FDD                     POSTDEC2        equ	4061	;# 
  1118   000FDE                     POSTINC2        equ	4062	;# 
  1119   000FDF                     INDF2           equ	4063	;# 
  1120   000FE0                     BSR             equ	4064	;# 
  1121   000FE1                     FSR1            equ	4065	;# 
  1122   000FE1                     FSR1L           equ	4065	;# 
  1123   000FE2                     FSR1H           equ	4066	;# 
  1124   000FE3                     PLUSW1          equ	4067	;# 
  1125   000FE4                     PREINC1         equ	4068	;# 
  1126   000FE5                     POSTDEC1        equ	4069	;# 
  1127   000FE6                     POSTINC1        equ	4070	;# 
  1128   000FE7                     INDF1           equ	4071	;# 
  1129   000FE8                     WREG            equ	4072	;# 
  1130   000FE9                     FSR0            equ	4073	;# 
  1131   000FE9                     FSR0L           equ	4073	;# 
  1132   000FEA                     FSR0H           equ	4074	;# 
  1133   000FEB                     PLUSW0          equ	4075	;# 
  1134   000FEC                     PREINC0         equ	4076	;# 
  1135   000FED                     POSTDEC0        equ	4077	;# 
  1136   000FEE                     POSTINC0        equ	4078	;# 
  1137   000FEF                     INDF0           equ	4079	;# 
  1138   000FF0                     INTCON3         equ	4080	;# 
  1139   000FF1                     INTCON2         equ	4081	;# 
  1140   000FF2                     INTCON          equ	4082	;# 
  1141   000FF3                     PROD            equ	4083	;# 
  1142   000FF3                     PRODL           equ	4083	;# 
  1143   000FF4                     PRODH           equ	4084	;# 
  1144   000FF5                     TABLAT          equ	4085	;# 
  1145   000FF6                     TBLPTR          equ	4086	;# 
  1146   000FF6                     TBLPTRL         equ	4086	;# 
  1147   000FF7                     TBLPTRH         equ	4087	;# 
  1148   000FF8                     TBLPTRU         equ	4088	;# 
  1149   000FF9                     PCLAT           equ	4089	;# 
  1150   000FF9                     PC              equ	4089	;# 
  1151   000FF9                     PCL             equ	4089	;# 
  1152   000FFA                     PCLATH          equ	4090	;# 
  1153   000FFB                     PCLATU          equ	4091	;# 
  1154   000FFC                     STKPTR          equ	4092	;# 
  1155   000FFD                     TOS             equ	4093	;# 
  1156   000FFD                     TOSL            equ	4093	;# 
  1157   000FFE                     TOSH            equ	4094	;# 
  1158   000FFF                     TOSU            equ	4095	;# 
  1159   000F77                     SSPMSK          equ	3959	;# 
  1160   000F78                     SLRCON          equ	3960	;# 
  1161   000F79                     CM2CON1         equ	3961	;# 
  1162   000F7A                     CM2CON0         equ	3962	;# 
  1163   000F7B                     CM1CON0         equ	3963	;# 
  1164   000F7C                     WPUB            equ	3964	;# 
  1165   000F7D                     IOCB            equ	3965	;# 
  1166   000F7E                     ANSEL           equ	3966	;# 
  1167   000F7F                     ANSELH          equ	3967	;# 
  1168   000F80                     PORTA           equ	3968	;# 
  1169   000F81                     PORTB           equ	3969	;# 
  1170   000F82                     PORTC           equ	3970	;# 
  1171   000F83                     PORTD           equ	3971	;# 
  1172   000F84                     PORTE           equ	3972	;# 
  1173   000F89                     LATA            equ	3977	;# 
  1174   000F8A                     LATB            equ	3978	;# 
  1175   000F8B                     LATC            equ	3979	;# 
  1176   000F8C                     LATD            equ	3980	;# 
  1177   000F8D                     LATE            equ	3981	;# 
  1178   000F92                     TRISA           equ	3986	;# 
  1179   000F92                     DDRA            equ	3986	;# 
  1180   000F93                     TRISB           equ	3987	;# 
  1181   000F93                     DDRB            equ	3987	;# 
  1182   000F94                     TRISC           equ	3988	;# 
  1183   000F94                     DDRC            equ	3988	;# 
  1184   000F95                     TRISD           equ	3989	;# 
  1185   000F95                     DDRD            equ	3989	;# 
  1186   000F96                     TRISE           equ	3990	;# 
  1187   000F96                     DDRE            equ	3990	;# 
  1188   000F9B                     OSCTUNE         equ	3995	;# 
  1189   000F9D                     PIE1            equ	3997	;# 
  1190   000F9E                     PIR1            equ	3998	;# 
  1191   000F9F                     IPR1            equ	3999	;# 
  1192   000FA0                     PIE2            equ	4000	;# 
  1193   000FA1                     PIR2            equ	4001	;# 
  1194   000FA2                     IPR2            equ	4002	;# 
  1195   000FA6                     EECON1          equ	4006	;# 
  1196   000FA7                     EECON2          equ	4007	;# 
  1197   000FA8                     EEDATA          equ	4008	;# 
  1198   000FA9                     EEADR           equ	4009	;# 
  1199   000FAA                     EEADRH          equ	4010	;# 
  1200   000FAB                     RCSTA           equ	4011	;# 
  1201   000FAB                     RCSTA1          equ	4011	;# 
  1202   000FAC                     TXSTA           equ	4012	;# 
  1203   000FAC                     TXSTA1          equ	4012	;# 
  1204   000FAD                     TXREG           equ	4013	;# 
  1205   000FAD                     TXREG1          equ	4013	;# 
  1206   000FAE                     RCREG           equ	4014	;# 
  1207   000FAE                     RCREG1          equ	4014	;# 
  1208   000FAF                     SPBRG           equ	4015	;# 
  1209   000FAF                     SPBRG1          equ	4015	;# 
  1210   000FB0                     SPBRGH          equ	4016	;# 
  1211   000FB1                     T3CON           equ	4017	;# 
  1212   000FB2                     TMR3            equ	4018	;# 
  1213   000FB2                     TMR3L           equ	4018	;# 
  1214   000FB3                     TMR3H           equ	4019	;# 
  1215   000FB4                     CVRCON2         equ	4020	;# 
  1216   000FB5                     CVRCON          equ	4021	;# 
  1217   000FB6                     ECCP1AS         equ	4022	;# 
  1218   000FB7                     PWM1CON         equ	4023	;# 
  1219   000FB8                     BAUDCON         equ	4024	;# 
  1220   000FB8                     BAUDCTL         equ	4024	;# 
  1221   000FB9                     PSTRCON         equ	4025	;# 
  1222   000FBA                     CCP2CON         equ	4026	;# 
  1223   000FBB                     CCPR2           equ	4027	;# 
  1224   000FBB                     CCPR2L          equ	4027	;# 
  1225   000FBC                     CCPR2H          equ	4028	;# 
  1226   000FBD                     CCP1CON         equ	4029	;# 
  1227   000FBE                     CCPR1           equ	4030	;# 
  1228   000FBE                     CCPR1L          equ	4030	;# 
  1229   000FBF                     CCPR1H          equ	4031	;# 
  1230   000FC0                     ADCON2          equ	4032	;# 
  1231   000FC1                     ADCON1          equ	4033	;# 
  1232   000FC2                     ADCON0          equ	4034	;# 
  1233   000FC3                     ADRES           equ	4035	;# 
  1234   000FC3                     ADRESL          equ	4035	;# 
  1235   000FC4                     ADRESH          equ	4036	;# 
  1236   000FC5                     SSPCON2         equ	4037	;# 
  1237   000FC6                     SSPCON1         equ	4038	;# 
  1238   000FC7                     SSPSTAT         equ	4039	;# 
  1239   000FC8                     SSPADD          equ	4040	;# 
  1240   000FC9                     SSPBUF          equ	4041	;# 
  1241   000FCA                     T2CON           equ	4042	;# 
  1242   000FCB                     PR2             equ	4043	;# 
  1243   000FCB                     MEMCON          equ	4043	;# 
  1244   000FCC                     TMR2            equ	4044	;# 
  1245   000FCD                     T1CON           equ	4045	;# 
  1246   000FCE                     TMR1            equ	4046	;# 
  1247   000FCE                     TMR1L           equ	4046	;# 
  1248   000FCF                     TMR1H           equ	4047	;# 
  1249   000FD0                     RCON            equ	4048	;# 
  1250   000FD1                     WDTCON          equ	4049	;# 
  1251   000FD2                     HLVDCON         equ	4050	;# 
  1252   000FD2                     LVDCON          equ	4050	;# 
  1253   000FD3                     OSCCON          equ	4051	;# 
  1254   000FD5                     T0CON           equ	4053	;# 
  1255   000FD6                     TMR0            equ	4054	;# 
  1256   000FD6                     TMR0L           equ	4054	;# 
  1257   000FD7                     TMR0H           equ	4055	;# 
  1258   000FD8                     STATUS          equ	4056	;# 
  1259   000FD9                     FSR2            equ	4057	;# 
  1260   000FD9                     FSR2L           equ	4057	;# 
  1261   000FDA                     FSR2H           equ	4058	;# 
  1262   000FDB                     PLUSW2          equ	4059	;# 
  1263   000FDC                     PREINC2         equ	4060	;# 
  1264   000FDD                     POSTDEC2        equ	4061	;# 
  1265   000FDE                     POSTINC2        equ	4062	;# 
  1266   000FDF                     INDF2           equ	4063	;# 
  1267   000FE0                     BSR             equ	4064	;# 
  1268   000FE1                     FSR1            equ	4065	;# 
  1269   000FE1                     FSR1L           equ	4065	;# 
  1270   000FE2                     FSR1H           equ	4066	;# 
  1271   000FE3                     PLUSW1          equ	4067	;# 
  1272   000FE4                     PREINC1         equ	4068	;# 
  1273   000FE5                     POSTDEC1        equ	4069	;# 
  1274   000FE6                     POSTINC1        equ	4070	;# 
  1275   000FE7                     INDF1           equ	4071	;# 
  1276   000FE8                     WREG            equ	4072	;# 
  1277   000FE9                     FSR0            equ	4073	;# 
  1278   000FE9                     FSR0L           equ	4073	;# 
  1279   000FEA                     FSR0H           equ	4074	;# 
  1280   000FEB                     PLUSW0          equ	4075	;# 
  1281   000FEC                     PREINC0         equ	4076	;# 
  1282   000FED                     POSTDEC0        equ	4077	;# 
  1283   000FEE                     POSTINC0        equ	4078	;# 
  1284   000FEF                     INDF0           equ	4079	;# 
  1285   000FF0                     INTCON3         equ	4080	;# 
  1286   000FF1                     INTCON2         equ	4081	;# 
  1287   000FF2                     INTCON          equ	4082	;# 
  1288   000FF3                     PROD            equ	4083	;# 
  1289   000FF3                     PRODL           equ	4083	;# 
  1290   000FF4                     PRODH           equ	4084	;# 
  1291   000FF5                     TABLAT          equ	4085	;# 
  1292   000FF6                     TBLPTR          equ	4086	;# 
  1293   000FF6                     TBLPTRL         equ	4086	;# 
  1294   000FF7                     TBLPTRH         equ	4087	;# 
  1295   000FF8                     TBLPTRU         equ	4088	;# 
  1296   000FF9                     PCLAT           equ	4089	;# 
  1297   000FF9                     PC              equ	4089	;# 
  1298   000FF9                     PCL             equ	4089	;# 
  1299   000FFA                     PCLATH          equ	4090	;# 
  1300   000FFB                     PCLATU          equ	4091	;# 
  1301   000FFC                     STKPTR          equ	4092	;# 
  1302   000FFD                     TOS             equ	4093	;# 
  1303   000FFD                     TOSL            equ	4093	;# 
  1304   000FFE                     TOSH            equ	4094	;# 
  1305   000FFF                     TOSU            equ	4095	;# 
  1306                           
  1307                           	psect	smallconst
  1308   001000                     __psmallconst:
  1309                           	callstack 0
  1310   001000  00                 	db	0
  1311   001001                     _default_security_key:
  1312                           	callstack 0
  1313   001001  00                 	db	0
  1314   001002  10                 	db	16
  1315   001003  25                 	db	37
  1316   001004  37                 	db	55
  1317   001005  04                 	db	4
  1318   001006  55                 	db	85
  1319   001007  06                 	db	6
  1320   001008  79                 	db	121
  1321   001009  08                 	db	8
  1322   00100A  09                 	db	9
  1323   00100B  10                 	db	16
  1324   00100C  11                 	db	17
  1325   00100D  12                 	db	18
  1326   00100E  13                 	db	19
  1327   00100F  14                 	db	20
  1328   001010  15                 	db	21
  1329   001011                     __end_of_default_security_key:
  1330                           	callstack 0
  1331   001011                     _default_mac_address:
  1332                           	callstack 0
  1333   001011  11                 	db	17
  1334   001012  28                 	db	40
  1335   001013  35                 	db	53
  1336   001014  44                 	db	68
  1337   001015  56                 	db	86
  1338   001016  66                 	db	102
  1339   001017  77                 	db	119
  1340   001018  01                 	db	1
  1341   001019                     __end_of_default_mac_address:
  1342                           	callstack 0
  1343   007CF0                     _TMR1IF         set	31984
  1344   007E68                     _TMR1ON         set	32360
  1345   007E69                     _TMR1CS         set	32361
  1346   007E6B                     _T1OSCEN        set	32363
  1347   007E6A                     _T1SYNC         set	32362
  1348   007E6D                     _T1CKPS1        set	32365
  1349   007E6C                     _T1CKPS0        set	32364
  1350   007E6F                     _T1RD16         set	32367
  1351   007F8F                     _RBPU           set	32655
  1352   007CED                     _RCIE           set	31981
  1353   007CEE                     _ADIE           set	31982
  1354   007D03                     _BCLIE          set	32003
  1355   007CEB                     _SSPIE          set	31979
  1356   007D04                     _EEIE           set	32004
  1357   007D00                     _CCP2IE         set	32000
  1358   007CEA                     _CCP1IE         set	31978
  1359   007CE9                     _TMR2IE         set	31977
  1360   007CE8                     _TMR1IE         set	31976
  1361   007F95                     _T0IE           set	32661
  1362   007F93                     _RBIE           set	32659
  1363   007F94                     _INT0E          set	32660
  1364   007F96                     _PEIE           set	32662
  1365   007F97                     _GIE            set	32663
  1366   007E87                     _IPEN           set	32391
  1367   000FCF                     _TMR1H          set	4047
  1368   000FCE                     _TMR1L          set	4046
  1369   000F9B                     _OSCTUNE        set	3995
  1370   000FD3                     _OSCCON         set	4051
  1371   000F95                     _TRISDbits      set	3989
  1372   000F96                     _TRISEbits      set	3990
  1373   000F93                     _TRISBbits      set	3987
  1374   000F84                     _PORTE          set	3972
  1375   000F83                     _PORTD          set	3971
  1376   000F82                     _PORTC          set	3970
  1377   000F81                     _PORTB          set	3969
  1378   000F80                     _PORTA          set	3968
  1379   000F8D                     _LATEbits       set	3981
  1380   000F82                     _PORTCbits      set	3970
  1381   000FC9                     _SSPBUF         set	4041
  1382   000F9E                     _PIR1bits       set	3998
  1383   000FC6                     _SSPCON1bits    set	4038
  1384   000FC6                     _SSPCON1        set	4038
  1385   000FC7                     _SSPSTATbits    set	4039
  1386   000F94                     _TRISCbits      set	3988
  1387   000F81                     _PORTBbits      set	3969
  1388   000F8C                     _LATDbits       set	3980
  1389   000F8B                     _LATCbits       set	3979
  1390   001019                     STR_5:
  1391   001019  4C                 	db	76	;'L'
  1392   00101A  65                 	db	101	;'e'
  1393   00101B  64                 	db	100	;'d'
  1394   00101C  20                 	db	32
  1395   00101D  65                 	db	101	;'e'
  1396   00101E  6E                 	db	110	;'n'
  1397   00101F  63                 	db	99	;'c'
  1398   001020  65                 	db	101	;'e'
  1399   001021  6E                 	db	110	;'n'
  1400   001022  64                 	db	100	;'d'
  1401   001023  69                 	db	105	;'i'
  1402   001024  64                 	db	100	;'d'
  1403   001025  6F                 	db	111	;'o'
  1404   001026  00                 	db	0
  1405   001027                     STR_8:
  1406   001027  4C                 	db	76	;'L'
  1407   001028  65                 	db	101	;'e'
  1408   001029  64                 	db	100	;'d'
  1409   00102A  20                 	db	32
  1410   00102B  61                 	db	97	;'a'
  1411   00102C  70                 	db	112	;'p'
  1412   00102D  61                 	db	97	;'a'
  1413   00102E  67                 	db	103	;'g'
  1414   00102F  61                 	db	97	;'a'
  1415   001030  64                 	db	100	;'d'
  1416   001031  6F                 	db	111	;'o'
  1417   001032  00                 	db	0
  1418   001033                     STR_15:
  1419   001033  43                 	db	67	;'C'
  1420   001034  6D                 	db	109	;'m'
  1421   001035  64                 	db	100	;'d'
  1422   001036  20                 	db	32
  1423   001037  65                 	db	101	;'e'
  1424   001038  72                 	db	114	;'r'
  1425   001039  72                 	db	114	;'r'
  1426   00103A  6F                 	db	111	;'o'
  1427   00103B  72                 	db	114	;'r'
  1428   00103C  2E                 	db	46
  1429   00103D  00                 	db	0
  1430   00103E                     STR_6:
  1431   00103E  43                 	db	67	;'C'
  1432   00103F  4D                 	db	77	;'M'
  1433   001040  44                 	db	68	;'D'
  1434   001041  3A                 	db	58	;':'
  1435   001042  41                 	db	65	;'A'
  1436   001043  4C                 	db	76	;'L'
  1437   001044  41                 	db	65	;'A'
  1438   001045  00                 	db	0
  1439   001046                     STR_3:
  1440   001046  43                 	db	67	;'C'
  1441   001047  4D                 	db	77	;'M'
  1442   001048  44                 	db	68	;'D'
  1443   001049  3A                 	db	58	;':'
  1444   00104A  50                 	db	80	;'P'
  1445   00104B  4C                 	db	76	;'L'
  1446   00104C  41                 	db	65	;'A'
  1447   00104D  00                 	db	0
  1448   00104E                     STR_12:
  1449   00104E  43                 	db	67	;'C'
  1450   00104F  4D                 	db	77	;'M'
  1451   001050  44                 	db	68	;'D'
  1452   001051  3A                 	db	58	;':'
  1453   001052  41                 	db	65	;'A'
  1454   001053  4C                 	db	76	;'L'
  1455   001054  52                 	db	82	;'R'
  1456   001055  00                 	db	0
  1457   001056                     STR_9:
  1458   001056  43                 	db	67	;'C'
  1459   001057  4D                 	db	77	;'M'
  1460   001058  44                 	db	68	;'D'
  1461   001059  3A                 	db	58	;':'
  1462   00105A  50                 	db	80	;'P'
  1463   00105B  4C                 	db	76	;'L'
  1464   00105C  52                 	db	82	;'R'
  1465   00105D  00                 	db	0
  1466   00105E                     STR_2:
  1467   00105E  43                 	db	67	;'C'
  1468   00105F  4D                 	db	77	;'M'
  1469   001060  44                 	db	68	;'D'
  1470   001061  3A                 	db	58	;':'
  1471   001062  41                 	db	65	;'A'
  1472   001063  4C                 	db	76	;'L'
  1473   001064  56                 	db	86	;'V'
  1474   001065  00                 	db	0
  1475   001066                     STR_1:
  1476   001066  43                 	db	67	;'C'
  1477   001067  4D                 	db	77	;'M'
  1478   001068  44                 	db	68	;'D'
  1479   001069  3A                 	db	58	;':'
  1480   00106A  50                 	db	80	;'P'
  1481   00106B  4C                 	db	76	;'L'
  1482   00106C  56                 	db	86	;'V'
  1483   00106D  00                 	db	0
  1484   001019                     STR_11          equ	STR_5
  1485   001027                     STR_14          equ	STR_8
  1486   001056                     STR_10          equ	STR_9
  1487   00104E                     STR_13          equ	STR_12
  1488   001046                     STR_4           equ	STR_3
  1489   00103E                     STR_7           equ	STR_6
  1490   00106E  00                 	db	0	; dummy byte at the end
  1491   000002                     __activetblptr  equ	2
  1492                           
  1493                           ; #config settings
  1494                           
  1495                           	psect	cinit
  1496   001AC4                     __pcinit:
  1497                           	callstack 0
  1498   001AC4                     start_initialization:
  1499                           	callstack 0
  1500   001AC4                     __initialization:
  1501                           	callstack 0
  1502                           
  1503                           ; Clear objects allocated to BANK0 (56 bytes)
  1504   001AC4  EE00  F060         	lfsr	0,__pbssBANK0
  1505   001AC8  0E38               	movlw	56
  1506   001ACA                     clear_0:
  1507   001ACA  6AEE               	clrf	postinc0,c
  1508   001ACC  06E8               	decf	wreg,f,c
  1509   001ACE  E1FD               	bnz	clear_0
  1510                           
  1511                           ; Clear objects allocated to COMRAM (45 bytes)
  1512   001AD0  EE00  F030         	lfsr	0,__pbssCOMRAM
  1513   001AD4  0E2D               	movlw	45
  1514   001AD6                     clear_1:
  1515   001AD6  6AEE               	clrf	postinc0,c
  1516   001AD8  06E8               	decf	wreg,f,c
  1517   001ADA  E1FD               	bnz	clear_1
  1518   001ADC                     end_of_initialization:
  1519                           	callstack 0
  1520   001ADC                     __end_of__initialization:
  1521                           	callstack 0
  1522   001ADC  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1523   001ADE  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1524   001AE0  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1525   001AE2  6EF8               	movwf	tblptru,c
  1526   001AE4  0100               	movlb	0
  1527   001AE6  EF1D  F009         	goto	_main	;jump to C main() function
  1528                           
  1529                           	psect	bssCOMRAM
  1530   000030                     __pbssCOMRAM:
  1531                           	callstack 0
  1532   000030                     _mrf24_data_config:
  1533                           	callstack 0
  1534   000030                     	ds	34
  1535   000052                     _mrf24_data_out:
  1536                           	callstack 0
  1537   000052                     	ds	6
  1538   000058                     _timeStamp:
  1539                           	callstack 0
  1540   000058                     	ds	4
  1541   00005C                     _long_mac_address:
  1542                           	callstack 0
  1543   00005C                     	ds	1
  1544                           
  1545                           	psect	bssBANK0
  1546   000060                     __pbssBANK0:
  1547                           	callstack 0
  1548   000060                     _mrf24_data_in:
  1549                           	callstack 0
  1550   000060                     	ds	56
  1551                           
  1552                           	psect	cstackCOMRAM
  1553   000001                     __pcstackCOMRAM:
  1554                           	callstack 0
  1555   000001                     ?_strlen:
  1556                           	callstack 0
  1557   000001                     SetCSPin@estado:
  1558                           	callstack 0
  1559   000001                     SetWakePin@estado:
  1560                           	callstack 0
  1561   000001                     SetResetPin@estado:
  1562                           	callstack 0
  1563   000001                     SPIWriteByte@dato:
  1564                           	callstack 0
  1565   000001                     DelayInit@delay:
  1566                           	callstack 0
  1567   000001                     DelayReset@delay:
  1568                           	callstack 0
  1569   000001                     DelayIsRunning@delay:
  1570                           	callstack 0
  1571   000001                     strlen@s:
  1572                           	callstack 0
  1573   000001                     MRF24SetDireccionDestino@direccion:
  1574                           	callstack 0
  1575   000001                     MRF24SetPANIDDestino@panid:
  1576                           	callstack 0
  1577   000001                     ??_InicializoVariables:
  1578   000001                     
  1579                           ; 1 bytes @ 0x0
  1580   000001                     	ds	1
  1581   000002                     WriteByteSPIPort@dato:
  1582                           	callstack 0
  1583   000002                     DelayRead@delay:
  1584                           	callstack 0
  1585   000002                     InicializoVariables@i:
  1586                           	callstack 0
  1587   000002                     SPIWrite2Byte@dato:
  1588                           	callstack 0
  1589   000002                     DelayInit@duration:
  1590                           	callstack 0
  1591   000002                     
  1592                           ; 1 bytes @ 0x1
  1593   000002                     	ds	1
  1594   000003                     ?_strcmp:
  1595                           	callstack 0
  1596   000003                     SetShortAddr@valor:
  1597                           	callstack 0
  1598   000003                     GetShortAddr@leido_spi:
  1599                           	callstack 0
  1600   000003                     strcmp@l:
  1601                           	callstack 0
  1602   000003                     strlen@a:
  1603                           	callstack 0
  1604   000003                     ??_DelayRead:
  1605   000003                     
  1606                           ; 1 bytes @ 0x2
  1607   000003                     	ds	1
  1608   000004                     SetShortAddr@reg_address:
  1609                           	callstack 0
  1610   000004                     GetShortAddr@reg_address:
  1611                           	callstack 0
  1612   000004                     MRF24SetMensajeSalida@mensaje:
  1613                           	callstack 0
  1614   000004                     strcmp@r:
  1615                           	callstack 0
  1616   000004                     Write2ByteSPIPort@dato:
  1617                           	callstack 0
  1618   000004                     
  1619                           ; 1 bytes @ 0x3
  1620   000004                     	ds	1
  1621   000005                     SetDeviceMACAddress@i:
  1622                           	callstack 0
  1623   000005                     ??_strcmp:
  1624   000005                     
  1625                           ; 1 bytes @ 0x4
  1626   000005                     	ds	1
  1627   000006                     DebounceFSMInit@antirrebote_boton_n:
  1628                           	callstack 0
  1629   000006                     SetLongAddr@reg_address:
  1630                           	callstack 0
  1631   000006                     GetLongAddr@reg_address:
  1632                           	callstack 0
  1633   000006                     
  1634                           ; 1 bytes @ 0x5
  1635   000006                     	ds	1
  1636   000007                     
  1637                           ; 1 bytes @ 0x6
  1638   000007                     	ds	1
  1639   000008                     SetLongAddr@valor:
  1640                           	callstack 0
  1641   000008                     ??_GetLongAddr:
  1642                           
  1643                           ; 1 bytes @ 0x7
  1644   000008                     	ds	1
  1645   000009                     ??_SetLongAddr:
  1646                           
  1647                           ; 1 bytes @ 0x8
  1648   000009                     	ds	1
  1649   00000A                     GetLongAddr@respuesta:
  1650                           	callstack 0
  1651                           
  1652                           ; 1 bytes @ 0x9
  1653   00000A                     	ds	1
  1654   00000B                     ??_SetChannel:
  1655   00000B                     ??_MRF24TransmitirDato:
  1656   00000B                     ??_MRF24ReciboPaquete:
  1657                           
  1658                           ; 1 bytes @ 0xA
  1659   00000B                     	ds	4
  1660   00000F                     DebounceFSMUpdate@antirrebote_boton_n:
  1661                           	callstack 0
  1662   00000F                     ??_MRF24J40Init:
  1663                           
  1664                           ; 1 bytes @ 0xE
  1665   00000F                     	ds	1
  1666   000010                     MRF24J40Init@lectura:
  1667                           	callstack 0
  1668   000010                     MRF24TransmitirDato@i:
  1669                           	callstack 0
  1670   000010                     MRF24ReciboPaquete@largo_mensaje:
  1671                           	callstack 0
  1672   000010                     DebounceFSMUpdate@estado_pin:
  1673                           	callstack 0
  1674                           
  1675                           ; 1 bytes @ 0xF
  1676   000010                     	ds	1
  1677   000011                     MRF24TransmitirDato@pos_memoria:
  1678                           	callstack 0
  1679   000011                     MRF24ReciboPaquete@index:
  1680                           	callstack 0
  1681   000011                     MRF24J40Init@delay_time_out:
  1682                           	callstack 0
  1683   000011                     ??_DebounceFSMUpdate:
  1684                           
  1685                           ; 1 bytes @ 0x10
  1686   000011                     	ds	9
  1687   00001A                     ??_main:
  1688                           
  1689                           ; 1 bytes @ 0x19
  1690   00001A                     	ds	2
  1691   00001C                     main@delay_parpadeo:
  1692                           	callstack 0
  1693                           
  1694                           ; 9 bytes @ 0x1B
  1695   00001C                     	ds	9
  1696   000025                     main@boton1:
  1697                           	callstack 0
  1698                           
  1699                           ; 11 bytes @ 0x24
  1700   000025                     	ds	11
  1701                           
  1702 ;;
  1703 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1704 ;;
  1705 ;; *************** function _main *****************
  1706 ;; Defined at:
  1707 ;;		line 28 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  respuesta      40    0        unsigned char [40]
  1712 ;;  boton1         11   36[COMRAM] struct .
  1713 ;;  delay_parpad    9   27[COMRAM] struct .
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1724 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;Total ram usage:       22 bytes
  1728 ;; Hardware stack levels required when called: 7
  1729 ;; This function calls:
  1730 ;;		_BoardInit
  1731 ;;		_DebounceFSMInit
  1732 ;;		_DebounceFSMUpdate
  1733 ;;		_DelayInit
  1734 ;;		_DelayRead
  1735 ;;		_MRF24GetMensajeEntrada
  1736 ;;		_MRF24IsNewMsg
  1737 ;;		_MRF24J40Init
  1738 ;;		_MRF24ReciboPaquete
  1739 ;;		_MRF24SetDireccionDestino
  1740 ;;		_MRF24SetMensajeSalida
  1741 ;;		_MRF24SetPANIDDestino
  1742 ;;		_MRF24TransmitirDato
  1743 ;;		_strcmp
  1744 ;; This function is called by:
  1745 ;;		Startup code after reset
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text0
  1750   00123A                     __ptext0:
  1751                           	callstack 0
  1752   00123A                     _main:
  1753                           	callstack 24
  1754   00123A                     
  1755                           ;main.c: 30:     char respuesta[40];;main.c: 31:     delayNoBloqueanteData delay_parpade
      +                          o;;main.c: 32:     debounceData_t boton1;;main.c: 33:  DebounceFSMInit(&boton1);
  1756   00123A  0E25               	movlw	low main@boton1
  1757   00123C  6E06               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  1758   00123E  EC21  F00D         	call	_DebounceFSMInit	;wreg free
  1759   001242                     
  1760                           ;main.c: 34:     BoardInit();
  1761   001242  EC56  F00C         	call	_BoardInit	;wreg free
  1762   001246                     
  1763                           ;main.c: 35:     MRF24J40Init();
  1764   001246  EC38  F008         	call	_MRF24J40Init	;wreg free
  1765   00124A                     
  1766                           ;main.c: 36:     DelayInit(&delay_parpadeo, 1000);
  1767   00124A  0E1C               	movlw	low main@delay_parpadeo
  1768   00124C  6E01               	movwf	DelayInit@delay^0,c
  1769   00124E  0EE8               	movlw	232
  1770   001250  6E02               	movwf	DelayInit@duration^0,c
  1771   001252  0E03               	movlw	3
  1772   001254  6E03               	movwf	(DelayInit@duration+1)^0,c
  1773   001256  0E00               	movlw	0
  1774   001258  6E04               	movwf	(DelayInit@duration+2)^0,c
  1775   00125A  0E00               	movlw	0
  1776   00125C  6E05               	movwf	(DelayInit@duration+3)^0,c
  1777   00125E  EC4E  F00D         	call	_DelayInit	;wreg free
  1778   001262                     
  1779                           ;main.c: 37:     MRF24SetDireccionDestino(0x1111);
  1780   001262  0E11               	movlw	17
  1781   001264  6E02               	movwf	(MRF24SetDireccionDestino@direccion+1)^0,c
  1782   001266  0E11               	movlw	17
  1783   001268  6E01               	movwf	MRF24SetDireccionDestino@direccion^0,c
  1784   00126A  EC27  F00E         	call	_MRF24SetDireccionDestino	;wreg free
  1785   00126E                     
  1786                           ;main.c: 38:     MRF24SetPANIDDestino(0X1234);
  1787   00126E  0E12               	movlw	18
  1788   001270  6E02               	movwf	(MRF24SetPANIDDestino@panid+1)^0,c
  1789   001272  0E34               	movlw	52
  1790   001274  6E01               	movwf	MRF24SetPANIDDestino@panid^0,c
  1791   001276  EC22  F00E         	call	_MRF24SetPANIDDestino	;wreg free
  1792   00127A                     l229:
  1793   00127A  0004               	clrwdt		;# 
  1794                           
  1795                           ;main.c: 43:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  1796   00127C  EF4E  F009         	goto	l2081
  1797   001280                     l2071:
  1798                           
  1799                           ;main.c: 47:                 MRF24SetMensajeSalida("CMD:PLV");
  1800   001280  0E66               	movlw	low STR_1
  1801   001282  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1802   001284  ECEF  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1803   001288                     l2073:
  1804                           
  1805                           ;main.c: 48:                 MRF24TransmitirDato();
  1806   001288  EC9B  F00A         	call	_MRF24TransmitirDato	;wreg free
  1807                           
  1808                           ;main.c: 49:     break;
  1809   00128C  EF70  F009         	goto	l2083
  1810   001290                     l2075:
  1811                           
  1812                           ;main.c: 53:                 MRF24SetMensajeSalida("CMD:ALV");
  1813   001290  0E5E               	movlw	low STR_2
  1814   001292  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1815   001294  ECEF  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1816   001298  EF44  F009         	goto	l2073
  1817   00129C                     l2081:
  1818   00129C  0E25               	movlw	low main@boton1
  1819   00129E  6E0F               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  1820   0012A0  B482               	btfsc	130,2,c	;volatile
  1821   0012A2  EF55  F009         	goto	u671
  1822   0012A6  EF58  F009         	goto	u670
  1823   0012AA                     u671:
  1824   0012AA  0E01               	movlw	1
  1825   0012AC  EF59  F009         	goto	u676
  1826   0012B0                     u670:
  1827   0012B0  0E00               	movlw	0
  1828   0012B2                     u676:
  1829   0012B2  6E10               	movwf	DebounceFSMUpdate@estado_pin^0,c
  1830   0012B4  ECFD  F009         	call	_DebounceFSMUpdate	;wreg free
  1831   0012B8  6E1A               	movwf	??_main^0,c
  1832   0012BA  6A1B               	clrf	(??_main+1)^0,c
  1833                           
  1834                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1835                           ; Switch size 1, requested type "simple"
  1836                           ; Number of cases is 1, Range of values is 0 to 0
  1837                           ; switch strategies available:
  1838                           ; Name         Instructions Cycles
  1839                           ; simple_byte            4     3 (average)
  1840                           ;	Chosen strategy is simple_byte
  1841   0012BC  501B               	movf	(??_main+1)^0,w,c
  1842   0012BE  0A00               	xorlw	0	; case 0
  1843   0012C0  B4D8               	btfsc	status,2,c
  1844   0012C2  EF65  F009         	goto	l2163
  1845   0012C6  EF70  F009         	goto	l2083
  1846   0012CA                     l2163:
  1847                           
  1848                           ; Switch size 1, requested type "simple"
  1849                           ; Number of cases is 2, Range of values is 1 to 2
  1850                           ; switch strategies available:
  1851                           ; Name         Instructions Cycles
  1852                           ; simple_byte            7     4 (average)
  1853                           ;	Chosen strategy is simple_byte
  1854   0012CA  501A               	movf	??_main^0,w,c
  1855   0012CC  0A01               	xorlw	1	; case 1
  1856   0012CE  B4D8               	btfsc	status,2,c
  1857   0012D0  EF40  F009         	goto	l2071
  1858   0012D4  0A03               	xorlw	3	; case 2
  1859   0012D6  B4D8               	btfsc	status,2,c
  1860   0012D8  EF48  F009         	goto	l2075
  1861   0012DC  EF70  F009         	goto	l2083
  1862   0012E0                     l2083:
  1863                           
  1864                           ;main.c: 62:         if(MRF24IsNewMsg()) {
  1865   0012E0  ECAB  F00D         	call	_MRF24IsNewMsg	;wreg free
  1866   0012E4  0900               	iorlw	0
  1867   0012E6  B4D8               	btfsc	status,2,c
  1868   0012E8  EF78  F009         	goto	u681
  1869   0012EC  EF7A  F009         	goto	u680
  1870   0012F0                     u681:
  1871   0012F0  EFDE  F009         	goto	l2115
  1872   0012F4                     u680:
  1873   0012F4                     
  1874                           ;main.c: 64:             MRF24ReciboPaquete();
  1875   0012F4  ECDA  F00B         	call	_MRF24ReciboPaquete	;wreg free
  1876   0012F8                     
  1877                           ;main.c: 66:    if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLA")) {
  1878   0012F8  EC34  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1879   0012FC  6E03               	movwf	strcmp@l^0,c
  1880   0012FE  0E46               	movlw	low STR_3
  1881   001300  6E04               	movwf	strcmp@r^0,c
  1882   001302  EC23  F00C         	call	_strcmp	;wreg free
  1883   001306  5003               	movf	?_strcmp^0,w,c
  1884   001308  1004               	iorwf	(?_strcmp+1)^0,w,c
  1885   00130A  A4D8               	btfss	status,2,c
  1886   00130C  EF8A  F009         	goto	u691
  1887   001310  EF8C  F009         	goto	u690
  1888   001314                     u691:
  1889   001314  EF93  F009         	goto	l2093
  1890   001318                     u690:
  1891   001318                     
  1892                           ;main.c: 68:     LATEbits.LATE1 = 0;
  1893   001318  928D               	bcf	141,1,c	;volatile
  1894   00131A                     
  1895                           ;main.c: 69:                 MRF24SetMensajeSalida("Led encendido");
  1896   00131A  0E19               	movlw	low STR_5
  1897   00131C  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1898   00131E  ECEF  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1899                           
  1900                           ;main.c: 70:    } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALA")) {
  1901   001322  EFDC  F009         	goto	l2113
  1902   001326                     l2093:
  1903   001326  EC34  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1904   00132A  6E03               	movwf	strcmp@l^0,c
  1905   00132C  0E3E               	movlw	low STR_6
  1906   00132E  6E04               	movwf	strcmp@r^0,c
  1907   001330  EC23  F00C         	call	_strcmp	;wreg free
  1908   001334  5003               	movf	?_strcmp^0,w,c
  1909   001336  1004               	iorwf	(?_strcmp+1)^0,w,c
  1910   001338  A4D8               	btfss	status,2,c
  1911   00133A  EFA1  F009         	goto	u701
  1912   00133E  EFA3  F009         	goto	u700
  1913   001342                     u701:
  1914   001342  EFAA  F009         	goto	l2099
  1915   001346                     u700:
  1916   001346                     
  1917                           ;main.c: 72:     LATEbits.LATE1 = 1;
  1918   001346  828D               	bsf	141,1,c	;volatile
  1919   001348                     
  1920                           ;main.c: 73:                 MRF24SetMensajeSalida("Led apagado");
  1921   001348  0E27               	movlw	low STR_8
  1922   00134A  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1923   00134C  ECEF  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1924                           
  1925                           ;main.c: 74:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLR")) 
      +                          {
  1926   001350  EFDC  F009         	goto	l2113
  1927   001354                     l2099:
  1928   001354  EC34  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1929   001358  6E03               	movwf	strcmp@l^0,c
  1930   00135A  0E56               	movlw	low STR_9
  1931   00135C  6E04               	movwf	strcmp@r^0,c
  1932   00135E  EC23  F00C         	call	_strcmp	;wreg free
  1933   001362  5003               	movf	?_strcmp^0,w,c
  1934   001364  1004               	iorwf	(?_strcmp+1)^0,w,c
  1935   001366  A4D8               	btfss	status,2,c
  1936   001368  EFB8  F009         	goto	u711
  1937   00136C  EFBA  F009         	goto	u710
  1938   001370                     u711:
  1939   001370  EFC1  F009         	goto	l2105
  1940   001374                     u710:
  1941   001374                     
  1942                           ;main.c: 76:     LATEbits.LATE2 = 0;
  1943   001374  948D               	bcf	141,2,c	;volatile
  1944   001376                     
  1945                           ;main.c: 77:                 MRF24SetMensajeSalida("Led encendido");
  1946   001376  0E19               	movlw	low STR_5
  1947   001378  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1948   00137A  ECEF  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1949                           
  1950                           ;main.c: 78:             } else if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:ALR")) 
      +                          {
  1951   00137E  EFDC  F009         	goto	l2113
  1952   001382                     l2105:
  1953   001382  EC34  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1954   001386  6E03               	movwf	strcmp@l^0,c
  1955   001388  0E4E               	movlw	low STR_12
  1956   00138A  6E04               	movwf	strcmp@r^0,c
  1957   00138C  EC23  F00C         	call	_strcmp	;wreg free
  1958   001390  5003               	movf	?_strcmp^0,w,c
  1959   001392  1004               	iorwf	(?_strcmp+1)^0,w,c
  1960   001394  A4D8               	btfss	status,2,c
  1961   001396  EFCF  F009         	goto	u721
  1962   00139A  EFD1  F009         	goto	u720
  1963   00139E                     u721:
  1964   00139E  EFD8  F009         	goto	l2111
  1965   0013A2                     u720:
  1966   0013A2                     
  1967                           ;main.c: 80:     LATEbits.LATE2 = 1;
  1968   0013A2  848D               	bsf	141,2,c	;volatile
  1969   0013A4                     
  1970                           ;main.c: 81:                 MRF24SetMensajeSalida("Led apagado");
  1971   0013A4  0E27               	movlw	low STR_8
  1972   0013A6  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1973   0013A8  ECEF  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1974                           
  1975                           ;main.c: 82:             } else {
  1976   0013AC  EFDC  F009         	goto	l2113
  1977   0013B0                     l2111:
  1978                           
  1979                           ;main.c: 84:                 MRF24SetMensajeSalida("Cmd error.");
  1980   0013B0  0E33               	movlw	low STR_15
  1981   0013B2  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1982   0013B4  ECEF  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1983   0013B8                     l2113:
  1984                           
  1985                           ;main.c: 86:             MRF24TransmitirDato();
  1986   0013B8  EC9B  F00A         	call	_MRF24TransmitirDato	;wreg free
  1987   0013BC                     l2115:
  1988                           
  1989                           ;main.c: 89:         if(DelayRead(&delay_parpadeo)) {
  1990   0013BC  0E1C               	movlw	low main@delay_parpadeo
  1991   0013BE  6E02               	movwf	DelayRead@delay^0,c
  1992   0013C0  EC84  F00B         	call	_DelayRead	;wreg free
  1993   0013C4  0900               	iorlw	0
  1994   0013C6  B4D8               	btfsc	status,2,c
  1995   0013C8  EFE8  F009         	goto	u731
  1996   0013CC  EFEA  F009         	goto	u730
  1997   0013D0                     u731:
  1998   0013D0  EF3D  F009         	goto	l229
  1999   0013D4                     u730:
  2000   0013D4                     
  2001                           ;main.c: 90:             LATEbits.LATE0 = !LATEbits.LATE0;
  2002   0013D4  A08D               	btfss	141,0,c	;volatile
  2003   0013D6  EFEF  F009         	goto	u741
  2004   0013DA  EFF3  F009         	goto	u740
  2005   0013DE                     u741:
  2006   0013DE  6A1A               	clrf	??_main^0,c
  2007   0013E0  2A1A               	incf	??_main^0,f,c
  2008   0013E2  EFF4  F009         	goto	u758
  2009   0013E6                     u740:
  2010   0013E6  6A1A               	clrf	??_main^0,c
  2011   0013E8                     u758:
  2012   0013E8  508D               	movf	141,w,c	;volatile
  2013   0013EA  181A               	xorwf	??_main^0,w,c
  2014   0013EC  0BFE               	andlw	-2
  2015   0013EE  181A               	xorwf	??_main^0,w,c
  2016   0013F0  6E8D               	movwf	141,c	;volatile
  2017   0013F2  EF3D  F009         	goto	l229
  2018   0013F6  EF20  F000         	goto	start
  2019   0013FA                     __end_of_main:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _strcmp *****************
  2023 ;; Defined at:
  2024 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  l               1    2[COMRAM] PTR const unsigned char 
  2027 ;;		 -> mrf24_data_in$buffer_entrada(50), mrf24_data_in(56), 
  2028 ;;  r               1    3[COMRAM] PTR const unsigned char 
  2029 ;;		 -> STR_13(8), STR_10(8), STR_7(8), STR_4(8), 
  2030 ;; Auto vars:     Size  Location     Type
  2031 ;;		None
  2032 ;; Return value:  Size  Location     Type
  2033 ;;                  2    2[COMRAM] int 
  2034 ;; Registers used:
  2035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2036 ;; Tracked objects:
  2037 ;;		On entry : 0/0
  2038 ;;		On exit  : 0/0
  2039 ;;		Unchanged: 0/0
  2040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2041 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2045 ;;Total ram usage:        3 bytes
  2046 ;; Hardware stack levels used: 1
  2047 ;; Hardware stack levels required when called: 1
  2048 ;; This function calls:
  2049 ;;		Nothing
  2050 ;; This function is called by:
  2051 ;;		_main
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           	psect	text1
  2056   001846                     __ptext1:
  2057                           	callstack 0
  2058   001846                     _strcmp:
  2059                           	callstack 29
  2060   001846  EF27  F00C         	goto	l2051
  2061   00184A                     l2049:
  2062   00184A  2A03               	incf	strcmp@l^0,f,c
  2063   00184C  2A04               	incf	strcmp@r^0,f,c
  2064   00184E                     l2051:
  2065   00184E  5003               	movf	strcmp@l^0,w,c
  2066   001850  6ED9               	movwf	fsr2l,c
  2067   001852  6ADA               	clrf	fsr2h,c
  2068   001854  50DF               	movf	indf2,w,c
  2069   001856  6E05               	movwf	??_strcmp^0,c
  2070   001858  C004  FFF6         	movff	strcmp@r,tblptrl
  2071   00185C                     	if	1	;There is more than 1 active tblptr byte
  2072   00185C  0E10               	movlw	high __smallconst
  2073   00185E  6EF7               	movwf	tblptrh,c
  2074   001860                     	endif
  2075   001860                     	if	0	;tblptru may be non-zero
  2076   001860                     	endif
  2077   001860                     	if	0	;tblptru may be non-zero
  2078   001860                     	endif
  2079   001860  0008               	tblrd		*
  2080   001862  50F5               	movf	tablat,w,c
  2081   001864  1805               	xorwf	??_strcmp^0,w,c
  2082   001866  A4D8               	btfss	status,2,c
  2083   001868  EF38  F00C         	goto	u651
  2084   00186C  EF3A  F00C         	goto	u650
  2085   001870                     u651:
  2086   001870  EF45  F00C         	goto	l2055
  2087   001874                     u650:
  2088   001874  5003               	movf	strcmp@l^0,w,c
  2089   001876  6ED9               	movwf	fsr2l,c
  2090   001878  6ADA               	clrf	fsr2h,c
  2091   00187A  50DF               	movf	indf2,w,c
  2092   00187C  A4D8               	btfss	status,2,c
  2093   00187E  EF43  F00C         	goto	u661
  2094   001882  EF45  F00C         	goto	u660
  2095   001886                     u661:
  2096   001886  EF25  F00C         	goto	l2049
  2097   00188A                     u660:
  2098   00188A                     l2055:
  2099   00188A  5003               	movf	strcmp@l^0,w,c
  2100   00188C  6ED9               	movwf	fsr2l,c
  2101   00188E  6ADA               	clrf	fsr2h,c
  2102   001890  50DF               	movf	indf2,w,c
  2103   001892  6E05               	movwf	??_strcmp^0,c
  2104   001894  C004  FFF6         	movff	strcmp@r,tblptrl
  2105   001898                     	if	1	;There is more than 1 active tblptr byte
  2106   001898  0E10               	movlw	high __smallconst
  2107   00189A  6EF7               	movwf	tblptrh,c
  2108   00189C                     	endif
  2109   00189C                     	if	0	;tblptru may be non-zero
  2110   00189C                     	endif
  2111   00189C                     	if	0	;tblptru may be non-zero
  2112   00189C                     	endif
  2113   00189C  0008               	tblrd		*
  2114   00189E  50F5               	movf	tablat,w,c
  2115   0018A0  5C05               	subwf	??_strcmp^0,w,c
  2116   0018A2  6E03               	movwf	?_strcmp^0,c
  2117   0018A4  6A04               	clrf	(?_strcmp+1)^0,c
  2118   0018A6  A0D8               	btfss	status,0,c
  2119   0018A8  0604               	decf	(?_strcmp+1)^0,f,c
  2120   0018AA  0012               	return		;funcret
  2121   0018AC                     __end_of_strcmp:
  2122                           	callstack 0
  2123                           
  2124 ;; *************** function _MRF24TransmitirDato *****************
  2125 ;; Defined at:
  2126 ;;		line 728 in file "drivers/scr/API_MRF24J40.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  i               1   15[COMRAM] char 
  2131 ;;  pos_memoria     1   16[COMRAM] unsigned char 
  2132 ;;  largo_cabece    1    0        unsigned char 
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      void 
  2135 ;; Registers used:
  2136 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2145 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;Total ram usage:        7 bytes
  2147 ;; Hardware stack levels used: 1
  2148 ;; Hardware stack levels required when called: 5
  2149 ;; This function calls:
  2150 ;;		_SetLongAddr
  2151 ;;		_SetShortAddr
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text2
  2158   001536                     __ptext2:
  2159                           	callstack 0
  2160   001536                     _MRF24TransmitirDato:
  2161                           	callstack 25
  2162   001536                     
  2163                           ;drivers/scr/API_MRF24J40.c: 730:  uint8_t pos_memoria = 0;
  2164   001536  6A11               	clrf	MRF24TransmitirDato@pos_memoria^0,c
  2165   001538                     
  2166                           ;drivers/scr/API_MRF24J40.c: 732:  SetLongAddr(pos_memoria++, largo_cabecera);
  2167   001538  0E00               	movlw	0
  2168   00153A  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2169   00153C  0E00               	movlw	0
  2170   00153E  6E06               	movwf	SetLongAddr@reg_address^0,c
  2171   001540  0E08               	movlw	8
  2172   001542  6E08               	movwf	SetLongAddr@valor^0,c
  2173   001544  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2174   001548  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2175   00154A                     
  2176                           ;drivers/scr/API_MRF24J40.c: 733:  SetLongAddr(pos_memoria++, mrf24_data_out.largo_mensa
      +                          je + largo_cabecera);
  2177   00154A  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2178   00154E  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2179   001550  5056               	movf	(_mrf24_data_out+4)^0,w,c
  2180   001552  0F08               	addlw	8
  2181   001554  6E08               	movwf	SetLongAddr@valor^0,c
  2182   001556  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2183   00155A  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2184   00155C                     
  2185                           ;drivers/scr/API_MRF24J40.c: 734:  SetLongAddr(pos_memoria++, (0X01)|(0X20)|(0X40));
  2186   00155C  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2187   001560  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2188   001562  0E61               	movlw	97
  2189   001564  6E08               	movwf	SetLongAddr@valor^0,c
  2190   001566  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2191   00156A  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2192   00156C                     
  2193                           ;drivers/scr/API_MRF24J40.c: 735:  SetLongAddr(pos_memoria++, (0XC0)|(0X08));
  2194   00156C  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2195   001570  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2196   001572  0EC8               	movlw	200
  2197   001574  6E08               	movwf	SetLongAddr@valor^0,c
  2198   001576  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2199   00157A  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2200   00157C                     
  2201                           ;drivers/scr/API_MRF24J40.c: 736:  SetLongAddr(pos_memoria++, mrf24_data_config.sequence
      +                          _number++);
  2202   00157C  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2203   001580  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2204   001582  EE20  F032         	lfsr	2,_mrf24_data_config+2
  2205   001586  50DF               	movf	indf2,w,c
  2206   001588  2ADF               	incf	indf2,f,c
  2207   00158A  6E08               	movwf	SetLongAddr@valor^0,c
  2208   00158C  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2209   001590  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2210   001592                     
  2211                           ;drivers/scr/API_MRF24J40.c: 737:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_panid);
  2212   001592  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2213   001596  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2214   001598  C052  F008         	movff	_mrf24_data_out,SetLongAddr@valor
  2215   00159C  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2216   0015A0  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2217   0015A2                     
  2218                           ;drivers/scr/API_MRF24J40.c: 738:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_panid >> (0X08)));
  2219   0015A2  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2220   0015A6  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2221   0015A8  5053               	movf	(_mrf24_data_out+1)^0,w,c
  2222   0015AA  6E08               	movwf	SetLongAddr@valor^0,c
  2223   0015AC  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2224   0015B0  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2225   0015B2                     
  2226                           ;drivers/scr/API_MRF24J40.c: 739:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_address);
  2227   0015B2  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2228   0015B6  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2229   0015B8  C054  F008         	movff	_mrf24_data_out+2,SetLongAddr@valor
  2230   0015BC  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2231   0015C0  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2232   0015C2                     
  2233                           ;drivers/scr/API_MRF24J40.c: 740:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_address >> (0X08)));
  2234   0015C2  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2235   0015C6  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2236   0015C8  5055               	movf	(_mrf24_data_out+3)^0,w,c
  2237   0015CA  6E08               	movwf	SetLongAddr@valor^0,c
  2238   0015CC  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2239   0015D0  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2240   0015D2                     
  2241                           ;drivers/scr/API_MRF24J40.c: 742:     for(int8_t i = 0; i < mrf24_data_out.largo_mensaje
      +                          ; i++) {
  2242   0015D2  6A10               	clrf	MRF24TransmitirDato@i^0,c
  2243   0015D4  EFFD  F00A         	goto	l1955
  2244   0015D8                     l1949:
  2245                           
  2246                           ;drivers/scr/API_MRF24J40.c: 744:   SetLongAddr(pos_memoria++, mrf24_data_out.buffer_sal
      +                          ida[i]);
  2247   0015D8  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2248   0015DC  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2249   0015DE  5057               	movf	(_mrf24_data_out+5)^0,w,c
  2250   0015E0  2410               	addwf	MRF24TransmitirDato@i^0,w,c
  2251   0015E2  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2252   0015E4  C00B  FFF6         	movff	??_MRF24TransmitirDato,tblptrl
  2253   0015E8                     	if	1	;There is more than 1 active tblptr byte
  2254   0015E8  0E10               	movlw	high __smallconst
  2255   0015EA  6EF7               	movwf	tblptrh,c
  2256   0015EC                     	endif
  2257   0015EC                     	if	0	;tblptru may be non-zero
  2258   0015EC                     	endif
  2259   0015EC                     	if	0	;tblptru may be non-zero
  2260   0015EC                     	endif
  2261   0015EC  0008               	tblrd		*
  2262   0015EE  CFF5 F008          	movff	tablat,SetLongAddr@valor
  2263   0015F2  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2264   0015F6  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2265   0015F8                     
  2266                           ;drivers/scr/API_MRF24J40.c: 745:  }
  2267   0015F8  2A10               	incf	MRF24TransmitirDato@i^0,f,c
  2268   0015FA                     l1955:
  2269   0015FA  5056               	movf	(_mrf24_data_out+4)^0,w,c
  2270   0015FC  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2271   0015FE  6A0C               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2272   001600  C010  F00D         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato+2
  2273   001604  6A0E               	clrf	(??_MRF24TransmitirDato+3)^0,c
  2274   001606  BE0D               	btfsc	(??_MRF24TransmitirDato+2)^0,7,c
  2275   001608  060E               	decf	(??_MRF24TransmitirDato+3)^0,f,c
  2276   00160A  500B               	movf	??_MRF24TransmitirDato^0,w,c
  2277   00160C  5C0D               	subwf	(??_MRF24TransmitirDato+2)^0,w,c
  2278   00160E  500E               	movf	(??_MRF24TransmitirDato+3)^0,w,c
  2279   001610  0A80               	xorlw	128
  2280   001612  6E0F               	movwf	(??_MRF24TransmitirDato+4)^0,c
  2281   001614  500C               	movf	(??_MRF24TransmitirDato+1)^0,w,c
  2282   001616  0A80               	xorlw	128
  2283   001618  580F               	subwfb	(??_MRF24TransmitirDato+4)^0,w,c
  2284   00161A  A0D8               	btfss	status,0,c
  2285   00161C  EF12  F00B         	goto	u571
  2286   001620  EF14  F00B         	goto	u570
  2287   001624                     u571:
  2288   001624  EFEC  F00A         	goto	l1949
  2289   001628                     u570:
  2290   001628                     
  2291                           ;drivers/scr/API_MRF24J40.c: 746:     SetLongAddr(pos_memoria++, (0X00));
  2292   001628  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2293   00162C  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2294   00162E  0E00               	movlw	0
  2295   001630  6E08               	movwf	SetLongAddr@valor^0,c
  2296   001632  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2297   001636  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2298   001638                     
  2299                           ;drivers/scr/API_MRF24J40.c: 747:  SetShortAddr((0x1B), (0X04) | (0X01));
  2300   001638  0E05               	movlw	5
  2301   00163A  6E03               	movwf	SetShortAddr@valor^0,c
  2302   00163C  0E1B               	movlw	27
  2303   00163E  EC9B  F00D         	call	_SetShortAddr
  2304   001642  0012               	return		;funcret
  2305   001644                     __end_of_MRF24TransmitirDato:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _MRF24SetPANIDDestino *****************
  2309 ;; Defined at:
  2310 ;;		line 717 in file "drivers/scr/API_MRF24J40.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;  panid           2    0[COMRAM] unsigned short 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		None
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;Total ram usage:        2 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_main
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text3
  2339   001C44                     __ptext3:
  2340                           	callstack 0
  2341   001C44                     _MRF24SetPANIDDestino:
  2342                           	callstack 29
  2343   001C44                     
  2344                           ;drivers/scr/API_MRF24J40.c: 719:     mrf24_data_out.destinity_panid = panid;
  2345   001C44  C001  F052         	movff	MRF24SetPANIDDestino@panid,_mrf24_data_out
  2346   001C48  C002  F053         	movff	MRF24SetPANIDDestino@panid+1,_mrf24_data_out+1
  2347   001C4C  0012               	return		;funcret
  2348   001C4E                     __end_of_MRF24SetPANIDDestino:
  2349                           	callstack 0
  2350                           
  2351 ;; *************** function _MRF24SetMensajeSalida *****************
  2352 ;; Defined at:
  2353 ;;		line 694 in file "drivers/scr/API_MRF24J40.c"
  2354 ;; Parameters:    Size  Location     Type
  2355 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  2356 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2357 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;		None
  2360 ;; Return value:  Size  Location     Type
  2361 ;;                  1    wreg      void 
  2362 ;; Registers used:
  2363 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2364 ;; Tracked objects:
  2365 ;;		On entry : 0/0
  2366 ;;		On exit  : 0/0
  2367 ;;		Unchanged: 0/0
  2368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2369 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2372 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2373 ;;Total ram usage:        1 bytes
  2374 ;; Hardware stack levels used: 1
  2375 ;; Hardware stack levels required when called: 2
  2376 ;; This function calls:
  2377 ;;		_strlen
  2378 ;; This function is called by:
  2379 ;;		_main
  2380 ;; This function uses a non-reentrant model
  2381 ;;
  2382                           
  2383                           	psect	text4
  2384   001BDE                     __ptext4:
  2385                           	callstack 0
  2386   001BDE                     _MRF24SetMensajeSalida:
  2387                           	callstack 28
  2388   001BDE                     
  2389                           ;drivers/scr/API_MRF24J40.c: 696:     mrf24_data_out.buffer_salida = mensaje;
  2390   001BDE  C004  F057         	movff	MRF24SetMensajeSalida@mensaje,_mrf24_data_out+5
  2391   001BE2                     
  2392                           ;drivers/scr/API_MRF24J40.c: 697:     mrf24_data_out.largo_mensaje = (uint8_t) strlen(me
      +                          nsaje);
  2393   001BE2  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2394   001BE6  EC07  F00D         	call	_strlen	;wreg free
  2395   001BEA  5001               	movf	?_strlen^0,w,c
  2396   001BEC  6E56               	movwf	(_mrf24_data_out+4)^0,c
  2397   001BEE  0012               	return		;funcret
  2398   001BF0                     __end_of_MRF24SetMensajeSalida:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _strlen *****************
  2402 ;; Defined at:
  2403 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2406 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2407 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2410 ;;		 -> STR_15(11), STR_14(12), STR_11(14), STR_8(12), 
  2411 ;;		 -> STR_5(14), STR_2(8), STR_1(8), 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  2    0[COMRAM] unsigned int 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2421 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;Total ram usage:        3 bytes
  2426 ;; Hardware stack levels used: 1
  2427 ;; Hardware stack levels required when called: 1
  2428 ;; This function calls:
  2429 ;;		Nothing
  2430 ;; This function is called by:
  2431 ;;		_MRF24SetMensajeSalida
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text5
  2436   001A0E                     __ptext5:
  2437                           	callstack 0
  2438   001A0E                     _strlen:
  2439                           	callstack 28
  2440   001A0E  C001  F003         	movff	strlen@s,strlen@a
  2441   001A12  EF0C  F00D         	goto	l1817
  2442   001A16                     l1815:
  2443   001A16  2A01               	incf	strlen@s^0,f,c
  2444   001A18                     l1817:
  2445   001A18  C001  FFF6         	movff	strlen@s,tblptrl
  2446   001A1C                     	if	1	;There is more than 1 active tblptr byte
  2447   001A1C  0E10               	movlw	high __smallconst
  2448   001A1E  6EF7               	movwf	tblptrh,c
  2449   001A20                     	endif
  2450   001A20                     	if	0	;tblptru may be non-zero
  2451   001A20                     	endif
  2452   001A20                     	if	0	;tblptru may be non-zero
  2453   001A20                     	endif
  2454   001A20  0008               	tblrd		*
  2455   001A22  50F5               	movf	tablat,w,c
  2456   001A24  0900               	iorlw	0
  2457   001A26  A4D8               	btfss	status,2,c
  2458   001A28  EF18  F00D         	goto	u521
  2459   001A2C  EF1A  F00D         	goto	u520
  2460   001A30                     u521:
  2461   001A30  EF0B  F00D         	goto	l1815
  2462   001A34                     u520:
  2463   001A34  5003               	movf	strlen@a^0,w,c
  2464   001A36  5C01               	subwf	strlen@s^0,w,c
  2465   001A38  6E01               	movwf	?_strlen^0,c
  2466   001A3A  6A02               	clrf	(?_strlen+1)^0,c
  2467   001A3C  BE01               	btfsc	?_strlen^0,7,c
  2468   001A3E  0602               	decf	(?_strlen+1)^0,f,c
  2469   001A40  0012               	return		;funcret
  2470   001A42                     __end_of_strlen:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _MRF24SetDireccionDestino *****************
  2474 ;; Defined at:
  2475 ;;		line 706 in file "drivers/scr/API_MRF24J40.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  direccion       2    0[COMRAM] unsigned short 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;		None
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		None
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;Total ram usage:        2 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; Hardware stack levels required when called: 1
  2496 ;; This function calls:
  2497 ;;		Nothing
  2498 ;; This function is called by:
  2499 ;;		_main
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text6
  2504   001C4E                     __ptext6:
  2505                           	callstack 0
  2506   001C4E                     _MRF24SetDireccionDestino:
  2507                           	callstack 29
  2508   001C4E                     
  2509                           ;drivers/scr/API_MRF24J40.c: 708:     mrf24_data_out.destinity_address = direccion;
  2510   001C4E  C001  F054         	movff	MRF24SetDireccionDestino@direccion,_mrf24_data_out+2
  2511   001C52  C002  F055         	movff	MRF24SetDireccionDestino@direccion+1,_mrf24_data_out+3
  2512   001C56  0012               	return		;funcret
  2513   001C58                     __end_of_MRF24SetDireccionDestino:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _MRF24ReciboPaquete *****************
  2517 ;; Defined at:
  2518 ;;		line 766 in file "drivers/scr/API_MRF24J40.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  index           1   16[COMRAM] unsigned char 
  2523 ;;  largo_mensaj    1   15[COMRAM] unsigned char 
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;Total ram usage:        7 bytes
  2538 ;; Hardware stack levels used: 1
  2539 ;; Hardware stack levels required when called: 5
  2540 ;; This function calls:
  2541 ;;		_GetLongAddr
  2542 ;;		_GetShortAddr
  2543 ;;		_SetLongAddr
  2544 ;;		_SetShortAddr
  2545 ;; This function is called by:
  2546 ;;		_main
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text7
  2551   0017B4                     __ptext7:
  2552                           	callstack 0
  2553   0017B4                     _MRF24ReciboPaquete:
  2554                           	callstack 25
  2555   0017B4                     
  2556                           ;drivers/scr/API_MRF24J40.c: 768:  uint8_t index;;drivers/scr/API_MRF24J40.c: 769:  uint
      +                          8_t largo_mensaje;;drivers/scr/API_MRF24J40.c: 770:  SetLongAddr((0x39), (0X04));
  2557   0017B4  0E00               	movlw	0
  2558   0017B6  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2559   0017B8  0E39               	movlw	57
  2560   0017BA  6E06               	movwf	SetLongAddr@reg_address^0,c
  2561   0017BC  0E04               	movlw	4
  2562   0017BE  6E08               	movwf	SetLongAddr@valor^0,c
  2563   0017C0  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2564                           
  2565                           ;drivers/scr/API_MRF24J40.c: 771:  SetShortAddr((0x0D), (0X04));
  2566   0017C4  0E04               	movlw	4
  2567   0017C6  6E03               	movwf	SetShortAddr@valor^0,c
  2568   0017C8  0E0D               	movlw	13
  2569   0017CA  EC9B  F00D         	call	_SetShortAddr
  2570                           
  2571                           ;drivers/scr/API_MRF24J40.c: 772:  largo_mensaje = GetLongAddr((0x300));
  2572   0017CE  0E03               	movlw	3
  2573   0017D0  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2574   0017D2  0E00               	movlw	0
  2575   0017D4  6E06               	movwf	GetLongAddr@reg_address^0,c
  2576   0017D6  EC87  F00C         	call	_GetLongAddr	;wreg free
  2577   0017DA  6E10               	movwf	MRF24ReciboPaquete@largo_mensaje^0,c
  2578   0017DC                     
  2579                           ;drivers/scr/API_MRF24J40.c: 774:  for(index = 0; index < largo_mensaje - (0x04); index+
      +                          +) {
  2580   0017DC  6A11               	clrf	MRF24ReciboPaquete@index^0,c
  2581   0017DE  EFFF  F00B         	goto	l1973
  2582   0017E2                     l1969:
  2583                           
  2584                           ;drivers/scr/API_MRF24J40.c: 776:   mrf24_data_in.buffer_entrada[index] = GetLongAddr((0
      +                          x300) + (0X08) + index);
  2585   0017E2  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2586   0017E4  0F66               	addlw	low (_mrf24_data_in+6)
  2587   0017E6  6ED9               	movwf	fsr2l,c
  2588   0017E8  6ADA               	clrf	fsr2h,c
  2589   0017EA  0E08               	movlw	8
  2590   0017EC  2411               	addwf	MRF24ReciboPaquete@index^0,w,c
  2591   0017EE  6E06               	movwf	GetLongAddr@reg_address^0,c
  2592   0017F0  6A07               	clrf	(GetLongAddr@reg_address+1)^0,c
  2593   0017F2  0E03               	movlw	3
  2594   0017F4  2207               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  2595   0017F6  EC87  F00C         	call	_GetLongAddr	;wreg free
  2596   0017FA  6EDF               	movwf	indf2,c
  2597   0017FC                     
  2598                           ;drivers/scr/API_MRF24J40.c: 777:  }
  2599   0017FC  2A11               	incf	MRF24ReciboPaquete@index^0,f,c
  2600   0017FE                     l1973:
  2601   0017FE  0EFC               	movlw	252
  2602   001800  2410               	addwf	MRF24ReciboPaquete@largo_mensaje^0,w,c
  2603   001802  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  2604   001804  6A0C               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  2605   001806  0EFF               	movlw	255
  2606   001808  220C               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  2607   00180A  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2608   00180C  6E0D               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  2609   00180E  6A0E               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  2610   001810  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  2611   001812  5C0D               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  2612   001814  500E               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  2613   001816  0A80               	xorlw	128
  2614   001818  6E0F               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  2615   00181A  500C               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  2616   00181C  0A80               	xorlw	128
  2617   00181E  580F               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  2618   001820  A0D8               	btfss	status,0,c
  2619   001822  EF15  F00C         	goto	u581
  2620   001826  EF17  F00C         	goto	u580
  2621   00182A                     u581:
  2622   00182A  EFF1  F00B         	goto	l1969
  2623   00182E                     u580:
  2624   00182E                     
  2625                           ;drivers/scr/API_MRF24J40.c: 778:  SetLongAddr((0x39), (0X00));
  2626   00182E  0E00               	movlw	0
  2627   001830  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2628   001832  0E39               	movlw	57
  2629   001834  6E06               	movwf	SetLongAddr@reg_address^0,c
  2630   001836  0E00               	movlw	0
  2631   001838  6E08               	movwf	SetLongAddr@valor^0,c
  2632   00183A  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2633                           
  2634                           ;drivers/scr/API_MRF24J40.c: 779:  (void)GetShortAddr((0x31));
  2635   00183E  0E31               	movlw	49
  2636   001840  EC75  F00D         	call	_GetShortAddr
  2637   001844  0012               	return		;funcret
  2638   001846                     __end_of_MRF24ReciboPaquete:
  2639                           	callstack 0
  2640                           
  2641 ;; *************** function _MRF24J40Init *****************
  2642 ;; Defined at:
  2643 ;;		line 501 in file "drivers/scr/API_MRF24J40.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  delay_time_o    9   16[COMRAM] struct .
  2648 ;;  lectura         1   15[COMRAM] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      enum E3263
  2651 ;; Registers used:
  2652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2659 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2660 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2661 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2662 ;;Total ram usage:       11 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 6
  2665 ;; This function calls:
  2666 ;;		_DelayInit
  2667 ;;		_DelayRead
  2668 ;;		_DelayReset
  2669 ;;		_GetLongAddr
  2670 ;;		_GetShortAddr
  2671 ;;		_InicializoPines
  2672 ;;		_InicializoVariables
  2673 ;;		_SetChannel
  2674 ;;		_SetDeviceAddress
  2675 ;;		_SetDeviceMACAddress
  2676 ;;		_SetLongAddr
  2677 ;;		_SetResetPin
  2678 ;;		_SetShortAddr
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text8
  2685   001070                     __ptext8:
  2686                           	callstack 0
  2687   001070                     _MRF24J40Init:
  2688                           	callstack 24
  2689   001070                     
  2690                           ;drivers/scr/API_MRF24J40.c: 503:     uint8_t lectura;;drivers/scr/API_MRF24J40.c: 504: 
      +                              delayNoBloqueanteData delay_time_out;;drivers/scr/API_MRF24J40.c: 505:     DelayInit
      +                          (&delay_time_out, 100);
  2691   001070  0E11               	movlw	low MRF24J40Init@delay_time_out
  2692   001072  6E01               	movwf	DelayInit@delay^0,c
  2693   001074  0E64               	movlw	100
  2694   001076  6E02               	movwf	DelayInit@duration^0,c
  2695   001078  0E00               	movlw	0
  2696   00107A  6E03               	movwf	(DelayInit@duration+1)^0,c
  2697   00107C  0E00               	movlw	0
  2698   00107E  6E04               	movwf	(DelayInit@duration+2)^0,c
  2699   001080  0E00               	movlw	0
  2700   001082  6E05               	movwf	(DelayInit@duration+3)^0,c
  2701   001084  EC4E  F00D         	call	_DelayInit	;wreg free
  2702   001088                     
  2703                           ;drivers/scr/API_MRF24J40.c: 506:     InicializoVariables();
  2704   001088  EC22  F00B         	call	_InicializoVariables	;wreg free
  2705   00108C                     
  2706                           ;drivers/scr/API_MRF24J40.c: 507:     InicializoPines();
  2707   00108C  ECDB  F00D         	call	_InicializoPines	;wreg free
  2708   001090                     
  2709                           ;drivers/scr/API_MRF24J40.c: 508:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2710   001090  0E06               	movlw	6
  2711   001092  6E0F               	movwf	??_MRF24J40Init^0,c
  2712   001094  0E30               	movlw	48
  2713   001096                     u767:
  2714   001096  2EE8               	decfsz	wreg,f,c
  2715   001098  D7FE               	bra	u767
  2716   00109A  2E0F               	decfsz	??_MRF24J40Init^0,f,c
  2717   00109C  D7FC               	bra	u767
  2718   00109E  F000 F000          	nop2	
  2719   0010A2                     
  2720                           ;drivers/scr/API_MRF24J40.c: 509:     SetResetPin(1);
  2721   0010A2  0E01               	movlw	1
  2722   0010A4  ECFF  F00D         	call	_SetResetPin
  2723   0010A8                     
  2724                           ;drivers/scr/API_MRF24J40.c: 510:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2725   0010A8  0E06               	movlw	6
  2726   0010AA  6E0F               	movwf	??_MRF24J40Init^0,c
  2727   0010AC  0E30               	movlw	48
  2728   0010AE                     u777:
  2729   0010AE  2EE8               	decfsz	wreg,f,c
  2730   0010B0  D7FE               	bra	u777
  2731   0010B2  2E0F               	decfsz	??_MRF24J40Init^0,f,c
  2732   0010B4  D7FC               	bra	u777
  2733   0010B6  F000 F000          	nop2	
  2734   0010BA                     
  2735                           ;drivers/scr/API_MRF24J40.c: 511:     SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  2736   0010BA  0E07               	movlw	7
  2737   0010BC  6E03               	movwf	SetShortAddr@valor^0,c
  2738   0010BE  0E2A               	movlw	42
  2739   0010C0  EC9B  F00D         	call	_SetShortAddr
  2740   0010C4                     
  2741                           ;drivers/scr/API_MRF24J40.c: 512:     DelayReset(&delay_time_out);
  2742   0010C4  0E11               	movlw	low MRF24J40Init@delay_time_out
  2743   0010C6  6E01               	movwf	DelayReset@delay^0,c
  2744   0010C8  EC88  F00D         	call	_DelayReset	;wreg free
  2745   0010CC                     l1845:
  2746                           
  2747                           ;drivers/scr/API_MRF24J40.c: 515:         lectura = GetShortAddr((0x2A));
  2748   0010CC  0E2A               	movlw	42
  2749   0010CE  EC75  F00D         	call	_GetShortAddr
  2750   0010D2  6E10               	movwf	MRF24J40Init@lectura^0,c
  2751   0010D4                     
  2752                           ;drivers/scr/API_MRF24J40.c: 516:   if(DelayRead(&delay_time_out))
  2753   0010D4  0E11               	movlw	low MRF24J40Init@delay_time_out
  2754   0010D6  6E02               	movwf	DelayRead@delay^0,c
  2755   0010D8  EC84  F00B         	call	_DelayRead	;wreg free
  2756   0010DC  0900               	iorlw	0
  2757   0010DE  B4D8               	btfsc	status,2,c
  2758   0010E0  EF74  F008         	goto	u531
  2759   0010E4  EF76  F008         	goto	u530
  2760   0010E8                     u531:
  2761   0010E8  EF78  F008         	goto	l1851
  2762   0010EC                     u530:
  2763   0010EC  EF1C  F009         	goto	l99
  2764   0010F0                     l1851:
  2765                           
  2766                           ;drivers/scr/API_MRF24J40.c: 518:     }while((lectura & ((0X04) | (0X02) | (0X01))) != (
      +                          0X00));
  2767   0010F0  C010  F00F         	movff	MRF24J40Init@lectura,??_MRF24J40Init
  2768   0010F4  0E07               	movlw	7
  2769   0010F6  160F               	andwf	??_MRF24J40Init^0,f,c
  2770   0010F8  A4D8               	btfss	status,2,c
  2771   0010FA  EF81  F008         	goto	u541
  2772   0010FE  EF83  F008         	goto	u540
  2773   001102                     u541:
  2774   001102  EF66  F008         	goto	l1845
  2775   001106                     u540:
  2776   001106                     
  2777                           ;drivers/scr/API_MRF24J40.c: 519:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2778   001106  0E06               	movlw	6
  2779   001108  6E0F               	movwf	??_MRF24J40Init^0,c
  2780   00110A  0E30               	movlw	48
  2781   00110C                     u787:
  2782   00110C  2EE8               	decfsz	wreg,f,c
  2783   00110E  D7FE               	bra	u787
  2784   001110  2E0F               	decfsz	??_MRF24J40Init^0,f,c
  2785   001112  D7FC               	bra	u787
  2786   001114  F000 F000          	nop2	
  2787   001118                     
  2788                           ;drivers/scr/API_MRF24J40.c: 520:     SetShortAddr((0x0D), (0X01));
  2789   001118  0E01               	movlw	1
  2790   00111A  6E03               	movwf	SetShortAddr@valor^0,c
  2791   00111C  0E0D               	movlw	13
  2792   00111E  EC9B  F00D         	call	_SetShortAddr
  2793   001122                     
  2794                           ;drivers/scr/API_MRF24J40.c: 521:     SetDeviceAddress();
  2795   001122  EC39  F00D         	call	_SetDeviceAddress	;wreg free
  2796   001126                     
  2797                           ;drivers/scr/API_MRF24J40.c: 522:     SetDeviceMACAddress();
  2798   001126  ECA9  F00C         	call	_SetDeviceMACAddress	;wreg free
  2799   00112A                     
  2800                           ;drivers/scr/API_MRF24J40.c: 523:     SetLongAddr((0x202), (0X80));
  2801   00112A  0E02               	movlw	2
  2802   00112C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2803   00112E  0E02               	movlw	2
  2804   001130  6E06               	movwf	SetLongAddr@reg_address^0,c
  2805   001132  0E80               	movlw	128
  2806   001134  6E08               	movwf	SetLongAddr@valor^0,c
  2807   001136  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2808   00113A                     
  2809                           ;drivers/scr/API_MRF24J40.c: 524:     SetLongAddr((0x203), (0XC0) | (0X38));
  2810   00113A  0E02               	movlw	2
  2811   00113C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2812   00113E  0E03               	movlw	3
  2813   001140  6E06               	movwf	SetLongAddr@reg_address^0,c
  2814   001142  0EF8               	movlw	248
  2815   001144  6E08               	movwf	SetLongAddr@valor^0,c
  2816   001146  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2817   00114A                     
  2818                           ;drivers/scr/API_MRF24J40.c: 525:  SetLongAddr((0x206), (0X80) | (0X10));
  2819   00114A  0E02               	movlw	2
  2820   00114C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2821   00114E  0E06               	movlw	6
  2822   001150  6E06               	movwf	SetLongAddr@reg_address^0,c
  2823   001152  0E90               	movlw	144
  2824   001154  6E08               	movwf	SetLongAddr@valor^0,c
  2825   001156  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2826   00115A                     
  2827                           ;drivers/scr/API_MRF24J40.c: 526:  SetLongAddr((0x207), (0X80));
  2828   00115A  0E02               	movlw	2
  2829   00115C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2830   00115E  0E07               	movlw	7
  2831   001160  6E06               	movwf	SetLongAddr@reg_address^0,c
  2832   001162  0E80               	movlw	128
  2833   001164  6E08               	movwf	SetLongAddr@valor^0,c
  2834   001166  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2835   00116A                     
  2836                           ;drivers/scr/API_MRF24J40.c: 527:  SetLongAddr((0x208), (0X10));
  2837   00116A  0E02               	movlw	2
  2838   00116C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2839   00116E  0E08               	movlw	8
  2840   001170  6E06               	movwf	SetLongAddr@reg_address^0,c
  2841   001172  0E10               	movlw	16
  2842   001174  6E08               	movwf	SetLongAddr@valor^0,c
  2843   001176  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2844   00117A                     
  2845                           ;drivers/scr/API_MRF24J40.c: 528:  SetLongAddr((0x220), (0X20) | (0X01));
  2846   00117A  0E02               	movlw	2
  2847   00117C  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2848   00117E  0E20               	movlw	32
  2849   001180  6E06               	movwf	SetLongAddr@reg_address^0,c
  2850   001182  0E21               	movlw	33
  2851   001184  6E08               	movwf	SetLongAddr@valor^0,c
  2852   001186  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2853   00118A                     
  2854                           ;drivers/scr/API_MRF24J40.c: 529:     SetShortAddr((0x3A), (0X80));
  2855   00118A  0E80               	movlw	128
  2856   00118C  6E03               	movwf	SetShortAddr@valor^0,c
  2857   00118E  0E3A               	movlw	58
  2858   001190  EC9B  F00D         	call	_SetShortAddr
  2859   001194                     
  2860                           ;drivers/scr/API_MRF24J40.c: 530:     SetShortAddr((0x3E), (0X40));
  2861   001194  0E40               	movlw	64
  2862   001196  6E03               	movwf	SetShortAddr@valor^0,c
  2863   001198  0E3E               	movlw	62
  2864   00119A  EC9B  F00D         	call	_SetShortAddr
  2865   00119E                     
  2866                           ;drivers/scr/API_MRF24J40.c: 531:     SetShortAddr((0x3F), (0X04) | (0X02));
  2867   00119E  0E06               	movlw	6
  2868   0011A0  6E03               	movwf	SetShortAddr@valor^0,c
  2869   0011A2  0E3F               	movlw	63
  2870   0011A4  EC9B  F00D         	call	_SetShortAddr
  2871   0011A8                     
  2872                           ;drivers/scr/API_MRF24J40.c: 532:     SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  2873   0011A8  0E98               	movlw	152
  2874   0011AA  6E03               	movwf	SetShortAddr@valor^0,c
  2875   0011AC  0E18               	movlw	24
  2876   0011AE  EC9B  F00D         	call	_SetShortAddr
  2877   0011B2                     
  2878                           ;drivers/scr/API_MRF24J40.c: 533:     SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0
      +                          X01));
  2879   0011B2  0E95               	movlw	149
  2880   0011B4  6E03               	movwf	SetShortAddr@valor^0,c
  2881   0011B6  0E2E               	movlw	46
  2882   0011B8  EC9B  F00D         	call	_SetShortAddr
  2883   0011BC                     
  2884                           ;drivers/scr/API_MRF24J40.c: 534:     DelayReset(&delay_time_out);
  2885   0011BC  0E11               	movlw	low MRF24J40Init@delay_time_out
  2886   0011BE  6E01               	movwf	DelayReset@delay^0,c
  2887   0011C0  EC88  F00D         	call	_DelayReset	;wreg free
  2888   0011C4                     l1885:
  2889                           
  2890                           ;drivers/scr/API_MRF24J40.c: 537:   lectura = GetLongAddr((0x20f));
  2891   0011C4  0E02               	movlw	2
  2892   0011C6  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2893   0011C8  0E0F               	movlw	15
  2894   0011CA  6E06               	movwf	GetLongAddr@reg_address^0,c
  2895   0011CC  EC87  F00C         	call	_GetLongAddr	;wreg free
  2896   0011D0  6E10               	movwf	MRF24J40Init@lectura^0,c
  2897   0011D2                     
  2898                           ;drivers/scr/API_MRF24J40.c: 538:   if(DelayRead(&delay_time_out))
  2899   0011D2  0E11               	movlw	low MRF24J40Init@delay_time_out
  2900   0011D4  6E02               	movwf	DelayRead@delay^0,c
  2901   0011D6  EC84  F00B         	call	_DelayRead	;wreg free
  2902   0011DA  0900               	iorlw	0
  2903   0011DC  B4D8               	btfsc	status,2,c
  2904   0011DE  EFF3  F008         	goto	u551
  2905   0011E2  EFF5  F008         	goto	u550
  2906   0011E6                     u551:
  2907   0011E6  EFF7  F008         	goto	l1891
  2908   0011EA                     u550:
  2909   0011EA  EF1C  F009         	goto	l99
  2910   0011EE                     l1891:
  2911                           
  2912                           ;drivers/scr/API_MRF24J40.c: 540:  }while(lectura != (0XA0));
  2913   0011EE  0EA0               	movlw	160
  2914   0011F0  1810               	xorwf	MRF24J40Init@lectura^0,w,c
  2915   0011F2  A4D8               	btfss	status,2,c
  2916   0011F4  EFFE  F008         	goto	u561
  2917   0011F8  EF00  F009         	goto	u560
  2918   0011FC                     u561:
  2919   0011FC  EFE2  F008         	goto	l1885
  2920   001200                     u560:
  2921   001200                     
  2922                           ;drivers/scr/API_MRF24J40.c: 541:     SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0
      +                          X10) | (0X04) | (0X01));
  2923   001200  0EF5               	movlw	245
  2924   001202  6E03               	movwf	SetShortAddr@valor^0,c
  2925   001204  0E32               	movlw	50
  2926   001206  EC9B  F00D         	call	_SetShortAddr
  2927                           
  2928                           ;drivers/scr/API_MRF24J40.c: 542:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  2929   00120A  0EB9               	movlw	185
  2930   00120C  6E03               	movwf	SetShortAddr@valor^0,c
  2931   00120E  0E12               	movlw	18
  2932   001210  EC9B  F00D         	call	_SetShortAddr
  2933                           
  2934                           ;drivers/scr/API_MRF24J40.c: 543:   SetLongAddr((0x201), (0X02) | (0X01));
  2935   001214  0E02               	movlw	2
  2936   001216  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2937   001218  0E01               	movlw	1
  2938   00121A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2939   00121C  0E03               	movlw	3
  2940   00121E  6E08               	movwf	SetLongAddr@valor^0,c
  2941   001220  ECCA  F00C         	call	_SetLongAddr	;wreg free
  2942                           
  2943                           ;drivers/scr/API_MRF24J40.c: 544:  SetChannel();
  2944   001224  ECEB  F00C         	call	_SetChannel	;wreg free
  2945                           
  2946                           ;drivers/scr/API_MRF24J40.c: 545:  SetShortAddr((0x00), (0X00));
  2947   001228  0E00               	movlw	0
  2948   00122A  6E03               	movwf	SetShortAddr@valor^0,c
  2949   00122C  0E00               	movlw	0
  2950   00122E  EC9B  F00D         	call	_SetShortAddr
  2951                           
  2952                           ;drivers/scr/API_MRF24J40.c: 546:  (void)GetShortAddr((0x31));
  2953   001232  0E31               	movlw	49
  2954   001234  EC75  F00D         	call	_GetShortAddr
  2955   001238                     l99:
  2956   001238  0012               	return		;funcret
  2957   00123A                     __end_of_MRF24J40Init:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _SetDeviceMACAddress *****************
  2961 ;; Defined at:
  2962 ;;		line 676 in file "drivers/scr/API_MRF24J40.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  i               2    4[COMRAM] int 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;Total ram usage:        2 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 4
  2983 ;; This function calls:
  2984 ;;		_SetShortAddr
  2985 ;; This function is called by:
  2986 ;;		_MRF24J40Init
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text9
  2991   001952                     __ptext9:
  2992                           	callstack 0
  2993   001952                     _SetDeviceMACAddress:
  2994                           	callstack 25
  2995   001952                     
  2996                           ;drivers/scr/API_MRF24J40.c: 678:     long_mac_address = EADR0;
  2997   001952  0E05               	movlw	5
  2998   001954  6E5C               	movwf	_long_mac_address^0,c
  2999                           
  3000                           ;drivers/scr/API_MRF24J40.c: 680:     for(int i = 0; i < 8; i++) {
  3001   001956  0E00               	movlw	0
  3002   001958  6E06               	movwf	(SetDeviceMACAddress@i+1)^0,c
  3003   00195A  0E00               	movlw	0
  3004   00195C  6E05               	movwf	SetDeviceMACAddress@i^0,c
  3005   00195E                     l1785:
  3006                           
  3007                           ;drivers/scr/API_MRF24J40.c: 682:         SetShortAddr(long_mac_address++, mrf24_data_co
      +                          nfig.my_mac[i]);
  3008   00195E  5005               	movf	SetDeviceMACAddress@i^0,w,c
  3009   001960  0F44               	addlw	low (_mrf24_data_config+20)
  3010   001962  6ED9               	movwf	fsr2l,c
  3011   001964  6ADA               	clrf	fsr2h,c
  3012   001966  50DF               	movf	indf2,w,c
  3013   001968  6E03               	movwf	SetShortAddr@valor^0,c
  3014   00196A  505C               	movf	_long_mac_address^0,w,c
  3015   00196C  EC9B  F00D         	call	_SetShortAddr
  3016   001970  2A5C               	incf	_long_mac_address^0,f,c
  3017   001972                     
  3018                           ;drivers/scr/API_MRF24J40.c: 683:     }
  3019   001972  4A05               	infsnz	SetDeviceMACAddress@i^0,f,c
  3020   001974  2A06               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  3021   001976  BE06               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  3022   001978  EFC7  F00C         	goto	u501
  3023   00197C  5006               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  3024   00197E  E109               	bnz	u500
  3025   001980  0E08               	movlw	8
  3026   001982  5C05               	subwf	SetDeviceMACAddress@i^0,w,c
  3027   001984  A0D8               	btfss	status,0,c
  3028   001986  EFC7  F00C         	goto	u501
  3029   00198A  EFC9  F00C         	goto	u500
  3030   00198E                     u501:
  3031   00198E  EFAF  F00C         	goto	l1785
  3032   001992                     u500:
  3033   001992  0012               	return		;funcret
  3034   001994                     __end_of_SetDeviceMACAddress:
  3035                           	callstack 0
  3036                           
  3037 ;; *************** function _SetDeviceAddress *****************
  3038 ;; Defined at:
  3039 ;;		line 662 in file "drivers/scr/API_MRF24J40.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;		None
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, status,2, status,0, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 4
  3060 ;; This function calls:
  3061 ;;		_SetShortAddr
  3062 ;; This function is called by:
  3063 ;;		_MRF24J40Init
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text10
  3068   001A72                     __ptext10:
  3069                           	callstack 0
  3070   001A72                     _SetDeviceAddress:
  3071                           	callstack 25
  3072   001A72                     
  3073                           ;drivers/scr/API_MRF24J40.c: 664:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> (0X08)));
  3074   001A72  504F               	movf	(_mrf24_data_config+31)^0,w,c
  3075   001A74  6E03               	movwf	SetShortAddr@valor^0,c
  3076   001A76  0E04               	movlw	4
  3077   001A78  EC9B  F00D         	call	_SetShortAddr
  3078                           
  3079                           ;drivers/scr/API_MRF24J40.c: 665:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  3080   001A7C  C04E  F003         	movff	_mrf24_data_config+30,SetShortAddr@valor
  3081   001A80  0E03               	movlw	3
  3082   001A82  EC9B  F00D         	call	_SetShortAddr
  3083                           
  3084                           ;drivers/scr/API_MRF24J40.c: 666:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> (0X08)));
  3085   001A86  504D               	movf	(_mrf24_data_config+29)^0,w,c
  3086   001A88  6E03               	movwf	SetShortAddr@valor^0,c
  3087   001A8A  0E02               	movlw	2
  3088   001A8C  EC9B  F00D         	call	_SetShortAddr
  3089                           
  3090                           ;drivers/scr/API_MRF24J40.c: 667:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  3091   001A90  C04C  F003         	movff	_mrf24_data_config+28,SetShortAddr@valor
  3092   001A94  0E01               	movlw	1
  3093   001A96  EC9B  F00D         	call	_SetShortAddr
  3094   001A9A  0012               	return		;funcret
  3095   001A9C                     __end_of_SetDeviceAddress:
  3096                           	callstack 0
  3097                           
  3098 ;; *************** function _SetChannel *****************
  3099 ;; Defined at:
  3100 ;;		line 648 in file "drivers/scr/API_MRF24J40.c"
  3101 ;; Parameters:    Size  Location     Type
  3102 ;;		None
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;		None
  3105 ;; Return value:  Size  Location     Type
  3106 ;;                  1    wreg      void 
  3107 ;; Registers used:
  3108 ;;		wreg, status,2, status,0, cstack
  3109 ;; Tracked objects:
  3110 ;;		On entry : 0/0
  3111 ;;		On exit  : 0/0
  3112 ;;		Unchanged: 0/0
  3113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3117 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3118 ;;Total ram usage:        1 bytes
  3119 ;; Hardware stack levels used: 1
  3120 ;; Hardware stack levels required when called: 5
  3121 ;; This function calls:
  3122 ;;		_SetLongAddr
  3123 ;;		_SetShortAddr
  3124 ;; This function is called by:
  3125 ;;		_MRF24J40Init
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text11
  3130   0019D6                     __ptext11:
  3131                           	callstack 0
  3132   0019D6                     _SetChannel:
  3133                           	callstack 24
  3134   0019D6                     
  3135                           ;drivers/scr/API_MRF24J40.c: 650:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  3136   0019D6  0E02               	movlw	2
  3137   0019D8  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3138   0019DA  0E00               	movlw	0
  3139   0019DC  6E06               	movwf	SetLongAddr@reg_address^0,c
  3140   0019DE  C033  F008         	movff	_mrf24_data_config+3,SetLongAddr@valor
  3141   0019E2  ECCA  F00C         	call	_SetLongAddr	;wreg free
  3142                           
  3143                           ;drivers/scr/API_MRF24J40.c: 651:  SetShortAddr((0x36), (0X04));
  3144   0019E6  0E04               	movlw	4
  3145   0019E8  6E03               	movwf	SetShortAddr@valor^0,c
  3146   0019EA  0E36               	movlw	54
  3147   0019EC  EC9B  F00D         	call	_SetShortAddr
  3148                           
  3149                           ;drivers/scr/API_MRF24J40.c: 652:  SetShortAddr((0x36), (0X00));
  3150   0019F0  0E00               	movlw	0
  3151   0019F2  6E03               	movwf	SetShortAddr@valor^0,c
  3152   0019F4  0E36               	movlw	54
  3153   0019F6  EC9B  F00D         	call	_SetShortAddr
  3154   0019FA                     
  3155                           ;drivers/scr/API_MRF24J40.c: 653:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3156   0019FA  0E06               	movlw	6
  3157   0019FC  6E0B               	movwf	??_SetChannel^0,c
  3158   0019FE  0E30               	movlw	48
  3159   001A00                     u797:
  3160   001A00  2EE8               	decfsz	wreg,f,c
  3161   001A02  D7FE               	bra	u797
  3162   001A04  2E0B               	decfsz	??_SetChannel^0,f,c
  3163   001A06  D7FC               	bra	u797
  3164   001A08  F000 F000          	nop2	
  3165   001A0C  0012               	return		;funcret
  3166   001A0E                     __end_of_SetChannel:
  3167                           	callstack 0
  3168                           
  3169 ;; *************** function _SetShortAddr *****************
  3170 ;; Defined at:
  3171 ;;		line 586 in file "drivers/scr/API_MRF24J40.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  reg_address     1    wreg     unsigned char 
  3174 ;;  valor           1    2[COMRAM] unsigned char 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  reg_address     1    3[COMRAM] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3186 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;Total ram usage:        2 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 3
  3193 ;; This function calls:
  3194 ;;		_SetCSPin
  3195 ;;		_WriteByteSPIPort
  3196 ;; This function is called by:
  3197 ;;		_MRF24J40Init
  3198 ;;		_SetChannel
  3199 ;;		_SetDeviceAddress
  3200 ;;		_SetDeviceMACAddress
  3201 ;;		_MRF24TransmitirDato
  3202 ;;		_MRF24ReciboPaquete
  3203 ;; This function uses a non-reentrant model
  3204 ;;
  3205                           
  3206                           	psect	text12
  3207   001B36                     __ptext12:
  3208                           	callstack 0
  3209   001B36                     _SetShortAddr:
  3210                           	callstack 26
  3211                           
  3212                           ;incstack = 0
  3213                           ;SetShortAddr@reg_address stored from wreg
  3214   001B36  6E04               	movwf	SetShortAddr@reg_address^0,c
  3215   001B38                     
  3216                           ;drivers/scr/API_MRF24J40.c: 588:     reg_address = (uint8_t) (reg_address << (0X01)) | 
      +                          (0x01);
  3217   001B38  80D8               	bsf	status,0,c
  3218   001B3A  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  3219   001B3C                     
  3220                           ;drivers/scr/API_MRF24J40.c: 589:     SetCSPin(0);
  3221   001B3C  0E00               	movlw	0
  3222   001B3E  EC14  F00E         	call	_SetCSPin
  3223   001B42                     
  3224                           ;drivers/scr/API_MRF24J40.c: 590:  WriteByteSPIPort(reg_address);
  3225   001B42  5004               	movf	SetShortAddr@reg_address^0,w,c
  3226   001B44  EC2C  F00E         	call	_WriteByteSPIPort
  3227   001B48                     
  3228                           ;drivers/scr/API_MRF24J40.c: 591:  WriteByteSPIPort(valor);
  3229   001B48  5003               	movf	SetShortAddr@valor^0,w,c
  3230   001B4A  EC2C  F00E         	call	_WriteByteSPIPort
  3231   001B4E                     
  3232                           ;drivers/scr/API_MRF24J40.c: 592:     SetCSPin(1);
  3233   001B4E  0E01               	movlw	1
  3234   001B50  EC14  F00E         	call	_SetCSPin
  3235   001B54  0012               	return		;funcret
  3236   001B56                     __end_of_SetShortAddr:
  3237                           	callstack 0
  3238                           
  3239 ;; *************** function _SetLongAddr *****************
  3240 ;; Defined at:
  3241 ;;		line 617 in file "drivers/scr/API_MRF24J40.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;  reg_address     2    5[COMRAM] unsigned short 
  3244 ;;  valor           1    7[COMRAM] unsigned char 
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, status,2, status,0, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3256 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;Total ram usage:        5 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 4
  3263 ;; This function calls:
  3264 ;;		_SetCSPin
  3265 ;;		_Write2ByteSPIPort
  3266 ;;		_WriteByteSPIPort
  3267 ;; This function is called by:
  3268 ;;		_MRF24J40Init
  3269 ;;		_SetChannel
  3270 ;;		_MRF24TransmitirDato
  3271 ;;		_MRF24ReciboPaquete
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text13
  3276   001994                     __ptext13:
  3277                           	callstack 0
  3278   001994                     _SetLongAddr:
  3279                           	callstack 25
  3280   001994                     
  3281                           ;drivers/scr/API_MRF24J40.c: 619:     reg_address = (reg_address << (0X05)) | (0X8010);
  3282   001994  C006  F009         	movff	SetLongAddr@reg_address,??_SetLongAddr
  3283   001998  C007  F00A         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  3284   00199C  0E05               	movlw	5
  3285   00199E                     u455:
  3286   00199E  90D8               	bcf	status,0,c
  3287   0019A0  3609               	rlcf	??_SetLongAddr^0,f,c
  3288   0019A2  360A               	rlcf	(??_SetLongAddr+1)^0,f,c
  3289   0019A4  2EE8               	decfsz	wreg,f,c
  3290   0019A6  EFCF  F00C         	goto	u455
  3291   0019AA  0E10               	movlw	16
  3292   0019AC  1009               	iorwf	??_SetLongAddr^0,w,c
  3293   0019AE  6E06               	movwf	SetLongAddr@reg_address^0,c
  3294   0019B0  0E80               	movlw	128
  3295   0019B2  100A               	iorwf	(??_SetLongAddr+1)^0,w,c
  3296   0019B4  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3297   0019B6                     
  3298                           ;drivers/scr/API_MRF24J40.c: 620:     SetCSPin(0);
  3299   0019B6  0E00               	movlw	0
  3300   0019B8  EC14  F00E         	call	_SetCSPin
  3301   0019BC                     
  3302                           ;drivers/scr/API_MRF24J40.c: 621:     Write2ByteSPIPort(reg_address);
  3303   0019BC  C006  F004         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  3304   0019C0  C007  F005         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3305   0019C4  EC06  F00E         	call	_Write2ByteSPIPort	;wreg free
  3306   0019C8                     
  3307                           ;drivers/scr/API_MRF24J40.c: 622:  WriteByteSPIPort(valor);
  3308   0019C8  5008               	movf	SetLongAddr@valor^0,w,c
  3309   0019CA  EC2C  F00E         	call	_WriteByteSPIPort
  3310   0019CE                     
  3311                           ;drivers/scr/API_MRF24J40.c: 623:     SetCSPin(1);
  3312   0019CE  0E01               	movlw	1
  3313   0019D0  EC14  F00E         	call	_SetCSPin
  3314   0019D4  0012               	return		;funcret
  3315   0019D6                     __end_of_SetLongAddr:
  3316                           	callstack 0
  3317                           
  3318 ;; *************** function _InicializoVariables *****************
  3319 ;; Defined at:
  3320 ;;		line 556 in file "drivers/scr/API_MRF24J40.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;		None
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;  i               2    1[COMRAM] int 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3335 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3336 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3337 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3338 ;;Total ram usage:        3 bytes
  3339 ;; Hardware stack levels used: 1
  3340 ;; Hardware stack levels required when called: 1
  3341 ;; This function calls:
  3342 ;;		Nothing
  3343 ;; This function is called by:
  3344 ;;		_MRF24J40Init
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text14
  3349   001644                     __ptext14:
  3350                           	callstack 0
  3351   001644                     _InicializoVariables:
  3352                           	callstack 28
  3353   001644                     
  3354                           ;drivers/scr/API_MRF24J40.c: 558:     for(int i = 0; i < 16; i++){
  3355   001644  0E00               	movlw	0
  3356   001646  6E03               	movwf	(InicializoVariables@i+1)^0,c
  3357   001648  0E00               	movlw	0
  3358   00164A  6E02               	movwf	InicializoVariables@i^0,c
  3359   00164C                     l1711:
  3360                           
  3361                           ;drivers/scr/API_MRF24J40.c: 560:         if(i < 8)
  3362   00164C  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  3363   00164E  EF34  F00B         	goto	u460
  3364   001652  5003               	movf	(InicializoVariables@i+1)^0,w,c
  3365   001654  E107               	bnz	u461
  3366   001656  0E08               	movlw	8
  3367   001658  5C02               	subwf	InicializoVariables@i^0,w,c
  3368   00165A  B0D8               	btfsc	status,0,c
  3369   00165C  EF32  F00B         	goto	u461
  3370   001660  EF34  F00B         	goto	u460
  3371   001664                     u461:
  3372   001664  EF42  F00B         	goto	l108
  3373   001668                     u460:
  3374   001668                     
  3375                           ;drivers/scr/API_MRF24J40.c: 561:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  3376   001668  5002               	movf	InicializoVariables@i^0,w,c
  3377   00166A  0F11               	addlw	low _default_mac_address
  3378   00166C  6E01               	movwf	??_InicializoVariables^0,c
  3379   00166E  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  3380   001672                     	if	1	;There is more than 1 active tblptr byte
  3381   001672  0E10               	movlw	high __smallconst
  3382   001674  6EF7               	movwf	tblptrh,c
  3383   001676                     	endif
  3384   001676                     	if	0	;tblptru may be non-zero
  3385   001676                     	endif
  3386   001676                     	if	0	;tblptru may be non-zero
  3387   001676                     	endif
  3388   001676  5002               	movf	InicializoVariables@i^0,w,c
  3389   001678  0F44               	addlw	low (_mrf24_data_config+20)
  3390   00167A  6ED9               	movwf	fsr2l,c
  3391   00167C  6ADA               	clrf	fsr2h,c
  3392   00167E  0008               	tblrd		*
  3393   001680  CFF5 FFDF          	movff	tablat,indf2
  3394   001684                     l108:
  3395                           
  3396                           ;drivers/scr/API_MRF24J40.c: 562:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  3397   001684  5002               	movf	InicializoVariables@i^0,w,c
  3398   001686  0F01               	addlw	low _default_security_key
  3399   001688  6E01               	movwf	??_InicializoVariables^0,c
  3400   00168A  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  3401   00168E                     	if	1	;There is more than 1 active tblptr byte
  3402   00168E  0E10               	movlw	high __smallconst
  3403   001690  6EF7               	movwf	tblptrh,c
  3404   001692                     	endif
  3405   001692                     	if	0	;tblptru may be non-zero
  3406   001692                     	endif
  3407   001692                     	if	0	;tblptru may be non-zero
  3408   001692                     	endif
  3409   001692  5002               	movf	InicializoVariables@i^0,w,c
  3410   001694  0F34               	addlw	low (_mrf24_data_config+4)
  3411   001696  6ED9               	movwf	fsr2l,c
  3412   001698  6ADA               	clrf	fsr2h,c
  3413   00169A  0008               	tblrd		*
  3414   00169C  CFF5 FFDF          	movff	tablat,indf2
  3415   0016A0                     
  3416                           ;drivers/scr/API_MRF24J40.c: 563:     }
  3417   0016A0  4A02               	infsnz	InicializoVariables@i^0,f,c
  3418   0016A2  2A03               	incf	(InicializoVariables@i+1)^0,f,c
  3419   0016A4  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  3420   0016A6  EF5E  F00B         	goto	u471
  3421   0016AA  5003               	movf	(InicializoVariables@i+1)^0,w,c
  3422   0016AC  E109               	bnz	u470
  3423   0016AE  0E10               	movlw	16
  3424   0016B0  5C02               	subwf	InicializoVariables@i^0,w,c
  3425   0016B2  A0D8               	btfss	status,0,c
  3426   0016B4  EF5E  F00B         	goto	u471
  3427   0016B8  EF60  F00B         	goto	u470
  3428   0016BC                     u471:
  3429   0016BC  EF26  F00B         	goto	l1711
  3430   0016C0                     u470:
  3431   0016C0                     
  3432                           ;drivers/scr/API_MRF24J40.c: 564:     mrf24_data_config.sequence_number = (0X01);
  3433   0016C0  0E01               	movlw	1
  3434   0016C2  6E32               	movwf	(_mrf24_data_config+2)^0,c
  3435                           
  3436                           ;drivers/scr/API_MRF24J40.c: 565:     mrf24_data_config.my_channel = CH_11;
  3437   0016C4  0E03               	movlw	3
  3438   0016C6  6E33               	movwf	(_mrf24_data_config+3)^0,c
  3439   0016C8                     
  3440                           ;drivers/scr/API_MRF24J40.c: 566:     mrf24_data_config.get_new_msg = 0;
  3441   0016C8  6A30               	clrf	_mrf24_data_config^0,c
  3442   0016CA                     
  3443                           ;drivers/scr/API_MRF24J40.c: 567:     mrf24_data_config.put_new_msg = 0;
  3444   0016CA  6A31               	clrf	(_mrf24_data_config+1)^0,c
  3445                           
  3446                           ;drivers/scr/API_MRF24J40.c: 568:     mrf24_data_config.my_panid = (0x1234);
  3447   0016CC  0E12               	movlw	18
  3448   0016CE  6E4D               	movwf	(_mrf24_data_config+29)^0,c
  3449   0016D0  0E34               	movlw	52
  3450   0016D2  6E4C               	movwf	(_mrf24_data_config+28)^0,c
  3451                           
  3452                           ;drivers/scr/API_MRF24J40.c: 569:     mrf24_data_config.my_address = (0x1112);
  3453   0016D4  0E11               	movlw	17
  3454   0016D6  6E4F               	movwf	(_mrf24_data_config+31)^0,c
  3455   0016D8  0E12               	movlw	18
  3456   0016DA  6E4E               	movwf	(_mrf24_data_config+30)^0,c
  3457                           
  3458                           ;drivers/scr/API_MRF24J40.c: 570:     mrf24_data_in.source_address = (0X00);
  3459   0016DC  0E00               	movlw	0
  3460   0016DE  0100               	movlb	0	; () banked
  3461   0016E0  6F63               	movwf	(_mrf24_data_in+3)& (0+255),b
  3462   0016E2  0E00               	movlw	0
  3463   0016E4  6F62               	movwf	(_mrf24_data_in+2)& (0+255),b
  3464                           
  3465                           ;drivers/scr/API_MRF24J40.c: 571:     mrf24_data_in.source_panid = (0X00);
  3466   0016E6  0E00               	movlw	0
  3467   0016E8  6F61               	movwf	(_mrf24_data_in+1)& (0+255),b
  3468   0016EA  0E00               	movlw	0
  3469   0016EC  6F60               	movwf	_mrf24_data_in& (0+255),b
  3470   0016EE                     
  3471                           ; BSR set to: 0
  3472                           ;drivers/scr/API_MRF24J40.c: 572:     mrf24_data_in.tamano_mensaje = (0X00);
  3473   0016EE  6B64               	clrf	(_mrf24_data_in+4)& (0+255),b
  3474   0016F0                     
  3475                           ; BSR set to: 0
  3476                           ;drivers/scr/API_MRF24J40.c: 573:     mrf24_data_in.buffer_entrada[0] = (0X00);
  3477   0016F0  6B66               	clrf	(_mrf24_data_in+6)& (0+255),b
  3478                           
  3479                           ;drivers/scr/API_MRF24J40.c: 574:     mrf24_data_out.destinity_panid = (0X00);
  3480   0016F2  0E00               	movlw	0
  3481   0016F4  6E53               	movwf	(_mrf24_data_out+1)^0,c
  3482   0016F6  0E00               	movlw	0
  3483   0016F8  6E52               	movwf	_mrf24_data_out^0,c
  3484                           
  3485                           ;drivers/scr/API_MRF24J40.c: 575:     mrf24_data_out.destinity_address = (0X00);
  3486   0016FA  0E00               	movlw	0
  3487   0016FC  6E55               	movwf	(_mrf24_data_out+3)^0,c
  3488   0016FE  0E00               	movlw	0
  3489   001700  6E54               	movwf	(_mrf24_data_out+2)^0,c
  3490   001702                     
  3491                           ; BSR set to: 0
  3492                           ;drivers/scr/API_MRF24J40.c: 576:     mrf24_data_out.largo_mensaje = (0X00);
  3493   001702  6A56               	clrf	(_mrf24_data_out+4)^0,c
  3494   001704                     
  3495                           ; BSR set to: 0
  3496                           ;drivers/scr/API_MRF24J40.c: 577:     mrf24_data_out.buffer_salida = ((void*)0);
  3497   001704  6A57               	clrf	(_mrf24_data_out+5)^0,c
  3498   001706                     
  3499                           ; BSR set to: 0
  3500   001706  0012               	return		;funcret
  3501   001708                     __end_of_InicializoVariables:
  3502                           	callstack 0
  3503                           
  3504 ;; *************** function _InicializoPines *****************
  3505 ;; Defined at:
  3506 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;		None
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;		None
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;Total ram usage:        0 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; Hardware stack levels required when called: 2
  3527 ;; This function calls:
  3528 ;;		_SetCSPin
  3529 ;;		_SetResetPin
  3530 ;;		_SetWakePin
  3531 ;; This function is called by:
  3532 ;;		_MRF24J40Init
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text15
  3537   001BB6                     __ptext15:
  3538                           	callstack 0
  3539   001BB6                     _InicializoPines:
  3540                           	callstack 27
  3541   001BB6                     
  3542                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  3543   001BB6  0E01               	movlw	1
  3544   001BB8  EC14  F00E         	call	_SetCSPin
  3545                           
  3546                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  3547   001BBC  0E01               	movlw	1
  3548   001BBE  ECF8  F00D         	call	_SetWakePin
  3549                           
  3550                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  3551   001BC2  0E00               	movlw	0
  3552   001BC4  ECFF  F00D         	call	_SetResetPin
  3553   001BC8  0012               	return		;funcret
  3554   001BCA                     __end_of_InicializoPines:
  3555                           	callstack 0
  3556                           
  3557 ;; *************** function _SetWakePin *****************
  3558 ;; Defined at:
  3559 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  estado          1    wreg     _Bool 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;  estado          1    0[COMRAM] _Bool 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  1    wreg      void 
  3566 ;; Registers used:
  3567 ;;		wreg
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:        1 bytes
  3578 ;; Hardware stack levels used: 1
  3579 ;; Hardware stack levels required when called: 1
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_InicializoPines
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text16
  3588   001BF0                     __ptext16:
  3589                           	callstack 0
  3590   001BF0                     _SetWakePin:
  3591                           	callstack 27
  3592                           
  3593                           ;incstack = 0
  3594                           ;SetWakePin@estado stored from wreg
  3595   001BF0  6E01               	movwf	SetWakePin@estado^0,c
  3596   001BF2                     
  3597                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  3598   001BF2  B001               	btfsc	SetWakePin@estado^0,0,c
  3599   001BF4  D002               	bra	u45
  3600   001BF6  9E8B               	bcf	139,7,c	;volatile
  3601   001BF8  D001               	bra	u46
  3602   001BFA                     u45:
  3603   001BFA  8E8B               	bsf	139,7,c	;volatile
  3604   001BFC                     u46:
  3605   001BFC  0012               	return		;funcret
  3606   001BFE                     __end_of_SetWakePin:
  3607                           	callstack 0
  3608                           
  3609 ;; *************** function _SetResetPin *****************
  3610 ;; Defined at:
  3611 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;  estado          1    wreg     _Bool 
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;  estado          1    0[COMRAM] _Bool 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;Total ram usage:        1 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; Hardware stack levels required when called: 1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		_InicializoPines
  3636 ;;		_MRF24J40Init
  3637 ;; This function uses a non-reentrant model
  3638 ;;
  3639                           
  3640                           	psect	text17
  3641   001BFE                     __ptext17:
  3642                           	callstack 0
  3643   001BFE                     _SetResetPin:
  3644                           	callstack 28
  3645                           
  3646                           ;incstack = 0
  3647                           ;SetResetPin@estado stored from wreg
  3648   001BFE  6E01               	movwf	SetResetPin@estado^0,c
  3649   001C00                     
  3650                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  3651   001C00  B001               	btfsc	SetResetPin@estado^0,0,c
  3652   001C02  D002               	bra	u55
  3653   001C04  988C               	bcf	140,4,c	;volatile
  3654   001C06  D001               	bra	u56
  3655   001C08                     u55:
  3656   001C08  888C               	bsf	140,4,c	;volatile
  3657   001C0A                     u56:
  3658   001C0A  0012               	return		;funcret
  3659   001C0C                     __end_of_SetResetPin:
  3660                           	callstack 0
  3661                           
  3662 ;; *************** function _GetShortAddr *****************
  3663 ;; Defined at:
  3664 ;;		line 601 in file "drivers/scr/API_MRF24J40.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;  reg_address     1    wreg     unsigned char 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  reg_address     1    3[COMRAM] unsigned char 
  3669 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      unsigned char 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;Total ram usage:        2 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 3
  3686 ;; This function calls:
  3687 ;;		_ReadByteSPIPort
  3688 ;;		_SetCSPin
  3689 ;;		_WriteByteSPIPort
  3690 ;; This function is called by:
  3691 ;;		_MRF24J40Init
  3692 ;;		_MRF24ReciboPaquete
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text18
  3697   001AEA                     __ptext18:
  3698                           	callstack 0
  3699   001AEA                     _GetShortAddr:
  3700                           	callstack 26
  3701                           
  3702                           ;incstack = 0
  3703                           ;GetShortAddr@reg_address stored from wreg
  3704   001AEA  6E04               	movwf	GetShortAddr@reg_address^0,c
  3705   001AEC                     
  3706                           ;drivers/scr/API_MRF24J40.c: 604:     reg_address = (uint8_t) (reg_address << (0X01)) & 
      +                          (0x7E);
  3707   001AEC  5004               	movf	GetShortAddr@reg_address^0,w,c
  3708   001AEE  2404               	addwf	GetShortAddr@reg_address^0,w,c
  3709   001AF0  0B7E               	andlw	126
  3710   001AF2  6E04               	movwf	GetShortAddr@reg_address^0,c
  3711   001AF4                     
  3712                           ;drivers/scr/API_MRF24J40.c: 605:     SetCSPin(0);
  3713   001AF4  0E00               	movlw	0
  3714   001AF6  EC14  F00E         	call	_SetCSPin
  3715   001AFA                     
  3716                           ;drivers/scr/API_MRF24J40.c: 606:     WriteByteSPIPort(reg_address);
  3717   001AFA  5004               	movf	GetShortAddr@reg_address^0,w,c
  3718   001AFC  EC2C  F00E         	call	_WriteByteSPIPort
  3719   001B00                     
  3720                           ;drivers/scr/API_MRF24J40.c: 607:     leido_spi = ReadByteSPIPort();
  3721   001B00  EC31  F00E         	call	_ReadByteSPIPort	;wreg free
  3722   001B04  6E03               	movwf	GetShortAddr@leido_spi^0,c
  3723   001B06                     
  3724                           ;drivers/scr/API_MRF24J40.c: 608:     SetCSPin(1);
  3725   001B06  0E01               	movlw	1
  3726   001B08  EC14  F00E         	call	_SetCSPin
  3727   001B0C                     
  3728                           ;drivers/scr/API_MRF24J40.c: 609:  return leido_spi;
  3729   001B0C  5003               	movf	GetShortAddr@leido_spi^0,w,c
  3730   001B0E  0012               	return		;funcret
  3731   001B10                     __end_of_GetShortAddr:
  3732                           	callstack 0
  3733                           
  3734 ;; *************** function _WriteByteSPIPort *****************
  3735 ;; Defined at:
  3736 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  dato            1    wreg     unsigned char 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  dato            1    1[COMRAM] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3754 ;;Total ram usage:        1 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 2
  3757 ;; This function calls:
  3758 ;;		_SPIWriteByte
  3759 ;; This function is called by:
  3760 ;;		_SetShortAddr
  3761 ;;		_GetShortAddr
  3762 ;;		_SetLongAddr
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           	psect	text19
  3767   001C58                     __ptext19:
  3768                           	callstack 0
  3769   001C58                     _WriteByteSPIPort:
  3770                           	callstack 26
  3771                           
  3772                           ;incstack = 0
  3773                           ;WriteByteSPIPort@dato stored from wreg
  3774   001C58  6E02               	movwf	WriteByteSPIPort@dato^0,c
  3775   001C5A                     
  3776                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  3777   001C5A  5002               	movf	WriteByteSPIPort@dato^0,w,c
  3778   001C5C  ECB8  F00D         	call	_SPIWriteByte
  3779   001C60  0012               	return		;funcret
  3780   001C62                     __end_of_WriteByteSPIPort:
  3781                           	callstack 0
  3782                           
  3783 ;; *************** function _GetLongAddr *****************
  3784 ;; Defined at:
  3785 ;;		line 632 in file "drivers/scr/API_MRF24J40.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  reg_address     2    5[COMRAM] unsigned short 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;  respuesta       1    9[COMRAM] unsigned char 
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      unsigned char 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0, cstack
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3799 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3801 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3802 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3803 ;;Total ram usage:        5 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 4
  3806 ;; This function calls:
  3807 ;;		_ReadByteSPIPort
  3808 ;;		_SetCSPin
  3809 ;;		_Write2ByteSPIPort
  3810 ;; This function is called by:
  3811 ;;		_MRF24J40Init
  3812 ;;		_MRF24ReciboPaquete
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text20
  3817   00190E                     __ptext20:
  3818                           	callstack 0
  3819   00190E                     _GetLongAddr:
  3820                           	callstack 25
  3821   00190E                     
  3822                           ;drivers/scr/API_MRF24J40.c: 634:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 635:  
      +                             reg_address = (reg_address << (0X05)) | (0X8000);
  3823   00190E  C006  F008         	movff	GetLongAddr@reg_address,??_GetLongAddr
  3824   001912  C007  F009         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  3825   001916  0E05               	movlw	5
  3826   001918                     u515:
  3827   001918  90D8               	bcf	status,0,c
  3828   00191A  3608               	rlcf	??_GetLongAddr^0,f,c
  3829   00191C  3609               	rlcf	(??_GetLongAddr+1)^0,f,c
  3830   00191E  2EE8               	decfsz	wreg,f,c
  3831   001920  EF8C  F00C         	goto	u515
  3832   001924  0E00               	movlw	0
  3833   001926  1008               	iorwf	??_GetLongAddr^0,w,c
  3834   001928  6E06               	movwf	GetLongAddr@reg_address^0,c
  3835   00192A  0E80               	movlw	128
  3836   00192C  1009               	iorwf	(??_GetLongAddr+1)^0,w,c
  3837   00192E  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3838   001930                     
  3839                           ;drivers/scr/API_MRF24J40.c: 636:     SetCSPin(0);
  3840   001930  0E00               	movlw	0
  3841   001932  EC14  F00E         	call	_SetCSPin
  3842   001936                     
  3843                           ;drivers/scr/API_MRF24J40.c: 637:     Write2ByteSPIPort(reg_address);
  3844   001936  C006  F004         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  3845   00193A  C007  F005         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3846   00193E  EC06  F00E         	call	_Write2ByteSPIPort	;wreg free
  3847   001942                     
  3848                           ;drivers/scr/API_MRF24J40.c: 638:  respuesta = ReadByteSPIPort();
  3849   001942  EC31  F00E         	call	_ReadByteSPIPort	;wreg free
  3850   001946  6E0A               	movwf	GetLongAddr@respuesta^0,c
  3851   001948                     
  3852                           ;drivers/scr/API_MRF24J40.c: 639:     SetCSPin(1);
  3853   001948  0E01               	movlw	1
  3854   00194A  EC14  F00E         	call	_SetCSPin
  3855   00194E                     
  3856                           ;drivers/scr/API_MRF24J40.c: 640:  return respuesta;
  3857   00194E  500A               	movf	GetLongAddr@respuesta^0,w,c
  3858   001950  0012               	return		;funcret
  3859   001952                     __end_of_GetLongAddr:
  3860                           	callstack 0
  3861                           
  3862 ;; *************** function _Write2ByteSPIPort *****************
  3863 ;; Defined at:
  3864 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;  dato            2    3[COMRAM] unsigned short 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, status,2, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3878 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;Total ram usage:        2 bytes
  3883 ;; Hardware stack levels used: 1
  3884 ;; Hardware stack levels required when called: 3
  3885 ;; This function calls:
  3886 ;;		_SPIWrite2Byte
  3887 ;; This function is called by:
  3888 ;;		_SetLongAddr
  3889 ;;		_GetLongAddr
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text21
  3894   001C0C                     __ptext21:
  3895                           	callstack 0
  3896   001C0C                     _Write2ByteSPIPort:
  3897                           	callstack 25
  3898   001C0C                     
  3899                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  3900   001C0C  C004  F002         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  3901   001C10  C005  F003         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  3902   001C14  EC0D  F00E         	call	_SPIWrite2Byte	;wreg free
  3903   001C18  0012               	return		;funcret
  3904   001C1A                     __end_of_Write2ByteSPIPort:
  3905                           	callstack 0
  3906                           
  3907 ;; *************** function _SPIWrite2Byte *****************
  3908 ;; Defined at:
  3909 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  dato            2    1[COMRAM] unsigned short 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3923 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;Total ram usage:        2 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 2
  3930 ;; This function calls:
  3931 ;;		_SPIWriteByte
  3932 ;; This function is called by:
  3933 ;;		_Write2ByteSPIPort
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text22
  3938   001C1A                     __ptext22:
  3939                           	callstack 0
  3940   001C1A                     _SPIWrite2Byte:
  3941                           	callstack 25
  3942   001C1A                     
  3943                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  3944   001C1A  5003               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  3945   001C1C  ECB8  F00D         	call	_SPIWriteByte
  3946                           
  3947                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  3948   001C20  5002               	movf	SPIWrite2Byte@dato^0,w,c
  3949   001C22  ECB8  F00D         	call	_SPIWriteByte
  3950   001C26  0012               	return		;funcret
  3951   001C28                     __end_of_SPIWrite2Byte:
  3952                           	callstack 0
  3953                           
  3954 ;; *************** function _SPIWriteByte *****************
  3955 ;; Defined at:
  3956 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  dato            1    wreg     unsigned char 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  dato            1    0[COMRAM] unsigned char 
  3961 ;; Return value:  Size  Location     Type
  3962 ;;                  1    wreg      void 
  3963 ;; Registers used:
  3964 ;;		wreg
  3965 ;; Tracked objects:
  3966 ;;		On entry : 0/0
  3967 ;;		On exit  : 0/0
  3968 ;;		Unchanged: 0/0
  3969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3973 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3974 ;;Total ram usage:        1 bytes
  3975 ;; Hardware stack levels used: 1
  3976 ;; Hardware stack levels required when called: 1
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_WriteByteSPIPort
  3981 ;;		_SPIWrite2Byte
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text23
  3986   001B70                     __ptext23:
  3987                           	callstack 0
  3988   001B70                     _SPIWriteByte:
  3989                           	callstack 26
  3990                           
  3991                           ;incstack = 0
  3992                           ;SPIWriteByte@dato stored from wreg
  3993   001B70  6E01               	movwf	SPIWriteByte@dato^0,c
  3994   001B72                     
  3995                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  3996   001B72  969E               	bcf	158,3,c	;volatile
  3997   001B74                     
  3998                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  3999   001B74  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  4000   001B78                     l180:
  4001   001B78  A69E               	btfss	158,3,c	;volatile
  4002   001B7A  EFC1  F00D         	goto	u421
  4003   001B7E  EFC3  F00D         	goto	u420
  4004   001B82                     u421:
  4005   001B82  EFBC  F00D         	goto	l180
  4006   001B86                     u420:
  4007   001B86  0012               	return		;funcret
  4008   001B88                     __end_of_SPIWriteByte:
  4009                           	callstack 0
  4010                           
  4011 ;; *************** function _SetCSPin *****************
  4012 ;; Defined at:
  4013 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  estado          1    wreg     _Bool 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  estado          1    0[COMRAM] _Bool 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4031 ;;Total ram usage:        1 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 1
  4034 ;; This function calls:
  4035 ;;		Nothing
  4036 ;; This function is called by:
  4037 ;;		_InicializoPines
  4038 ;;		_SetShortAddr
  4039 ;;		_GetShortAddr
  4040 ;;		_SetLongAddr
  4041 ;;		_GetLongAddr
  4042 ;; This function uses a non-reentrant model
  4043 ;;
  4044                           
  4045                           	psect	text24
  4046   001C28                     __ptext24:
  4047                           	callstack 0
  4048   001C28                     _SetCSPin:
  4049                           	callstack 27
  4050                           
  4051                           ;incstack = 0
  4052                           ;SetCSPin@estado stored from wreg
  4053   001C28  6E01               	movwf	SetCSPin@estado^0,c
  4054   001C2A                     
  4055                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  4056   001C2A  B001               	btfsc	SetCSPin@estado^0,0,c
  4057   001C2C  D002               	bra	u435
  4058   001C2E  9C8B               	bcf	139,6,c	;volatile
  4059   001C30  D001               	bra	u436
  4060   001C32                     u435:
  4061   001C32  8C8B               	bsf	139,6,c	;volatile
  4062   001C34                     u436:
  4063   001C34  0012               	return		;funcret
  4064   001C36                     __end_of_SetCSPin:
  4065                           	callstack 0
  4066                           
  4067 ;; *************** function _ReadByteSPIPort *****************
  4068 ;; Defined at:
  4069 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  4070 ;; Parameters:    Size  Location     Type
  4071 ;;		None
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      unsigned char 
  4076 ;; Registers used:
  4077 ;;		wreg, status,2, cstack
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;Total ram usage:        0 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 2
  4090 ;; This function calls:
  4091 ;;		_SPIRead
  4092 ;; This function is called by:
  4093 ;;		_GetShortAddr
  4094 ;;		_GetLongAddr
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text25
  4099   001C62                     __ptext25:
  4100                           	callstack 0
  4101   001C62                     _ReadByteSPIPort:
  4102                           	callstack 26
  4103   001C62                     
  4104                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  4105   001C62  ECD0  F00D         	call	_SPIRead	;wreg free
  4106   001C66  0012               	return		;funcret
  4107   001C68                     __end_of_ReadByteSPIPort:
  4108                           	callstack 0
  4109                           
  4110 ;; *************** function _SPIRead *****************
  4111 ;; Defined at:
  4112 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      unsigned char 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used: 1
  4132 ;; Hardware stack levels required when called: 1
  4133 ;; This function calls:
  4134 ;;		Nothing
  4135 ;; This function is called by:
  4136 ;;		_ReadByteSPIPort
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text26
  4141   001BA0                     __ptext26:
  4142                           	callstack 0
  4143   001BA0                     _SPIRead:
  4144                           	callstack 26
  4145   001BA0                     
  4146                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  4147   001BA0  9EC6               	bcf	198,7,c	;volatile
  4148                           
  4149                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  4150   001BA2  6AC9               	clrf	201,c	;volatile
  4151   001BA4                     l189:
  4152   001BA4  A0C7               	btfss	199,0,c	;volatile
  4153   001BA6  EFD7  F00D         	goto	u441
  4154   001BAA  EFD9  F00D         	goto	u440
  4155   001BAE                     u441:
  4156   001BAE  EFD2  F00D         	goto	l189
  4157   001BB2                     u440:
  4158   001BB2                     
  4159                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  4160   001BB2  50C9               	movf	201,w,c	;volatile
  4161   001BB4  0012               	return		;funcret
  4162   001BB6                     __end_of_SPIRead:
  4163                           	callstack 0
  4164                           
  4165 ;; *************** function _DelayReset *****************
  4166 ;; Defined at:
  4167 ;;		line 68 in file "drivers/scr/API_delay.c"
  4168 ;; Parameters:    Size  Location     Type
  4169 ;;  delay           1    0[COMRAM] PTR struct .
  4170 ;;		 -> MRF24J40Init@delay_time_out(9), 
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  1    wreg      void 
  4175 ;; Registers used:
  4176 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4182 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4186 ;;Total ram usage:        1 bytes
  4187 ;; Hardware stack levels used: 1
  4188 ;; Hardware stack levels required when called: 1
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_MRF24J40Init
  4193 ;; This function uses a non-reentrant model
  4194 ;;
  4195                           
  4196                           	psect	text27
  4197   001B10                     __ptext27:
  4198                           	callstack 0
  4199   001B10                     _DelayReset:
  4200                           	callstack 28
  4201   001B10                     
  4202                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  4203   001B10  5001               	movf	DelayReset@delay^0,w,c
  4204   001B12  6ED9               	movwf	fsr2l,c
  4205   001B14  6ADA               	clrf	fsr2h,c
  4206   001B16  C058  FFDE         	movff	_timeStamp,postinc2
  4207   001B1A  C059  FFDE         	movff	_timeStamp+1,postinc2
  4208   001B1E  C05A  FFDE         	movff	_timeStamp+2,postinc2
  4209   001B22  C05B  FFDE         	movff	_timeStamp+3,postinc2
  4210   001B26                     
  4211                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  4212   001B26  5001               	movf	DelayReset@delay^0,w,c
  4213   001B28  6ED9               	movwf	fsr2l,c
  4214   001B2A  6ADA               	clrf	fsr2h,c
  4215   001B2C  0E08               	movlw	8
  4216   001B2E  26D9               	addwf	fsr2l,f,c
  4217   001B30  0E01               	movlw	1
  4218   001B32  6EDF               	movwf	indf2,c
  4219   001B34  0012               	return		;funcret
  4220   001B36                     __end_of_DelayReset:
  4221                           	callstack 0
  4222                           
  4223 ;; *************** function _MRF24IsNewMsg *****************
  4224 ;; Defined at:
  4225 ;;		line 756 in file "drivers/scr/API_MRF24J40.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;		None
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;		None
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      _Bool 
  4232 ;; Registers used:
  4233 ;;		wreg, status,2, cstack
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;Total ram usage:        0 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; Hardware stack levels required when called: 2
  4246 ;; This function calls:
  4247 ;;		_IsMRF24Interrup
  4248 ;; This function is called by:
  4249 ;;		_main
  4250 ;; This function uses a non-reentrant model
  4251 ;;
  4252                           
  4253                           	psect	text28
  4254   001B56                     __ptext28:
  4255                           	callstack 0
  4256   001B56                     _MRF24IsNewMsg:
  4257                           	callstack 28
  4258   001B56                     
  4259                           ;drivers/scr/API_MRF24J40.c: 758:  return !IsMRF24Interrup();
  4260   001B56  ECE5  F00D         	call	_IsMRF24Interrup	;wreg free
  4261   001B5A  0900               	iorlw	0
  4262   001B5C  B4D8               	btfsc	status,2,c
  4263   001B5E  EFB3  F00D         	goto	u201
  4264   001B62  EFB6  F00D         	goto	u200
  4265   001B66                     u201:
  4266   001B66  0E01               	movlw	1
  4267   001B68  EFB7  F00D         	goto	u210
  4268   001B6C                     u200:
  4269   001B6C  0E00               	movlw	0
  4270   001B6E                     u210:
  4271   001B6E  0012               	return		;funcret
  4272   001B70                     __end_of_MRF24IsNewMsg:
  4273                           	callstack 0
  4274                           
  4275 ;; *************** function _IsMRF24Interrup *****************
  4276 ;; Defined at:
  4277 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      _Bool 
  4284 ;; Registers used:
  4285 ;;		wreg
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;Total ram usage:        0 bytes
  4296 ;; Hardware stack levels used: 1
  4297 ;; Hardware stack levels required when called: 1
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_MRF24IsNewMsg
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305                           	psect	text29
  4306   001BCA                     __ptext29:
  4307                           	callstack 0
  4308   001BCA                     _IsMRF24Interrup:
  4309                           	callstack 28
  4310   001BCA                     
  4311                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  4312   001BCA  B081               	btfsc	129,0,c	;volatile
  4313   001BCC  EFEA  F00D         	goto	u71
  4314   001BD0  EFED  F00D         	goto	u70
  4315   001BD4                     u71:
  4316   001BD4  0E01               	movlw	1
  4317   001BD6  EFEE  F00D         	goto	u76
  4318   001BDA                     u70:
  4319   001BDA  0E00               	movlw	0
  4320   001BDC                     u76:
  4321   001BDC  0012               	return		;funcret
  4322   001BDE                     __end_of_IsMRF24Interrup:
  4323                           	callstack 0
  4324                           
  4325 ;; *************** function _MRF24GetMensajeEntrada *****************
  4326 ;; Defined at:
  4327 ;;		line 788 in file "drivers/scr/API_MRF24J40.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    0[COMRAM] PTR unsigned char 
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;Total ram usage:        2 bytes
  4346 ;; Hardware stack levels used: 1
  4347 ;; Hardware stack levels required when called: 1
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_main
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           	psect	text30
  4356   001C68                     __ptext30:
  4357                           	callstack 0
  4358   001C68                     _MRF24GetMensajeEntrada:
  4359                           	callstack 29
  4360   001C68                     
  4361                           ;drivers/scr/API_MRF24J40.c: 790:  return mrf24_data_in.buffer_entrada;
  4362   001C68  0E60               	movlw	_mrf24_data_in& (0+255)
  4363   001C6A  0F06               	addlw	6
  4364   001C6C  0012               	return		;funcret
  4365   001C6E                     __end_of_MRF24GetMensajeEntrada:
  4366                           	callstack 0
  4367                           
  4368 ;; *************** function _DebounceFSMUpdate *****************
  4369 ;; Defined at:
  4370 ;;		line 34 in file "drivers/scr/API_debounce.c"
  4371 ;; Parameters:    Size  Location     Type
  4372 ;;  antirrebote_    1   14[COMRAM] PTR struct .
  4373 ;;		 -> main@boton1(11), 
  4374 ;;  estado_pin      1   15[COMRAM] _Bool 
  4375 ;; Auto vars:     Size  Location     Type
  4376 ;;		None
  4377 ;; Return value:  Size  Location     Type
  4378 ;;                  1    wreg      enum E3287
  4379 ;; Registers used:
  4380 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4381 ;; Tracked objects:
  4382 ;;		On entry : 0/0
  4383 ;;		On exit  : 0/0
  4384 ;;		Unchanged: 0/0
  4385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4388 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4389 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4390 ;;Total ram usage:        4 bytes
  4391 ;; Hardware stack levels used: 1
  4392 ;; Hardware stack levels required when called: 3
  4393 ;; This function calls:
  4394 ;;		_DebounceFSMInit
  4395 ;;		_DelayRead
  4396 ;; This function is called by:
  4397 ;;		_main
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text31
  4402   0013FA                     __ptext31:
  4403                           	callstack 0
  4404   0013FA                     _DebounceFSMUpdate:
  4405                           	callstack 27
  4406   0013FA                     
  4407                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  4408   0013FA  EF77  F00A         	goto	l2037
  4409   0013FE                     l1985:
  4410                           
  4411                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  4412   0013FE  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4413   001400  A4D8               	btfss	status,2,c
  4414   001402  EF05  F00A         	goto	u591
  4415   001406  EF07  F00A         	goto	u590
  4416   00140A                     u591:
  4417   00140A  EF99  F00A         	goto	l2039
  4418   00140E                     u590:
  4419   00140E                     
  4420                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  4421   00140E  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4422   001410  6ED9               	movwf	fsr2l,c
  4423   001412  6ADA               	clrf	fsr2h,c
  4424   001414  0E01               	movlw	1
  4425   001416  26D9               	addwf	fsr2l,f,c
  4426   001418  0E01               	movlw	1
  4427   00141A  6EDF               	movwf	indf2,c
  4428   00141C  EF99  F00A         	goto	l2039
  4429   001420                     l1989:
  4430                           
  4431                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4432   001420  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4433   001422  0F02               	addlw	2
  4434   001424  6E02               	movwf	DelayRead@delay^0,c
  4435   001426  EC84  F00B         	call	_DelayRead	;wreg free
  4436   00142A  0900               	iorlw	0
  4437   00142C  B4D8               	btfsc	status,2,c
  4438   00142E  EF1B  F00A         	goto	u601
  4439   001432  EF1D  F00A         	goto	u600
  4440   001436                     u601:
  4441   001436  EF99  F00A         	goto	l2039
  4442   00143A                     u600:
  4443   00143A                     
  4444                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  4445   00143A  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4446   00143C  A4D8               	btfss	status,2,c
  4447   00143E  EF23  F00A         	goto	u611
  4448   001442  EF25  F00A         	goto	u610
  4449   001446                     u611:
  4450   001446  EF2F  F00A         	goto	l2001
  4451   00144A                     u610:
  4452   00144A                     
  4453                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4454   00144A  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4455   00144C  6ED9               	movwf	fsr2l,c
  4456   00144E  6ADA               	clrf	fsr2h,c
  4457   001450  0E01               	movlw	1
  4458   001452  26D9               	addwf	fsr2l,f,c
  4459   001454  0E02               	movlw	2
  4460   001456  6EDF               	movwf	indf2,c
  4461   001458                     
  4462                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  4463   001458  0E01               	movlw	1
  4464   00145A  EF9A  F00A         	goto	l377
  4465   00145E                     l2001:
  4466                           
  4467                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4468   00145E  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4469   001460  6ED9               	movwf	fsr2l,c
  4470   001462  6ADA               	clrf	fsr2h,c
  4471   001464  0E01               	movlw	1
  4472   001466  26D9               	addwf	fsr2l,f,c
  4473   001468  6ADF               	clrf	indf2,c
  4474   00146A                     l2003:
  4475                           
  4476                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  4477   00146A  0E04               	movlw	4
  4478   00146C  EF9A  F00A         	goto	l377
  4479   001470                     l2007:
  4480                           
  4481                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4482   001470  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4483   001472  0F02               	addlw	2
  4484   001474  6E02               	movwf	DelayRead@delay^0,c
  4485   001476  EC84  F00B         	call	_DelayRead	;wreg free
  4486   00147A  0900               	iorlw	0
  4487   00147C  B4D8               	btfsc	status,2,c
  4488   00147E  EF43  F00A         	goto	u621
  4489   001482  EF45  F00A         	goto	u620
  4490   001486                     u621:
  4491   001486  EF99  F00A         	goto	l2039
  4492   00148A                     u620:
  4493   00148A                     
  4494                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  4495   00148A  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4496   00148C  B4D8               	btfsc	status,2,c
  4497   00148E  EF4B  F00A         	goto	u631
  4498   001492  EF4D  F00A         	goto	u630
  4499   001496                     u631:
  4500   001496  EF56  F00A         	goto	l2019
  4501   00149A                     u630:
  4502   00149A                     
  4503                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4504   00149A  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4505   00149C  6ED9               	movwf	fsr2l,c
  4506   00149E  6ADA               	clrf	fsr2h,c
  4507   0014A0  0E01               	movlw	1
  4508   0014A2  26D9               	addwf	fsr2l,f,c
  4509   0014A4  6ADF               	clrf	indf2,c
  4510   0014A6                     
  4511                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  4512   0014A6  0E02               	movlw	2
  4513   0014A8  EF9A  F00A         	goto	l377
  4514   0014AC                     l2019:
  4515                           
  4516                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4517   0014AC  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4518   0014AE  6ED9               	movwf	fsr2l,c
  4519   0014B0  6ADA               	clrf	fsr2h,c
  4520   0014B2  0E01               	movlw	1
  4521   0014B4  26D9               	addwf	fsr2l,f,c
  4522   0014B6  0E02               	movlw	2
  4523   0014B8  6EDF               	movwf	indf2,c
  4524   0014BA  EF35  F00A         	goto	l2003
  4525   0014BE                     l2025:
  4526                           
  4527                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  4528   0014BE  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4529   0014C0  B4D8               	btfsc	status,2,c
  4530   0014C2  EF65  F00A         	goto	u641
  4531   0014C6  EF67  F00A         	goto	u640
  4532   0014CA                     u641:
  4533   0014CA  EF99  F00A         	goto	l2039
  4534   0014CE                     u640:
  4535   0014CE                     
  4536                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  4537   0014CE  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4538   0014D0  6ED9               	movwf	fsr2l,c
  4539   0014D2  6ADA               	clrf	fsr2h,c
  4540   0014D4  0E01               	movlw	1
  4541   0014D6  26D9               	addwf	fsr2l,f,c
  4542   0014D8  0E03               	movlw	3
  4543   0014DA  6EDF               	movwf	indf2,c
  4544   0014DC  EF99  F00A         	goto	l2039
  4545   0014E0                     l2029:
  4546                           
  4547                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  4548   0014E0  C00F  F006         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  4549   0014E4  EC21  F00D         	call	_DebounceFSMInit	;wreg free
  4550   0014E8                     
  4551                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  4552   0014E8  0E00               	movlw	0
  4553   0014EA  EF9A  F00A         	goto	l377
  4554   0014EE                     l2037:
  4555   0014EE  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4556   0014F0  6ED9               	movwf	fsr2l,c
  4557   0014F2  6ADA               	clrf	fsr2h,c
  4558   0014F4  0E01               	movlw	1
  4559   0014F6  26D9               	addwf	fsr2l,f,c
  4560   0014F8  50DF               	movf	indf2,w,c
  4561   0014FA  6E11               	movwf	??_DebounceFSMUpdate^0,c
  4562   0014FC  6A12               	clrf	(??_DebounceFSMUpdate+1)^0,c
  4563                           
  4564                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4565                           ; Switch size 1, requested type "simple"
  4566                           ; Number of cases is 1, Range of values is 0 to 0
  4567                           ; switch strategies available:
  4568                           ; Name         Instructions Cycles
  4569                           ; simple_byte            4     3 (average)
  4570                           ;	Chosen strategy is simple_byte
  4571   0014FE  5012               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  4572   001500  0A00               	xorlw	0	; case 0
  4573   001502  B4D8               	btfsc	status,2,c
  4574   001504  EF86  F00A         	goto	l2165
  4575   001508  EF70  F00A         	goto	l2029
  4576   00150C                     l2165:
  4577                           
  4578                           ; Switch size 1, requested type "simple"
  4579                           ; Number of cases is 4, Range of values is 0 to 3
  4580                           ; switch strategies available:
  4581                           ; Name         Instructions Cycles
  4582                           ; simple_byte           13     7 (average)
  4583                           ;	Chosen strategy is simple_byte
  4584   00150C  5011               	movf	??_DebounceFSMUpdate^0,w,c
  4585   00150E  0A00               	xorlw	0	; case 0
  4586   001510  B4D8               	btfsc	status,2,c
  4587   001512  EFFF  F009         	goto	l1985
  4588   001516  0A01               	xorlw	1	; case 1
  4589   001518  B4D8               	btfsc	status,2,c
  4590   00151A  EF10  F00A         	goto	l1989
  4591   00151E  0A03               	xorlw	3	; case 2
  4592   001520  B4D8               	btfsc	status,2,c
  4593   001522  EF5F  F00A         	goto	l2025
  4594   001526  0A01               	xorlw	1	; case 3
  4595   001528  B4D8               	btfsc	status,2,c
  4596   00152A  EF38  F00A         	goto	l2007
  4597   00152E  EF70  F00A         	goto	l2029
  4598   001532                     l2039:
  4599                           
  4600                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  4601   001532  0E03               	movlw	3
  4602   001534                     l377:
  4603   001534  0012               	return		;funcret
  4604   001536                     __end_of_DebounceFSMUpdate:
  4605                           	callstack 0
  4606                           
  4607 ;; *************** function _DelayRead *****************
  4608 ;; Defined at:
  4609 ;;		line 34 in file "drivers/scr/API_delay.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  delay           1    1[COMRAM] PTR struct .
  4612 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;		None
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      _Bool 
  4617 ;; Registers used:
  4618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4624 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;Total ram usage:       13 bytes
  4629 ;; Hardware stack levels used: 1
  4630 ;; Hardware stack levels required when called: 2
  4631 ;; This function calls:
  4632 ;;		_DelayIsRunning
  4633 ;; This function is called by:
  4634 ;;		_MRF24J40Init
  4635 ;;		_main
  4636 ;;		_DebounceFSMUpdate
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text32
  4641   001708                     __ptext32:
  4642                           	callstack 0
  4643   001708                     _DelayRead:
  4644                           	callstack 27
  4645   001708                     
  4646                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  4647   001708  C002  F001         	movff	DelayRead@delay,DelayIsRunning@delay
  4648   00170C  EC1B  F00E         	call	_DelayIsRunning	;wreg free
  4649   001710  0900               	iorlw	0
  4650   001712  A4D8               	btfss	status,2,c
  4651   001714  EF8E  F00B         	goto	u481
  4652   001718  EF90  F00B         	goto	u480
  4653   00171C                     u481:
  4654   00171C  EFA4  F00B         	goto	l1763
  4655   001720                     u480:
  4656   001720                     
  4657                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  4658   001720  5002               	movf	DelayRead@delay^0,w,c
  4659   001722  6ED9               	movwf	fsr2l,c
  4660   001724  6ADA               	clrf	fsr2h,c
  4661   001726  C058  FFDE         	movff	_timeStamp,postinc2
  4662   00172A  C059  FFDE         	movff	_timeStamp+1,postinc2
  4663   00172E  C05A  FFDE         	movff	_timeStamp+2,postinc2
  4664   001732  C05B  FFDE         	movff	_timeStamp+3,postinc2
  4665   001736                     
  4666                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  4667   001736  5002               	movf	DelayRead@delay^0,w,c
  4668   001738  6ED9               	movwf	fsr2l,c
  4669   00173A  6ADA               	clrf	fsr2h,c
  4670   00173C  0E08               	movlw	8
  4671   00173E  26D9               	addwf	fsr2l,f,c
  4672   001740  0E01               	movlw	1
  4673   001742  6EDF               	movwf	indf2,c
  4674                           
  4675                           ;drivers/scr/API_delay.c: 40:  } else {
  4676   001744  EFD8  F00B         	goto	l1771
  4677   001748                     l1763:
  4678                           
  4679                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  4680   001748  5002               	movf	DelayRead@delay^0,w,c
  4681   00174A  6ED9               	movwf	fsr2l,c
  4682   00174C  6ADA               	clrf	fsr2h,c
  4683   00174E  0E04               	movlw	4
  4684   001750  26D9               	addwf	fsr2l,f,c
  4685   001752  5002               	movf	DelayRead@delay^0,w,c
  4686   001754  6EE1               	movwf	fsr1l,c
  4687   001756  6AE2               	clrf	fsr1h,c
  4688   001758  CFE6 F007          	movff	postinc1,??_DelayRead+4
  4689   00175C  CFE6 F008          	movff	postinc1,??_DelayRead+5
  4690   001760  CFE6 F009          	movff	postinc1,??_DelayRead+6
  4691   001764  CFE6 F00A          	movff	postinc1,??_DelayRead+7
  4692   001768  5007               	movf	(??_DelayRead+4)^0,w,c
  4693   00176A  5C58               	subwf	_timeStamp^0,w,c
  4694   00176C  6E0B               	movwf	(??_DelayRead+8)^0,c
  4695   00176E  5008               	movf	(??_DelayRead+5)^0,w,c
  4696   001770  5859               	subwfb	(_timeStamp+1)^0,w,c
  4697   001772  6E0C               	movwf	(??_DelayRead+9)^0,c
  4698   001774  5009               	movf	(??_DelayRead+6)^0,w,c
  4699   001776  585A               	subwfb	(_timeStamp+2)^0,w,c
  4700   001778  6E0D               	movwf	(??_DelayRead+10)^0,c
  4701   00177A  500A               	movf	(??_DelayRead+7)^0,w,c
  4702   00177C  585B               	subwfb	(_timeStamp+3)^0,w,c
  4703   00177E  6E0E               	movwf	(??_DelayRead+11)^0,c
  4704   001780  50DE               	movf	postinc2,w,c
  4705   001782  5C0B               	subwf	(??_DelayRead+8)^0,w,c
  4706   001784  50DE               	movf	postinc2,w,c
  4707   001786  580C               	subwfb	(??_DelayRead+9)^0,w,c
  4708   001788  50DE               	movf	postinc2,w,c
  4709   00178A  580D               	subwfb	(??_DelayRead+10)^0,w,c
  4710   00178C  50DE               	movf	postinc2,w,c
  4711   00178E  580E               	subwfb	(??_DelayRead+11)^0,w,c
  4712   001790  A0D8               	btfss	status,0,c
  4713   001792  EFCD  F00B         	goto	u491
  4714   001796  EFCF  F00B         	goto	u490
  4715   00179A                     u491:
  4716   00179A  EFD8  F00B         	goto	l1771
  4717   00179E                     u490:
  4718   00179E                     
  4719                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  4720   00179E  5002               	movf	DelayRead@delay^0,w,c
  4721   0017A0  6ED9               	movwf	fsr2l,c
  4722   0017A2  6ADA               	clrf	fsr2h,c
  4723   0017A4  0E08               	movlw	8
  4724   0017A6  26D9               	addwf	fsr2l,f,c
  4725   0017A8  6ADF               	clrf	indf2,c
  4726   0017AA                     
  4727                           ;drivers/scr/API_delay.c: 45:    return 1;
  4728   0017AA  0E01               	movlw	1
  4729   0017AC  EFD9  F00B         	goto	l351
  4730   0017B0                     l1771:
  4731                           
  4732                           ;drivers/scr/API_delay.c: 48:  return 0;
  4733   0017B0  0E00               	movlw	0
  4734   0017B2                     l351:
  4735   0017B2  0012               	return		;funcret
  4736   0017B4                     __end_of_DelayRead:
  4737                           	callstack 0
  4738                           
  4739 ;; *************** function _DelayIsRunning *****************
  4740 ;; Defined at:
  4741 ;;		line 83 in file "drivers/scr/API_delay.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;  delay           1    0[COMRAM] PTR struct .
  4744 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      _Bool 
  4749 ;; Registers used:
  4750 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4756 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;Total ram usage:        1 bytes
  4761 ;; Hardware stack levels used: 1
  4762 ;; Hardware stack levels required when called: 1
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_DelayRead
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text33
  4771   001C36                     __ptext33:
  4772                           	callstack 0
  4773   001C36                     _DelayIsRunning:
  4774                           	callstack 27
  4775   001C36                     
  4776                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  4777   001C36  5001               	movf	DelayIsRunning@delay^0,w,c
  4778   001C38  6ED9               	movwf	fsr2l,c
  4779   001C3A  6ADA               	clrf	fsr2h,c
  4780   001C3C  0E08               	movlw	8
  4781   001C3E  26D9               	addwf	fsr2l,f,c
  4782   001C40  50DF               	movf	indf2,w,c
  4783   001C42  0012               	return		;funcret
  4784   001C44                     __end_of_DelayIsRunning:
  4785                           	callstack 0
  4786                           
  4787 ;; *************** function _DebounceFSMInit *****************
  4788 ;; Defined at:
  4789 ;;		line 19 in file "drivers/scr/API_debounce.c"
  4790 ;; Parameters:    Size  Location     Type
  4791 ;;  antirrebote_    1    5[COMRAM] PTR struct .
  4792 ;;		 -> main@boton1(11), 
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;		None
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      void 
  4797 ;; Registers used:
  4798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4804 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4808 ;;Total ram usage:        1 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; Hardware stack levels required when called: 2
  4811 ;; This function calls:
  4812 ;;		_DelayInit
  4813 ;; This function is called by:
  4814 ;;		_main
  4815 ;;		_DebounceFSMUpdate
  4816 ;; This function uses a non-reentrant model
  4817 ;;
  4818                           
  4819                           	psect	text34
  4820   001A42                     __ptext34:
  4821                           	callstack 0
  4822   001A42                     _DebounceFSMInit:
  4823                           	callstack 27
  4824   001A42                     
  4825                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  4826   001A42  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4827   001A44  6ED9               	movwf	fsr2l,c
  4828   001A46  6ADA               	clrf	fsr2h,c
  4829   001A48  0E01               	movlw	1
  4830   001A4A  26D9               	addwf	fsr2l,f,c
  4831   001A4C  6ADF               	clrf	indf2,c
  4832   001A4E                     
  4833                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  4834   001A4E  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4835   001A50  0F02               	addlw	2
  4836   001A52  6E01               	movwf	DelayInit@delay^0,c
  4837   001A54  0E28               	movlw	40
  4838   001A56  6E02               	movwf	DelayInit@duration^0,c
  4839   001A58  0E00               	movlw	0
  4840   001A5A  6E03               	movwf	(DelayInit@duration+1)^0,c
  4841   001A5C  0E00               	movlw	0
  4842   001A5E  6E04               	movwf	(DelayInit@duration+2)^0,c
  4843   001A60  0E00               	movlw	0
  4844   001A62  6E05               	movwf	(DelayInit@duration+3)^0,c
  4845   001A64  EC4E  F00D         	call	_DelayInit	;wreg free
  4846   001A68                     
  4847                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  4848   001A68  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4849   001A6A  6ED9               	movwf	fsr2l,c
  4850   001A6C  6ADA               	clrf	fsr2h,c
  4851   001A6E  6ADF               	clrf	indf2,c
  4852   001A70  0012               	return		;funcret
  4853   001A72                     __end_of_DebounceFSMInit:
  4854                           	callstack 0
  4855                           
  4856 ;; *************** function _DelayInit *****************
  4857 ;; Defined at:
  4858 ;;		line 22 in file "drivers/scr/API_delay.c"
  4859 ;; Parameters:    Size  Location     Type
  4860 ;;  delay           1    0[COMRAM] PTR struct .
  4861 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  4862 ;;  duration        4    1[COMRAM] unsigned long 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;		None
  4865 ;; Return value:  Size  Location     Type
  4866 ;;                  1    wreg      void 
  4867 ;; Registers used:
  4868 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4874 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4878 ;;Total ram usage:        5 bytes
  4879 ;; Hardware stack levels used: 1
  4880 ;; Hardware stack levels required when called: 1
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_MRF24J40Init
  4885 ;;		_main
  4886 ;;		_DebounceFSMInit
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text35
  4891   001A9C                     __ptext35:
  4892                           	callstack 0
  4893   001A9C                     _DelayInit:
  4894                           	callstack 28
  4895   001A9C                     
  4896                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  4897   001A9C  5001               	movf	DelayInit@delay^0,w,c
  4898   001A9E  6ED9               	movwf	fsr2l,c
  4899   001AA0  6ADA               	clrf	fsr2h,c
  4900   001AA2  0E04               	movlw	4
  4901   001AA4  26D9               	addwf	fsr2l,f,c
  4902   001AA6  C002  FFDE         	movff	DelayInit@duration,postinc2
  4903   001AAA  C003  FFDE         	movff	DelayInit@duration+1,postinc2
  4904   001AAE  C004  FFDE         	movff	DelayInit@duration+2,postinc2
  4905   001AB2  C005  FFDE         	movff	DelayInit@duration+3,postinc2
  4906                           
  4907                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  4908   001AB6  5001               	movf	DelayInit@delay^0,w,c
  4909   001AB8  6ED9               	movwf	fsr2l,c
  4910   001ABA  6ADA               	clrf	fsr2h,c
  4911   001ABC  0E08               	movlw	8
  4912   001ABE  26D9               	addwf	fsr2l,f,c
  4913   001AC0  6ADF               	clrf	indf2,c
  4914   001AC2  0012               	return		;funcret
  4915   001AC4                     __end_of_DelayInit:
  4916                           	callstack 0
  4917                           
  4918 ;; *************** function _BoardInit *****************
  4919 ;; Defined at:
  4920 ;;		line 21 in file "hardware_config.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4938 ;;Total ram usage:        0 bytes
  4939 ;; Hardware stack levels used: 1
  4940 ;; Hardware stack levels required when called: 2
  4941 ;; This function calls:
  4942 ;;		_SPIInit
  4943 ;; This function is called by:
  4944 ;;		_main
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text36
  4949   0018AC                     __ptext36:
  4950                           	callstack 0
  4951   0018AC                     _BoardInit:
  4952                           	callstack 28
  4953   0018AC                     
  4954                           ;hardware_config.c: 23:     PORTA = 0;
  4955   0018AC  6A80               	clrf	128,c	;volatile
  4956                           
  4957                           ;hardware_config.c: 24:     PORTB = 0;
  4958   0018AE  6A81               	clrf	129,c	;volatile
  4959                           
  4960                           ;hardware_config.c: 25:     PORTC = 0;
  4961   0018B0  6A82               	clrf	130,c	;volatile
  4962                           
  4963                           ;hardware_config.c: 26:     PORTD = 0;
  4964   0018B2  6A83               	clrf	131,c	;volatile
  4965                           
  4966                           ;hardware_config.c: 27:     PORTE = 0;
  4967   0018B4  6A84               	clrf	132,c	;volatile
  4968                           
  4969                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  4970   0018B6  8C93               	bsf	147,6,c	;volatile
  4971                           
  4972                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  4973   0018B8  8E93               	bsf	147,7,c	;volatile
  4974                           
  4975                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  4976   0018BA  9496               	bcf	150,2,c	;volatile
  4977                           
  4978                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  4979   0018BC  9096               	bcf	150,0,c	;volatile
  4980                           
  4981                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  4982   0018BE  9296               	bcf	150,1,c	;volatile
  4983                           
  4984                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  4985   0018C0  8494               	bsf	148,2,c	;volatile
  4986                           
  4987                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  4988   0018C2  848D               	bsf	141,2,c	;volatile
  4989                           
  4990                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  4991   0018C4  808D               	bsf	141,0,c	;volatile
  4992                           
  4993                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  4994   0018C6  828D               	bsf	141,1,c	;volatile
  4995                           
  4996                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  4997   0018C8  8093               	bsf	147,0,c	;volatile
  4998                           
  4999                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  5000   0018CA  9C94               	bcf	148,6,c	;volatile
  5001                           
  5002                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  5003   0018CC  9E94               	bcf	148,7,c	;volatile
  5004                           
  5005                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  5006   0018CE  9895               	bcf	149,4,c	;volatile
  5007                           
  5008                           ;hardware_config.c: 45:     IPEN = 0;
  5009   0018D0  9ED0               	bcf	4048,7,c	;volatile
  5010                           
  5011                           ;hardware_config.c: 46:  GIE = 1;
  5012   0018D2  8EF2               	bsf	4082,7,c	;volatile
  5013                           
  5014                           ;hardware_config.c: 47:  PEIE = 1;
  5015   0018D4  8CF2               	bsf	4082,6,c	;volatile
  5016                           
  5017                           ;hardware_config.c: 48:     INT0E = 0;
  5018   0018D6  98F2               	bcf	4082,4,c	;volatile
  5019                           
  5020                           ;hardware_config.c: 49:  RBIE = 0;
  5021   0018D8  96F2               	bcf	4082,3,c	;volatile
  5022                           
  5023                           ;hardware_config.c: 50:  T0IE = 0;
  5024   0018DA  9AF2               	bcf	4082,5,c	;volatile
  5025                           
  5026                           ;hardware_config.c: 51:  TMR1IE = 1;
  5027   0018DC  809D               	bsf	3997,0,c	;volatile
  5028                           
  5029                           ;hardware_config.c: 52:  TMR2IE = 0;
  5030   0018DE  929D               	bcf	3997,1,c	;volatile
  5031                           
  5032                           ;hardware_config.c: 53:  CCP1IE = 0;
  5033   0018E0  949D               	bcf	3997,2,c	;volatile
  5034                           
  5035                           ;hardware_config.c: 54:  CCP2IE = 0;
  5036   0018E2  90A0               	bcf	4000,0,c	;volatile
  5037                           
  5038                           ;hardware_config.c: 55:  EEIE = 0;
  5039   0018E4  98A0               	bcf	4000,4,c	;volatile
  5040                           
  5041                           ;hardware_config.c: 56:  SSPIE = 0;
  5042   0018E6  969D               	bcf	3997,3,c	;volatile
  5043                           
  5044                           ;hardware_config.c: 57:  BCLIE = 0;
  5045   0018E8  96A0               	bcf	4000,3,c	;volatile
  5046                           
  5047                           ;hardware_config.c: 58:  ADIE = 0;
  5048   0018EA  9C9D               	bcf	3997,6,c	;volatile
  5049                           
  5050                           ;hardware_config.c: 59:  RBIE = 0;
  5051   0018EC  96F2               	bcf	4082,3,c	;volatile
  5052                           
  5053                           ;hardware_config.c: 60:  RCIE = 0;
  5054   0018EE  9A9D               	bcf	3997,5,c	;volatile
  5055   0018F0                     
  5056                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  5057   0018F0  0E72               	movlw	114
  5058   0018F2  6ED3               	movwf	211,c	;volatile
  5059                           
  5060                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  5061   0018F4  0EDF               	movlw	223
  5062   0018F6  6E9B               	movwf	155,c	;volatile
  5063   0018F8                     
  5064                           ;hardware_config.c: 63:     RBPU = 1;
  5065   0018F8  8EF1               	bsf	4081,7,c	;volatile
  5066   0018FA                     
  5067                           ;hardware_config.c: 66:     T1RD16 = 0;
  5068   0018FA  9ECD               	bcf	4045,7,c	;volatile
  5069   0018FC                     
  5070                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  5071   0018FC  88CD               	bsf	4045,4,c	;volatile
  5072   0018FE                     
  5073                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  5074   0018FE  8ACD               	bsf	4045,5,c	;volatile
  5075   001900                     
  5076                           ;hardware_config.c: 69:  T1SYNC = 0;
  5077   001900  94CD               	bcf	4045,2,c	;volatile
  5078   001902                     
  5079                           ;hardware_config.c: 70:  T1OSCEN = 0;
  5080   001902  96CD               	bcf	4045,3,c	;volatile
  5081   001904                     
  5082                           ;hardware_config.c: 71:  TMR1CS = 0;
  5083   001904  92CD               	bcf	4045,1,c	;volatile
  5084   001906                     
  5085                           ;hardware_config.c: 72:  TMR1ON = 1;
  5086   001906  80CD               	bsf	4045,0,c	;volatile
  5087   001908                     
  5088                           ;hardware_config.c: 75:     SPIInit();
  5089   001908  ECC4  F00D         	call	_SPIInit	;wreg free
  5090   00190C  0012               	return		;funcret
  5091   00190E                     __end_of_BoardInit:
  5092                           	callstack 0
  5093                           
  5094 ;; *************** function _SPIInit *****************
  5095 ;; Defined at:
  5096 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;		None
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;		None
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, status,2
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;Total ram usage:        0 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; Hardware stack levels required when called: 1
  5117 ;; This function calls:
  5118 ;;		Nothing
  5119 ;; This function is called by:
  5120 ;;		_BoardInit
  5121 ;; This function uses a non-reentrant model
  5122 ;;
  5123                           
  5124                           	psect	text37
  5125   001B88                     __ptext37:
  5126                           	callstack 0
  5127   001B88                     _SPIInit:
  5128                           	callstack 28
  5129   001B88                     
  5130                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  5131   001B88  9694               	bcf	148,3,c	;volatile
  5132                           
  5133                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  5134   001B8A  9A94               	bcf	148,5,c	;volatile
  5135                           
  5136                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  5137   001B8C  8894               	bsf	148,4,c	;volatile
  5138                           
  5139                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  5140   001B8E  8EC7               	bsf	199,7,c	;volatile
  5141                           
  5142                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  5143   001B90  8CC7               	bsf	199,6,c	;volatile
  5144   001B92                     
  5145                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  5146   001B92  0E01               	movlw	1
  5147   001B94  6EC6               	movwf	198,c	;volatile
  5148   001B96                     
  5149                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  5150   001B96  8EC6               	bsf	198,7,c	;volatile
  5151   001B98                     
  5152                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  5153   001B98  9CC6               	bcf	198,6,c	;volatile
  5154   001B9A                     
  5155                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  5156   001B9A  8AC6               	bsf	198,5,c	;volatile
  5157   001B9C                     
  5158                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  5159   001B9C  98C6               	bcf	198,4,c	;volatile
  5160   001B9E  0012               	return		;funcret
  5161   001BA0                     __end_of_SPIInit:
  5162                           	callstack 0
  5163                           
  5164 ;; *************** function _isr *****************
  5165 ;; Defined at:
  5166 ;;		line 5 in file "drivers/inc/interrupciones.c"
  5167 ;; Parameters:    Size  Location     Type
  5168 ;;		None
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;		None
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  1    wreg      void 
  5173 ;; Registers used:
  5174 ;;		wreg, status,2, status,0
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5184 ;;Total ram usage:        0 bytes
  5185 ;; Hardware stack levels used: 1
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		Interrupt level 2
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	intcode
  5194   000008                     __pintcode:
  5195                           	callstack 0
  5196   000008                     _isr:
  5197                           	callstack 24
  5198                           
  5199                           ;incstack = 0
  5200   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5201   00000A                     
  5202                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  5203   00000A  A09D               	btfss	3997,0,c	;volatile
  5204   00000C  EF0A  F000         	goto	i2u40_41
  5205   000010  EF0C  F000         	goto	i2u40_40
  5206   000014                     i2u40_41:
  5207   000014  EF1E  F000         	goto	i2l338
  5208   000018                     i2u40_40:
  5209   000018  A09E               	btfss	3998,0,c	;volatile
  5210   00001A  EF11  F000         	goto	i2u41_41
  5211   00001E  EF13  F000         	goto	i2u41_40
  5212   000022                     i2u41_41:
  5213   000022  EF1E  F000         	goto	i2l338
  5214   000026                     i2u41_40:
  5215   000026                     
  5216                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  5217   000026  909E               	bcf	3998,0,c	;volatile
  5218   000028                     
  5219                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  5220   000028  0EF7               	movlw	247
  5221   00002A  6ECE               	movwf	206,c	;volatile
  5222                           
  5223                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  5224   00002C  0EFD               	movlw	253
  5225   00002E  6ECF               	movwf	207,c	;volatile
  5226   000030                     
  5227                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  5228   000030  0E01               	movlw	1
  5229   000032  2658               	addwf	_timeStamp^0,f,c
  5230   000034  0E00               	movlw	0
  5231   000036  2259               	addwfc	(_timeStamp+1)^0,f,c
  5232   000038  225A               	addwfc	(_timeStamp+2)^0,f,c
  5233   00003A  225B               	addwfc	(_timeStamp+3)^0,f,c
  5234   00003C                     i2l338:
  5235   00003C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5236   00003E  0011               	retfie		f
  5237   000040                     __end_of_isr:
  5238                           	callstack 0
  5239                           
  5240                           	psect	rparam
  5241   000001                     ___rparam_used  equ	1
  5242   000000                     ___param_bank   equ	0
  5243   000000                     __Lparam        equ	__Lrparam
  5244   000000                     __Hparam        equ	__Hrparam
  5245                           
  5246                           	psect	temp
  5247   00005D                     btemp:
  5248                           	callstack 0
  5249   00005D                     	ds	1
  5250   00005D                     int$flags       set	btemp
  5251   00005E                     wtemp8          set	btemp+1
  5252   00005E                     ttemp5          set	btemp+1
  5253   000061                     ttemp6          set	btemp+4
  5254   000065                     ttemp7          set	btemp+8
  5255                           
  5256                           	psect	idloc
  5257                           
  5258                           ;Config register IDLOC0 @ 0x200000
  5259                           ;	unspecified, using default values
  5260   200000                     	org	2097152
  5261   200000  FF                 	db	255
  5262                           
  5263                           ;Config register IDLOC1 @ 0x200001
  5264                           ;	unspecified, using default values
  5265   200001                     	org	2097153
  5266   200001  FF                 	db	255
  5267                           
  5268                           ;Config register IDLOC2 @ 0x200002
  5269                           ;	unspecified, using default values
  5270   200002                     	org	2097154
  5271   200002  FF                 	db	255
  5272                           
  5273                           ;Config register IDLOC3 @ 0x200003
  5274                           ;	unspecified, using default values
  5275   200003                     	org	2097155
  5276   200003  FF                 	db	255
  5277                           
  5278                           ;Config register IDLOC4 @ 0x200004
  5279                           ;	unspecified, using default values
  5280   200004                     	org	2097156
  5281   200004  FF                 	db	255
  5282                           
  5283                           ;Config register IDLOC5 @ 0x200005
  5284                           ;	unspecified, using default values
  5285   200005                     	org	2097157
  5286   200005  FF                 	db	255
  5287                           
  5288                           ;Config register IDLOC6 @ 0x200006
  5289                           ;	unspecified, using default values
  5290   200006                     	org	2097158
  5291   200006  FF                 	db	255
  5292                           
  5293                           ;Config register IDLOC7 @ 0x200007
  5294                           ;	unspecified, using default values
  5295   200007                     	org	2097159
  5296   200007  FF                 	db	255
  5297                           
  5298                           	psect	config
  5299                           
  5300                           ; Padding undefined space
  5301   300000                     	org	3145728
  5302   300000  FF                 	db	255
  5303                           
  5304                           ;Config register CONFIG1H @ 0x300001
  5305                           ;	Oscillator Selection bits
  5306                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5307                           ;	Fail-Safe Clock Monitor Enable bit
  5308                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5309                           ;	Internal/External Oscillator Switchover bit
  5310                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5311   300001                     	org	3145729
  5312   300001  08                 	db	8
  5313                           
  5314                           ;Config register CONFIG2L @ 0x300002
  5315                           ;	Power-up Timer Enable bit
  5316                           ;	PWRT = 0x1, unprogrammed default
  5317                           ;	Brown-out Reset Enable bits
  5318                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5319                           ;	Brown Out Reset Voltage bits
  5320                           ;	BORV = 22, VBOR set to 2.2 V nominal
  5321   300002                     	org	3145730
  5322   300002  11                 	db	17
  5323                           
  5324                           ;Config register CONFIG2H @ 0x300003
  5325                           ;	Watchdog Timer Enable bit
  5326                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5327                           ;	Watchdog Timer Postscale Select bits
  5328                           ;	WDTPS = 8192, 1:8192
  5329   300003                     	org	3145731
  5330   300003  1A                 	db	26
  5331                           
  5332                           ; Padding undefined space
  5333   300004                     	org	3145732
  5334   300004  FF                 	db	255
  5335                           
  5336                           ;Config register CONFIG3H @ 0x300005
  5337                           ;	CCP2 MUX bit
  5338                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5339                           ;	PORTB A/D Enable bit
  5340                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5341                           ;	Low-Power Timer1 Oscillator Enable bit
  5342                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5343                           ;	HFINTOSC Fast Start-up
  5344                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  5345                           ;	MCLR Pin Enable bit
  5346                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5347   300005                     	org	3145733
  5348   300005  01                 	db	1
  5349                           
  5350                           ;Config register CONFIG4L @ 0x300006
  5351                           ;	Stack Full/Underflow Reset Enable bit
  5352                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5353                           ;	Single-Supply ICSP Enable bit
  5354                           ;	LVP = OFF, Single-Supply ICSP disabled
  5355                           ;	Extended Instruction Set Enable bit
  5356                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5357                           ;	Background Debugger Enable bit
  5358                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5359   300006                     	org	3145734
  5360   300006  80                 	db	128
  5361                           
  5362                           ; Padding undefined space
  5363   300007                     	org	3145735
  5364   300007  FF                 	db	255
  5365                           
  5366                           ;Config register CONFIG5L @ 0x300008
  5367                           ;	Code Protection Block 0
  5368                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5369                           ;	Code Protection Block 1
  5370                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5371                           ;	Code Protection Block 2
  5372                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5373                           ;	Code Protection Block 3
  5374                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5375   300008                     	org	3145736
  5376   300008  0F                 	db	15
  5377                           
  5378                           ;Config register CONFIG5H @ 0x300009
  5379                           ;	Boot Block Code Protection bit
  5380                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5381                           ;	Data EEPROM Code Protection bit
  5382                           ;	CPD = OFF, Data EEPROM not code-protected
  5383   300009                     	org	3145737
  5384   300009  C0                 	db	192
  5385                           
  5386                           ;Config register CONFIG6L @ 0x30000A
  5387                           ;	Write Protection Block 0
  5388                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5389                           ;	Write Protection Block 1
  5390                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5391                           ;	Write Protection Block 2
  5392                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5393                           ;	Write Protection Block 3
  5394                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5395   30000A                     	org	3145738
  5396   30000A  0F                 	db	15
  5397                           
  5398                           ;Config register CONFIG6H @ 0x30000B
  5399                           ;	Configuration Register Write Protection bit
  5400                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5401                           ;	Boot Block Write Protection bit
  5402                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5403                           ;	Data EEPROM Write Protection bit
  5404                           ;	WRTD = OFF, Data EEPROM not write-protected
  5405   30000B                     	org	3145739
  5406   30000B  E0                 	db	224
  5407                           
  5408                           ;Config register CONFIG7L @ 0x30000C
  5409                           ;	unspecified, using default values
  5410                           ;	Table Read Protection Block 0
  5411                           ;	EBTR0 = 0x1, unprogrammed default
  5412                           ;	Table Read Protection Block 1
  5413                           ;	EBTR1 = 0x1, unprogrammed default
  5414                           ;	Table Read Protection Block 2
  5415                           ;	EBTR2 = 0x1, unprogrammed default
  5416                           ;	Table Read Protection Block 3
  5417                           ;	EBTR3 = 0x1, unprogrammed default
  5418   30000C                     	org	3145740
  5419   30000C  0F                 	db	15
  5420                           
  5421                           ;Config register CONFIG7H @ 0x30000D
  5422                           ;	Boot Block Table Read Protection bit
  5423                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5424   30000D                     	org	3145741
  5425   30000D  40                 	db	64
  5426                           tosu	equ	0xFFF
  5427                           tosh	equ	0xFFE
  5428                           tosl	equ	0xFFD
  5429                           stkptr	equ	0xFFC
  5430                           pclatu	equ	0xFFB
  5431                           pclath	equ	0xFFA
  5432                           pcl	equ	0xFF9
  5433                           tblptru	equ	0xFF8
  5434                           tblptrh	equ	0xFF7
  5435                           tblptrl	equ	0xFF6
  5436                           tablat	equ	0xFF5
  5437                           prodh	equ	0xFF4
  5438                           prodl	equ	0xFF3
  5439                           indf0	equ	0xFEF
  5440                           postinc0	equ	0xFEE
  5441                           postdec0	equ	0xFED
  5442                           preinc0	equ	0xFEC
  5443                           plusw0	equ	0xFEB
  5444                           fsr0h	equ	0xFEA
  5445                           fsr0l	equ	0xFE9
  5446                           wreg	equ	0xFE8
  5447                           indf1	equ	0xFE7
  5448                           postinc1	equ	0xFE6
  5449                           postdec1	equ	0xFE5
  5450                           preinc1	equ	0xFE4
  5451                           plusw1	equ	0xFE3
  5452                           fsr1h	equ	0xFE2
  5453                           fsr1l	equ	0xFE1
  5454                           bsr	equ	0xFE0
  5455                           indf2	equ	0xFDF
  5456                           postinc2	equ	0xFDE
  5457                           postdec2	equ	0xFDD
  5458                           preinc2	equ	0xFDC
  5459                           plusw2	equ	0xFDB
  5460                           fsr2h	equ	0xFDA
  5461                           fsr2l	equ	0xFD9
  5462                           status	equ	0xFD8

Data Sizes:
    Strings     85
    Constant    24
    Data        0
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      92
    BANK0           160      0      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DelayInit@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayIsRunning@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayRead@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> MRF24J40Init@delay_time_out(COMRAM[9]), 

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    MRF24SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    S268$buffer_salida	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), NULL(NULL[0]), 

    sp__MRF24GetMensajeEntrada	PTR unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in(BANK0[56]), mrf24_data_in$buffer_entrada(BANK0[50]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in(BANK0[56]), mrf24_data_in$buffer_entrada(BANK0[50]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_10(CODE[8]), STR_13(CODE[8]), STR_4(CODE[8]), STR_7(CODE[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[8]), STR_11(CODE[14]), STR_14(CODE[12]), STR_15(CODE[11]), 
		 -> STR_2(CODE[8]), STR_5(CODE[14]), STR_8(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _strcmp->_MRF24GetMensajeEntrada
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24SetMensajeSalida->_strlen
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _GetShortAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _GetLongAddr->_Write2ByteSPIPort
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                62    62      0    5651
                                             25 COMRAM    22    22      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
             _MRF24GetMensajeEntrada
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
           _MRF24SetDireccionDestino
              _MRF24SetMensajeSalida
               _MRF24SetPANIDDestino
                _MRF24TransmitirDato
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     120
                                              2 COMRAM     3     1      2
             _MRF24GetMensajeEntrada (ARG)
 ---------------------------------------------------------------------------------
 (1) _MRF24TransmitirDato                                  8     8      0     827
                                             10 COMRAM     7     7      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24SetPANIDDestino                                 2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetMensajeSalida                                1     0      1     142
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetDireccionDestino                             2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   7     7      0     942
                                             10 COMRAM     7     7      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                        11    11      0    2459
                                             14 COMRAM    11    11      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  2     2      0     256
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     188
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           1     1      0     482
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     188
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     294
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     198
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetMensajeEntrada                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    4     2      2     610
                                             14 COMRAM     4     2      2
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (2) _DelayRead                                           13    12      1     160
                                              1 COMRAM    13    12      1
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (3) _DelayIsRunning                                       1     0      1      23
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      1     0      1     140
                                              5 COMRAM     1     0      1
                          _DelayInit
 ---------------------------------------------------------------------------------
 (2) _DelayInit                                            5     0      5      72
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24GetMensajeEntrada
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _DelayInit
     _DelayRead
     _DelayReset
     _GetLongAddr
       _ReadByteSPIPort
         _SPIRead
       _SetCSPin
       _Write2ByteSPIPort
         _SPIWrite2Byte
           _SPIWriteByte
     _GetShortAddr
       _ReadByteSPIPort
       _SetCSPin
       _WriteByteSPIPort
         _SPIWriteByte
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _SetLongAddr
         _SetCSPin
         _Write2ByteSPIPort
         _WriteByteSPIPort
       _SetShortAddr
         _SetCSPin
         _WriteByteSPIPort
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _MRF24SetDireccionDestino
   _MRF24SetMensajeSalida
     _strlen
   _MRF24SetPANIDDestino
   _MRF24TransmitirDato
     _SetLongAddr
     _SetShortAddr
   _strcmp
     _MRF24GetMensajeEntrada (ARG)

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      56     35.0%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     47      92     97.9%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     148      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Apr 20 16:44:06 2025

                         _SSPSTATbits 0FC7                                    l21 1BC8  
                                  l30 1C0A                                    l24 1C34  
                                  l33 1BDC                                    l42 1C66  
                                  l27 1BFC                                    l36 1C60  
                                  l39 1C18                       _IsMRF24Interrup 1BCA  
                                  l99 1238                                    u45 1BFA  
                                  u70 1BDA                                    u46 1BFC  
                                  u71 1BD4                                    u55 1C08  
                                  u56 1C0A                                    u76 1BDC  
                       ?_MRF24J40Init 0001                                   l112 1B54  
                                 l121 1950                                   l115 1B0E  
                                 l108 1684                                   l124 1A0C  
                                 l132 1992                                   l109 1706  
                                 l141 1C4C                                   l150 1B6E  
                                 l118 19D4                                   l127 1A9A  
                                 l135 1BEE                                   l322 190C  
                                 l138 1C56                                   l147 1642  
                                 l180 1B78                                   l156 1844  
                                 l229 127A                                   l351 17B2  
                                 l159 1C6C                                   l183 1B86  
                                 l360 1C42                                   l192 1BB4  
                                 l177 1B9E                                   l345 1AC2  
                                 l186 1C26                                   l357 1B34  
                                 l189 1BA4                                   l367 1A70  
                                 l377 1534                                   _GIE 7F97  
                                 u200 1B6C                                   u201 1B66  
                                 u210 1B6E                                   u420 1B86  
                                 u500 1992                                   u421 1B82  
                                 u501 198E                                   u600 143A  
                                 u440 1BB2                                   u520 1A34  
                                 u601 1436                                   u441 1BAE  
                                 u521 1A30                                   u610 144A  
                                 u530 10EC                                   u611 1446  
                                 u435 1C32                                   u515 1918  
                                 u531 10E8                                   u620 148A  
                                 u436 1C34                                   u460 1668  
                                 u540 1106                                   u700 1346  
                                 u621 1486                                   u461 1664  
                                 u541 1102                                   u701 1342  
                                 u630 149A                                   u470 16C0  
                                 u550 11EA                                   u710 1374  
                                 u631 1496                                   u471 16BC  
                                 u455 199E                                   u551 11E6  
                                 u711 1370                                   u480 1720  
                                 u640 14CE                                   u560 1200  
                                 u720 13A2                                   u481 171C  
                                 u641 14CA                                   u561 11FC  
                                 u721 139E                                   u490 179E  
                                 u570 1628                                   u650 1874  
                                 u730 13D4                                   u491 179A  
                                 u571 1624                                   u651 1870  
                                 u731 13D0                                   u580 182E  
                                 u660 188A                                   u740 13E6  
                                 u581 182A                                   u661 1886  
                                 u741 13DE                                   u590 140E  
                                 u670 12B0                                   u591 140A  
                                 u671 12AA                                   u680 12F4  
                                 u681 12F0                                   u690 1318  
                                 u691 1314                                   u676 12B2  
                                 u758 13E8                                   u767 1096  
                                 u777 10AE                                   u787 110C  
                                 u797 1A00                                   _isr 0008  
                                 wreg 0FE8                   __end_of_GetLongAddr 1952  
                                l1101 1BF2                                  l2001 145E  
                                l1105 1C00                                  l2011 149A  
                                l2003 146A                                  l2013 14A6  
                                l2101 1374                                  l2031 14E8  
                                l2007 1470                                  l2111 13B0  
                                l2103 1376                                  l2025 14BE  
                                l2009 148A                                  l1073 1A40  
                                l2105 1382                                  l2113 13B8  
                                l2027 14CE                                  l2019 14AC  
                                l1067 18AA                                  l2051 184E  
                                l2107 13A2                                  l2115 13BC  
                                l2029 14E0                                  l2037 14EE  
                                l1149 1BCA                                  l2053 1874  
                                l2117 13D4                                  l2109 13A4  
                                l2061 1242                                  l1271 1B88  
                                l2039 1532                                  l2055 188A  
                                l2047 1846                                  l2071 1280  
                                l2063 1246                                  l1281 1B9C  
                                l1273 1B92                                  l2049 184A  
                                l2073 1288                                  l2081 129C  
                                l2065 124A                                  l1275 1B96  
                                l1451 18F0                                  l1427 1B56  
                                l2091 131A                                  l2163 12CA  
                                l2075 1290                                  l2083 12E0  
                                l2067 1262                                  l2059 123A  
                                l1277 1B98                                  l1461 1900  
                                l1453 18F8                                  l2165 150C  
                                l1701 1BB6                                  l2093 1326  
                                l2085 12F4                                  l2069 126E  
                                l1279 1B9A                                  l1463 1902  
                                l1455 18FA                                  l1711 164C  
                                l2095 1346                                  l2087 12F8  
                                l1465 1904                                  l1457 18FC  
                                l1449 18AC                                  l1641 1B74  
                                l1801 1948                                  l1721 16C8  
                                l1713 1668                                  l1705 1644  
                                l2097 1348                                  l2089 1318  
                                l1467 1906                                  l1459 18FE  
                                l1643 1C1A                                  l1803 194E  
                                l1651 1C5A                                  l1731 1704  
                                l1723 16CA                                  l1715 16A0  
                                l2099 1354                                  l1469 1908  
                                l1661 1BB2                                  l1741 1AEC  
                                l1725 16EE                                  l1717 16A4  
                                l1813 1A0E                                  l1823 1A42  
                                l1735 1B10                                  l1647 1C2A  
                                l1639 1B72                                  l1655 1C0C  
                                l1751 1B06                                  l1743 1AEC  
                                l1727 16F0                                  l1719 16C0  
                                l1807 19D6                                  l1831 1088  
                                l1903 1C4E                                  l1815 1A16  
                                l1911 1538                                  l1825 1A4E  
                                l1761 1736                                  l1737 1B26  
                                l1665 1C62                                  l1753 1B0C  
                                l1745 1AF4                                  l1729 1702  
                                l1681 1B4E                                  l1673 1B38  
                                l1809 19FA                                  l1841 10BA  
                                l1833 108C                                  l1817 1A18  
                                l1905 1C44                                  l1921 156A  
                                l1913 1548                                  l1827 1A68  
                                l1771 17B0                                  l1763 1748  
                                l1659 1BA0                                  l1747 1AFA  
                                l1691 19C8                                  l1675 1B3C  
                                l1851 10F0                                  l1843 10C4  
                                l1835 1090                                  l1819 1A34  
                                l1931 1592                                  l1923 156C  
                                l1915 154A                                  l1907 1536  
                                l1669 1A9C                                  l1765 179E  
                                l1757 1708                                  l1749 1B00  
                                l1693 19CE                                  l1685 1994  
                                l1677 1B42                                  l1861 112A  
                                l1853 1106                                  l1845 10CC  
                                l1837 10A2                                  l1829 1070  
                                l1941 15C0                                  l1933 15A0  
                                l1925 157A                                  l1917 155A  
                                l1909 1538                                  l1767 17AA  
                                l1759 1720                                  l1687 19B6  
                                l1679 1B48                                  l1775 1A72  
                                l1791 1976                                  l1871 117A  
                                l1863 113A                                  l1855 1118  
                                l1847 10D4                                  l1839 10A8  
                                l1951 15F6                                  l1943 15C2  
                                l1935 15A2                                  l1927 157C  
                                l1919 155C                                  l1697 1C36  
                                l1793 190E                                  l1689 19BC  
                                l1785 195E                                  l1881 11B2  
                                l1873 118A                                  l1865 114A  
                                l1857 1122                                  l1961 1638  
                                l1953 15F8                                  l1945 15D0  
                                l1937 15B0                                  l1929 1590  
                                l1795 1930                                  l1787 1970  
                                l1779 1952                                  l1891 11EE  
                                l1883 11BC                                  l1875 1194  
                                l1867 115A                                  l1859 1126  
                                l1971 17FC                                  l1955 15FA  
                                l1947 15D2                                  l1939 15B2  
                                l1797 1936                                  l1789 1972  
                                l1893 1200                                  l1885 11C4  
                                l1877 119E                                  l1869 116A  
                                l1973 17FE                                  l1965 17B4  
                                l1957 1628                                  l1949 15D8  
                                l1991 143A                                  l1983 13FA  
                                l1799 1942                                  l1887 11D2  
                                l1879 11A8                                  l1975 182E  
                                l1967 17DC                                  l1959 1636  
                                l1993 144A                                  l1985 13FE  
                                l1969 17E2                                  l1897 1BDE  
                                l1995 1458                                  l1987 140E  
                                l1979 1C68                                  l1899 1BE2  
                                l1989 1420                                  _ADIE 7CEE  
                                ?_isr 0001                                  _EEIE 7D04  
                                STR_1 1066                                  STR_2 105E  
                                STR_3 1046                                  STR_4 1046  
                                STR_5 1019                                  STR_6 103E  
                                STR_7 103E                                  STR_8 1027  
                                STR_9 1056                                  _T0IE 7F95  
                                _IPEN 7E87                                  _PEIE 7F96  
                                _RBIE 7F93                                  _RCIE 7CED  
                                _RBPU 7F8F                          _SPIWriteByte 1B70  
                                _main 123A                       __end_of_SPIInit 1BA0  
                     __end_of_SPIRead 1BB6                                  fsr1h 0FE2  
                                fsr2h 0FDA                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                btemp 005D                         _MRF24IsNewMsg 1B56  
                          _DelayReset 1B10               GetShortAddr@reg_address 0004  
                                start 0040                     DelayInit@duration 0002  
                        ___param_bank 0000                      _long_mac_address 005C  
                   ??_ReadByteSPIPort 0001                                 ??_isr 0001  
                      ??_MRF24J40Init 000F           __end_of_InicializoVariables 1708  
                       _SPIWrite2Byte 1C1A      __end_of_MRF24SetDireccionDestino 1C58  
                               ?_main 0001                                 _BCLIE 7D03  
                               STR_10 1056                                 STR_11 1019  
                               STR_12 104E                                 STR_13 104E  
                               STR_14 1027                                 STR_15 1033  
                               _INT0E 7F94                                 i2l338 003C  
                SetDeviceMACAddress@i 0005                                 _TMR1H 0FCF  
                               _TMR1L 0FCE                                 _PORTA 0F80  
                               _PORTB 0F81                                 _PORTC 0F82  
                               _PORTD 0F83                                 _PORTE 0F84  
                               _SSPIE 7CEB                  __end_of_GetShortAddr 1B10  
        MRF24SetMensajeSalida@mensaje 0004              ??_MRF24GetMensajeEntrada 0003  
                     _InicializoPines 1BB6               SetShortAddr@reg_address 0004  
                 MRF24J40Init@lectura 0010                                 tablat 0FF5  
                      ?_MRF24IsNewMsg 0001                                 ttemp5 005E  
                               ttemp6 0061                                 ttemp7 0065  
                               status 0FD8                                 wtemp8 005E  
             __end_of_IsMRF24Interrup 1BDE                   _SetDeviceMACAddress 1952  
                     __initialization 1AC4                          __end_of_main 13FA  
DebounceFSMUpdate@antirrebote_boton_n 000F                        ?_SPIWrite2Byte 0002  
                    __end_of_SetCSPin 1C36                           _GetLongAddr 190E  
                       ??_SetLongAddr 0009                                ??_main 001A  
                       __activetblptr 0002                         ??_SetResetPin 0001  
                ?_SetDeviceMACAddress 0001                            _SetChannel 19D6  
                   ?_SetDeviceAddress 0001                 _MRF24SetMensajeSalida 1BDE  
                              _CCP1IE 7CEA                                _CCP2IE 7D00  
                           ??_SPIInit 0001                             ??_SPIRead 0001  
                  ??_SetDeviceAddress 0005            MRF24J40Init@delay_time_out 0011  
                              _T1RD16 7E6F                                _T1SYNC 7E6A  
                              i2l1621 0028                                i2l1623 0030  
                              i2l1615 000A                                i2l1617 0018  
                              i2l1619 0026                            _SetWakePin 1BF0  
                              _OSCCON 0FD3             MRF24SetPANIDDestino@panid 0001  
                              _TMR1IE 7CE8                                _TMR1IF 7CF0  
                              _TMR1CS 7E69                                _TMR2IE 7CE9  
                              _TMR1ON 7E68          __end_of_default_security_key 1011  
                              _SSPBUF 0FC9                           ?_DelayReset 0001  
                 DelayIsRunning@delay 0001                                clear_0 1ACA  
                              clear_1 1AD6                                isa$std 0001  
                      SetCSPin@estado 0001               __end_of_InicializoPines 1BCA  
                              _strcmp 1846                                _strlen 1A0E  
               ??_SetDeviceMACAddress 0005                  InicializoVariables@i 0002  
                        __mediumconst 0000                     _mrf24_data_config 0030  
            _MRF24SetDireccionDestino 1C4E                                tblptrh 0FF7  
                              tblptrl 0FF6                                tblptru 0FF8  
                 __end_of_SetLongAddr 19D6                    _MRF24ReciboPaquete 17B4  
                    ??_DelayIsRunning 0002                       ??_MRF24IsNewMsg 0001  
                 __end_of_SetResetPin 1C0C                 GetShortAddr@leido_spi 0003  
                   __end_of_DelayInit 1AC4                     __end_of_DelayRead 17B4  
                __end_of_MRF24J40Init 123A                            __accesstop 0060  
             __end_of__initialization 1ADC                   ?_MRF24ReciboPaquete 0001  
         __end_of_MRF24TransmitirDato 1644                     __end_of_BoardInit 190E  
                      DelayInit@delay 0001                         ___rparam_used 0001  
                      DelayRead@delay 0002                      SetWakePin@estado 0001  
                    ?_IsMRF24Interrup 0001                         ?_SetShortAddr 0003  
                      __pcstackCOMRAM 0001                       ??_SPIWrite2Byte 0004  
                ??_MRF24ReciboPaquete 000B                ?_MRF24SetMensajeSalida 0004  
                         ?_SetChannel 0001                            __pbssBANK0 0060  
                         ?_SetWakePin 0001                             ?_SetCSPin 0001  
                     _ReadByteSPIPort 1C62                          _GetShortAddr 1AEA  
              _MRF24GetMensajeEntrada 1C68                        ??_SetShortAddr 0004  
                         _SetLongAddr 1994                               _T1CKPS0 7E6C  
                             _T1CKPS1 7E6D                               ?_strcmp 0003  
                             ?_strlen 0001                      ?_InicializoPines 0001  
                _default_security_key 1001                               _T1OSCEN 7E6B  
                         _SetResetPin 1BFE          __end_of_MRF24SetPANIDDestino 1C4E  
                             i2u40_40 0018                               i2u40_41 0014  
                             i2u41_40 0026                               i2u41_41 0022  
                             _OSCTUNE 0F9B                               _SSPCON1 0FC6  
                             _SPIInit 1B88                               _SPIRead 1BA0  
                          ??_SetCSPin 0001                     SetShortAddr@valor 0003  
                             __Hparam 0000                               __Lparam 0000  
                   ??_DebounceFSMInit 0007                          __psmallconst 1000  
                             __pcinit 1AC4                          ?_GetLongAddr 0006  
                             __ramtop 1000                               __ptext0 123A  
                             __ptext1 1846                               __ptext2 1536  
                             __ptext3 1C44                               __ptext4 1BDE  
                             __ptext5 1A0E                               __ptext6 1C4E  
                             __ptext7 17B4                               __ptext8 1070  
                             __ptext9 1952                      _WriteByteSPIPort 1C58  
             __end_of_ReadByteSPIPort 1C68                  end_of_initialization 1ADC  
                       __Lmediumconst 0000                          ??_DelayReset 0002  
                 _default_mac_address 1011                               postinc0 0FEE  
                             postinc1 0FE6                               postinc2 0FDE  
          ??_MRF24SetDireccionDestino 0003                               strcmp@l 0003  
                             strcmp@r 0004                               strlen@a 0003  
                             strlen@s 0001                          _MRF24J40Init 1070  
                           _PORTBbits 0F81                             _PORTCbits 0F82  
                  __end_of_DelayReset 1B36                  WriteByteSPIPort@dato 0002  
                           _TRISBbits 0F93                             _TRISCbits 0F94  
                           _TRISDbits 0F95                             _TRISEbits 0F96  
                __end_of_SetShortAddr 1B56                 Write2ByteSPIPort@dato 0004  
                GetLongAddr@respuesta 000A                            main@boton1 0025  
                           _DelayInit 1A9C                             _DelayRead 1708  
                           _BoardInit 18AC                  _MRF24SetPANIDDestino 1C44  
                   _Write2ByteSPIPort 1C0C           __end_of_SetDeviceMACAddress 1994  
             ??_MRF24SetMensajeSalida 0005                    ?_Write2ByteSPIPort 0004  
                      __end_of_strcmp 18AC                        __end_of_strlen 1A42  
                        ??_SetChannel 000B                   start_initialization 1AC4  
                 ??_Write2ByteSPIPort 0006                           __end_of_isr 0040  
                    ?_ReadByteSPIPort 0001                         ?_SPIWriteByte 0001  
                        ??_SetWakePin 0001                 __end_of_MRF24IsNewMsg 1B70  
             ?_MRF24GetMensajeEntrada 0001                            ?_DelayInit 0001  
                          ?_DelayRead 0002                            ?_BoardInit 0001  
               ?_MRF24SetPANIDDestino 0001             __end_of_Write2ByteSPIPort 1C1A  
                  __end_of_SetChannel 1A0E                 __end_of_SPIWrite2Byte 1C28  
             MRF24ReciboPaquete@index 0011                          ?_SetLongAddr 0006  
                            ??_strcmp 0005                              ??_strlen 0003  
                  __end_of_SetWakePin 1BFE                     _DebounceFSMUpdate 13FA  
                        ?_SetResetPin 0001                           __pbssCOMRAM 0030  
                  ?_DebounceFSMUpdate 000F                       DelayReset@delay 0001  
                            ?_SPIInit 0001                              ?_SPIRead 0001  
                      ??_SPIWriteByte 0001        __end_of_MRF24GetMensajeEntrada 1C6E  
                 ??_DebounceFSMUpdate 0011                      SPIWriteByte@dato 0001  
                     _DebounceFSMInit 1A42                      _SetDeviceAddress 1A72  
                 _InicializoVariables 1644              __end_of_WriteByteSPIPort 1C62  
                           __pintcode 0008             __end_of_DebounceFSMUpdate 1536  
                   SetResetPin@estado 0001                           __smallconst 1000  
                ?_InicializoVariables 0001                      SetLongAddr@valor 0008  
                            _LATCbits 0F8B                              _LATDbits 0F8C  
                            _LATEbits 0F8D                           ??_DelayInit 0006  
                         ??_DelayRead 0003                ??_MRF24SetPANIDDestino 0003  
                         ??_BoardInit 0001                              _PIR1bits 0F9E  
                        _SetShortAddr 1B36                             _timeStamp 0058  
                  main@delay_parpadeo 001C                 ??_InicializoVariables 0001  
   MRF24SetDireccionDestino@direccion 0001                     ??_IsMRF24Interrup 0001  
             __end_of_DebounceFSMInit 1A72                        _mrf24_data_out 0052  
                            _SetCSPin 1C28                              __Hrparam 0000  
                            __Lrparam 0000       MRF24ReciboPaquete@largo_mensaje 0010  
                __end_of_SPIWriteByte 1B88        MRF24TransmitirDato@pos_memoria 0011  
       __end_of_MRF24SetMensajeSalida 1BF0                              __ptext10 1A72  
                            __ptext11 19D6                              __ptext20 190E  
                            __ptext12 1B36                              __ptext21 1C0C  
                            __ptext13 1994                              __ptext30 1C68  
                            __ptext22 1C1A                              __ptext14 1644  
                            __ptext31 13FA                              __ptext23 1B70  
                            __ptext15 1BB6                              __ptext32 1708  
                            __ptext24 1C28                              __ptext16 1BF0  
                            __ptext33 1C36                              __ptext25 1C62  
                            __ptext17 1BFE                              __ptext34 1A42  
                            __ptext26 1BA0                              __ptext18 1AEA  
                 _MRF24TransmitirDato 1536                              __ptext35 1A9C  
                            __ptext27 1B10                              __ptext19 1C58  
                            __ptext36 18AC                              __ptext28 1B56  
                            __ptext37 1B88                              __ptext29 1BCA  
           ?_MRF24SetDireccionDestino 0001                        _DelayIsRunning 1C36  
                   ??_InicializoPines 0002                         ?_GetShortAddr 0001  
                ?_MRF24TransmitirDato 0001                              isa$xinst 0000  
                            int$flags 005D    DebounceFSMInit@antirrebote_boton_n 0006  
         __end_of_default_mac_address 1019                         _mrf24_data_in 0060  
            __end_of_SetDeviceAddress 1A9C                      ?_DebounceFSMInit 0006  
                            intlevel2 0000                __end_of_DelayIsRunning 1C44  
                MRF24TransmitirDato@i 0010                        ??_GetShortAddr 0003  
               ??_MRF24TransmitirDato 000B                     ?_WriteByteSPIPort 0001  
          __end_of_MRF24ReciboPaquete 1846                         ??_GetLongAddr 0008  
                  ??_WriteByteSPIPort 0002                GetLongAddr@reg_address 0006  
                         _SSPCON1bits 0FC6           DebounceFSMUpdate@estado_pin 0010  
                   SPIWrite2Byte@dato 0002                SetLongAddr@reg_address 0006  
                     ?_DelayIsRunning 0001  
