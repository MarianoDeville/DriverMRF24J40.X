

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Apr 20 13:01:37 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    50                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54   000000                     
    55                           ; Version 2.20
    56                           ; Generated 05/05/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F46K20 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89   000FE0                     bsr             equ	4064
    90   000FE9                     fsr0            equ	4073
    91   000FEA                     fsr0h           equ	4074
    92   000FE9                     fsr0l           equ	4073
    93   000FE1                     fsr1            equ	4065
    94   000FE2                     fsr1h           equ	4066
    95   000FE1                     fsr1l           equ	4065
    96   000FD9                     fsr2            equ	4057
    97   000FDA                     fsr2h           equ	4058
    98   000FD9                     fsr2l           equ	4057
    99   000FEF                     indf0           equ	4079
   100   000FE7                     indf1           equ	4071
   101   000FDF                     indf2           equ	4063
   102   000FF2                     intcon          equ	4082
   103   000000                     nvmcon          equ	0
   104   000FF9                     pcl             equ	4089
   105   000FFA                     pclath          equ	4090
   106   000FFB                     pclatu          equ	4091
   107   000FEB                     plusw0          equ	4075
   108   000FE3                     plusw1          equ	4067
   109   000FDB                     plusw2          equ	4059
   110   000FED                     postdec0        equ	4077
   111   000FE5                     postdec1        equ	4069
   112   000FDD                     postdec2        equ	4061
   113   000FEE                     postinc0        equ	4078
   114   000FE6                     postinc1        equ	4070
   115   000FDE                     postinc2        equ	4062
   116   000FEC                     preinc0         equ	4076
   117   000FE4                     preinc1         equ	4068
   118   000FDC                     preinc2         equ	4060
   119   000FF3                     prod            equ	4083
   120   000FF4                     prodh           equ	4084
   121   000FF3                     prodl           equ	4083
   122   000FD8                     status          equ	4056
   123   000FF5                     tablat          equ	4085
   124   000FF6                     tblptr          equ	4086
   125   000FF7                     tblptrh         equ	4087
   126   000FF6                     tblptrl         equ	4086
   127   000FF8                     tblptru         equ	4088
   128   000FFD                     tosl            equ	4093
   129   000FE8                     wreg            equ	4072
   130   000F77                     SSPMSK          equ	3959	;# 
   131   000F78                     SLRCON          equ	3960	;# 
   132   000F79                     CM2CON1         equ	3961	;# 
   133   000F7A                     CM2CON0         equ	3962	;# 
   134   000F7B                     CM1CON0         equ	3963	;# 
   135   000F7C                     WPUB            equ	3964	;# 
   136   000F7D                     IOCB            equ	3965	;# 
   137   000F7E                     ANSEL           equ	3966	;# 
   138   000F7F                     ANSELH          equ	3967	;# 
   139   000F80                     PORTA           equ	3968	;# 
   140   000F81                     PORTB           equ	3969	;# 
   141   000F82                     PORTC           equ	3970	;# 
   142   000F83                     PORTD           equ	3971	;# 
   143   000F84                     PORTE           equ	3972	;# 
   144   000F89                     LATA            equ	3977	;# 
   145   000F8A                     LATB            equ	3978	;# 
   146   000F8B                     LATC            equ	3979	;# 
   147   000F8C                     LATD            equ	3980	;# 
   148   000F8D                     LATE            equ	3981	;# 
   149   000F92                     TRISA           equ	3986	;# 
   150   000F92                     DDRA            equ	3986	;# 
   151   000F93                     TRISB           equ	3987	;# 
   152   000F93                     DDRB            equ	3987	;# 
   153   000F94                     TRISC           equ	3988	;# 
   154   000F94                     DDRC            equ	3988	;# 
   155   000F95                     TRISD           equ	3989	;# 
   156   000F95                     DDRD            equ	3989	;# 
   157   000F96                     TRISE           equ	3990	;# 
   158   000F96                     DDRE            equ	3990	;# 
   159   000F9B                     OSCTUNE         equ	3995	;# 
   160   000F9D                     PIE1            equ	3997	;# 
   161   000F9E                     PIR1            equ	3998	;# 
   162   000F9F                     IPR1            equ	3999	;# 
   163   000FA0                     PIE2            equ	4000	;# 
   164   000FA1                     PIR2            equ	4001	;# 
   165   000FA2                     IPR2            equ	4002	;# 
   166   000FA6                     EECON1          equ	4006	;# 
   167   000FA7                     EECON2          equ	4007	;# 
   168   000FA8                     EEDATA          equ	4008	;# 
   169   000FA9                     EEADR           equ	4009	;# 
   170   000FAA                     EEADRH          equ	4010	;# 
   171   000FAB                     RCSTA           equ	4011	;# 
   172   000FAB                     RCSTA1          equ	4011	;# 
   173   000FAC                     TXSTA           equ	4012	;# 
   174   000FAC                     TXSTA1          equ	4012	;# 
   175   000FAD                     TXREG           equ	4013	;# 
   176   000FAD                     TXREG1          equ	4013	;# 
   177   000FAE                     RCREG           equ	4014	;# 
   178   000FAE                     RCREG1          equ	4014	;# 
   179   000FAF                     SPBRG           equ	4015	;# 
   180   000FAF                     SPBRG1          equ	4015	;# 
   181   000FB0                     SPBRGH          equ	4016	;# 
   182   000FB1                     T3CON           equ	4017	;# 
   183   000FB2                     TMR3            equ	4018	;# 
   184   000FB2                     TMR3L           equ	4018	;# 
   185   000FB3                     TMR3H           equ	4019	;# 
   186   000FB4                     CVRCON2         equ	4020	;# 
   187   000FB5                     CVRCON          equ	4021	;# 
   188   000FB6                     ECCP1AS         equ	4022	;# 
   189   000FB7                     PWM1CON         equ	4023	;# 
   190   000FB8                     BAUDCON         equ	4024	;# 
   191   000FB8                     BAUDCTL         equ	4024	;# 
   192   000FB9                     PSTRCON         equ	4025	;# 
   193   000FBA                     CCP2CON         equ	4026	;# 
   194   000FBB                     CCPR2           equ	4027	;# 
   195   000FBB                     CCPR2L          equ	4027	;# 
   196   000FBC                     CCPR2H          equ	4028	;# 
   197   000FBD                     CCP1CON         equ	4029	;# 
   198   000FBE                     CCPR1           equ	4030	;# 
   199   000FBE                     CCPR1L          equ	4030	;# 
   200   000FBF                     CCPR1H          equ	4031	;# 
   201   000FC0                     ADCON2          equ	4032	;# 
   202   000FC1                     ADCON1          equ	4033	;# 
   203   000FC2                     ADCON0          equ	4034	;# 
   204   000FC3                     ADRES           equ	4035	;# 
   205   000FC3                     ADRESL          equ	4035	;# 
   206   000FC4                     ADRESH          equ	4036	;# 
   207   000FC5                     SSPCON2         equ	4037	;# 
   208   000FC6                     SSPCON1         equ	4038	;# 
   209   000FC7                     SSPSTAT         equ	4039	;# 
   210   000FC8                     SSPADD          equ	4040	;# 
   211   000FC9                     SSPBUF          equ	4041	;# 
   212   000FCA                     T2CON           equ	4042	;# 
   213   000FCB                     PR2             equ	4043	;# 
   214   000FCB                     MEMCON          equ	4043	;# 
   215   000FCC                     TMR2            equ	4044	;# 
   216   000FCD                     T1CON           equ	4045	;# 
   217   000FCE                     TMR1            equ	4046	;# 
   218   000FCE                     TMR1L           equ	4046	;# 
   219   000FCF                     TMR1H           equ	4047	;# 
   220   000FD0                     RCON            equ	4048	;# 
   221   000FD1                     WDTCON          equ	4049	;# 
   222   000FD2                     HLVDCON         equ	4050	;# 
   223   000FD2                     LVDCON          equ	4050	;# 
   224   000FD3                     OSCCON          equ	4051	;# 
   225   000FD5                     T0CON           equ	4053	;# 
   226   000FD6                     TMR0            equ	4054	;# 
   227   000FD6                     TMR0L           equ	4054	;# 
   228   000FD7                     TMR0H           equ	4055	;# 
   229   000FD8                     STATUS          equ	4056	;# 
   230   000FD9                     FSR2            equ	4057	;# 
   231   000FD9                     FSR2L           equ	4057	;# 
   232   000FDA                     FSR2H           equ	4058	;# 
   233   000FDB                     PLUSW2          equ	4059	;# 
   234   000FDC                     PREINC2         equ	4060	;# 
   235   000FDD                     POSTDEC2        equ	4061	;# 
   236   000FDE                     POSTINC2        equ	4062	;# 
   237   000FDF                     INDF2           equ	4063	;# 
   238   000FE0                     BSR             equ	4064	;# 
   239   000FE1                     FSR1            equ	4065	;# 
   240   000FE1                     FSR1L           equ	4065	;# 
   241   000FE2                     FSR1H           equ	4066	;# 
   242   000FE3                     PLUSW1          equ	4067	;# 
   243   000FE4                     PREINC1         equ	4068	;# 
   244   000FE5                     POSTDEC1        equ	4069	;# 
   245   000FE6                     POSTINC1        equ	4070	;# 
   246   000FE7                     INDF1           equ	4071	;# 
   247   000FE8                     WREG            equ	4072	;# 
   248   000FE9                     FSR0            equ	4073	;# 
   249   000FE9                     FSR0L           equ	4073	;# 
   250   000FEA                     FSR0H           equ	4074	;# 
   251   000FEB                     PLUSW0          equ	4075	;# 
   252   000FEC                     PREINC0         equ	4076	;# 
   253   000FED                     POSTDEC0        equ	4077	;# 
   254   000FEE                     POSTINC0        equ	4078	;# 
   255   000FEF                     INDF0           equ	4079	;# 
   256   000FF0                     INTCON3         equ	4080	;# 
   257   000FF1                     INTCON2         equ	4081	;# 
   258   000FF2                     INTCON          equ	4082	;# 
   259   000FF3                     PROD            equ	4083	;# 
   260   000FF3                     PRODL           equ	4083	;# 
   261   000FF4                     PRODH           equ	4084	;# 
   262   000FF5                     TABLAT          equ	4085	;# 
   263   000FF6                     TBLPTR          equ	4086	;# 
   264   000FF6                     TBLPTRL         equ	4086	;# 
   265   000FF7                     TBLPTRH         equ	4087	;# 
   266   000FF8                     TBLPTRU         equ	4088	;# 
   267   000FF9                     PCLAT           equ	4089	;# 
   268   000FF9                     PC              equ	4089	;# 
   269   000FF9                     PCL             equ	4089	;# 
   270   000FFA                     PCLATH          equ	4090	;# 
   271   000FFB                     PCLATU          equ	4091	;# 
   272   000FFC                     STKPTR          equ	4092	;# 
   273   000FFD                     TOS             equ	4093	;# 
   274   000FFD                     TOSL            equ	4093	;# 
   275   000FFE                     TOSH            equ	4094	;# 
   276   000FFF                     TOSU            equ	4095	;# 
   277   000F77                     SSPMSK          equ	3959	;# 
   278   000F78                     SLRCON          equ	3960	;# 
   279   000F79                     CM2CON1         equ	3961	;# 
   280   000F7A                     CM2CON0         equ	3962	;# 
   281   000F7B                     CM1CON0         equ	3963	;# 
   282   000F7C                     WPUB            equ	3964	;# 
   283   000F7D                     IOCB            equ	3965	;# 
   284   000F7E                     ANSEL           equ	3966	;# 
   285   000F7F                     ANSELH          equ	3967	;# 
   286   000F80                     PORTA           equ	3968	;# 
   287   000F81                     PORTB           equ	3969	;# 
   288   000F82                     PORTC           equ	3970	;# 
   289   000F83                     PORTD           equ	3971	;# 
   290   000F84                     PORTE           equ	3972	;# 
   291   000F89                     LATA            equ	3977	;# 
   292   000F8A                     LATB            equ	3978	;# 
   293   000F8B                     LATC            equ	3979	;# 
   294   000F8C                     LATD            equ	3980	;# 
   295   000F8D                     LATE            equ	3981	;# 
   296   000F92                     TRISA           equ	3986	;# 
   297   000F92                     DDRA            equ	3986	;# 
   298   000F93                     TRISB           equ	3987	;# 
   299   000F93                     DDRB            equ	3987	;# 
   300   000F94                     TRISC           equ	3988	;# 
   301   000F94                     DDRC            equ	3988	;# 
   302   000F95                     TRISD           equ	3989	;# 
   303   000F95                     DDRD            equ	3989	;# 
   304   000F96                     TRISE           equ	3990	;# 
   305   000F96                     DDRE            equ	3990	;# 
   306   000F9B                     OSCTUNE         equ	3995	;# 
   307   000F9D                     PIE1            equ	3997	;# 
   308   000F9E                     PIR1            equ	3998	;# 
   309   000F9F                     IPR1            equ	3999	;# 
   310   000FA0                     PIE2            equ	4000	;# 
   311   000FA1                     PIR2            equ	4001	;# 
   312   000FA2                     IPR2            equ	4002	;# 
   313   000FA6                     EECON1          equ	4006	;# 
   314   000FA7                     EECON2          equ	4007	;# 
   315   000FA8                     EEDATA          equ	4008	;# 
   316   000FA9                     EEADR           equ	4009	;# 
   317   000FAA                     EEADRH          equ	4010	;# 
   318   000FAB                     RCSTA           equ	4011	;# 
   319   000FAB                     RCSTA1          equ	4011	;# 
   320   000FAC                     TXSTA           equ	4012	;# 
   321   000FAC                     TXSTA1          equ	4012	;# 
   322   000FAD                     TXREG           equ	4013	;# 
   323   000FAD                     TXREG1          equ	4013	;# 
   324   000FAE                     RCREG           equ	4014	;# 
   325   000FAE                     RCREG1          equ	4014	;# 
   326   000FAF                     SPBRG           equ	4015	;# 
   327   000FAF                     SPBRG1          equ	4015	;# 
   328   000FB0                     SPBRGH          equ	4016	;# 
   329   000FB1                     T3CON           equ	4017	;# 
   330   000FB2                     TMR3            equ	4018	;# 
   331   000FB2                     TMR3L           equ	4018	;# 
   332   000FB3                     TMR3H           equ	4019	;# 
   333   000FB4                     CVRCON2         equ	4020	;# 
   334   000FB5                     CVRCON          equ	4021	;# 
   335   000FB6                     ECCP1AS         equ	4022	;# 
   336   000FB7                     PWM1CON         equ	4023	;# 
   337   000FB8                     BAUDCON         equ	4024	;# 
   338   000FB8                     BAUDCTL         equ	4024	;# 
   339   000FB9                     PSTRCON         equ	4025	;# 
   340   000FBA                     CCP2CON         equ	4026	;# 
   341   000FBB                     CCPR2           equ	4027	;# 
   342   000FBB                     CCPR2L          equ	4027	;# 
   343   000FBC                     CCPR2H          equ	4028	;# 
   344   000FBD                     CCP1CON         equ	4029	;# 
   345   000FBE                     CCPR1           equ	4030	;# 
   346   000FBE                     CCPR1L          equ	4030	;# 
   347   000FBF                     CCPR1H          equ	4031	;# 
   348   000FC0                     ADCON2          equ	4032	;# 
   349   000FC1                     ADCON1          equ	4033	;# 
   350   000FC2                     ADCON0          equ	4034	;# 
   351   000FC3                     ADRES           equ	4035	;# 
   352   000FC3                     ADRESL          equ	4035	;# 
   353   000FC4                     ADRESH          equ	4036	;# 
   354   000FC5                     SSPCON2         equ	4037	;# 
   355   000FC6                     SSPCON1         equ	4038	;# 
   356   000FC7                     SSPSTAT         equ	4039	;# 
   357   000FC8                     SSPADD          equ	4040	;# 
   358   000FC9                     SSPBUF          equ	4041	;# 
   359   000FCA                     T2CON           equ	4042	;# 
   360   000FCB                     PR2             equ	4043	;# 
   361   000FCB                     MEMCON          equ	4043	;# 
   362   000FCC                     TMR2            equ	4044	;# 
   363   000FCD                     T1CON           equ	4045	;# 
   364   000FCE                     TMR1            equ	4046	;# 
   365   000FCE                     TMR1L           equ	4046	;# 
   366   000FCF                     TMR1H           equ	4047	;# 
   367   000FD0                     RCON            equ	4048	;# 
   368   000FD1                     WDTCON          equ	4049	;# 
   369   000FD2                     HLVDCON         equ	4050	;# 
   370   000FD2                     LVDCON          equ	4050	;# 
   371   000FD3                     OSCCON          equ	4051	;# 
   372   000FD5                     T0CON           equ	4053	;# 
   373   000FD6                     TMR0            equ	4054	;# 
   374   000FD6                     TMR0L           equ	4054	;# 
   375   000FD7                     TMR0H           equ	4055	;# 
   376   000FD8                     STATUS          equ	4056	;# 
   377   000FD9                     FSR2            equ	4057	;# 
   378   000FD9                     FSR2L           equ	4057	;# 
   379   000FDA                     FSR2H           equ	4058	;# 
   380   000FDB                     PLUSW2          equ	4059	;# 
   381   000FDC                     PREINC2         equ	4060	;# 
   382   000FDD                     POSTDEC2        equ	4061	;# 
   383   000FDE                     POSTINC2        equ	4062	;# 
   384   000FDF                     INDF2           equ	4063	;# 
   385   000FE0                     BSR             equ	4064	;# 
   386   000FE1                     FSR1            equ	4065	;# 
   387   000FE1                     FSR1L           equ	4065	;# 
   388   000FE2                     FSR1H           equ	4066	;# 
   389   000FE3                     PLUSW1          equ	4067	;# 
   390   000FE4                     PREINC1         equ	4068	;# 
   391   000FE5                     POSTDEC1        equ	4069	;# 
   392   000FE6                     POSTINC1        equ	4070	;# 
   393   000FE7                     INDF1           equ	4071	;# 
   394   000FE8                     WREG            equ	4072	;# 
   395   000FE9                     FSR0            equ	4073	;# 
   396   000FE9                     FSR0L           equ	4073	;# 
   397   000FEA                     FSR0H           equ	4074	;# 
   398   000FEB                     PLUSW0          equ	4075	;# 
   399   000FEC                     PREINC0         equ	4076	;# 
   400   000FED                     POSTDEC0        equ	4077	;# 
   401   000FEE                     POSTINC0        equ	4078	;# 
   402   000FEF                     INDF0           equ	4079	;# 
   403   000FF0                     INTCON3         equ	4080	;# 
   404   000FF1                     INTCON2         equ	4081	;# 
   405   000FF2                     INTCON          equ	4082	;# 
   406   000FF3                     PROD            equ	4083	;# 
   407   000FF3                     PRODL           equ	4083	;# 
   408   000FF4                     PRODH           equ	4084	;# 
   409   000FF5                     TABLAT          equ	4085	;# 
   410   000FF6                     TBLPTR          equ	4086	;# 
   411   000FF6                     TBLPTRL         equ	4086	;# 
   412   000FF7                     TBLPTRH         equ	4087	;# 
   413   000FF8                     TBLPTRU         equ	4088	;# 
   414   000FF9                     PCLAT           equ	4089	;# 
   415   000FF9                     PC              equ	4089	;# 
   416   000FF9                     PCL             equ	4089	;# 
   417   000FFA                     PCLATH          equ	4090	;# 
   418   000FFB                     PCLATU          equ	4091	;# 
   419   000FFC                     STKPTR          equ	4092	;# 
   420   000FFD                     TOS             equ	4093	;# 
   421   000FFD                     TOSL            equ	4093	;# 
   422   000FFE                     TOSH            equ	4094	;# 
   423   000FFF                     TOSU            equ	4095	;# 
   424   000F77                     SSPMSK          equ	3959	;# 
   425   000F78                     SLRCON          equ	3960	;# 
   426   000F79                     CM2CON1         equ	3961	;# 
   427   000F7A                     CM2CON0         equ	3962	;# 
   428   000F7B                     CM1CON0         equ	3963	;# 
   429   000F7C                     WPUB            equ	3964	;# 
   430   000F7D                     IOCB            equ	3965	;# 
   431   000F7E                     ANSEL           equ	3966	;# 
   432   000F7F                     ANSELH          equ	3967	;# 
   433   000F80                     PORTA           equ	3968	;# 
   434   000F81                     PORTB           equ	3969	;# 
   435   000F82                     PORTC           equ	3970	;# 
   436   000F83                     PORTD           equ	3971	;# 
   437   000F84                     PORTE           equ	3972	;# 
   438   000F89                     LATA            equ	3977	;# 
   439   000F8A                     LATB            equ	3978	;# 
   440   000F8B                     LATC            equ	3979	;# 
   441   000F8C                     LATD            equ	3980	;# 
   442   000F8D                     LATE            equ	3981	;# 
   443   000F92                     TRISA           equ	3986	;# 
   444   000F92                     DDRA            equ	3986	;# 
   445   000F93                     TRISB           equ	3987	;# 
   446   000F93                     DDRB            equ	3987	;# 
   447   000F94                     TRISC           equ	3988	;# 
   448   000F94                     DDRC            equ	3988	;# 
   449   000F95                     TRISD           equ	3989	;# 
   450   000F95                     DDRD            equ	3989	;# 
   451   000F96                     TRISE           equ	3990	;# 
   452   000F96                     DDRE            equ	3990	;# 
   453   000F9B                     OSCTUNE         equ	3995	;# 
   454   000F9D                     PIE1            equ	3997	;# 
   455   000F9E                     PIR1            equ	3998	;# 
   456   000F9F                     IPR1            equ	3999	;# 
   457   000FA0                     PIE2            equ	4000	;# 
   458   000FA1                     PIR2            equ	4001	;# 
   459   000FA2                     IPR2            equ	4002	;# 
   460   000FA6                     EECON1          equ	4006	;# 
   461   000FA7                     EECON2          equ	4007	;# 
   462   000FA8                     EEDATA          equ	4008	;# 
   463   000FA9                     EEADR           equ	4009	;# 
   464   000FAA                     EEADRH          equ	4010	;# 
   465   000FAB                     RCSTA           equ	4011	;# 
   466   000FAB                     RCSTA1          equ	4011	;# 
   467   000FAC                     TXSTA           equ	4012	;# 
   468   000FAC                     TXSTA1          equ	4012	;# 
   469   000FAD                     TXREG           equ	4013	;# 
   470   000FAD                     TXREG1          equ	4013	;# 
   471   000FAE                     RCREG           equ	4014	;# 
   472   000FAE                     RCREG1          equ	4014	;# 
   473   000FAF                     SPBRG           equ	4015	;# 
   474   000FAF                     SPBRG1          equ	4015	;# 
   475   000FB0                     SPBRGH          equ	4016	;# 
   476   000FB1                     T3CON           equ	4017	;# 
   477   000FB2                     TMR3            equ	4018	;# 
   478   000FB2                     TMR3L           equ	4018	;# 
   479   000FB3                     TMR3H           equ	4019	;# 
   480   000FB4                     CVRCON2         equ	4020	;# 
   481   000FB5                     CVRCON          equ	4021	;# 
   482   000FB6                     ECCP1AS         equ	4022	;# 
   483   000FB7                     PWM1CON         equ	4023	;# 
   484   000FB8                     BAUDCON         equ	4024	;# 
   485   000FB8                     BAUDCTL         equ	4024	;# 
   486   000FB9                     PSTRCON         equ	4025	;# 
   487   000FBA                     CCP2CON         equ	4026	;# 
   488   000FBB                     CCPR2           equ	4027	;# 
   489   000FBB                     CCPR2L          equ	4027	;# 
   490   000FBC                     CCPR2H          equ	4028	;# 
   491   000FBD                     CCP1CON         equ	4029	;# 
   492   000FBE                     CCPR1           equ	4030	;# 
   493   000FBE                     CCPR1L          equ	4030	;# 
   494   000FBF                     CCPR1H          equ	4031	;# 
   495   000FC0                     ADCON2          equ	4032	;# 
   496   000FC1                     ADCON1          equ	4033	;# 
   497   000FC2                     ADCON0          equ	4034	;# 
   498   000FC3                     ADRES           equ	4035	;# 
   499   000FC3                     ADRESL          equ	4035	;# 
   500   000FC4                     ADRESH          equ	4036	;# 
   501   000FC5                     SSPCON2         equ	4037	;# 
   502   000FC6                     SSPCON1         equ	4038	;# 
   503   000FC7                     SSPSTAT         equ	4039	;# 
   504   000FC8                     SSPADD          equ	4040	;# 
   505   000FC9                     SSPBUF          equ	4041	;# 
   506   000FCA                     T2CON           equ	4042	;# 
   507   000FCB                     PR2             equ	4043	;# 
   508   000FCB                     MEMCON          equ	4043	;# 
   509   000FCC                     TMR2            equ	4044	;# 
   510   000FCD                     T1CON           equ	4045	;# 
   511   000FCE                     TMR1            equ	4046	;# 
   512   000FCE                     TMR1L           equ	4046	;# 
   513   000FCF                     TMR1H           equ	4047	;# 
   514   000FD0                     RCON            equ	4048	;# 
   515   000FD1                     WDTCON          equ	4049	;# 
   516   000FD2                     HLVDCON         equ	4050	;# 
   517   000FD2                     LVDCON          equ	4050	;# 
   518   000FD3                     OSCCON          equ	4051	;# 
   519   000FD5                     T0CON           equ	4053	;# 
   520   000FD6                     TMR0            equ	4054	;# 
   521   000FD6                     TMR0L           equ	4054	;# 
   522   000FD7                     TMR0H           equ	4055	;# 
   523   000FD8                     STATUS          equ	4056	;# 
   524   000FD9                     FSR2            equ	4057	;# 
   525   000FD9                     FSR2L           equ	4057	;# 
   526   000FDA                     FSR2H           equ	4058	;# 
   527   000FDB                     PLUSW2          equ	4059	;# 
   528   000FDC                     PREINC2         equ	4060	;# 
   529   000FDD                     POSTDEC2        equ	4061	;# 
   530   000FDE                     POSTINC2        equ	4062	;# 
   531   000FDF                     INDF2           equ	4063	;# 
   532   000FE0                     BSR             equ	4064	;# 
   533   000FE1                     FSR1            equ	4065	;# 
   534   000FE1                     FSR1L           equ	4065	;# 
   535   000FE2                     FSR1H           equ	4066	;# 
   536   000FE3                     PLUSW1          equ	4067	;# 
   537   000FE4                     PREINC1         equ	4068	;# 
   538   000FE5                     POSTDEC1        equ	4069	;# 
   539   000FE6                     POSTINC1        equ	4070	;# 
   540   000FE7                     INDF1           equ	4071	;# 
   541   000FE8                     WREG            equ	4072	;# 
   542   000FE9                     FSR0            equ	4073	;# 
   543   000FE9                     FSR0L           equ	4073	;# 
   544   000FEA                     FSR0H           equ	4074	;# 
   545   000FEB                     PLUSW0          equ	4075	;# 
   546   000FEC                     PREINC0         equ	4076	;# 
   547   000FED                     POSTDEC0        equ	4077	;# 
   548   000FEE                     POSTINC0        equ	4078	;# 
   549   000FEF                     INDF0           equ	4079	;# 
   550   000FF0                     INTCON3         equ	4080	;# 
   551   000FF1                     INTCON2         equ	4081	;# 
   552   000FF2                     INTCON          equ	4082	;# 
   553   000FF3                     PROD            equ	4083	;# 
   554   000FF3                     PRODL           equ	4083	;# 
   555   000FF4                     PRODH           equ	4084	;# 
   556   000FF5                     TABLAT          equ	4085	;# 
   557   000FF6                     TBLPTR          equ	4086	;# 
   558   000FF6                     TBLPTRL         equ	4086	;# 
   559   000FF7                     TBLPTRH         equ	4087	;# 
   560   000FF8                     TBLPTRU         equ	4088	;# 
   561   000FF9                     PCLAT           equ	4089	;# 
   562   000FF9                     PC              equ	4089	;# 
   563   000FF9                     PCL             equ	4089	;# 
   564   000FFA                     PCLATH          equ	4090	;# 
   565   000FFB                     PCLATU          equ	4091	;# 
   566   000FFC                     STKPTR          equ	4092	;# 
   567   000FFD                     TOS             equ	4093	;# 
   568   000FFD                     TOSL            equ	4093	;# 
   569   000FFE                     TOSH            equ	4094	;# 
   570   000FFF                     TOSU            equ	4095	;# 
   571   000F77                     SSPMSK          equ	3959	;# 
   572   000F78                     SLRCON          equ	3960	;# 
   573   000F79                     CM2CON1         equ	3961	;# 
   574   000F7A                     CM2CON0         equ	3962	;# 
   575   000F7B                     CM1CON0         equ	3963	;# 
   576   000F7C                     WPUB            equ	3964	;# 
   577   000F7D                     IOCB            equ	3965	;# 
   578   000F7E                     ANSEL           equ	3966	;# 
   579   000F7F                     ANSELH          equ	3967	;# 
   580   000F80                     PORTA           equ	3968	;# 
   581   000F81                     PORTB           equ	3969	;# 
   582   000F82                     PORTC           equ	3970	;# 
   583   000F83                     PORTD           equ	3971	;# 
   584   000F84                     PORTE           equ	3972	;# 
   585   000F89                     LATA            equ	3977	;# 
   586   000F8A                     LATB            equ	3978	;# 
   587   000F8B                     LATC            equ	3979	;# 
   588   000F8C                     LATD            equ	3980	;# 
   589   000F8D                     LATE            equ	3981	;# 
   590   000F92                     TRISA           equ	3986	;# 
   591   000F92                     DDRA            equ	3986	;# 
   592   000F93                     TRISB           equ	3987	;# 
   593   000F93                     DDRB            equ	3987	;# 
   594   000F94                     TRISC           equ	3988	;# 
   595   000F94                     DDRC            equ	3988	;# 
   596   000F95                     TRISD           equ	3989	;# 
   597   000F95                     DDRD            equ	3989	;# 
   598   000F96                     TRISE           equ	3990	;# 
   599   000F96                     DDRE            equ	3990	;# 
   600   000F9B                     OSCTUNE         equ	3995	;# 
   601   000F9D                     PIE1            equ	3997	;# 
   602   000F9E                     PIR1            equ	3998	;# 
   603   000F9F                     IPR1            equ	3999	;# 
   604   000FA0                     PIE2            equ	4000	;# 
   605   000FA1                     PIR2            equ	4001	;# 
   606   000FA2                     IPR2            equ	4002	;# 
   607   000FA6                     EECON1          equ	4006	;# 
   608   000FA7                     EECON2          equ	4007	;# 
   609   000FA8                     EEDATA          equ	4008	;# 
   610   000FA9                     EEADR           equ	4009	;# 
   611   000FAA                     EEADRH          equ	4010	;# 
   612   000FAB                     RCSTA           equ	4011	;# 
   613   000FAB                     RCSTA1          equ	4011	;# 
   614   000FAC                     TXSTA           equ	4012	;# 
   615   000FAC                     TXSTA1          equ	4012	;# 
   616   000FAD                     TXREG           equ	4013	;# 
   617   000FAD                     TXREG1          equ	4013	;# 
   618   000FAE                     RCREG           equ	4014	;# 
   619   000FAE                     RCREG1          equ	4014	;# 
   620   000FAF                     SPBRG           equ	4015	;# 
   621   000FAF                     SPBRG1          equ	4015	;# 
   622   000FB0                     SPBRGH          equ	4016	;# 
   623   000FB1                     T3CON           equ	4017	;# 
   624   000FB2                     TMR3            equ	4018	;# 
   625   000FB2                     TMR3L           equ	4018	;# 
   626   000FB3                     TMR3H           equ	4019	;# 
   627   000FB4                     CVRCON2         equ	4020	;# 
   628   000FB5                     CVRCON          equ	4021	;# 
   629   000FB6                     ECCP1AS         equ	4022	;# 
   630   000FB7                     PWM1CON         equ	4023	;# 
   631   000FB8                     BAUDCON         equ	4024	;# 
   632   000FB8                     BAUDCTL         equ	4024	;# 
   633   000FB9                     PSTRCON         equ	4025	;# 
   634   000FBA                     CCP2CON         equ	4026	;# 
   635   000FBB                     CCPR2           equ	4027	;# 
   636   000FBB                     CCPR2L          equ	4027	;# 
   637   000FBC                     CCPR2H          equ	4028	;# 
   638   000FBD                     CCP1CON         equ	4029	;# 
   639   000FBE                     CCPR1           equ	4030	;# 
   640   000FBE                     CCPR1L          equ	4030	;# 
   641   000FBF                     CCPR1H          equ	4031	;# 
   642   000FC0                     ADCON2          equ	4032	;# 
   643   000FC1                     ADCON1          equ	4033	;# 
   644   000FC2                     ADCON0          equ	4034	;# 
   645   000FC3                     ADRES           equ	4035	;# 
   646   000FC3                     ADRESL          equ	4035	;# 
   647   000FC4                     ADRESH          equ	4036	;# 
   648   000FC5                     SSPCON2         equ	4037	;# 
   649   000FC6                     SSPCON1         equ	4038	;# 
   650   000FC7                     SSPSTAT         equ	4039	;# 
   651   000FC8                     SSPADD          equ	4040	;# 
   652   000FC9                     SSPBUF          equ	4041	;# 
   653   000FCA                     T2CON           equ	4042	;# 
   654   000FCB                     PR2             equ	4043	;# 
   655   000FCB                     MEMCON          equ	4043	;# 
   656   000FCC                     TMR2            equ	4044	;# 
   657   000FCD                     T1CON           equ	4045	;# 
   658   000FCE                     TMR1            equ	4046	;# 
   659   000FCE                     TMR1L           equ	4046	;# 
   660   000FCF                     TMR1H           equ	4047	;# 
   661   000FD0                     RCON            equ	4048	;# 
   662   000FD1                     WDTCON          equ	4049	;# 
   663   000FD2                     HLVDCON         equ	4050	;# 
   664   000FD2                     LVDCON          equ	4050	;# 
   665   000FD3                     OSCCON          equ	4051	;# 
   666   000FD5                     T0CON           equ	4053	;# 
   667   000FD6                     TMR0            equ	4054	;# 
   668   000FD6                     TMR0L           equ	4054	;# 
   669   000FD7                     TMR0H           equ	4055	;# 
   670   000FD8                     STATUS          equ	4056	;# 
   671   000FD9                     FSR2            equ	4057	;# 
   672   000FD9                     FSR2L           equ	4057	;# 
   673   000FDA                     FSR2H           equ	4058	;# 
   674   000FDB                     PLUSW2          equ	4059	;# 
   675   000FDC                     PREINC2         equ	4060	;# 
   676   000FDD                     POSTDEC2        equ	4061	;# 
   677   000FDE                     POSTINC2        equ	4062	;# 
   678   000FDF                     INDF2           equ	4063	;# 
   679   000FE0                     BSR             equ	4064	;# 
   680   000FE1                     FSR1            equ	4065	;# 
   681   000FE1                     FSR1L           equ	4065	;# 
   682   000FE2                     FSR1H           equ	4066	;# 
   683   000FE3                     PLUSW1          equ	4067	;# 
   684   000FE4                     PREINC1         equ	4068	;# 
   685   000FE5                     POSTDEC1        equ	4069	;# 
   686   000FE6                     POSTINC1        equ	4070	;# 
   687   000FE7                     INDF1           equ	4071	;# 
   688   000FE8                     WREG            equ	4072	;# 
   689   000FE9                     FSR0            equ	4073	;# 
   690   000FE9                     FSR0L           equ	4073	;# 
   691   000FEA                     FSR0H           equ	4074	;# 
   692   000FEB                     PLUSW0          equ	4075	;# 
   693   000FEC                     PREINC0         equ	4076	;# 
   694   000FED                     POSTDEC0        equ	4077	;# 
   695   000FEE                     POSTINC0        equ	4078	;# 
   696   000FEF                     INDF0           equ	4079	;# 
   697   000FF0                     INTCON3         equ	4080	;# 
   698   000FF1                     INTCON2         equ	4081	;# 
   699   000FF2                     INTCON          equ	4082	;# 
   700   000FF3                     PROD            equ	4083	;# 
   701   000FF3                     PRODL           equ	4083	;# 
   702   000FF4                     PRODH           equ	4084	;# 
   703   000FF5                     TABLAT          equ	4085	;# 
   704   000FF6                     TBLPTR          equ	4086	;# 
   705   000FF6                     TBLPTRL         equ	4086	;# 
   706   000FF7                     TBLPTRH         equ	4087	;# 
   707   000FF8                     TBLPTRU         equ	4088	;# 
   708   000FF9                     PCLAT           equ	4089	;# 
   709   000FF9                     PC              equ	4089	;# 
   710   000FF9                     PCL             equ	4089	;# 
   711   000FFA                     PCLATH          equ	4090	;# 
   712   000FFB                     PCLATU          equ	4091	;# 
   713   000FFC                     STKPTR          equ	4092	;# 
   714   000FFD                     TOS             equ	4093	;# 
   715   000FFD                     TOSL            equ	4093	;# 
   716   000FFE                     TOSH            equ	4094	;# 
   717   000FFF                     TOSU            equ	4095	;# 
   718   000F77                     SSPMSK          equ	3959	;# 
   719   000F78                     SLRCON          equ	3960	;# 
   720   000F79                     CM2CON1         equ	3961	;# 
   721   000F7A                     CM2CON0         equ	3962	;# 
   722   000F7B                     CM1CON0         equ	3963	;# 
   723   000F7C                     WPUB            equ	3964	;# 
   724   000F7D                     IOCB            equ	3965	;# 
   725   000F7E                     ANSEL           equ	3966	;# 
   726   000F7F                     ANSELH          equ	3967	;# 
   727   000F80                     PORTA           equ	3968	;# 
   728   000F81                     PORTB           equ	3969	;# 
   729   000F82                     PORTC           equ	3970	;# 
   730   000F83                     PORTD           equ	3971	;# 
   731   000F84                     PORTE           equ	3972	;# 
   732   000F89                     LATA            equ	3977	;# 
   733   000F8A                     LATB            equ	3978	;# 
   734   000F8B                     LATC            equ	3979	;# 
   735   000F8C                     LATD            equ	3980	;# 
   736   000F8D                     LATE            equ	3981	;# 
   737   000F92                     TRISA           equ	3986	;# 
   738   000F92                     DDRA            equ	3986	;# 
   739   000F93                     TRISB           equ	3987	;# 
   740   000F93                     DDRB            equ	3987	;# 
   741   000F94                     TRISC           equ	3988	;# 
   742   000F94                     DDRC            equ	3988	;# 
   743   000F95                     TRISD           equ	3989	;# 
   744   000F95                     DDRD            equ	3989	;# 
   745   000F96                     TRISE           equ	3990	;# 
   746   000F96                     DDRE            equ	3990	;# 
   747   000F9B                     OSCTUNE         equ	3995	;# 
   748   000F9D                     PIE1            equ	3997	;# 
   749   000F9E                     PIR1            equ	3998	;# 
   750   000F9F                     IPR1            equ	3999	;# 
   751   000FA0                     PIE2            equ	4000	;# 
   752   000FA1                     PIR2            equ	4001	;# 
   753   000FA2                     IPR2            equ	4002	;# 
   754   000FA6                     EECON1          equ	4006	;# 
   755   000FA7                     EECON2          equ	4007	;# 
   756   000FA8                     EEDATA          equ	4008	;# 
   757   000FA9                     EEADR           equ	4009	;# 
   758   000FAA                     EEADRH          equ	4010	;# 
   759   000FAB                     RCSTA           equ	4011	;# 
   760   000FAB                     RCSTA1          equ	4011	;# 
   761   000FAC                     TXSTA           equ	4012	;# 
   762   000FAC                     TXSTA1          equ	4012	;# 
   763   000FAD                     TXREG           equ	4013	;# 
   764   000FAD                     TXREG1          equ	4013	;# 
   765   000FAE                     RCREG           equ	4014	;# 
   766   000FAE                     RCREG1          equ	4014	;# 
   767   000FAF                     SPBRG           equ	4015	;# 
   768   000FAF                     SPBRG1          equ	4015	;# 
   769   000FB0                     SPBRGH          equ	4016	;# 
   770   000FB1                     T3CON           equ	4017	;# 
   771   000FB2                     TMR3            equ	4018	;# 
   772   000FB2                     TMR3L           equ	4018	;# 
   773   000FB3                     TMR3H           equ	4019	;# 
   774   000FB4                     CVRCON2         equ	4020	;# 
   775   000FB5                     CVRCON          equ	4021	;# 
   776   000FB6                     ECCP1AS         equ	4022	;# 
   777   000FB7                     PWM1CON         equ	4023	;# 
   778   000FB8                     BAUDCON         equ	4024	;# 
   779   000FB8                     BAUDCTL         equ	4024	;# 
   780   000FB9                     PSTRCON         equ	4025	;# 
   781   000FBA                     CCP2CON         equ	4026	;# 
   782   000FBB                     CCPR2           equ	4027	;# 
   783   000FBB                     CCPR2L          equ	4027	;# 
   784   000FBC                     CCPR2H          equ	4028	;# 
   785   000FBD                     CCP1CON         equ	4029	;# 
   786   000FBE                     CCPR1           equ	4030	;# 
   787   000FBE                     CCPR1L          equ	4030	;# 
   788   000FBF                     CCPR1H          equ	4031	;# 
   789   000FC0                     ADCON2          equ	4032	;# 
   790   000FC1                     ADCON1          equ	4033	;# 
   791   000FC2                     ADCON0          equ	4034	;# 
   792   000FC3                     ADRES           equ	4035	;# 
   793   000FC3                     ADRESL          equ	4035	;# 
   794   000FC4                     ADRESH          equ	4036	;# 
   795   000FC5                     SSPCON2         equ	4037	;# 
   796   000FC6                     SSPCON1         equ	4038	;# 
   797   000FC7                     SSPSTAT         equ	4039	;# 
   798   000FC8                     SSPADD          equ	4040	;# 
   799   000FC9                     SSPBUF          equ	4041	;# 
   800   000FCA                     T2CON           equ	4042	;# 
   801   000FCB                     PR2             equ	4043	;# 
   802   000FCB                     MEMCON          equ	4043	;# 
   803   000FCC                     TMR2            equ	4044	;# 
   804   000FCD                     T1CON           equ	4045	;# 
   805   000FCE                     TMR1            equ	4046	;# 
   806   000FCE                     TMR1L           equ	4046	;# 
   807   000FCF                     TMR1H           equ	4047	;# 
   808   000FD0                     RCON            equ	4048	;# 
   809   000FD1                     WDTCON          equ	4049	;# 
   810   000FD2                     HLVDCON         equ	4050	;# 
   811   000FD2                     LVDCON          equ	4050	;# 
   812   000FD3                     OSCCON          equ	4051	;# 
   813   000FD5                     T0CON           equ	4053	;# 
   814   000FD6                     TMR0            equ	4054	;# 
   815   000FD6                     TMR0L           equ	4054	;# 
   816   000FD7                     TMR0H           equ	4055	;# 
   817   000FD8                     STATUS          equ	4056	;# 
   818   000FD9                     FSR2            equ	4057	;# 
   819   000FD9                     FSR2L           equ	4057	;# 
   820   000FDA                     FSR2H           equ	4058	;# 
   821   000FDB                     PLUSW2          equ	4059	;# 
   822   000FDC                     PREINC2         equ	4060	;# 
   823   000FDD                     POSTDEC2        equ	4061	;# 
   824   000FDE                     POSTINC2        equ	4062	;# 
   825   000FDF                     INDF2           equ	4063	;# 
   826   000FE0                     BSR             equ	4064	;# 
   827   000FE1                     FSR1            equ	4065	;# 
   828   000FE1                     FSR1L           equ	4065	;# 
   829   000FE2                     FSR1H           equ	4066	;# 
   830   000FE3                     PLUSW1          equ	4067	;# 
   831   000FE4                     PREINC1         equ	4068	;# 
   832   000FE5                     POSTDEC1        equ	4069	;# 
   833   000FE6                     POSTINC1        equ	4070	;# 
   834   000FE7                     INDF1           equ	4071	;# 
   835   000FE8                     WREG            equ	4072	;# 
   836   000FE9                     FSR0            equ	4073	;# 
   837   000FE9                     FSR0L           equ	4073	;# 
   838   000FEA                     FSR0H           equ	4074	;# 
   839   000FEB                     PLUSW0          equ	4075	;# 
   840   000FEC                     PREINC0         equ	4076	;# 
   841   000FED                     POSTDEC0        equ	4077	;# 
   842   000FEE                     POSTINC0        equ	4078	;# 
   843   000FEF                     INDF0           equ	4079	;# 
   844   000FF0                     INTCON3         equ	4080	;# 
   845   000FF1                     INTCON2         equ	4081	;# 
   846   000FF2                     INTCON          equ	4082	;# 
   847   000FF3                     PROD            equ	4083	;# 
   848   000FF3                     PRODL           equ	4083	;# 
   849   000FF4                     PRODH           equ	4084	;# 
   850   000FF5                     TABLAT          equ	4085	;# 
   851   000FF6                     TBLPTR          equ	4086	;# 
   852   000FF6                     TBLPTRL         equ	4086	;# 
   853   000FF7                     TBLPTRH         equ	4087	;# 
   854   000FF8                     TBLPTRU         equ	4088	;# 
   855   000FF9                     PCLAT           equ	4089	;# 
   856   000FF9                     PC              equ	4089	;# 
   857   000FF9                     PCL             equ	4089	;# 
   858   000FFA                     PCLATH          equ	4090	;# 
   859   000FFB                     PCLATU          equ	4091	;# 
   860   000FFC                     STKPTR          equ	4092	;# 
   861   000FFD                     TOS             equ	4093	;# 
   862   000FFD                     TOSL            equ	4093	;# 
   863   000FFE                     TOSH            equ	4094	;# 
   864   000FFF                     TOSU            equ	4095	;# 
   865   000F77                     SSPMSK          equ	3959	;# 
   866   000F78                     SLRCON          equ	3960	;# 
   867   000F79                     CM2CON1         equ	3961	;# 
   868   000F7A                     CM2CON0         equ	3962	;# 
   869   000F7B                     CM1CON0         equ	3963	;# 
   870   000F7C                     WPUB            equ	3964	;# 
   871   000F7D                     IOCB            equ	3965	;# 
   872   000F7E                     ANSEL           equ	3966	;# 
   873   000F7F                     ANSELH          equ	3967	;# 
   874   000F80                     PORTA           equ	3968	;# 
   875   000F81                     PORTB           equ	3969	;# 
   876   000F82                     PORTC           equ	3970	;# 
   877   000F83                     PORTD           equ	3971	;# 
   878   000F84                     PORTE           equ	3972	;# 
   879   000F89                     LATA            equ	3977	;# 
   880   000F8A                     LATB            equ	3978	;# 
   881   000F8B                     LATC            equ	3979	;# 
   882   000F8C                     LATD            equ	3980	;# 
   883   000F8D                     LATE            equ	3981	;# 
   884   000F92                     TRISA           equ	3986	;# 
   885   000F92                     DDRA            equ	3986	;# 
   886   000F93                     TRISB           equ	3987	;# 
   887   000F93                     DDRB            equ	3987	;# 
   888   000F94                     TRISC           equ	3988	;# 
   889   000F94                     DDRC            equ	3988	;# 
   890   000F95                     TRISD           equ	3989	;# 
   891   000F95                     DDRD            equ	3989	;# 
   892   000F96                     TRISE           equ	3990	;# 
   893   000F96                     DDRE            equ	3990	;# 
   894   000F9B                     OSCTUNE         equ	3995	;# 
   895   000F9D                     PIE1            equ	3997	;# 
   896   000F9E                     PIR1            equ	3998	;# 
   897   000F9F                     IPR1            equ	3999	;# 
   898   000FA0                     PIE2            equ	4000	;# 
   899   000FA1                     PIR2            equ	4001	;# 
   900   000FA2                     IPR2            equ	4002	;# 
   901   000FA6                     EECON1          equ	4006	;# 
   902   000FA7                     EECON2          equ	4007	;# 
   903   000FA8                     EEDATA          equ	4008	;# 
   904   000FA9                     EEADR           equ	4009	;# 
   905   000FAA                     EEADRH          equ	4010	;# 
   906   000FAB                     RCSTA           equ	4011	;# 
   907   000FAB                     RCSTA1          equ	4011	;# 
   908   000FAC                     TXSTA           equ	4012	;# 
   909   000FAC                     TXSTA1          equ	4012	;# 
   910   000FAD                     TXREG           equ	4013	;# 
   911   000FAD                     TXREG1          equ	4013	;# 
   912   000FAE                     RCREG           equ	4014	;# 
   913   000FAE                     RCREG1          equ	4014	;# 
   914   000FAF                     SPBRG           equ	4015	;# 
   915   000FAF                     SPBRG1          equ	4015	;# 
   916   000FB0                     SPBRGH          equ	4016	;# 
   917   000FB1                     T3CON           equ	4017	;# 
   918   000FB2                     TMR3            equ	4018	;# 
   919   000FB2                     TMR3L           equ	4018	;# 
   920   000FB3                     TMR3H           equ	4019	;# 
   921   000FB4                     CVRCON2         equ	4020	;# 
   922   000FB5                     CVRCON          equ	4021	;# 
   923   000FB6                     ECCP1AS         equ	4022	;# 
   924   000FB7                     PWM1CON         equ	4023	;# 
   925   000FB8                     BAUDCON         equ	4024	;# 
   926   000FB8                     BAUDCTL         equ	4024	;# 
   927   000FB9                     PSTRCON         equ	4025	;# 
   928   000FBA                     CCP2CON         equ	4026	;# 
   929   000FBB                     CCPR2           equ	4027	;# 
   930   000FBB                     CCPR2L          equ	4027	;# 
   931   000FBC                     CCPR2H          equ	4028	;# 
   932   000FBD                     CCP1CON         equ	4029	;# 
   933   000FBE                     CCPR1           equ	4030	;# 
   934   000FBE                     CCPR1L          equ	4030	;# 
   935   000FBF                     CCPR1H          equ	4031	;# 
   936   000FC0                     ADCON2          equ	4032	;# 
   937   000FC1                     ADCON1          equ	4033	;# 
   938   000FC2                     ADCON0          equ	4034	;# 
   939   000FC3                     ADRES           equ	4035	;# 
   940   000FC3                     ADRESL          equ	4035	;# 
   941   000FC4                     ADRESH          equ	4036	;# 
   942   000FC5                     SSPCON2         equ	4037	;# 
   943   000FC6                     SSPCON1         equ	4038	;# 
   944   000FC7                     SSPSTAT         equ	4039	;# 
   945   000FC8                     SSPADD          equ	4040	;# 
   946   000FC9                     SSPBUF          equ	4041	;# 
   947   000FCA                     T2CON           equ	4042	;# 
   948   000FCB                     PR2             equ	4043	;# 
   949   000FCB                     MEMCON          equ	4043	;# 
   950   000FCC                     TMR2            equ	4044	;# 
   951   000FCD                     T1CON           equ	4045	;# 
   952   000FCE                     TMR1            equ	4046	;# 
   953   000FCE                     TMR1L           equ	4046	;# 
   954   000FCF                     TMR1H           equ	4047	;# 
   955   000FD0                     RCON            equ	4048	;# 
   956   000FD1                     WDTCON          equ	4049	;# 
   957   000FD2                     HLVDCON         equ	4050	;# 
   958   000FD2                     LVDCON          equ	4050	;# 
   959   000FD3                     OSCCON          equ	4051	;# 
   960   000FD5                     T0CON           equ	4053	;# 
   961   000FD6                     TMR0            equ	4054	;# 
   962   000FD6                     TMR0L           equ	4054	;# 
   963   000FD7                     TMR0H           equ	4055	;# 
   964   000FD8                     STATUS          equ	4056	;# 
   965   000FD9                     FSR2            equ	4057	;# 
   966   000FD9                     FSR2L           equ	4057	;# 
   967   000FDA                     FSR2H           equ	4058	;# 
   968   000FDB                     PLUSW2          equ	4059	;# 
   969   000FDC                     PREINC2         equ	4060	;# 
   970   000FDD                     POSTDEC2        equ	4061	;# 
   971   000FDE                     POSTINC2        equ	4062	;# 
   972   000FDF                     INDF2           equ	4063	;# 
   973   000FE0                     BSR             equ	4064	;# 
   974   000FE1                     FSR1            equ	4065	;# 
   975   000FE1                     FSR1L           equ	4065	;# 
   976   000FE2                     FSR1H           equ	4066	;# 
   977   000FE3                     PLUSW1          equ	4067	;# 
   978   000FE4                     PREINC1         equ	4068	;# 
   979   000FE5                     POSTDEC1        equ	4069	;# 
   980   000FE6                     POSTINC1        equ	4070	;# 
   981   000FE7                     INDF1           equ	4071	;# 
   982   000FE8                     WREG            equ	4072	;# 
   983   000FE9                     FSR0            equ	4073	;# 
   984   000FE9                     FSR0L           equ	4073	;# 
   985   000FEA                     FSR0H           equ	4074	;# 
   986   000FEB                     PLUSW0          equ	4075	;# 
   987   000FEC                     PREINC0         equ	4076	;# 
   988   000FED                     POSTDEC0        equ	4077	;# 
   989   000FEE                     POSTINC0        equ	4078	;# 
   990   000FEF                     INDF0           equ	4079	;# 
   991   000FF0                     INTCON3         equ	4080	;# 
   992   000FF1                     INTCON2         equ	4081	;# 
   993   000FF2                     INTCON          equ	4082	;# 
   994   000FF3                     PROD            equ	4083	;# 
   995   000FF3                     PRODL           equ	4083	;# 
   996   000FF4                     PRODH           equ	4084	;# 
   997   000FF5                     TABLAT          equ	4085	;# 
   998   000FF6                     TBLPTR          equ	4086	;# 
   999   000FF6                     TBLPTRL         equ	4086	;# 
  1000   000FF7                     TBLPTRH         equ	4087	;# 
  1001   000FF8                     TBLPTRU         equ	4088	;# 
  1002   000FF9                     PCLAT           equ	4089	;# 
  1003   000FF9                     PC              equ	4089	;# 
  1004   000FF9                     PCL             equ	4089	;# 
  1005   000FFA                     PCLATH          equ	4090	;# 
  1006   000FFB                     PCLATU          equ	4091	;# 
  1007   000FFC                     STKPTR          equ	4092	;# 
  1008   000FFD                     TOS             equ	4093	;# 
  1009   000FFD                     TOSL            equ	4093	;# 
  1010   000FFE                     TOSH            equ	4094	;# 
  1011   000FFF                     TOSU            equ	4095	;# 
  1012   000F77                     SSPMSK          equ	3959	;# 
  1013   000F78                     SLRCON          equ	3960	;# 
  1014   000F79                     CM2CON1         equ	3961	;# 
  1015   000F7A                     CM2CON0         equ	3962	;# 
  1016   000F7B                     CM1CON0         equ	3963	;# 
  1017   000F7C                     WPUB            equ	3964	;# 
  1018   000F7D                     IOCB            equ	3965	;# 
  1019   000F7E                     ANSEL           equ	3966	;# 
  1020   000F7F                     ANSELH          equ	3967	;# 
  1021   000F80                     PORTA           equ	3968	;# 
  1022   000F81                     PORTB           equ	3969	;# 
  1023   000F82                     PORTC           equ	3970	;# 
  1024   000F83                     PORTD           equ	3971	;# 
  1025   000F84                     PORTE           equ	3972	;# 
  1026   000F89                     LATA            equ	3977	;# 
  1027   000F8A                     LATB            equ	3978	;# 
  1028   000F8B                     LATC            equ	3979	;# 
  1029   000F8C                     LATD            equ	3980	;# 
  1030   000F8D                     LATE            equ	3981	;# 
  1031   000F92                     TRISA           equ	3986	;# 
  1032   000F92                     DDRA            equ	3986	;# 
  1033   000F93                     TRISB           equ	3987	;# 
  1034   000F93                     DDRB            equ	3987	;# 
  1035   000F94                     TRISC           equ	3988	;# 
  1036   000F94                     DDRC            equ	3988	;# 
  1037   000F95                     TRISD           equ	3989	;# 
  1038   000F95                     DDRD            equ	3989	;# 
  1039   000F96                     TRISE           equ	3990	;# 
  1040   000F96                     DDRE            equ	3990	;# 
  1041   000F9B                     OSCTUNE         equ	3995	;# 
  1042   000F9D                     PIE1            equ	3997	;# 
  1043   000F9E                     PIR1            equ	3998	;# 
  1044   000F9F                     IPR1            equ	3999	;# 
  1045   000FA0                     PIE2            equ	4000	;# 
  1046   000FA1                     PIR2            equ	4001	;# 
  1047   000FA2                     IPR2            equ	4002	;# 
  1048   000FA6                     EECON1          equ	4006	;# 
  1049   000FA7                     EECON2          equ	4007	;# 
  1050   000FA8                     EEDATA          equ	4008	;# 
  1051   000FA9                     EEADR           equ	4009	;# 
  1052   000FAA                     EEADRH          equ	4010	;# 
  1053   000FAB                     RCSTA           equ	4011	;# 
  1054   000FAB                     RCSTA1          equ	4011	;# 
  1055   000FAC                     TXSTA           equ	4012	;# 
  1056   000FAC                     TXSTA1          equ	4012	;# 
  1057   000FAD                     TXREG           equ	4013	;# 
  1058   000FAD                     TXREG1          equ	4013	;# 
  1059   000FAE                     RCREG           equ	4014	;# 
  1060   000FAE                     RCREG1          equ	4014	;# 
  1061   000FAF                     SPBRG           equ	4015	;# 
  1062   000FAF                     SPBRG1          equ	4015	;# 
  1063   000FB0                     SPBRGH          equ	4016	;# 
  1064   000FB1                     T3CON           equ	4017	;# 
  1065   000FB2                     TMR3            equ	4018	;# 
  1066   000FB2                     TMR3L           equ	4018	;# 
  1067   000FB3                     TMR3H           equ	4019	;# 
  1068   000FB4                     CVRCON2         equ	4020	;# 
  1069   000FB5                     CVRCON          equ	4021	;# 
  1070   000FB6                     ECCP1AS         equ	4022	;# 
  1071   000FB7                     PWM1CON         equ	4023	;# 
  1072   000FB8                     BAUDCON         equ	4024	;# 
  1073   000FB8                     BAUDCTL         equ	4024	;# 
  1074   000FB9                     PSTRCON         equ	4025	;# 
  1075   000FBA                     CCP2CON         equ	4026	;# 
  1076   000FBB                     CCPR2           equ	4027	;# 
  1077   000FBB                     CCPR2L          equ	4027	;# 
  1078   000FBC                     CCPR2H          equ	4028	;# 
  1079   000FBD                     CCP1CON         equ	4029	;# 
  1080   000FBE                     CCPR1           equ	4030	;# 
  1081   000FBE                     CCPR1L          equ	4030	;# 
  1082   000FBF                     CCPR1H          equ	4031	;# 
  1083   000FC0                     ADCON2          equ	4032	;# 
  1084   000FC1                     ADCON1          equ	4033	;# 
  1085   000FC2                     ADCON0          equ	4034	;# 
  1086   000FC3                     ADRES           equ	4035	;# 
  1087   000FC3                     ADRESL          equ	4035	;# 
  1088   000FC4                     ADRESH          equ	4036	;# 
  1089   000FC5                     SSPCON2         equ	4037	;# 
  1090   000FC6                     SSPCON1         equ	4038	;# 
  1091   000FC7                     SSPSTAT         equ	4039	;# 
  1092   000FC8                     SSPADD          equ	4040	;# 
  1093   000FC9                     SSPBUF          equ	4041	;# 
  1094   000FCA                     T2CON           equ	4042	;# 
  1095   000FCB                     PR2             equ	4043	;# 
  1096   000FCB                     MEMCON          equ	4043	;# 
  1097   000FCC                     TMR2            equ	4044	;# 
  1098   000FCD                     T1CON           equ	4045	;# 
  1099   000FCE                     TMR1            equ	4046	;# 
  1100   000FCE                     TMR1L           equ	4046	;# 
  1101   000FCF                     TMR1H           equ	4047	;# 
  1102   000FD0                     RCON            equ	4048	;# 
  1103   000FD1                     WDTCON          equ	4049	;# 
  1104   000FD2                     HLVDCON         equ	4050	;# 
  1105   000FD2                     LVDCON          equ	4050	;# 
  1106   000FD3                     OSCCON          equ	4051	;# 
  1107   000FD5                     T0CON           equ	4053	;# 
  1108   000FD6                     TMR0            equ	4054	;# 
  1109   000FD6                     TMR0L           equ	4054	;# 
  1110   000FD7                     TMR0H           equ	4055	;# 
  1111   000FD8                     STATUS          equ	4056	;# 
  1112   000FD9                     FSR2            equ	4057	;# 
  1113   000FD9                     FSR2L           equ	4057	;# 
  1114   000FDA                     FSR2H           equ	4058	;# 
  1115   000FDB                     PLUSW2          equ	4059	;# 
  1116   000FDC                     PREINC2         equ	4060	;# 
  1117   000FDD                     POSTDEC2        equ	4061	;# 
  1118   000FDE                     POSTINC2        equ	4062	;# 
  1119   000FDF                     INDF2           equ	4063	;# 
  1120   000FE0                     BSR             equ	4064	;# 
  1121   000FE1                     FSR1            equ	4065	;# 
  1122   000FE1                     FSR1L           equ	4065	;# 
  1123   000FE2                     FSR1H           equ	4066	;# 
  1124   000FE3                     PLUSW1          equ	4067	;# 
  1125   000FE4                     PREINC1         equ	4068	;# 
  1126   000FE5                     POSTDEC1        equ	4069	;# 
  1127   000FE6                     POSTINC1        equ	4070	;# 
  1128   000FE7                     INDF1           equ	4071	;# 
  1129   000FE8                     WREG            equ	4072	;# 
  1130   000FE9                     FSR0            equ	4073	;# 
  1131   000FE9                     FSR0L           equ	4073	;# 
  1132   000FEA                     FSR0H           equ	4074	;# 
  1133   000FEB                     PLUSW0          equ	4075	;# 
  1134   000FEC                     PREINC0         equ	4076	;# 
  1135   000FED                     POSTDEC0        equ	4077	;# 
  1136   000FEE                     POSTINC0        equ	4078	;# 
  1137   000FEF                     INDF0           equ	4079	;# 
  1138   000FF0                     INTCON3         equ	4080	;# 
  1139   000FF1                     INTCON2         equ	4081	;# 
  1140   000FF2                     INTCON          equ	4082	;# 
  1141   000FF3                     PROD            equ	4083	;# 
  1142   000FF3                     PRODL           equ	4083	;# 
  1143   000FF4                     PRODH           equ	4084	;# 
  1144   000FF5                     TABLAT          equ	4085	;# 
  1145   000FF6                     TBLPTR          equ	4086	;# 
  1146   000FF6                     TBLPTRL         equ	4086	;# 
  1147   000FF7                     TBLPTRH         equ	4087	;# 
  1148   000FF8                     TBLPTRU         equ	4088	;# 
  1149   000FF9                     PCLAT           equ	4089	;# 
  1150   000FF9                     PC              equ	4089	;# 
  1151   000FF9                     PCL             equ	4089	;# 
  1152   000FFA                     PCLATH          equ	4090	;# 
  1153   000FFB                     PCLATU          equ	4091	;# 
  1154   000FFC                     STKPTR          equ	4092	;# 
  1155   000FFD                     TOS             equ	4093	;# 
  1156   000FFD                     TOSL            equ	4093	;# 
  1157   000FFE                     TOSH            equ	4094	;# 
  1158   000FFF                     TOSU            equ	4095	;# 
  1159   000F77                     SSPMSK          equ	3959	;# 
  1160   000F78                     SLRCON          equ	3960	;# 
  1161   000F79                     CM2CON1         equ	3961	;# 
  1162   000F7A                     CM2CON0         equ	3962	;# 
  1163   000F7B                     CM1CON0         equ	3963	;# 
  1164   000F7C                     WPUB            equ	3964	;# 
  1165   000F7D                     IOCB            equ	3965	;# 
  1166   000F7E                     ANSEL           equ	3966	;# 
  1167   000F7F                     ANSELH          equ	3967	;# 
  1168   000F80                     PORTA           equ	3968	;# 
  1169   000F81                     PORTB           equ	3969	;# 
  1170   000F82                     PORTC           equ	3970	;# 
  1171   000F83                     PORTD           equ	3971	;# 
  1172   000F84                     PORTE           equ	3972	;# 
  1173   000F89                     LATA            equ	3977	;# 
  1174   000F8A                     LATB            equ	3978	;# 
  1175   000F8B                     LATC            equ	3979	;# 
  1176   000F8C                     LATD            equ	3980	;# 
  1177   000F8D                     LATE            equ	3981	;# 
  1178   000F92                     TRISA           equ	3986	;# 
  1179   000F92                     DDRA            equ	3986	;# 
  1180   000F93                     TRISB           equ	3987	;# 
  1181   000F93                     DDRB            equ	3987	;# 
  1182   000F94                     TRISC           equ	3988	;# 
  1183   000F94                     DDRC            equ	3988	;# 
  1184   000F95                     TRISD           equ	3989	;# 
  1185   000F95                     DDRD            equ	3989	;# 
  1186   000F96                     TRISE           equ	3990	;# 
  1187   000F96                     DDRE            equ	3990	;# 
  1188   000F9B                     OSCTUNE         equ	3995	;# 
  1189   000F9D                     PIE1            equ	3997	;# 
  1190   000F9E                     PIR1            equ	3998	;# 
  1191   000F9F                     IPR1            equ	3999	;# 
  1192   000FA0                     PIE2            equ	4000	;# 
  1193   000FA1                     PIR2            equ	4001	;# 
  1194   000FA2                     IPR2            equ	4002	;# 
  1195   000FA6                     EECON1          equ	4006	;# 
  1196   000FA7                     EECON2          equ	4007	;# 
  1197   000FA8                     EEDATA          equ	4008	;# 
  1198   000FA9                     EEADR           equ	4009	;# 
  1199   000FAA                     EEADRH          equ	4010	;# 
  1200   000FAB                     RCSTA           equ	4011	;# 
  1201   000FAB                     RCSTA1          equ	4011	;# 
  1202   000FAC                     TXSTA           equ	4012	;# 
  1203   000FAC                     TXSTA1          equ	4012	;# 
  1204   000FAD                     TXREG           equ	4013	;# 
  1205   000FAD                     TXREG1          equ	4013	;# 
  1206   000FAE                     RCREG           equ	4014	;# 
  1207   000FAE                     RCREG1          equ	4014	;# 
  1208   000FAF                     SPBRG           equ	4015	;# 
  1209   000FAF                     SPBRG1          equ	4015	;# 
  1210   000FB0                     SPBRGH          equ	4016	;# 
  1211   000FB1                     T3CON           equ	4017	;# 
  1212   000FB2                     TMR3            equ	4018	;# 
  1213   000FB2                     TMR3L           equ	4018	;# 
  1214   000FB3                     TMR3H           equ	4019	;# 
  1215   000FB4                     CVRCON2         equ	4020	;# 
  1216   000FB5                     CVRCON          equ	4021	;# 
  1217   000FB6                     ECCP1AS         equ	4022	;# 
  1218   000FB7                     PWM1CON         equ	4023	;# 
  1219   000FB8                     BAUDCON         equ	4024	;# 
  1220   000FB8                     BAUDCTL         equ	4024	;# 
  1221   000FB9                     PSTRCON         equ	4025	;# 
  1222   000FBA                     CCP2CON         equ	4026	;# 
  1223   000FBB                     CCPR2           equ	4027	;# 
  1224   000FBB                     CCPR2L          equ	4027	;# 
  1225   000FBC                     CCPR2H          equ	4028	;# 
  1226   000FBD                     CCP1CON         equ	4029	;# 
  1227   000FBE                     CCPR1           equ	4030	;# 
  1228   000FBE                     CCPR1L          equ	4030	;# 
  1229   000FBF                     CCPR1H          equ	4031	;# 
  1230   000FC0                     ADCON2          equ	4032	;# 
  1231   000FC1                     ADCON1          equ	4033	;# 
  1232   000FC2                     ADCON0          equ	4034	;# 
  1233   000FC3                     ADRES           equ	4035	;# 
  1234   000FC3                     ADRESL          equ	4035	;# 
  1235   000FC4                     ADRESH          equ	4036	;# 
  1236   000FC5                     SSPCON2         equ	4037	;# 
  1237   000FC6                     SSPCON1         equ	4038	;# 
  1238   000FC7                     SSPSTAT         equ	4039	;# 
  1239   000FC8                     SSPADD          equ	4040	;# 
  1240   000FC9                     SSPBUF          equ	4041	;# 
  1241   000FCA                     T2CON           equ	4042	;# 
  1242   000FCB                     PR2             equ	4043	;# 
  1243   000FCB                     MEMCON          equ	4043	;# 
  1244   000FCC                     TMR2            equ	4044	;# 
  1245   000FCD                     T1CON           equ	4045	;# 
  1246   000FCE                     TMR1            equ	4046	;# 
  1247   000FCE                     TMR1L           equ	4046	;# 
  1248   000FCF                     TMR1H           equ	4047	;# 
  1249   000FD0                     RCON            equ	4048	;# 
  1250   000FD1                     WDTCON          equ	4049	;# 
  1251   000FD2                     HLVDCON         equ	4050	;# 
  1252   000FD2                     LVDCON          equ	4050	;# 
  1253   000FD3                     OSCCON          equ	4051	;# 
  1254   000FD5                     T0CON           equ	4053	;# 
  1255   000FD6                     TMR0            equ	4054	;# 
  1256   000FD6                     TMR0L           equ	4054	;# 
  1257   000FD7                     TMR0H           equ	4055	;# 
  1258   000FD8                     STATUS          equ	4056	;# 
  1259   000FD9                     FSR2            equ	4057	;# 
  1260   000FD9                     FSR2L           equ	4057	;# 
  1261   000FDA                     FSR2H           equ	4058	;# 
  1262   000FDB                     PLUSW2          equ	4059	;# 
  1263   000FDC                     PREINC2         equ	4060	;# 
  1264   000FDD                     POSTDEC2        equ	4061	;# 
  1265   000FDE                     POSTINC2        equ	4062	;# 
  1266   000FDF                     INDF2           equ	4063	;# 
  1267   000FE0                     BSR             equ	4064	;# 
  1268   000FE1                     FSR1            equ	4065	;# 
  1269   000FE1                     FSR1L           equ	4065	;# 
  1270   000FE2                     FSR1H           equ	4066	;# 
  1271   000FE3                     PLUSW1          equ	4067	;# 
  1272   000FE4                     PREINC1         equ	4068	;# 
  1273   000FE5                     POSTDEC1        equ	4069	;# 
  1274   000FE6                     POSTINC1        equ	4070	;# 
  1275   000FE7                     INDF1           equ	4071	;# 
  1276   000FE8                     WREG            equ	4072	;# 
  1277   000FE9                     FSR0            equ	4073	;# 
  1278   000FE9                     FSR0L           equ	4073	;# 
  1279   000FEA                     FSR0H           equ	4074	;# 
  1280   000FEB                     PLUSW0          equ	4075	;# 
  1281   000FEC                     PREINC0         equ	4076	;# 
  1282   000FED                     POSTDEC0        equ	4077	;# 
  1283   000FEE                     POSTINC0        equ	4078	;# 
  1284   000FEF                     INDF0           equ	4079	;# 
  1285   000FF0                     INTCON3         equ	4080	;# 
  1286   000FF1                     INTCON2         equ	4081	;# 
  1287   000FF2                     INTCON          equ	4082	;# 
  1288   000FF3                     PROD            equ	4083	;# 
  1289   000FF3                     PRODL           equ	4083	;# 
  1290   000FF4                     PRODH           equ	4084	;# 
  1291   000FF5                     TABLAT          equ	4085	;# 
  1292   000FF6                     TBLPTR          equ	4086	;# 
  1293   000FF6                     TBLPTRL         equ	4086	;# 
  1294   000FF7                     TBLPTRH         equ	4087	;# 
  1295   000FF8                     TBLPTRU         equ	4088	;# 
  1296   000FF9                     PCLAT           equ	4089	;# 
  1297   000FF9                     PC              equ	4089	;# 
  1298   000FF9                     PCL             equ	4089	;# 
  1299   000FFA                     PCLATH          equ	4090	;# 
  1300   000FFB                     PCLATU          equ	4091	;# 
  1301   000FFC                     STKPTR          equ	4092	;# 
  1302   000FFD                     TOS             equ	4093	;# 
  1303   000FFD                     TOSL            equ	4093	;# 
  1304   000FFE                     TOSH            equ	4094	;# 
  1305   000FFF                     TOSU            equ	4095	;# 
  1306                           
  1307                           	psect	smallconst
  1308   001000                     __psmallconst:
  1309                           	callstack 0
  1310   001000  00                 	db	0
  1311   001001                     _default_security_key:
  1312                           	callstack 0
  1313   001001  00                 	db	0
  1314   001002  10                 	db	16
  1315   001003  25                 	db	37
  1316   001004  37                 	db	55
  1317   001005  04                 	db	4
  1318   001006  55                 	db	85
  1319   001007  06                 	db	6
  1320   001008  79                 	db	121
  1321   001009  08                 	db	8
  1322   00100A  09                 	db	9
  1323   00100B  10                 	db	16
  1324   00100C  11                 	db	17
  1325   00100D  12                 	db	18
  1326   00100E  13                 	db	19
  1327   00100F  14                 	db	20
  1328   001010  15                 	db	21
  1329   001011                     __end_of_default_security_key:
  1330                           	callstack 0
  1331   001011                     _default_mac_address:
  1332                           	callstack 0
  1333   001011  11                 	db	17
  1334   001012  28                 	db	40
  1335   001013  35                 	db	53
  1336   001014  44                 	db	68
  1337   001015  56                 	db	86
  1338   001016  66                 	db	102
  1339   001017  77                 	db	119
  1340   001018  01                 	db	1
  1341   001019                     __end_of_default_mac_address:
  1342                           	callstack 0
  1343   007CF0                     _TMR1IF         set	31984
  1344   007E68                     _TMR1ON         set	32360
  1345   007E69                     _TMR1CS         set	32361
  1346   007E6B                     _T1OSCEN        set	32363
  1347   007E6A                     _T1SYNC         set	32362
  1348   007E6D                     _T1CKPS1        set	32365
  1349   007E6C                     _T1CKPS0        set	32364
  1350   007E6F                     _T1RD16         set	32367
  1351   007F8F                     _RBPU           set	32655
  1352   007CED                     _RCIE           set	31981
  1353   007CEE                     _ADIE           set	31982
  1354   007D03                     _BCLIE          set	32003
  1355   007CEB                     _SSPIE          set	31979
  1356   007D04                     _EEIE           set	32004
  1357   007D00                     _CCP2IE         set	32000
  1358   007CEA                     _CCP1IE         set	31978
  1359   007CE9                     _TMR2IE         set	31977
  1360   007CE8                     _TMR1IE         set	31976
  1361   007F95                     _T0IE           set	32661
  1362   007F93                     _RBIE           set	32659
  1363   007F94                     _INT0E          set	32660
  1364   007F96                     _PEIE           set	32662
  1365   007F97                     _GIE            set	32663
  1366   007E87                     _IPEN           set	32391
  1367   000FCF                     _TMR1H          set	4047
  1368   000FCE                     _TMR1L          set	4046
  1369   000F9B                     _OSCTUNE        set	3995
  1370   000FD3                     _OSCCON         set	4051
  1371   000F95                     _TRISDbits      set	3989
  1372   000F96                     _TRISEbits      set	3990
  1373   000F93                     _TRISBbits      set	3987
  1374   000F84                     _PORTE          set	3972
  1375   000F83                     _PORTD          set	3971
  1376   000F82                     _PORTC          set	3970
  1377   000F81                     _PORTB          set	3969
  1378   000F80                     _PORTA          set	3968
  1379   000F82                     _PORTCbits      set	3970
  1380   000F8D                     _LATEbits       set	3981
  1381   000FC9                     _SSPBUF         set	4041
  1382   000F9E                     _PIR1bits       set	3998
  1383   000FC6                     _SSPCON1bits    set	4038
  1384   000FC6                     _SSPCON1        set	4038
  1385   000FC7                     _SSPSTATbits    set	4039
  1386   000F94                     _TRISCbits      set	3988
  1387   000F81                     _PORTBbits      set	3969
  1388   000F8C                     _LATDbits       set	3980
  1389   000F8B                     _LATCbits       set	3979
  1390   001019                     STR_5:
  1391   001019  43                 	db	67	;'C'
  1392   00101A  4D                 	db	77	;'M'
  1393   00101B  44                 	db	68	;'D'
  1394   00101C  3A                 	db	58	;':'
  1395   00101D  41                 	db	65	;'A'
  1396   00101E  4C                 	db	76	;'L'
  1397   00101F  41                 	db	65	;'A'
  1398   001020  00                 	db	0
  1399   001021                     STR_3:
  1400   001021  43                 	db	67	;'C'
  1401   001022  4D                 	db	77	;'M'
  1402   001023  44                 	db	68	;'D'
  1403   001024  3A                 	db	58	;':'
  1404   001025  50                 	db	80	;'P'
  1405   001026  4C                 	db	76	;'L'
  1406   001027  41                 	db	65	;'A'
  1407   001028  00                 	db	0
  1408   001029                     STR_9:
  1409   001029  43                 	db	67	;'C'
  1410   00102A  4D                 	db	77	;'M'
  1411   00102B  44                 	db	68	;'D'
  1412   00102C  3A                 	db	58	;':'
  1413   00102D  41                 	db	65	;'A'
  1414   00102E  4C                 	db	76	;'L'
  1415   00102F  52                 	db	82	;'R'
  1416   001030  00                 	db	0
  1417   001031                     STR_7:
  1418   001031  43                 	db	67	;'C'
  1419   001032  4D                 	db	77	;'M'
  1420   001033  44                 	db	68	;'D'
  1421   001034  3A                 	db	58	;':'
  1422   001035  50                 	db	80	;'P'
  1423   001036  4C                 	db	76	;'L'
  1424   001037  52                 	db	82	;'R'
  1425   001038  00                 	db	0
  1426   001039                     STR_2:
  1427   001039  43                 	db	67	;'C'
  1428   00103A  4D                 	db	77	;'M'
  1429   00103B  44                 	db	68	;'D'
  1430   00103C  3A                 	db	58	;':'
  1431   00103D  41                 	db	65	;'A'
  1432   00103E  4C                 	db	76	;'L'
  1433   00103F  56                 	db	86	;'V'
  1434   001040  00                 	db	0
  1435   001041                     STR_1:
  1436   001041  43                 	db	67	;'C'
  1437   001042  4D                 	db	77	;'M'
  1438   001043  44                 	db	68	;'D'
  1439   001044  3A                 	db	58	;':'
  1440   001045  50                 	db	80	;'P'
  1441   001046  4C                 	db	76	;'L'
  1442   001047  56                 	db	86	;'V'
  1443   001048  00                 	db	0
  1444   001031                     STR_8           equ	STR_7
  1445   001029                     STR_10          equ	STR_9
  1446   001021                     STR_4           equ	STR_3
  1447   001019                     STR_6           equ	STR_5
  1448   001049  00                 	db	0	; dummy byte at the end
  1449   000002                     __activetblptr  equ	2
  1450                           
  1451                           ; #config settings
  1452                           
  1453                           	psect	cinit
  1454   001A62                     __pcinit:
  1455                           	callstack 0
  1456   001A62                     start_initialization:
  1457                           	callstack 0
  1458   001A62                     __initialization:
  1459                           	callstack 0
  1460                           
  1461                           ; Clear objects allocated to BANK0 (56 bytes)
  1462   001A62  EE00  F060         	lfsr	0,__pbssBANK0
  1463   001A66  0E38               	movlw	56
  1464   001A68                     clear_0:
  1465   001A68  6AEE               	clrf	postinc0,c
  1466   001A6A  06E8               	decf	wreg,f,c
  1467   001A6C  E1FD               	bnz	clear_0
  1468                           
  1469                           ; Clear objects allocated to COMRAM (45 bytes)
  1470   001A6E  EE00  F030         	lfsr	0,__pbssCOMRAM
  1471   001A72  0E2D               	movlw	45
  1472   001A74                     clear_1:
  1473   001A74  6AEE               	clrf	postinc0,c
  1474   001A76  06E8               	decf	wreg,f,c
  1475   001A78  E1FD               	bnz	clear_1
  1476   001A7A                     end_of_initialization:
  1477                           	callstack 0
  1478   001A7A                     __end_of__initialization:
  1479                           	callstack 0
  1480   001A7A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1481   001A7C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1482   001A7E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1483   001A80  6EF8               	movwf	tblptru,c
  1484   001A82  0100               	movlb	0
  1485   001A84  EF0A  F009         	goto	_main	;jump to C main() function
  1486                           
  1487                           	psect	bssCOMRAM
  1488   000030                     __pbssCOMRAM:
  1489                           	callstack 0
  1490   000030                     _mrf24_data_config:
  1491                           	callstack 0
  1492   000030                     	ds	34
  1493   000052                     _mrf24_data_out:
  1494                           	callstack 0
  1495   000052                     	ds	6
  1496   000058                     _timeStamp:
  1497                           	callstack 0
  1498   000058                     	ds	4
  1499   00005C                     _long_mac_address:
  1500                           	callstack 0
  1501   00005C                     	ds	1
  1502                           
  1503                           	psect	bssBANK0
  1504   000060                     __pbssBANK0:
  1505                           	callstack 0
  1506   000060                     _mrf24_data_in:
  1507                           	callstack 0
  1508   000060                     	ds	56
  1509                           
  1510                           	psect	cstackCOMRAM
  1511   000001                     __pcstackCOMRAM:
  1512                           	callstack 0
  1513   000001                     ?_strlen:
  1514                           	callstack 0
  1515   000001                     SetCSPin@estado:
  1516                           	callstack 0
  1517   000001                     SetWakePin@estado:
  1518                           	callstack 0
  1519   000001                     SetResetPin@estado:
  1520                           	callstack 0
  1521   000001                     SPIWriteByte@dato:
  1522                           	callstack 0
  1523   000001                     DelayInit@delay:
  1524                           	callstack 0
  1525   000001                     DelayReset@delay:
  1526                           	callstack 0
  1527   000001                     DelayIsRunning@delay:
  1528                           	callstack 0
  1529   000001                     strlen@s:
  1530                           	callstack 0
  1531   000001                     MRF24SetDireccionDestino@direccion:
  1532                           	callstack 0
  1533   000001                     MRF24SetPANIDDestino@panid:
  1534                           	callstack 0
  1535   000001                     ??_InicializoVariables:
  1536   000001                     
  1537                           ; 1 bytes @ 0x0
  1538   000001                     	ds	1
  1539   000002                     WriteByteSPIPort@dato:
  1540                           	callstack 0
  1541   000002                     DelayRead@delay:
  1542                           	callstack 0
  1543   000002                     InicializoVariables@i:
  1544                           	callstack 0
  1545   000002                     SPIWrite2Byte@dato:
  1546                           	callstack 0
  1547   000002                     DelayInit@duration:
  1548                           	callstack 0
  1549   000002                     
  1550                           ; 1 bytes @ 0x1
  1551   000002                     	ds	1
  1552   000003                     ?_strcmp:
  1553                           	callstack 0
  1554   000003                     SetShortAddr@valor:
  1555                           	callstack 0
  1556   000003                     GetShortAddr@leido_spi:
  1557                           	callstack 0
  1558   000003                     strcmp@l:
  1559                           	callstack 0
  1560   000003                     strlen@a:
  1561                           	callstack 0
  1562   000003                     ??_DelayRead:
  1563   000003                     
  1564                           ; 1 bytes @ 0x2
  1565   000003                     	ds	1
  1566   000004                     SetShortAddr@reg_address:
  1567                           	callstack 0
  1568   000004                     GetShortAddr@reg_address:
  1569                           	callstack 0
  1570   000004                     MRF24SetMensajeSalida@mensaje:
  1571                           	callstack 0
  1572   000004                     strcmp@r:
  1573                           	callstack 0
  1574   000004                     Write2ByteSPIPort@dato:
  1575                           	callstack 0
  1576   000004                     
  1577                           ; 1 bytes @ 0x3
  1578   000004                     	ds	1
  1579   000005                     SetDeviceMACAddress@i:
  1580                           	callstack 0
  1581   000005                     ??_strcmp:
  1582   000005                     
  1583                           ; 1 bytes @ 0x4
  1584   000005                     	ds	1
  1585   000006                     DebounceFSMInit@antirrebote_boton_n:
  1586                           	callstack 0
  1587   000006                     SetLongAddr@reg_address:
  1588                           	callstack 0
  1589   000006                     GetLongAddr@reg_address:
  1590                           	callstack 0
  1591   000006                     
  1592                           ; 1 bytes @ 0x5
  1593   000006                     	ds	1
  1594   000007                     
  1595                           ; 1 bytes @ 0x6
  1596   000007                     	ds	1
  1597   000008                     SetLongAddr@valor:
  1598                           	callstack 0
  1599   000008                     ??_GetLongAddr:
  1600                           
  1601                           ; 1 bytes @ 0x7
  1602   000008                     	ds	1
  1603   000009                     ??_SetLongAddr:
  1604                           
  1605                           ; 1 bytes @ 0x8
  1606   000009                     	ds	1
  1607   00000A                     GetLongAddr@respuesta:
  1608                           	callstack 0
  1609                           
  1610                           ; 1 bytes @ 0x9
  1611   00000A                     	ds	1
  1612   00000B                     ??_SetChannel:
  1613   00000B                     ??_MRF24TransmitirDato:
  1614   00000B                     ??_MRF24ReciboPaquete:
  1615                           
  1616                           ; 1 bytes @ 0xA
  1617   00000B                     	ds	4
  1618   00000F                     DebounceFSMUpdate@antirrebote_boton_n:
  1619                           	callstack 0
  1620   00000F                     ??_MRF24J40Init:
  1621                           
  1622                           ; 1 bytes @ 0xE
  1623   00000F                     	ds	1
  1624   000010                     MRF24J40Init@lectura:
  1625                           	callstack 0
  1626   000010                     MRF24TransmitirDato@i:
  1627                           	callstack 0
  1628   000010                     MRF24ReciboPaquete@largo_mensaje:
  1629                           	callstack 0
  1630   000010                     DebounceFSMUpdate@estado_pin:
  1631                           	callstack 0
  1632                           
  1633                           ; 1 bytes @ 0xF
  1634   000010                     	ds	1
  1635   000011                     MRF24TransmitirDato@pos_memoria:
  1636                           	callstack 0
  1637   000011                     MRF24ReciboPaquete@index:
  1638                           	callstack 0
  1639   000011                     MRF24J40Init@delay_time_out:
  1640                           	callstack 0
  1641   000011                     ??_DebounceFSMUpdate:
  1642                           
  1643                           ; 1 bytes @ 0x10
  1644   000011                     	ds	9
  1645   00001A                     ??_main:
  1646                           
  1647                           ; 1 bytes @ 0x19
  1648   00001A                     	ds	2
  1649   00001C                     main@delay_parpadeo:
  1650                           	callstack 0
  1651                           
  1652                           ; 9 bytes @ 0x1B
  1653   00001C                     	ds	9
  1654   000025                     main@boton1:
  1655                           	callstack 0
  1656                           
  1657                           ; 11 bytes @ 0x24
  1658   000025                     	ds	11
  1659                           
  1660 ;;
  1661 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1662 ;;
  1663 ;; *************** function _main *****************
  1664 ;; Defined at:
  1665 ;;		line 26 in file "main.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;		None
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  boton1         11   36[COMRAM] struct .
  1670 ;;  delay_parpad    9   27[COMRAM] struct .
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1683 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1684 ;;Total ram usage:       22 bytes
  1685 ;; Hardware stack levels required when called: 7
  1686 ;; This function calls:
  1687 ;;		_BoardInit
  1688 ;;		_DebounceFSMInit
  1689 ;;		_DebounceFSMUpdate
  1690 ;;		_DelayInit
  1691 ;;		_DelayRead
  1692 ;;		_MRF24GetMensajeEntrada
  1693 ;;		_MRF24IsNewMsg
  1694 ;;		_MRF24J40Init
  1695 ;;		_MRF24ReciboPaquete
  1696 ;;		_MRF24SetDireccionDestino
  1697 ;;		_MRF24SetMensajeSalida
  1698 ;;		_MRF24SetPANIDDestino
  1699 ;;		_MRF24TransmitirDato
  1700 ;;		_strcmp
  1701 ;; This function is called by:
  1702 ;;		Startup code after reset
  1703 ;; This function uses a non-reentrant model
  1704 ;;
  1705                           
  1706                           	psect	text0
  1707   001214                     __ptext0:
  1708                           	callstack 0
  1709   001214                     _main:
  1710                           	callstack 24
  1711   001214                     
  1712                           ;main.c: 28:     delayNoBloqueanteData delay_parpadeo;;main.c: 29:     debounceData_t bo
      +                          ton1;;main.c: 30:  DebounceFSMInit(&boton1);
  1713   001214  0E25               	movlw	low main@boton1
  1714   001216  6E06               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  1715   001218  ECF0  F00C         	call	_DebounceFSMInit	;wreg free
  1716   00121C                     
  1717                           ;main.c: 31:     BoardInit();
  1718   00121C  EC25  F00C         	call	_BoardInit	;wreg free
  1719   001220                     
  1720                           ;main.c: 32:     MRF24J40Init();
  1721   001220  EC25  F008         	call	_MRF24J40Init	;wreg free
  1722   001224                     
  1723                           ;main.c: 33:     DelayInit(&delay_parpadeo, 1000);
  1724   001224  0E1C               	movlw	low main@delay_parpadeo
  1725   001226  6E01               	movwf	DelayInit@delay^0,c
  1726   001228  0EE8               	movlw	232
  1727   00122A  6E02               	movwf	DelayInit@duration^0,c
  1728   00122C  0E03               	movlw	3
  1729   00122E  6E03               	movwf	(DelayInit@duration+1)^0,c
  1730   001230  0E00               	movlw	0
  1731   001232  6E04               	movwf	(DelayInit@duration+2)^0,c
  1732   001234  0E00               	movlw	0
  1733   001236  6E05               	movwf	(DelayInit@duration+3)^0,c
  1734   001238  EC1D  F00D         	call	_DelayInit	;wreg free
  1735   00123C                     
  1736                           ;main.c: 34:     MRF24SetDireccionDestino(0x1111);
  1737   00123C  0E11               	movlw	17
  1738   00123E  6E02               	movwf	(MRF24SetDireccionDestino@direccion+1)^0,c
  1739   001240  0E11               	movlw	17
  1740   001242  6E01               	movwf	MRF24SetDireccionDestino@direccion^0,c
  1741   001244  ECF6  F00D         	call	_MRF24SetDireccionDestino	;wreg free
  1742   001248                     
  1743                           ;main.c: 35:     MRF24SetPANIDDestino(0X1234);
  1744   001248  0E12               	movlw	18
  1745   00124A  6E02               	movwf	(MRF24SetPANIDDestino@panid+1)^0,c
  1746   00124C  0E34               	movlw	52
  1747   00124E  6E01               	movwf	MRF24SetPANIDDestino@panid^0,c
  1748   001250  ECF1  F00D         	call	_MRF24SetPANIDDestino	;wreg free
  1749   001254                     l229:
  1750   001254  0004               	clrwdt		;# 
  1751                           
  1752                           ;main.c: 40:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  1753   001256  EF3D  F009         	goto	l2060
  1754   00125A                     l231:
  1755                           
  1756                           ;main.c: 44:                 LATEbits.LATE2 = 0;
  1757   00125A  948D               	bcf	141,2,c	;volatile
  1758   00125C                     
  1759                           ;main.c: 45:                 MRF24SetMensajeSalida("CMD:PLV");
  1760   00125C  0E41               	movlw	low STR_1
  1761   00125E  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1762   001260  ECBE  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1763   001264                     l2052:
  1764                           
  1765                           ;main.c: 46:                 MRF24TransmitirDato();
  1766   001264  EC74  F00A         	call	_MRF24TransmitirDato	;wreg free
  1767                           
  1768                           ;main.c: 47:     break;
  1769   001268  EF5F  F009         	goto	l2062
  1770   00126C                     l233:
  1771                           
  1772                           ;main.c: 51:                 LATEbits.LATE2 = 1;
  1773   00126C  848D               	bsf	141,2,c	;volatile
  1774   00126E                     
  1775                           ;main.c: 52:                 MRF24SetMensajeSalida("CMD:ALV");
  1776   00126E  0E39               	movlw	low STR_2
  1777   001270  6E04               	movwf	MRF24SetMensajeSalida@mensaje^0,c
  1778   001272  ECBE  F00D         	call	_MRF24SetMensajeSalida	;wreg free
  1779   001276  EF32  F009         	goto	l2052
  1780   00127A                     l2060:
  1781   00127A  0E25               	movlw	low main@boton1
  1782   00127C  6E0F               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  1783   00127E  B482               	btfsc	130,2,c	;volatile
  1784   001280  EF44  F009         	goto	u671
  1785   001284  EF47  F009         	goto	u670
  1786   001288                     u671:
  1787   001288  0E01               	movlw	1
  1788   00128A  EF48  F009         	goto	u676
  1789   00128E                     u670:
  1790   00128E  0E00               	movlw	0
  1791   001290                     u676:
  1792   001290  6E10               	movwf	DebounceFSMUpdate@estado_pin^0,c
  1793   001292  ECD6  F009         	call	_DebounceFSMUpdate	;wreg free
  1794   001296  6E1A               	movwf	??_main^0,c
  1795   001298  6A1B               	clrf	(??_main+1)^0,c
  1796                           
  1797                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1798                           ; Switch size 1, requested type "simple"
  1799                           ; Number of cases is 1, Range of values is 0 to 0
  1800                           ; switch strategies available:
  1801                           ; Name         Instructions Cycles
  1802                           ; simple_byte            4     3 (average)
  1803                           ;	Chosen strategy is simple_byte
  1804   00129A  501B               	movf	(??_main+1)^0,w,c
  1805   00129C  0A00               	xorlw	0	; case 0
  1806   00129E  B4D8               	btfsc	status,2,c
  1807   0012A0  EF54  F009         	goto	l2130
  1808   0012A4  EF5F  F009         	goto	l2062
  1809   0012A8                     l2130:
  1810                           
  1811                           ; Switch size 1, requested type "simple"
  1812                           ; Number of cases is 2, Range of values is 1 to 2
  1813                           ; switch strategies available:
  1814                           ; Name         Instructions Cycles
  1815                           ; simple_byte            7     4 (average)
  1816                           ;	Chosen strategy is simple_byte
  1817   0012A8  501A               	movf	??_main^0,w,c
  1818   0012AA  0A01               	xorlw	1	; case 1
  1819   0012AC  B4D8               	btfsc	status,2,c
  1820   0012AE  EF2D  F009         	goto	l231
  1821   0012B2  0A03               	xorlw	3	; case 2
  1822   0012B4  B4D8               	btfsc	status,2,c
  1823   0012B6  EF36  F009         	goto	l233
  1824   0012BA  EF5F  F009         	goto	l2062
  1825   0012BE                     l2062:
  1826                           
  1827                           ;main.c: 61:         if(MRF24IsNewMsg()) {
  1828   0012BE  EC7A  F00D         	call	_MRF24IsNewMsg	;wreg free
  1829   0012C2  0900               	iorlw	0
  1830   0012C4  B4D8               	btfsc	status,2,c
  1831   0012C6  EF67  F009         	goto	u681
  1832   0012CA  EF69  F009         	goto	u680
  1833   0012CE                     u681:
  1834   0012CE  EFB7  F009         	goto	l2082
  1835   0012D2                     u680:
  1836   0012D2                     
  1837                           ;main.c: 63:             MRF24ReciboPaquete();
  1838   0012D2  ECA9  F00B         	call	_MRF24ReciboPaquete	;wreg free
  1839   0012D6                     
  1840                           ;main.c: 65:    if(!strcmp((char *)MRF24GetMensajeEntrada(),"CMD:PLA"))
  1841   0012D6  EC03  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1842   0012DA  6E03               	movwf	strcmp@l^0,c
  1843   0012DC  0E21               	movlw	low STR_3
  1844   0012DE  6E04               	movwf	strcmp@r^0,c
  1845   0012E0  ECF2  F00B         	call	_strcmp	;wreg free
  1846   0012E4  5003               	movf	?_strcmp^0,w,c
  1847   0012E6  1004               	iorwf	(?_strcmp+1)^0,w,c
  1848   0012E8  A4D8               	btfss	status,2,c
  1849   0012EA  EF79  F009         	goto	u691
  1850   0012EE  EF7B  F009         	goto	u690
  1851   0012F2                     u691:
  1852   0012F2  EF7E  F009         	goto	l2070
  1853   0012F6                     u690:
  1854   0012F6                     
  1855                           ;main.c: 66:     LATEbits.LATE0 = 1;
  1856   0012F6  808D               	bsf	141,0,c	;volatile
  1857   0012F8  EFB7  F009         	goto	l2082
  1858   0012FC                     l2070:
  1859   0012FC  EC03  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1860   001300  6E03               	movwf	strcmp@l^0,c
  1861   001302  0E19               	movlw	low STR_5
  1862   001304  6E04               	movwf	strcmp@r^0,c
  1863   001306  ECF2  F00B         	call	_strcmp	;wreg free
  1864   00130A  5003               	movf	?_strcmp^0,w,c
  1865   00130C  1004               	iorwf	(?_strcmp+1)^0,w,c
  1866   00130E  A4D8               	btfss	status,2,c
  1867   001310  EF8C  F009         	goto	u701
  1868   001314  EF8E  F009         	goto	u700
  1869   001318                     u701:
  1870   001318  EF91  F009         	goto	l2074
  1871   00131C                     u700:
  1872   00131C                     
  1873                           ;main.c: 69:     LATEbits.LATE0 = 1;
  1874   00131C  808D               	bsf	141,0,c	;volatile
  1875   00131E  EFB7  F009         	goto	l2082
  1876   001322                     l2074:
  1877   001322  EC03  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1878   001326  6E03               	movwf	strcmp@l^0,c
  1879   001328  0E31               	movlw	low STR_7
  1880   00132A  6E04               	movwf	strcmp@r^0,c
  1881   00132C  ECF2  F00B         	call	_strcmp	;wreg free
  1882   001330  5003               	movf	?_strcmp^0,w,c
  1883   001332  1004               	iorwf	(?_strcmp+1)^0,w,c
  1884   001334  A4D8               	btfss	status,2,c
  1885   001336  EF9F  F009         	goto	u711
  1886   00133A  EFA1  F009         	goto	u710
  1887   00133E                     u711:
  1888   00133E  EFA4  F009         	goto	l2078
  1889   001342                     u710:
  1890   001342                     
  1891                           ;main.c: 72:     LATEbits.LATE0 = 1;
  1892   001342  808D               	bsf	141,0,c	;volatile
  1893   001344  EFB7  F009         	goto	l2082
  1894   001348                     l2078:
  1895   001348  EC03  F00E         	call	_MRF24GetMensajeEntrada	;wreg free
  1896   00134C  6E03               	movwf	strcmp@l^0,c
  1897   00134E  0E29               	movlw	low STR_9
  1898   001350  6E04               	movwf	strcmp@r^0,c
  1899   001352  ECF2  F00B         	call	_strcmp	;wreg free
  1900   001356  5003               	movf	?_strcmp^0,w,c
  1901   001358  1004               	iorwf	(?_strcmp+1)^0,w,c
  1902   00135A  A4D8               	btfss	status,2,c
  1903   00135C  EFB2  F009         	goto	u721
  1904   001360  EFB4  F009         	goto	u720
  1905   001364                     u721:
  1906   001364  EFB7  F009         	goto	l237
  1907   001368                     u720:
  1908   001368                     
  1909                           ;main.c: 75:     LATEbits.LATE0 = 1;
  1910   001368  808D               	bsf	141,0,c	;volatile
  1911   00136A  EFB7  F009         	goto	l2082
  1912   00136E                     l237:
  1913   00136E                     l2082:
  1914                           
  1915                           ;main.c: 78:         if(DelayRead(&delay_parpadeo)) {
  1916   00136E  0E1C               	movlw	low main@delay_parpadeo
  1917   001370  6E02               	movwf	DelayRead@delay^0,c
  1918   001372  EC53  F00B         	call	_DelayRead	;wreg free
  1919   001376  0900               	iorlw	0
  1920   001378  B4D8               	btfsc	status,2,c
  1921   00137A  EFC1  F009         	goto	u731
  1922   00137E  EFC3  F009         	goto	u730
  1923   001382                     u731:
  1924   001382  EF2A  F009         	goto	l229
  1925   001386                     u730:
  1926   001386                     
  1927                           ;main.c: 79:             LATEbits.LATE0 = !LATEbits.LATE0;
  1928   001386  A08D               	btfss	141,0,c	;volatile
  1929   001388  EFC8  F009         	goto	u741
  1930   00138C  EFCC  F009         	goto	u740
  1931   001390                     u741:
  1932   001390  6A1A               	clrf	??_main^0,c
  1933   001392  2A1A               	incf	??_main^0,f,c
  1934   001394  EFCD  F009         	goto	u758
  1935   001398                     u740:
  1936   001398  6A1A               	clrf	??_main^0,c
  1937   00139A                     u758:
  1938   00139A  508D               	movf	141,w,c	;volatile
  1939   00139C  181A               	xorwf	??_main^0,w,c
  1940   00139E  0BFE               	andlw	-2
  1941   0013A0  181A               	xorwf	??_main^0,w,c
  1942   0013A2  6E8D               	movwf	141,c	;volatile
  1943   0013A4  EF2A  F009         	goto	l229
  1944   0013A8  EF20  F000         	goto	start
  1945   0013AC                     __end_of_main:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _strcmp *****************
  1949 ;; Defined at:
  1950 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  l               1    2[COMRAM] PTR const unsigned char 
  1953 ;;		 -> mrf24_data_in$buffer_entrada(50), mrf24_data_in(56), 
  1954 ;;  r               1    3[COMRAM] PTR const unsigned char 
  1955 ;;		 -> STR_10(8), STR_8(8), STR_6(8), STR_4(8), 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;		None
  1958 ;; Return value:  Size  Location     Type
  1959 ;;                  2    2[COMRAM] int 
  1960 ;; Registers used:
  1961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1962 ;; Tracked objects:
  1963 ;;		On entry : 0/0
  1964 ;;		On exit  : 0/0
  1965 ;;		Unchanged: 0/0
  1966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1967 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;Total ram usage:        3 bytes
  1972 ;; Hardware stack levels used: 1
  1973 ;; Hardware stack levels required when called: 1
  1974 ;; This function calls:
  1975 ;;		Nothing
  1976 ;; This function is called by:
  1977 ;;		_main
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text1
  1982   0017E4                     __ptext1:
  1983                           	callstack 0
  1984   0017E4                     _strcmp:
  1985                           	callstack 29
  1986   0017E4  EFF6  F00B         	goto	l2030
  1987   0017E8                     l2028:
  1988   0017E8  2A03               	incf	strcmp@l^0,f,c
  1989   0017EA  2A04               	incf	strcmp@r^0,f,c
  1990   0017EC                     l2030:
  1991   0017EC  5003               	movf	strcmp@l^0,w,c
  1992   0017EE  6ED9               	movwf	fsr2l,c
  1993   0017F0  6ADA               	clrf	fsr2h,c
  1994   0017F2  50DF               	movf	indf2,w,c
  1995   0017F4  6E05               	movwf	??_strcmp^0,c
  1996   0017F6  C004  FFF6         	movff	strcmp@r,tblptrl
  1997   0017FA                     	if	1	;There is more than 1 active tblptr byte
  1998   0017FA  0E10               	movlw	high __smallconst
  1999   0017FC  6EF7               	movwf	tblptrh,c
  2000   0017FE                     	endif
  2001   0017FE                     	if	0	;tblptru may be non-zero
  2002   0017FE                     	endif
  2003   0017FE                     	if	0	;tblptru may be non-zero
  2004   0017FE                     	endif
  2005   0017FE  0008               	tblrd		*
  2006   001800  50F5               	movf	tablat,w,c
  2007   001802  1805               	xorwf	??_strcmp^0,w,c
  2008   001804  A4D8               	btfss	status,2,c
  2009   001806  EF07  F00C         	goto	u651
  2010   00180A  EF09  F00C         	goto	u650
  2011   00180E                     u651:
  2012   00180E  EF14  F00C         	goto	l2034
  2013   001812                     u650:
  2014   001812  5003               	movf	strcmp@l^0,w,c
  2015   001814  6ED9               	movwf	fsr2l,c
  2016   001816  6ADA               	clrf	fsr2h,c
  2017   001818  50DF               	movf	indf2,w,c
  2018   00181A  A4D8               	btfss	status,2,c
  2019   00181C  EF12  F00C         	goto	u661
  2020   001820  EF14  F00C         	goto	u660
  2021   001824                     u661:
  2022   001824  EFF4  F00B         	goto	l2028
  2023   001828                     u660:
  2024   001828                     l2034:
  2025   001828  5003               	movf	strcmp@l^0,w,c
  2026   00182A  6ED9               	movwf	fsr2l,c
  2027   00182C  6ADA               	clrf	fsr2h,c
  2028   00182E  50DF               	movf	indf2,w,c
  2029   001830  6E05               	movwf	??_strcmp^0,c
  2030   001832  C004  FFF6         	movff	strcmp@r,tblptrl
  2031   001836                     	if	1	;There is more than 1 active tblptr byte
  2032   001836  0E10               	movlw	high __smallconst
  2033   001838  6EF7               	movwf	tblptrh,c
  2034   00183A                     	endif
  2035   00183A                     	if	0	;tblptru may be non-zero
  2036   00183A                     	endif
  2037   00183A                     	if	0	;tblptru may be non-zero
  2038   00183A                     	endif
  2039   00183A  0008               	tblrd		*
  2040   00183C  50F5               	movf	tablat,w,c
  2041   00183E  5C05               	subwf	??_strcmp^0,w,c
  2042   001840  6E03               	movwf	?_strcmp^0,c
  2043   001842  6A04               	clrf	(?_strcmp+1)^0,c
  2044   001844  A0D8               	btfss	status,0,c
  2045   001846  0604               	decf	(?_strcmp+1)^0,f,c
  2046   001848  0012               	return		;funcret
  2047   00184A                     __end_of_strcmp:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function _MRF24TransmitirDato *****************
  2051 ;; Defined at:
  2052 ;;		line 724 in file "drivers/scr/API_MRF24J40.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  i               1   15[COMRAM] char 
  2057 ;;  pos_memoria     1   16[COMRAM] unsigned char 
  2058 ;;  largo_cabece    1    0        unsigned char 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  1    wreg      void 
  2061 ;; Registers used:
  2062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2072 ;;Total ram usage:        7 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; Hardware stack levels required when called: 5
  2075 ;; This function calls:
  2076 ;;		_SetLongAddr
  2077 ;;		_SetShortAddr
  2078 ;; This function is called by:
  2079 ;;		_main
  2080 ;; This function uses a non-reentrant model
  2081 ;;
  2082                           
  2083                           	psect	text2
  2084   0014E8                     __ptext2:
  2085                           	callstack 0
  2086   0014E8                     _MRF24TransmitirDato:
  2087                           	callstack 25
  2088   0014E8                     
  2089                           ;drivers/scr/API_MRF24J40.c: 726:  uint8_t pos_memoria = 0;
  2090   0014E8  6A11               	clrf	MRF24TransmitirDato@pos_memoria^0,c
  2091   0014EA                     
  2092                           ;drivers/scr/API_MRF24J40.c: 728:  SetLongAddr(pos_memoria++, largo_cabecera);
  2093   0014EA  0E00               	movlw	0
  2094   0014EC  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2095   0014EE  0E00               	movlw	0
  2096   0014F0  6E06               	movwf	SetLongAddr@reg_address^0,c
  2097   0014F2  0E08               	movlw	8
  2098   0014F4  6E08               	movwf	SetLongAddr@valor^0,c
  2099   0014F6  EC99  F00C         	call	_SetLongAddr	;wreg free
  2100   0014FA  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2101   0014FC                     
  2102                           ;drivers/scr/API_MRF24J40.c: 729:  SetLongAddr(pos_memoria++, mrf24_data_out.largo_mensa
      +                          je + largo_cabecera);
  2103   0014FC  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2104   001500  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2105   001502  5056               	movf	(_mrf24_data_out+4)^0,w,c
  2106   001504  0F08               	addlw	8
  2107   001506  6E08               	movwf	SetLongAddr@valor^0,c
  2108   001508  EC99  F00C         	call	_SetLongAddr	;wreg free
  2109   00150C  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2110   00150E                     
  2111                           ;drivers/scr/API_MRF24J40.c: 730:  SetLongAddr(pos_memoria++, (0X01)|(0X20)|(0X40));
  2112   00150E  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2113   001512  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2114   001514  0E61               	movlw	97
  2115   001516  6E08               	movwf	SetLongAddr@valor^0,c
  2116   001518  EC99  F00C         	call	_SetLongAddr	;wreg free
  2117   00151C  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2118   00151E                     
  2119                           ;drivers/scr/API_MRF24J40.c: 731:  SetLongAddr(pos_memoria++, (0XC0)|(0X08));
  2120   00151E  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2121   001522  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2122   001524  0EC8               	movlw	200
  2123   001526  6E08               	movwf	SetLongAddr@valor^0,c
  2124   001528  EC99  F00C         	call	_SetLongAddr	;wreg free
  2125   00152C  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2126   00152E                     
  2127                           ;drivers/scr/API_MRF24J40.c: 732:  SetLongAddr(pos_memoria++, mrf24_data_config.sequence
      +                          _number++);
  2128   00152E  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2129   001532  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2130   001534  EE20  F032         	lfsr	2,_mrf24_data_config+2
  2131   001538  50DF               	movf	indf2,w,c
  2132   00153A  2ADF               	incf	indf2,f,c
  2133   00153C  6E08               	movwf	SetLongAddr@valor^0,c
  2134   00153E  EC99  F00C         	call	_SetLongAddr	;wreg free
  2135   001542  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2136   001544                     
  2137                           ;drivers/scr/API_MRF24J40.c: 733:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_panid);
  2138   001544  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2139   001548  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2140   00154A  C052  F008         	movff	_mrf24_data_out,SetLongAddr@valor
  2141   00154E  EC99  F00C         	call	_SetLongAddr	;wreg free
  2142   001552  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2143   001554                     
  2144                           ;drivers/scr/API_MRF24J40.c: 734:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_panid >> (0X08)));
  2145   001554  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2146   001558  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2147   00155A  5053               	movf	(_mrf24_data_out+1)^0,w,c
  2148   00155C  6E08               	movwf	SetLongAddr@valor^0,c
  2149   00155E  EC99  F00C         	call	_SetLongAddr	;wreg free
  2150   001562  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2151   001564                     
  2152                           ;drivers/scr/API_MRF24J40.c: 735:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_address);
  2153   001564  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2154   001568  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2155   00156A  C054  F008         	movff	_mrf24_data_out+2,SetLongAddr@valor
  2156   00156E  EC99  F00C         	call	_SetLongAddr	;wreg free
  2157   001572  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2158   001574                     
  2159                           ;drivers/scr/API_MRF24J40.c: 736:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_address >> (0X08)));
  2160   001574  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2161   001578  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2162   00157A  5055               	movf	(_mrf24_data_out+3)^0,w,c
  2163   00157C  6E08               	movwf	SetLongAddr@valor^0,c
  2164   00157E  EC99  F00C         	call	_SetLongAddr	;wreg free
  2165   001582  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2166   001584                     
  2167                           ;drivers/scr/API_MRF24J40.c: 738:     for(int8_t i = 0; i < mrf24_data_out.largo_mensaje
      +                          ; i++) {
  2168   001584  6A10               	clrf	MRF24TransmitirDato@i^0,c
  2169   001586  EFD6  F00A         	goto	l1934
  2170   00158A                     l1928:
  2171                           
  2172                           ;drivers/scr/API_MRF24J40.c: 740:   SetLongAddr(pos_memoria++, mrf24_data_out.buffer_sal
      +                          ida[i]);
  2173   00158A  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2174   00158E  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2175   001590  5057               	movf	(_mrf24_data_out+5)^0,w,c
  2176   001592  2410               	addwf	MRF24TransmitirDato@i^0,w,c
  2177   001594  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2178   001596  C00B  FFF6         	movff	??_MRF24TransmitirDato,tblptrl
  2179   00159A                     	if	1	;There is more than 1 active tblptr byte
  2180   00159A  0E10               	movlw	high __smallconst
  2181   00159C  6EF7               	movwf	tblptrh,c
  2182   00159E                     	endif
  2183   00159E                     	if	0	;tblptru may be non-zero
  2184   00159E                     	endif
  2185   00159E                     	if	0	;tblptru may be non-zero
  2186   00159E                     	endif
  2187   00159E  0008               	tblrd		*
  2188   0015A0  CFF5 F008          	movff	tablat,SetLongAddr@valor
  2189   0015A4  EC99  F00C         	call	_SetLongAddr	;wreg free
  2190   0015A8  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2191   0015AA                     
  2192                           ;drivers/scr/API_MRF24J40.c: 741:  }
  2193   0015AA  2A10               	incf	MRF24TransmitirDato@i^0,f,c
  2194   0015AC                     l1934:
  2195   0015AC  5056               	movf	(_mrf24_data_out+4)^0,w,c
  2196   0015AE  6E0B               	movwf	??_MRF24TransmitirDato^0,c
  2197   0015B0  6A0C               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2198   0015B2  C010  F00D         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato+2
  2199   0015B6  6A0E               	clrf	(??_MRF24TransmitirDato+3)^0,c
  2200   0015B8  BE0D               	btfsc	(??_MRF24TransmitirDato+2)^0,7,c
  2201   0015BA  060E               	decf	(??_MRF24TransmitirDato+3)^0,f,c
  2202   0015BC  500B               	movf	??_MRF24TransmitirDato^0,w,c
  2203   0015BE  5C0D               	subwf	(??_MRF24TransmitirDato+2)^0,w,c
  2204   0015C0  500E               	movf	(??_MRF24TransmitirDato+3)^0,w,c
  2205   0015C2  0A80               	xorlw	128
  2206   0015C4  6E0F               	movwf	(??_MRF24TransmitirDato+4)^0,c
  2207   0015C6  500C               	movf	(??_MRF24TransmitirDato+1)^0,w,c
  2208   0015C8  0A80               	xorlw	128
  2209   0015CA  580F               	subwfb	(??_MRF24TransmitirDato+4)^0,w,c
  2210   0015CC  A0D8               	btfss	status,0,c
  2211   0015CE  EFEB  F00A         	goto	u571
  2212   0015D2  EFED  F00A         	goto	u570
  2213   0015D6                     u571:
  2214   0015D6  EFC5  F00A         	goto	l1928
  2215   0015DA                     u570:
  2216   0015DA                     
  2217                           ;drivers/scr/API_MRF24J40.c: 742:     SetLongAddr(pos_memoria++, (0X00));
  2218   0015DA  C011  F006         	movff	MRF24TransmitirDato@pos_memoria,SetLongAddr@reg_address
  2219   0015DE  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  2220   0015E0  0E00               	movlw	0
  2221   0015E2  6E08               	movwf	SetLongAddr@valor^0,c
  2222   0015E4  EC99  F00C         	call	_SetLongAddr	;wreg free
  2223   0015E8  2A11               	incf	MRF24TransmitirDato@pos_memoria^0,f,c
  2224   0015EA                     
  2225                           ;drivers/scr/API_MRF24J40.c: 743:  SetShortAddr((0x1B), (0X04) | (0X01));
  2226   0015EA  0E05               	movlw	5
  2227   0015EC  6E03               	movwf	SetShortAddr@valor^0,c
  2228   0015EE  0E1B               	movlw	27
  2229   0015F0  EC6A  F00D         	call	_SetShortAddr
  2230   0015F4  0012               	return		;funcret
  2231   0015F6                     __end_of_MRF24TransmitirDato:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function _MRF24SetPANIDDestino *****************
  2235 ;; Defined at:
  2236 ;;		line 713 in file "drivers/scr/API_MRF24J40.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  panid           2    0[COMRAM] unsigned short 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;		None
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		None
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;Total ram usage:        2 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text3
  2265   001BE2                     __ptext3:
  2266                           	callstack 0
  2267   001BE2                     _MRF24SetPANIDDestino:
  2268                           	callstack 29
  2269   001BE2                     
  2270                           ;drivers/scr/API_MRF24J40.c: 715:     mrf24_data_out.destinity_panid = panid;
  2271   001BE2  C001  F052         	movff	MRF24SetPANIDDestino@panid,_mrf24_data_out
  2272   001BE6  C002  F053         	movff	MRF24SetPANIDDestino@panid+1,_mrf24_data_out+1
  2273   001BEA  0012               	return		;funcret
  2274   001BEC                     __end_of_MRF24SetPANIDDestino:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _MRF24SetMensajeSalida *****************
  2278 ;; Defined at:
  2279 ;;		line 690 in file "drivers/scr/API_MRF24J40.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  2282 ;;		 -> STR_2(8), STR_1(8), 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2294 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;Total ram usage:        1 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 2
  2301 ;; This function calls:
  2302 ;;		_strlen
  2303 ;; This function is called by:
  2304 ;;		_main
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text4
  2309   001B7C                     __ptext4:
  2310                           	callstack 0
  2311   001B7C                     _MRF24SetMensajeSalida:
  2312                           	callstack 28
  2313   001B7C                     
  2314                           ;drivers/scr/API_MRF24J40.c: 692:     mrf24_data_out.buffer_salida = mensaje;
  2315   001B7C  C004  F057         	movff	MRF24SetMensajeSalida@mensaje,_mrf24_data_out+5
  2316   001B80                     
  2317                           ;drivers/scr/API_MRF24J40.c: 693:     mrf24_data_out.largo_mensaje = (uint8_t) strlen(me
      +                          nsaje);
  2318   001B80  C004  F001         	movff	MRF24SetMensajeSalida@mensaje,strlen@s
  2319   001B84  ECD6  F00C         	call	_strlen	;wreg free
  2320   001B88  5001               	movf	?_strlen^0,w,c
  2321   001B8A  6E56               	movwf	(_mrf24_data_out+4)^0,c
  2322   001B8C  0012               	return		;funcret
  2323   001B8E                     __end_of_MRF24SetMensajeSalida:
  2324                           	callstack 0
  2325                           
  2326 ;; *************** function _strlen *****************
  2327 ;; Defined at:
  2328 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2331 ;;		 -> STR_2(8), STR_1(8), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2334 ;;		 -> STR_2(8), STR_1(8), 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  2    0[COMRAM] unsigned int 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;Total ram usage:        3 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 1
  2351 ;; This function calls:
  2352 ;;		Nothing
  2353 ;; This function is called by:
  2354 ;;		_MRF24SetMensajeSalida
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           	psect	text5
  2359   0019AC                     __ptext5:
  2360                           	callstack 0
  2361   0019AC                     _strlen:
  2362                           	callstack 28
  2363   0019AC  C001  F003         	movff	strlen@s,strlen@a
  2364   0019B0  EFDB  F00C         	goto	l1796
  2365   0019B4                     l1794:
  2366   0019B4  2A01               	incf	strlen@s^0,f,c
  2367   0019B6                     l1796:
  2368   0019B6  C001  FFF6         	movff	strlen@s,tblptrl
  2369   0019BA                     	if	1	;There is more than 1 active tblptr byte
  2370   0019BA  0E10               	movlw	high __smallconst
  2371   0019BC  6EF7               	movwf	tblptrh,c
  2372   0019BE                     	endif
  2373   0019BE                     	if	0	;tblptru may be non-zero
  2374   0019BE                     	endif
  2375   0019BE                     	if	0	;tblptru may be non-zero
  2376   0019BE                     	endif
  2377   0019BE  0008               	tblrd		*
  2378   0019C0  50F5               	movf	tablat,w,c
  2379   0019C2  0900               	iorlw	0
  2380   0019C4  A4D8               	btfss	status,2,c
  2381   0019C6  EFE7  F00C         	goto	u521
  2382   0019CA  EFE9  F00C         	goto	u520
  2383   0019CE                     u521:
  2384   0019CE  EFDA  F00C         	goto	l1794
  2385   0019D2                     u520:
  2386   0019D2  5003               	movf	strlen@a^0,w,c
  2387   0019D4  5C01               	subwf	strlen@s^0,w,c
  2388   0019D6  6E01               	movwf	?_strlen^0,c
  2389   0019D8  6A02               	clrf	(?_strlen+1)^0,c
  2390   0019DA  BE01               	btfsc	?_strlen^0,7,c
  2391   0019DC  0602               	decf	(?_strlen+1)^0,f,c
  2392   0019DE  0012               	return		;funcret
  2393   0019E0                     __end_of_strlen:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _MRF24SetDireccionDestino *****************
  2397 ;; Defined at:
  2398 ;;		line 702 in file "drivers/scr/API_MRF24J40.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  direccion       2    0[COMRAM] unsigned short 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		None
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2415 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;Total ram usage:        2 bytes
  2417 ;; Hardware stack levels used: 1
  2418 ;; Hardware stack levels required when called: 1
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		_main
  2423 ;; This function uses a non-reentrant model
  2424 ;;
  2425                           
  2426                           	psect	text6
  2427   001BEC                     __ptext6:
  2428                           	callstack 0
  2429   001BEC                     _MRF24SetDireccionDestino:
  2430                           	callstack 29
  2431   001BEC                     
  2432                           ;drivers/scr/API_MRF24J40.c: 704:     mrf24_data_out.destinity_address = direccion;
  2433   001BEC  C001  F054         	movff	MRF24SetDireccionDestino@direccion,_mrf24_data_out+2
  2434   001BF0  C002  F055         	movff	MRF24SetDireccionDestino@direccion+1,_mrf24_data_out+3
  2435   001BF4  0012               	return		;funcret
  2436   001BF6                     __end_of_MRF24SetDireccionDestino:
  2437                           	callstack 0
  2438                           
  2439 ;; *************** function _MRF24ReciboPaquete *****************
  2440 ;; Defined at:
  2441 ;;		line 762 in file "drivers/scr/API_MRF24J40.c"
  2442 ;; Parameters:    Size  Location     Type
  2443 ;;		None
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  index           1   16[COMRAM] unsigned char 
  2446 ;;  largo_mensaj    1   15[COMRAM] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;Total ram usage:        7 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 5
  2463 ;; This function calls:
  2464 ;;		_GetLongAddr
  2465 ;;		_GetShortAddr
  2466 ;;		_SetLongAddr
  2467 ;;		_SetShortAddr
  2468 ;; This function is called by:
  2469 ;;		_main
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           	psect	text7
  2474   001752                     __ptext7:
  2475                           	callstack 0
  2476   001752                     _MRF24ReciboPaquete:
  2477                           	callstack 25
  2478   001752                     
  2479                           ;drivers/scr/API_MRF24J40.c: 764:  uint8_t index;;drivers/scr/API_MRF24J40.c: 765:  uint
      +                          8_t largo_mensaje;;drivers/scr/API_MRF24J40.c: 766:  SetLongAddr((0x39), (0X04));
  2480   001752  0E00               	movlw	0
  2481   001754  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2482   001756  0E39               	movlw	57
  2483   001758  6E06               	movwf	SetLongAddr@reg_address^0,c
  2484   00175A  0E04               	movlw	4
  2485   00175C  6E08               	movwf	SetLongAddr@valor^0,c
  2486   00175E  EC99  F00C         	call	_SetLongAddr	;wreg free
  2487                           
  2488                           ;drivers/scr/API_MRF24J40.c: 767:  SetShortAddr((0x0D), (0X04));
  2489   001762  0E04               	movlw	4
  2490   001764  6E03               	movwf	SetShortAddr@valor^0,c
  2491   001766  0E0D               	movlw	13
  2492   001768  EC6A  F00D         	call	_SetShortAddr
  2493                           
  2494                           ;drivers/scr/API_MRF24J40.c: 768:  largo_mensaje = GetLongAddr((0x300));
  2495   00176C  0E03               	movlw	3
  2496   00176E  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2497   001770  0E00               	movlw	0
  2498   001772  6E06               	movwf	GetLongAddr@reg_address^0,c
  2499   001774  EC56  F00C         	call	_GetLongAddr	;wreg free
  2500   001778  6E10               	movwf	MRF24ReciboPaquete@largo_mensaje^0,c
  2501   00177A                     
  2502                           ;drivers/scr/API_MRF24J40.c: 770:  for(index = 0; index < largo_mensaje - (0x04); index+
      +                          +) {
  2503   00177A  6A11               	clrf	MRF24ReciboPaquete@index^0,c
  2504   00177C  EFCE  F00B         	goto	l1952
  2505   001780                     l1948:
  2506                           
  2507                           ;drivers/scr/API_MRF24J40.c: 772:   mrf24_data_in.buffer_entrada[index] = GetLongAddr((0
      +                          x300) + (0X08) + index);
  2508   001780  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2509   001782  0F66               	addlw	low (_mrf24_data_in+6)
  2510   001784  6ED9               	movwf	fsr2l,c
  2511   001786  6ADA               	clrf	fsr2h,c
  2512   001788  0E08               	movlw	8
  2513   00178A  2411               	addwf	MRF24ReciboPaquete@index^0,w,c
  2514   00178C  6E06               	movwf	GetLongAddr@reg_address^0,c
  2515   00178E  6A07               	clrf	(GetLongAddr@reg_address+1)^0,c
  2516   001790  0E03               	movlw	3
  2517   001792  2207               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  2518   001794  EC56  F00C         	call	_GetLongAddr	;wreg free
  2519   001798  6EDF               	movwf	indf2,c
  2520   00179A                     
  2521                           ;drivers/scr/API_MRF24J40.c: 773:  }
  2522   00179A  2A11               	incf	MRF24ReciboPaquete@index^0,f,c
  2523   00179C                     l1952:
  2524   00179C  0EFC               	movlw	252
  2525   00179E  2410               	addwf	MRF24ReciboPaquete@largo_mensaje^0,w,c
  2526   0017A0  6E0B               	movwf	??_MRF24ReciboPaquete^0,c
  2527   0017A2  6A0C               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  2528   0017A4  0EFF               	movlw	255
  2529   0017A6  220C               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  2530   0017A8  5011               	movf	MRF24ReciboPaquete@index^0,w,c
  2531   0017AA  6E0D               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  2532   0017AC  6A0E               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  2533   0017AE  500B               	movf	??_MRF24ReciboPaquete^0,w,c
  2534   0017B0  5C0D               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  2535   0017B2  500E               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  2536   0017B4  0A80               	xorlw	128
  2537   0017B6  6E0F               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  2538   0017B8  500C               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  2539   0017BA  0A80               	xorlw	128
  2540   0017BC  580F               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  2541   0017BE  A0D8               	btfss	status,0,c
  2542   0017C0  EFE4  F00B         	goto	u581
  2543   0017C4  EFE6  F00B         	goto	u580
  2544   0017C8                     u581:
  2545   0017C8  EFC0  F00B         	goto	l1948
  2546   0017CC                     u580:
  2547   0017CC                     
  2548                           ;drivers/scr/API_MRF24J40.c: 774:  SetLongAddr((0x39), (0X00));
  2549   0017CC  0E00               	movlw	0
  2550   0017CE  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2551   0017D0  0E39               	movlw	57
  2552   0017D2  6E06               	movwf	SetLongAddr@reg_address^0,c
  2553   0017D4  0E00               	movlw	0
  2554   0017D6  6E08               	movwf	SetLongAddr@valor^0,c
  2555   0017D8  EC99  F00C         	call	_SetLongAddr	;wreg free
  2556                           
  2557                           ;drivers/scr/API_MRF24J40.c: 775:  (void)GetShortAddr((0x31));
  2558   0017DC  0E31               	movlw	49
  2559   0017DE  EC44  F00D         	call	_GetShortAddr
  2560   0017E2  0012               	return		;funcret
  2561   0017E4                     __end_of_MRF24ReciboPaquete:
  2562                           	callstack 0
  2563                           
  2564 ;; *************** function _MRF24J40Init *****************
  2565 ;; Defined at:
  2566 ;;		line 501 in file "drivers/scr/API_MRF24J40.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;		None
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  delay_time_o    9   16[COMRAM] struct .
  2571 ;;  lectura         1   15[COMRAM] unsigned char 
  2572 ;; Return value:  Size  Location     Type
  2573 ;;                  1    wreg      enum E3263
  2574 ;; Registers used:
  2575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2576 ;; Tracked objects:
  2577 ;;		On entry : 0/0
  2578 ;;		On exit  : 0/0
  2579 ;;		Unchanged: 0/0
  2580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;Total ram usage:       11 bytes
  2586 ;; Hardware stack levels used: 1
  2587 ;; Hardware stack levels required when called: 6
  2588 ;; This function calls:
  2589 ;;		_DelayInit
  2590 ;;		_DelayRead
  2591 ;;		_DelayReset
  2592 ;;		_GetLongAddr
  2593 ;;		_GetShortAddr
  2594 ;;		_InicializoPines
  2595 ;;		_InicializoVariables
  2596 ;;		_SetChannel
  2597 ;;		_SetDeviceAddress
  2598 ;;		_SetDeviceMACAddress
  2599 ;;		_SetLongAddr
  2600 ;;		_SetResetPin
  2601 ;;		_SetShortAddr
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text8
  2608   00104A                     __ptext8:
  2609                           	callstack 0
  2610   00104A                     _MRF24J40Init:
  2611                           	callstack 24
  2612   00104A                     
  2613                           ;drivers/scr/API_MRF24J40.c: 503:     uint8_t lectura;;drivers/scr/API_MRF24J40.c: 504: 
      +                              delayNoBloqueanteData delay_time_out;;drivers/scr/API_MRF24J40.c: 505:     DelayInit
      +                          (&delay_time_out, 100);
  2614   00104A  0E11               	movlw	low MRF24J40Init@delay_time_out
  2615   00104C  6E01               	movwf	DelayInit@delay^0,c
  2616   00104E  0E64               	movlw	100
  2617   001050  6E02               	movwf	DelayInit@duration^0,c
  2618   001052  0E00               	movlw	0
  2619   001054  6E03               	movwf	(DelayInit@duration+1)^0,c
  2620   001056  0E00               	movlw	0
  2621   001058  6E04               	movwf	(DelayInit@duration+2)^0,c
  2622   00105A  0E00               	movlw	0
  2623   00105C  6E05               	movwf	(DelayInit@duration+3)^0,c
  2624   00105E  EC1D  F00D         	call	_DelayInit	;wreg free
  2625   001062                     
  2626                           ;drivers/scr/API_MRF24J40.c: 506:     InicializoVariables();
  2627   001062  ECFB  F00A         	call	_InicializoVariables	;wreg free
  2628   001066                     
  2629                           ;drivers/scr/API_MRF24J40.c: 507:     InicializoPines();
  2630   001066  ECAA  F00D         	call	_InicializoPines	;wreg free
  2631   00106A                     
  2632                           ;drivers/scr/API_MRF24J40.c: 508:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2633   00106A  0E06               	movlw	6
  2634   00106C  6E0F               	movwf	??_MRF24J40Init^0,c
  2635   00106E  0E30               	movlw	48
  2636   001070                     u767:
  2637   001070  2EE8               	decfsz	wreg,f,c
  2638   001072  D7FE               	bra	u767
  2639   001074  2E0F               	decfsz	??_MRF24J40Init^0,f,c
  2640   001076  D7FC               	bra	u767
  2641   001078  F000 F000          	nop2	
  2642   00107C                     
  2643                           ;drivers/scr/API_MRF24J40.c: 509:     SetResetPin(1);
  2644   00107C  0E01               	movlw	1
  2645   00107E  ECCE  F00D         	call	_SetResetPin
  2646   001082                     
  2647                           ;drivers/scr/API_MRF24J40.c: 510:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2648   001082  0E06               	movlw	6
  2649   001084  6E0F               	movwf	??_MRF24J40Init^0,c
  2650   001086  0E30               	movlw	48
  2651   001088                     u777:
  2652   001088  2EE8               	decfsz	wreg,f,c
  2653   00108A  D7FE               	bra	u777
  2654   00108C  2E0F               	decfsz	??_MRF24J40Init^0,f,c
  2655   00108E  D7FC               	bra	u777
  2656   001090  F000 F000          	nop2	
  2657   001094                     
  2658                           ;drivers/scr/API_MRF24J40.c: 511:     SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  2659   001094  0E07               	movlw	7
  2660   001096  6E03               	movwf	SetShortAddr@valor^0,c
  2661   001098  0E2A               	movlw	42
  2662   00109A  EC6A  F00D         	call	_SetShortAddr
  2663   00109E                     
  2664                           ;drivers/scr/API_MRF24J40.c: 512:     DelayReset(&delay_time_out);
  2665   00109E  0E11               	movlw	low MRF24J40Init@delay_time_out
  2666   0010A0  6E01               	movwf	DelayReset@delay^0,c
  2667   0010A2  EC57  F00D         	call	_DelayReset	;wreg free
  2668   0010A6                     l1824:
  2669                           
  2670                           ;drivers/scr/API_MRF24J40.c: 515:         lectura = GetShortAddr((0x2A));
  2671   0010A6  0E2A               	movlw	42
  2672   0010A8  EC44  F00D         	call	_GetShortAddr
  2673   0010AC  6E10               	movwf	MRF24J40Init@lectura^0,c
  2674   0010AE                     
  2675                           ;drivers/scr/API_MRF24J40.c: 516:   if(DelayRead(&delay_time_out))
  2676   0010AE  0E11               	movlw	low MRF24J40Init@delay_time_out
  2677   0010B0  6E02               	movwf	DelayRead@delay^0,c
  2678   0010B2  EC53  F00B         	call	_DelayRead	;wreg free
  2679   0010B6  0900               	iorlw	0
  2680   0010B8  B4D8               	btfsc	status,2,c
  2681   0010BA  EF61  F008         	goto	u531
  2682   0010BE  EF63  F008         	goto	u530
  2683   0010C2                     u531:
  2684   0010C2  EF65  F008         	goto	l1830
  2685   0010C6                     u530:
  2686   0010C6  EF09  F009         	goto	l99
  2687   0010CA                     l1830:
  2688                           
  2689                           ;drivers/scr/API_MRF24J40.c: 518:     }while((lectura & ((0X04) | (0X02) | (0X01))) != (
      +                          0X00));
  2690   0010CA  C010  F00F         	movff	MRF24J40Init@lectura,??_MRF24J40Init
  2691   0010CE  0E07               	movlw	7
  2692   0010D0  160F               	andwf	??_MRF24J40Init^0,f,c
  2693   0010D2  A4D8               	btfss	status,2,c
  2694   0010D4  EF6E  F008         	goto	u541
  2695   0010D8  EF70  F008         	goto	u540
  2696   0010DC                     u541:
  2697   0010DC  EF53  F008         	goto	l1824
  2698   0010E0                     u540:
  2699   0010E0                     
  2700                           ;drivers/scr/API_MRF24J40.c: 519:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2701   0010E0  0E06               	movlw	6
  2702   0010E2  6E0F               	movwf	??_MRF24J40Init^0,c
  2703   0010E4  0E30               	movlw	48
  2704   0010E6                     u787:
  2705   0010E6  2EE8               	decfsz	wreg,f,c
  2706   0010E8  D7FE               	bra	u787
  2707   0010EA  2E0F               	decfsz	??_MRF24J40Init^0,f,c
  2708   0010EC  D7FC               	bra	u787
  2709   0010EE  F000 F000          	nop2	
  2710   0010F2                     
  2711                           ;drivers/scr/API_MRF24J40.c: 520:     SetShortAddr((0x0D), (0X01));
  2712   0010F2  0E01               	movlw	1
  2713   0010F4  6E03               	movwf	SetShortAddr@valor^0,c
  2714   0010F6  0E0D               	movlw	13
  2715   0010F8  EC6A  F00D         	call	_SetShortAddr
  2716   0010FC                     
  2717                           ;drivers/scr/API_MRF24J40.c: 521:     SetDeviceAddress();
  2718   0010FC  EC08  F00D         	call	_SetDeviceAddress	;wreg free
  2719   001100                     
  2720                           ;drivers/scr/API_MRF24J40.c: 522:     SetDeviceMACAddress();
  2721   001100  EC78  F00C         	call	_SetDeviceMACAddress	;wreg free
  2722   001104                     
  2723                           ;drivers/scr/API_MRF24J40.c: 523:     SetLongAddr((0x202), (0X80));
  2724   001104  0E02               	movlw	2
  2725   001106  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2726   001108  0E02               	movlw	2
  2727   00110A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2728   00110C  0E80               	movlw	128
  2729   00110E  6E08               	movwf	SetLongAddr@valor^0,c
  2730   001110  EC99  F00C         	call	_SetLongAddr	;wreg free
  2731   001114                     
  2732                           ;drivers/scr/API_MRF24J40.c: 524:     SetLongAddr((0x203), (0XC0) | (0X38));
  2733   001114  0E02               	movlw	2
  2734   001116  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2735   001118  0E03               	movlw	3
  2736   00111A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2737   00111C  0EF8               	movlw	248
  2738   00111E  6E08               	movwf	SetLongAddr@valor^0,c
  2739   001120  EC99  F00C         	call	_SetLongAddr	;wreg free
  2740   001124                     
  2741                           ;drivers/scr/API_MRF24J40.c: 525:  SetLongAddr((0x206), (0X80) | (0X10));
  2742   001124  0E02               	movlw	2
  2743   001126  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2744   001128  0E06               	movlw	6
  2745   00112A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2746   00112C  0E90               	movlw	144
  2747   00112E  6E08               	movwf	SetLongAddr@valor^0,c
  2748   001130  EC99  F00C         	call	_SetLongAddr	;wreg free
  2749   001134                     
  2750                           ;drivers/scr/API_MRF24J40.c: 526:  SetLongAddr((0x207), (0X80));
  2751   001134  0E02               	movlw	2
  2752   001136  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2753   001138  0E07               	movlw	7
  2754   00113A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2755   00113C  0E80               	movlw	128
  2756   00113E  6E08               	movwf	SetLongAddr@valor^0,c
  2757   001140  EC99  F00C         	call	_SetLongAddr	;wreg free
  2758   001144                     
  2759                           ;drivers/scr/API_MRF24J40.c: 527:  SetLongAddr((0x208), (0X10));
  2760   001144  0E02               	movlw	2
  2761   001146  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2762   001148  0E08               	movlw	8
  2763   00114A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2764   00114C  0E10               	movlw	16
  2765   00114E  6E08               	movwf	SetLongAddr@valor^0,c
  2766   001150  EC99  F00C         	call	_SetLongAddr	;wreg free
  2767   001154                     
  2768                           ;drivers/scr/API_MRF24J40.c: 528:  SetLongAddr((0x220), (0X20) | (0X01));
  2769   001154  0E02               	movlw	2
  2770   001156  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2771   001158  0E20               	movlw	32
  2772   00115A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2773   00115C  0E21               	movlw	33
  2774   00115E  6E08               	movwf	SetLongAddr@valor^0,c
  2775   001160  EC99  F00C         	call	_SetLongAddr	;wreg free
  2776   001164                     
  2777                           ;drivers/scr/API_MRF24J40.c: 529:     SetShortAddr((0x3A), (0X80));
  2778   001164  0E80               	movlw	128
  2779   001166  6E03               	movwf	SetShortAddr@valor^0,c
  2780   001168  0E3A               	movlw	58
  2781   00116A  EC6A  F00D         	call	_SetShortAddr
  2782   00116E                     
  2783                           ;drivers/scr/API_MRF24J40.c: 530:     SetShortAddr((0x3E), (0X40));
  2784   00116E  0E40               	movlw	64
  2785   001170  6E03               	movwf	SetShortAddr@valor^0,c
  2786   001172  0E3E               	movlw	62
  2787   001174  EC6A  F00D         	call	_SetShortAddr
  2788   001178                     
  2789                           ;drivers/scr/API_MRF24J40.c: 531:     SetShortAddr((0x3F), (0X04) | (0X02));
  2790   001178  0E06               	movlw	6
  2791   00117A  6E03               	movwf	SetShortAddr@valor^0,c
  2792   00117C  0E3F               	movlw	63
  2793   00117E  EC6A  F00D         	call	_SetShortAddr
  2794   001182                     
  2795                           ;drivers/scr/API_MRF24J40.c: 532:     SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  2796   001182  0E98               	movlw	152
  2797   001184  6E03               	movwf	SetShortAddr@valor^0,c
  2798   001186  0E18               	movlw	24
  2799   001188  EC6A  F00D         	call	_SetShortAddr
  2800   00118C                     
  2801                           ;drivers/scr/API_MRF24J40.c: 533:     SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0
      +                          X01));
  2802   00118C  0E95               	movlw	149
  2803   00118E  6E03               	movwf	SetShortAddr@valor^0,c
  2804   001190  0E2E               	movlw	46
  2805   001192  EC6A  F00D         	call	_SetShortAddr
  2806   001196                     
  2807                           ;drivers/scr/API_MRF24J40.c: 534:     DelayReset(&delay_time_out);
  2808   001196  0E11               	movlw	low MRF24J40Init@delay_time_out
  2809   001198  6E01               	movwf	DelayReset@delay^0,c
  2810   00119A  EC57  F00D         	call	_DelayReset	;wreg free
  2811   00119E                     l1864:
  2812                           
  2813                           ;drivers/scr/API_MRF24J40.c: 537:   lectura = GetLongAddr((0x20f));
  2814   00119E  0E02               	movlw	2
  2815   0011A0  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2816   0011A2  0E0F               	movlw	15
  2817   0011A4  6E06               	movwf	GetLongAddr@reg_address^0,c
  2818   0011A6  EC56  F00C         	call	_GetLongAddr	;wreg free
  2819   0011AA  6E10               	movwf	MRF24J40Init@lectura^0,c
  2820   0011AC                     
  2821                           ;drivers/scr/API_MRF24J40.c: 538:   if(DelayRead(&delay_time_out))
  2822   0011AC  0E11               	movlw	low MRF24J40Init@delay_time_out
  2823   0011AE  6E02               	movwf	DelayRead@delay^0,c
  2824   0011B0  EC53  F00B         	call	_DelayRead	;wreg free
  2825   0011B4  0900               	iorlw	0
  2826   0011B6  B4D8               	btfsc	status,2,c
  2827   0011B8  EFE0  F008         	goto	u551
  2828   0011BC  EFE2  F008         	goto	u550
  2829   0011C0                     u551:
  2830   0011C0  EFE4  F008         	goto	l1870
  2831   0011C4                     u550:
  2832   0011C4  EF09  F009         	goto	l99
  2833   0011C8                     l1870:
  2834                           
  2835                           ;drivers/scr/API_MRF24J40.c: 540:  }while(lectura != (0XA0));
  2836   0011C8  0EA0               	movlw	160
  2837   0011CA  1810               	xorwf	MRF24J40Init@lectura^0,w,c
  2838   0011CC  A4D8               	btfss	status,2,c
  2839   0011CE  EFEB  F008         	goto	u561
  2840   0011D2  EFED  F008         	goto	u560
  2841   0011D6                     u561:
  2842   0011D6  EFCF  F008         	goto	l1864
  2843   0011DA                     u560:
  2844   0011DA                     
  2845                           ;drivers/scr/API_MRF24J40.c: 541:     SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0
      +                          X10) | (0X04) | (0X01));
  2846   0011DA  0EF5               	movlw	245
  2847   0011DC  6E03               	movwf	SetShortAddr@valor^0,c
  2848   0011DE  0E32               	movlw	50
  2849   0011E0  EC6A  F00D         	call	_SetShortAddr
  2850                           
  2851                           ;drivers/scr/API_MRF24J40.c: 542:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  2852   0011E4  0EB9               	movlw	185
  2853   0011E6  6E03               	movwf	SetShortAddr@valor^0,c
  2854   0011E8  0E12               	movlw	18
  2855   0011EA  EC6A  F00D         	call	_SetShortAddr
  2856                           
  2857                           ;drivers/scr/API_MRF24J40.c: 543:   SetLongAddr((0x201), (0X02) | (0X01));
  2858   0011EE  0E02               	movlw	2
  2859   0011F0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2860   0011F2  0E01               	movlw	1
  2861   0011F4  6E06               	movwf	SetLongAddr@reg_address^0,c
  2862   0011F6  0E03               	movlw	3
  2863   0011F8  6E08               	movwf	SetLongAddr@valor^0,c
  2864   0011FA  EC99  F00C         	call	_SetLongAddr	;wreg free
  2865                           
  2866                           ;drivers/scr/API_MRF24J40.c: 544:  SetChannel();
  2867   0011FE  ECBA  F00C         	call	_SetChannel	;wreg free
  2868                           
  2869                           ;drivers/scr/API_MRF24J40.c: 545:  SetShortAddr((0x00), (0X00));
  2870   001202  0E00               	movlw	0
  2871   001204  6E03               	movwf	SetShortAddr@valor^0,c
  2872   001206  0E00               	movlw	0
  2873   001208  EC6A  F00D         	call	_SetShortAddr
  2874                           
  2875                           ;drivers/scr/API_MRF24J40.c: 546:  (void)GetShortAddr((0x31));
  2876   00120C  0E31               	movlw	49
  2877   00120E  EC44  F00D         	call	_GetShortAddr
  2878   001212                     l99:
  2879   001212  0012               	return		;funcret
  2880   001214                     __end_of_MRF24J40Init:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function _SetDeviceMACAddress *****************
  2884 ;; Defined at:
  2885 ;;		line 672 in file "drivers/scr/API_MRF24J40.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;		None
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  i               2    4[COMRAM] int 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  1    wreg      void 
  2892 ;; Registers used:
  2893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2902 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;Total ram usage:        2 bytes
  2904 ;; Hardware stack levels used: 1
  2905 ;; Hardware stack levels required when called: 4
  2906 ;; This function calls:
  2907 ;;		_SetShortAddr
  2908 ;; This function is called by:
  2909 ;;		_MRF24J40Init
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text9
  2914   0018F0                     __ptext9:
  2915                           	callstack 0
  2916   0018F0                     _SetDeviceMACAddress:
  2917                           	callstack 25
  2918   0018F0                     
  2919                           ;drivers/scr/API_MRF24J40.c: 674:     long_mac_address = EADR0;
  2920   0018F0  0E05               	movlw	5
  2921   0018F2  6E5C               	movwf	_long_mac_address^0,c
  2922                           
  2923                           ;drivers/scr/API_MRF24J40.c: 676:     for(int i = 0; i < 8; i++) {
  2924   0018F4  0E00               	movlw	0
  2925   0018F6  6E06               	movwf	(SetDeviceMACAddress@i+1)^0,c
  2926   0018F8  0E00               	movlw	0
  2927   0018FA  6E05               	movwf	SetDeviceMACAddress@i^0,c
  2928   0018FC                     l1764:
  2929                           
  2930                           ;drivers/scr/API_MRF24J40.c: 678:         SetShortAddr(long_mac_address++, mrf24_data_co
      +                          nfig.my_mac[i]);
  2931   0018FC  5005               	movf	SetDeviceMACAddress@i^0,w,c
  2932   0018FE  0F44               	addlw	low (_mrf24_data_config+20)
  2933   001900  6ED9               	movwf	fsr2l,c
  2934   001902  6ADA               	clrf	fsr2h,c
  2935   001904  50DF               	movf	indf2,w,c
  2936   001906  6E03               	movwf	SetShortAddr@valor^0,c
  2937   001908  505C               	movf	_long_mac_address^0,w,c
  2938   00190A  EC6A  F00D         	call	_SetShortAddr
  2939   00190E  2A5C               	incf	_long_mac_address^0,f,c
  2940   001910                     
  2941                           ;drivers/scr/API_MRF24J40.c: 679:     }
  2942   001910  4A05               	infsnz	SetDeviceMACAddress@i^0,f,c
  2943   001912  2A06               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  2944   001914  BE06               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  2945   001916  EF96  F00C         	goto	u501
  2946   00191A  5006               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  2947   00191C  E109               	bnz	u500
  2948   00191E  0E08               	movlw	8
  2949   001920  5C05               	subwf	SetDeviceMACAddress@i^0,w,c
  2950   001922  A0D8               	btfss	status,0,c
  2951   001924  EF96  F00C         	goto	u501
  2952   001928  EF98  F00C         	goto	u500
  2953   00192C                     u501:
  2954   00192C  EF7E  F00C         	goto	l1764
  2955   001930                     u500:
  2956   001930  0012               	return		;funcret
  2957   001932                     __end_of_SetDeviceMACAddress:
  2958                           	callstack 0
  2959                           
  2960 ;; *************** function _SetDeviceAddress *****************
  2961 ;; Defined at:
  2962 ;;		line 658 in file "drivers/scr/API_MRF24J40.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;		None
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;		None
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0, cstack
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;Total ram usage:        0 bytes
  2981 ;; Hardware stack levels used: 1
  2982 ;; Hardware stack levels required when called: 4
  2983 ;; This function calls:
  2984 ;;		_SetShortAddr
  2985 ;; This function is called by:
  2986 ;;		_MRF24J40Init
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text10
  2991   001A10                     __ptext10:
  2992                           	callstack 0
  2993   001A10                     _SetDeviceAddress:
  2994                           	callstack 25
  2995   001A10                     
  2996                           ;drivers/scr/API_MRF24J40.c: 660:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> (0X08)));
  2997   001A10  504F               	movf	(_mrf24_data_config+31)^0,w,c
  2998   001A12  6E03               	movwf	SetShortAddr@valor^0,c
  2999   001A14  0E04               	movlw	4
  3000   001A16  EC6A  F00D         	call	_SetShortAddr
  3001                           
  3002                           ;drivers/scr/API_MRF24J40.c: 661:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  3003   001A1A  C04E  F003         	movff	_mrf24_data_config+30,SetShortAddr@valor
  3004   001A1E  0E03               	movlw	3
  3005   001A20  EC6A  F00D         	call	_SetShortAddr
  3006                           
  3007                           ;drivers/scr/API_MRF24J40.c: 662:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> (0X08)));
  3008   001A24  504D               	movf	(_mrf24_data_config+29)^0,w,c
  3009   001A26  6E03               	movwf	SetShortAddr@valor^0,c
  3010   001A28  0E02               	movlw	2
  3011   001A2A  EC6A  F00D         	call	_SetShortAddr
  3012                           
  3013                           ;drivers/scr/API_MRF24J40.c: 663:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  3014   001A2E  C04C  F003         	movff	_mrf24_data_config+28,SetShortAddr@valor
  3015   001A32  0E01               	movlw	1
  3016   001A34  EC6A  F00D         	call	_SetShortAddr
  3017   001A38  0012               	return		;funcret
  3018   001A3A                     __end_of_SetDeviceAddress:
  3019                           	callstack 0
  3020                           
  3021 ;; *************** function _SetChannel *****************
  3022 ;; Defined at:
  3023 ;;		line 644 in file "drivers/scr/API_MRF24J40.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;		None
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;Total ram usage:        1 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 5
  3044 ;; This function calls:
  3045 ;;		_SetLongAddr
  3046 ;;		_SetShortAddr
  3047 ;; This function is called by:
  3048 ;;		_MRF24J40Init
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           	psect	text11
  3053   001974                     __ptext11:
  3054                           	callstack 0
  3055   001974                     _SetChannel:
  3056                           	callstack 24
  3057   001974                     
  3058                           ;drivers/scr/API_MRF24J40.c: 646:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  3059   001974  0E02               	movlw	2
  3060   001976  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3061   001978  0E00               	movlw	0
  3062   00197A  6E06               	movwf	SetLongAddr@reg_address^0,c
  3063   00197C  C033  F008         	movff	_mrf24_data_config+3,SetLongAddr@valor
  3064   001980  EC99  F00C         	call	_SetLongAddr	;wreg free
  3065                           
  3066                           ;drivers/scr/API_MRF24J40.c: 647:  SetShortAddr((0x36), (0X04));
  3067   001984  0E04               	movlw	4
  3068   001986  6E03               	movwf	SetShortAddr@valor^0,c
  3069   001988  0E36               	movlw	54
  3070   00198A  EC6A  F00D         	call	_SetShortAddr
  3071                           
  3072                           ;drivers/scr/API_MRF24J40.c: 648:  SetShortAddr((0x36), (0X00));
  3073   00198E  0E00               	movlw	0
  3074   001990  6E03               	movwf	SetShortAddr@valor^0,c
  3075   001992  0E36               	movlw	54
  3076   001994  EC6A  F00D         	call	_SetShortAddr
  3077   001998                     
  3078                           ;drivers/scr/API_MRF24J40.c: 649:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3079   001998  0E06               	movlw	6
  3080   00199A  6E0B               	movwf	??_SetChannel^0,c
  3081   00199C  0E30               	movlw	48
  3082   00199E                     u797:
  3083   00199E  2EE8               	decfsz	wreg,f,c
  3084   0019A0  D7FE               	bra	u797
  3085   0019A2  2E0B               	decfsz	??_SetChannel^0,f,c
  3086   0019A4  D7FC               	bra	u797
  3087   0019A6  F000 F000          	nop2	
  3088   0019AA  0012               	return		;funcret
  3089   0019AC                     __end_of_SetChannel:
  3090                           	callstack 0
  3091                           
  3092 ;; *************** function _SetShortAddr *****************
  3093 ;; Defined at:
  3094 ;;		line 582 in file "drivers/scr/API_MRF24J40.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  reg_address     1    wreg     unsigned char 
  3097 ;;  valor           1    2[COMRAM] unsigned char 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  reg_address     1    3[COMRAM] unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3109 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;Total ram usage:        2 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; Hardware stack levels required when called: 3
  3116 ;; This function calls:
  3117 ;;		_SetCSPin
  3118 ;;		_WriteByteSPIPort
  3119 ;; This function is called by:
  3120 ;;		_MRF24J40Init
  3121 ;;		_SetChannel
  3122 ;;		_SetDeviceAddress
  3123 ;;		_SetDeviceMACAddress
  3124 ;;		_MRF24TransmitirDato
  3125 ;;		_MRF24ReciboPaquete
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text12
  3130   001AD4                     __ptext12:
  3131                           	callstack 0
  3132   001AD4                     _SetShortAddr:
  3133                           	callstack 26
  3134                           
  3135                           ;incstack = 0
  3136                           ;SetShortAddr@reg_address stored from wreg
  3137   001AD4  6E04               	movwf	SetShortAddr@reg_address^0,c
  3138   001AD6                     
  3139                           ;drivers/scr/API_MRF24J40.c: 584:     reg_address = (uint8_t) (reg_address << (0X01)) | 
      +                          (0x01);
  3140   001AD6  80D8               	bsf	status,0,c
  3141   001AD8  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  3142   001ADA                     
  3143                           ;drivers/scr/API_MRF24J40.c: 585:     SetCSPin(0);
  3144   001ADA  0E00               	movlw	0
  3145   001ADC  ECE3  F00D         	call	_SetCSPin
  3146   001AE0                     
  3147                           ;drivers/scr/API_MRF24J40.c: 586:  WriteByteSPIPort(reg_address);
  3148   001AE0  5004               	movf	SetShortAddr@reg_address^0,w,c
  3149   001AE2  ECFB  F00D         	call	_WriteByteSPIPort
  3150   001AE6                     
  3151                           ;drivers/scr/API_MRF24J40.c: 587:  WriteByteSPIPort(valor);
  3152   001AE6  5003               	movf	SetShortAddr@valor^0,w,c
  3153   001AE8  ECFB  F00D         	call	_WriteByteSPIPort
  3154   001AEC                     
  3155                           ;drivers/scr/API_MRF24J40.c: 588:     SetCSPin(1);
  3156   001AEC  0E01               	movlw	1
  3157   001AEE  ECE3  F00D         	call	_SetCSPin
  3158   001AF2  0012               	return		;funcret
  3159   001AF4                     __end_of_SetShortAddr:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function _SetLongAddr *****************
  3163 ;; Defined at:
  3164 ;;		line 613 in file "drivers/scr/API_MRF24J40.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  reg_address     2    5[COMRAM] unsigned short 
  3167 ;;  valor           1    7[COMRAM] unsigned char 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3179 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;Total ram usage:        5 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; Hardware stack levels required when called: 4
  3186 ;; This function calls:
  3187 ;;		_SetCSPin
  3188 ;;		_Write2ByteSPIPort
  3189 ;;		_WriteByteSPIPort
  3190 ;; This function is called by:
  3191 ;;		_MRF24J40Init
  3192 ;;		_SetChannel
  3193 ;;		_MRF24TransmitirDato
  3194 ;;		_MRF24ReciboPaquete
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text13
  3199   001932                     __ptext13:
  3200                           	callstack 0
  3201   001932                     _SetLongAddr:
  3202                           	callstack 25
  3203   001932                     
  3204                           ;drivers/scr/API_MRF24J40.c: 615:     reg_address = (reg_address << (0X05)) | (0X8010);
  3205   001932  C006  F009         	movff	SetLongAddr@reg_address,??_SetLongAddr
  3206   001936  C007  F00A         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  3207   00193A  0E05               	movlw	5
  3208   00193C                     u455:
  3209   00193C  90D8               	bcf	status,0,c
  3210   00193E  3609               	rlcf	??_SetLongAddr^0,f,c
  3211   001940  360A               	rlcf	(??_SetLongAddr+1)^0,f,c
  3212   001942  2EE8               	decfsz	wreg,f,c
  3213   001944  EF9E  F00C         	goto	u455
  3214   001948  0E10               	movlw	16
  3215   00194A  1009               	iorwf	??_SetLongAddr^0,w,c
  3216   00194C  6E06               	movwf	SetLongAddr@reg_address^0,c
  3217   00194E  0E80               	movlw	128
  3218   001950  100A               	iorwf	(??_SetLongAddr+1)^0,w,c
  3219   001952  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3220   001954                     
  3221                           ;drivers/scr/API_MRF24J40.c: 616:     SetCSPin(0);
  3222   001954  0E00               	movlw	0
  3223   001956  ECE3  F00D         	call	_SetCSPin
  3224   00195A                     
  3225                           ;drivers/scr/API_MRF24J40.c: 617:     Write2ByteSPIPort(reg_address);
  3226   00195A  C006  F004         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  3227   00195E  C007  F005         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3228   001962  ECD5  F00D         	call	_Write2ByteSPIPort	;wreg free
  3229   001966                     
  3230                           ;drivers/scr/API_MRF24J40.c: 618:  WriteByteSPIPort(valor);
  3231   001966  5008               	movf	SetLongAddr@valor^0,w,c
  3232   001968  ECFB  F00D         	call	_WriteByteSPIPort
  3233   00196C                     
  3234                           ;drivers/scr/API_MRF24J40.c: 619:     SetCSPin(1);
  3235   00196C  0E01               	movlw	1
  3236   00196E  ECE3  F00D         	call	_SetCSPin
  3237   001972  0012               	return		;funcret
  3238   001974                     __end_of_SetLongAddr:
  3239                           	callstack 0
  3240                           
  3241 ;; *************** function _InicializoVariables *****************
  3242 ;; Defined at:
  3243 ;;		line 556 in file "drivers/scr/API_MRF24J40.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;		None
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;  i               2    1[COMRAM] int 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;Total ram usage:        3 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 1
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_MRF24J40Init
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text14
  3272   0015F6                     __ptext14:
  3273                           	callstack 0
  3274   0015F6                     _InicializoVariables:
  3275                           	callstack 28
  3276   0015F6                     
  3277                           ;drivers/scr/API_MRF24J40.c: 558:     for(int i = 0; i < 16; i++){
  3278   0015F6  0E00               	movlw	0
  3279   0015F8  6E03               	movwf	(InicializoVariables@i+1)^0,c
  3280   0015FA  0E00               	movlw	0
  3281   0015FC  6E02               	movwf	InicializoVariables@i^0,c
  3282   0015FE                     l1694:
  3283                           
  3284                           ;drivers/scr/API_MRF24J40.c: 560:         if(i < 8)
  3285   0015FE  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  3286   001600  EF0D  F00B         	goto	u460
  3287   001604  5003               	movf	(InicializoVariables@i+1)^0,w,c
  3288   001606  E107               	bnz	u461
  3289   001608  0E08               	movlw	8
  3290   00160A  5C02               	subwf	InicializoVariables@i^0,w,c
  3291   00160C  B0D8               	btfsc	status,0,c
  3292   00160E  EF0B  F00B         	goto	u461
  3293   001612  EF0D  F00B         	goto	u460
  3294   001616                     u461:
  3295   001616  EF1B  F00B         	goto	l108
  3296   00161A                     u460:
  3297   00161A                     
  3298                           ;drivers/scr/API_MRF24J40.c: 561:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  3299   00161A  5002               	movf	InicializoVariables@i^0,w,c
  3300   00161C  0F11               	addlw	low _default_mac_address
  3301   00161E  6E01               	movwf	??_InicializoVariables^0,c
  3302   001620  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  3303   001624                     	if	1	;There is more than 1 active tblptr byte
  3304   001624  0E10               	movlw	high __smallconst
  3305   001626  6EF7               	movwf	tblptrh,c
  3306   001628                     	endif
  3307   001628                     	if	0	;tblptru may be non-zero
  3308   001628                     	endif
  3309   001628                     	if	0	;tblptru may be non-zero
  3310   001628                     	endif
  3311   001628  5002               	movf	InicializoVariables@i^0,w,c
  3312   00162A  0F44               	addlw	low (_mrf24_data_config+20)
  3313   00162C  6ED9               	movwf	fsr2l,c
  3314   00162E  6ADA               	clrf	fsr2h,c
  3315   001630  0008               	tblrd		*
  3316   001632  CFF5 FFDF          	movff	tablat,indf2
  3317   001636                     l108:
  3318                           
  3319                           ;drivers/scr/API_MRF24J40.c: 562:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  3320   001636  5002               	movf	InicializoVariables@i^0,w,c
  3321   001638  0F01               	addlw	low _default_security_key
  3322   00163A  6E01               	movwf	??_InicializoVariables^0,c
  3323   00163C  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  3324   001640                     	if	1	;There is more than 1 active tblptr byte
  3325   001640  0E10               	movlw	high __smallconst
  3326   001642  6EF7               	movwf	tblptrh,c
  3327   001644                     	endif
  3328   001644                     	if	0	;tblptru may be non-zero
  3329   001644                     	endif
  3330   001644                     	if	0	;tblptru may be non-zero
  3331   001644                     	endif
  3332   001644  5002               	movf	InicializoVariables@i^0,w,c
  3333   001646  0F34               	addlw	low (_mrf24_data_config+4)
  3334   001648  6ED9               	movwf	fsr2l,c
  3335   00164A  6ADA               	clrf	fsr2h,c
  3336   00164C  0008               	tblrd		*
  3337   00164E  CFF5 FFDF          	movff	tablat,indf2
  3338   001652                     
  3339                           ;drivers/scr/API_MRF24J40.c: 563:     }
  3340   001652  4A02               	infsnz	InicializoVariables@i^0,f,c
  3341   001654  2A03               	incf	(InicializoVariables@i+1)^0,f,c
  3342   001656  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  3343   001658  EF37  F00B         	goto	u471
  3344   00165C  5003               	movf	(InicializoVariables@i+1)^0,w,c
  3345   00165E  E109               	bnz	u470
  3346   001660  0E10               	movlw	16
  3347   001662  5C02               	subwf	InicializoVariables@i^0,w,c
  3348   001664  A0D8               	btfss	status,0,c
  3349   001666  EF37  F00B         	goto	u471
  3350   00166A  EF39  F00B         	goto	u470
  3351   00166E                     u471:
  3352   00166E  EFFF  F00A         	goto	l1694
  3353   001672                     u470:
  3354   001672                     
  3355                           ;drivers/scr/API_MRF24J40.c: 564:     mrf24_data_config.sequence_number = (0X01);
  3356   001672  0E01               	movlw	1
  3357   001674  6E32               	movwf	(_mrf24_data_config+2)^0,c
  3358                           
  3359                           ;drivers/scr/API_MRF24J40.c: 565:     mrf24_data_config.my_channel = CH_11;
  3360   001676  0E03               	movlw	3
  3361   001678  6E33               	movwf	(_mrf24_data_config+3)^0,c
  3362   00167A                     
  3363                           ;drivers/scr/API_MRF24J40.c: 566:     mrf24_data_config.get_new_msg = 0;
  3364   00167A  6A30               	clrf	_mrf24_data_config^0,c
  3365   00167C                     
  3366                           ;drivers/scr/API_MRF24J40.c: 567:     mrf24_data_config.put_new_msg = 0;
  3367   00167C  6A31               	clrf	(_mrf24_data_config+1)^0,c
  3368                           
  3369                           ;drivers/scr/API_MRF24J40.c: 568:     mrf24_data_config.my_panid = (0x1234);
  3370   00167E  0E12               	movlw	18
  3371   001680  6E4D               	movwf	(_mrf24_data_config+29)^0,c
  3372   001682  0E34               	movlw	52
  3373   001684  6E4C               	movwf	(_mrf24_data_config+28)^0,c
  3374                           
  3375                           ;drivers/scr/API_MRF24J40.c: 569:     mrf24_data_config.my_address = (0x1112);
  3376   001686  0E11               	movlw	17
  3377   001688  6E4F               	movwf	(_mrf24_data_config+31)^0,c
  3378   00168A  0E12               	movlw	18
  3379   00168C  6E4E               	movwf	(_mrf24_data_config+30)^0,c
  3380                           
  3381                           ;drivers/scr/API_MRF24J40.c: 570:     mrf24_data_in.source_address = (0X00);
  3382   00168E  0E00               	movlw	0
  3383   001690  0100               	movlb	0	; () banked
  3384   001692  6F63               	movwf	(_mrf24_data_in+3)& (0+255),b
  3385   001694  0E00               	movlw	0
  3386   001696  6F62               	movwf	(_mrf24_data_in+2)& (0+255),b
  3387                           
  3388                           ;drivers/scr/API_MRF24J40.c: 571:     mrf24_data_in.source_panid = (0X00);
  3389   001698  0E00               	movlw	0
  3390   00169A  6F61               	movwf	(_mrf24_data_in+1)& (0+255),b
  3391   00169C  0E00               	movlw	0
  3392   00169E  6F60               	movwf	_mrf24_data_in& (0+255),b
  3393   0016A0                     
  3394                           ; BSR set to: 0
  3395                           ;drivers/scr/API_MRF24J40.c: 572:     mrf24_data_in.tamano_mensaje = (0X00);
  3396   0016A0  6B64               	clrf	(_mrf24_data_in+4)& (0+255),b
  3397   0016A2                     
  3398                           ; BSR set to: 0
  3399                           ;drivers/scr/API_MRF24J40.c: 573:     mrf24_data_in.buffer_entrada[0] = (0X00);
  3400   0016A2  6B66               	clrf	(_mrf24_data_in+6)& (0+255),b
  3401   0016A4                     
  3402                           ; BSR set to: 0
  3403   0016A4  0012               	return		;funcret
  3404   0016A6                     __end_of_InicializoVariables:
  3405                           	callstack 0
  3406                           
  3407 ;; *************** function _InicializoPines *****************
  3408 ;; Defined at:
  3409 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, cstack
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;Total ram usage:        0 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 2
  3430 ;; This function calls:
  3431 ;;		_SetCSPin
  3432 ;;		_SetResetPin
  3433 ;;		_SetWakePin
  3434 ;; This function is called by:
  3435 ;;		_MRF24J40Init
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439                           	psect	text15
  3440   001B54                     __ptext15:
  3441                           	callstack 0
  3442   001B54                     _InicializoPines:
  3443                           	callstack 27
  3444   001B54                     
  3445                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  3446   001B54  0E01               	movlw	1
  3447   001B56  ECE3  F00D         	call	_SetCSPin
  3448                           
  3449                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  3450   001B5A  0E01               	movlw	1
  3451   001B5C  ECC7  F00D         	call	_SetWakePin
  3452                           
  3453                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  3454   001B60  0E00               	movlw	0
  3455   001B62  ECCE  F00D         	call	_SetResetPin
  3456   001B66  0012               	return		;funcret
  3457   001B68                     __end_of_InicializoPines:
  3458                           	callstack 0
  3459                           
  3460 ;; *************** function _SetWakePin *****************
  3461 ;; Defined at:
  3462 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  estado          1    wreg     _Bool 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  estado          1    0[COMRAM] _Bool 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;                  1    wreg      void 
  3469 ;; Registers used:
  3470 ;;		wreg
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3479 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3480 ;;Total ram usage:        1 bytes
  3481 ;; Hardware stack levels used: 1
  3482 ;; Hardware stack levels required when called: 1
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_InicializoPines
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	text16
  3491   001B8E                     __ptext16:
  3492                           	callstack 0
  3493   001B8E                     _SetWakePin:
  3494                           	callstack 27
  3495                           
  3496                           ;incstack = 0
  3497                           ;SetWakePin@estado stored from wreg
  3498   001B8E  6E01               	movwf	SetWakePin@estado^0,c
  3499   001B90                     
  3500                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  3501   001B90  B001               	btfsc	SetWakePin@estado^0,0,c
  3502   001B92  D002               	bra	u45
  3503   001B94  9E8B               	bcf	139,7,c	;volatile
  3504   001B96  D001               	bra	u46
  3505   001B98                     u45:
  3506   001B98  8E8B               	bsf	139,7,c	;volatile
  3507   001B9A                     u46:
  3508   001B9A  0012               	return		;funcret
  3509   001B9C                     __end_of_SetWakePin:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _SetResetPin *****************
  3513 ;; Defined at:
  3514 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  estado          1    wreg     _Bool 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  estado          1    0[COMRAM] _Bool 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		wreg
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;Total ram usage:        1 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 1
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_InicializoPines
  3539 ;;		_MRF24J40Init
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text17
  3544   001B9C                     __ptext17:
  3545                           	callstack 0
  3546   001B9C                     _SetResetPin:
  3547                           	callstack 28
  3548                           
  3549                           ;incstack = 0
  3550                           ;SetResetPin@estado stored from wreg
  3551   001B9C  6E01               	movwf	SetResetPin@estado^0,c
  3552   001B9E                     
  3553                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  3554   001B9E  B001               	btfsc	SetResetPin@estado^0,0,c
  3555   001BA0  D002               	bra	u55
  3556   001BA2  988C               	bcf	140,4,c	;volatile
  3557   001BA4  D001               	bra	u56
  3558   001BA6                     u55:
  3559   001BA6  888C               	bsf	140,4,c	;volatile
  3560   001BA8                     u56:
  3561   001BA8  0012               	return		;funcret
  3562   001BAA                     __end_of_SetResetPin:
  3563                           	callstack 0
  3564                           
  3565 ;; *************** function _GetShortAddr *****************
  3566 ;; Defined at:
  3567 ;;		line 597 in file "drivers/scr/API_MRF24J40.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  reg_address     1    wreg     unsigned char 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  reg_address     1    3[COMRAM] unsigned char 
  3572 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      unsigned char 
  3575 ;; Registers used:
  3576 ;;		wreg, status,2, status,0, cstack
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3586 ;;Total ram usage:        2 bytes
  3587 ;; Hardware stack levels used: 1
  3588 ;; Hardware stack levels required when called: 3
  3589 ;; This function calls:
  3590 ;;		_ReadByteSPIPort
  3591 ;;		_SetCSPin
  3592 ;;		_WriteByteSPIPort
  3593 ;; This function is called by:
  3594 ;;		_MRF24J40Init
  3595 ;;		_MRF24ReciboPaquete
  3596 ;; This function uses a non-reentrant model
  3597 ;;
  3598                           
  3599                           	psect	text18
  3600   001A88                     __ptext18:
  3601                           	callstack 0
  3602   001A88                     _GetShortAddr:
  3603                           	callstack 26
  3604                           
  3605                           ;incstack = 0
  3606                           ;GetShortAddr@reg_address stored from wreg
  3607   001A88  6E04               	movwf	GetShortAddr@reg_address^0,c
  3608   001A8A                     
  3609                           ;drivers/scr/API_MRF24J40.c: 600:     reg_address = (uint8_t) (reg_address << (0X01)) & 
      +                          (0x7E);
  3610   001A8A  5004               	movf	GetShortAddr@reg_address^0,w,c
  3611   001A8C  2404               	addwf	GetShortAddr@reg_address^0,w,c
  3612   001A8E  0B7E               	andlw	126
  3613   001A90  6E04               	movwf	GetShortAddr@reg_address^0,c
  3614   001A92                     
  3615                           ;drivers/scr/API_MRF24J40.c: 601:     SetCSPin(0);
  3616   001A92  0E00               	movlw	0
  3617   001A94  ECE3  F00D         	call	_SetCSPin
  3618   001A98                     
  3619                           ;drivers/scr/API_MRF24J40.c: 602:     WriteByteSPIPort(reg_address);
  3620   001A98  5004               	movf	GetShortAddr@reg_address^0,w,c
  3621   001A9A  ECFB  F00D         	call	_WriteByteSPIPort
  3622   001A9E                     
  3623                           ;drivers/scr/API_MRF24J40.c: 603:     leido_spi = ReadByteSPIPort();
  3624   001A9E  EC00  F00E         	call	_ReadByteSPIPort	;wreg free
  3625   001AA2  6E03               	movwf	GetShortAddr@leido_spi^0,c
  3626   001AA4                     
  3627                           ;drivers/scr/API_MRF24J40.c: 604:     SetCSPin(1);
  3628   001AA4  0E01               	movlw	1
  3629   001AA6  ECE3  F00D         	call	_SetCSPin
  3630   001AAA                     
  3631                           ;drivers/scr/API_MRF24J40.c: 605:  return leido_spi;
  3632   001AAA  5003               	movf	GetShortAddr@leido_spi^0,w,c
  3633   001AAC  0012               	return		;funcret
  3634   001AAE                     __end_of_GetShortAddr:
  3635                           	callstack 0
  3636                           
  3637 ;; *************** function _WriteByteSPIPort *****************
  3638 ;; Defined at:
  3639 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  dato            1    wreg     unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  dato            1    1[COMRAM] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg, status,2, cstack
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;Total ram usage:        1 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 2
  3660 ;; This function calls:
  3661 ;;		_SPIWriteByte
  3662 ;; This function is called by:
  3663 ;;		_SetShortAddr
  3664 ;;		_GetShortAddr
  3665 ;;		_SetLongAddr
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text19
  3670   001BF6                     __ptext19:
  3671                           	callstack 0
  3672   001BF6                     _WriteByteSPIPort:
  3673                           	callstack 26
  3674                           
  3675                           ;incstack = 0
  3676                           ;WriteByteSPIPort@dato stored from wreg
  3677   001BF6  6E02               	movwf	WriteByteSPIPort@dato^0,c
  3678   001BF8                     
  3679                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  3680   001BF8  5002               	movf	WriteByteSPIPort@dato^0,w,c
  3681   001BFA  EC87  F00D         	call	_SPIWriteByte
  3682   001BFE  0012               	return		;funcret
  3683   001C00                     __end_of_WriteByteSPIPort:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _GetLongAddr *****************
  3687 ;; Defined at:
  3688 ;;		line 628 in file "drivers/scr/API_MRF24J40.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  reg_address     2    5[COMRAM] unsigned short 
  3691 ;; Auto vars:     Size  Location     Type
  3692 ;;  respuesta       1    9[COMRAM] unsigned char 
  3693 ;; Return value:  Size  Location     Type
  3694 ;;                  1    wreg      unsigned char 
  3695 ;; Registers used:
  3696 ;;		wreg, status,2, status,0, cstack
  3697 ;; Tracked objects:
  3698 ;;		On entry : 0/0
  3699 ;;		On exit  : 0/0
  3700 ;;		Unchanged: 0/0
  3701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;Total ram usage:        5 bytes
  3707 ;; Hardware stack levels used: 1
  3708 ;; Hardware stack levels required when called: 4
  3709 ;; This function calls:
  3710 ;;		_ReadByteSPIPort
  3711 ;;		_SetCSPin
  3712 ;;		_Write2ByteSPIPort
  3713 ;; This function is called by:
  3714 ;;		_MRF24J40Init
  3715 ;;		_MRF24ReciboPaquete
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text20
  3720   0018AC                     __ptext20:
  3721                           	callstack 0
  3722   0018AC                     _GetLongAddr:
  3723                           	callstack 25
  3724   0018AC                     
  3725                           ;drivers/scr/API_MRF24J40.c: 630:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 631:  
      +                             reg_address = (reg_address << (0X05)) | (0X8000);
  3726   0018AC  C006  F008         	movff	GetLongAddr@reg_address,??_GetLongAddr
  3727   0018B0  C007  F009         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  3728   0018B4  0E05               	movlw	5
  3729   0018B6                     u515:
  3730   0018B6  90D8               	bcf	status,0,c
  3731   0018B8  3608               	rlcf	??_GetLongAddr^0,f,c
  3732   0018BA  3609               	rlcf	(??_GetLongAddr+1)^0,f,c
  3733   0018BC  2EE8               	decfsz	wreg,f,c
  3734   0018BE  EF5B  F00C         	goto	u515
  3735   0018C2  0E00               	movlw	0
  3736   0018C4  1008               	iorwf	??_GetLongAddr^0,w,c
  3737   0018C6  6E06               	movwf	GetLongAddr@reg_address^0,c
  3738   0018C8  0E80               	movlw	128
  3739   0018CA  1009               	iorwf	(??_GetLongAddr+1)^0,w,c
  3740   0018CC  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3741   0018CE                     
  3742                           ;drivers/scr/API_MRF24J40.c: 632:     SetCSPin(0);
  3743   0018CE  0E00               	movlw	0
  3744   0018D0  ECE3  F00D         	call	_SetCSPin
  3745   0018D4                     
  3746                           ;drivers/scr/API_MRF24J40.c: 633:     Write2ByteSPIPort(reg_address);
  3747   0018D4  C006  F004         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  3748   0018D8  C007  F005         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3749   0018DC  ECD5  F00D         	call	_Write2ByteSPIPort	;wreg free
  3750   0018E0                     
  3751                           ;drivers/scr/API_MRF24J40.c: 634:  respuesta = ReadByteSPIPort();
  3752   0018E0  EC00  F00E         	call	_ReadByteSPIPort	;wreg free
  3753   0018E4  6E0A               	movwf	GetLongAddr@respuesta^0,c
  3754   0018E6                     
  3755                           ;drivers/scr/API_MRF24J40.c: 635:     SetCSPin(1);
  3756   0018E6  0E01               	movlw	1
  3757   0018E8  ECE3  F00D         	call	_SetCSPin
  3758   0018EC                     
  3759                           ;drivers/scr/API_MRF24J40.c: 636:  return respuesta;
  3760   0018EC  500A               	movf	GetLongAddr@respuesta^0,w,c
  3761   0018EE  0012               	return		;funcret
  3762   0018F0                     __end_of_GetLongAddr:
  3763                           	callstack 0
  3764                           
  3765 ;; *************** function _Write2ByteSPIPort *****************
  3766 ;; Defined at:
  3767 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;  dato            2    3[COMRAM] unsigned short 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;Total ram usage:        2 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 3
  3788 ;; This function calls:
  3789 ;;		_SPIWrite2Byte
  3790 ;; This function is called by:
  3791 ;;		_SetLongAddr
  3792 ;;		_GetLongAddr
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text21
  3797   001BAA                     __ptext21:
  3798                           	callstack 0
  3799   001BAA                     _Write2ByteSPIPort:
  3800                           	callstack 25
  3801   001BAA                     
  3802                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  3803   001BAA  C004  F002         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  3804   001BAE  C005  F003         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  3805   001BB2  ECDC  F00D         	call	_SPIWrite2Byte	;wreg free
  3806   001BB6  0012               	return		;funcret
  3807   001BB8                     __end_of_Write2ByteSPIPort:
  3808                           	callstack 0
  3809                           
  3810 ;; *************** function _SPIWrite2Byte *****************
  3811 ;; Defined at:
  3812 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;  dato            2    1[COMRAM] unsigned short 
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, status,2, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3830 ;;Total ram usage:        2 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; Hardware stack levels required when called: 2
  3833 ;; This function calls:
  3834 ;;		_SPIWriteByte
  3835 ;; This function is called by:
  3836 ;;		_Write2ByteSPIPort
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text22
  3841   001BB8                     __ptext22:
  3842                           	callstack 0
  3843   001BB8                     _SPIWrite2Byte:
  3844                           	callstack 25
  3845   001BB8                     
  3846                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  3847   001BB8  5003               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  3848   001BBA  EC87  F00D         	call	_SPIWriteByte
  3849                           
  3850                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  3851   001BBE  5002               	movf	SPIWrite2Byte@dato^0,w,c
  3852   001BC0  EC87  F00D         	call	_SPIWriteByte
  3853   001BC4  0012               	return		;funcret
  3854   001BC6                     __end_of_SPIWrite2Byte:
  3855                           	callstack 0
  3856                           
  3857 ;; *************** function _SPIWriteByte *****************
  3858 ;; Defined at:
  3859 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;  dato            1    wreg     unsigned char 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  dato            1    0[COMRAM] unsigned char 
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3874 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;Total ram usage:        1 bytes
  3878 ;; Hardware stack levels used: 1
  3879 ;; Hardware stack levels required when called: 1
  3880 ;; This function calls:
  3881 ;;		Nothing
  3882 ;; This function is called by:
  3883 ;;		_WriteByteSPIPort
  3884 ;;		_SPIWrite2Byte
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text23
  3889   001B0E                     __ptext23:
  3890                           	callstack 0
  3891   001B0E                     _SPIWriteByte:
  3892                           	callstack 26
  3893                           
  3894                           ;incstack = 0
  3895                           ;SPIWriteByte@dato stored from wreg
  3896   001B0E  6E01               	movwf	SPIWriteByte@dato^0,c
  3897   001B10                     
  3898                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  3899   001B10  969E               	bcf	158,3,c	;volatile
  3900   001B12                     
  3901                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  3902   001B12  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  3903   001B16                     l180:
  3904   001B16  A69E               	btfss	158,3,c	;volatile
  3905   001B18  EF90  F00D         	goto	u421
  3906   001B1C  EF92  F00D         	goto	u420
  3907   001B20                     u421:
  3908   001B20  EF8B  F00D         	goto	l180
  3909   001B24                     u420:
  3910   001B24  0012               	return		;funcret
  3911   001B26                     __end_of_SPIWriteByte:
  3912                           	callstack 0
  3913                           
  3914 ;; *************** function _SetCSPin *****************
  3915 ;; Defined at:
  3916 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  estado          1    wreg     _Bool 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;  estado          1    0[COMRAM] _Bool 
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3931 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3933 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;Total ram usage:        1 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; Hardware stack levels required when called: 1
  3937 ;; This function calls:
  3938 ;;		Nothing
  3939 ;; This function is called by:
  3940 ;;		_InicializoPines
  3941 ;;		_SetShortAddr
  3942 ;;		_GetShortAddr
  3943 ;;		_SetLongAddr
  3944 ;;		_GetLongAddr
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           	psect	text24
  3949   001BC6                     __ptext24:
  3950                           	callstack 0
  3951   001BC6                     _SetCSPin:
  3952                           	callstack 27
  3953                           
  3954                           ;incstack = 0
  3955                           ;SetCSPin@estado stored from wreg
  3956   001BC6  6E01               	movwf	SetCSPin@estado^0,c
  3957   001BC8                     
  3958                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  3959   001BC8  B001               	btfsc	SetCSPin@estado^0,0,c
  3960   001BCA  D002               	bra	u435
  3961   001BCC  9C8B               	bcf	139,6,c	;volatile
  3962   001BCE  D001               	bra	u436
  3963   001BD0                     u435:
  3964   001BD0  8C8B               	bsf	139,6,c	;volatile
  3965   001BD2                     u436:
  3966   001BD2  0012               	return		;funcret
  3967   001BD4                     __end_of_SetCSPin:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function _ReadByteSPIPort *****************
  3971 ;; Defined at:
  3972 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;		None
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  1    wreg      unsigned char 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;Total ram usage:        0 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; Hardware stack levels required when called: 2
  3993 ;; This function calls:
  3994 ;;		_SPIRead
  3995 ;; This function is called by:
  3996 ;;		_GetShortAddr
  3997 ;;		_GetLongAddr
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001                           	psect	text25
  4002   001C00                     __ptext25:
  4003                           	callstack 0
  4004   001C00                     _ReadByteSPIPort:
  4005                           	callstack 26
  4006   001C00                     
  4007                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  4008   001C00  EC9F  F00D         	call	_SPIRead	;wreg free
  4009   001C04  0012               	return		;funcret
  4010   001C06                     __end_of_ReadByteSPIPort:
  4011                           	callstack 0
  4012                           
  4013 ;; *************** function _SPIRead *****************
  4014 ;; Defined at:
  4015 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  4016 ;; Parameters:    Size  Location     Type
  4017 ;;		None
  4018 ;; Auto vars:     Size  Location     Type
  4019 ;;		None
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  1    wreg      unsigned char 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4033 ;;Total ram usage:        0 bytes
  4034 ;; Hardware stack levels used: 1
  4035 ;; Hardware stack levels required when called: 1
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_ReadByteSPIPort
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text26
  4044   001B3E                     __ptext26:
  4045                           	callstack 0
  4046   001B3E                     _SPIRead:
  4047                           	callstack 26
  4048   001B3E                     
  4049                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  4050   001B3E  9EC6               	bcf	198,7,c	;volatile
  4051                           
  4052                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  4053   001B40  6AC9               	clrf	201,c	;volatile
  4054   001B42                     l189:
  4055   001B42  A0C7               	btfss	199,0,c	;volatile
  4056   001B44  EFA6  F00D         	goto	u441
  4057   001B48  EFA8  F00D         	goto	u440
  4058   001B4C                     u441:
  4059   001B4C  EFA1  F00D         	goto	l189
  4060   001B50                     u440:
  4061   001B50                     
  4062                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  4063   001B50  50C9               	movf	201,w,c	;volatile
  4064   001B52  0012               	return		;funcret
  4065   001B54                     __end_of_SPIRead:
  4066                           	callstack 0
  4067                           
  4068 ;; *************** function _DelayReset *****************
  4069 ;; Defined at:
  4070 ;;		line 68 in file "drivers/scr/API_delay.c"
  4071 ;; Parameters:    Size  Location     Type
  4072 ;;  delay           1    0[COMRAM] PTR struct .
  4073 ;;		 -> MRF24J40Init@delay_time_out(9), 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4085 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4088 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4089 ;;Total ram usage:        1 bytes
  4090 ;; Hardware stack levels used: 1
  4091 ;; Hardware stack levels required when called: 1
  4092 ;; This function calls:
  4093 ;;		Nothing
  4094 ;; This function is called by:
  4095 ;;		_MRF24J40Init
  4096 ;; This function uses a non-reentrant model
  4097 ;;
  4098                           
  4099                           	psect	text27
  4100   001AAE                     __ptext27:
  4101                           	callstack 0
  4102   001AAE                     _DelayReset:
  4103                           	callstack 28
  4104   001AAE                     
  4105                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  4106   001AAE  5001               	movf	DelayReset@delay^0,w,c
  4107   001AB0  6ED9               	movwf	fsr2l,c
  4108   001AB2  6ADA               	clrf	fsr2h,c
  4109   001AB4  C058  FFDE         	movff	_timeStamp,postinc2
  4110   001AB8  C059  FFDE         	movff	_timeStamp+1,postinc2
  4111   001ABC  C05A  FFDE         	movff	_timeStamp+2,postinc2
  4112   001AC0  C05B  FFDE         	movff	_timeStamp+3,postinc2
  4113   001AC4                     
  4114                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  4115   001AC4  5001               	movf	DelayReset@delay^0,w,c
  4116   001AC6  6ED9               	movwf	fsr2l,c
  4117   001AC8  6ADA               	clrf	fsr2h,c
  4118   001ACA  0E08               	movlw	8
  4119   001ACC  26D9               	addwf	fsr2l,f,c
  4120   001ACE  0E01               	movlw	1
  4121   001AD0  6EDF               	movwf	indf2,c
  4122   001AD2  0012               	return		;funcret
  4123   001AD4                     __end_of_DelayReset:
  4124                           	callstack 0
  4125                           
  4126 ;; *************** function _MRF24IsNewMsg *****************
  4127 ;; Defined at:
  4128 ;;		line 752 in file "drivers/scr/API_MRF24J40.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;		None
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  1    wreg      _Bool 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4146 ;;Total ram usage:        0 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; Hardware stack levels required when called: 2
  4149 ;; This function calls:
  4150 ;;		_IsMRF24Interrup
  4151 ;; This function is called by:
  4152 ;;		_main
  4153 ;; This function uses a non-reentrant model
  4154 ;;
  4155                           
  4156                           	psect	text28
  4157   001AF4                     __ptext28:
  4158                           	callstack 0
  4159   001AF4                     _MRF24IsNewMsg:
  4160                           	callstack 28
  4161   001AF4                     
  4162                           ;drivers/scr/API_MRF24J40.c: 754:  return !IsMRF24Interrup();
  4163   001AF4  ECB4  F00D         	call	_IsMRF24Interrup	;wreg free
  4164   001AF8  0900               	iorlw	0
  4165   001AFA  B4D8               	btfsc	status,2,c
  4166   001AFC  EF82  F00D         	goto	u201
  4167   001B00  EF85  F00D         	goto	u200
  4168   001B04                     u201:
  4169   001B04  0E01               	movlw	1
  4170   001B06  EF86  F00D         	goto	u210
  4171   001B0A                     u200:
  4172   001B0A  0E00               	movlw	0
  4173   001B0C                     u210:
  4174   001B0C  0012               	return		;funcret
  4175   001B0E                     __end_of_MRF24IsNewMsg:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function _IsMRF24Interrup *****************
  4179 ;; Defined at:
  4180 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;		None
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;		None
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      _Bool 
  4187 ;; Registers used:
  4188 ;;		wreg
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;Total ram usage:        0 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 1
  4201 ;; This function calls:
  4202 ;;		Nothing
  4203 ;; This function is called by:
  4204 ;;		_MRF24IsNewMsg
  4205 ;; This function uses a non-reentrant model
  4206 ;;
  4207                           
  4208                           	psect	text29
  4209   001B68                     __ptext29:
  4210                           	callstack 0
  4211   001B68                     _IsMRF24Interrup:
  4212                           	callstack 28
  4213   001B68                     
  4214                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  4215   001B68  B081               	btfsc	129,0,c	;volatile
  4216   001B6A  EFB9  F00D         	goto	u71
  4217   001B6E  EFBC  F00D         	goto	u70
  4218   001B72                     u71:
  4219   001B72  0E01               	movlw	1
  4220   001B74  EFBD  F00D         	goto	u76
  4221   001B78                     u70:
  4222   001B78  0E00               	movlw	0
  4223   001B7A                     u76:
  4224   001B7A  0012               	return		;funcret
  4225   001B7C                     __end_of_IsMRF24Interrup:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function _MRF24GetMensajeEntrada *****************
  4229 ;; Defined at:
  4230 ;;		line 784 in file "drivers/scr/API_MRF24J40.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    0[COMRAM] PTR unsigned char 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;Total ram usage:        2 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_main
  4255 ;; This function uses a non-reentrant model
  4256 ;;
  4257                           
  4258                           	psect	text30
  4259   001C06                     __ptext30:
  4260                           	callstack 0
  4261   001C06                     _MRF24GetMensajeEntrada:
  4262                           	callstack 29
  4263   001C06                     
  4264                           ;drivers/scr/API_MRF24J40.c: 786:  return mrf24_data_in.buffer_entrada;
  4265   001C06  0E60               	movlw	_mrf24_data_in& (0+255)
  4266   001C08  0F06               	addlw	6
  4267   001C0A  0012               	return		;funcret
  4268   001C0C                     __end_of_MRF24GetMensajeEntrada:
  4269                           	callstack 0
  4270                           
  4271 ;; *************** function _DebounceFSMUpdate *****************
  4272 ;; Defined at:
  4273 ;;		line 34 in file "drivers/scr/API_debounce.c"
  4274 ;; Parameters:    Size  Location     Type
  4275 ;;  antirrebote_    1   14[COMRAM] PTR struct .
  4276 ;;		 -> main@boton1(11), 
  4277 ;;  estado_pin      1   15[COMRAM] _Bool 
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      enum E3120
  4282 ;; Registers used:
  4283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4284 ;; Tracked objects:
  4285 ;;		On entry : 0/0
  4286 ;;		On exit  : 0/0
  4287 ;;		Unchanged: 0/0
  4288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;Total ram usage:        4 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 3
  4296 ;; This function calls:
  4297 ;;		_DebounceFSMInit
  4298 ;;		_DelayRead
  4299 ;; This function is called by:
  4300 ;;		_main
  4301 ;; This function uses a non-reentrant model
  4302 ;;
  4303                           
  4304                           	psect	text31
  4305   0013AC                     __ptext31:
  4306                           	callstack 0
  4307   0013AC                     _DebounceFSMUpdate:
  4308                           	callstack 27
  4309   0013AC                     
  4310                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  4311   0013AC  EF50  F00A         	goto	l2016
  4312   0013B0                     l1964:
  4313                           
  4314                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  4315   0013B0  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4316   0013B2  A4D8               	btfss	status,2,c
  4317   0013B4  EFDE  F009         	goto	u591
  4318   0013B8  EFE0  F009         	goto	u590
  4319   0013BC                     u591:
  4320   0013BC  EF72  F00A         	goto	l2018
  4321   0013C0                     u590:
  4322   0013C0                     
  4323                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  4324   0013C0  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4325   0013C2  6ED9               	movwf	fsr2l,c
  4326   0013C4  6ADA               	clrf	fsr2h,c
  4327   0013C6  0E01               	movlw	1
  4328   0013C8  26D9               	addwf	fsr2l,f,c
  4329   0013CA  0E01               	movlw	1
  4330   0013CC  6EDF               	movwf	indf2,c
  4331   0013CE  EF72  F00A         	goto	l2018
  4332   0013D2                     l1968:
  4333                           
  4334                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4335   0013D2  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4336   0013D4  0F02               	addlw	2
  4337   0013D6  6E02               	movwf	DelayRead@delay^0,c
  4338   0013D8  EC53  F00B         	call	_DelayRead	;wreg free
  4339   0013DC  0900               	iorlw	0
  4340   0013DE  B4D8               	btfsc	status,2,c
  4341   0013E0  EFF4  F009         	goto	u601
  4342   0013E4  EFF6  F009         	goto	u600
  4343   0013E8                     u601:
  4344   0013E8  EF72  F00A         	goto	l2018
  4345   0013EC                     u600:
  4346   0013EC                     
  4347                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  4348   0013EC  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4349   0013EE  A4D8               	btfss	status,2,c
  4350   0013F0  EFFC  F009         	goto	u611
  4351   0013F4  EFFE  F009         	goto	u610
  4352   0013F8                     u611:
  4353   0013F8  EF08  F00A         	goto	l1980
  4354   0013FC                     u610:
  4355   0013FC                     
  4356                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4357   0013FC  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4358   0013FE  6ED9               	movwf	fsr2l,c
  4359   001400  6ADA               	clrf	fsr2h,c
  4360   001402  0E01               	movlw	1
  4361   001404  26D9               	addwf	fsr2l,f,c
  4362   001406  0E02               	movlw	2
  4363   001408  6EDF               	movwf	indf2,c
  4364   00140A                     
  4365                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  4366   00140A  0E01               	movlw	1
  4367   00140C  EF73  F00A         	goto	l376
  4368   001410                     l1980:
  4369                           
  4370                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4371   001410  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4372   001412  6ED9               	movwf	fsr2l,c
  4373   001414  6ADA               	clrf	fsr2h,c
  4374   001416  0E01               	movlw	1
  4375   001418  26D9               	addwf	fsr2l,f,c
  4376   00141A  6ADF               	clrf	indf2,c
  4377   00141C                     l1982:
  4378                           
  4379                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  4380   00141C  0E04               	movlw	4
  4381   00141E  EF73  F00A         	goto	l376
  4382   001422                     l1986:
  4383                           
  4384                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4385   001422  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4386   001424  0F02               	addlw	2
  4387   001426  6E02               	movwf	DelayRead@delay^0,c
  4388   001428  EC53  F00B         	call	_DelayRead	;wreg free
  4389   00142C  0900               	iorlw	0
  4390   00142E  B4D8               	btfsc	status,2,c
  4391   001430  EF1C  F00A         	goto	u621
  4392   001434  EF1E  F00A         	goto	u620
  4393   001438                     u621:
  4394   001438  EF72  F00A         	goto	l2018
  4395   00143C                     u620:
  4396   00143C                     
  4397                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  4398   00143C  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4399   00143E  B4D8               	btfsc	status,2,c
  4400   001440  EF24  F00A         	goto	u631
  4401   001444  EF26  F00A         	goto	u630
  4402   001448                     u631:
  4403   001448  EF2F  F00A         	goto	l1998
  4404   00144C                     u630:
  4405   00144C                     
  4406                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4407   00144C  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4408   00144E  6ED9               	movwf	fsr2l,c
  4409   001450  6ADA               	clrf	fsr2h,c
  4410   001452  0E01               	movlw	1
  4411   001454  26D9               	addwf	fsr2l,f,c
  4412   001456  6ADF               	clrf	indf2,c
  4413   001458                     
  4414                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  4415   001458  0E02               	movlw	2
  4416   00145A  EF73  F00A         	goto	l376
  4417   00145E                     l1998:
  4418                           
  4419                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4420   00145E  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4421   001460  6ED9               	movwf	fsr2l,c
  4422   001462  6ADA               	clrf	fsr2h,c
  4423   001464  0E01               	movlw	1
  4424   001466  26D9               	addwf	fsr2l,f,c
  4425   001468  0E02               	movlw	2
  4426   00146A  6EDF               	movwf	indf2,c
  4427   00146C  EF0E  F00A         	goto	l1982
  4428   001470                     l2004:
  4429                           
  4430                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  4431   001470  5010               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4432   001472  B4D8               	btfsc	status,2,c
  4433   001474  EF3E  F00A         	goto	u641
  4434   001478  EF40  F00A         	goto	u640
  4435   00147C                     u641:
  4436   00147C  EF72  F00A         	goto	l2018
  4437   001480                     u640:
  4438   001480                     
  4439                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  4440   001480  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4441   001482  6ED9               	movwf	fsr2l,c
  4442   001484  6ADA               	clrf	fsr2h,c
  4443   001486  0E01               	movlw	1
  4444   001488  26D9               	addwf	fsr2l,f,c
  4445   00148A  0E03               	movlw	3
  4446   00148C  6EDF               	movwf	indf2,c
  4447   00148E  EF72  F00A         	goto	l2018
  4448   001492                     l2008:
  4449                           
  4450                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  4451   001492  C00F  F006         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  4452   001496  ECF0  F00C         	call	_DebounceFSMInit	;wreg free
  4453   00149A                     
  4454                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  4455   00149A  0E00               	movlw	0
  4456   00149C  EF73  F00A         	goto	l376
  4457   0014A0                     l2016:
  4458   0014A0  500F               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4459   0014A2  6ED9               	movwf	fsr2l,c
  4460   0014A4  6ADA               	clrf	fsr2h,c
  4461   0014A6  0E01               	movlw	1
  4462   0014A8  26D9               	addwf	fsr2l,f,c
  4463   0014AA  50DF               	movf	indf2,w,c
  4464   0014AC  6E11               	movwf	??_DebounceFSMUpdate^0,c
  4465   0014AE  6A12               	clrf	(??_DebounceFSMUpdate+1)^0,c
  4466                           
  4467                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4468                           ; Switch size 1, requested type "simple"
  4469                           ; Number of cases is 1, Range of values is 0 to 0
  4470                           ; switch strategies available:
  4471                           ; Name         Instructions Cycles
  4472                           ; simple_byte            4     3 (average)
  4473                           ;	Chosen strategy is simple_byte
  4474   0014B0  5012               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  4475   0014B2  0A00               	xorlw	0	; case 0
  4476   0014B4  B4D8               	btfsc	status,2,c
  4477   0014B6  EF5F  F00A         	goto	l2132
  4478   0014BA  EF49  F00A         	goto	l2008
  4479   0014BE                     l2132:
  4480                           
  4481                           ; Switch size 1, requested type "simple"
  4482                           ; Number of cases is 4, Range of values is 0 to 3
  4483                           ; switch strategies available:
  4484                           ; Name         Instructions Cycles
  4485                           ; simple_byte           13     7 (average)
  4486                           ;	Chosen strategy is simple_byte
  4487   0014BE  5011               	movf	??_DebounceFSMUpdate^0,w,c
  4488   0014C0  0A00               	xorlw	0	; case 0
  4489   0014C2  B4D8               	btfsc	status,2,c
  4490   0014C4  EFD8  F009         	goto	l1964
  4491   0014C8  0A01               	xorlw	1	; case 1
  4492   0014CA  B4D8               	btfsc	status,2,c
  4493   0014CC  EFE9  F009         	goto	l1968
  4494   0014D0  0A03               	xorlw	3	; case 2
  4495   0014D2  B4D8               	btfsc	status,2,c
  4496   0014D4  EF38  F00A         	goto	l2004
  4497   0014D8  0A01               	xorlw	1	; case 3
  4498   0014DA  B4D8               	btfsc	status,2,c
  4499   0014DC  EF11  F00A         	goto	l1986
  4500   0014E0  EF49  F00A         	goto	l2008
  4501   0014E4                     l2018:
  4502                           
  4503                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  4504   0014E4  0E03               	movlw	3
  4505   0014E6                     l376:
  4506   0014E6  0012               	return		;funcret
  4507   0014E8                     __end_of_DebounceFSMUpdate:
  4508                           	callstack 0
  4509                           
  4510 ;; *************** function _DelayRead *****************
  4511 ;; Defined at:
  4512 ;;		line 34 in file "drivers/scr/API_delay.c"
  4513 ;; Parameters:    Size  Location     Type
  4514 ;;  delay           1    1[COMRAM] PTR struct .
  4515 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;		None
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      _Bool 
  4520 ;; Registers used:
  4521 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4527 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;Total ram usage:       13 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; Hardware stack levels required when called: 2
  4534 ;; This function calls:
  4535 ;;		_DelayIsRunning
  4536 ;; This function is called by:
  4537 ;;		_MRF24J40Init
  4538 ;;		_main
  4539 ;;		_DebounceFSMUpdate
  4540 ;; This function uses a non-reentrant model
  4541 ;;
  4542                           
  4543                           	psect	text32
  4544   0016A6                     __ptext32:
  4545                           	callstack 0
  4546   0016A6                     _DelayRead:
  4547                           	callstack 27
  4548   0016A6                     
  4549                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  4550   0016A6  C002  F001         	movff	DelayRead@delay,DelayIsRunning@delay
  4551   0016AA  ECEA  F00D         	call	_DelayIsRunning	;wreg free
  4552   0016AE  0900               	iorlw	0
  4553   0016B0  A4D8               	btfss	status,2,c
  4554   0016B2  EF5D  F00B         	goto	u481
  4555   0016B6  EF5F  F00B         	goto	u480
  4556   0016BA                     u481:
  4557   0016BA  EF73  F00B         	goto	l1742
  4558   0016BE                     u480:
  4559   0016BE                     
  4560                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  4561   0016BE  5002               	movf	DelayRead@delay^0,w,c
  4562   0016C0  6ED9               	movwf	fsr2l,c
  4563   0016C2  6ADA               	clrf	fsr2h,c
  4564   0016C4  C058  FFDE         	movff	_timeStamp,postinc2
  4565   0016C8  C059  FFDE         	movff	_timeStamp+1,postinc2
  4566   0016CC  C05A  FFDE         	movff	_timeStamp+2,postinc2
  4567   0016D0  C05B  FFDE         	movff	_timeStamp+3,postinc2
  4568   0016D4                     
  4569                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  4570   0016D4  5002               	movf	DelayRead@delay^0,w,c
  4571   0016D6  6ED9               	movwf	fsr2l,c
  4572   0016D8  6ADA               	clrf	fsr2h,c
  4573   0016DA  0E08               	movlw	8
  4574   0016DC  26D9               	addwf	fsr2l,f,c
  4575   0016DE  0E01               	movlw	1
  4576   0016E0  6EDF               	movwf	indf2,c
  4577                           
  4578                           ;drivers/scr/API_delay.c: 40:  } else {
  4579   0016E2  EFA7  F00B         	goto	l1750
  4580   0016E6                     l1742:
  4581                           
  4582                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  4583   0016E6  5002               	movf	DelayRead@delay^0,w,c
  4584   0016E8  6ED9               	movwf	fsr2l,c
  4585   0016EA  6ADA               	clrf	fsr2h,c
  4586   0016EC  0E04               	movlw	4
  4587   0016EE  26D9               	addwf	fsr2l,f,c
  4588   0016F0  5002               	movf	DelayRead@delay^0,w,c
  4589   0016F2  6EE1               	movwf	fsr1l,c
  4590   0016F4  6AE2               	clrf	fsr1h,c
  4591   0016F6  CFE6 F007          	movff	postinc1,??_DelayRead+4
  4592   0016FA  CFE6 F008          	movff	postinc1,??_DelayRead+5
  4593   0016FE  CFE6 F009          	movff	postinc1,??_DelayRead+6
  4594   001702  CFE6 F00A          	movff	postinc1,??_DelayRead+7
  4595   001706  5007               	movf	(??_DelayRead+4)^0,w,c
  4596   001708  5C58               	subwf	_timeStamp^0,w,c
  4597   00170A  6E0B               	movwf	(??_DelayRead+8)^0,c
  4598   00170C  5008               	movf	(??_DelayRead+5)^0,w,c
  4599   00170E  5859               	subwfb	(_timeStamp+1)^0,w,c
  4600   001710  6E0C               	movwf	(??_DelayRead+9)^0,c
  4601   001712  5009               	movf	(??_DelayRead+6)^0,w,c
  4602   001714  585A               	subwfb	(_timeStamp+2)^0,w,c
  4603   001716  6E0D               	movwf	(??_DelayRead+10)^0,c
  4604   001718  500A               	movf	(??_DelayRead+7)^0,w,c
  4605   00171A  585B               	subwfb	(_timeStamp+3)^0,w,c
  4606   00171C  6E0E               	movwf	(??_DelayRead+11)^0,c
  4607   00171E  50DE               	movf	postinc2,w,c
  4608   001720  5C0B               	subwf	(??_DelayRead+8)^0,w,c
  4609   001722  50DE               	movf	postinc2,w,c
  4610   001724  580C               	subwfb	(??_DelayRead+9)^0,w,c
  4611   001726  50DE               	movf	postinc2,w,c
  4612   001728  580D               	subwfb	(??_DelayRead+10)^0,w,c
  4613   00172A  50DE               	movf	postinc2,w,c
  4614   00172C  580E               	subwfb	(??_DelayRead+11)^0,w,c
  4615   00172E  A0D8               	btfss	status,0,c
  4616   001730  EF9C  F00B         	goto	u491
  4617   001734  EF9E  F00B         	goto	u490
  4618   001738                     u491:
  4619   001738  EFA7  F00B         	goto	l1750
  4620   00173C                     u490:
  4621   00173C                     
  4622                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  4623   00173C  5002               	movf	DelayRead@delay^0,w,c
  4624   00173E  6ED9               	movwf	fsr2l,c
  4625   001740  6ADA               	clrf	fsr2h,c
  4626   001742  0E08               	movlw	8
  4627   001744  26D9               	addwf	fsr2l,f,c
  4628   001746  6ADF               	clrf	indf2,c
  4629   001748                     
  4630                           ;drivers/scr/API_delay.c: 45:    return 1;
  4631   001748  0E01               	movlw	1
  4632   00174A  EFA8  F00B         	goto	l350
  4633   00174E                     l1750:
  4634                           
  4635                           ;drivers/scr/API_delay.c: 48:  return 0;
  4636   00174E  0E00               	movlw	0
  4637   001750                     l350:
  4638   001750  0012               	return		;funcret
  4639   001752                     __end_of_DelayRead:
  4640                           	callstack 0
  4641                           
  4642 ;; *************** function _DelayIsRunning *****************
  4643 ;; Defined at:
  4644 ;;		line 83 in file "drivers/scr/API_delay.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  delay           1    0[COMRAM] PTR struct .
  4647 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      _Bool 
  4652 ;; Registers used:
  4653 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4659 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;Total ram usage:        1 bytes
  4664 ;; Hardware stack levels used: 1
  4665 ;; Hardware stack levels required when called: 1
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_DelayRead
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text33
  4674   001BD4                     __ptext33:
  4675                           	callstack 0
  4676   001BD4                     _DelayIsRunning:
  4677                           	callstack 27
  4678   001BD4                     
  4679                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  4680   001BD4  5001               	movf	DelayIsRunning@delay^0,w,c
  4681   001BD6  6ED9               	movwf	fsr2l,c
  4682   001BD8  6ADA               	clrf	fsr2h,c
  4683   001BDA  0E08               	movlw	8
  4684   001BDC  26D9               	addwf	fsr2l,f,c
  4685   001BDE  50DF               	movf	indf2,w,c
  4686   001BE0  0012               	return		;funcret
  4687   001BE2                     __end_of_DelayIsRunning:
  4688                           	callstack 0
  4689                           
  4690 ;; *************** function _DebounceFSMInit *****************
  4691 ;; Defined at:
  4692 ;;		line 19 in file "drivers/scr/API_debounce.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;  antirrebote_    1    5[COMRAM] PTR struct .
  4695 ;;		 -> main@boton1(11), 
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      void 
  4700 ;; Registers used:
  4701 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4707 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;Total ram usage:        1 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; Hardware stack levels required when called: 2
  4714 ;; This function calls:
  4715 ;;		_DelayInit
  4716 ;; This function is called by:
  4717 ;;		_main
  4718 ;;		_DebounceFSMUpdate
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           	psect	text34
  4723   0019E0                     __ptext34:
  4724                           	callstack 0
  4725   0019E0                     _DebounceFSMInit:
  4726                           	callstack 27
  4727   0019E0                     
  4728                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  4729   0019E0  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4730   0019E2  6ED9               	movwf	fsr2l,c
  4731   0019E4  6ADA               	clrf	fsr2h,c
  4732   0019E6  0E01               	movlw	1
  4733   0019E8  26D9               	addwf	fsr2l,f,c
  4734   0019EA  6ADF               	clrf	indf2,c
  4735   0019EC                     
  4736                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  4737   0019EC  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4738   0019EE  0F02               	addlw	2
  4739   0019F0  6E01               	movwf	DelayInit@delay^0,c
  4740   0019F2  0E28               	movlw	40
  4741   0019F4  6E02               	movwf	DelayInit@duration^0,c
  4742   0019F6  0E00               	movlw	0
  4743   0019F8  6E03               	movwf	(DelayInit@duration+1)^0,c
  4744   0019FA  0E00               	movlw	0
  4745   0019FC  6E04               	movwf	(DelayInit@duration+2)^0,c
  4746   0019FE  0E00               	movlw	0
  4747   001A00  6E05               	movwf	(DelayInit@duration+3)^0,c
  4748   001A02  EC1D  F00D         	call	_DelayInit	;wreg free
  4749   001A06                     
  4750                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  4751   001A06  5006               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  4752   001A08  6ED9               	movwf	fsr2l,c
  4753   001A0A  6ADA               	clrf	fsr2h,c
  4754   001A0C  6ADF               	clrf	indf2,c
  4755   001A0E  0012               	return		;funcret
  4756   001A10                     __end_of_DebounceFSMInit:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function _DelayInit *****************
  4760 ;; Defined at:
  4761 ;;		line 22 in file "drivers/scr/API_delay.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  delay           1    0[COMRAM] PTR struct .
  4764 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  4765 ;;  duration        4    1[COMRAM] unsigned long 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4777 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;Total ram usage:        5 bytes
  4782 ;; Hardware stack levels used: 1
  4783 ;; Hardware stack levels required when called: 1
  4784 ;; This function calls:
  4785 ;;		Nothing
  4786 ;; This function is called by:
  4787 ;;		_MRF24J40Init
  4788 ;;		_main
  4789 ;;		_DebounceFSMInit
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text35
  4794   001A3A                     __ptext35:
  4795                           	callstack 0
  4796   001A3A                     _DelayInit:
  4797                           	callstack 28
  4798   001A3A                     
  4799                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  4800   001A3A  5001               	movf	DelayInit@delay^0,w,c
  4801   001A3C  6ED9               	movwf	fsr2l,c
  4802   001A3E  6ADA               	clrf	fsr2h,c
  4803   001A40  0E04               	movlw	4
  4804   001A42  26D9               	addwf	fsr2l,f,c
  4805   001A44  C002  FFDE         	movff	DelayInit@duration,postinc2
  4806   001A48  C003  FFDE         	movff	DelayInit@duration+1,postinc2
  4807   001A4C  C004  FFDE         	movff	DelayInit@duration+2,postinc2
  4808   001A50  C005  FFDE         	movff	DelayInit@duration+3,postinc2
  4809                           
  4810                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  4811   001A54  5001               	movf	DelayInit@delay^0,w,c
  4812   001A56  6ED9               	movwf	fsr2l,c
  4813   001A58  6ADA               	clrf	fsr2h,c
  4814   001A5A  0E08               	movlw	8
  4815   001A5C  26D9               	addwf	fsr2l,f,c
  4816   001A5E  6ADF               	clrf	indf2,c
  4817   001A60  0012               	return		;funcret
  4818   001A62                     __end_of_DelayInit:
  4819                           	callstack 0
  4820                           
  4821 ;; *************** function _BoardInit *****************
  4822 ;; Defined at:
  4823 ;;		line 21 in file "hardware_config.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;Total ram usage:        0 bytes
  4842 ;; Hardware stack levels used: 1
  4843 ;; Hardware stack levels required when called: 2
  4844 ;; This function calls:
  4845 ;;		_SPIInit
  4846 ;; This function is called by:
  4847 ;;		_main
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text36
  4852   00184A                     __ptext36:
  4853                           	callstack 0
  4854   00184A                     _BoardInit:
  4855                           	callstack 28
  4856   00184A                     
  4857                           ;hardware_config.c: 23:     PORTA = 0;
  4858   00184A  6A80               	clrf	128,c	;volatile
  4859                           
  4860                           ;hardware_config.c: 24:     PORTB = 0;
  4861   00184C  6A81               	clrf	129,c	;volatile
  4862                           
  4863                           ;hardware_config.c: 25:     PORTC = 0;
  4864   00184E  6A82               	clrf	130,c	;volatile
  4865                           
  4866                           ;hardware_config.c: 26:     PORTD = 0;
  4867   001850  6A83               	clrf	131,c	;volatile
  4868                           
  4869                           ;hardware_config.c: 27:     PORTE = 0;
  4870   001852  6A84               	clrf	132,c	;volatile
  4871                           
  4872                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  4873   001854  8C93               	bsf	147,6,c	;volatile
  4874                           
  4875                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  4876   001856  8E93               	bsf	147,7,c	;volatile
  4877                           
  4878                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  4879   001858  9496               	bcf	150,2,c	;volatile
  4880                           
  4881                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  4882   00185A  9096               	bcf	150,0,c	;volatile
  4883                           
  4884                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  4885   00185C  9296               	bcf	150,1,c	;volatile
  4886                           
  4887                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  4888   00185E  8494               	bsf	148,2,c	;volatile
  4889                           
  4890                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  4891   001860  848D               	bsf	141,2,c	;volatile
  4892                           
  4893                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  4894   001862  808D               	bsf	141,0,c	;volatile
  4895                           
  4896                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  4897   001864  828D               	bsf	141,1,c	;volatile
  4898                           
  4899                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  4900   001866  8093               	bsf	147,0,c	;volatile
  4901                           
  4902                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  4903   001868  9C94               	bcf	148,6,c	;volatile
  4904                           
  4905                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  4906   00186A  9E94               	bcf	148,7,c	;volatile
  4907                           
  4908                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  4909   00186C  9895               	bcf	149,4,c	;volatile
  4910                           
  4911                           ;hardware_config.c: 45:     IPEN = 0;
  4912   00186E  9ED0               	bcf	4048,7,c	;volatile
  4913                           
  4914                           ;hardware_config.c: 46:  GIE = 1;
  4915   001870  8EF2               	bsf	4082,7,c	;volatile
  4916                           
  4917                           ;hardware_config.c: 47:  PEIE = 1;
  4918   001872  8CF2               	bsf	4082,6,c	;volatile
  4919                           
  4920                           ;hardware_config.c: 48:     INT0E = 0;
  4921   001874  98F2               	bcf	4082,4,c	;volatile
  4922                           
  4923                           ;hardware_config.c: 49:  RBIE = 0;
  4924   001876  96F2               	bcf	4082,3,c	;volatile
  4925                           
  4926                           ;hardware_config.c: 50:  T0IE = 0;
  4927   001878  9AF2               	bcf	4082,5,c	;volatile
  4928                           
  4929                           ;hardware_config.c: 51:  TMR1IE = 1;
  4930   00187A  809D               	bsf	3997,0,c	;volatile
  4931                           
  4932                           ;hardware_config.c: 52:  TMR2IE = 0;
  4933   00187C  929D               	bcf	3997,1,c	;volatile
  4934                           
  4935                           ;hardware_config.c: 53:  CCP1IE = 0;
  4936   00187E  949D               	bcf	3997,2,c	;volatile
  4937                           
  4938                           ;hardware_config.c: 54:  CCP2IE = 0;
  4939   001880  90A0               	bcf	4000,0,c	;volatile
  4940                           
  4941                           ;hardware_config.c: 55:  EEIE = 0;
  4942   001882  98A0               	bcf	4000,4,c	;volatile
  4943                           
  4944                           ;hardware_config.c: 56:  SSPIE = 0;
  4945   001884  969D               	bcf	3997,3,c	;volatile
  4946                           
  4947                           ;hardware_config.c: 57:  BCLIE = 0;
  4948   001886  96A0               	bcf	4000,3,c	;volatile
  4949                           
  4950                           ;hardware_config.c: 58:  ADIE = 0;
  4951   001888  9C9D               	bcf	3997,6,c	;volatile
  4952                           
  4953                           ;hardware_config.c: 59:  RBIE = 0;
  4954   00188A  96F2               	bcf	4082,3,c	;volatile
  4955                           
  4956                           ;hardware_config.c: 60:  RCIE = 0;
  4957   00188C  9A9D               	bcf	3997,5,c	;volatile
  4958   00188E                     
  4959                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  4960   00188E  0E72               	movlw	114
  4961   001890  6ED3               	movwf	211,c	;volatile
  4962                           
  4963                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  4964   001892  0EDF               	movlw	223
  4965   001894  6E9B               	movwf	155,c	;volatile
  4966   001896                     
  4967                           ;hardware_config.c: 63:     RBPU = 1;
  4968   001896  8EF1               	bsf	4081,7,c	;volatile
  4969   001898                     
  4970                           ;hardware_config.c: 66:     T1RD16 = 0;
  4971   001898  9ECD               	bcf	4045,7,c	;volatile
  4972   00189A                     
  4973                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  4974   00189A  88CD               	bsf	4045,4,c	;volatile
  4975   00189C                     
  4976                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  4977   00189C  8ACD               	bsf	4045,5,c	;volatile
  4978   00189E                     
  4979                           ;hardware_config.c: 69:  T1SYNC = 0;
  4980   00189E  94CD               	bcf	4045,2,c	;volatile
  4981   0018A0                     
  4982                           ;hardware_config.c: 70:  T1OSCEN = 0;
  4983   0018A0  96CD               	bcf	4045,3,c	;volatile
  4984   0018A2                     
  4985                           ;hardware_config.c: 71:  TMR1CS = 0;
  4986   0018A2  92CD               	bcf	4045,1,c	;volatile
  4987   0018A4                     
  4988                           ;hardware_config.c: 72:  TMR1ON = 1;
  4989   0018A4  80CD               	bsf	4045,0,c	;volatile
  4990   0018A6                     
  4991                           ;hardware_config.c: 75:     SPIInit();
  4992   0018A6  EC93  F00D         	call	_SPIInit	;wreg free
  4993   0018AA  0012               	return		;funcret
  4994   0018AC                     __end_of_BoardInit:
  4995                           	callstack 0
  4996                           
  4997 ;; *************** function _SPIInit *****************
  4998 ;; Defined at:
  4999 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  5000 ;; Parameters:    Size  Location     Type
  5001 ;;		None
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1    wreg      void 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5017 ;;Total ram usage:        0 bytes
  5018 ;; Hardware stack levels used: 1
  5019 ;; Hardware stack levels required when called: 1
  5020 ;; This function calls:
  5021 ;;		Nothing
  5022 ;; This function is called by:
  5023 ;;		_BoardInit
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text37
  5028   001B26                     __ptext37:
  5029                           	callstack 0
  5030   001B26                     _SPIInit:
  5031                           	callstack 28
  5032   001B26                     
  5033                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  5034   001B26  9694               	bcf	148,3,c	;volatile
  5035                           
  5036                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  5037   001B28  9A94               	bcf	148,5,c	;volatile
  5038                           
  5039                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  5040   001B2A  8894               	bsf	148,4,c	;volatile
  5041                           
  5042                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  5043   001B2C  8EC7               	bsf	199,7,c	;volatile
  5044                           
  5045                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  5046   001B2E  8CC7               	bsf	199,6,c	;volatile
  5047   001B30                     
  5048                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  5049   001B30  0E01               	movlw	1
  5050   001B32  6EC6               	movwf	198,c	;volatile
  5051   001B34                     
  5052                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  5053   001B34  8EC6               	bsf	198,7,c	;volatile
  5054   001B36                     
  5055                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  5056   001B36  9CC6               	bcf	198,6,c	;volatile
  5057   001B38                     
  5058                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  5059   001B38  8AC6               	bsf	198,5,c	;volatile
  5060   001B3A                     
  5061                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  5062   001B3A  98C6               	bcf	198,4,c	;volatile
  5063   001B3C  0012               	return		;funcret
  5064   001B3E                     __end_of_SPIInit:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function _isr *****************
  5068 ;; Defined at:
  5069 ;;		line 5 in file "drivers/inc/interrupciones.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;		None
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;		None
  5074 ;; Return value:  Size  Location     Type
  5075 ;;                  1    wreg      void 
  5076 ;; Registers used:
  5077 ;;		wreg, status,2, status,0
  5078 ;; Tracked objects:
  5079 ;;		On entry : 0/0
  5080 ;;		On exit  : 0/0
  5081 ;;		Unchanged: 0/0
  5082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;Total ram usage:        0 bytes
  5088 ;; Hardware stack levels used: 1
  5089 ;; This function calls:
  5090 ;;		Nothing
  5091 ;; This function is called by:
  5092 ;;		Interrupt level 2
  5093 ;; This function uses a non-reentrant model
  5094 ;;
  5095                           
  5096                           	psect	intcode
  5097   000008                     __pintcode:
  5098                           	callstack 0
  5099   000008                     _isr:
  5100                           	callstack 24
  5101                           
  5102                           ;incstack = 0
  5103   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5104   00000A                     
  5105                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  5106   00000A  A09D               	btfss	3997,0,c	;volatile
  5107   00000C  EF0A  F000         	goto	i2u40_41
  5108   000010  EF0C  F000         	goto	i2u40_40
  5109   000014                     i2u40_41:
  5110   000014  EF1E  F000         	goto	i2l337
  5111   000018                     i2u40_40:
  5112   000018  A09E               	btfss	3998,0,c	;volatile
  5113   00001A  EF11  F000         	goto	i2u41_41
  5114   00001E  EF13  F000         	goto	i2u41_40
  5115   000022                     i2u41_41:
  5116   000022  EF1E  F000         	goto	i2l337
  5117   000026                     i2u41_40:
  5118   000026                     
  5119                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  5120   000026  909E               	bcf	3998,0,c	;volatile
  5121   000028                     
  5122                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  5123   000028  0EF7               	movlw	247
  5124   00002A  6ECE               	movwf	206,c	;volatile
  5125                           
  5126                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  5127   00002C  0EFD               	movlw	253
  5128   00002E  6ECF               	movwf	207,c	;volatile
  5129   000030                     
  5130                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  5131   000030  0E01               	movlw	1
  5132   000032  2658               	addwf	_timeStamp^0,f,c
  5133   000034  0E00               	movlw	0
  5134   000036  2259               	addwfc	(_timeStamp+1)^0,f,c
  5135   000038  225A               	addwfc	(_timeStamp+2)^0,f,c
  5136   00003A  225B               	addwfc	(_timeStamp+3)^0,f,c
  5137   00003C                     i2l337:
  5138   00003C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5139   00003E  0011               	retfie		f
  5140   000040                     __end_of_isr:
  5141                           	callstack 0
  5142                           
  5143                           	psect	rparam
  5144   000001                     ___rparam_used  equ	1
  5145   000000                     ___param_bank   equ	0
  5146   000000                     __Lparam        equ	__Lrparam
  5147   000000                     __Hparam        equ	__Hrparam
  5148                           
  5149                           	psect	temp
  5150   00005D                     btemp:
  5151                           	callstack 0
  5152   00005D                     	ds	1
  5153   00005D                     int$flags       set	btemp
  5154   00005E                     wtemp8          set	btemp+1
  5155   00005E                     ttemp5          set	btemp+1
  5156   000061                     ttemp6          set	btemp+4
  5157   000065                     ttemp7          set	btemp+8
  5158                           
  5159                           	psect	idloc
  5160                           
  5161                           ;Config register IDLOC0 @ 0x200000
  5162                           ;	unspecified, using default values
  5163   200000                     	org	2097152
  5164   200000  FF                 	db	255
  5165                           
  5166                           ;Config register IDLOC1 @ 0x200001
  5167                           ;	unspecified, using default values
  5168   200001                     	org	2097153
  5169   200001  FF                 	db	255
  5170                           
  5171                           ;Config register IDLOC2 @ 0x200002
  5172                           ;	unspecified, using default values
  5173   200002                     	org	2097154
  5174   200002  FF                 	db	255
  5175                           
  5176                           ;Config register IDLOC3 @ 0x200003
  5177                           ;	unspecified, using default values
  5178   200003                     	org	2097155
  5179   200003  FF                 	db	255
  5180                           
  5181                           ;Config register IDLOC4 @ 0x200004
  5182                           ;	unspecified, using default values
  5183   200004                     	org	2097156
  5184   200004  FF                 	db	255
  5185                           
  5186                           ;Config register IDLOC5 @ 0x200005
  5187                           ;	unspecified, using default values
  5188   200005                     	org	2097157
  5189   200005  FF                 	db	255
  5190                           
  5191                           ;Config register IDLOC6 @ 0x200006
  5192                           ;	unspecified, using default values
  5193   200006                     	org	2097158
  5194   200006  FF                 	db	255
  5195                           
  5196                           ;Config register IDLOC7 @ 0x200007
  5197                           ;	unspecified, using default values
  5198   200007                     	org	2097159
  5199   200007  FF                 	db	255
  5200                           
  5201                           	psect	config
  5202                           
  5203                           ; Padding undefined space
  5204   300000                     	org	3145728
  5205   300000  FF                 	db	255
  5206                           
  5207                           ;Config register CONFIG1H @ 0x300001
  5208                           ;	Oscillator Selection bits
  5209                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5210                           ;	Fail-Safe Clock Monitor Enable bit
  5211                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5212                           ;	Internal/External Oscillator Switchover bit
  5213                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5214   300001                     	org	3145729
  5215   300001  08                 	db	8
  5216                           
  5217                           ;Config register CONFIG2L @ 0x300002
  5218                           ;	Power-up Timer Enable bit
  5219                           ;	PWRT = 0x1, unprogrammed default
  5220                           ;	Brown-out Reset Enable bits
  5221                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5222                           ;	Brown Out Reset Voltage bits
  5223                           ;	BORV = 22, VBOR set to 2.2 V nominal
  5224   300002                     	org	3145730
  5225   300002  11                 	db	17
  5226                           
  5227                           ;Config register CONFIG2H @ 0x300003
  5228                           ;	Watchdog Timer Enable bit
  5229                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5230                           ;	Watchdog Timer Postscale Select bits
  5231                           ;	WDTPS = 8192, 1:8192
  5232   300003                     	org	3145731
  5233   300003  1A                 	db	26
  5234                           
  5235                           ; Padding undefined space
  5236   300004                     	org	3145732
  5237   300004  FF                 	db	255
  5238                           
  5239                           ;Config register CONFIG3H @ 0x300005
  5240                           ;	CCP2 MUX bit
  5241                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5242                           ;	PORTB A/D Enable bit
  5243                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5244                           ;	Low-Power Timer1 Oscillator Enable bit
  5245                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5246                           ;	HFINTOSC Fast Start-up
  5247                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  5248                           ;	MCLR Pin Enable bit
  5249                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5250   300005                     	org	3145733
  5251   300005  01                 	db	1
  5252                           
  5253                           ;Config register CONFIG4L @ 0x300006
  5254                           ;	Stack Full/Underflow Reset Enable bit
  5255                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5256                           ;	Single-Supply ICSP Enable bit
  5257                           ;	LVP = OFF, Single-Supply ICSP disabled
  5258                           ;	Extended Instruction Set Enable bit
  5259                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5260                           ;	Background Debugger Enable bit
  5261                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5262   300006                     	org	3145734
  5263   300006  80                 	db	128
  5264                           
  5265                           ; Padding undefined space
  5266   300007                     	org	3145735
  5267   300007  FF                 	db	255
  5268                           
  5269                           ;Config register CONFIG5L @ 0x300008
  5270                           ;	Code Protection Block 0
  5271                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5272                           ;	Code Protection Block 1
  5273                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5274                           ;	Code Protection Block 2
  5275                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5276                           ;	Code Protection Block 3
  5277                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5278   300008                     	org	3145736
  5279   300008  0F                 	db	15
  5280                           
  5281                           ;Config register CONFIG5H @ 0x300009
  5282                           ;	Boot Block Code Protection bit
  5283                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5284                           ;	Data EEPROM Code Protection bit
  5285                           ;	CPD = OFF, Data EEPROM not code-protected
  5286   300009                     	org	3145737
  5287   300009  C0                 	db	192
  5288                           
  5289                           ;Config register CONFIG6L @ 0x30000A
  5290                           ;	Write Protection Block 0
  5291                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5292                           ;	Write Protection Block 1
  5293                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5294                           ;	Write Protection Block 2
  5295                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5296                           ;	Write Protection Block 3
  5297                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5298   30000A                     	org	3145738
  5299   30000A  0F                 	db	15
  5300                           
  5301                           ;Config register CONFIG6H @ 0x30000B
  5302                           ;	Configuration Register Write Protection bit
  5303                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5304                           ;	Boot Block Write Protection bit
  5305                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5306                           ;	Data EEPROM Write Protection bit
  5307                           ;	WRTD = OFF, Data EEPROM not write-protected
  5308   30000B                     	org	3145739
  5309   30000B  E0                 	db	224
  5310                           
  5311                           ;Config register CONFIG7L @ 0x30000C
  5312                           ;	unspecified, using default values
  5313                           ;	Table Read Protection Block 0
  5314                           ;	EBTR0 = 0x1, unprogrammed default
  5315                           ;	Table Read Protection Block 1
  5316                           ;	EBTR1 = 0x1, unprogrammed default
  5317                           ;	Table Read Protection Block 2
  5318                           ;	EBTR2 = 0x1, unprogrammed default
  5319                           ;	Table Read Protection Block 3
  5320                           ;	EBTR3 = 0x1, unprogrammed default
  5321   30000C                     	org	3145740
  5322   30000C  0F                 	db	15
  5323                           
  5324                           ;Config register CONFIG7H @ 0x30000D
  5325                           ;	Boot Block Table Read Protection bit
  5326                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5327   30000D                     	org	3145741
  5328   30000D  40                 	db	64
  5329                           tosu	equ	0xFFF
  5330                           tosh	equ	0xFFE
  5331                           tosl	equ	0xFFD
  5332                           stkptr	equ	0xFFC
  5333                           pclatu	equ	0xFFB
  5334                           pclath	equ	0xFFA
  5335                           pcl	equ	0xFF9
  5336                           tblptru	equ	0xFF8
  5337                           tblptrh	equ	0xFF7
  5338                           tblptrl	equ	0xFF6
  5339                           tablat	equ	0xFF5
  5340                           prodh	equ	0xFF4
  5341                           prodl	equ	0xFF3
  5342                           indf0	equ	0xFEF
  5343                           postinc0	equ	0xFEE
  5344                           postdec0	equ	0xFED
  5345                           preinc0	equ	0xFEC
  5346                           plusw0	equ	0xFEB
  5347                           fsr0h	equ	0xFEA
  5348                           fsr0l	equ	0xFE9
  5349                           wreg	equ	0xFE8
  5350                           indf1	equ	0xFE7
  5351                           postinc1	equ	0xFE6
  5352                           postdec1	equ	0xFE5
  5353                           preinc1	equ	0xFE4
  5354                           plusw1	equ	0xFE3
  5355                           fsr1h	equ	0xFE2
  5356                           fsr1l	equ	0xFE1
  5357                           bsr	equ	0xFE0
  5358                           indf2	equ	0xFDF
  5359                           postinc2	equ	0xFDE
  5360                           postdec2	equ	0xFDD
  5361                           preinc2	equ	0xFDC
  5362                           plusw2	equ	0xFDB
  5363                           fsr2h	equ	0xFDA
  5364                           fsr2l	equ	0xFD9
  5365                           status	equ	0xFD8

Data Sizes:
    Strings     48
    Constant    24
    Data        0
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      92
    BANK0           160      0      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DelayInit@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayIsRunning@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayRead@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> MRF24J40Init@delay_time_out(COMRAM[9]), 

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    MRF24SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    S268$buffer_salida	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    sp__MRF24GetMensajeEntrada	PTR unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in(BANK0[56]), mrf24_data_in$buffer_entrada(BANK0[50]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in(BANK0[56]), mrf24_data_in$buffer_entrada(BANK0[50]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_10(CODE[8]), STR_4(CODE[8]), STR_6(CODE[8]), STR_8(CODE[8]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _strcmp->_MRF24GetMensajeEntrada
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24SetMensajeSalida->_strlen
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _GetShortAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _GetLongAddr->_Write2ByteSPIPort
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    5646
                                             25 COMRAM    22    22      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
             _MRF24GetMensajeEntrada
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
           _MRF24SetDireccionDestino
              _MRF24SetMensajeSalida
               _MRF24SetPANIDDestino
                _MRF24TransmitirDato
                             _strcmp
 ---------------------------------------------------------------------------------
 (1) _strcmp                                               3     1      2     120
                                              2 COMRAM     3     1      2
             _MRF24GetMensajeEntrada (ARG)
 ---------------------------------------------------------------------------------
 (1) _MRF24TransmitirDato                                  8     8      0     827
                                             10 COMRAM     7     7      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24SetPANIDDestino                                 2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetMensajeSalida                                1     0      1     137
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24SetDireccionDestino                             2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   7     7      0     942
                                             10 COMRAM     7     7      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                        11    11      0    2459
                                             14 COMRAM    11    11      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  2     2      0     256
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     188
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           1     1      0     482
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     188
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     294
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     198
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetMensajeEntrada                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    4     2      2     610
                                             14 COMRAM     4     2      2
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (2) _DelayRead                                           13    12      1     160
                                              1 COMRAM    13    12      1
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (3) _DelayIsRunning                                       1     0      1      23
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      1     0      1     140
                                              5 COMRAM     1     0      1
                          _DelayInit
 ---------------------------------------------------------------------------------
 (2) _DelayInit                                            5     0      5      72
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24GetMensajeEntrada
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _DelayInit
     _DelayRead
     _DelayReset
     _GetLongAddr
       _ReadByteSPIPort
         _SPIRead
       _SetCSPin
       _Write2ByteSPIPort
         _SPIWrite2Byte
           _SPIWriteByte
     _GetShortAddr
       _ReadByteSPIPort
       _SetCSPin
       _WriteByteSPIPort
         _SPIWriteByte
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _SetLongAddr
         _SetCSPin
         _Write2ByteSPIPort
         _WriteByteSPIPort
       _SetShortAddr
         _SetCSPin
         _WriteByteSPIPort
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _MRF24SetDireccionDestino
   _MRF24SetMensajeSalida
     _strlen
   _MRF24SetPANIDDestino
   _MRF24TransmitirDato
     _SetLongAddr
     _SetShortAddr
   _strcmp
     _MRF24GetMensajeEntrada (ARG)

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      56     35.0%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     47      92     97.9%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     148      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Apr 20 13:01:37 2025

                         _SSPSTATbits 0FC7                                    l21 1B66  
                                  l30 1BA8                                    l24 1BD2  
                                  l33 1B7A                                    l42 1C04  
                                  l27 1B9A                                    l36 1BFE  
                                  l39 1BB6                       _IsMRF24Interrup 1B68  
                                  l99 1212                                    u45 1B98  
                                  u70 1B78                                    u46 1B9A  
                                  u71 1B72                                    u55 1BA6  
                                  u56 1BA8                                    u76 1B7A  
                       ?_MRF24J40Init 0001                                   l112 1AF2  
                                 l121 18EE                                   l115 1AAC  
                                 l108 1636                                   l124 19AA  
                                 l132 1930                                   l109 16A4  
                                 l141 1BEA                                   l150 1B0C  
                                 l118 1972                                   l127 1A38  
                                 l135 1B8C                                   l231 125A  
                                 l321 18AA                                   l233 126C  
                                 l138 1BF4                                   l147 15F4  
                                 l180 1B16                                   l156 17E2  
                                 l237 136E                                   l229 1254  
                                 l350 1750                                   l159 1C0A  
                                 l183 1B24                                   l344 1A60  
                                 l192 1B52                                   l177 1B3C  
                                 l186 1BC4                                   l356 1AD2  
                                 l189 1B42                                   l366 1A0E  
                                 l359 1BE0                                   l376 14E6  
                                 _GIE 7F97                                   u200 1B0A  
                                 u201 1B04                                   u210 1B0C  
                                 u420 1B24                                   u500 1930  
                                 u421 1B20                                   u501 192C  
                                 u600 13EC                                   u440 1B50  
                                 u520 19D2                                   u601 13E8  
                                 u441 1B4C                                   u521 19CE  
                                 u610 13FC                                   u530 10C6  
                                 u611 13F8                                   u435 1BD0  
                                 u515 18B6                                   u531 10C2  
                                 u620 143C                                   u436 1BD2  
                                 u460 161A                                   u540 10E0  
                                 u700 131C                                   u621 1438  
                                 u461 1616                                   u541 10DC  
                                 u701 1318                                   u630 144C  
                                 u470 1672                                   u550 11C4  
                                 u710 1342                                   u631 1448  
                                 u471 166E                                   u455 193C  
                                 u551 11C0                                   u711 133E  
                                 u480 16BE                                   u640 1480  
                                 u560 11DA                                   u720 1368  
                                 u481 16BA                                   u641 147C  
                                 u561 11D6                                   u721 1364  
                                 u490 173C                                   u570 15DA  
                                 u650 1812                                   u730 1386  
                                 u491 1738                                   u571 15D6  
                                 u651 180E                                   u731 1382  
                                 u580 17CC                                   u660 1828  
                                 u740 1398                                   u581 17C8  
                                 u661 1824                                   u741 1390  
                                 u590 13C0                                   u670 128E  
                                 u591 13BC                                   u671 1288  
                                 u680 12D2                                   u681 12CE  
                                 u690 12F6                                   u691 12F2  
                                 u676 1290                                   u758 139A  
                                 u767 1070                                   u777 1088  
                                 u787 10E6                                   u797 199E  
                                 _isr 0008                                   wreg 0FE8  
                 __end_of_GetLongAddr 18F0                                  l1100 1B90  
                                l1104 1B9E                                  l2010 149A  
                                l2004 1470                                  l2006 1480  
                                l2030 17EC                                  l2008 1492  
                                l2016 14A0                                  l1072 19DE  
                                l2032 1812                                  l2040 121C  
                                l2018 14E4                                  l1066 1848  
                                l2034 1828                                  l2026 17E4  
                                l2130 12A8                                  l2050 125C  
                                l2042 1220                                  l2132 14BE  
                                l1148 1B68                                  l2028 17E8  
                                l2052 1264                                  l2060 127A  
                                l2044 1224                                  l1270 1B34  
                                l1422 1AF4                                  l2070 12FC  
                                l2054 126E                                  l2062 12BE  
                                l2046 123C                                  l2038 1214  
                                l1272 1B36                                  l2080 1368  
                                l2072 131C                                  l2064 12D2  
                                l2048 1248                                  l1274 1B38  
                                l1266 1B26                                  l1450 1898  
                                l2074 1322                                  l2066 12D6  
                                l2082 136E                                  l1276 1B3A  
                                l1268 1B30                                  l1460 18A2  
                                l1452 189A                                  l1444 184A  
                                l1700 1656                                  l2084 1386  
                                l2076 1342                                  l2068 12F6  
                                l1462 18A4                                  l1454 189C  
                                l1446 188E                                  l1630 1BC8  
                                l1622 1B10                                  l1710 16A2  
                                l1702 1672                                  l2078 1348  
                                l1464 18A6                                  l1456 189E  
                                l1448 1896                                  l1624 1B12  
                                l1720 1A8A                                  l1704 167A  
                                l1458 18A0                                  l1802 19E0  
                                l1714 1AAE                                  l1642 1B3E  
                                l1626 1BB8                                  l1634 1BF8  
                                l1730 1AA4                                  l1722 1A8A  
                                l1706 167C                                  l1810 1062  
                                l1652 1A3A                                  l1804 19EC  
                                l1740 16D4                                  l1716 1AC4  
                                l1644 1B50                                  l1732 1AAA  
                                l1724 1A92                                  l1708 16A0  
                                l1660 1AE0                                  l1820 1094  
                                l1812 1066                                  l1900 151C  
                                l1806 1A06                                  l1750 174E  
                                l1742 16E6                                  l1638 1BAA  
                                l1726 1A98                                  l1670 1954  
                                l1662 1AE6                                  l1830 10CA  
                                l1822 109E                                  l1814 106A  
                                l1910 1544                                  l1902 151E  
                                l1680 1BD4                                  l1744 173C  
                                l1736 16A6                                  l1648 1C00  
                                l1728 1A9E                                  l1672 195A  
                                l1664 1AEC                                  l1656 1AD6  
                                l1840 1104                                  l1832 10E0  
                                l1824 10A6                                  l1816 107C  
                                l1808 104A                                  l1920 1572  
                                l1912 1552                                  l1904 152C  
                                l1746 1748                                  l1738 16BE  
                                l1674 1966                                  l1658 1ADA  
                                l1754 1A10                                  l1770 1914  
                                l1850 1154                                  l1842 1114  
                                l1834 10F2                                  l1826 10AE  
                                l1818 1082                                  l1930 15A8  
                                l1922 1574                                  l1914 1554  
                                l1906 152E                                  l1780 18E6  
                                l1772 18AC                                  l1684 1B54  
                                l1676 196C                                  l1668 1932  
                                l1764 18FC                                  l1860 118C  
                                l1852 1164                                  l1844 1124  
                                l1836 10FC                                  l1940 15EA  
                                l1932 15AA                                  l1924 1582  
                                l1916 1562                                  l1908 1542  
                                l1782 18EC                                  l1774 18CE  
                                l1694 15FE                                  l1766 190E  
                                l1758 18F0                                  l1870 11C8  
                                l1862 1196                                  l1854 116E  
                                l1846 1134                                  l1838 1100  
                                l1950 179A                                  l1934 15AC  
                                l1926 1584                                  l1918 1564  
                                l1776 18D4                                  l1696 161A  
                                l1688 15F6                                  l1768 1910  
                                l1872 11DA                                  l1864 119E  
                                l1856 1178                                  l1848 1144  
                                l1952 179C                                  l1944 1752  
                                l1792 19AC                                  l1936 15DA  
                                l1928 158A                                  l1970 13EC  
                                l1962 13AC                                  l1778 18E0  
                                l1698 1652                                  l1786 1974  
                                l1866 11AC                                  l1858 1182  
                                l1954 17CC                                  l1946 177A  
                                l1882 1BEC                                  l1794 19B4  
                                l1938 15E8                                  l1890 14EA  
                                l1972 13FC                                  l1980 1410  
                                l1964 13B0                                  l1788 1998  
                                l1948 1780                                  l1796 19B6  
                                l1876 1B7C                                  l1884 1BE2  
                                l1892 14FA                                  l1990 144C  
                                l1982 141C                                  l1974 140A  
                                l1966 13C0                                  l1958 1C06  
                                l1798 19D2                                  l1878 1B80  
                                l1894 14FC                                  l1886 14E8  
                                l1992 1458                                  l1968 13D2  
                                l1896 150C                                  l1888 14EA  
                                l1986 1422                                  l1898 150E  
                                l1988 143C                                  l1998 145E  
                                _ADIE 7CEE                                  ?_isr 0001  
                                _EEIE 7D04                                  STR_1 1041  
                                STR_2 1039                                  STR_3 1021  
                                STR_4 1021                                  STR_5 1019  
                                STR_6 1019                                  STR_7 1031  
                                STR_8 1031                                  STR_9 1029  
                                _T0IE 7F95                                  _IPEN 7E87  
                                _PEIE 7F96                                  _RBIE 7F93  
                                _RCIE 7CED                                  _RBPU 7F8F  
                        _SPIWriteByte 1B0E                                  _main 1214  
                     __end_of_SPIInit 1B3E                       __end_of_SPIRead 1B54  
                                fsr1h 0FE2                                  fsr2h 0FDA  
                                indf2 0FDF                                  fsr1l 0FE1  
                                fsr2l 0FD9                                  btemp 005D  
                       _MRF24IsNewMsg 1AF4                            _DelayReset 1AAE  
             GetShortAddr@reg_address 0004                                  start 0040  
                   DelayInit@duration 0002                          ___param_bank 0000  
                    _long_mac_address 005C                     ??_ReadByteSPIPort 0001  
                               ??_isr 0001                        ??_MRF24J40Init 000F  
         __end_of_InicializoVariables 16A6                         _SPIWrite2Byte 1BB8  
    __end_of_MRF24SetDireccionDestino 1BF6                                 ?_main 0001  
                               _BCLIE 7D03                                 STR_10 1029  
                               _INT0E 7F94                                 i2l337 003C  
                SetDeviceMACAddress@i 0005                                 _TMR1H 0FCF  
                               _TMR1L 0FCE                                 _PORTA 0F80  
                               _PORTB 0F81                                 _PORTC 0F82  
                               _PORTD 0F83                                 _PORTE 0F84  
                               _SSPIE 7CEB                  __end_of_GetShortAddr 1AAE  
        MRF24SetMensajeSalida@mensaje 0004              ??_MRF24GetMensajeEntrada 0003  
                     _InicializoPines 1B54               SetShortAddr@reg_address 0004  
                 MRF24J40Init@lectura 0010                                 tablat 0FF5  
                      ?_MRF24IsNewMsg 0001                                 ttemp5 005E  
                               ttemp6 0061                                 ttemp7 0065  
                               status 0FD8                                 wtemp8 005E  
             __end_of_IsMRF24Interrup 1B7C                   _SetDeviceMACAddress 18F0  
                     __initialization 1A62                          __end_of_main 13AC  
DebounceFSMUpdate@antirrebote_boton_n 000F                        ?_SPIWrite2Byte 0002  
                    __end_of_SetCSPin 1BD4                           _GetLongAddr 18AC  
                       ??_SetLongAddr 0009                                ??_main 001A  
                       __activetblptr 0002                         ??_SetResetPin 0001  
                ?_SetDeviceMACAddress 0001                            _SetChannel 1974  
                   ?_SetDeviceAddress 0001                 _MRF24SetMensajeSalida 1B7C  
                              _CCP1IE 7CEA                                _CCP2IE 7D00  
                           ??_SPIInit 0001                             ??_SPIRead 0001  
                  ??_SetDeviceAddress 0005            MRF24J40Init@delay_time_out 0011  
                              _T1RD16 7E6F                                _T1SYNC 7E6A  
                              i2l1600 0018                                i2l1602 0026  
                              i2l1604 0028                                i2l1606 0030  
                              i2l1598 000A                            _SetWakePin 1B8E  
                              _OSCCON 0FD3             MRF24SetPANIDDestino@panid 0001  
                              _TMR1IE 7CE8                                _TMR1IF 7CF0  
                              _TMR1CS 7E69                                _TMR2IE 7CE9  
                              _TMR1ON 7E68          __end_of_default_security_key 1011  
                              _SSPBUF 0FC9                           ?_DelayReset 0001  
                 DelayIsRunning@delay 0001                                clear_0 1A68  
                              clear_1 1A74                                isa$std 0001  
                      SetCSPin@estado 0001               __end_of_InicializoPines 1B68  
                              _strcmp 17E4                                _strlen 19AC  
               ??_SetDeviceMACAddress 0005                  InicializoVariables@i 0002  
                        __mediumconst 0000                     _mrf24_data_config 0030  
            _MRF24SetDireccionDestino 1BEC                                tblptrh 0FF7  
                              tblptrl 0FF6                                tblptru 0FF8  
                 __end_of_SetLongAddr 1974                    _MRF24ReciboPaquete 1752  
                    ??_DelayIsRunning 0002                       ??_MRF24IsNewMsg 0001  
                 __end_of_SetResetPin 1BAA                 GetShortAddr@leido_spi 0003  
                   __end_of_DelayInit 1A62                     __end_of_DelayRead 1752  
                __end_of_MRF24J40Init 1214                            __accesstop 0060  
             __end_of__initialization 1A7A                   ?_MRF24ReciboPaquete 0001  
         __end_of_MRF24TransmitirDato 15F6                     __end_of_BoardInit 18AC  
                      DelayInit@delay 0001                         ___rparam_used 0001  
                      DelayRead@delay 0002                      SetWakePin@estado 0001  
                    ?_IsMRF24Interrup 0001                         ?_SetShortAddr 0003  
                      __pcstackCOMRAM 0001                       ??_SPIWrite2Byte 0004  
                ??_MRF24ReciboPaquete 000B                ?_MRF24SetMensajeSalida 0004  
                         ?_SetChannel 0001                            __pbssBANK0 0060  
                         ?_SetWakePin 0001                             ?_SetCSPin 0001  
                     _ReadByteSPIPort 1C00                          _GetShortAddr 1A88  
              _MRF24GetMensajeEntrada 1C06                        ??_SetShortAddr 0004  
                         _SetLongAddr 1932                               _T1CKPS0 7E6C  
                             _T1CKPS1 7E6D                               ?_strcmp 0003  
                             ?_strlen 0001                      ?_InicializoPines 0001  
                _default_security_key 1001                               _T1OSCEN 7E6B  
                         _SetResetPin 1B9C          __end_of_MRF24SetPANIDDestino 1BEC  
                             i2u40_40 0018                               i2u40_41 0014  
                             i2u41_40 0026                               i2u41_41 0022  
                             _OSCTUNE 0F9B                               _SSPCON1 0FC6  
                             _SPIInit 1B26                               _SPIRead 1B3E  
                          ??_SetCSPin 0001                     SetShortAddr@valor 0003  
                             __Hparam 0000                               __Lparam 0000  
                   ??_DebounceFSMInit 0007                          __psmallconst 1000  
                             __pcinit 1A62                          ?_GetLongAddr 0006  
                             __ramtop 1000                               __ptext0 1214  
                             __ptext1 17E4                               __ptext2 14E8  
                             __ptext3 1BE2                               __ptext4 1B7C  
                             __ptext5 19AC                               __ptext6 1BEC  
                             __ptext7 1752                               __ptext8 104A  
                             __ptext9 18F0                      _WriteByteSPIPort 1BF6  
             __end_of_ReadByteSPIPort 1C06                  end_of_initialization 1A7A  
                       __Lmediumconst 0000                          ??_DelayReset 0002  
                 _default_mac_address 1011                               postinc0 0FEE  
                             postinc1 0FE6                               postinc2 0FDE  
          ??_MRF24SetDireccionDestino 0003                               strcmp@l 0003  
                             strcmp@r 0004                               strlen@a 0003  
                             strlen@s 0001                          _MRF24J40Init 104A  
                           _PORTBbits 0F81                             _PORTCbits 0F82  
                  __end_of_DelayReset 1AD4                  WriteByteSPIPort@dato 0002  
                           _TRISBbits 0F93                             _TRISCbits 0F94  
                           _TRISDbits 0F95                             _TRISEbits 0F96  
                __end_of_SetShortAddr 1AF4                 Write2ByteSPIPort@dato 0004  
                GetLongAddr@respuesta 000A                            main@boton1 0025  
                           _DelayInit 1A3A                             _DelayRead 16A6  
                           _BoardInit 184A                  _MRF24SetPANIDDestino 1BE2  
                   _Write2ByteSPIPort 1BAA           __end_of_SetDeviceMACAddress 1932  
             ??_MRF24SetMensajeSalida 0005                    ?_Write2ByteSPIPort 0004  
                      __end_of_strcmp 184A                        __end_of_strlen 19E0  
                        ??_SetChannel 000B                   start_initialization 1A62  
                 ??_Write2ByteSPIPort 0006                           __end_of_isr 0040  
                    ?_ReadByteSPIPort 0001                         ?_SPIWriteByte 0001  
                        ??_SetWakePin 0001                 __end_of_MRF24IsNewMsg 1B0E  
             ?_MRF24GetMensajeEntrada 0001                            ?_DelayInit 0001  
                          ?_DelayRead 0002                            ?_BoardInit 0001  
               ?_MRF24SetPANIDDestino 0001             __end_of_Write2ByteSPIPort 1BB8  
                  __end_of_SetChannel 19AC                 __end_of_SPIWrite2Byte 1BC6  
             MRF24ReciboPaquete@index 0011                          ?_SetLongAddr 0006  
                            ??_strcmp 0005                              ??_strlen 0003  
                  __end_of_SetWakePin 1B9C                     _DebounceFSMUpdate 13AC  
                        ?_SetResetPin 0001                           __pbssCOMRAM 0030  
                  ?_DebounceFSMUpdate 000F                       DelayReset@delay 0001  
                            ?_SPIInit 0001                              ?_SPIRead 0001  
                      ??_SPIWriteByte 0001        __end_of_MRF24GetMensajeEntrada 1C0C  
                 ??_DebounceFSMUpdate 0011                      SPIWriteByte@dato 0001  
                     _DebounceFSMInit 19E0                      _SetDeviceAddress 1A10  
                 _InicializoVariables 15F6              __end_of_WriteByteSPIPort 1C00  
                           __pintcode 0008             __end_of_DebounceFSMUpdate 14E8  
                   SetResetPin@estado 0001                           __smallconst 1000  
                ?_InicializoVariables 0001                      SetLongAddr@valor 0008  
                            _LATCbits 0F8B                              _LATDbits 0F8C  
                            _LATEbits 0F8D                           ??_DelayInit 0006  
                         ??_DelayRead 0003                ??_MRF24SetPANIDDestino 0003  
                         ??_BoardInit 0001                              _PIR1bits 0F9E  
                        _SetShortAddr 1AD4                             _timeStamp 0058  
                  main@delay_parpadeo 001C                 ??_InicializoVariables 0001  
   MRF24SetDireccionDestino@direccion 0001                     ??_IsMRF24Interrup 0001  
             __end_of_DebounceFSMInit 1A10                        _mrf24_data_out 0052  
                            _SetCSPin 1BC6                              __Hrparam 0000  
                            __Lrparam 0000       MRF24ReciboPaquete@largo_mensaje 0010  
                __end_of_SPIWriteByte 1B26        MRF24TransmitirDato@pos_memoria 0011  
       __end_of_MRF24SetMensajeSalida 1B8E                              __ptext10 1A10  
                            __ptext11 1974                              __ptext20 18AC  
                            __ptext12 1AD4                              __ptext21 1BAA  
                            __ptext13 1932                              __ptext30 1C06  
                            __ptext22 1BB8                              __ptext14 15F6  
                            __ptext31 13AC                              __ptext23 1B0E  
                            __ptext15 1B54                              __ptext32 16A6  
                            __ptext24 1BC6                              __ptext16 1B8E  
                            __ptext33 1BD4                              __ptext25 1C00  
                            __ptext17 1B9C                              __ptext34 19E0  
                            __ptext26 1B3E                              __ptext18 1A88  
                 _MRF24TransmitirDato 14E8                              __ptext35 1A3A  
                            __ptext27 1AAE                              __ptext19 1BF6  
                            __ptext36 184A                              __ptext28 1AF4  
                            __ptext37 1B26                              __ptext29 1B68  
           ?_MRF24SetDireccionDestino 0001                        _DelayIsRunning 1BD4  
                   ??_InicializoPines 0002                         ?_GetShortAddr 0001  
                ?_MRF24TransmitirDato 0001                              isa$xinst 0000  
                            int$flags 005D    DebounceFSMInit@antirrebote_boton_n 0006  
         __end_of_default_mac_address 1019                         _mrf24_data_in 0060  
            __end_of_SetDeviceAddress 1A3A                      ?_DebounceFSMInit 0006  
                            intlevel2 0000                __end_of_DelayIsRunning 1BE2  
                MRF24TransmitirDato@i 0010                        ??_GetShortAddr 0003  
               ??_MRF24TransmitirDato 000B                     ?_WriteByteSPIPort 0001  
          __end_of_MRF24ReciboPaquete 17E4                         ??_GetLongAddr 0008  
                  ??_WriteByteSPIPort 0002                GetLongAddr@reg_address 0006  
                         _SSPCON1bits 0FC6           DebounceFSMUpdate@estado_pin 0010  
                   SPIWrite2Byte@dato 0002                SetLongAddr@reg_address 0006  
                     ?_DelayIsRunning 0001  
