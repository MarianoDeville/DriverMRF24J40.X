

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue Mar 25 17:30:18 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 13/12/2024 GMT
    38                           ; 
    39                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F46K20 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000FE0                     bsr             equ	4064
    72   000FE9                     fsr0            equ	4073
    73   000FEA                     fsr0h           equ	4074
    74   000FE9                     fsr0l           equ	4073
    75   000FE1                     fsr1            equ	4065
    76   000FE2                     fsr1h           equ	4066
    77   000FE1                     fsr1l           equ	4065
    78   000FD9                     fsr2            equ	4057
    79   000FDA                     fsr2h           equ	4058
    80   000FD9                     fsr2l           equ	4057
    81   000FEF                     indf0           equ	4079
    82   000FE7                     indf1           equ	4071
    83   000FDF                     indf2           equ	4063
    84   000FF2                     intcon          equ	4082
    85   000000                     nvmcon          equ	0
    86   000FF9                     pcl             equ	4089
    87   000FFA                     pclath          equ	4090
    88   000FFB                     pclatu          equ	4091
    89   000FEB                     plusw0          equ	4075
    90   000FE3                     plusw1          equ	4067
    91   000FDB                     plusw2          equ	4059
    92   000FED                     postdec0        equ	4077
    93   000FE5                     postdec1        equ	4069
    94   000FDD                     postdec2        equ	4061
    95   000FEE                     postinc0        equ	4078
    96   000FE6                     postinc1        equ	4070
    97   000FDE                     postinc2        equ	4062
    98   000FEC                     preinc0         equ	4076
    99   000FE4                     preinc1         equ	4068
   100   000FDC                     preinc2         equ	4060
   101   000FF3                     prod            equ	4083
   102   000FF4                     prodh           equ	4084
   103   000FF3                     prodl           equ	4083
   104   000FD8                     status          equ	4056
   105   000FF5                     tablat          equ	4085
   106   000FF6                     tblptr          equ	4086
   107   000FF7                     tblptrh         equ	4087
   108   000FF6                     tblptrl         equ	4086
   109   000FF8                     tblptru         equ	4088
   110   000FFD                     tosl            equ	4093
   111   000FE8                     wreg            equ	4072
   112   000F77                     SSPMSK          equ	3959	;# 
   113   000F78                     SLRCON          equ	3960	;# 
   114   000F79                     CM2CON1         equ	3961	;# 
   115   000F7A                     CM2CON0         equ	3962	;# 
   116   000F7B                     CM1CON0         equ	3963	;# 
   117   000F7C                     WPUB            equ	3964	;# 
   118   000F7D                     IOCB            equ	3965	;# 
   119   000F7E                     ANSEL           equ	3966	;# 
   120   000F7F                     ANSELH          equ	3967	;# 
   121   000F80                     PORTA           equ	3968	;# 
   122   000F81                     PORTB           equ	3969	;# 
   123   000F82                     PORTC           equ	3970	;# 
   124   000F83                     PORTD           equ	3971	;# 
   125   000F84                     PORTE           equ	3972	;# 
   126   000F89                     LATA            equ	3977	;# 
   127   000F8A                     LATB            equ	3978	;# 
   128   000F8B                     LATC            equ	3979	;# 
   129   000F8C                     LATD            equ	3980	;# 
   130   000F8D                     LATE            equ	3981	;# 
   131   000F92                     TRISA           equ	3986	;# 
   132   000F92                     DDRA            equ	3986	;# 
   133   000F93                     TRISB           equ	3987	;# 
   134   000F93                     DDRB            equ	3987	;# 
   135   000F94                     TRISC           equ	3988	;# 
   136   000F94                     DDRC            equ	3988	;# 
   137   000F95                     TRISD           equ	3989	;# 
   138   000F95                     DDRD            equ	3989	;# 
   139   000F96                     TRISE           equ	3990	;# 
   140   000F96                     DDRE            equ	3990	;# 
   141   000F9B                     OSCTUNE         equ	3995	;# 
   142   000F9D                     PIE1            equ	3997	;# 
   143   000F9E                     PIR1            equ	3998	;# 
   144   000F9F                     IPR1            equ	3999	;# 
   145   000FA0                     PIE2            equ	4000	;# 
   146   000FA1                     PIR2            equ	4001	;# 
   147   000FA2                     IPR2            equ	4002	;# 
   148   000FA6                     EECON1          equ	4006	;# 
   149   000FA7                     EECON2          equ	4007	;# 
   150   000FA8                     EEDATA          equ	4008	;# 
   151   000FA9                     EEADR           equ	4009	;# 
   152   000FAA                     EEADRH          equ	4010	;# 
   153   000FAB                     RCSTA           equ	4011	;# 
   154   000FAB                     RCSTA1          equ	4011	;# 
   155   000FAC                     TXSTA           equ	4012	;# 
   156   000FAC                     TXSTA1          equ	4012	;# 
   157   000FAD                     TXREG           equ	4013	;# 
   158   000FAD                     TXREG1          equ	4013	;# 
   159   000FAE                     RCREG           equ	4014	;# 
   160   000FAE                     RCREG1          equ	4014	;# 
   161   000FAF                     SPBRG           equ	4015	;# 
   162   000FAF                     SPBRG1          equ	4015	;# 
   163   000FB0                     SPBRGH          equ	4016	;# 
   164   000FB1                     T3CON           equ	4017	;# 
   165   000FB2                     TMR3            equ	4018	;# 
   166   000FB2                     TMR3L           equ	4018	;# 
   167   000FB3                     TMR3H           equ	4019	;# 
   168   000FB4                     CVRCON2         equ	4020	;# 
   169   000FB5                     CVRCON          equ	4021	;# 
   170   000FB6                     ECCP1AS         equ	4022	;# 
   171   000FB7                     PWM1CON         equ	4023	;# 
   172   000FB8                     BAUDCON         equ	4024	;# 
   173   000FB8                     BAUDCTL         equ	4024	;# 
   174   000FB9                     PSTRCON         equ	4025	;# 
   175   000FBA                     CCP2CON         equ	4026	;# 
   176   000FBB                     CCPR2           equ	4027	;# 
   177   000FBB                     CCPR2L          equ	4027	;# 
   178   000FBC                     CCPR2H          equ	4028	;# 
   179   000FBD                     CCP1CON         equ	4029	;# 
   180   000FBE                     CCPR1           equ	4030	;# 
   181   000FBE                     CCPR1L          equ	4030	;# 
   182   000FBF                     CCPR1H          equ	4031	;# 
   183   000FC0                     ADCON2          equ	4032	;# 
   184   000FC1                     ADCON1          equ	4033	;# 
   185   000FC2                     ADCON0          equ	4034	;# 
   186   000FC3                     ADRES           equ	4035	;# 
   187   000FC3                     ADRESL          equ	4035	;# 
   188   000FC4                     ADRESH          equ	4036	;# 
   189   000FC5                     SSPCON2         equ	4037	;# 
   190   000FC6                     SSPCON1         equ	4038	;# 
   191   000FC7                     SSPSTAT         equ	4039	;# 
   192   000FC8                     SSPADD          equ	4040	;# 
   193   000FC9                     SSPBUF          equ	4041	;# 
   194   000FCA                     T2CON           equ	4042	;# 
   195   000FCB                     PR2             equ	4043	;# 
   196   000FCB                     MEMCON          equ	4043	;# 
   197   000FCC                     TMR2            equ	4044	;# 
   198   000FCD                     T1CON           equ	4045	;# 
   199   000FCE                     TMR1            equ	4046	;# 
   200   000FCE                     TMR1L           equ	4046	;# 
   201   000FCF                     TMR1H           equ	4047	;# 
   202   000FD0                     RCON            equ	4048	;# 
   203   000FD1                     WDTCON          equ	4049	;# 
   204   000FD2                     HLVDCON         equ	4050	;# 
   205   000FD2                     LVDCON          equ	4050	;# 
   206   000FD3                     OSCCON          equ	4051	;# 
   207   000FD5                     T0CON           equ	4053	;# 
   208   000FD6                     TMR0            equ	4054	;# 
   209   000FD6                     TMR0L           equ	4054	;# 
   210   000FD7                     TMR0H           equ	4055	;# 
   211   000FD8                     STATUS          equ	4056	;# 
   212   000FD9                     FSR2            equ	4057	;# 
   213   000FD9                     FSR2L           equ	4057	;# 
   214   000FDA                     FSR2H           equ	4058	;# 
   215   000FDB                     PLUSW2          equ	4059	;# 
   216   000FDC                     PREINC2         equ	4060	;# 
   217   000FDD                     POSTDEC2        equ	4061	;# 
   218   000FDE                     POSTINC2        equ	4062	;# 
   219   000FDF                     INDF2           equ	4063	;# 
   220   000FE0                     BSR             equ	4064	;# 
   221   000FE1                     FSR1            equ	4065	;# 
   222   000FE1                     FSR1L           equ	4065	;# 
   223   000FE2                     FSR1H           equ	4066	;# 
   224   000FE3                     PLUSW1          equ	4067	;# 
   225   000FE4                     PREINC1         equ	4068	;# 
   226   000FE5                     POSTDEC1        equ	4069	;# 
   227   000FE6                     POSTINC1        equ	4070	;# 
   228   000FE7                     INDF1           equ	4071	;# 
   229   000FE8                     WREG            equ	4072	;# 
   230   000FE9                     FSR0            equ	4073	;# 
   231   000FE9                     FSR0L           equ	4073	;# 
   232   000FEA                     FSR0H           equ	4074	;# 
   233   000FEB                     PLUSW0          equ	4075	;# 
   234   000FEC                     PREINC0         equ	4076	;# 
   235   000FED                     POSTDEC0        equ	4077	;# 
   236   000FEE                     POSTINC0        equ	4078	;# 
   237   000FEF                     INDF0           equ	4079	;# 
   238   000FF0                     INTCON3         equ	4080	;# 
   239   000FF1                     INTCON2         equ	4081	;# 
   240   000FF2                     INTCON          equ	4082	;# 
   241   000FF3                     PROD            equ	4083	;# 
   242   000FF3                     PRODL           equ	4083	;# 
   243   000FF4                     PRODH           equ	4084	;# 
   244   000FF5                     TABLAT          equ	4085	;# 
   245   000FF6                     TBLPTR          equ	4086	;# 
   246   000FF6                     TBLPTRL         equ	4086	;# 
   247   000FF7                     TBLPTRH         equ	4087	;# 
   248   000FF8                     TBLPTRU         equ	4088	;# 
   249   000FF9                     PCLAT           equ	4089	;# 
   250   000FF9                     PC              equ	4089	;# 
   251   000FF9                     PCL             equ	4089	;# 
   252   000FFA                     PCLATH          equ	4090	;# 
   253   000FFB                     PCLATU          equ	4091	;# 
   254   000FFC                     STKPTR          equ	4092	;# 
   255   000FFD                     TOS             equ	4093	;# 
   256   000FFD                     TOSL            equ	4093	;# 
   257   000FFE                     TOSH            equ	4094	;# 
   258   000FFF                     TOSU            equ	4095	;# 
   259   000F77                     SSPMSK          equ	3959	;# 
   260   000F78                     SLRCON          equ	3960	;# 
   261   000F79                     CM2CON1         equ	3961	;# 
   262   000F7A                     CM2CON0         equ	3962	;# 
   263   000F7B                     CM1CON0         equ	3963	;# 
   264   000F7C                     WPUB            equ	3964	;# 
   265   000F7D                     IOCB            equ	3965	;# 
   266   000F7E                     ANSEL           equ	3966	;# 
   267   000F7F                     ANSELH          equ	3967	;# 
   268   000F80                     PORTA           equ	3968	;# 
   269   000F81                     PORTB           equ	3969	;# 
   270   000F82                     PORTC           equ	3970	;# 
   271   000F83                     PORTD           equ	3971	;# 
   272   000F84                     PORTE           equ	3972	;# 
   273   000F89                     LATA            equ	3977	;# 
   274   000F8A                     LATB            equ	3978	;# 
   275   000F8B                     LATC            equ	3979	;# 
   276   000F8C                     LATD            equ	3980	;# 
   277   000F8D                     LATE            equ	3981	;# 
   278   000F92                     TRISA           equ	3986	;# 
   279   000F92                     DDRA            equ	3986	;# 
   280   000F93                     TRISB           equ	3987	;# 
   281   000F93                     DDRB            equ	3987	;# 
   282   000F94                     TRISC           equ	3988	;# 
   283   000F94                     DDRC            equ	3988	;# 
   284   000F95                     TRISD           equ	3989	;# 
   285   000F95                     DDRD            equ	3989	;# 
   286   000F96                     TRISE           equ	3990	;# 
   287   000F96                     DDRE            equ	3990	;# 
   288   000F9B                     OSCTUNE         equ	3995	;# 
   289   000F9D                     PIE1            equ	3997	;# 
   290   000F9E                     PIR1            equ	3998	;# 
   291   000F9F                     IPR1            equ	3999	;# 
   292   000FA0                     PIE2            equ	4000	;# 
   293   000FA1                     PIR2            equ	4001	;# 
   294   000FA2                     IPR2            equ	4002	;# 
   295   000FA6                     EECON1          equ	4006	;# 
   296   000FA7                     EECON2          equ	4007	;# 
   297   000FA8                     EEDATA          equ	4008	;# 
   298   000FA9                     EEADR           equ	4009	;# 
   299   000FAA                     EEADRH          equ	4010	;# 
   300   000FAB                     RCSTA           equ	4011	;# 
   301   000FAB                     RCSTA1          equ	4011	;# 
   302   000FAC                     TXSTA           equ	4012	;# 
   303   000FAC                     TXSTA1          equ	4012	;# 
   304   000FAD                     TXREG           equ	4013	;# 
   305   000FAD                     TXREG1          equ	4013	;# 
   306   000FAE                     RCREG           equ	4014	;# 
   307   000FAE                     RCREG1          equ	4014	;# 
   308   000FAF                     SPBRG           equ	4015	;# 
   309   000FAF                     SPBRG1          equ	4015	;# 
   310   000FB0                     SPBRGH          equ	4016	;# 
   311   000FB1                     T3CON           equ	4017	;# 
   312   000FB2                     TMR3            equ	4018	;# 
   313   000FB2                     TMR3L           equ	4018	;# 
   314   000FB3                     TMR3H           equ	4019	;# 
   315   000FB4                     CVRCON2         equ	4020	;# 
   316   000FB5                     CVRCON          equ	4021	;# 
   317   000FB6                     ECCP1AS         equ	4022	;# 
   318   000FB7                     PWM1CON         equ	4023	;# 
   319   000FB8                     BAUDCON         equ	4024	;# 
   320   000FB8                     BAUDCTL         equ	4024	;# 
   321   000FB9                     PSTRCON         equ	4025	;# 
   322   000FBA                     CCP2CON         equ	4026	;# 
   323   000FBB                     CCPR2           equ	4027	;# 
   324   000FBB                     CCPR2L          equ	4027	;# 
   325   000FBC                     CCPR2H          equ	4028	;# 
   326   000FBD                     CCP1CON         equ	4029	;# 
   327   000FBE                     CCPR1           equ	4030	;# 
   328   000FBE                     CCPR1L          equ	4030	;# 
   329   000FBF                     CCPR1H          equ	4031	;# 
   330   000FC0                     ADCON2          equ	4032	;# 
   331   000FC1                     ADCON1          equ	4033	;# 
   332   000FC2                     ADCON0          equ	4034	;# 
   333   000FC3                     ADRES           equ	4035	;# 
   334   000FC3                     ADRESL          equ	4035	;# 
   335   000FC4                     ADRESH          equ	4036	;# 
   336   000FC5                     SSPCON2         equ	4037	;# 
   337   000FC6                     SSPCON1         equ	4038	;# 
   338   000FC7                     SSPSTAT         equ	4039	;# 
   339   000FC8                     SSPADD          equ	4040	;# 
   340   000FC9                     SSPBUF          equ	4041	;# 
   341   000FCA                     T2CON           equ	4042	;# 
   342   000FCB                     PR2             equ	4043	;# 
   343   000FCB                     MEMCON          equ	4043	;# 
   344   000FCC                     TMR2            equ	4044	;# 
   345   000FCD                     T1CON           equ	4045	;# 
   346   000FCE                     TMR1            equ	4046	;# 
   347   000FCE                     TMR1L           equ	4046	;# 
   348   000FCF                     TMR1H           equ	4047	;# 
   349   000FD0                     RCON            equ	4048	;# 
   350   000FD1                     WDTCON          equ	4049	;# 
   351   000FD2                     HLVDCON         equ	4050	;# 
   352   000FD2                     LVDCON          equ	4050	;# 
   353   000FD3                     OSCCON          equ	4051	;# 
   354   000FD5                     T0CON           equ	4053	;# 
   355   000FD6                     TMR0            equ	4054	;# 
   356   000FD6                     TMR0L           equ	4054	;# 
   357   000FD7                     TMR0H           equ	4055	;# 
   358   000FD8                     STATUS          equ	4056	;# 
   359   000FD9                     FSR2            equ	4057	;# 
   360   000FD9                     FSR2L           equ	4057	;# 
   361   000FDA                     FSR2H           equ	4058	;# 
   362   000FDB                     PLUSW2          equ	4059	;# 
   363   000FDC                     PREINC2         equ	4060	;# 
   364   000FDD                     POSTDEC2        equ	4061	;# 
   365   000FDE                     POSTINC2        equ	4062	;# 
   366   000FDF                     INDF2           equ	4063	;# 
   367   000FE0                     BSR             equ	4064	;# 
   368   000FE1                     FSR1            equ	4065	;# 
   369   000FE1                     FSR1L           equ	4065	;# 
   370   000FE2                     FSR1H           equ	4066	;# 
   371   000FE3                     PLUSW1          equ	4067	;# 
   372   000FE4                     PREINC1         equ	4068	;# 
   373   000FE5                     POSTDEC1        equ	4069	;# 
   374   000FE6                     POSTINC1        equ	4070	;# 
   375   000FE7                     INDF1           equ	4071	;# 
   376   000FE8                     WREG            equ	4072	;# 
   377   000FE9                     FSR0            equ	4073	;# 
   378   000FE9                     FSR0L           equ	4073	;# 
   379   000FEA                     FSR0H           equ	4074	;# 
   380   000FEB                     PLUSW0          equ	4075	;# 
   381   000FEC                     PREINC0         equ	4076	;# 
   382   000FED                     POSTDEC0        equ	4077	;# 
   383   000FEE                     POSTINC0        equ	4078	;# 
   384   000FEF                     INDF0           equ	4079	;# 
   385   000FF0                     INTCON3         equ	4080	;# 
   386   000FF1                     INTCON2         equ	4081	;# 
   387   000FF2                     INTCON          equ	4082	;# 
   388   000FF3                     PROD            equ	4083	;# 
   389   000FF3                     PRODL           equ	4083	;# 
   390   000FF4                     PRODH           equ	4084	;# 
   391   000FF5                     TABLAT          equ	4085	;# 
   392   000FF6                     TBLPTR          equ	4086	;# 
   393   000FF6                     TBLPTRL         equ	4086	;# 
   394   000FF7                     TBLPTRH         equ	4087	;# 
   395   000FF8                     TBLPTRU         equ	4088	;# 
   396   000FF9                     PCLAT           equ	4089	;# 
   397   000FF9                     PC              equ	4089	;# 
   398   000FF9                     PCL             equ	4089	;# 
   399   000FFA                     PCLATH          equ	4090	;# 
   400   000FFB                     PCLATU          equ	4091	;# 
   401   000FFC                     STKPTR          equ	4092	;# 
   402   000FFD                     TOS             equ	4093	;# 
   403   000FFD                     TOSL            equ	4093	;# 
   404   000FFE                     TOSH            equ	4094	;# 
   405   000FFF                     TOSU            equ	4095	;# 
   406   000F77                     SSPMSK          equ	3959	;# 
   407   000F78                     SLRCON          equ	3960	;# 
   408   000F79                     CM2CON1         equ	3961	;# 
   409   000F7A                     CM2CON0         equ	3962	;# 
   410   000F7B                     CM1CON0         equ	3963	;# 
   411   000F7C                     WPUB            equ	3964	;# 
   412   000F7D                     IOCB            equ	3965	;# 
   413   000F7E                     ANSEL           equ	3966	;# 
   414   000F7F                     ANSELH          equ	3967	;# 
   415   000F80                     PORTA           equ	3968	;# 
   416   000F81                     PORTB           equ	3969	;# 
   417   000F82                     PORTC           equ	3970	;# 
   418   000F83                     PORTD           equ	3971	;# 
   419   000F84                     PORTE           equ	3972	;# 
   420   000F89                     LATA            equ	3977	;# 
   421   000F8A                     LATB            equ	3978	;# 
   422   000F8B                     LATC            equ	3979	;# 
   423   000F8C                     LATD            equ	3980	;# 
   424   000F8D                     LATE            equ	3981	;# 
   425   000F92                     TRISA           equ	3986	;# 
   426   000F92                     DDRA            equ	3986	;# 
   427   000F93                     TRISB           equ	3987	;# 
   428   000F93                     DDRB            equ	3987	;# 
   429   000F94                     TRISC           equ	3988	;# 
   430   000F94                     DDRC            equ	3988	;# 
   431   000F95                     TRISD           equ	3989	;# 
   432   000F95                     DDRD            equ	3989	;# 
   433   000F96                     TRISE           equ	3990	;# 
   434   000F96                     DDRE            equ	3990	;# 
   435   000F9B                     OSCTUNE         equ	3995	;# 
   436   000F9D                     PIE1            equ	3997	;# 
   437   000F9E                     PIR1            equ	3998	;# 
   438   000F9F                     IPR1            equ	3999	;# 
   439   000FA0                     PIE2            equ	4000	;# 
   440   000FA1                     PIR2            equ	4001	;# 
   441   000FA2                     IPR2            equ	4002	;# 
   442   000FA6                     EECON1          equ	4006	;# 
   443   000FA7                     EECON2          equ	4007	;# 
   444   000FA8                     EEDATA          equ	4008	;# 
   445   000FA9                     EEADR           equ	4009	;# 
   446   000FAA                     EEADRH          equ	4010	;# 
   447   000FAB                     RCSTA           equ	4011	;# 
   448   000FAB                     RCSTA1          equ	4011	;# 
   449   000FAC                     TXSTA           equ	4012	;# 
   450   000FAC                     TXSTA1          equ	4012	;# 
   451   000FAD                     TXREG           equ	4013	;# 
   452   000FAD                     TXREG1          equ	4013	;# 
   453   000FAE                     RCREG           equ	4014	;# 
   454   000FAE                     RCREG1          equ	4014	;# 
   455   000FAF                     SPBRG           equ	4015	;# 
   456   000FAF                     SPBRG1          equ	4015	;# 
   457   000FB0                     SPBRGH          equ	4016	;# 
   458   000FB1                     T3CON           equ	4017	;# 
   459   000FB2                     TMR3            equ	4018	;# 
   460   000FB2                     TMR3L           equ	4018	;# 
   461   000FB3                     TMR3H           equ	4019	;# 
   462   000FB4                     CVRCON2         equ	4020	;# 
   463   000FB5                     CVRCON          equ	4021	;# 
   464   000FB6                     ECCP1AS         equ	4022	;# 
   465   000FB7                     PWM1CON         equ	4023	;# 
   466   000FB8                     BAUDCON         equ	4024	;# 
   467   000FB8                     BAUDCTL         equ	4024	;# 
   468   000FB9                     PSTRCON         equ	4025	;# 
   469   000FBA                     CCP2CON         equ	4026	;# 
   470   000FBB                     CCPR2           equ	4027	;# 
   471   000FBB                     CCPR2L          equ	4027	;# 
   472   000FBC                     CCPR2H          equ	4028	;# 
   473   000FBD                     CCP1CON         equ	4029	;# 
   474   000FBE                     CCPR1           equ	4030	;# 
   475   000FBE                     CCPR1L          equ	4030	;# 
   476   000FBF                     CCPR1H          equ	4031	;# 
   477   000FC0                     ADCON2          equ	4032	;# 
   478   000FC1                     ADCON1          equ	4033	;# 
   479   000FC2                     ADCON0          equ	4034	;# 
   480   000FC3                     ADRES           equ	4035	;# 
   481   000FC3                     ADRESL          equ	4035	;# 
   482   000FC4                     ADRESH          equ	4036	;# 
   483   000FC5                     SSPCON2         equ	4037	;# 
   484   000FC6                     SSPCON1         equ	4038	;# 
   485   000FC7                     SSPSTAT         equ	4039	;# 
   486   000FC8                     SSPADD          equ	4040	;# 
   487   000FC9                     SSPBUF          equ	4041	;# 
   488   000FCA                     T2CON           equ	4042	;# 
   489   000FCB                     PR2             equ	4043	;# 
   490   000FCB                     MEMCON          equ	4043	;# 
   491   000FCC                     TMR2            equ	4044	;# 
   492   000FCD                     T1CON           equ	4045	;# 
   493   000FCE                     TMR1            equ	4046	;# 
   494   000FCE                     TMR1L           equ	4046	;# 
   495   000FCF                     TMR1H           equ	4047	;# 
   496   000FD0                     RCON            equ	4048	;# 
   497   000FD1                     WDTCON          equ	4049	;# 
   498   000FD2                     HLVDCON         equ	4050	;# 
   499   000FD2                     LVDCON          equ	4050	;# 
   500   000FD3                     OSCCON          equ	4051	;# 
   501   000FD5                     T0CON           equ	4053	;# 
   502   000FD6                     TMR0            equ	4054	;# 
   503   000FD6                     TMR0L           equ	4054	;# 
   504   000FD7                     TMR0H           equ	4055	;# 
   505   000FD8                     STATUS          equ	4056	;# 
   506   000FD9                     FSR2            equ	4057	;# 
   507   000FD9                     FSR2L           equ	4057	;# 
   508   000FDA                     FSR2H           equ	4058	;# 
   509   000FDB                     PLUSW2          equ	4059	;# 
   510   000FDC                     PREINC2         equ	4060	;# 
   511   000FDD                     POSTDEC2        equ	4061	;# 
   512   000FDE                     POSTINC2        equ	4062	;# 
   513   000FDF                     INDF2           equ	4063	;# 
   514   000FE0                     BSR             equ	4064	;# 
   515   000FE1                     FSR1            equ	4065	;# 
   516   000FE1                     FSR1L           equ	4065	;# 
   517   000FE2                     FSR1H           equ	4066	;# 
   518   000FE3                     PLUSW1          equ	4067	;# 
   519   000FE4                     PREINC1         equ	4068	;# 
   520   000FE5                     POSTDEC1        equ	4069	;# 
   521   000FE6                     POSTINC1        equ	4070	;# 
   522   000FE7                     INDF1           equ	4071	;# 
   523   000FE8                     WREG            equ	4072	;# 
   524   000FE9                     FSR0            equ	4073	;# 
   525   000FE9                     FSR0L           equ	4073	;# 
   526   000FEA                     FSR0H           equ	4074	;# 
   527   000FEB                     PLUSW0          equ	4075	;# 
   528   000FEC                     PREINC0         equ	4076	;# 
   529   000FED                     POSTDEC0        equ	4077	;# 
   530   000FEE                     POSTINC0        equ	4078	;# 
   531   000FEF                     INDF0           equ	4079	;# 
   532   000FF0                     INTCON3         equ	4080	;# 
   533   000FF1                     INTCON2         equ	4081	;# 
   534   000FF2                     INTCON          equ	4082	;# 
   535   000FF3                     PROD            equ	4083	;# 
   536   000FF3                     PRODL           equ	4083	;# 
   537   000FF4                     PRODH           equ	4084	;# 
   538   000FF5                     TABLAT          equ	4085	;# 
   539   000FF6                     TBLPTR          equ	4086	;# 
   540   000FF6                     TBLPTRL         equ	4086	;# 
   541   000FF7                     TBLPTRH         equ	4087	;# 
   542   000FF8                     TBLPTRU         equ	4088	;# 
   543   000FF9                     PCLAT           equ	4089	;# 
   544   000FF9                     PC              equ	4089	;# 
   545   000FF9                     PCL             equ	4089	;# 
   546   000FFA                     PCLATH          equ	4090	;# 
   547   000FFB                     PCLATU          equ	4091	;# 
   548   000FFC                     STKPTR          equ	4092	;# 
   549   000FFD                     TOS             equ	4093	;# 
   550   000FFD                     TOSL            equ	4093	;# 
   551   000FFE                     TOSH            equ	4094	;# 
   552   000FFF                     TOSU            equ	4095	;# 
   553   000F77                     SSPMSK          equ	3959	;# 
   554   000F78                     SLRCON          equ	3960	;# 
   555   000F79                     CM2CON1         equ	3961	;# 
   556   000F7A                     CM2CON0         equ	3962	;# 
   557   000F7B                     CM1CON0         equ	3963	;# 
   558   000F7C                     WPUB            equ	3964	;# 
   559   000F7D                     IOCB            equ	3965	;# 
   560   000F7E                     ANSEL           equ	3966	;# 
   561   000F7F                     ANSELH          equ	3967	;# 
   562   000F80                     PORTA           equ	3968	;# 
   563   000F81                     PORTB           equ	3969	;# 
   564   000F82                     PORTC           equ	3970	;# 
   565   000F83                     PORTD           equ	3971	;# 
   566   000F84                     PORTE           equ	3972	;# 
   567   000F89                     LATA            equ	3977	;# 
   568   000F8A                     LATB            equ	3978	;# 
   569   000F8B                     LATC            equ	3979	;# 
   570   000F8C                     LATD            equ	3980	;# 
   571   000F8D                     LATE            equ	3981	;# 
   572   000F92                     TRISA           equ	3986	;# 
   573   000F92                     DDRA            equ	3986	;# 
   574   000F93                     TRISB           equ	3987	;# 
   575   000F93                     DDRB            equ	3987	;# 
   576   000F94                     TRISC           equ	3988	;# 
   577   000F94                     DDRC            equ	3988	;# 
   578   000F95                     TRISD           equ	3989	;# 
   579   000F95                     DDRD            equ	3989	;# 
   580   000F96                     TRISE           equ	3990	;# 
   581   000F96                     DDRE            equ	3990	;# 
   582   000F9B                     OSCTUNE         equ	3995	;# 
   583   000F9D                     PIE1            equ	3997	;# 
   584   000F9E                     PIR1            equ	3998	;# 
   585   000F9F                     IPR1            equ	3999	;# 
   586   000FA0                     PIE2            equ	4000	;# 
   587   000FA1                     PIR2            equ	4001	;# 
   588   000FA2                     IPR2            equ	4002	;# 
   589   000FA6                     EECON1          equ	4006	;# 
   590   000FA7                     EECON2          equ	4007	;# 
   591   000FA8                     EEDATA          equ	4008	;# 
   592   000FA9                     EEADR           equ	4009	;# 
   593   000FAA                     EEADRH          equ	4010	;# 
   594   000FAB                     RCSTA           equ	4011	;# 
   595   000FAB                     RCSTA1          equ	4011	;# 
   596   000FAC                     TXSTA           equ	4012	;# 
   597   000FAC                     TXSTA1          equ	4012	;# 
   598   000FAD                     TXREG           equ	4013	;# 
   599   000FAD                     TXREG1          equ	4013	;# 
   600   000FAE                     RCREG           equ	4014	;# 
   601   000FAE                     RCREG1          equ	4014	;# 
   602   000FAF                     SPBRG           equ	4015	;# 
   603   000FAF                     SPBRG1          equ	4015	;# 
   604   000FB0                     SPBRGH          equ	4016	;# 
   605   000FB1                     T3CON           equ	4017	;# 
   606   000FB2                     TMR3            equ	4018	;# 
   607   000FB2                     TMR3L           equ	4018	;# 
   608   000FB3                     TMR3H           equ	4019	;# 
   609   000FB4                     CVRCON2         equ	4020	;# 
   610   000FB5                     CVRCON          equ	4021	;# 
   611   000FB6                     ECCP1AS         equ	4022	;# 
   612   000FB7                     PWM1CON         equ	4023	;# 
   613   000FB8                     BAUDCON         equ	4024	;# 
   614   000FB8                     BAUDCTL         equ	4024	;# 
   615   000FB9                     PSTRCON         equ	4025	;# 
   616   000FBA                     CCP2CON         equ	4026	;# 
   617   000FBB                     CCPR2           equ	4027	;# 
   618   000FBB                     CCPR2L          equ	4027	;# 
   619   000FBC                     CCPR2H          equ	4028	;# 
   620   000FBD                     CCP1CON         equ	4029	;# 
   621   000FBE                     CCPR1           equ	4030	;# 
   622   000FBE                     CCPR1L          equ	4030	;# 
   623   000FBF                     CCPR1H          equ	4031	;# 
   624   000FC0                     ADCON2          equ	4032	;# 
   625   000FC1                     ADCON1          equ	4033	;# 
   626   000FC2                     ADCON0          equ	4034	;# 
   627   000FC3                     ADRES           equ	4035	;# 
   628   000FC3                     ADRESL          equ	4035	;# 
   629   000FC4                     ADRESH          equ	4036	;# 
   630   000FC5                     SSPCON2         equ	4037	;# 
   631   000FC6                     SSPCON1         equ	4038	;# 
   632   000FC7                     SSPSTAT         equ	4039	;# 
   633   000FC8                     SSPADD          equ	4040	;# 
   634   000FC9                     SSPBUF          equ	4041	;# 
   635   000FCA                     T2CON           equ	4042	;# 
   636   000FCB                     PR2             equ	4043	;# 
   637   000FCB                     MEMCON          equ	4043	;# 
   638   000FCC                     TMR2            equ	4044	;# 
   639   000FCD                     T1CON           equ	4045	;# 
   640   000FCE                     TMR1            equ	4046	;# 
   641   000FCE                     TMR1L           equ	4046	;# 
   642   000FCF                     TMR1H           equ	4047	;# 
   643   000FD0                     RCON            equ	4048	;# 
   644   000FD1                     WDTCON          equ	4049	;# 
   645   000FD2                     HLVDCON         equ	4050	;# 
   646   000FD2                     LVDCON          equ	4050	;# 
   647   000FD3                     OSCCON          equ	4051	;# 
   648   000FD5                     T0CON           equ	4053	;# 
   649   000FD6                     TMR0            equ	4054	;# 
   650   000FD6                     TMR0L           equ	4054	;# 
   651   000FD7                     TMR0H           equ	4055	;# 
   652   000FD8                     STATUS          equ	4056	;# 
   653   000FD9                     FSR2            equ	4057	;# 
   654   000FD9                     FSR2L           equ	4057	;# 
   655   000FDA                     FSR2H           equ	4058	;# 
   656   000FDB                     PLUSW2          equ	4059	;# 
   657   000FDC                     PREINC2         equ	4060	;# 
   658   000FDD                     POSTDEC2        equ	4061	;# 
   659   000FDE                     POSTINC2        equ	4062	;# 
   660   000FDF                     INDF2           equ	4063	;# 
   661   000FE0                     BSR             equ	4064	;# 
   662   000FE1                     FSR1            equ	4065	;# 
   663   000FE1                     FSR1L           equ	4065	;# 
   664   000FE2                     FSR1H           equ	4066	;# 
   665   000FE3                     PLUSW1          equ	4067	;# 
   666   000FE4                     PREINC1         equ	4068	;# 
   667   000FE5                     POSTDEC1        equ	4069	;# 
   668   000FE6                     POSTINC1        equ	4070	;# 
   669   000FE7                     INDF1           equ	4071	;# 
   670   000FE8                     WREG            equ	4072	;# 
   671   000FE9                     FSR0            equ	4073	;# 
   672   000FE9                     FSR0L           equ	4073	;# 
   673   000FEA                     FSR0H           equ	4074	;# 
   674   000FEB                     PLUSW0          equ	4075	;# 
   675   000FEC                     PREINC0         equ	4076	;# 
   676   000FED                     POSTDEC0        equ	4077	;# 
   677   000FEE                     POSTINC0        equ	4078	;# 
   678   000FEF                     INDF0           equ	4079	;# 
   679   000FF0                     INTCON3         equ	4080	;# 
   680   000FF1                     INTCON2         equ	4081	;# 
   681   000FF2                     INTCON          equ	4082	;# 
   682   000FF3                     PROD            equ	4083	;# 
   683   000FF3                     PRODL           equ	4083	;# 
   684   000FF4                     PRODH           equ	4084	;# 
   685   000FF5                     TABLAT          equ	4085	;# 
   686   000FF6                     TBLPTR          equ	4086	;# 
   687   000FF6                     TBLPTRL         equ	4086	;# 
   688   000FF7                     TBLPTRH         equ	4087	;# 
   689   000FF8                     TBLPTRU         equ	4088	;# 
   690   000FF9                     PCLAT           equ	4089	;# 
   691   000FF9                     PC              equ	4089	;# 
   692   000FF9                     PCL             equ	4089	;# 
   693   000FFA                     PCLATH          equ	4090	;# 
   694   000FFB                     PCLATU          equ	4091	;# 
   695   000FFC                     STKPTR          equ	4092	;# 
   696   000FFD                     TOS             equ	4093	;# 
   697   000FFD                     TOSL            equ	4093	;# 
   698   000FFE                     TOSH            equ	4094	;# 
   699   000FFF                     TOSU            equ	4095	;# 
   700   000F77                     SSPMSK          equ	3959	;# 
   701   000F78                     SLRCON          equ	3960	;# 
   702   000F79                     CM2CON1         equ	3961	;# 
   703   000F7A                     CM2CON0         equ	3962	;# 
   704   000F7B                     CM1CON0         equ	3963	;# 
   705   000F7C                     WPUB            equ	3964	;# 
   706   000F7D                     IOCB            equ	3965	;# 
   707   000F7E                     ANSEL           equ	3966	;# 
   708   000F7F                     ANSELH          equ	3967	;# 
   709   000F80                     PORTA           equ	3968	;# 
   710   000F81                     PORTB           equ	3969	;# 
   711   000F82                     PORTC           equ	3970	;# 
   712   000F83                     PORTD           equ	3971	;# 
   713   000F84                     PORTE           equ	3972	;# 
   714   000F89                     LATA            equ	3977	;# 
   715   000F8A                     LATB            equ	3978	;# 
   716   000F8B                     LATC            equ	3979	;# 
   717   000F8C                     LATD            equ	3980	;# 
   718   000F8D                     LATE            equ	3981	;# 
   719   000F92                     TRISA           equ	3986	;# 
   720   000F92                     DDRA            equ	3986	;# 
   721   000F93                     TRISB           equ	3987	;# 
   722   000F93                     DDRB            equ	3987	;# 
   723   000F94                     TRISC           equ	3988	;# 
   724   000F94                     DDRC            equ	3988	;# 
   725   000F95                     TRISD           equ	3989	;# 
   726   000F95                     DDRD            equ	3989	;# 
   727   000F96                     TRISE           equ	3990	;# 
   728   000F96                     DDRE            equ	3990	;# 
   729   000F9B                     OSCTUNE         equ	3995	;# 
   730   000F9D                     PIE1            equ	3997	;# 
   731   000F9E                     PIR1            equ	3998	;# 
   732   000F9F                     IPR1            equ	3999	;# 
   733   000FA0                     PIE2            equ	4000	;# 
   734   000FA1                     PIR2            equ	4001	;# 
   735   000FA2                     IPR2            equ	4002	;# 
   736   000FA6                     EECON1          equ	4006	;# 
   737   000FA7                     EECON2          equ	4007	;# 
   738   000FA8                     EEDATA          equ	4008	;# 
   739   000FA9                     EEADR           equ	4009	;# 
   740   000FAA                     EEADRH          equ	4010	;# 
   741   000FAB                     RCSTA           equ	4011	;# 
   742   000FAB                     RCSTA1          equ	4011	;# 
   743   000FAC                     TXSTA           equ	4012	;# 
   744   000FAC                     TXSTA1          equ	4012	;# 
   745   000FAD                     TXREG           equ	4013	;# 
   746   000FAD                     TXREG1          equ	4013	;# 
   747   000FAE                     RCREG           equ	4014	;# 
   748   000FAE                     RCREG1          equ	4014	;# 
   749   000FAF                     SPBRG           equ	4015	;# 
   750   000FAF                     SPBRG1          equ	4015	;# 
   751   000FB0                     SPBRGH          equ	4016	;# 
   752   000FB1                     T3CON           equ	4017	;# 
   753   000FB2                     TMR3            equ	4018	;# 
   754   000FB2                     TMR3L           equ	4018	;# 
   755   000FB3                     TMR3H           equ	4019	;# 
   756   000FB4                     CVRCON2         equ	4020	;# 
   757   000FB5                     CVRCON          equ	4021	;# 
   758   000FB6                     ECCP1AS         equ	4022	;# 
   759   000FB7                     PWM1CON         equ	4023	;# 
   760   000FB8                     BAUDCON         equ	4024	;# 
   761   000FB8                     BAUDCTL         equ	4024	;# 
   762   000FB9                     PSTRCON         equ	4025	;# 
   763   000FBA                     CCP2CON         equ	4026	;# 
   764   000FBB                     CCPR2           equ	4027	;# 
   765   000FBB                     CCPR2L          equ	4027	;# 
   766   000FBC                     CCPR2H          equ	4028	;# 
   767   000FBD                     CCP1CON         equ	4029	;# 
   768   000FBE                     CCPR1           equ	4030	;# 
   769   000FBE                     CCPR1L          equ	4030	;# 
   770   000FBF                     CCPR1H          equ	4031	;# 
   771   000FC0                     ADCON2          equ	4032	;# 
   772   000FC1                     ADCON1          equ	4033	;# 
   773   000FC2                     ADCON0          equ	4034	;# 
   774   000FC3                     ADRES           equ	4035	;# 
   775   000FC3                     ADRESL          equ	4035	;# 
   776   000FC4                     ADRESH          equ	4036	;# 
   777   000FC5                     SSPCON2         equ	4037	;# 
   778   000FC6                     SSPCON1         equ	4038	;# 
   779   000FC7                     SSPSTAT         equ	4039	;# 
   780   000FC8                     SSPADD          equ	4040	;# 
   781   000FC9                     SSPBUF          equ	4041	;# 
   782   000FCA                     T2CON           equ	4042	;# 
   783   000FCB                     PR2             equ	4043	;# 
   784   000FCB                     MEMCON          equ	4043	;# 
   785   000FCC                     TMR2            equ	4044	;# 
   786   000FCD                     T1CON           equ	4045	;# 
   787   000FCE                     TMR1            equ	4046	;# 
   788   000FCE                     TMR1L           equ	4046	;# 
   789   000FCF                     TMR1H           equ	4047	;# 
   790   000FD0                     RCON            equ	4048	;# 
   791   000FD1                     WDTCON          equ	4049	;# 
   792   000FD2                     HLVDCON         equ	4050	;# 
   793   000FD2                     LVDCON          equ	4050	;# 
   794   000FD3                     OSCCON          equ	4051	;# 
   795   000FD5                     T0CON           equ	4053	;# 
   796   000FD6                     TMR0            equ	4054	;# 
   797   000FD6                     TMR0L           equ	4054	;# 
   798   000FD7                     TMR0H           equ	4055	;# 
   799   000FD8                     STATUS          equ	4056	;# 
   800   000FD9                     FSR2            equ	4057	;# 
   801   000FD9                     FSR2L           equ	4057	;# 
   802   000FDA                     FSR2H           equ	4058	;# 
   803   000FDB                     PLUSW2          equ	4059	;# 
   804   000FDC                     PREINC2         equ	4060	;# 
   805   000FDD                     POSTDEC2        equ	4061	;# 
   806   000FDE                     POSTINC2        equ	4062	;# 
   807   000FDF                     INDF2           equ	4063	;# 
   808   000FE0                     BSR             equ	4064	;# 
   809   000FE1                     FSR1            equ	4065	;# 
   810   000FE1                     FSR1L           equ	4065	;# 
   811   000FE2                     FSR1H           equ	4066	;# 
   812   000FE3                     PLUSW1          equ	4067	;# 
   813   000FE4                     PREINC1         equ	4068	;# 
   814   000FE5                     POSTDEC1        equ	4069	;# 
   815   000FE6                     POSTINC1        equ	4070	;# 
   816   000FE7                     INDF1           equ	4071	;# 
   817   000FE8                     WREG            equ	4072	;# 
   818   000FE9                     FSR0            equ	4073	;# 
   819   000FE9                     FSR0L           equ	4073	;# 
   820   000FEA                     FSR0H           equ	4074	;# 
   821   000FEB                     PLUSW0          equ	4075	;# 
   822   000FEC                     PREINC0         equ	4076	;# 
   823   000FED                     POSTDEC0        equ	4077	;# 
   824   000FEE                     POSTINC0        equ	4078	;# 
   825   000FEF                     INDF0           equ	4079	;# 
   826   000FF0                     INTCON3         equ	4080	;# 
   827   000FF1                     INTCON2         equ	4081	;# 
   828   000FF2                     INTCON          equ	4082	;# 
   829   000FF3                     PROD            equ	4083	;# 
   830   000FF3                     PRODL           equ	4083	;# 
   831   000FF4                     PRODH           equ	4084	;# 
   832   000FF5                     TABLAT          equ	4085	;# 
   833   000FF6                     TBLPTR          equ	4086	;# 
   834   000FF6                     TBLPTRL         equ	4086	;# 
   835   000FF7                     TBLPTRH         equ	4087	;# 
   836   000FF8                     TBLPTRU         equ	4088	;# 
   837   000FF9                     PCLAT           equ	4089	;# 
   838   000FF9                     PC              equ	4089	;# 
   839   000FF9                     PCL             equ	4089	;# 
   840   000FFA                     PCLATH          equ	4090	;# 
   841   000FFB                     PCLATU          equ	4091	;# 
   842   000FFC                     STKPTR          equ	4092	;# 
   843   000FFD                     TOS             equ	4093	;# 
   844   000FFD                     TOSL            equ	4093	;# 
   845   000FFE                     TOSH            equ	4094	;# 
   846   000FFF                     TOSU            equ	4095	;# 
   847                           
   848                           	psect	smallconst
   849   001000                     __psmallconst:
   850                           	callstack 0
   851   001000  00                 	db	0
   852   001001                     _default_security_key:
   853                           	callstack 0
   854   001001  00                 	db	0
   855   001002  10                 	db	16
   856   001003  25                 	db	37
   857   001004  37                 	db	55
   858   001005  04                 	db	4
   859   001006  55                 	db	85
   860   001007  06                 	db	6
   861   001008  79                 	db	121
   862   001009  08                 	db	8
   863   00100A  09                 	db	9
   864   00100B  10                 	db	16
   865   00100C  11                 	db	17
   866   00100D  12                 	db	18
   867   00100E  13                 	db	19
   868   00100F  14                 	db	20
   869   001010  15                 	db	21
   870   001011                     __end_of_default_security_key:
   871                           	callstack 0
   872   001011                     _default_mac_address:
   873                           	callstack 0
   874   001011  11                 	db	17
   875   001012  28                 	db	40
   876   001013  35                 	db	53
   877   001014  44                 	db	68
   878   001015  56                 	db	86
   879   001016  66                 	db	102
   880   001017  77                 	db	119
   881   001018  01                 	db	1
   882   001019                     __end_of_default_mac_address:
   883                           	callstack 0
   884   007CED                     _RCIE           set	31981
   885   007CEE                     _ADIE           set	31982
   886   007D03                     _BCLIE          set	32003
   887   007CEB                     _SSPIE          set	31979
   888   007D04                     _EEIE           set	32004
   889   007D00                     _CCP2IE         set	32000
   890   007CEA                     _CCP1IE         set	31978
   891   007CE9                     _TMR2IE         set	31977
   892   007CE8                     _TMR1IE         set	31976
   893   007F95                     _T0IE           set	32661
   894   007F93                     _RBIE           set	32659
   895   007F96                     _PEIE           set	32662
   896   007F97                     _GIE            set	32663
   897   000F9B                     _OSCTUNE        set	3995
   898   000FD3                     _OSCCON         set	4051
   899   000F96                     _TRISEbits      set	3990
   900   000F84                     _PORTE          set	3972
   901   000F83                     _PORTD          set	3971
   902   000F82                     _PORTC          set	3970
   903   000F81                     _PORTB          set	3969
   904   000F80                     _PORTA          set	3968
   905   000F8D                     _LATEbits       set	3981
   906   000FC9                     _SSPBUF         set	4041
   907   000F9E                     _PIR1bits       set	3998
   908   000FC6                     _SSPCON1bits    set	4038
   909   000FC7                     _SSPSTATbits    set	4039
   910   000F8C                     _LATDbits       set	3980
   911   000F8B                     _LATCbits       set	3979
   912   000F95                     _TRISDbits      set	3989
   913   000F94                     _TRISCbits      set	3988
   914   000F93                     _TRISBbits      set	3987
   915   001019  00                 	db	0	; dummy byte at the end
   916   000001                     __activetblptr  equ	1
   917                           
   918                           ; #config settings
   919                           
   920                           	psect	cinit
   921   001564                     __pcinit:
   922                           	callstack 0
   923   001564                     start_initialization:
   924                           	callstack 0
   925   001564                     __initialization:
   926                           	callstack 0
   927                           
   928                           ; Clear objects allocated to BANK0 (84 bytes)
   929   001564  EE00  F060         	lfsr	0,__pbssBANK0
   930   001568  0E54               	movlw	84
   931   00156A                     clear_0:
   932   00156A  6AEE               	clrf	postinc0,c
   933   00156C  06E8               	decf	wreg,f,c
   934   00156E  E1FD               	bnz	clear_0
   935                           
   936                           ; Clear objects allocated to COMRAM (7 bytes)
   937   001570  EE00  F00F         	lfsr	0,__pbssCOMRAM
   938   001574  0E07               	movlw	7
   939   001576                     clear_1:
   940   001576  6AEE               	clrf	postinc0,c
   941   001578  06E8               	decf	wreg,f,c
   942   00157A  E1FD               	bnz	clear_1
   943   00157C                     end_of_initialization:
   944                           	callstack 0
   945   00157C                     __end_of__initialization:
   946                           	callstack 0
   947   00157C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   948   00157E  6EF8               	movwf	tblptru,c
   949   001580  0E10               	movlw	high __Lsmallconst
   950   001582  6EF7               	movwf	tblptrh,c
   951   001584  0100               	movlb	0
   952   001586  EF22  F009         	goto	_main	;jump to C main() function
   953                           
   954                           	psect	bssCOMRAM
   955   00000F                     __pbssCOMRAM:
   956                           	callstack 0
   957   00000F                     _mrf24_data_out:
   958                           	callstack 0
   959   00000F                     	ds	7
   960                           
   961                           	psect	bssBANK0
   962   000060                     __pbssBANK0:
   963                           	callstack 0
   964   000060                     _mrf24_data_config:
   965                           	callstack 0
   966   000060                     	ds	84
   967                           
   968                           	psect	cstackCOMRAM
   969   000001                     __pcstackCOMRAM:
   970                           	callstack 0
   971   000001                     SetCSPin@estado:
   972                           	callstack 0
   973   000001                     SetWakePin@estado:
   974                           	callstack 0
   975   000001                     SetResetPin@estado:
   976                           	callstack 0
   977   000001                     SPIWriteByte@dato:
   978                           	callstack 0
   979   000001                     SPIWrite2Byte@dato:
   980                           	callstack 0
   981   000001                     ??_InicializoVariables:
   982   000001                     
   983                           ; 1 bytes @ 0x0
   984   000001                     	ds	1
   985   000002                     WriteByteSPIPort@dato:
   986                           	callstack 0
   987   000002                     InicializoVariables@i:
   988                           	callstack 0
   989   000002                     
   990                           ; 1 bytes @ 0x1
   991   000002                     	ds	1
   992   000003                     SetShortAddr@value:
   993                           	callstack 0
   994   000003                     Write2ByteSPIPort@dato:
   995                           	callstack 0
   996   000003                     
   997                           ; 1 bytes @ 0x2
   998   000003                     	ds	1
   999   000004                     SetShortAddr@reg_address:
  1000                           	callstack 0
  1001   000004                     
  1002                           ; 1 bytes @ 0x3
  1003   000004                     	ds	1
  1004   000005                     SetLongAddr@reg_address:
  1005                           	callstack 0
  1006   000005                     GetLongAddr@reg_address:
  1007                           	callstack 0
  1008   000005                     
  1009                           ; 1 bytes @ 0x4
  1010   000005                     	ds	2
  1011   000007                     SetLongAddr@value:
  1012                           	callstack 0
  1013   000007                     ??_GetLongAddr:
  1014                           
  1015                           ; 1 bytes @ 0x6
  1016   000007                     	ds	1
  1017   000008                     ??_SetLongAddr:
  1018                           
  1019                           ; 1 bytes @ 0x7
  1020   000008                     	ds	1
  1021   000009                     GetLongAddr@toReturn:
  1022                           	callstack 0
  1023                           
  1024                           ; 1 bytes @ 0x8
  1025   000009                     	ds	1
  1026   00000A                     SetChannel@aux:
  1027                           	callstack 0
  1028   00000A                     EnviarDato@i:
  1029                           	callstack 0
  1030   00000A                     
  1031                           ; 1 bytes @ 0x9
  1032   00000A                     	ds	1
  1033   00000B                     EnviarDato@pos:
  1034                           	callstack 0
  1035   00000B                     ??_MRF24J40Init:
  1036                           
  1037                           ; 1 bytes @ 0xA
  1038   00000B                     	ds	2
  1039   00000D                     ??_main:
  1040                           
  1041                           ; 1 bytes @ 0xC
  1042   00000D                     	ds	2
  1043                           
  1044 ;;
  1045 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1046 ;;
  1047 ;; *************** function _main *****************
  1048 ;; Defined at:
  1049 ;;		line 23 in file "main.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;Total ram usage:        2 bytes
  1068 ;; Hardware stack levels required when called: 5
  1069 ;; This function calls:
  1070 ;;		_BoardInit
  1071 ;;		_EnviarDato
  1072 ;;		_MRF24J40Init
  1073 ;; This function is called by:
  1074 ;;		Startup code after reset
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           
  1078                           	psect	text0
  1079   001244                     __ptext0:
  1080                           	callstack 0
  1081   001244                     _main:
  1082                           	callstack 26
  1083   001244                     
  1084                           ;main.c: 25:     BoardInit();
  1085   001244  EC68  F00A         	call	_BoardInit	;wreg free
  1086   001248                     
  1087                           ;main.c: 26:     MRF24J40Init();
  1088   001248  EC0D  F008         	call	_MRF24J40Init	;wreg free
  1089   00124C                     l192:
  1090   00124C  0004               	clrwdt		;# 
  1091   00124E                     
  1092                           ;main.c: 31:         LATEbits.LATE2 = !LATEbits.LATE2;
  1093   00124E  A48D               	btfss	141,2,c	;volatile
  1094   001250  EF2C  F009         	goto	u451
  1095   001254  EF30  F009         	goto	u450
  1096   001258                     u451:
  1097   001258  6A0D               	clrf	??_main^0,c
  1098   00125A  2A0D               	incf	??_main^0,f,c
  1099   00125C  EF31  F009         	goto	u468
  1100   001260                     u450:
  1101   001260  6A0D               	clrf	??_main^0,c
  1102   001262                     u468:
  1103   001262  460D               	rlncf	??_main^0,f,c
  1104   001264  460D               	rlncf	??_main^0,f,c
  1105   001266  508D               	movf	141,w,c	;volatile
  1106   001268  180D               	xorwf	??_main^0,w,c
  1107   00126A  0BFB               	andlw	-5
  1108   00126C  180D               	xorwf	??_main^0,w,c
  1109   00126E  6E8D               	movwf	141,c	;volatile
  1110   001270                     
  1111                           ;main.c: 32:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1112   001270  0E06               	movlw	6
  1113   001272  6E0E               	movwf	(??_main+1)^0,c
  1114   001274  0E13               	movlw	19
  1115   001276  6E0D               	movwf	??_main^0,c
  1116   001278  0EAE               	movlw	174
  1117   00127A                     u517:
  1118   00127A  2EE8               	decfsz	wreg,f,c
  1119   00127C  D7FE               	bra	u517
  1120   00127E  2E0D               	decfsz	??_main^0,f,c
  1121   001280  D7FC               	bra	u517
  1122   001282  2E0E               	decfsz	(??_main+1)^0,f,c
  1123   001284  D7FA               	bra	u517
  1124   001286                     
  1125                           ;main.c: 33:         LATEbits.LATE1 = !LATEbits.LATE1;
  1126   001286  A28D               	btfss	141,1,c	;volatile
  1127   001288  EF48  F009         	goto	u471
  1128   00128C  EF4C  F009         	goto	u470
  1129   001290                     u471:
  1130   001290  6A0D               	clrf	??_main^0,c
  1131   001292  2A0D               	incf	??_main^0,f,c
  1132   001294  EF4D  F009         	goto	u488
  1133   001298                     u470:
  1134   001298  6A0D               	clrf	??_main^0,c
  1135   00129A                     u488:
  1136   00129A  460D               	rlncf	??_main^0,f,c
  1137   00129C  508D               	movf	141,w,c	;volatile
  1138   00129E  180D               	xorwf	??_main^0,w,c
  1139   0012A0  0BFD               	andlw	-3
  1140   0012A2  180D               	xorwf	??_main^0,w,c
  1141   0012A4  6E8D               	movwf	141,c	;volatile
  1142   0012A6                     
  1143                           ;main.c: 34:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1144   0012A6  0E06               	movlw	6
  1145   0012A8  6E0E               	movwf	(??_main+1)^0,c
  1146   0012AA  0E13               	movlw	19
  1147   0012AC  6E0D               	movwf	??_main^0,c
  1148   0012AE  0EAE               	movlw	174
  1149   0012B0                     u527:
  1150   0012B0  2EE8               	decfsz	wreg,f,c
  1151   0012B2  D7FE               	bra	u527
  1152   0012B4  2E0D               	decfsz	??_main^0,f,c
  1153   0012B6  D7FC               	bra	u527
  1154   0012B8  2E0E               	decfsz	(??_main+1)^0,f,c
  1155   0012BA  D7FA               	bra	u527
  1156   0012BC                     
  1157                           ;main.c: 35:         LATEbits.LATE0 = !LATEbits.LATE0;
  1158   0012BC  A08D               	btfss	141,0,c	;volatile
  1159   0012BE  EF63  F009         	goto	u491
  1160   0012C2  EF67  F009         	goto	u490
  1161   0012C6                     u491:
  1162   0012C6  6A0D               	clrf	??_main^0,c
  1163   0012C8  2A0D               	incf	??_main^0,f,c
  1164   0012CA  EF68  F009         	goto	u508
  1165   0012CE                     u490:
  1166   0012CE  6A0D               	clrf	??_main^0,c
  1167   0012D0                     u508:
  1168   0012D0  508D               	movf	141,w,c	;volatile
  1169   0012D2  180D               	xorwf	??_main^0,w,c
  1170   0012D4  0BFE               	andlw	-2
  1171   0012D6  180D               	xorwf	??_main^0,w,c
  1172   0012D8  6E8D               	movwf	141,c	;volatile
  1173   0012DA                     
  1174                           ;main.c: 36:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1175   0012DA  0E06               	movlw	6
  1176   0012DC  6E0E               	movwf	(??_main+1)^0,c
  1177   0012DE  0E13               	movlw	19
  1178   0012E0  6E0D               	movwf	??_main^0,c
  1179   0012E2  0EAE               	movlw	174
  1180   0012E4                     u537:
  1181   0012E4  2EE8               	decfsz	wreg,f,c
  1182   0012E6  D7FE               	bra	u537
  1183   0012E8  2E0D               	decfsz	??_main^0,f,c
  1184   0012EA  D7FC               	bra	u537
  1185   0012EC  2E0E               	decfsz	(??_main+1)^0,f,c
  1186   0012EE  D7FA               	bra	u537
  1187   0012F0                     
  1188                           ;main.c: 38:         EnviarDato();
  1189   0012F0  EC9D  F008         	call	_EnviarDato	;wreg free
  1190   0012F4  EF26  F009         	goto	l192
  1191   0012F8  EF00  F000         	goto	start
  1192   0012FC                     __end_of_main:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function _MRF24J40Init *****************
  1196 ;; Defined at:
  1197 ;;		line 263 in file "drivers/scr/drv_mrf24j40.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;                  1    wreg      void 
  1204 ;; Registers used:
  1205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1215 ;;Total ram usage:        2 bytes
  1216 ;; Hardware stack levels used: 1
  1217 ;; Hardware stack levels required when called: 4
  1218 ;; This function calls:
  1219 ;;		_InicializoPines
  1220 ;;		_InicializoVariables
  1221 ;;		_SetChannel
  1222 ;;		_SetDeviceAddress
  1223 ;;		_SetDeviceMACAddress
  1224 ;;		_SetLongAddr
  1225 ;;		_SetResetPin
  1226 ;;		_SetShortAddr
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text1
  1233   00101A                     __ptext1:
  1234                           	callstack 0
  1235   00101A                     _MRF24J40Init:
  1236                           	callstack 26
  1237   00101A                     
  1238                           ;drivers/scr/drv_mrf24j40.c: 265:     InicializoVariables();
  1239   00101A  EC7E  F009         	call	_InicializoVariables	;wreg free
  1240   00101E                     
  1241                           ;drivers/scr/drv_mrf24j40.c: 266:     InicializoPines();
  1242   00101E  ECD5  F00A         	call	_InicializoPines	;wreg free
  1243   001022                     
  1244                           ;drivers/scr/drv_mrf24j40.c: 267:   _delay((unsigned long)((50)*(16000000/4000.0)));;
  1245   001022  0E02               	movlw	2
  1246   001024  6E0C               	movwf	(??_MRF24J40Init+1)^0,c
  1247   001026  0E04               	movlw	4
  1248   001028  6E0B               	movwf	??_MRF24J40Init^0,c
  1249   00102A  0EBA               	movlw	186
  1250   00102C                     u547:
  1251   00102C  2EE8               	decfsz	wreg,f,c
  1252   00102E  D7FE               	bra	u547
  1253   001030  2E0B               	decfsz	??_MRF24J40Init^0,f,c
  1254   001032  D7FC               	bra	u547
  1255   001034  2E0C               	decfsz	(??_MRF24J40Init+1)^0,f,c
  1256   001036  D7FA               	bra	u547
  1257   001038  F000 F000          	nop2	
  1258   00103C                     
  1259                           ;drivers/scr/drv_mrf24j40.c: 268:     SetResetPin(1);
  1260   00103C  0E01               	movlw	1
  1261   00103E  EC0F  F00B         	call	_SetResetPin
  1262   001042                     
  1263                           ;drivers/scr/drv_mrf24j40.c: 269:  _delay((unsigned long)((500)*(16000000/4000.0)));;
  1264   001042  0E0B               	movlw	11
  1265   001044  6E0C               	movwf	(??_MRF24J40Init+1)^0,c
  1266   001046  0E26               	movlw	38
  1267   001048  6E0B               	movwf	??_MRF24J40Init^0,c
  1268   00104A  0E5E               	movlw	94
  1269   00104C                     u557:
  1270   00104C  2EE8               	decfsz	wreg,f,c
  1271   00104E  D7FE               	bra	u557
  1272   001050  2E0B               	decfsz	??_MRF24J40Init^0,f,c
  1273   001052  D7FC               	bra	u557
  1274   001054  2E0C               	decfsz	(??_MRF24J40Init+1)^0,f,c
  1275   001056  D7FA               	bra	u557
  1276   001058                     
  1277                           ;drivers/scr/drv_mrf24j40.c: 270:     SetShortAddr((0x18), 0x98);
  1278   001058  0E98               	movlw	152
  1279   00105A  6E03               	movwf	SetShortAddr@value^0,c
  1280   00105C  0E18               	movlw	24
  1281   00105E  ECC5  F00A         	call	_SetShortAddr
  1282   001062                     
  1283                           ;drivers/scr/drv_mrf24j40.c: 271:     SetShortAddr((0x2E), 0x95);
  1284   001062  0E95               	movlw	149
  1285   001064  6E03               	movwf	SetShortAddr@value^0,c
  1286   001066  0E2E               	movlw	46
  1287   001068  ECC5  F00A         	call	_SetShortAddr
  1288   00106C                     
  1289                           ;drivers/scr/drv_mrf24j40.c: 272:     SetLongAddr((0x200), 0x03);
  1290   00106C  0E02               	movlw	2
  1291   00106E  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  1292   001070  0E00               	movlw	0
  1293   001072  6E05               	movwf	SetLongAddr@reg_address^0,c
  1294   001074  0E03               	movlw	3
  1295   001076  6E07               	movwf	SetLongAddr@value^0,c
  1296   001078  EC47  F00A         	call	_SetLongAddr	;wreg free
  1297   00107C                     
  1298                           ;drivers/scr/drv_mrf24j40.c: 273:  SetLongAddr((0x201), 0x01);
  1299   00107C  0E02               	movlw	2
  1300   00107E  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  1301   001080  0E01               	movlw	1
  1302   001082  6E05               	movwf	SetLongAddr@reg_address^0,c
  1303   001084  0E01               	movlw	1
  1304   001086  6E07               	movwf	SetLongAddr@value^0,c
  1305   001088  EC47  F00A         	call	_SetLongAddr	;wreg free
  1306   00108C                     
  1307                           ;drivers/scr/drv_mrf24j40.c: 274:  SetLongAddr((0x202), 0x80);
  1308   00108C  0E02               	movlw	2
  1309   00108E  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  1310   001090  0E02               	movlw	2
  1311   001092  6E05               	movwf	SetLongAddr@reg_address^0,c
  1312   001094  0E80               	movlw	128
  1313   001096  6E07               	movwf	SetLongAddr@value^0,c
  1314   001098  EC47  F00A         	call	_SetLongAddr	;wreg free
  1315   00109C                     
  1316                           ;drivers/scr/drv_mrf24j40.c: 275:  SetLongAddr((0x206), 0x90);
  1317   00109C  0E02               	movlw	2
  1318   00109E  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  1319   0010A0  0E06               	movlw	6
  1320   0010A2  6E05               	movwf	SetLongAddr@reg_address^0,c
  1321   0010A4  0E90               	movlw	144
  1322   0010A6  6E07               	movwf	SetLongAddr@value^0,c
  1323   0010A8  EC47  F00A         	call	_SetLongAddr	;wreg free
  1324   0010AC                     
  1325                           ;drivers/scr/drv_mrf24j40.c: 276:  SetLongAddr((0x207), 0x80);
  1326   0010AC  0E02               	movlw	2
  1327   0010AE  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  1328   0010B0  0E07               	movlw	7
  1329   0010B2  6E05               	movwf	SetLongAddr@reg_address^0,c
  1330   0010B4  0E80               	movlw	128
  1331   0010B6  6E07               	movwf	SetLongAddr@value^0,c
  1332   0010B8  EC47  F00A         	call	_SetLongAddr	;wreg free
  1333   0010BC                     
  1334                           ;drivers/scr/drv_mrf24j40.c: 277:  SetLongAddr((0x208), 0x10);
  1335   0010BC  0E02               	movlw	2
  1336   0010BE  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  1337   0010C0  0E08               	movlw	8
  1338   0010C2  6E05               	movwf	SetLongAddr@reg_address^0,c
  1339   0010C4  0E10               	movlw	16
  1340   0010C6  6E07               	movwf	SetLongAddr@value^0,c
  1341   0010C8  EC47  F00A         	call	_SetLongAddr	;wreg free
  1342   0010CC                     
  1343                           ;drivers/scr/drv_mrf24j40.c: 278:  SetLongAddr((0x220), 0x21);
  1344   0010CC  0E02               	movlw	2
  1345   0010CE  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  1346   0010D0  0E20               	movlw	32
  1347   0010D2  6E05               	movwf	SetLongAddr@reg_address^0,c
  1348   0010D4  0E21               	movlw	33
  1349   0010D6  6E07               	movwf	SetLongAddr@value^0,c
  1350   0010D8  EC47  F00A         	call	_SetLongAddr	;wreg free
  1351   0010DC                     
  1352                           ;drivers/scr/drv_mrf24j40.c: 279:     SetShortAddr((0x3A), 0x80);
  1353   0010DC  0E80               	movlw	128
  1354   0010DE  6E03               	movwf	SetShortAddr@value^0,c
  1355   0010E0  0E3A               	movlw	58
  1356   0010E2  ECC5  F00A         	call	_SetShortAddr
  1357   0010E6                     
  1358                           ;drivers/scr/drv_mrf24j40.c: 280:     SetShortAddr((0x3F), 0x60);
  1359   0010E6  0E60               	movlw	96
  1360   0010E8  6E03               	movwf	SetShortAddr@value^0,c
  1361   0010EA  0E3F               	movlw	63
  1362   0010EC  ECC5  F00A         	call	_SetShortAddr
  1363   0010F0                     
  1364                           ;drivers/scr/drv_mrf24j40.c: 281:     SetShortAddr((0x3E), 0x40);
  1365   0010F0  0E40               	movlw	64
  1366   0010F2  6E03               	movwf	SetShortAddr@value^0,c
  1367   0010F4  0E3E               	movlw	62
  1368   0010F6  ECC5  F00A         	call	_SetShortAddr
  1369   0010FA                     
  1370                           ;drivers/scr/drv_mrf24j40.c: 282:     SetShortAddr((0x32), 0xF6);
  1371   0010FA  0EF6               	movlw	246
  1372   0010FC  6E03               	movwf	SetShortAddr@value^0,c
  1373   0010FE  0E32               	movlw	50
  1374   001100  ECC5  F00A         	call	_SetShortAddr
  1375   001104                     
  1376                           ;drivers/scr/drv_mrf24j40.c: 283:     SetChannel();
  1377   001104  ECCD  F009         	call	_SetChannel	;wreg free
  1378   001108                     
  1379                           ;drivers/scr/drv_mrf24j40.c: 284:  SetShortAddr((0x0D), 0x01);
  1380   001108  0E01               	movlw	1
  1381   00110A  6E03               	movwf	SetShortAddr@value^0,c
  1382   00110C  0E0D               	movlw	13
  1383   00110E  ECC5  F00A         	call	_SetShortAddr
  1384   001112                     
  1385                           ;drivers/scr/drv_mrf24j40.c: 285:  SetDeviceAddress();
  1386   001112  EC87  F00A         	call	_SetDeviceAddress	;wreg free
  1387   001116                     
  1388                           ;drivers/scr/drv_mrf24j40.c: 286:     SetDeviceMACAddress();
  1389   001116  ECFC  F009         	call	_SetDeviceMACAddress	;wreg free
  1390   00111A                     
  1391                           ;drivers/scr/drv_mrf24j40.c: 287:  SetShortAddr((0x2E), 0x95);
  1392   00111A  0E95               	movlw	149
  1393   00111C  6E03               	movwf	SetShortAddr@value^0,c
  1394   00111E  0E2E               	movlw	46
  1395   001120  ECC5  F00A         	call	_SetShortAddr
  1396   001124                     
  1397                           ;drivers/scr/drv_mrf24j40.c: 288:  SetShortAddr((0x12), 0xB9);
  1398   001124  0EB9               	movlw	185
  1399   001126  6E03               	movwf	SetShortAddr@value^0,c
  1400   001128  0E12               	movlw	18
  1401   00112A  ECC5  F00A         	call	_SetShortAddr
  1402   00112E                     
  1403                           ;drivers/scr/drv_mrf24j40.c: 297:  SetShortAddr((0x00),0x00);
  1404   00112E  0E00               	movlw	0
  1405   001130  6E03               	movwf	SetShortAddr@value^0,c
  1406   001132  0E00               	movlw	0
  1407   001134  ECC5  F00A         	call	_SetShortAddr
  1408   001138  0012               	return		;funcret
  1409   00113A                     __end_of_MRF24J40Init:
  1410                           	callstack 0
  1411                           
  1412 ;; *************** function _SetDeviceMACAddress *****************
  1413 ;; Defined at:
  1414 ;;		line 433 in file "drivers/scr/drv_mrf24j40.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;		None
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;		None
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;Total ram usage:        0 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; Hardware stack levels required when called: 3
  1435 ;; This function calls:
  1436 ;;		_SetShortAddr
  1437 ;; This function is called by:
  1438 ;;		_MRF24J40Init
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text2
  1443   0013F8                     __ptext2:
  1444                           	callstack 0
  1445   0013F8                     _SetDeviceMACAddress:
  1446                           	callstack 26
  1447   0013F8                     
  1448                           ;drivers/scr/drv_mrf24j40.c: 435:  SetShortAddr((0x05), mrf24_data_config.my_mac[0]);
  1449   0013F8  C074  F003         	movff	_mrf24_data_config+20,SetShortAddr@value
  1450   0013FC  0E05               	movlw	5
  1451   0013FE  ECC5  F00A         	call	_SetShortAddr
  1452                           
  1453                           ;drivers/scr/drv_mrf24j40.c: 436:  SetShortAddr((0x06), mrf24_data_config.my_mac[1]);
  1454   001402  C075  F003         	movff	_mrf24_data_config+21,SetShortAddr@value
  1455   001406  0E06               	movlw	6
  1456   001408  ECC5  F00A         	call	_SetShortAddr
  1457                           
  1458                           ;drivers/scr/drv_mrf24j40.c: 437:  SetShortAddr((0x07), mrf24_data_config.my_mac[2]);
  1459   00140C  C076  F003         	movff	_mrf24_data_config+22,SetShortAddr@value
  1460   001410  0E07               	movlw	7
  1461   001412  ECC5  F00A         	call	_SetShortAddr
  1462                           
  1463                           ;drivers/scr/drv_mrf24j40.c: 438:  SetShortAddr((0x08), mrf24_data_config.my_mac[3]);
  1464   001416  C077  F003         	movff	_mrf24_data_config+23,SetShortAddr@value
  1465   00141A  0E08               	movlw	8
  1466   00141C  ECC5  F00A         	call	_SetShortAddr
  1467                           
  1468                           ;drivers/scr/drv_mrf24j40.c: 439:  SetShortAddr((0x09), mrf24_data_config.my_mac[4]);
  1469   001420  C078  F003         	movff	_mrf24_data_config+24,SetShortAddr@value
  1470   001424  0E09               	movlw	9
  1471   001426  ECC5  F00A         	call	_SetShortAddr
  1472                           
  1473                           ;drivers/scr/drv_mrf24j40.c: 440:  SetShortAddr((0x0A), mrf24_data_config.my_mac[5]);
  1474   00142A  C079  F003         	movff	_mrf24_data_config+25,SetShortAddr@value
  1475   00142E  0E0A               	movlw	10
  1476   001430  ECC5  F00A         	call	_SetShortAddr
  1477                           
  1478                           ;drivers/scr/drv_mrf24j40.c: 441:  SetShortAddr((0x0B), mrf24_data_config.my_mac[6]);
  1479   001434  C07A  F003         	movff	_mrf24_data_config+26,SetShortAddr@value
  1480   001438  0E0B               	movlw	11
  1481   00143A  ECC5  F00A         	call	_SetShortAddr
  1482                           
  1483                           ;drivers/scr/drv_mrf24j40.c: 442:  SetShortAddr((0x0C), mrf24_data_config.my_mac[7]);
  1484   00143E  C07B  F003         	movff	_mrf24_data_config+27,SetShortAddr@value
  1485   001442  0E0C               	movlw	12
  1486   001444  ECC5  F00A         	call	_SetShortAddr
  1487   001448  0012               	return		;funcret
  1488   00144A                     __end_of_SetDeviceMACAddress:
  1489                           	callstack 0
  1490                           
  1491 ;; *************** function _SetDeviceAddress *****************
  1492 ;; Defined at:
  1493 ;;		line 419 in file "drivers/scr/drv_mrf24j40.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, status,0, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;Total ram usage:        0 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; Hardware stack levels required when called: 3
  1514 ;; This function calls:
  1515 ;;		_SetShortAddr
  1516 ;; This function is called by:
  1517 ;;		_MRF24J40Init
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text3
  1522   00150E                     __ptext3:
  1523                           	callstack 0
  1524   00150E                     _SetDeviceAddress:
  1525                           	callstack 26
  1526   00150E                     
  1527                           ;drivers/scr/drv_mrf24j40.c: 421:  SetShortAddr((0x04), (u_int_8) (mrf24_data_config.my_
      +                          address >> 8));
  1528   00150E  0100               	movlb	0	; () banked
  1529   001510  517F               	movf	(_mrf24_data_config+31)& (0+255),w,b
  1530   001512  6E03               	movwf	SetShortAddr@value^0,c
  1531   001514  0E04               	movlw	4
  1532   001516  ECC5  F00A         	call	_SetShortAddr
  1533                           
  1534                           ;drivers/scr/drv_mrf24j40.c: 422:  SetShortAddr((0x03), (u_int_8) (mrf24_data_config.my_
      +                          address));
  1535   00151A  C07E  F003         	movff	_mrf24_data_config+30,SetShortAddr@value
  1536   00151E  0E03               	movlw	3
  1537   001520  ECC5  F00A         	call	_SetShortAddr
  1538                           
  1539                           ;drivers/scr/drv_mrf24j40.c: 423:  SetShortAddr((0x02), (u_int_8) (mrf24_data_config.my_
      +                          panid >> 8));
  1540   001524  0100               	movlb	0	; () banked
  1541   001526  517D               	movf	(_mrf24_data_config+29)& (0+255),w,b
  1542   001528  6E03               	movwf	SetShortAddr@value^0,c
  1543   00152A  0E02               	movlw	2
  1544   00152C  ECC5  F00A         	call	_SetShortAddr
  1545                           
  1546                           ;drivers/scr/drv_mrf24j40.c: 424:  SetShortAddr((0x01), (u_int_8) (mrf24_data_config.my_
      +                          panid));
  1547   001530  C07C  F003         	movff	_mrf24_data_config+28,SetShortAddr@value
  1548   001534  0E01               	movlw	1
  1549   001536  ECC5  F00A         	call	_SetShortAddr
  1550   00153A  0012               	return		;funcret
  1551   00153C                     __end_of_SetDeviceAddress:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _SetChannel *****************
  1555 ;; Defined at:
  1556 ;;		line 398 in file "drivers/scr/drv_mrf24j40.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  aux             1    9[COMRAM] unsigned char 
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;Total ram usage:        1 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 3
  1577 ;; This function calls:
  1578 ;;		_GetLongAddr
  1579 ;;		_SetLongAddr
  1580 ;;		_SetShortAddr
  1581 ;; This function is called by:
  1582 ;;		_MRF24J40Init
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           	psect	text4
  1587   00139A                     __ptext4:
  1588                           	callstack 0
  1589   00139A                     _SetChannel:
  1590                           	callstack 26
  1591   00139A                     
  1592                           ;drivers/scr/drv_mrf24j40.c: 401:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  1593   00139A  0E02               	movlw	2
  1594   00139C  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  1595   00139E  0E00               	movlw	0
  1596   0013A0  6E05               	movwf	SetLongAddr@reg_address^0,c
  1597   0013A2  C063  F007         	movff	_mrf24_data_config+3,SetLongAddr@value
  1598   0013A6  EC47  F00A         	call	_SetLongAddr	;wreg free
  1599                           
  1600                           ;drivers/scr/drv_mrf24j40.c: 402:     SetLongAddr((0x203), (0XC0) | (0X38));
  1601   0013AA  0E02               	movlw	2
  1602   0013AC  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  1603   0013AE  0E03               	movlw	3
  1604   0013B0  6E05               	movwf	SetLongAddr@reg_address^0,c
  1605   0013B2  0EF8               	movlw	248
  1606   0013B4  6E07               	movwf	SetLongAddr@value^0,c
  1607   0013B6  EC47  F00A         	call	_SetLongAddr	;wreg free
  1608                           
  1609                           ;drivers/scr/drv_mrf24j40.c: 403:  SetShortAddr((0x36), 0x04);
  1610   0013BA  0E04               	movlw	4
  1611   0013BC  6E03               	movwf	SetShortAddr@value^0,c
  1612   0013BE  0E36               	movlw	54
  1613   0013C0  ECC5  F00A         	call	_SetShortAddr
  1614                           
  1615                           ;drivers/scr/drv_mrf24j40.c: 404:  SetShortAddr((0x36), 0x00);
  1616   0013C4  0E00               	movlw	0
  1617   0013C6  6E03               	movwf	SetShortAddr@value^0,c
  1618   0013C8  0E36               	movlw	54
  1619   0013CA  ECC5  F00A         	call	_SetShortAddr
  1620   0013CE                     
  1621                           ;drivers/scr/drv_mrf24j40.c: 405:  _delay((unsigned long)((192)*(16000000/4000000.0)));;
  1622   0013CE  0E00               	movlw	0
  1623   0013D0                     u567:
  1624   0013D0  2EE8               	decfsz	wreg,f,c
  1625   0013D2  D7FE               	bra	u567
  1626   0013D4                     l1490:
  1627                           
  1628                           ;drivers/scr/drv_mrf24j40.c: 409:   aux = GetLongAddr((0x20f));
  1629   0013D4  0E02               	movlw	2
  1630   0013D6  6E06               	movwf	(GetLongAddr@reg_address+1)^0,c
  1631   0013D8  0E0F               	movlw	15
  1632   0013DA  6E05               	movwf	GetLongAddr@reg_address^0,c
  1633   0013DC  EC25  F00A         	call	_GetLongAddr	;wreg free
  1634   0013E0  6E0A               	movwf	SetChannel@aux^0,c
  1635   0013E2                     
  1636                           ;drivers/scr/drv_mrf24j40.c: 410:  }while((aux & 0xA0) != 0xA0);
  1637   0013E2  500A               	movf	SetChannel@aux^0,w,c
  1638   0013E4  0BA0               	andlw	160
  1639   0013E6  0AA0               	xorlw	160
  1640   0013E8  A4D8               	btfss	status,2,c
  1641   0013EA  EFF9  F009         	goto	u361
  1642   0013EE  EFFB  F009         	goto	u360
  1643   0013F2                     u361:
  1644   0013F2  EFEA  F009         	goto	l1490
  1645   0013F6                     u360:
  1646   0013F6  0012               	return		;funcret
  1647   0013F8                     __end_of_SetChannel:
  1648                           	callstack 0
  1649                           
  1650 ;; *************** function _GetLongAddr *****************
  1651 ;; Defined at:
  1652 ;;		line 380 in file "drivers/scr/drv_mrf24j40.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  reg_address     2    4[COMRAM] unsigned int 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  toReturn        1    8[COMRAM] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      unsigned char 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2, status,0, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1666 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;Total ram usage:        5 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 2
  1673 ;; This function calls:
  1674 ;;		_ReadByteSPIPort
  1675 ;;		_SetCSPin
  1676 ;;		_Write2ByteSPIPort
  1677 ;; This function is called by:
  1678 ;;		_SetChannel
  1679 ;;		_ReciboPaquete
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text5
  1684   00144A                     __ptext5:
  1685                           	callstack 0
  1686   00144A                     _GetLongAddr:
  1687                           	callstack 26
  1688   00144A                     
  1689                           ;drivers/scr/drv_mrf24j40.c: 382:  u_int_8 toReturn;;drivers/scr/drv_mrf24j40.c: 383:   
      +                            reg_address = (reg_address << 5) | 0x8000;
  1690   00144A  C005  F007         	movff	GetLongAddr@reg_address,??_GetLongAddr
  1691   00144E  C006  F008         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  1692   001452  0E05               	movlw	5
  1693   001454                     u335:
  1694   001454  90D8               	bcf	status,0,c
  1695   001456  3607               	rlcf	??_GetLongAddr^0,f,c
  1696   001458  3608               	rlcf	(??_GetLongAddr+1)^0,f,c
  1697   00145A  2EE8               	decfsz	wreg,f,c
  1698   00145C  EF2A  F00A         	goto	u335
  1699   001460  0E00               	movlw	0
  1700   001462  1007               	iorwf	??_GetLongAddr^0,w,c
  1701   001464  6E05               	movwf	GetLongAddr@reg_address^0,c
  1702   001466  0E80               	movlw	128
  1703   001468  1008               	iorwf	(??_GetLongAddr+1)^0,w,c
  1704   00146A  6E06               	movwf	(GetLongAddr@reg_address+1)^0,c
  1705   00146C                     
  1706                           ;drivers/scr/drv_mrf24j40.c: 384:     SetCSPin(0);
  1707   00146C  0E00               	movlw	0
  1708   00146E  EC1D  F00B         	call	_SetCSPin
  1709   001472                     
  1710                           ;drivers/scr/drv_mrf24j40.c: 387: Write2ByteSPIPort(reg_address);
  1711   001472  C005  F003         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  1712   001476  C006  F004         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  1713   00147A  EC16  F00B         	call	_Write2ByteSPIPort	;wreg free
  1714   00147E                     
  1715                           ;drivers/scr/drv_mrf24j40.c: 388:  toReturn = ReadByteSPIPort();
  1716   00147E  EC29  F00B         	call	_ReadByteSPIPort	;wreg free
  1717   001482  6E09               	movwf	GetLongAddr@toReturn^0,c
  1718   001484                     
  1719                           ;drivers/scr/drv_mrf24j40.c: 389:     SetCSPin(1);
  1720   001484  0E01               	movlw	1
  1721   001486  EC1D  F00B         	call	_SetCSPin
  1722   00148A                     
  1723                           ;drivers/scr/drv_mrf24j40.c: 390:  return toReturn;
  1724   00148A  5009               	movf	GetLongAddr@toReturn^0,w,c
  1725   00148C  0012               	return		;funcret
  1726   00148E                     __end_of_GetLongAddr:
  1727                           	callstack 0
  1728                           
  1729 ;; *************** function _ReadByteSPIPort *****************
  1730 ;; Defined at:
  1731 ;;		line 93 in file "drivers/scr/drv_mrf24j40_port.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      unsigned char 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 1
  1752 ;; This function calls:
  1753 ;;		_SPIRead
  1754 ;; This function is called by:
  1755 ;;		_GetLongAddr
  1756 ;;		_GetShortAddr
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text6
  1761   001652                     __ptext6:
  1762                           	callstack 0
  1763   001652                     _ReadByteSPIPort:
  1764                           	callstack 26
  1765   001652                     
  1766                           ;drivers/scr/drv_mrf24j40_port.c: 95:     return SPIRead();
  1767   001652  ECFD  F00A         	call	_SPIRead	;wreg free
  1768   001656  0012               	return		;funcret
  1769   001658                     __end_of_ReadByteSPIPort:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _SPIRead *****************
  1773 ;; Defined at:
  1774 ;;		line 82 in file "drivers/scr/drv_mspi_port.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      unsigned char 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_ReadByteSPIPort
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text7
  1802   0015FA                     __ptext7:
  1803                           	callstack 0
  1804   0015FA                     _SPIRead:
  1805                           	callstack 26
  1806   0015FA                     
  1807                           ;drivers/scr/drv_mspi_port.c: 84:     SSPCON1bits.WCOL = 0;
  1808   0015FA  9EC6               	bcf	198,7,c	;volatile
  1809                           
  1810                           ;drivers/scr/drv_mspi_port.c: 85:     SSPBUF = 0x00;
  1811   0015FC  6AC9               	clrf	201,c	;volatile
  1812   0015FE                     l174:
  1813   0015FE  A0C7               	btfss	199,0,c	;volatile
  1814   001600  EF04  F00B         	goto	u301
  1815   001604  EF06  F00B         	goto	u300
  1816   001608                     u301:
  1817   001608  EFFF  F00A         	goto	l174
  1818   00160C                     u300:
  1819   00160C                     
  1820                           ;drivers/scr/drv_mspi_port.c: 87:     return SSPBUF;
  1821   00160C  50C9               	movf	201,w,c	;volatile
  1822   00160E  0012               	return		;funcret
  1823   001610                     __end_of_SPIRead:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _InicializoVariables *****************
  1827 ;; Defined at:
  1828 ;;		line 307 in file "drivers/scr/drv_mrf24j40.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  i               2    1[COMRAM] int 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;Total ram usage:        3 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; This function calls:
  1849 ;;		Nothing
  1850 ;; This function is called by:
  1851 ;;		_MRF24J40Init
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text8
  1856   0012FC                     __ptext8:
  1857                           	callstack 0
  1858   0012FC                     _InicializoVariables:
  1859                           	callstack 29
  1860   0012FC                     
  1861                           ;drivers/scr/drv_mrf24j40.c: 309:     for(int i = 0; i < 16; i++){
  1862   0012FC  0E00               	movlw	0
  1863   0012FE  6E03               	movwf	(InicializoVariables@i+1)^0,c
  1864   001300  0E00               	movlw	0
  1865   001302  6E02               	movwf	InicializoVariables@i^0,c
  1866   001304                     l1460:
  1867                           
  1868                           ;drivers/scr/drv_mrf24j40.c: 311:         if(i < 8)
  1869   001304  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  1870   001306  EF90  F009         	goto	u340
  1871   00130A  5003               	movf	(InicializoVariables@i+1)^0,w,c
  1872   00130C  E107               	bnz	u341
  1873   00130E  0E08               	movlw	8
  1874   001310  5C02               	subwf	InicializoVariables@i^0,w,c
  1875   001312  B0D8               	btfsc	status,0,c
  1876   001314  EF8E  F009         	goto	u341
  1877   001318  EF90  F009         	goto	u340
  1878   00131C                     u341:
  1879   00131C  EF9C  F009         	goto	l42
  1880   001320                     u340:
  1881   001320                     
  1882                           ;drivers/scr/drv_mrf24j40.c: 312:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  1883   001320  5002               	movf	InicializoVariables@i^0,w,c
  1884   001322  0F11               	addlw	low _default_mac_address
  1885   001324  6E01               	movwf	??_InicializoVariables^0,c
  1886   001326  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  1887   00132A                     	if	0	;There is only one active tblptr byte
  1888   00132A                     	endif
  1889   00132A                     	if	0	;tblptru may be non-zero
  1890   00132A                     	endif
  1891   00132A                     	if	0	;tblptru may be non-zero
  1892   00132A                     	endif
  1893   00132A  5002               	movf	InicializoVariables@i^0,w,c
  1894   00132C  0F74               	addlw	low (_mrf24_data_config+20)
  1895   00132E  6ED9               	movwf	fsr2l,c
  1896   001330  6ADA               	clrf	fsr2h,c
  1897   001332  0008               	tblrd		*
  1898   001334  CFF5 FFDF          	movff	tablat,indf2
  1899   001338                     l42:
  1900                           
  1901                           ;drivers/scr/drv_mrf24j40.c: 313:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  1902   001338  5002               	movf	InicializoVariables@i^0,w,c
  1903   00133A  0F01               	addlw	low _default_security_key
  1904   00133C  6E01               	movwf	??_InicializoVariables^0,c
  1905   00133E  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  1906   001342                     	if	0	;There is only one active tblptr byte
  1907   001342                     	endif
  1908   001342                     	if	0	;tblptru may be non-zero
  1909   001342                     	endif
  1910   001342                     	if	0	;tblptru may be non-zero
  1911   001342                     	endif
  1912   001342  5002               	movf	InicializoVariables@i^0,w,c
  1913   001344  0F64               	addlw	low (_mrf24_data_config+4)
  1914   001346  6ED9               	movwf	fsr2l,c
  1915   001348  6ADA               	clrf	fsr2h,c
  1916   00134A  0008               	tblrd		*
  1917   00134C  CFF5 FFDF          	movff	tablat,indf2
  1918   001350                     
  1919                           ;drivers/scr/drv_mrf24j40.c: 314:     }
  1920   001350  4A02               	infsnz	InicializoVariables@i^0,f,c
  1921   001352  2A03               	incf	(InicializoVariables@i+1)^0,f,c
  1922   001354  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  1923   001356  EFB6  F009         	goto	u351
  1924   00135A  5003               	movf	(InicializoVariables@i+1)^0,w,c
  1925   00135C  E109               	bnz	u350
  1926   00135E  0E10               	movlw	16
  1927   001360  5C02               	subwf	InicializoVariables@i^0,w,c
  1928   001362  A0D8               	btfss	status,0,c
  1929   001364  EFB6  F009         	goto	u351
  1930   001368  EFB8  F009         	goto	u350
  1931   00136C                     u351:
  1932   00136C  EF82  F009         	goto	l1460
  1933   001370                     u350:
  1934   001370                     
  1935                           ;drivers/scr/drv_mrf24j40.c: 315:     mrf24_data_config.sequence_number = 0x68;
  1936   001370  0E68               	movlw	104
  1937   001372  0100               	movlb	0	; () banked
  1938   001374  6F62               	movwf	(_mrf24_data_config+2)& (0+255),b
  1939                           
  1940                           ;drivers/scr/drv_mrf24j40.c: 316:     mrf24_data_config.my_channel = CH_11;
  1941   001376  0E03               	movlw	3
  1942   001378  6F63               	movwf	(_mrf24_data_config+3)& (0+255),b
  1943   00137A                     
  1944                           ; BSR set to: 0
  1945                           ;drivers/scr/drv_mrf24j40.c: 317:     mrf24_data_config.get_new_msg = 0;
  1946   00137A  6B60               	clrf	_mrf24_data_config& (0+255),b
  1947   00137C                     
  1948                           ; BSR set to: 0
  1949                           ;drivers/scr/drv_mrf24j40.c: 318:     mrf24_data_config.put_new_msg = 0;
  1950   00137C  6B61               	clrf	(_mrf24_data_config+1)& (0+255),b
  1951                           
  1952                           ;drivers/scr/drv_mrf24j40.c: 319:     mrf24_data_config.my_panid = 0x1234;
  1953   00137E  0E12               	movlw	18
  1954   001380  6F7D               	movwf	(_mrf24_data_config+29)& (0+255),b
  1955   001382  0E34               	movlw	52
  1956   001384  6F7C               	movwf	(_mrf24_data_config+28)& (0+255),b
  1957                           
  1958                           ;drivers/scr/drv_mrf24j40.c: 320:     mrf24_data_config.my_address = 0x0001;
  1959   001386  0E00               	movlw	0
  1960   001388  6F7F               	movwf	(_mrf24_data_config+31)& (0+255),b
  1961   00138A  0E01               	movlw	1
  1962   00138C  6F7E               	movwf	(_mrf24_data_config+30)& (0+255),b
  1963                           
  1964                           ;drivers/scr/drv_mrf24j40.c: 321:     mrf24_data_config.intervalo = 0x2222;
  1965   00138E  0E22               	movlw	34
  1966   001390  6F81               	movwf	(_mrf24_data_config+33)& (0+255),b
  1967   001392  0E22               	movlw	34
  1968   001394  6F80               	movwf	(_mrf24_data_config+32)& (0+255),b
  1969   001396                     
  1970                           ; BSR set to: 0
  1971                           ;drivers/scr/drv_mrf24j40.c: 322:     mrf24_data_config.buffer_entrada[0] = 0;
  1972   001396  6B82               	clrf	(_mrf24_data_config+34)& (0+255),b
  1973   001398                     
  1974                           ; BSR set to: 0
  1975   001398  0012               	return		;funcret
  1976   00139A                     __end_of_InicializoVariables:
  1977                           	callstack 0
  1978                           
  1979 ;; *************** function _InicializoPines *****************
  1980 ;; Defined at:
  1981 ;;		line 21 in file "drivers/scr/drv_mrf24j40_port.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;		None
  1984 ;; Auto vars:     Size  Location     Type
  1985 ;;		None
  1986 ;; Return value:  Size  Location     Type
  1987 ;;                  1    wreg      void 
  1988 ;; Registers used:
  1989 ;;		wreg, cstack
  1990 ;; Tracked objects:
  1991 ;;		On entry : 0/0
  1992 ;;		On exit  : 0/0
  1993 ;;		Unchanged: 0/0
  1994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;Total ram usage:        0 bytes
  2000 ;; Hardware stack levels used: 1
  2001 ;; Hardware stack levels required when called: 1
  2002 ;; This function calls:
  2003 ;;		_SetCSPin
  2004 ;;		_SetResetPin
  2005 ;;		_SetWakePin
  2006 ;; This function is called by:
  2007 ;;		_MRF24J40Init
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text9
  2012   0015AA                     __ptext9:
  2013                           	callstack 0
  2014   0015AA                     _InicializoPines:
  2015                           	callstack 28
  2016   0015AA                     
  2017                           ;drivers/scr/drv_mrf24j40_port.c: 23:     TRISBbits.TRISB0 = 1;
  2018   0015AA  8093               	bsf	147,0,c	;volatile
  2019                           
  2020                           ;drivers/scr/drv_mrf24j40_port.c: 24:     TRISCbits.TRISC6 = 0;
  2021   0015AC  9C94               	bcf	148,6,c	;volatile
  2022                           
  2023                           ;drivers/scr/drv_mrf24j40_port.c: 25:     TRISCbits.TRISC7 = 0;
  2024   0015AE  9E94               	bcf	148,7,c	;volatile
  2025                           
  2026                           ;drivers/scr/drv_mrf24j40_port.c: 26:     TRISDbits.TRISD4 = 0;
  2027   0015B0  9895               	bcf	149,4,c	;volatile
  2028   0015B2                     
  2029                           ;drivers/scr/drv_mrf24j40_port.c: 27:     SetCSPin(1);
  2030   0015B2  0E01               	movlw	1
  2031   0015B4  EC1D  F00B         	call	_SetCSPin
  2032                           
  2033                           ;drivers/scr/drv_mrf24j40_port.c: 28:     SetWakePin(1);
  2034   0015B8  0E01               	movlw	1
  2035   0015BA  EC08  F00B         	call	_SetWakePin
  2036                           
  2037                           ;drivers/scr/drv_mrf24j40_port.c: 29:     SetResetPin(0);
  2038   0015BE  0E00               	movlw	0
  2039   0015C0  EC0F  F00B         	call	_SetResetPin
  2040   0015C4  0012               	return		;funcret
  2041   0015C6                     __end_of_InicializoPines:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function _SetWakePin *****************
  2045 ;; Defined at:
  2046 ;;		line 49 in file "drivers/scr/drv_mrf24j40_port.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  estado          1    wreg     _Bool 
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;  estado          1    0[COMRAM] _Bool 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  1    wreg      void 
  2053 ;; Registers used:
  2054 ;;		wreg
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2063 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2064 ;;Total ram usage:        1 bytes
  2065 ;; Hardware stack levels used: 1
  2066 ;; This function calls:
  2067 ;;		Nothing
  2068 ;; This function is called by:
  2069 ;;		_InicializoPines
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text10
  2074   001610                     __ptext10:
  2075                           	callstack 0
  2076   001610                     _SetWakePin:
  2077                           	callstack 28
  2078                           
  2079                           ;incstack = 0
  2080                           ;SetWakePin@estado stored from wreg
  2081   001610  6E01               	movwf	SetWakePin@estado^0,c
  2082   001612                     
  2083                           ;drivers/scr/drv_mrf24j40_port.c: 51:     LATCbits.LATC7 = estado;
  2084   001612  B001               	btfsc	SetWakePin@estado^0,0,c
  2085   001614  D002               	bra	u95
  2086   001616  9E8B               	bcf	139,7,c	;volatile
  2087   001618  D001               	bra	u96
  2088   00161A                     u95:
  2089   00161A  8E8B               	bsf	139,7,c	;volatile
  2090   00161C                     u96:
  2091   00161C  0012               	return		;funcret
  2092   00161E                     __end_of_SetWakePin:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _SetResetPin *****************
  2096 ;; Defined at:
  2097 ;;		line 60 in file "drivers/scr/drv_mrf24j40_port.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;  estado          1    wreg     _Bool 
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  estado          1    0[COMRAM] _Bool 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  1    wreg      void 
  2104 ;; Registers used:
  2105 ;;		wreg
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2112 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;Total ram usage:        1 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_MRF24J40Init
  2121 ;;		_InicializoPines
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text11
  2126   00161E                     __ptext11:
  2127                           	callstack 0
  2128   00161E                     _SetResetPin:
  2129                           	callstack 29
  2130                           
  2131                           ;incstack = 0
  2132                           ;SetResetPin@estado stored from wreg
  2133   00161E  6E01               	movwf	SetResetPin@estado^0,c
  2134   001620                     
  2135                           ;drivers/scr/drv_mrf24j40_port.c: 62:     LATDbits.LATD4 = estado;
  2136   001620  B001               	btfsc	SetResetPin@estado^0,0,c
  2137   001622  D002               	bra	u65
  2138   001624  988C               	bcf	140,4,c	;volatile
  2139   001626  D001               	bra	u66
  2140   001628                     u65:
  2141   001628  888C               	bsf	140,4,c	;volatile
  2142   00162A                     u66:
  2143   00162A  0012               	return		;funcret
  2144   00162C                     __end_of_SetResetPin:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _EnviarDato *****************
  2148 ;; Defined at:
  2149 ;;		line 511 in file "drivers/scr/drv_mrf24j40.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  pos             1   10[COMRAM] unsigned char 
  2154 ;;  i               1    9[COMRAM] unsigned char 
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;Total ram usage:        2 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 3
  2171 ;; This function calls:
  2172 ;;		_SetLongAddr
  2173 ;;		_SetShortAddr
  2174 ;; This function is called by:
  2175 ;;		_main
  2176 ;; This function uses a non-reentrant model
  2177 ;;
  2178                           
  2179                           	psect	text12
  2180   00113A                     __ptext12:
  2181                           	callstack 0
  2182   00113A                     _EnviarDato:
  2183                           	callstack 27
  2184   00113A                     
  2185                           ;drivers/scr/drv_mrf24j40.c: 516:  u_int_8 pos = 0;
  2186   00113A  6A0B               	clrf	EnviarDato@pos^0,c
  2187   00113C                     
  2188                           ;drivers/scr/drv_mrf24j40.c: 519:  SetLongAddr(pos++, i);
  2189   00113C  0E00               	movlw	0
  2190   00113E  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  2191   001140  0E00               	movlw	0
  2192   001142  6E05               	movwf	SetLongAddr@reg_address^0,c
  2193   001144  0E0F               	movlw	15
  2194   001146  6E07               	movwf	SetLongAddr@value^0,c
  2195   001148  EC47  F00A         	call	_SetLongAddr	;wreg free
  2196   00114C  2A0B               	incf	EnviarDato@pos^0,f,c
  2197   00114E                     
  2198                           ;drivers/scr/drv_mrf24j40.c: 520:  SetLongAddr(pos++, mrf24_data_out.tamano_mensaje + i)
      +                          ;
  2199   00114E  C00B  F005         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2200   001152  6A06               	clrf	(SetLongAddr@reg_address+1)^0,c
  2201   001154  5013               	movf	(_mrf24_data_out+4)^0,w,c
  2202   001156  0F0F               	addlw	15
  2203   001158  6E07               	movwf	SetLongAddr@value^0,c
  2204   00115A  EC47  F00A         	call	_SetLongAddr	;wreg free
  2205   00115E  2A0B               	incf	EnviarDato@pos^0,f,c
  2206   001160                     
  2207                           ;drivers/scr/drv_mrf24j40.c: 521:  SetLongAddr(pos++, (0X01)|(0X20)|(0X40));
  2208   001160  C00B  F005         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2209   001164  6A06               	clrf	(SetLongAddr@reg_address+1)^0,c
  2210   001166  0E61               	movlw	97
  2211   001168  6E07               	movwf	SetLongAddr@value^0,c
  2212   00116A  EC47  F00A         	call	_SetLongAddr	;wreg free
  2213   00116E  2A0B               	incf	EnviarDato@pos^0,f,c
  2214   001170                     
  2215                           ;drivers/scr/drv_mrf24j40.c: 522:  SetLongAddr(pos++, (0XC0)|(0X08));
  2216   001170  C00B  F005         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2217   001174  6A06               	clrf	(SetLongAddr@reg_address+1)^0,c
  2218   001176  0EC8               	movlw	200
  2219   001178  6E07               	movwf	SetLongAddr@value^0,c
  2220   00117A  EC47  F00A         	call	_SetLongAddr	;wreg free
  2221   00117E  2A0B               	incf	EnviarDato@pos^0,f,c
  2222   001180                     
  2223                           ;drivers/scr/drv_mrf24j40.c: 523:  SetLongAddr(pos++, mrf24_data_config.sequence_number+
      +                          +);
  2224   001180  C00B  F005         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2225   001184  6A06               	clrf	(SetLongAddr@reg_address+1)^0,c
  2226   001186  EE20  F062         	lfsr	2,_mrf24_data_config+2
  2227   00118A  50DF               	movf	indf2,w,c
  2228   00118C  2ADF               	incf	indf2,f,c
  2229   00118E  6E07               	movwf	SetLongAddr@value^0,c
  2230   001190  EC47  F00A         	call	_SetLongAddr	;wreg free
  2231   001194  2A0B               	incf	EnviarDato@pos^0,f,c
  2232   001196                     
  2233                           ;drivers/scr/drv_mrf24j40.c: 524:  SetLongAddr(pos++, (u_int_8) mrf24_data_out.destinity
      +                          _panid);
  2234   001196  C00B  F005         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2235   00119A  6A06               	clrf	(SetLongAddr@reg_address+1)^0,c
  2236   00119C  C00F  F007         	movff	_mrf24_data_out,SetLongAddr@value
  2237   0011A0  EC47  F00A         	call	_SetLongAddr	;wreg free
  2238   0011A4  2A0B               	incf	EnviarDato@pos^0,f,c
  2239   0011A6                     
  2240                           ;drivers/scr/drv_mrf24j40.c: 525:  SetLongAddr(pos++, (u_int_8) (mrf24_data_out.destinit
      +                          y_panid >> 8));
  2241   0011A6  C00B  F005         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2242   0011AA  6A06               	clrf	(SetLongAddr@reg_address+1)^0,c
  2243   0011AC  5010               	movf	(_mrf24_data_out+1)^0,w,c
  2244   0011AE  6E07               	movwf	SetLongAddr@value^0,c
  2245   0011B0  EC47  F00A         	call	_SetLongAddr	;wreg free
  2246   0011B4  2A0B               	incf	EnviarDato@pos^0,f,c
  2247   0011B6                     
  2248                           ;drivers/scr/drv_mrf24j40.c: 526:  SetLongAddr(pos++, (u_int_8) mrf24_data_out.destinity
      +                          _address);
  2249   0011B6  C00B  F005         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2250   0011BA  6A06               	clrf	(SetLongAddr@reg_address+1)^0,c
  2251   0011BC  C011  F007         	movff	_mrf24_data_out+2,SetLongAddr@value
  2252   0011C0  EC47  F00A         	call	_SetLongAddr	;wreg free
  2253   0011C4  2A0B               	incf	EnviarDato@pos^0,f,c
  2254   0011C6                     
  2255                           ;drivers/scr/drv_mrf24j40.c: 527:  SetLongAddr(pos++, (u_int_8) (mrf24_data_out.destinit
      +                          y_address >> 8));
  2256   0011C6  C00B  F005         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2257   0011CA  6A06               	clrf	(SetLongAddr@reg_address+1)^0,c
  2258   0011CC  5012               	movf	(_mrf24_data_out+3)^0,w,c
  2259   0011CE  6E07               	movwf	SetLongAddr@value^0,c
  2260   0011D0  EC47  F00A         	call	_SetLongAddr	;wreg free
  2261   0011D4  2A0B               	incf	EnviarDato@pos^0,f,c
  2262   0011D6                     
  2263                           ;drivers/scr/drv_mrf24j40.c: 528:  for(i = 0; i < 8; i++)
  2264   0011D6  6A0A               	clrf	EnviarDato@i^0,c
  2265   0011D8                     l1600:
  2266                           
  2267                           ;drivers/scr/drv_mrf24j40.c: 529:  {;drivers/scr/drv_mrf24j40.c: 530:   SetLongAddr(pos+
      +                          +, mrf24_data_config.my_mac[i]);
  2268   0011D8  C00B  F005         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2269   0011DC  6A06               	clrf	(SetLongAddr@reg_address+1)^0,c
  2270   0011DE  500A               	movf	EnviarDato@i^0,w,c
  2271   0011E0  0F74               	addlw	low (_mrf24_data_config+20)
  2272   0011E2  6ED9               	movwf	fsr2l,c
  2273   0011E4  6ADA               	clrf	fsr2h,c
  2274   0011E6  50DF               	movf	indf2,w,c
  2275   0011E8  6E07               	movwf	SetLongAddr@value^0,c
  2276   0011EA  EC47  F00A         	call	_SetLongAddr	;wreg free
  2277   0011EE  2A0B               	incf	EnviarDato@pos^0,f,c
  2278   0011F0                     
  2279                           ;drivers/scr/drv_mrf24j40.c: 531:  }
  2280   0011F0  2A0A               	incf	EnviarDato@i^0,f,c
  2281   0011F2  0E07               	movlw	7
  2282   0011F4  640A               	cpfsgt	EnviarDato@i^0,c
  2283   0011F6  EFFF  F008         	goto	u371
  2284   0011FA  EF01  F009         	goto	u370
  2285   0011FE                     u371:
  2286   0011FE  EFEC  F008         	goto	l1600
  2287   001202                     u370:
  2288   001202                     
  2289                           ;drivers/scr/drv_mrf24j40.c: 532:  for(i = 0; i < mrf24_data_out.tamano_mensaje; i++)
  2290   001202  6A0A               	clrf	EnviarDato@i^0,c
  2291   001204  EF13  F009         	goto	l1614
  2292   001208                     l1608:
  2293                           
  2294                           ;drivers/scr/drv_mrf24j40.c: 533:  {;drivers/scr/drv_mrf24j40.c: 534:   SetLongAddr(pos+
      +                          +, mrf24_data_out.buffer_salida[i]);
  2295   001208  C00B  F005         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2296   00120C  6A06               	clrf	(SetLongAddr@reg_address+1)^0,c
  2297   00120E  500A               	movf	EnviarDato@i^0,w,c
  2298   001210  2414               	addwf	(_mrf24_data_out+5)^0,w,c
  2299   001212  6ED9               	movwf	fsr2l,c
  2300   001214  0E00               	movlw	0
  2301   001216  2015               	addwfc	(_mrf24_data_out+6)^0,w,c
  2302   001218  6EDA               	movwf	fsr2h,c
  2303   00121A  50DF               	movf	indf2,w,c
  2304   00121C  6E07               	movwf	SetLongAddr@value^0,c
  2305   00121E  EC47  F00A         	call	_SetLongAddr	;wreg free
  2306   001222  2A0B               	incf	EnviarDato@pos^0,f,c
  2307   001224                     
  2308                           ;drivers/scr/drv_mrf24j40.c: 535:  }
  2309   001224  2A0A               	incf	EnviarDato@i^0,f,c
  2310   001226                     l1614:
  2311   001226  5013               	movf	(_mrf24_data_out+4)^0,w,c
  2312   001228  5C0A               	subwf	EnviarDato@i^0,w,c
  2313   00122A  A0D8               	btfss	status,0,c
  2314   00122C  EF1A  F009         	goto	u381
  2315   001230  EF1C  F009         	goto	u380
  2316   001234                     u381:
  2317   001234  EF04  F009         	goto	l1608
  2318   001238                     u380:
  2319   001238                     
  2320                           ;drivers/scr/drv_mrf24j40.c: 536:  SetShortAddr((0x1B), 1 | (0X04));
  2321   001238  0E05               	movlw	5
  2322   00123A  6E03               	movwf	SetShortAddr@value^0,c
  2323   00123C  0E1B               	movlw	27
  2324   00123E  ECC5  F00A         	call	_SetShortAddr
  2325   001242  0012               	return		;funcret
  2326   001244                     __end_of_EnviarDato:
  2327                           	callstack 0
  2328                           
  2329 ;; *************** function _SetShortAddr *****************
  2330 ;; Defined at:
  2331 ;;		line 332 in file "drivers/scr/drv_mrf24j40.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  reg_address     1    wreg     unsigned char 
  2334 ;;  value           1    2[COMRAM] unsigned char 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  reg_address     1    3[COMRAM] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  1    wreg      void 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2346 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;Total ram usage:        2 bytes
  2351 ;; Hardware stack levels used: 1
  2352 ;; Hardware stack levels required when called: 2
  2353 ;; This function calls:
  2354 ;;		_SetCSPin
  2355 ;;		_WriteByteSPIPort
  2356 ;; This function is called by:
  2357 ;;		_MRF24J40Init
  2358 ;;		_SetChannel
  2359 ;;		_SetDeviceAddress
  2360 ;;		_SetDeviceMACAddress
  2361 ;;		_EnviarDato
  2362 ;;		_EnviarDatoEncriptado
  2363 ;;		_EnviarComando
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text13
  2368   00158A                     __ptext13:
  2369                           	callstack 0
  2370   00158A                     _SetShortAddr:
  2371                           	callstack 27
  2372                           
  2373                           ;incstack = 0
  2374                           ;SetShortAddr@reg_address stored from wreg
  2375   00158A  6E04               	movwf	SetShortAddr@reg_address^0,c
  2376   00158C                     
  2377                           ;drivers/scr/drv_mrf24j40.c: 334:     reg_address = (u_int_8) (reg_address << 1) | 0x01;
  2378   00158C  80D8               	bsf	status,0,c
  2379   00158E  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  2380   001590                     
  2381                           ;drivers/scr/drv_mrf24j40.c: 335:     SetCSPin(0);
  2382   001590  0E00               	movlw	0
  2383   001592  EC1D  F00B         	call	_SetCSPin
  2384   001596                     
  2385                           ;drivers/scr/drv_mrf24j40.c: 336:  WriteByteSPIPort(reg_address);
  2386   001596  5004               	movf	SetShortAddr@reg_address^0,w,c
  2387   001598  EC24  F00B         	call	_WriteByteSPIPort
  2388   00159C                     
  2389                           ;drivers/scr/drv_mrf24j40.c: 337:  WriteByteSPIPort(value);
  2390   00159C  5003               	movf	SetShortAddr@value^0,w,c
  2391   00159E  EC24  F00B         	call	_WriteByteSPIPort
  2392   0015A2                     
  2393                           ;drivers/scr/drv_mrf24j40.c: 338:     SetCSPin(1);
  2394   0015A2  0E01               	movlw	1
  2395   0015A4  EC1D  F00B         	call	_SetCSPin
  2396   0015A8  0012               	return		;funcret
  2397   0015AA                     __end_of_SetShortAddr:
  2398                           	callstack 0
  2399                           
  2400 ;; *************** function _SetLongAddr *****************
  2401 ;; Defined at:
  2402 ;;		line 363 in file "drivers/scr/drv_mrf24j40.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  reg_address     2    4[COMRAM] unsigned int 
  2405 ;;  value           1    6[COMRAM] unsigned char 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;		None
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg, status,2, status,0, cstack
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2417 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2420 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;Total ram usage:        5 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 2
  2424 ;; This function calls:
  2425 ;;		_SetCSPin
  2426 ;;		_Write2ByteSPIPort
  2427 ;;		_WriteByteSPIPort
  2428 ;; This function is called by:
  2429 ;;		_MRF24J40Init
  2430 ;;		_SetChannel
  2431 ;;		_EnviarDato
  2432 ;;		_EnviarDatoEncriptado
  2433 ;;		_EnviarComando
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text14
  2438   00148E                     __ptext14:
  2439                           	callstack 0
  2440   00148E                     _SetLongAddr:
  2441                           	callstack 27
  2442   00148E                     
  2443                           ;drivers/scr/drv_mrf24j40.c: 365:     reg_address = (reg_address << 5) | 0x8010;
  2444   00148E  C005  F008         	movff	SetLongAddr@reg_address,??_SetLongAddr
  2445   001492  C006  F009         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  2446   001496  0E05               	movlw	5
  2447   001498                     u325:
  2448   001498  90D8               	bcf	status,0,c
  2449   00149A  3608               	rlcf	??_SetLongAddr^0,f,c
  2450   00149C  3609               	rlcf	(??_SetLongAddr+1)^0,f,c
  2451   00149E  2EE8               	decfsz	wreg,f,c
  2452   0014A0  EF4C  F00A         	goto	u325
  2453   0014A4  0E10               	movlw	16
  2454   0014A6  1008               	iorwf	??_SetLongAddr^0,w,c
  2455   0014A8  6E05               	movwf	SetLongAddr@reg_address^0,c
  2456   0014AA  0E80               	movlw	128
  2457   0014AC  1009               	iorwf	(??_SetLongAddr+1)^0,w,c
  2458   0014AE  6E06               	movwf	(SetLongAddr@reg_address+1)^0,c
  2459   0014B0                     
  2460                           ;drivers/scr/drv_mrf24j40.c: 366:     SetCSPin(0);
  2461   0014B0  0E00               	movlw	0
  2462   0014B2  EC1D  F00B         	call	_SetCSPin
  2463   0014B6                     
  2464                           ;drivers/scr/drv_mrf24j40.c: 369: Write2ByteSPIPort(reg_address);
  2465   0014B6  C005  F003         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  2466   0014BA  C006  F004         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  2467   0014BE  EC16  F00B         	call	_Write2ByteSPIPort	;wreg free
  2468   0014C2                     
  2469                           ;drivers/scr/drv_mrf24j40.c: 370:  WriteByteSPIPort(value);
  2470   0014C2  5007               	movf	SetLongAddr@value^0,w,c
  2471   0014C4  EC24  F00B         	call	_WriteByteSPIPort
  2472   0014C8                     
  2473                           ;drivers/scr/drv_mrf24j40.c: 371:     SetCSPin(1);
  2474   0014C8  0E01               	movlw	1
  2475   0014CA  EC1D  F00B         	call	_SetCSPin
  2476   0014CE  0012               	return		;funcret
  2477   0014D0                     __end_of_SetLongAddr:
  2478                           	callstack 0
  2479                           
  2480 ;; *************** function _WriteByteSPIPort *****************
  2481 ;; Defined at:
  2482 ;;		line 71 in file "drivers/scr/drv_mrf24j40_port.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  dato            1    wreg     unsigned char 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;  dato            1    1[COMRAM] unsigned char 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1    wreg      void 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, cstack
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2500 ;;Total ram usage:        1 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 1
  2503 ;; This function calls:
  2504 ;;		_SPIWriteByte
  2505 ;; This function is called by:
  2506 ;;		_SetShortAddr
  2507 ;;		_SetLongAddr
  2508 ;;		_GetShortAddr
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           	psect	text15
  2513   001648                     __ptext15:
  2514                           	callstack 0
  2515   001648                     _WriteByteSPIPort:
  2516                           	callstack 27
  2517                           
  2518                           ;incstack = 0
  2519                           ;WriteByteSPIPort@dato stored from wreg
  2520   001648  6E02               	movwf	WriteByteSPIPort@dato^0,c
  2521   00164A                     
  2522                           ;drivers/scr/drv_mrf24j40_port.c: 73:     SPIWriteByte(dato);
  2523   00164A  5002               	movf	WriteByteSPIPort@dato^0,w,c
  2524   00164C  ECF1  F00A         	call	_SPIWriteByte
  2525   001650  0012               	return		;funcret
  2526   001652                     __end_of_WriteByteSPIPort:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _SPIWriteByte *****************
  2530 ;; Defined at:
  2531 ;;		line 54 in file "drivers/scr/drv_mspi_port.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  dato            1    wreg     unsigned char 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  dato            1    0[COMRAM] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2548 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;Total ram usage:        1 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; This function calls:
  2552 ;;		Nothing
  2553 ;; This function is called by:
  2554 ;;		_WriteByteSPIPort
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text16
  2559   0015E2                     __ptext16:
  2560                           	callstack 0
  2561   0015E2                     _SPIWriteByte:
  2562                           	callstack 27
  2563                           
  2564                           ;incstack = 0
  2565                           ;SPIWriteByte@dato stored from wreg
  2566   0015E2  6E01               	movwf	SPIWriteByte@dato^0,c
  2567   0015E4                     
  2568                           ;drivers/scr/drv_mspi_port.c: 56:     PIR1bits.SSPIF = 0;
  2569   0015E4  969E               	bcf	158,3,c	;volatile
  2570   0015E6                     
  2571                           ;drivers/scr/drv_mspi_port.c: 57:     SSPBUF = dato;
  2572   0015E6  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  2573   0015EA                     l159:
  2574   0015EA  A69E               	btfss	158,3,c	;volatile
  2575   0015EC  EFFA  F00A         	goto	u271
  2576   0015F0  EFFC  F00A         	goto	u270
  2577   0015F4                     u271:
  2578   0015F4  EFF5  F00A         	goto	l159
  2579   0015F8                     u270:
  2580   0015F8  0012               	return		;funcret
  2581   0015FA                     __end_of_SPIWriteByte:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _Write2ByteSPIPort *****************
  2585 ;; Defined at:
  2586 ;;		line 82 in file "drivers/scr/drv_mrf24j40_port.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  dato            2    2[COMRAM] unsigned int 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;Total ram usage:        2 bytes
  2605 ;; Hardware stack levels used: 1
  2606 ;; Hardware stack levels required when called: 1
  2607 ;; This function calls:
  2608 ;;		_SPIWrite2Byte
  2609 ;; This function is called by:
  2610 ;;		_SetLongAddr
  2611 ;;		_GetLongAddr
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text17
  2616   00162C                     __ptext17:
  2617                           	callstack 0
  2618   00162C                     _Write2ByteSPIPort:
  2619                           	callstack 27
  2620   00162C                     
  2621                           ;drivers/scr/drv_mrf24j40_port.c: 84:     SPIWrite2Byte(dato);
  2622   00162C  C003  F001         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  2623   001630  C004  F002         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  2624   001634  EC9E  F00A         	call	_SPIWrite2Byte	;wreg free
  2625   001638  0012               	return		;funcret
  2626   00163A                     __end_of_Write2ByteSPIPort:
  2627                           	callstack 0
  2628                           
  2629 ;; *************** function _SPIWrite2Byte *****************
  2630 ;; Defined at:
  2631 ;;		line 67 in file "drivers/scr/drv_mspi_port.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  dato            2    0[COMRAM] unsigned int 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;Total ram usage:        2 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_Write2ByteSPIPort
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text18
  2659   00153C                     __ptext18:
  2660                           	callstack 0
  2661   00153C                     _SPIWrite2Byte:
  2662                           	callstack 27
  2663   00153C                     
  2664                           ;drivers/scr/drv_mspi_port.c: 69:     PIR1bits.SSPIF = 0;
  2665   00153C  969E               	bcf	158,3,c	;volatile
  2666   00153E                     
  2667                           ;drivers/scr/drv_mspi_port.c: 70:     SSPBUF = (u_int_16) (dato >> 8);
  2668   00153E  5002               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  2669   001540  6EC9               	movwf	201,c	;volatile
  2670   001542                     l165:
  2671   001542  A69E               	btfss	158,3,c	;volatile
  2672   001544  EFA6  F00A         	goto	u281
  2673   001548  EFA8  F00A         	goto	u280
  2674   00154C                     u281:
  2675   00154C  EFA1  F00A         	goto	l165
  2676   001550                     u280:
  2677   001550                     
  2678                           ;drivers/scr/drv_mspi_port.c: 72:     SSPBUF = (u_int_16) dato;
  2679   001550  C001  FFC9         	movff	SPIWrite2Byte@dato,4041	;volatile
  2680   001554                     l168:
  2681   001554  A69E               	btfss	158,3,c	;volatile
  2682   001556  EFAF  F00A         	goto	u291
  2683   00155A  EFB1  F00A         	goto	u290
  2684   00155E                     u291:
  2685   00155E  EFAA  F00A         	goto	l168
  2686   001562                     u290:
  2687   001562  0012               	return		;funcret
  2688   001564                     __end_of_SPIWrite2Byte:
  2689                           	callstack 0
  2690                           
  2691 ;; *************** function _SetCSPin *****************
  2692 ;; Defined at:
  2693 ;;		line 38 in file "drivers/scr/drv_mrf24j40_port.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;  estado          1    wreg     _Bool 
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  estado          1    0[COMRAM] _Bool 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2711 ;;Total ram usage:        1 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; This function calls:
  2714 ;;		Nothing
  2715 ;; This function is called by:
  2716 ;;		_SetShortAddr
  2717 ;;		_SetLongAddr
  2718 ;;		_GetLongAddr
  2719 ;;		_InicializoPines
  2720 ;;		_GetShortAddr
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text19
  2725   00163A                     __ptext19:
  2726                           	callstack 0
  2727   00163A                     _SetCSPin:
  2728                           	callstack 28
  2729                           
  2730                           ;incstack = 0
  2731                           ;SetCSPin@estado stored from wreg
  2732   00163A  6E01               	movwf	SetCSPin@estado^0,c
  2733   00163C                     
  2734                           ;drivers/scr/drv_mrf24j40_port.c: 40:     LATCbits.LATC6 = estado;
  2735   00163C  B001               	btfsc	SetCSPin@estado^0,0,c
  2736   00163E  D002               	bra	u315
  2737   001640  9C8B               	bcf	139,6,c	;volatile
  2738   001642  D001               	bra	u316
  2739   001644                     u315:
  2740   001644  8C8B               	bsf	139,6,c	;volatile
  2741   001646                     u316:
  2742   001646  0012               	return		;funcret
  2743   001648                     __end_of_SetCSPin:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _BoardInit *****************
  2747 ;; Defined at:
  2748 ;;		line 21 in file "hardware_config.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, status,2, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used: 1
  2768 ;; Hardware stack levels required when called: 1
  2769 ;; This function calls:
  2770 ;;		_SPIInit
  2771 ;; This function is called by:
  2772 ;;		_main
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           	psect	text20
  2777   0014D0                     __ptext20:
  2778                           	callstack 0
  2779   0014D0                     _BoardInit:
  2780                           	callstack 29
  2781   0014D0                     
  2782                           ;hardware_config.c: 23:     PORTA = 0;
  2783   0014D0  6A80               	clrf	128,c	;volatile
  2784                           
  2785                           ;hardware_config.c: 24:     PORTB = 0;
  2786   0014D2  6A81               	clrf	129,c	;volatile
  2787                           
  2788                           ;hardware_config.c: 25:     PORTC = 0;
  2789   0014D4  6A82               	clrf	130,c	;volatile
  2790                           
  2791                           ;hardware_config.c: 26:     PORTD = 0;
  2792   0014D6  6A83               	clrf	131,c	;volatile
  2793                           
  2794                           ;hardware_config.c: 27:     PORTE = 0;
  2795   0014D8  6A84               	clrf	132,c	;volatile
  2796                           
  2797                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  2798   0014DA  8C93               	bsf	147,6,c	;volatile
  2799                           
  2800                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  2801   0014DC  8E93               	bsf	147,7,c	;volatile
  2802                           
  2803                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  2804   0014DE  9496               	bcf	150,2,c	;volatile
  2805                           
  2806                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  2807   0014E0  9096               	bcf	150,0,c	;volatile
  2808                           
  2809                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  2810   0014E2  9296               	bcf	150,1,c	;volatile
  2811                           
  2812                           ;hardware_config.c: 37:  GIE = 0;
  2813   0014E4  9EF2               	bcf	4082,7,c	;volatile
  2814                           
  2815                           ;hardware_config.c: 38:  PEIE = 0;
  2816   0014E6  9CF2               	bcf	4082,6,c	;volatile
  2817                           
  2818                           ;hardware_config.c: 39:  RBIE = 0;
  2819   0014E8  96F2               	bcf	4082,3,c	;volatile
  2820                           
  2821                           ;hardware_config.c: 40:  T0IE = 0;
  2822   0014EA  9AF2               	bcf	4082,5,c	;volatile
  2823                           
  2824                           ;hardware_config.c: 41:  TMR1IE = 0;
  2825   0014EC  909D               	bcf	3997,0,c	;volatile
  2826                           
  2827                           ;hardware_config.c: 42:  TMR2IE = 0;
  2828   0014EE  929D               	bcf	3997,1,c	;volatile
  2829                           
  2830                           ;hardware_config.c: 43:  CCP1IE = 0;
  2831   0014F0  949D               	bcf	3997,2,c	;volatile
  2832                           
  2833                           ;hardware_config.c: 44:  CCP2IE = 0;
  2834   0014F2  90A0               	bcf	4000,0,c	;volatile
  2835                           
  2836                           ;hardware_config.c: 45:  EEIE = 0;
  2837   0014F4  98A0               	bcf	4000,4,c	;volatile
  2838                           
  2839                           ;hardware_config.c: 46:  SSPIE = 0;
  2840   0014F6  969D               	bcf	3997,3,c	;volatile
  2841                           
  2842                           ;hardware_config.c: 47:  BCLIE = 0;
  2843   0014F8  96A0               	bcf	4000,3,c	;volatile
  2844                           
  2845                           ;hardware_config.c: 48:  ADIE = 0;
  2846   0014FA  9C9D               	bcf	3997,6,c	;volatile
  2847                           
  2848                           ;hardware_config.c: 49:  RBIE = 0;
  2849   0014FC  96F2               	bcf	4082,3,c	;volatile
  2850                           
  2851                           ;hardware_config.c: 50:  RCIE = 0;
  2852   0014FE  9A9D               	bcf	3997,5,c	;volatile
  2853   001500                     
  2854                           ;hardware_config.c: 51:     OSCCON = 0b01110010;
  2855   001500  0E72               	movlw	114
  2856   001502  6ED3               	movwf	211,c	;volatile
  2857                           
  2858                           ;hardware_config.c: 52:     OSCTUNE = 0b11011111;
  2859   001504  0EDF               	movlw	223
  2860   001506  6E9B               	movwf	155,c	;volatile
  2861   001508                     
  2862                           ;hardware_config.c: 55:     SPIInit();
  2863   001508  ECE3  F00A         	call	_SPIInit	;wreg free
  2864   00150C  0012               	return		;funcret
  2865   00150E                     __end_of_BoardInit:
  2866                           	callstack 0
  2867                           
  2868 ;; *************** function _SPIInit *****************
  2869 ;; Defined at:
  2870 ;;		line 31 in file "drivers/scr/drv_mspi_port.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		None
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_BoardInit
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text21
  2898   0015C6                     __ptext21:
  2899                           	callstack 0
  2900   0015C6                     _SPIInit:
  2901                           	callstack 29
  2902   0015C6                     
  2903                           ;drivers/scr/drv_mspi_port.c: 33:     TRISCbits.TRISC3 = 0;
  2904   0015C6  9694               	bcf	148,3,c	;volatile
  2905                           
  2906                           ;drivers/scr/drv_mspi_port.c: 34:     TRISCbits.TRISC5 = 0;
  2907   0015C8  9A94               	bcf	148,5,c	;volatile
  2908                           
  2909                           ;drivers/scr/drv_mspi_port.c: 35:     TRISCbits.TRISC4 = 1;
  2910   0015CA  8894               	bsf	148,4,c	;volatile
  2911                           
  2912                           ;drivers/scr/drv_mspi_port.c: 36:  SSPSTATbits.CKE = 1;
  2913   0015CC  8CC7               	bsf	199,6,c	;volatile
  2914                           
  2915                           ;drivers/scr/drv_mspi_port.c: 37:  SSPCON1bits.WCOL = 1;
  2916   0015CE  8EC6               	bsf	198,7,c	;volatile
  2917                           
  2918                           ;drivers/scr/drv_mspi_port.c: 38:  SSPCON1bits.SSPOV = 0;
  2919   0015D0  9CC6               	bcf	198,6,c	;volatile
  2920                           
  2921                           ;drivers/scr/drv_mspi_port.c: 39:  SSPCON1bits.SSPEN = 1;
  2922   0015D2  8AC6               	bsf	198,5,c	;volatile
  2923                           
  2924                           ;drivers/scr/drv_mspi_port.c: 40:  SSPCON1bits.CKP = 0;
  2925   0015D4  98C6               	bcf	198,4,c	;volatile
  2926                           
  2927                           ;drivers/scr/drv_mspi_port.c: 41:  SSPSTATbits.SMP = 1;
  2928   0015D6  8EC7               	bsf	199,7,c	;volatile
  2929                           
  2930                           ;drivers/scr/drv_mspi_port.c: 42:  SSPCON1bits.SSPM3 = 0;
  2931   0015D8  96C6               	bcf	198,3,c	;volatile
  2932                           
  2933                           ;drivers/scr/drv_mspi_port.c: 43:  SSPCON1bits.SSPM2 = 0;
  2934   0015DA  94C6               	bcf	198,2,c	;volatile
  2935                           
  2936                           ;drivers/scr/drv_mspi_port.c: 44:  SSPCON1bits.SSPM1 = 0;
  2937   0015DC  92C6               	bcf	198,1,c	;volatile
  2938                           
  2939                           ;drivers/scr/drv_mspi_port.c: 45:  SSPCON1bits.SSPM0 = 1;
  2940   0015DE  80C6               	bsf	198,0,c	;volatile
  2941   0015E0  0012               	return		;funcret
  2942   0015E2                     __end_of_SPIInit:
  2943                           	callstack 0
  2944                           
  2945                           	psect	rparam
  2946   000001                     ___rparam_used  equ	1
  2947   000000                     ___param_bank   equ	0
  2948   000000                     __Lparam        equ	__Lrparam
  2949   000000                     __Hparam        equ	__Hrparam
  2950                           
  2951                           	psect	idloc
  2952                           
  2953                           ;Config register IDLOC0 @ 0x200000
  2954                           ;	unspecified, using default values
  2955   200000                     	org	2097152
  2956   200000  FF                 	db	255
  2957                           
  2958                           ;Config register IDLOC1 @ 0x200001
  2959                           ;	unspecified, using default values
  2960   200001                     	org	2097153
  2961   200001  FF                 	db	255
  2962                           
  2963                           ;Config register IDLOC2 @ 0x200002
  2964                           ;	unspecified, using default values
  2965   200002                     	org	2097154
  2966   200002  FF                 	db	255
  2967                           
  2968                           ;Config register IDLOC3 @ 0x200003
  2969                           ;	unspecified, using default values
  2970   200003                     	org	2097155
  2971   200003  FF                 	db	255
  2972                           
  2973                           ;Config register IDLOC4 @ 0x200004
  2974                           ;	unspecified, using default values
  2975   200004                     	org	2097156
  2976   200004  FF                 	db	255
  2977                           
  2978                           ;Config register IDLOC5 @ 0x200005
  2979                           ;	unspecified, using default values
  2980   200005                     	org	2097157
  2981   200005  FF                 	db	255
  2982                           
  2983                           ;Config register IDLOC6 @ 0x200006
  2984                           ;	unspecified, using default values
  2985   200006                     	org	2097158
  2986   200006  FF                 	db	255
  2987                           
  2988                           ;Config register IDLOC7 @ 0x200007
  2989                           ;	unspecified, using default values
  2990   200007                     	org	2097159
  2991   200007  FF                 	db	255
  2992                           
  2993                           	psect	config
  2994                           
  2995                           ; Padding undefined space
  2996   300000                     	org	3145728
  2997   300000  FF                 	db	255
  2998                           
  2999                           ;Config register CONFIG1H @ 0x300001
  3000                           ;	Oscillator Selection bits
  3001                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3002                           ;	Fail-Safe Clock Monitor Enable bit
  3003                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3004                           ;	Internal/External Oscillator Switchover bit
  3005                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3006   300001                     	org	3145729
  3007   300001  08                 	db	8
  3008                           
  3009                           ;Config register CONFIG2L @ 0x300002
  3010                           ;	Power-up Timer Enable bit
  3011                           ;	PWRTEN = OFF, PWRT disabled
  3012                           ;	Brown-out Reset Enable bits
  3013                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3014                           ;	Brown Out Reset Voltage bits
  3015                           ;	BORV = 22, VBOR set to 2.2 V nominal
  3016   300002                     	org	3145730
  3017   300002  11                 	db	17
  3018                           
  3019                           ;Config register CONFIG2H @ 0x300003
  3020                           ;	Watchdog Timer Enable bit
  3021                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3022                           ;	Watchdog Timer Postscale Select bits
  3023                           ;	WDTPS = 8192, 1:8192
  3024   300003                     	org	3145731
  3025   300003  1A                 	db	26
  3026                           
  3027                           ; Padding undefined space
  3028   300004                     	org	3145732
  3029   300004  FF                 	db	255
  3030                           
  3031                           ;Config register CONFIG3H @ 0x300005
  3032                           ;	CCP2 MUX bit
  3033                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3034                           ;	PORTB A/D Enable bit
  3035                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3036                           ;	Low-Power Timer1 Oscillator Enable bit
  3037                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3038                           ;	HFINTOSC Fast Start-up
  3039                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  3040                           ;	MCLR Pin Enable bit
  3041                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3042   300005                     	org	3145733
  3043   300005  81                 	db	129
  3044                           
  3045                           ;Config register CONFIG4L @ 0x300006
  3046                           ;	Stack Full/Underflow Reset Enable bit
  3047                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3048                           ;	Single-Supply ICSP Enable bit
  3049                           ;	LVP = OFF, Single-Supply ICSP disabled
  3050                           ;	Extended Instruction Set Enable bit
  3051                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3052                           ;	Background Debugger Enable bit
  3053                           ;	DEBUG = ON, Background debugger enabled, RB6 and RB7 are dedicated to In-Circuit Debug
  3054   300006                     	org	3145734
  3055   300006  00                 	db	0
  3056                           
  3057                           ; Padding undefined space
  3058   300007                     	org	3145735
  3059   300007  FF                 	db	255
  3060                           
  3061                           ;Config register CONFIG5L @ 0x300008
  3062                           ;	Code Protection Block 0
  3063                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3064                           ;	Code Protection Block 1
  3065                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3066                           ;	Code Protection Block 2
  3067                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3068                           ;	Code Protection Block 3
  3069                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3070   300008                     	org	3145736
  3071   300008  0F                 	db	15
  3072                           
  3073                           ;Config register CONFIG5H @ 0x300009
  3074                           ;	Boot Block Code Protection bit
  3075                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3076                           ;	Data EEPROM Code Protection bit
  3077                           ;	CPD = OFF, Data EEPROM not code-protected
  3078   300009                     	org	3145737
  3079   300009  C0                 	db	192
  3080                           
  3081                           ;Config register CONFIG6L @ 0x30000A
  3082                           ;	Write Protection Block 0
  3083                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3084                           ;	Write Protection Block 1
  3085                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3086                           ;	Write Protection Block 2
  3087                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3088                           ;	Write Protection Block 3
  3089                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3090   30000A                     	org	3145738
  3091   30000A  0F                 	db	15
  3092                           
  3093                           ;Config register CONFIG6H @ 0x30000B
  3094                           ;	Configuration Register Write Protection bit
  3095                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3096                           ;	Boot Block Write Protection bit
  3097                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3098                           ;	Data EEPROM Write Protection bit
  3099                           ;	WRTD = OFF, Data EEPROM not write-protected
  3100   30000B                     	org	3145739
  3101   30000B  E0                 	db	224
  3102                           
  3103                           ;Config register CONFIG7L @ 0x30000C
  3104                           ;	unspecified, using default values
  3105                           ;	Table Read Protection Block 0
  3106                           ;	EBTR0 = 0x1, unprogrammed default
  3107                           ;	Table Read Protection Block 1
  3108                           ;	EBTR1 = 0x1, unprogrammed default
  3109                           ;	Table Read Protection Block 2
  3110                           ;	EBTR2 = 0x1, unprogrammed default
  3111                           ;	Table Read Protection Block 3
  3112                           ;	EBTR3 = 0x1, unprogrammed default
  3113   30000C                     	org	3145740
  3114   30000C  0F                 	db	15
  3115                           
  3116                           ;Config register CONFIG7H @ 0x30000D
  3117                           ;	Boot Block Table Read Protection bit
  3118                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3119   30000D                     	org	3145741
  3120   30000D  40                 	db	64
  3121                           tosu	equ	0xFFF
  3122                           tosh	equ	0xFFE
  3123                           tosl	equ	0xFFD
  3124                           stkptr	equ	0xFFC
  3125                           pclatu	equ	0xFFB
  3126                           pclath	equ	0xFFA
  3127                           pcl	equ	0xFF9
  3128                           tblptru	equ	0xFF8
  3129                           tblptrh	equ	0xFF7
  3130                           tblptrl	equ	0xFF6
  3131                           tablat	equ	0xFF5
  3132                           prodh	equ	0xFF4
  3133                           prodl	equ	0xFF3
  3134                           indf0	equ	0xFEF
  3135                           postinc0	equ	0xFEE
  3136                           postdec0	equ	0xFED
  3137                           preinc0	equ	0xFEC
  3138                           plusw0	equ	0xFEB
  3139                           fsr0h	equ	0xFEA
  3140                           fsr0l	equ	0xFE9
  3141                           wreg	equ	0xFE8
  3142                           indf1	equ	0xFE7
  3143                           postinc1	equ	0xFE6
  3144                           postdec1	equ	0xFE5
  3145                           preinc1	equ	0xFE4
  3146                           plusw1	equ	0xFE3
  3147                           fsr1h	equ	0xFE2
  3148                           fsr1l	equ	0xFE1
  3149                           bsr	equ	0xFE0
  3150                           indf2	equ	0xFDF
  3151                           postinc2	equ	0xFDE
  3152                           postdec2	equ	0xFDD
  3153                           preinc2	equ	0xFDC
  3154                           plusw2	equ	0xFDB
  3155                           fsr2h	equ	0xFDA
  3156                           fsr2l	equ	0xFD9
  3157                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    24
    Data        0
    BSS         91
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      21
    BANK0           160      0      84
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(2) Largest target is 0

    S35$buffer_salida	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _MRF24J40Init->_SetChannel
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_GetLongAddr
    _SetChannel->_SetLongAddr
    _GetLongAddr->_Write2ByteSPIPort
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _EnviarDato->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _Write2ByteSPIPort->_SPIWrite2Byte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2792
                                             12 COMRAM     2     2      0
                          _BoardInit
                         _EnviarDato
                       _MRF24J40Init
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         2     2      0    1858
                                             10 COMRAM     2     2      0
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  0     0      0     196
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     196
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           1     1      0     715
                                              9 COMRAM     1     1      0
                        _GetLongAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _GetLongAddr                                          5     3      2     170
                                              4 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (4) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (5) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnviarDato                                           2     2      0     934
                                              9 COMRAM     2     2      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     196
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     325
                                              4 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      69
                                              2 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      45
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _EnviarDato
     _SetLongAddr
       _SetCSPin
       _Write2ByteSPIPort
         _SPIWrite2Byte
       _WriteByteSPIPort
         _SPIWriteByte
     _SetShortAddr
       _SetCSPin
       _WriteByteSPIPort
   _MRF24J40Init
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _GetLongAddr
         _ReadByteSPIPort
           _SPIRead
         _SetCSPin
         _Write2ByteSPIPort
       _SetLongAddr
       _SetShortAddr
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      84     52.5%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     14      21     22.1%
BITBIGSFRlll        32      0       0      0.0%
BITBIGSFRlh         16      0       0      0.0%
BITBIGSFRllh        11      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     105      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue Mar 25 17:30:18 2025

                 _SSPSTATbits 0FC7                            l42 1338                            l43 1398  
                          l52 14CE                            l60 13F6                            l37 1138  
                          l46 15A8                            l55 148C                            l63 153A  
                          l82 1202                            l66 1448                            l86 1242  
                          u65 1628                            u66 162A                            u95 161A  
                          u96 161C                 ?_MRF24J40Init 0001                           l131 161C  
                         l140 1638                           l125 15C4                           l134 162A  
                         l143 1656                           l128 1646                           l137 1650  
                         l162 15F8                           l171 1562                           l156 15E0  
                         l244 150C                           l165 1542                           l174 15FE  
                         l167 1550                           l159 15EA                           l168 1554  
                         l192 124C                           l177 160E                           l950 1620  
                         l992 1612                           _GIE 7F97                           u300 160C  
                         u301 1608                           u315 1644                           u316 1646  
                         u340 1320                           u325 1498                           u341 131C  
                         u270 15F8                           u350 1370                           u271 15F4  
                         u351 136C                           u335 1454                           u280 1550  
                         u360 13F6                           u281 154C                           u361 13F2  
                         u290 1562                           u370 1202                           u450 1260  
                         u291 155E                           u371 11FE                           u451 1258  
                         u380 1238                           u508 12D0                           u381 1234  
                         u517 127A                           u470 1298                           u527 12B0  
                         u471 1290                           u537 12E4                           u490 12CE  
                         u547 102C                           u491 12C6                           u468 1262  
                         u557 104C                           u567 13D0                           u488 129A  
                         wreg 0FE8           __end_of_GetLongAddr 148E                          l1044 15C6  
                        l1400 163C                          l1164 14D0                          l1412 162C  
                        l1404 164A                          l1420 1596                          l1166 1500  
                        l1430 14B0                          l1422 159C                          l1510 1042  
                        l1502 101A                          l1168 1508                          l1432 14B6  
                        l1424 15A2                          l1416 158C                          l1600 11D8  
                        l1408 1652                          l1440 144A                          l1520 108C  
                        l1512 1058                          l1504 101E                          l1434 14C2  
                        l1418 1590                          l1610 1222                          l1602 11EE  
                        l1450 148A                          l1442 146C                          l1530 10DC  
                        l1522 109C                          l1514 1062                          l1506 1022  
                        l1436 14C8                          l1428 148E                          l1612 1224  
                        l1604 11F0                          l1460 1304                          l1444 1472  
                        l1540 1108                          l1532 10E6                          l1524 10AC  
                        l1516 106C                          l1508 103C                          l1390 153C  
                        l1614 1226                          l1606 11F2                          l1470 137A  
                        l1462 1320                          l1454 12FC                          l1446 147E  
                        l1550 112E                          l1542 1112                          l1534 10F0  
                        l1526 10BC                          l1518 107C                          l1392 153E  
                        l1616 1238                          l1608 1208                          l1560 114C  
                        l1480 15B2                          l1472 137C                          l1464 1350  
                        l1448 1484                          l1544 1116                          l1536 10FA  
                        l1528 10CC                          l1386 15E4                          l1570 1170  
                        l1562 114E                          l1554 113A                          l1474 1396  
                        l1466 1354                          l1394 15FA                          l1490 13D4  
                        l1546 111A                          l1538 1104                          l1388 15E6  
                        l1580 11A4                          l1572 117E                          l1564 115E  
                        l1556 113C                          l1468 1370                          l1396 160C  
                        l1492 13E2                          l1484 139A                          l1548 1124  
                        l1820 1270                          l1590 11C6                          l1582 11A6  
                        l1574 1180                          l1566 1160                          l1558 113C  
                        l1478 15AA                          l1486 139A                          l1494 150E  
                        l1830 12F0                          l1822 1286                          l1814 1244  
                        l1592 11D4                          l1584 11B4                          l1576 1194  
                        l1568 116E                          l1488 13CE                          l1824 12A6  
                        l1816 1248                          l1594 11D6                          l1586 11B6  
                        l1578 1196                          l1498 13F8                          l1826 12BC  
                        l1818 124E                          l1588 11C4                          l1828 12DA  
                        _ADIE 7CEE                          _EEIE 7D04                          _T0IE 7F95  
                        _PEIE 7F96                          _RBIE 7F93                          _RCIE 7CED  
                _SPIWriteByte 15E2                          _main 1244               __end_of_SPIInit 15E2  
             __end_of_SPIRead 1610                          fsr2h 0FDA                          indf2 0FDF  
                        fsr2l 0FD9                   EnviarDato@i 000A                          start 0000  
                ___param_bank 0000             ??_ReadByteSPIPort 0001                ??_MRF24J40Init 000B  
 __end_of_InicializoVariables 139A                 _SPIWrite2Byte 153C                         ?_main 0001  
                       _BCLIE 7D03                         _PORTA 0F80                         _PORTB 0F81  
                       _PORTC 0F82                         _PORTD 0F83                         _PORTE 0F84  
                       _SSPIE 7CEB               _InicializoPines 15AA       SetShortAddr@reg_address 0004  
                       tablat 0FF5                         status 0FD8                    _EnviarDato 113A  
         _SetDeviceMACAddress 13F8               __initialization 1564                  __end_of_main 12FC  
              ?_SPIWrite2Byte 0001              __end_of_SetCSPin 1648                   _GetLongAddr 144A  
               ??_SetLongAddr 0008                        ??_main 000D                 __activetblptr 0001  
               ??_SetResetPin 0001          ?_SetDeviceMACAddress 0001                    _SetChannel 139A  
           ?_SetDeviceAddress 0001                        _CCP1IE 7CEA                        _CCP2IE 7D00  
                   ??_SPIInit 0001                     ??_SPIRead 0001            ??_SetDeviceAddress 0005  
                  _SetWakePin 1610                        _OSCCON 0FD3                        _TMR1IE 7CE8  
                      _TMR2IE 7CE9  __end_of_default_security_key 1011                        _SSPBUF 0FC9  
                      clear_0 156A                        clear_1 1576                        isa$std 0001  
              SetCSPin@estado 0001       __end_of_InicializoPines 15C6         ??_SetDeviceMACAddress 0005  
        InicializoVariables@i 0002                 EnviarDato@pos 000B                  __mediumconst 0000  
           _mrf24_data_config 0060                        tblptrh 0FF7                        tblptrl 0FF6  
                      tblptru 0FF8           __end_of_SetLongAddr 14D0           __end_of_SetResetPin 162C  
        __end_of_MRF24J40Init 113A                    __accesstop 0060       __end_of__initialization 157C  
           __end_of_BoardInit 150E                   ?_EnviarDato 0001                 ___rparam_used 0001  
            SetWakePin@estado 0001                 ?_SetShortAddr 0003                __pcstackCOMRAM 0001  
             ??_SPIWrite2Byte 0003                   ?_SetChannel 0001                    __pbssBANK0 0060  
                 ?_SetWakePin 0001                     ?_SetCSPin 0001               _ReadByteSPIPort 1652  
              ??_SetShortAddr 0004                   _SetLongAddr 148E              ?_InicializoPines 0001  
        _default_security_key 1001                   _SetResetPin 161E                       _OSCTUNE 0F9B  
                     _SPIInit 15C6                       _SPIRead 15FA                    ??_SetCSPin 0001  
           SetShortAddr@value 0003                       __Hparam 0000                       __Lparam 0000  
                __psmallconst 1000                       __pcinit 1564                  ?_GetLongAddr 0005  
                     __ramtop 1000                       __ptext0 1244                       __ptext1 101A  
                     __ptext2 13F8                       __ptext3 150E                       __ptext4 139A  
                     __ptext5 144A                       __ptext6 1652                       __ptext7 15FA  
                     __ptext8 12FC                       __ptext9 15AA              _WriteByteSPIPort 1648  
     __end_of_ReadByteSPIPort 1658          end_of_initialization 157C           _default_mac_address 1011  
                     postinc0 0FEE                  _MRF24J40Init 101A          WriteByteSPIPort@dato 0002  
                   _TRISBbits 0F93                     _TRISCbits 0F94                     _TRISDbits 0F95  
                   _TRISEbits 0F96          __end_of_SetShortAddr 15AA         Write2ByteSPIPort@dato 0003  
                ??_EnviarDato 000A                     _BoardInit 14D0             _Write2ByteSPIPort 162C  
 __end_of_SetDeviceMACAddress 144A            ?_Write2ByteSPIPort 0003                  ??_SetChannel 000A  
         start_initialization 1564            __end_of_EnviarDato 1244           ??_Write2ByteSPIPort 0005  
            ?_ReadByteSPIPort 0001                 ?_SPIWriteByte 0001                  ??_SetWakePin 0001  
                  ?_BoardInit 0001     __end_of_Write2ByteSPIPort 163A            __end_of_SetChannel 13F8  
       __end_of_SPIWrite2Byte 1564                  ?_SetLongAddr 0005            __end_of_SetWakePin 161E  
                ?_SetResetPin 0001                   __pbssCOMRAM 000F                      ?_SPIInit 0001  
                    ?_SPIRead 0001                ??_SPIWriteByte 0001              SPIWriteByte@dato 0001  
            _SetDeviceAddress 150E           _InicializoVariables 12FC      __end_of_WriteByteSPIPort 1652  
           SetResetPin@estado 0001                   __smallconst 1000          ?_InicializoVariables 0001  
            SetLongAddr@value 0007                      _LATCbits 0F8B                      _LATDbits 0F8C  
                    _LATEbits 0F8D                   ??_BoardInit 0001                      _PIR1bits 0F9E  
                _SetShortAddr 158A           GetLongAddr@toReturn 0009         ??_InicializoVariables 0001  
              _mrf24_data_out 000F                      _SetCSPin 163A                      __Hrparam 0000  
                    __Lrparam 0000                  __Lsmallconst 1000          __end_of_SPIWriteByte 15FA  
                    __ptext10 1610                      __ptext11 161E                      __ptext20 14D0  
                    __ptext12 113A                      __ptext21 15C6                      __ptext13 158A  
                    __ptext14 148E                      __ptext15 1648                      __ptext16 15E2  
                    __ptext17 162C                      __ptext18 153C                      __ptext19 163A  
           ??_InicializoPines 0002                      isa$xinst 0000                 SetChannel@aux 000A  
 __end_of_default_mac_address 1019      __end_of_SetDeviceAddress 153C             ?_WriteByteSPIPort 0001  
               ??_GetLongAddr 0007            ??_WriteByteSPIPort 0002        GetLongAddr@reg_address 0005  
                 _SSPCON1bits 0FC6             SPIWrite2Byte@dato 0001        SetLongAddr@reg_address 0005  
