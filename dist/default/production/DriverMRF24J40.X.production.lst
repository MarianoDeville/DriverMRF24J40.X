

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon Aug 11 21:01:03 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Version 2.20
    61                           ; Generated 05/05/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F46K20 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000FE0                     bsr             equ	4064
    95   000FE9                     fsr0            equ	4073
    96   000FEA                     fsr0h           equ	4074
    97   000FE9                     fsr0l           equ	4073
    98   000FE1                     fsr1            equ	4065
    99   000FE2                     fsr1h           equ	4066
   100   000FE1                     fsr1l           equ	4065
   101   000FD9                     fsr2            equ	4057
   102   000FDA                     fsr2h           equ	4058
   103   000FD9                     fsr2l           equ	4057
   104   000FEF                     indf0           equ	4079
   105   000FE7                     indf1           equ	4071
   106   000FDF                     indf2           equ	4063
   107   000FF2                     intcon          equ	4082
   108   000000                     nvmcon          equ	0
   109   000FF9                     pcl             equ	4089
   110   000FFA                     pclath          equ	4090
   111   000FFB                     pclatu          equ	4091
   112   000FEB                     plusw0          equ	4075
   113   000FE3                     plusw1          equ	4067
   114   000FDB                     plusw2          equ	4059
   115   000FED                     postdec0        equ	4077
   116   000FE5                     postdec1        equ	4069
   117   000FDD                     postdec2        equ	4061
   118   000FEE                     postinc0        equ	4078
   119   000FE6                     postinc1        equ	4070
   120   000FDE                     postinc2        equ	4062
   121   000FEC                     preinc0         equ	4076
   122   000FE4                     preinc1         equ	4068
   123   000FDC                     preinc2         equ	4060
   124   000FF3                     prod            equ	4083
   125   000FF4                     prodh           equ	4084
   126   000FF3                     prodl           equ	4083
   127   000FD8                     status          equ	4056
   128   000FF5                     tablat          equ	4085
   129   000FF6                     tblptr          equ	4086
   130   000FF7                     tblptrh         equ	4087
   131   000FF6                     tblptrl         equ	4086
   132   000FF8                     tblptru         equ	4088
   133   000FFD                     tosl            equ	4093
   134   000FE8                     wreg            equ	4072
   135   000F77                     SSPMSK          equ	3959	;# 
   136   000F78                     SLRCON          equ	3960	;# 
   137   000F79                     CM2CON1         equ	3961	;# 
   138   000F7A                     CM2CON0         equ	3962	;# 
   139   000F7B                     CM1CON0         equ	3963	;# 
   140   000F7C                     WPUB            equ	3964	;# 
   141   000F7D                     IOCB            equ	3965	;# 
   142   000F7E                     ANSEL           equ	3966	;# 
   143   000F7F                     ANSELH          equ	3967	;# 
   144   000F80                     PORTA           equ	3968	;# 
   145   000F81                     PORTB           equ	3969	;# 
   146   000F82                     PORTC           equ	3970	;# 
   147   000F83                     PORTD           equ	3971	;# 
   148   000F84                     PORTE           equ	3972	;# 
   149   000F89                     LATA            equ	3977	;# 
   150   000F8A                     LATB            equ	3978	;# 
   151   000F8B                     LATC            equ	3979	;# 
   152   000F8C                     LATD            equ	3980	;# 
   153   000F8D                     LATE            equ	3981	;# 
   154   000F92                     TRISA           equ	3986	;# 
   155   000F92                     DDRA            equ	3986	;# 
   156   000F93                     TRISB           equ	3987	;# 
   157   000F93                     DDRB            equ	3987	;# 
   158   000F94                     TRISC           equ	3988	;# 
   159   000F94                     DDRC            equ	3988	;# 
   160   000F95                     TRISD           equ	3989	;# 
   161   000F95                     DDRD            equ	3989	;# 
   162   000F96                     TRISE           equ	3990	;# 
   163   000F96                     DDRE            equ	3990	;# 
   164   000F9B                     OSCTUNE         equ	3995	;# 
   165   000F9D                     PIE1            equ	3997	;# 
   166   000F9E                     PIR1            equ	3998	;# 
   167   000F9F                     IPR1            equ	3999	;# 
   168   000FA0                     PIE2            equ	4000	;# 
   169   000FA1                     PIR2            equ	4001	;# 
   170   000FA2                     IPR2            equ	4002	;# 
   171   000FA6                     EECON1          equ	4006	;# 
   172   000FA7                     EECON2          equ	4007	;# 
   173   000FA8                     EEDATA          equ	4008	;# 
   174   000FA9                     EEADR           equ	4009	;# 
   175   000FAA                     EEADRH          equ	4010	;# 
   176   000FAB                     RCSTA           equ	4011	;# 
   177   000FAB                     RCSTA1          equ	4011	;# 
   178   000FAC                     TXSTA           equ	4012	;# 
   179   000FAC                     TXSTA1          equ	4012	;# 
   180   000FAD                     TXREG           equ	4013	;# 
   181   000FAD                     TXREG1          equ	4013	;# 
   182   000FAE                     RCREG           equ	4014	;# 
   183   000FAE                     RCREG1          equ	4014	;# 
   184   000FAF                     SPBRG           equ	4015	;# 
   185   000FAF                     SPBRG1          equ	4015	;# 
   186   000FB0                     SPBRGH          equ	4016	;# 
   187   000FB1                     T3CON           equ	4017	;# 
   188   000FB2                     TMR3            equ	4018	;# 
   189   000FB2                     TMR3L           equ	4018	;# 
   190   000FB3                     TMR3H           equ	4019	;# 
   191   000FB4                     CVRCON2         equ	4020	;# 
   192   000FB5                     CVRCON          equ	4021	;# 
   193   000FB6                     ECCP1AS         equ	4022	;# 
   194   000FB7                     PWM1CON         equ	4023	;# 
   195   000FB8                     BAUDCON         equ	4024	;# 
   196   000FB8                     BAUDCTL         equ	4024	;# 
   197   000FB9                     PSTRCON         equ	4025	;# 
   198   000FBA                     CCP2CON         equ	4026	;# 
   199   000FBB                     CCPR2           equ	4027	;# 
   200   000FBB                     CCPR2L          equ	4027	;# 
   201   000FBC                     CCPR2H          equ	4028	;# 
   202   000FBD                     CCP1CON         equ	4029	;# 
   203   000FBE                     CCPR1           equ	4030	;# 
   204   000FBE                     CCPR1L          equ	4030	;# 
   205   000FBF                     CCPR1H          equ	4031	;# 
   206   000FC0                     ADCON2          equ	4032	;# 
   207   000FC1                     ADCON1          equ	4033	;# 
   208   000FC2                     ADCON0          equ	4034	;# 
   209   000FC3                     ADRES           equ	4035	;# 
   210   000FC3                     ADRESL          equ	4035	;# 
   211   000FC4                     ADRESH          equ	4036	;# 
   212   000FC5                     SSPCON2         equ	4037	;# 
   213   000FC6                     SSPCON1         equ	4038	;# 
   214   000FC7                     SSPSTAT         equ	4039	;# 
   215   000FC8                     SSPADD          equ	4040	;# 
   216   000FC9                     SSPBUF          equ	4041	;# 
   217   000FCA                     T2CON           equ	4042	;# 
   218   000FCB                     PR2             equ	4043	;# 
   219   000FCB                     MEMCON          equ	4043	;# 
   220   000FCC                     TMR2            equ	4044	;# 
   221   000FCD                     T1CON           equ	4045	;# 
   222   000FCE                     TMR1            equ	4046	;# 
   223   000FCE                     TMR1L           equ	4046	;# 
   224   000FCF                     TMR1H           equ	4047	;# 
   225   000FD0                     RCON            equ	4048	;# 
   226   000FD1                     WDTCON          equ	4049	;# 
   227   000FD2                     HLVDCON         equ	4050	;# 
   228   000FD2                     LVDCON          equ	4050	;# 
   229   000FD3                     OSCCON          equ	4051	;# 
   230   000FD5                     T0CON           equ	4053	;# 
   231   000FD6                     TMR0            equ	4054	;# 
   232   000FD6                     TMR0L           equ	4054	;# 
   233   000FD7                     TMR0H           equ	4055	;# 
   234   000FD8                     STATUS          equ	4056	;# 
   235   000FD9                     FSR2            equ	4057	;# 
   236   000FD9                     FSR2L           equ	4057	;# 
   237   000FDA                     FSR2H           equ	4058	;# 
   238   000FDB                     PLUSW2          equ	4059	;# 
   239   000FDC                     PREINC2         equ	4060	;# 
   240   000FDD                     POSTDEC2        equ	4061	;# 
   241   000FDE                     POSTINC2        equ	4062	;# 
   242   000FDF                     INDF2           equ	4063	;# 
   243   000FE0                     BSR             equ	4064	;# 
   244   000FE1                     FSR1            equ	4065	;# 
   245   000FE1                     FSR1L           equ	4065	;# 
   246   000FE2                     FSR1H           equ	4066	;# 
   247   000FE3                     PLUSW1          equ	4067	;# 
   248   000FE4                     PREINC1         equ	4068	;# 
   249   000FE5                     POSTDEC1        equ	4069	;# 
   250   000FE6                     POSTINC1        equ	4070	;# 
   251   000FE7                     INDF1           equ	4071	;# 
   252   000FE8                     WREG            equ	4072	;# 
   253   000FE9                     FSR0            equ	4073	;# 
   254   000FE9                     FSR0L           equ	4073	;# 
   255   000FEA                     FSR0H           equ	4074	;# 
   256   000FEB                     PLUSW0          equ	4075	;# 
   257   000FEC                     PREINC0         equ	4076	;# 
   258   000FED                     POSTDEC0        equ	4077	;# 
   259   000FEE                     POSTINC0        equ	4078	;# 
   260   000FEF                     INDF0           equ	4079	;# 
   261   000FF0                     INTCON3         equ	4080	;# 
   262   000FF1                     INTCON2         equ	4081	;# 
   263   000FF2                     INTCON          equ	4082	;# 
   264   000FF3                     PROD            equ	4083	;# 
   265   000FF3                     PRODL           equ	4083	;# 
   266   000FF4                     PRODH           equ	4084	;# 
   267   000FF5                     TABLAT          equ	4085	;# 
   268   000FF6                     TBLPTR          equ	4086	;# 
   269   000FF6                     TBLPTRL         equ	4086	;# 
   270   000FF7                     TBLPTRH         equ	4087	;# 
   271   000FF8                     TBLPTRU         equ	4088	;# 
   272   000FF9                     PCLAT           equ	4089	;# 
   273   000FF9                     PC              equ	4089	;# 
   274   000FF9                     PCL             equ	4089	;# 
   275   000FFA                     PCLATH          equ	4090	;# 
   276   000FFB                     PCLATU          equ	4091	;# 
   277   000FFC                     STKPTR          equ	4092	;# 
   278   000FFD                     TOS             equ	4093	;# 
   279   000FFD                     TOSL            equ	4093	;# 
   280   000FFE                     TOSH            equ	4094	;# 
   281   000FFF                     TOSU            equ	4095	;# 
   282   000F77                     SSPMSK          equ	3959	;# 
   283   000F78                     SLRCON          equ	3960	;# 
   284   000F79                     CM2CON1         equ	3961	;# 
   285   000F7A                     CM2CON0         equ	3962	;# 
   286   000F7B                     CM1CON0         equ	3963	;# 
   287   000F7C                     WPUB            equ	3964	;# 
   288   000F7D                     IOCB            equ	3965	;# 
   289   000F7E                     ANSEL           equ	3966	;# 
   290   000F7F                     ANSELH          equ	3967	;# 
   291   000F80                     PORTA           equ	3968	;# 
   292   000F81                     PORTB           equ	3969	;# 
   293   000F82                     PORTC           equ	3970	;# 
   294   000F83                     PORTD           equ	3971	;# 
   295   000F84                     PORTE           equ	3972	;# 
   296   000F89                     LATA            equ	3977	;# 
   297   000F8A                     LATB            equ	3978	;# 
   298   000F8B                     LATC            equ	3979	;# 
   299   000F8C                     LATD            equ	3980	;# 
   300   000F8D                     LATE            equ	3981	;# 
   301   000F92                     TRISA           equ	3986	;# 
   302   000F92                     DDRA            equ	3986	;# 
   303   000F93                     TRISB           equ	3987	;# 
   304   000F93                     DDRB            equ	3987	;# 
   305   000F94                     TRISC           equ	3988	;# 
   306   000F94                     DDRC            equ	3988	;# 
   307   000F95                     TRISD           equ	3989	;# 
   308   000F95                     DDRD            equ	3989	;# 
   309   000F96                     TRISE           equ	3990	;# 
   310   000F96                     DDRE            equ	3990	;# 
   311   000F9B                     OSCTUNE         equ	3995	;# 
   312   000F9D                     PIE1            equ	3997	;# 
   313   000F9E                     PIR1            equ	3998	;# 
   314   000F9F                     IPR1            equ	3999	;# 
   315   000FA0                     PIE2            equ	4000	;# 
   316   000FA1                     PIR2            equ	4001	;# 
   317   000FA2                     IPR2            equ	4002	;# 
   318   000FA6                     EECON1          equ	4006	;# 
   319   000FA7                     EECON2          equ	4007	;# 
   320   000FA8                     EEDATA          equ	4008	;# 
   321   000FA9                     EEADR           equ	4009	;# 
   322   000FAA                     EEADRH          equ	4010	;# 
   323   000FAB                     RCSTA           equ	4011	;# 
   324   000FAB                     RCSTA1          equ	4011	;# 
   325   000FAC                     TXSTA           equ	4012	;# 
   326   000FAC                     TXSTA1          equ	4012	;# 
   327   000FAD                     TXREG           equ	4013	;# 
   328   000FAD                     TXREG1          equ	4013	;# 
   329   000FAE                     RCREG           equ	4014	;# 
   330   000FAE                     RCREG1          equ	4014	;# 
   331   000FAF                     SPBRG           equ	4015	;# 
   332   000FAF                     SPBRG1          equ	4015	;# 
   333   000FB0                     SPBRGH          equ	4016	;# 
   334   000FB1                     T3CON           equ	4017	;# 
   335   000FB2                     TMR3            equ	4018	;# 
   336   000FB2                     TMR3L           equ	4018	;# 
   337   000FB3                     TMR3H           equ	4019	;# 
   338   000FB4                     CVRCON2         equ	4020	;# 
   339   000FB5                     CVRCON          equ	4021	;# 
   340   000FB6                     ECCP1AS         equ	4022	;# 
   341   000FB7                     PWM1CON         equ	4023	;# 
   342   000FB8                     BAUDCON         equ	4024	;# 
   343   000FB8                     BAUDCTL         equ	4024	;# 
   344   000FB9                     PSTRCON         equ	4025	;# 
   345   000FBA                     CCP2CON         equ	4026	;# 
   346   000FBB                     CCPR2           equ	4027	;# 
   347   000FBB                     CCPR2L          equ	4027	;# 
   348   000FBC                     CCPR2H          equ	4028	;# 
   349   000FBD                     CCP1CON         equ	4029	;# 
   350   000FBE                     CCPR1           equ	4030	;# 
   351   000FBE                     CCPR1L          equ	4030	;# 
   352   000FBF                     CCPR1H          equ	4031	;# 
   353   000FC0                     ADCON2          equ	4032	;# 
   354   000FC1                     ADCON1          equ	4033	;# 
   355   000FC2                     ADCON0          equ	4034	;# 
   356   000FC3                     ADRES           equ	4035	;# 
   357   000FC3                     ADRESL          equ	4035	;# 
   358   000FC4                     ADRESH          equ	4036	;# 
   359   000FC5                     SSPCON2         equ	4037	;# 
   360   000FC6                     SSPCON1         equ	4038	;# 
   361   000FC7                     SSPSTAT         equ	4039	;# 
   362   000FC8                     SSPADD          equ	4040	;# 
   363   000FC9                     SSPBUF          equ	4041	;# 
   364   000FCA                     T2CON           equ	4042	;# 
   365   000FCB                     PR2             equ	4043	;# 
   366   000FCB                     MEMCON          equ	4043	;# 
   367   000FCC                     TMR2            equ	4044	;# 
   368   000FCD                     T1CON           equ	4045	;# 
   369   000FCE                     TMR1            equ	4046	;# 
   370   000FCE                     TMR1L           equ	4046	;# 
   371   000FCF                     TMR1H           equ	4047	;# 
   372   000FD0                     RCON            equ	4048	;# 
   373   000FD1                     WDTCON          equ	4049	;# 
   374   000FD2                     HLVDCON         equ	4050	;# 
   375   000FD2                     LVDCON          equ	4050	;# 
   376   000FD3                     OSCCON          equ	4051	;# 
   377   000FD5                     T0CON           equ	4053	;# 
   378   000FD6                     TMR0            equ	4054	;# 
   379   000FD6                     TMR0L           equ	4054	;# 
   380   000FD7                     TMR0H           equ	4055	;# 
   381   000FD8                     STATUS          equ	4056	;# 
   382   000FD9                     FSR2            equ	4057	;# 
   383   000FD9                     FSR2L           equ	4057	;# 
   384   000FDA                     FSR2H           equ	4058	;# 
   385   000FDB                     PLUSW2          equ	4059	;# 
   386   000FDC                     PREINC2         equ	4060	;# 
   387   000FDD                     POSTDEC2        equ	4061	;# 
   388   000FDE                     POSTINC2        equ	4062	;# 
   389   000FDF                     INDF2           equ	4063	;# 
   390   000FE0                     BSR             equ	4064	;# 
   391   000FE1                     FSR1            equ	4065	;# 
   392   000FE1                     FSR1L           equ	4065	;# 
   393   000FE2                     FSR1H           equ	4066	;# 
   394   000FE3                     PLUSW1          equ	4067	;# 
   395   000FE4                     PREINC1         equ	4068	;# 
   396   000FE5                     POSTDEC1        equ	4069	;# 
   397   000FE6                     POSTINC1        equ	4070	;# 
   398   000FE7                     INDF1           equ	4071	;# 
   399   000FE8                     WREG            equ	4072	;# 
   400   000FE9                     FSR0            equ	4073	;# 
   401   000FE9                     FSR0L           equ	4073	;# 
   402   000FEA                     FSR0H           equ	4074	;# 
   403   000FEB                     PLUSW0          equ	4075	;# 
   404   000FEC                     PREINC0         equ	4076	;# 
   405   000FED                     POSTDEC0        equ	4077	;# 
   406   000FEE                     POSTINC0        equ	4078	;# 
   407   000FEF                     INDF0           equ	4079	;# 
   408   000FF0                     INTCON3         equ	4080	;# 
   409   000FF1                     INTCON2         equ	4081	;# 
   410   000FF2                     INTCON          equ	4082	;# 
   411   000FF3                     PROD            equ	4083	;# 
   412   000FF3                     PRODL           equ	4083	;# 
   413   000FF4                     PRODH           equ	4084	;# 
   414   000FF5                     TABLAT          equ	4085	;# 
   415   000FF6                     TBLPTR          equ	4086	;# 
   416   000FF6                     TBLPTRL         equ	4086	;# 
   417   000FF7                     TBLPTRH         equ	4087	;# 
   418   000FF8                     TBLPTRU         equ	4088	;# 
   419   000FF9                     PCLAT           equ	4089	;# 
   420   000FF9                     PC              equ	4089	;# 
   421   000FF9                     PCL             equ	4089	;# 
   422   000FFA                     PCLATH          equ	4090	;# 
   423   000FFB                     PCLATU          equ	4091	;# 
   424   000FFC                     STKPTR          equ	4092	;# 
   425   000FFD                     TOS             equ	4093	;# 
   426   000FFD                     TOSL            equ	4093	;# 
   427   000FFE                     TOSH            equ	4094	;# 
   428   000FFF                     TOSU            equ	4095	;# 
   429   000F77                     SSPMSK          equ	3959	;# 
   430   000F78                     SLRCON          equ	3960	;# 
   431   000F79                     CM2CON1         equ	3961	;# 
   432   000F7A                     CM2CON0         equ	3962	;# 
   433   000F7B                     CM1CON0         equ	3963	;# 
   434   000F7C                     WPUB            equ	3964	;# 
   435   000F7D                     IOCB            equ	3965	;# 
   436   000F7E                     ANSEL           equ	3966	;# 
   437   000F7F                     ANSELH          equ	3967	;# 
   438   000F80                     PORTA           equ	3968	;# 
   439   000F81                     PORTB           equ	3969	;# 
   440   000F82                     PORTC           equ	3970	;# 
   441   000F83                     PORTD           equ	3971	;# 
   442   000F84                     PORTE           equ	3972	;# 
   443   000F89                     LATA            equ	3977	;# 
   444   000F8A                     LATB            equ	3978	;# 
   445   000F8B                     LATC            equ	3979	;# 
   446   000F8C                     LATD            equ	3980	;# 
   447   000F8D                     LATE            equ	3981	;# 
   448   000F92                     TRISA           equ	3986	;# 
   449   000F92                     DDRA            equ	3986	;# 
   450   000F93                     TRISB           equ	3987	;# 
   451   000F93                     DDRB            equ	3987	;# 
   452   000F94                     TRISC           equ	3988	;# 
   453   000F94                     DDRC            equ	3988	;# 
   454   000F95                     TRISD           equ	3989	;# 
   455   000F95                     DDRD            equ	3989	;# 
   456   000F96                     TRISE           equ	3990	;# 
   457   000F96                     DDRE            equ	3990	;# 
   458   000F9B                     OSCTUNE         equ	3995	;# 
   459   000F9D                     PIE1            equ	3997	;# 
   460   000F9E                     PIR1            equ	3998	;# 
   461   000F9F                     IPR1            equ	3999	;# 
   462   000FA0                     PIE2            equ	4000	;# 
   463   000FA1                     PIR2            equ	4001	;# 
   464   000FA2                     IPR2            equ	4002	;# 
   465   000FA6                     EECON1          equ	4006	;# 
   466   000FA7                     EECON2          equ	4007	;# 
   467   000FA8                     EEDATA          equ	4008	;# 
   468   000FA9                     EEADR           equ	4009	;# 
   469   000FAA                     EEADRH          equ	4010	;# 
   470   000FAB                     RCSTA           equ	4011	;# 
   471   000FAB                     RCSTA1          equ	4011	;# 
   472   000FAC                     TXSTA           equ	4012	;# 
   473   000FAC                     TXSTA1          equ	4012	;# 
   474   000FAD                     TXREG           equ	4013	;# 
   475   000FAD                     TXREG1          equ	4013	;# 
   476   000FAE                     RCREG           equ	4014	;# 
   477   000FAE                     RCREG1          equ	4014	;# 
   478   000FAF                     SPBRG           equ	4015	;# 
   479   000FAF                     SPBRG1          equ	4015	;# 
   480   000FB0                     SPBRGH          equ	4016	;# 
   481   000FB1                     T3CON           equ	4017	;# 
   482   000FB2                     TMR3            equ	4018	;# 
   483   000FB2                     TMR3L           equ	4018	;# 
   484   000FB3                     TMR3H           equ	4019	;# 
   485   000FB4                     CVRCON2         equ	4020	;# 
   486   000FB5                     CVRCON          equ	4021	;# 
   487   000FB6                     ECCP1AS         equ	4022	;# 
   488   000FB7                     PWM1CON         equ	4023	;# 
   489   000FB8                     BAUDCON         equ	4024	;# 
   490   000FB8                     BAUDCTL         equ	4024	;# 
   491   000FB9                     PSTRCON         equ	4025	;# 
   492   000FBA                     CCP2CON         equ	4026	;# 
   493   000FBB                     CCPR2           equ	4027	;# 
   494   000FBB                     CCPR2L          equ	4027	;# 
   495   000FBC                     CCPR2H          equ	4028	;# 
   496   000FBD                     CCP1CON         equ	4029	;# 
   497   000FBE                     CCPR1           equ	4030	;# 
   498   000FBE                     CCPR1L          equ	4030	;# 
   499   000FBF                     CCPR1H          equ	4031	;# 
   500   000FC0                     ADCON2          equ	4032	;# 
   501   000FC1                     ADCON1          equ	4033	;# 
   502   000FC2                     ADCON0          equ	4034	;# 
   503   000FC3                     ADRES           equ	4035	;# 
   504   000FC3                     ADRESL          equ	4035	;# 
   505   000FC4                     ADRESH          equ	4036	;# 
   506   000FC5                     SSPCON2         equ	4037	;# 
   507   000FC6                     SSPCON1         equ	4038	;# 
   508   000FC7                     SSPSTAT         equ	4039	;# 
   509   000FC8                     SSPADD          equ	4040	;# 
   510   000FC9                     SSPBUF          equ	4041	;# 
   511   000FCA                     T2CON           equ	4042	;# 
   512   000FCB                     PR2             equ	4043	;# 
   513   000FCB                     MEMCON          equ	4043	;# 
   514   000FCC                     TMR2            equ	4044	;# 
   515   000FCD                     T1CON           equ	4045	;# 
   516   000FCE                     TMR1            equ	4046	;# 
   517   000FCE                     TMR1L           equ	4046	;# 
   518   000FCF                     TMR1H           equ	4047	;# 
   519   000FD0                     RCON            equ	4048	;# 
   520   000FD1                     WDTCON          equ	4049	;# 
   521   000FD2                     HLVDCON         equ	4050	;# 
   522   000FD2                     LVDCON          equ	4050	;# 
   523   000FD3                     OSCCON          equ	4051	;# 
   524   000FD5                     T0CON           equ	4053	;# 
   525   000FD6                     TMR0            equ	4054	;# 
   526   000FD6                     TMR0L           equ	4054	;# 
   527   000FD7                     TMR0H           equ	4055	;# 
   528   000FD8                     STATUS          equ	4056	;# 
   529   000FD9                     FSR2            equ	4057	;# 
   530   000FD9                     FSR2L           equ	4057	;# 
   531   000FDA                     FSR2H           equ	4058	;# 
   532   000FDB                     PLUSW2          equ	4059	;# 
   533   000FDC                     PREINC2         equ	4060	;# 
   534   000FDD                     POSTDEC2        equ	4061	;# 
   535   000FDE                     POSTINC2        equ	4062	;# 
   536   000FDF                     INDF2           equ	4063	;# 
   537   000FE0                     BSR             equ	4064	;# 
   538   000FE1                     FSR1            equ	4065	;# 
   539   000FE1                     FSR1L           equ	4065	;# 
   540   000FE2                     FSR1H           equ	4066	;# 
   541   000FE3                     PLUSW1          equ	4067	;# 
   542   000FE4                     PREINC1         equ	4068	;# 
   543   000FE5                     POSTDEC1        equ	4069	;# 
   544   000FE6                     POSTINC1        equ	4070	;# 
   545   000FE7                     INDF1           equ	4071	;# 
   546   000FE8                     WREG            equ	4072	;# 
   547   000FE9                     FSR0            equ	4073	;# 
   548   000FE9                     FSR0L           equ	4073	;# 
   549   000FEA                     FSR0H           equ	4074	;# 
   550   000FEB                     PLUSW0          equ	4075	;# 
   551   000FEC                     PREINC0         equ	4076	;# 
   552   000FED                     POSTDEC0        equ	4077	;# 
   553   000FEE                     POSTINC0        equ	4078	;# 
   554   000FEF                     INDF0           equ	4079	;# 
   555   000FF0                     INTCON3         equ	4080	;# 
   556   000FF1                     INTCON2         equ	4081	;# 
   557   000FF2                     INTCON          equ	4082	;# 
   558   000FF3                     PROD            equ	4083	;# 
   559   000FF3                     PRODL           equ	4083	;# 
   560   000FF4                     PRODH           equ	4084	;# 
   561   000FF5                     TABLAT          equ	4085	;# 
   562   000FF6                     TBLPTR          equ	4086	;# 
   563   000FF6                     TBLPTRL         equ	4086	;# 
   564   000FF7                     TBLPTRH         equ	4087	;# 
   565   000FF8                     TBLPTRU         equ	4088	;# 
   566   000FF9                     PCLAT           equ	4089	;# 
   567   000FF9                     PC              equ	4089	;# 
   568   000FF9                     PCL             equ	4089	;# 
   569   000FFA                     PCLATH          equ	4090	;# 
   570   000FFB                     PCLATU          equ	4091	;# 
   571   000FFC                     STKPTR          equ	4092	;# 
   572   000FFD                     TOS             equ	4093	;# 
   573   000FFD                     TOSL            equ	4093	;# 
   574   000FFE                     TOSH            equ	4094	;# 
   575   000FFF                     TOSU            equ	4095	;# 
   576   000F77                     SSPMSK          equ	3959	;# 
   577   000F78                     SLRCON          equ	3960	;# 
   578   000F79                     CM2CON1         equ	3961	;# 
   579   000F7A                     CM2CON0         equ	3962	;# 
   580   000F7B                     CM1CON0         equ	3963	;# 
   581   000F7C                     WPUB            equ	3964	;# 
   582   000F7D                     IOCB            equ	3965	;# 
   583   000F7E                     ANSEL           equ	3966	;# 
   584   000F7F                     ANSELH          equ	3967	;# 
   585   000F80                     PORTA           equ	3968	;# 
   586   000F81                     PORTB           equ	3969	;# 
   587   000F82                     PORTC           equ	3970	;# 
   588   000F83                     PORTD           equ	3971	;# 
   589   000F84                     PORTE           equ	3972	;# 
   590   000F89                     LATA            equ	3977	;# 
   591   000F8A                     LATB            equ	3978	;# 
   592   000F8B                     LATC            equ	3979	;# 
   593   000F8C                     LATD            equ	3980	;# 
   594   000F8D                     LATE            equ	3981	;# 
   595   000F92                     TRISA           equ	3986	;# 
   596   000F92                     DDRA            equ	3986	;# 
   597   000F93                     TRISB           equ	3987	;# 
   598   000F93                     DDRB            equ	3987	;# 
   599   000F94                     TRISC           equ	3988	;# 
   600   000F94                     DDRC            equ	3988	;# 
   601   000F95                     TRISD           equ	3989	;# 
   602   000F95                     DDRD            equ	3989	;# 
   603   000F96                     TRISE           equ	3990	;# 
   604   000F96                     DDRE            equ	3990	;# 
   605   000F9B                     OSCTUNE         equ	3995	;# 
   606   000F9D                     PIE1            equ	3997	;# 
   607   000F9E                     PIR1            equ	3998	;# 
   608   000F9F                     IPR1            equ	3999	;# 
   609   000FA0                     PIE2            equ	4000	;# 
   610   000FA1                     PIR2            equ	4001	;# 
   611   000FA2                     IPR2            equ	4002	;# 
   612   000FA6                     EECON1          equ	4006	;# 
   613   000FA7                     EECON2          equ	4007	;# 
   614   000FA8                     EEDATA          equ	4008	;# 
   615   000FA9                     EEADR           equ	4009	;# 
   616   000FAA                     EEADRH          equ	4010	;# 
   617   000FAB                     RCSTA           equ	4011	;# 
   618   000FAB                     RCSTA1          equ	4011	;# 
   619   000FAC                     TXSTA           equ	4012	;# 
   620   000FAC                     TXSTA1          equ	4012	;# 
   621   000FAD                     TXREG           equ	4013	;# 
   622   000FAD                     TXREG1          equ	4013	;# 
   623   000FAE                     RCREG           equ	4014	;# 
   624   000FAE                     RCREG1          equ	4014	;# 
   625   000FAF                     SPBRG           equ	4015	;# 
   626   000FAF                     SPBRG1          equ	4015	;# 
   627   000FB0                     SPBRGH          equ	4016	;# 
   628   000FB1                     T3CON           equ	4017	;# 
   629   000FB2                     TMR3            equ	4018	;# 
   630   000FB2                     TMR3L           equ	4018	;# 
   631   000FB3                     TMR3H           equ	4019	;# 
   632   000FB4                     CVRCON2         equ	4020	;# 
   633   000FB5                     CVRCON          equ	4021	;# 
   634   000FB6                     ECCP1AS         equ	4022	;# 
   635   000FB7                     PWM1CON         equ	4023	;# 
   636   000FB8                     BAUDCON         equ	4024	;# 
   637   000FB8                     BAUDCTL         equ	4024	;# 
   638   000FB9                     PSTRCON         equ	4025	;# 
   639   000FBA                     CCP2CON         equ	4026	;# 
   640   000FBB                     CCPR2           equ	4027	;# 
   641   000FBB                     CCPR2L          equ	4027	;# 
   642   000FBC                     CCPR2H          equ	4028	;# 
   643   000FBD                     CCP1CON         equ	4029	;# 
   644   000FBE                     CCPR1           equ	4030	;# 
   645   000FBE                     CCPR1L          equ	4030	;# 
   646   000FBF                     CCPR1H          equ	4031	;# 
   647   000FC0                     ADCON2          equ	4032	;# 
   648   000FC1                     ADCON1          equ	4033	;# 
   649   000FC2                     ADCON0          equ	4034	;# 
   650   000FC3                     ADRES           equ	4035	;# 
   651   000FC3                     ADRESL          equ	4035	;# 
   652   000FC4                     ADRESH          equ	4036	;# 
   653   000FC5                     SSPCON2         equ	4037	;# 
   654   000FC6                     SSPCON1         equ	4038	;# 
   655   000FC7                     SSPSTAT         equ	4039	;# 
   656   000FC8                     SSPADD          equ	4040	;# 
   657   000FC9                     SSPBUF          equ	4041	;# 
   658   000FCA                     T2CON           equ	4042	;# 
   659   000FCB                     PR2             equ	4043	;# 
   660   000FCB                     MEMCON          equ	4043	;# 
   661   000FCC                     TMR2            equ	4044	;# 
   662   000FCD                     T1CON           equ	4045	;# 
   663   000FCE                     TMR1            equ	4046	;# 
   664   000FCE                     TMR1L           equ	4046	;# 
   665   000FCF                     TMR1H           equ	4047	;# 
   666   000FD0                     RCON            equ	4048	;# 
   667   000FD1                     WDTCON          equ	4049	;# 
   668   000FD2                     HLVDCON         equ	4050	;# 
   669   000FD2                     LVDCON          equ	4050	;# 
   670   000FD3                     OSCCON          equ	4051	;# 
   671   000FD5                     T0CON           equ	4053	;# 
   672   000FD6                     TMR0            equ	4054	;# 
   673   000FD6                     TMR0L           equ	4054	;# 
   674   000FD7                     TMR0H           equ	4055	;# 
   675   000FD8                     STATUS          equ	4056	;# 
   676   000FD9                     FSR2            equ	4057	;# 
   677   000FD9                     FSR2L           equ	4057	;# 
   678   000FDA                     FSR2H           equ	4058	;# 
   679   000FDB                     PLUSW2          equ	4059	;# 
   680   000FDC                     PREINC2         equ	4060	;# 
   681   000FDD                     POSTDEC2        equ	4061	;# 
   682   000FDE                     POSTINC2        equ	4062	;# 
   683   000FDF                     INDF2           equ	4063	;# 
   684   000FE0                     BSR             equ	4064	;# 
   685   000FE1                     FSR1            equ	4065	;# 
   686   000FE1                     FSR1L           equ	4065	;# 
   687   000FE2                     FSR1H           equ	4066	;# 
   688   000FE3                     PLUSW1          equ	4067	;# 
   689   000FE4                     PREINC1         equ	4068	;# 
   690   000FE5                     POSTDEC1        equ	4069	;# 
   691   000FE6                     POSTINC1        equ	4070	;# 
   692   000FE7                     INDF1           equ	4071	;# 
   693   000FE8                     WREG            equ	4072	;# 
   694   000FE9                     FSR0            equ	4073	;# 
   695   000FE9                     FSR0L           equ	4073	;# 
   696   000FEA                     FSR0H           equ	4074	;# 
   697   000FEB                     PLUSW0          equ	4075	;# 
   698   000FEC                     PREINC0         equ	4076	;# 
   699   000FED                     POSTDEC0        equ	4077	;# 
   700   000FEE                     POSTINC0        equ	4078	;# 
   701   000FEF                     INDF0           equ	4079	;# 
   702   000FF0                     INTCON3         equ	4080	;# 
   703   000FF1                     INTCON2         equ	4081	;# 
   704   000FF2                     INTCON          equ	4082	;# 
   705   000FF3                     PROD            equ	4083	;# 
   706   000FF3                     PRODL           equ	4083	;# 
   707   000FF4                     PRODH           equ	4084	;# 
   708   000FF5                     TABLAT          equ	4085	;# 
   709   000FF6                     TBLPTR          equ	4086	;# 
   710   000FF6                     TBLPTRL         equ	4086	;# 
   711   000FF7                     TBLPTRH         equ	4087	;# 
   712   000FF8                     TBLPTRU         equ	4088	;# 
   713   000FF9                     PCLAT           equ	4089	;# 
   714   000FF9                     PC              equ	4089	;# 
   715   000FF9                     PCL             equ	4089	;# 
   716   000FFA                     PCLATH          equ	4090	;# 
   717   000FFB                     PCLATU          equ	4091	;# 
   718   000FFC                     STKPTR          equ	4092	;# 
   719   000FFD                     TOS             equ	4093	;# 
   720   000FFD                     TOSL            equ	4093	;# 
   721   000FFE                     TOSH            equ	4094	;# 
   722   000FFF                     TOSU            equ	4095	;# 
   723   000F77                     SSPMSK          equ	3959	;# 
   724   000F78                     SLRCON          equ	3960	;# 
   725   000F79                     CM2CON1         equ	3961	;# 
   726   000F7A                     CM2CON0         equ	3962	;# 
   727   000F7B                     CM1CON0         equ	3963	;# 
   728   000F7C                     WPUB            equ	3964	;# 
   729   000F7D                     IOCB            equ	3965	;# 
   730   000F7E                     ANSEL           equ	3966	;# 
   731   000F7F                     ANSELH          equ	3967	;# 
   732   000F80                     PORTA           equ	3968	;# 
   733   000F81                     PORTB           equ	3969	;# 
   734   000F82                     PORTC           equ	3970	;# 
   735   000F83                     PORTD           equ	3971	;# 
   736   000F84                     PORTE           equ	3972	;# 
   737   000F89                     LATA            equ	3977	;# 
   738   000F8A                     LATB            equ	3978	;# 
   739   000F8B                     LATC            equ	3979	;# 
   740   000F8C                     LATD            equ	3980	;# 
   741   000F8D                     LATE            equ	3981	;# 
   742   000F92                     TRISA           equ	3986	;# 
   743   000F92                     DDRA            equ	3986	;# 
   744   000F93                     TRISB           equ	3987	;# 
   745   000F93                     DDRB            equ	3987	;# 
   746   000F94                     TRISC           equ	3988	;# 
   747   000F94                     DDRC            equ	3988	;# 
   748   000F95                     TRISD           equ	3989	;# 
   749   000F95                     DDRD            equ	3989	;# 
   750   000F96                     TRISE           equ	3990	;# 
   751   000F96                     DDRE            equ	3990	;# 
   752   000F9B                     OSCTUNE         equ	3995	;# 
   753   000F9D                     PIE1            equ	3997	;# 
   754   000F9E                     PIR1            equ	3998	;# 
   755   000F9F                     IPR1            equ	3999	;# 
   756   000FA0                     PIE2            equ	4000	;# 
   757   000FA1                     PIR2            equ	4001	;# 
   758   000FA2                     IPR2            equ	4002	;# 
   759   000FA6                     EECON1          equ	4006	;# 
   760   000FA7                     EECON2          equ	4007	;# 
   761   000FA8                     EEDATA          equ	4008	;# 
   762   000FA9                     EEADR           equ	4009	;# 
   763   000FAA                     EEADRH          equ	4010	;# 
   764   000FAB                     RCSTA           equ	4011	;# 
   765   000FAB                     RCSTA1          equ	4011	;# 
   766   000FAC                     TXSTA           equ	4012	;# 
   767   000FAC                     TXSTA1          equ	4012	;# 
   768   000FAD                     TXREG           equ	4013	;# 
   769   000FAD                     TXREG1          equ	4013	;# 
   770   000FAE                     RCREG           equ	4014	;# 
   771   000FAE                     RCREG1          equ	4014	;# 
   772   000FAF                     SPBRG           equ	4015	;# 
   773   000FAF                     SPBRG1          equ	4015	;# 
   774   000FB0                     SPBRGH          equ	4016	;# 
   775   000FB1                     T3CON           equ	4017	;# 
   776   000FB2                     TMR3            equ	4018	;# 
   777   000FB2                     TMR3L           equ	4018	;# 
   778   000FB3                     TMR3H           equ	4019	;# 
   779   000FB4                     CVRCON2         equ	4020	;# 
   780   000FB5                     CVRCON          equ	4021	;# 
   781   000FB6                     ECCP1AS         equ	4022	;# 
   782   000FB7                     PWM1CON         equ	4023	;# 
   783   000FB8                     BAUDCON         equ	4024	;# 
   784   000FB8                     BAUDCTL         equ	4024	;# 
   785   000FB9                     PSTRCON         equ	4025	;# 
   786   000FBA                     CCP2CON         equ	4026	;# 
   787   000FBB                     CCPR2           equ	4027	;# 
   788   000FBB                     CCPR2L          equ	4027	;# 
   789   000FBC                     CCPR2H          equ	4028	;# 
   790   000FBD                     CCP1CON         equ	4029	;# 
   791   000FBE                     CCPR1           equ	4030	;# 
   792   000FBE                     CCPR1L          equ	4030	;# 
   793   000FBF                     CCPR1H          equ	4031	;# 
   794   000FC0                     ADCON2          equ	4032	;# 
   795   000FC1                     ADCON1          equ	4033	;# 
   796   000FC2                     ADCON0          equ	4034	;# 
   797   000FC3                     ADRES           equ	4035	;# 
   798   000FC3                     ADRESL          equ	4035	;# 
   799   000FC4                     ADRESH          equ	4036	;# 
   800   000FC5                     SSPCON2         equ	4037	;# 
   801   000FC6                     SSPCON1         equ	4038	;# 
   802   000FC7                     SSPSTAT         equ	4039	;# 
   803   000FC8                     SSPADD          equ	4040	;# 
   804   000FC9                     SSPBUF          equ	4041	;# 
   805   000FCA                     T2CON           equ	4042	;# 
   806   000FCB                     PR2             equ	4043	;# 
   807   000FCB                     MEMCON          equ	4043	;# 
   808   000FCC                     TMR2            equ	4044	;# 
   809   000FCD                     T1CON           equ	4045	;# 
   810   000FCE                     TMR1            equ	4046	;# 
   811   000FCE                     TMR1L           equ	4046	;# 
   812   000FCF                     TMR1H           equ	4047	;# 
   813   000FD0                     RCON            equ	4048	;# 
   814   000FD1                     WDTCON          equ	4049	;# 
   815   000FD2                     HLVDCON         equ	4050	;# 
   816   000FD2                     LVDCON          equ	4050	;# 
   817   000FD3                     OSCCON          equ	4051	;# 
   818   000FD5                     T0CON           equ	4053	;# 
   819   000FD6                     TMR0            equ	4054	;# 
   820   000FD6                     TMR0L           equ	4054	;# 
   821   000FD7                     TMR0H           equ	4055	;# 
   822   000FD8                     STATUS          equ	4056	;# 
   823   000FD9                     FSR2            equ	4057	;# 
   824   000FD9                     FSR2L           equ	4057	;# 
   825   000FDA                     FSR2H           equ	4058	;# 
   826   000FDB                     PLUSW2          equ	4059	;# 
   827   000FDC                     PREINC2         equ	4060	;# 
   828   000FDD                     POSTDEC2        equ	4061	;# 
   829   000FDE                     POSTINC2        equ	4062	;# 
   830   000FDF                     INDF2           equ	4063	;# 
   831   000FE0                     BSR             equ	4064	;# 
   832   000FE1                     FSR1            equ	4065	;# 
   833   000FE1                     FSR1L           equ	4065	;# 
   834   000FE2                     FSR1H           equ	4066	;# 
   835   000FE3                     PLUSW1          equ	4067	;# 
   836   000FE4                     PREINC1         equ	4068	;# 
   837   000FE5                     POSTDEC1        equ	4069	;# 
   838   000FE6                     POSTINC1        equ	4070	;# 
   839   000FE7                     INDF1           equ	4071	;# 
   840   000FE8                     WREG            equ	4072	;# 
   841   000FE9                     FSR0            equ	4073	;# 
   842   000FE9                     FSR0L           equ	4073	;# 
   843   000FEA                     FSR0H           equ	4074	;# 
   844   000FEB                     PLUSW0          equ	4075	;# 
   845   000FEC                     PREINC0         equ	4076	;# 
   846   000FED                     POSTDEC0        equ	4077	;# 
   847   000FEE                     POSTINC0        equ	4078	;# 
   848   000FEF                     INDF0           equ	4079	;# 
   849   000FF0                     INTCON3         equ	4080	;# 
   850   000FF1                     INTCON2         equ	4081	;# 
   851   000FF2                     INTCON          equ	4082	;# 
   852   000FF3                     PROD            equ	4083	;# 
   853   000FF3                     PRODL           equ	4083	;# 
   854   000FF4                     PRODH           equ	4084	;# 
   855   000FF5                     TABLAT          equ	4085	;# 
   856   000FF6                     TBLPTR          equ	4086	;# 
   857   000FF6                     TBLPTRL         equ	4086	;# 
   858   000FF7                     TBLPTRH         equ	4087	;# 
   859   000FF8                     TBLPTRU         equ	4088	;# 
   860   000FF9                     PCLAT           equ	4089	;# 
   861   000FF9                     PC              equ	4089	;# 
   862   000FF9                     PCL             equ	4089	;# 
   863   000FFA                     PCLATH          equ	4090	;# 
   864   000FFB                     PCLATU          equ	4091	;# 
   865   000FFC                     STKPTR          equ	4092	;# 
   866   000FFD                     TOS             equ	4093	;# 
   867   000FFD                     TOSL            equ	4093	;# 
   868   000FFE                     TOSH            equ	4094	;# 
   869   000FFF                     TOSU            equ	4095	;# 
   870   000F77                     SSPMSK          equ	3959	;# 
   871   000F78                     SLRCON          equ	3960	;# 
   872   000F79                     CM2CON1         equ	3961	;# 
   873   000F7A                     CM2CON0         equ	3962	;# 
   874   000F7B                     CM1CON0         equ	3963	;# 
   875   000F7C                     WPUB            equ	3964	;# 
   876   000F7D                     IOCB            equ	3965	;# 
   877   000F7E                     ANSEL           equ	3966	;# 
   878   000F7F                     ANSELH          equ	3967	;# 
   879   000F80                     PORTA           equ	3968	;# 
   880   000F81                     PORTB           equ	3969	;# 
   881   000F82                     PORTC           equ	3970	;# 
   882   000F83                     PORTD           equ	3971	;# 
   883   000F84                     PORTE           equ	3972	;# 
   884   000F89                     LATA            equ	3977	;# 
   885   000F8A                     LATB            equ	3978	;# 
   886   000F8B                     LATC            equ	3979	;# 
   887   000F8C                     LATD            equ	3980	;# 
   888   000F8D                     LATE            equ	3981	;# 
   889   000F92                     TRISA           equ	3986	;# 
   890   000F92                     DDRA            equ	3986	;# 
   891   000F93                     TRISB           equ	3987	;# 
   892   000F93                     DDRB            equ	3987	;# 
   893   000F94                     TRISC           equ	3988	;# 
   894   000F94                     DDRC            equ	3988	;# 
   895   000F95                     TRISD           equ	3989	;# 
   896   000F95                     DDRD            equ	3989	;# 
   897   000F96                     TRISE           equ	3990	;# 
   898   000F96                     DDRE            equ	3990	;# 
   899   000F9B                     OSCTUNE         equ	3995	;# 
   900   000F9D                     PIE1            equ	3997	;# 
   901   000F9E                     PIR1            equ	3998	;# 
   902   000F9F                     IPR1            equ	3999	;# 
   903   000FA0                     PIE2            equ	4000	;# 
   904   000FA1                     PIR2            equ	4001	;# 
   905   000FA2                     IPR2            equ	4002	;# 
   906   000FA6                     EECON1          equ	4006	;# 
   907   000FA7                     EECON2          equ	4007	;# 
   908   000FA8                     EEDATA          equ	4008	;# 
   909   000FA9                     EEADR           equ	4009	;# 
   910   000FAA                     EEADRH          equ	4010	;# 
   911   000FAB                     RCSTA           equ	4011	;# 
   912   000FAB                     RCSTA1          equ	4011	;# 
   913   000FAC                     TXSTA           equ	4012	;# 
   914   000FAC                     TXSTA1          equ	4012	;# 
   915   000FAD                     TXREG           equ	4013	;# 
   916   000FAD                     TXREG1          equ	4013	;# 
   917   000FAE                     RCREG           equ	4014	;# 
   918   000FAE                     RCREG1          equ	4014	;# 
   919   000FAF                     SPBRG           equ	4015	;# 
   920   000FAF                     SPBRG1          equ	4015	;# 
   921   000FB0                     SPBRGH          equ	4016	;# 
   922   000FB1                     T3CON           equ	4017	;# 
   923   000FB2                     TMR3            equ	4018	;# 
   924   000FB2                     TMR3L           equ	4018	;# 
   925   000FB3                     TMR3H           equ	4019	;# 
   926   000FB4                     CVRCON2         equ	4020	;# 
   927   000FB5                     CVRCON          equ	4021	;# 
   928   000FB6                     ECCP1AS         equ	4022	;# 
   929   000FB7                     PWM1CON         equ	4023	;# 
   930   000FB8                     BAUDCON         equ	4024	;# 
   931   000FB8                     BAUDCTL         equ	4024	;# 
   932   000FB9                     PSTRCON         equ	4025	;# 
   933   000FBA                     CCP2CON         equ	4026	;# 
   934   000FBB                     CCPR2           equ	4027	;# 
   935   000FBB                     CCPR2L          equ	4027	;# 
   936   000FBC                     CCPR2H          equ	4028	;# 
   937   000FBD                     CCP1CON         equ	4029	;# 
   938   000FBE                     CCPR1           equ	4030	;# 
   939   000FBE                     CCPR1L          equ	4030	;# 
   940   000FBF                     CCPR1H          equ	4031	;# 
   941   000FC0                     ADCON2          equ	4032	;# 
   942   000FC1                     ADCON1          equ	4033	;# 
   943   000FC2                     ADCON0          equ	4034	;# 
   944   000FC3                     ADRES           equ	4035	;# 
   945   000FC3                     ADRESL          equ	4035	;# 
   946   000FC4                     ADRESH          equ	4036	;# 
   947   000FC5                     SSPCON2         equ	4037	;# 
   948   000FC6                     SSPCON1         equ	4038	;# 
   949   000FC7                     SSPSTAT         equ	4039	;# 
   950   000FC8                     SSPADD          equ	4040	;# 
   951   000FC9                     SSPBUF          equ	4041	;# 
   952   000FCA                     T2CON           equ	4042	;# 
   953   000FCB                     PR2             equ	4043	;# 
   954   000FCB                     MEMCON          equ	4043	;# 
   955   000FCC                     TMR2            equ	4044	;# 
   956   000FCD                     T1CON           equ	4045	;# 
   957   000FCE                     TMR1            equ	4046	;# 
   958   000FCE                     TMR1L           equ	4046	;# 
   959   000FCF                     TMR1H           equ	4047	;# 
   960   000FD0                     RCON            equ	4048	;# 
   961   000FD1                     WDTCON          equ	4049	;# 
   962   000FD2                     HLVDCON         equ	4050	;# 
   963   000FD2                     LVDCON          equ	4050	;# 
   964   000FD3                     OSCCON          equ	4051	;# 
   965   000FD5                     T0CON           equ	4053	;# 
   966   000FD6                     TMR0            equ	4054	;# 
   967   000FD6                     TMR0L           equ	4054	;# 
   968   000FD7                     TMR0H           equ	4055	;# 
   969   000FD8                     STATUS          equ	4056	;# 
   970   000FD9                     FSR2            equ	4057	;# 
   971   000FD9                     FSR2L           equ	4057	;# 
   972   000FDA                     FSR2H           equ	4058	;# 
   973   000FDB                     PLUSW2          equ	4059	;# 
   974   000FDC                     PREINC2         equ	4060	;# 
   975   000FDD                     POSTDEC2        equ	4061	;# 
   976   000FDE                     POSTINC2        equ	4062	;# 
   977   000FDF                     INDF2           equ	4063	;# 
   978   000FE0                     BSR             equ	4064	;# 
   979   000FE1                     FSR1            equ	4065	;# 
   980   000FE1                     FSR1L           equ	4065	;# 
   981   000FE2                     FSR1H           equ	4066	;# 
   982   000FE3                     PLUSW1          equ	4067	;# 
   983   000FE4                     PREINC1         equ	4068	;# 
   984   000FE5                     POSTDEC1        equ	4069	;# 
   985   000FE6                     POSTINC1        equ	4070	;# 
   986   000FE7                     INDF1           equ	4071	;# 
   987   000FE8                     WREG            equ	4072	;# 
   988   000FE9                     FSR0            equ	4073	;# 
   989   000FE9                     FSR0L           equ	4073	;# 
   990   000FEA                     FSR0H           equ	4074	;# 
   991   000FEB                     PLUSW0          equ	4075	;# 
   992   000FEC                     PREINC0         equ	4076	;# 
   993   000FED                     POSTDEC0        equ	4077	;# 
   994   000FEE                     POSTINC0        equ	4078	;# 
   995   000FEF                     INDF0           equ	4079	;# 
   996   000FF0                     INTCON3         equ	4080	;# 
   997   000FF1                     INTCON2         equ	4081	;# 
   998   000FF2                     INTCON          equ	4082	;# 
   999   000FF3                     PROD            equ	4083	;# 
  1000   000FF3                     PRODL           equ	4083	;# 
  1001   000FF4                     PRODH           equ	4084	;# 
  1002   000FF5                     TABLAT          equ	4085	;# 
  1003   000FF6                     TBLPTR          equ	4086	;# 
  1004   000FF6                     TBLPTRL         equ	4086	;# 
  1005   000FF7                     TBLPTRH         equ	4087	;# 
  1006   000FF8                     TBLPTRU         equ	4088	;# 
  1007   000FF9                     PCLAT           equ	4089	;# 
  1008   000FF9                     PC              equ	4089	;# 
  1009   000FF9                     PCL             equ	4089	;# 
  1010   000FFA                     PCLATH          equ	4090	;# 
  1011   000FFB                     PCLATU          equ	4091	;# 
  1012   000FFC                     STKPTR          equ	4092	;# 
  1013   000FFD                     TOS             equ	4093	;# 
  1014   000FFD                     TOSL            equ	4093	;# 
  1015   000FFE                     TOSH            equ	4094	;# 
  1016   000FFF                     TOSU            equ	4095	;# 
  1017   000F77                     SSPMSK          equ	3959	;# 
  1018   000F78                     SLRCON          equ	3960	;# 
  1019   000F79                     CM2CON1         equ	3961	;# 
  1020   000F7A                     CM2CON0         equ	3962	;# 
  1021   000F7B                     CM1CON0         equ	3963	;# 
  1022   000F7C                     WPUB            equ	3964	;# 
  1023   000F7D                     IOCB            equ	3965	;# 
  1024   000F7E                     ANSEL           equ	3966	;# 
  1025   000F7F                     ANSELH          equ	3967	;# 
  1026   000F80                     PORTA           equ	3968	;# 
  1027   000F81                     PORTB           equ	3969	;# 
  1028   000F82                     PORTC           equ	3970	;# 
  1029   000F83                     PORTD           equ	3971	;# 
  1030   000F84                     PORTE           equ	3972	;# 
  1031   000F89                     LATA            equ	3977	;# 
  1032   000F8A                     LATB            equ	3978	;# 
  1033   000F8B                     LATC            equ	3979	;# 
  1034   000F8C                     LATD            equ	3980	;# 
  1035   000F8D                     LATE            equ	3981	;# 
  1036   000F92                     TRISA           equ	3986	;# 
  1037   000F92                     DDRA            equ	3986	;# 
  1038   000F93                     TRISB           equ	3987	;# 
  1039   000F93                     DDRB            equ	3987	;# 
  1040   000F94                     TRISC           equ	3988	;# 
  1041   000F94                     DDRC            equ	3988	;# 
  1042   000F95                     TRISD           equ	3989	;# 
  1043   000F95                     DDRD            equ	3989	;# 
  1044   000F96                     TRISE           equ	3990	;# 
  1045   000F96                     DDRE            equ	3990	;# 
  1046   000F9B                     OSCTUNE         equ	3995	;# 
  1047   000F9D                     PIE1            equ	3997	;# 
  1048   000F9E                     PIR1            equ	3998	;# 
  1049   000F9F                     IPR1            equ	3999	;# 
  1050   000FA0                     PIE2            equ	4000	;# 
  1051   000FA1                     PIR2            equ	4001	;# 
  1052   000FA2                     IPR2            equ	4002	;# 
  1053   000FA6                     EECON1          equ	4006	;# 
  1054   000FA7                     EECON2          equ	4007	;# 
  1055   000FA8                     EEDATA          equ	4008	;# 
  1056   000FA9                     EEADR           equ	4009	;# 
  1057   000FAA                     EEADRH          equ	4010	;# 
  1058   000FAB                     RCSTA           equ	4011	;# 
  1059   000FAB                     RCSTA1          equ	4011	;# 
  1060   000FAC                     TXSTA           equ	4012	;# 
  1061   000FAC                     TXSTA1          equ	4012	;# 
  1062   000FAD                     TXREG           equ	4013	;# 
  1063   000FAD                     TXREG1          equ	4013	;# 
  1064   000FAE                     RCREG           equ	4014	;# 
  1065   000FAE                     RCREG1          equ	4014	;# 
  1066   000FAF                     SPBRG           equ	4015	;# 
  1067   000FAF                     SPBRG1          equ	4015	;# 
  1068   000FB0                     SPBRGH          equ	4016	;# 
  1069   000FB1                     T3CON           equ	4017	;# 
  1070   000FB2                     TMR3            equ	4018	;# 
  1071   000FB2                     TMR3L           equ	4018	;# 
  1072   000FB3                     TMR3H           equ	4019	;# 
  1073   000FB4                     CVRCON2         equ	4020	;# 
  1074   000FB5                     CVRCON          equ	4021	;# 
  1075   000FB6                     ECCP1AS         equ	4022	;# 
  1076   000FB7                     PWM1CON         equ	4023	;# 
  1077   000FB8                     BAUDCON         equ	4024	;# 
  1078   000FB8                     BAUDCTL         equ	4024	;# 
  1079   000FB9                     PSTRCON         equ	4025	;# 
  1080   000FBA                     CCP2CON         equ	4026	;# 
  1081   000FBB                     CCPR2           equ	4027	;# 
  1082   000FBB                     CCPR2L          equ	4027	;# 
  1083   000FBC                     CCPR2H          equ	4028	;# 
  1084   000FBD                     CCP1CON         equ	4029	;# 
  1085   000FBE                     CCPR1           equ	4030	;# 
  1086   000FBE                     CCPR1L          equ	4030	;# 
  1087   000FBF                     CCPR1H          equ	4031	;# 
  1088   000FC0                     ADCON2          equ	4032	;# 
  1089   000FC1                     ADCON1          equ	4033	;# 
  1090   000FC2                     ADCON0          equ	4034	;# 
  1091   000FC3                     ADRES           equ	4035	;# 
  1092   000FC3                     ADRESL          equ	4035	;# 
  1093   000FC4                     ADRESH          equ	4036	;# 
  1094   000FC5                     SSPCON2         equ	4037	;# 
  1095   000FC6                     SSPCON1         equ	4038	;# 
  1096   000FC7                     SSPSTAT         equ	4039	;# 
  1097   000FC8                     SSPADD          equ	4040	;# 
  1098   000FC9                     SSPBUF          equ	4041	;# 
  1099   000FCA                     T2CON           equ	4042	;# 
  1100   000FCB                     PR2             equ	4043	;# 
  1101   000FCB                     MEMCON          equ	4043	;# 
  1102   000FCC                     TMR2            equ	4044	;# 
  1103   000FCD                     T1CON           equ	4045	;# 
  1104   000FCE                     TMR1            equ	4046	;# 
  1105   000FCE                     TMR1L           equ	4046	;# 
  1106   000FCF                     TMR1H           equ	4047	;# 
  1107   000FD0                     RCON            equ	4048	;# 
  1108   000FD1                     WDTCON          equ	4049	;# 
  1109   000FD2                     HLVDCON         equ	4050	;# 
  1110   000FD2                     LVDCON          equ	4050	;# 
  1111   000FD3                     OSCCON          equ	4051	;# 
  1112   000FD5                     T0CON           equ	4053	;# 
  1113   000FD6                     TMR0            equ	4054	;# 
  1114   000FD6                     TMR0L           equ	4054	;# 
  1115   000FD7                     TMR0H           equ	4055	;# 
  1116   000FD8                     STATUS          equ	4056	;# 
  1117   000FD9                     FSR2            equ	4057	;# 
  1118   000FD9                     FSR2L           equ	4057	;# 
  1119   000FDA                     FSR2H           equ	4058	;# 
  1120   000FDB                     PLUSW2          equ	4059	;# 
  1121   000FDC                     PREINC2         equ	4060	;# 
  1122   000FDD                     POSTDEC2        equ	4061	;# 
  1123   000FDE                     POSTINC2        equ	4062	;# 
  1124   000FDF                     INDF2           equ	4063	;# 
  1125   000FE0                     BSR             equ	4064	;# 
  1126   000FE1                     FSR1            equ	4065	;# 
  1127   000FE1                     FSR1L           equ	4065	;# 
  1128   000FE2                     FSR1H           equ	4066	;# 
  1129   000FE3                     PLUSW1          equ	4067	;# 
  1130   000FE4                     PREINC1         equ	4068	;# 
  1131   000FE5                     POSTDEC1        equ	4069	;# 
  1132   000FE6                     POSTINC1        equ	4070	;# 
  1133   000FE7                     INDF1           equ	4071	;# 
  1134   000FE8                     WREG            equ	4072	;# 
  1135   000FE9                     FSR0            equ	4073	;# 
  1136   000FE9                     FSR0L           equ	4073	;# 
  1137   000FEA                     FSR0H           equ	4074	;# 
  1138   000FEB                     PLUSW0          equ	4075	;# 
  1139   000FEC                     PREINC0         equ	4076	;# 
  1140   000FED                     POSTDEC0        equ	4077	;# 
  1141   000FEE                     POSTINC0        equ	4078	;# 
  1142   000FEF                     INDF0           equ	4079	;# 
  1143   000FF0                     INTCON3         equ	4080	;# 
  1144   000FF1                     INTCON2         equ	4081	;# 
  1145   000FF2                     INTCON          equ	4082	;# 
  1146   000FF3                     PROD            equ	4083	;# 
  1147   000FF3                     PRODL           equ	4083	;# 
  1148   000FF4                     PRODH           equ	4084	;# 
  1149   000FF5                     TABLAT          equ	4085	;# 
  1150   000FF6                     TBLPTR          equ	4086	;# 
  1151   000FF6                     TBLPTRL         equ	4086	;# 
  1152   000FF7                     TBLPTRH         equ	4087	;# 
  1153   000FF8                     TBLPTRU         equ	4088	;# 
  1154   000FF9                     PCLAT           equ	4089	;# 
  1155   000FF9                     PC              equ	4089	;# 
  1156   000FF9                     PCL             equ	4089	;# 
  1157   000FFA                     PCLATH          equ	4090	;# 
  1158   000FFB                     PCLATU          equ	4091	;# 
  1159   000FFC                     STKPTR          equ	4092	;# 
  1160   000FFD                     TOS             equ	4093	;# 
  1161   000FFD                     TOSL            equ	4093	;# 
  1162   000FFE                     TOSH            equ	4094	;# 
  1163   000FFF                     TOSU            equ	4095	;# 
  1164   000F77                     SSPMSK          equ	3959	;# 
  1165   000F78                     SLRCON          equ	3960	;# 
  1166   000F79                     CM2CON1         equ	3961	;# 
  1167   000F7A                     CM2CON0         equ	3962	;# 
  1168   000F7B                     CM1CON0         equ	3963	;# 
  1169   000F7C                     WPUB            equ	3964	;# 
  1170   000F7D                     IOCB            equ	3965	;# 
  1171   000F7E                     ANSEL           equ	3966	;# 
  1172   000F7F                     ANSELH          equ	3967	;# 
  1173   000F80                     PORTA           equ	3968	;# 
  1174   000F81                     PORTB           equ	3969	;# 
  1175   000F82                     PORTC           equ	3970	;# 
  1176   000F83                     PORTD           equ	3971	;# 
  1177   000F84                     PORTE           equ	3972	;# 
  1178   000F89                     LATA            equ	3977	;# 
  1179   000F8A                     LATB            equ	3978	;# 
  1180   000F8B                     LATC            equ	3979	;# 
  1181   000F8C                     LATD            equ	3980	;# 
  1182   000F8D                     LATE            equ	3981	;# 
  1183   000F92                     TRISA           equ	3986	;# 
  1184   000F92                     DDRA            equ	3986	;# 
  1185   000F93                     TRISB           equ	3987	;# 
  1186   000F93                     DDRB            equ	3987	;# 
  1187   000F94                     TRISC           equ	3988	;# 
  1188   000F94                     DDRC            equ	3988	;# 
  1189   000F95                     TRISD           equ	3989	;# 
  1190   000F95                     DDRD            equ	3989	;# 
  1191   000F96                     TRISE           equ	3990	;# 
  1192   000F96                     DDRE            equ	3990	;# 
  1193   000F9B                     OSCTUNE         equ	3995	;# 
  1194   000F9D                     PIE1            equ	3997	;# 
  1195   000F9E                     PIR1            equ	3998	;# 
  1196   000F9F                     IPR1            equ	3999	;# 
  1197   000FA0                     PIE2            equ	4000	;# 
  1198   000FA1                     PIR2            equ	4001	;# 
  1199   000FA2                     IPR2            equ	4002	;# 
  1200   000FA6                     EECON1          equ	4006	;# 
  1201   000FA7                     EECON2          equ	4007	;# 
  1202   000FA8                     EEDATA          equ	4008	;# 
  1203   000FA9                     EEADR           equ	4009	;# 
  1204   000FAA                     EEADRH          equ	4010	;# 
  1205   000FAB                     RCSTA           equ	4011	;# 
  1206   000FAB                     RCSTA1          equ	4011	;# 
  1207   000FAC                     TXSTA           equ	4012	;# 
  1208   000FAC                     TXSTA1          equ	4012	;# 
  1209   000FAD                     TXREG           equ	4013	;# 
  1210   000FAD                     TXREG1          equ	4013	;# 
  1211   000FAE                     RCREG           equ	4014	;# 
  1212   000FAE                     RCREG1          equ	4014	;# 
  1213   000FAF                     SPBRG           equ	4015	;# 
  1214   000FAF                     SPBRG1          equ	4015	;# 
  1215   000FB0                     SPBRGH          equ	4016	;# 
  1216   000FB1                     T3CON           equ	4017	;# 
  1217   000FB2                     TMR3            equ	4018	;# 
  1218   000FB2                     TMR3L           equ	4018	;# 
  1219   000FB3                     TMR3H           equ	4019	;# 
  1220   000FB4                     CVRCON2         equ	4020	;# 
  1221   000FB5                     CVRCON          equ	4021	;# 
  1222   000FB6                     ECCP1AS         equ	4022	;# 
  1223   000FB7                     PWM1CON         equ	4023	;# 
  1224   000FB8                     BAUDCON         equ	4024	;# 
  1225   000FB8                     BAUDCTL         equ	4024	;# 
  1226   000FB9                     PSTRCON         equ	4025	;# 
  1227   000FBA                     CCP2CON         equ	4026	;# 
  1228   000FBB                     CCPR2           equ	4027	;# 
  1229   000FBB                     CCPR2L          equ	4027	;# 
  1230   000FBC                     CCPR2H          equ	4028	;# 
  1231   000FBD                     CCP1CON         equ	4029	;# 
  1232   000FBE                     CCPR1           equ	4030	;# 
  1233   000FBE                     CCPR1L          equ	4030	;# 
  1234   000FBF                     CCPR1H          equ	4031	;# 
  1235   000FC0                     ADCON2          equ	4032	;# 
  1236   000FC1                     ADCON1          equ	4033	;# 
  1237   000FC2                     ADCON0          equ	4034	;# 
  1238   000FC3                     ADRES           equ	4035	;# 
  1239   000FC3                     ADRESL          equ	4035	;# 
  1240   000FC4                     ADRESH          equ	4036	;# 
  1241   000FC5                     SSPCON2         equ	4037	;# 
  1242   000FC6                     SSPCON1         equ	4038	;# 
  1243   000FC7                     SSPSTAT         equ	4039	;# 
  1244   000FC8                     SSPADD          equ	4040	;# 
  1245   000FC9                     SSPBUF          equ	4041	;# 
  1246   000FCA                     T2CON           equ	4042	;# 
  1247   000FCB                     PR2             equ	4043	;# 
  1248   000FCB                     MEMCON          equ	4043	;# 
  1249   000FCC                     TMR2            equ	4044	;# 
  1250   000FCD                     T1CON           equ	4045	;# 
  1251   000FCE                     TMR1            equ	4046	;# 
  1252   000FCE                     TMR1L           equ	4046	;# 
  1253   000FCF                     TMR1H           equ	4047	;# 
  1254   000FD0                     RCON            equ	4048	;# 
  1255   000FD1                     WDTCON          equ	4049	;# 
  1256   000FD2                     HLVDCON         equ	4050	;# 
  1257   000FD2                     LVDCON          equ	4050	;# 
  1258   000FD3                     OSCCON          equ	4051	;# 
  1259   000FD5                     T0CON           equ	4053	;# 
  1260   000FD6                     TMR0            equ	4054	;# 
  1261   000FD6                     TMR0L           equ	4054	;# 
  1262   000FD7                     TMR0H           equ	4055	;# 
  1263   000FD8                     STATUS          equ	4056	;# 
  1264   000FD9                     FSR2            equ	4057	;# 
  1265   000FD9                     FSR2L           equ	4057	;# 
  1266   000FDA                     FSR2H           equ	4058	;# 
  1267   000FDB                     PLUSW2          equ	4059	;# 
  1268   000FDC                     PREINC2         equ	4060	;# 
  1269   000FDD                     POSTDEC2        equ	4061	;# 
  1270   000FDE                     POSTINC2        equ	4062	;# 
  1271   000FDF                     INDF2           equ	4063	;# 
  1272   000FE0                     BSR             equ	4064	;# 
  1273   000FE1                     FSR1            equ	4065	;# 
  1274   000FE1                     FSR1L           equ	4065	;# 
  1275   000FE2                     FSR1H           equ	4066	;# 
  1276   000FE3                     PLUSW1          equ	4067	;# 
  1277   000FE4                     PREINC1         equ	4068	;# 
  1278   000FE5                     POSTDEC1        equ	4069	;# 
  1279   000FE6                     POSTINC1        equ	4070	;# 
  1280   000FE7                     INDF1           equ	4071	;# 
  1281   000FE8                     WREG            equ	4072	;# 
  1282   000FE9                     FSR0            equ	4073	;# 
  1283   000FE9                     FSR0L           equ	4073	;# 
  1284   000FEA                     FSR0H           equ	4074	;# 
  1285   000FEB                     PLUSW0          equ	4075	;# 
  1286   000FEC                     PREINC0         equ	4076	;# 
  1287   000FED                     POSTDEC0        equ	4077	;# 
  1288   000FEE                     POSTINC0        equ	4078	;# 
  1289   000FEF                     INDF0           equ	4079	;# 
  1290   000FF0                     INTCON3         equ	4080	;# 
  1291   000FF1                     INTCON2         equ	4081	;# 
  1292   000FF2                     INTCON          equ	4082	;# 
  1293   000FF3                     PROD            equ	4083	;# 
  1294   000FF3                     PRODL           equ	4083	;# 
  1295   000FF4                     PRODH           equ	4084	;# 
  1296   000FF5                     TABLAT          equ	4085	;# 
  1297   000FF6                     TBLPTR          equ	4086	;# 
  1298   000FF6                     TBLPTRL         equ	4086	;# 
  1299   000FF7                     TBLPTRH         equ	4087	;# 
  1300   000FF8                     TBLPTRU         equ	4088	;# 
  1301   000FF9                     PCLAT           equ	4089	;# 
  1302   000FF9                     PC              equ	4089	;# 
  1303   000FF9                     PCL             equ	4089	;# 
  1304   000FFA                     PCLATH          equ	4090	;# 
  1305   000FFB                     PCLATU          equ	4091	;# 
  1306   000FFC                     STKPTR          equ	4092	;# 
  1307   000FFD                     TOS             equ	4093	;# 
  1308   000FFD                     TOSL            equ	4093	;# 
  1309   000FFE                     TOSH            equ	4094	;# 
  1310   000FFF                     TOSU            equ	4095	;# 
  1311                           
  1312                           	psect	idataBANK1
  1313   001C9A                     __pidataBANK1:
  1314                           	callstack 0
  1315                           
  1316                           ;initializer for envio@F3359
  1317   001C9A  4D                 	db	77
  1318   001C9B  52                 	db	82
  1319   001C9C  46                 	db	70
  1320   001C9D  43                 	db	67
  1321   001C9E  4E                 	db	78
  1322   001C9F  46                 	db	70
  1323   001CA0  3A                 	db	58
  1324   001CA1  00                 	db	0
  1325   001CA2  00                 	db	0
  1326   001CA3  00                 	db	0
  1327   001CA4  00                 	db	0
  1328   001CA5  00                 	db	0
  1329   001CA6  00                 	db	0
  1330   001CA7  00                 	db	0
  1331   001CA8  00                 	db	0
  1332   001CA9  00                 	db	0
  1333   001CAA  00                 	db	0
  1334   001CAB  00                 	db	0
  1335   001CAC  00                 	db	0
  1336   001CAD  00                 	db	0
  1337   001CAE  00                 	db	0
  1338   001CAF  00                 	db	0
  1339   001CB0  00                 	db	0
  1340   001CB1  00                 	db	0
  1341   001CB2  00                 	db	0
  1342   001CB3  00                 	db	0
  1343   001CB4  00                 	db	0
  1344   001CB5  00                 	db	0
  1345   001CB6  00                 	db	0
  1346   001CB7  00                 	db	0
  1347   001CB8  00                 	db	0
  1348   001CB9  00                 	db	0
  1349   001CBA  00                 	db	0
  1350   001CBB  00                 	db	0
  1351   001CBC  00                 	db	0
  1352   001CBD  00                 	db	0
  1353   001CBE  00                 	db	0
  1354   001CBF  00                 	db	0
  1355   001CC0  00                 	db	0
  1356   001CC1  00                 	db	0
  1357   001CC2  00                 	db	0
  1358   001CC3  00                 	db	0
  1359   001CC4  00                 	db	0
  1360                           
  1361                           	psect	smallconst
  1362   001000                     __psmallconst:
  1363                           	callstack 0
  1364   001000  00                 	db	0
  1365   001001                     _default_security_key:
  1366                           	callstack 0
  1367   001001  00                 	db	0
  1368   001002  10                 	db	16
  1369   001003  25                 	db	37
  1370   001004  37                 	db	55
  1371   001005  04                 	db	4
  1372   001006  55                 	db	85
  1373   001007  06                 	db	6
  1374   001008  79                 	db	121
  1375   001009  08                 	db	8
  1376   00100A  09                 	db	9
  1377   00100B  10                 	db	16
  1378   00100C  11                 	db	17
  1379   00100D  12                 	db	18
  1380   00100E  13                 	db	19
  1381   00100F  14                 	db	20
  1382   001010  15                 	db	21
  1383   001011                     __end_of_default_security_key:
  1384                           	callstack 0
  1385   001011                     _default_mac_address:
  1386                           	callstack 0
  1387   001011  11                 	db	17
  1388   001012  28                 	db	40
  1389   001013  35                 	db	53
  1390   001014  44                 	db	68
  1391   001015  56                 	db	86
  1392   001016  66                 	db	102
  1393   001017  77                 	db	119
  1394   001018  01                 	db	1
  1395   001019                     __end_of_default_mac_address:
  1396                           	callstack 0
  1397   007CF0                     _TMR1IF         set	31984
  1398   007E68                     _TMR1ON         set	32360
  1399   007E69                     _TMR1CS         set	32361
  1400   007E6B                     _T1OSCEN        set	32363
  1401   007E6A                     _T1SYNC         set	32362
  1402   007E6D                     _T1CKPS1        set	32365
  1403   007E6C                     _T1CKPS0        set	32364
  1404   007E6F                     _T1RD16         set	32367
  1405   007F8F                     _RBPU           set	32655
  1406   007CED                     _RCIE           set	31981
  1407   007CEE                     _ADIE           set	31982
  1408   007D03                     _BCLIE          set	32003
  1409   007CEB                     _SSPIE          set	31979
  1410   007D04                     _EEIE           set	32004
  1411   007D00                     _CCP2IE         set	32000
  1412   007CEA                     _CCP1IE         set	31978
  1413   007CE9                     _TMR2IE         set	31977
  1414   007CE8                     _TMR1IE         set	31976
  1415   007F95                     _T0IE           set	32661
  1416   007F93                     _RBIE           set	32659
  1417   007F94                     _INT0E          set	32660
  1418   007F96                     _PEIE           set	32662
  1419   007F97                     _GIE            set	32663
  1420   007E87                     _IPEN           set	32391
  1421   000FCF                     _TMR1H          set	4047
  1422   000FCE                     _TMR1L          set	4046
  1423   000F9B                     _OSCTUNE        set	3995
  1424   000FD3                     _OSCCON         set	4051
  1425   000F95                     _TRISDbits      set	3989
  1426   000F96                     _TRISEbits      set	3990
  1427   000F93                     _TRISBbits      set	3987
  1428   000F84                     _PORTE          set	3972
  1429   000F83                     _PORTD          set	3971
  1430   000F82                     _PORTC          set	3970
  1431   000F81                     _PORTB          set	3969
  1432   000F80                     _PORTA          set	3968
  1433   000F8D                     _LATEbits       set	3981
  1434   000F82                     _PORTCbits      set	3970
  1435   000FC9                     _SSPBUF         set	4041
  1436   000F9E                     _PIR1bits       set	3998
  1437   000FC6                     _SSPCON1bits    set	4038
  1438   000FC6                     _SSPCON1        set	4038
  1439   000FC7                     _SSPSTATbits    set	4039
  1440   000F94                     _TRISCbits      set	3988
  1441   000F81                     _PORTBbits      set	3969
  1442   000F8C                     _LATDbits       set	3980
  1443   000F8B                     _LATCbits       set	3979
  1444   001019  00                 	db	0	; dummy byte at the end
  1445   000002                     __activetblptr  equ	2
  1446                           
  1447                           ; #config settings
  1448                           
  1449                           	psect	cinit
  1450   001A48                     __pcinit:
  1451                           	callstack 0
  1452   001A48                     start_initialization:
  1453                           	callstack 0
  1454   001A48                     __initialization:
  1455                           	callstack 0
  1456                           
  1457                           ; Initialize objects allocated to BANK1 (43 bytes)
  1458                           ; load TBLPTR registers with __pidataBANK1
  1459   001A48  0E9A               	movlw	low __pidataBANK1
  1460   001A4A  6EF6               	movwf	tblptrl,c
  1461   001A4C  0E1C               	movlw	high __pidataBANK1
  1462   001A4E  6EF7               	movwf	tblptrh,c
  1463   001A50  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1464   001A52  6EF8               	movwf	tblptru,c
  1465   001A54  EE01  F0C1         	lfsr	0,__pdataBANK1
  1466   001A58  EE10 F02B          	lfsr	1,43
  1467   001A5C                     copy_data0:
  1468   001A5C  0009               	tblrd		*+
  1469   001A5E  CFF5 FFEE          	movff	tablat,postinc0
  1470   001A62  50E5               	movf	postdec1,w,c
  1471   001A64  50E1               	movf	fsr1l,w,c
  1472   001A66  E1FA               	bnz	copy_data0
  1473                           
  1474                           ; Clear objects allocated to BANK2 (142 bytes)
  1475   001A68  EE02  F000         	lfsr	0,__pbssBANK2
  1476   001A6C  0E8E               	movlw	142
  1477   001A6E                     clear_0:
  1478   001A6E  6AEE               	clrf	postinc0,c
  1479   001A70  06E8               	decf	wreg,f,c
  1480   001A72  E1FD               	bnz	clear_0
  1481                           
  1482                           ; Clear objects allocated to BANK1 (102 bytes)
  1483   001A74  EE01  F000         	lfsr	0,__pbssBANK1
  1484   001A78  0E66               	movlw	102
  1485   001A7A                     clear_1:
  1486   001A7A  6AEE               	clrf	postinc0,c
  1487   001A7C  06E8               	decf	wreg,f,c
  1488   001A7E  E1FD               	bnz	clear_1
  1489                           
  1490                           ; Clear objects allocated to COMRAM (38 bytes)
  1491   001A80  EE00  F001         	lfsr	0,__pbssCOMRAM
  1492   001A84  0E26               	movlw	38
  1493   001A86                     clear_2:
  1494   001A86  6AEE               	clrf	postinc0,c
  1495   001A88  06E8               	decf	wreg,f,c
  1496   001A8A  E1FD               	bnz	clear_2
  1497   001A8C                     end_of_initialization:
  1498                           	callstack 0
  1499   001A8C                     __end_of__initialization:
  1500                           	callstack 0
  1501   001A8C  9046               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1502   001A8E  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1503   001A90  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1504   001A92  6EF8               	movwf	tblptru,c
  1505   001A94  0100               	movlb	0
  1506   001A96  EFC5  F00A         	goto	_main	;jump to C main() function
  1507                           
  1508                           	psect	bssCOMRAM
  1509   000001                     __pbssCOMRAM:
  1510                           	callstack 0
  1511   000001                     _timeStamp:
  1512                           	callstack 0
  1513   000001                     	ds	4
  1514   000005                     _estadoActual:
  1515                           	callstack 0
  1516   000005                     	ds	1
  1517   000006                     _long_mac_address_e:
  1518                           	callstack 0
  1519   000006                     	ds	1
  1520   000007                     _data_config_s:
  1521                           	callstack 0
  1522   000007                     	ds	32
  1523                           
  1524                           	psect	bssBANK1
  1525   000100                     __pbssBANK1:
  1526                           	callstack 0
  1527   000100                     envio@F3357:
  1528                           	callstack 0
  1529   000100                     	ds	32
  1530   000120                     _data_in_s:
  1531                           	callstack 0
  1532   000120                     	ds	70
  1533                           
  1534                           	psect	dataBANK1
  1535   0001C1                     __pdataBANK1:
  1536                           	callstack 0
  1537   0001C1                     envio@F3359:
  1538                           	callstack 0
  1539   0001C1                     	ds	43
  1540                           
  1541                           	psect	bssBANK2
  1542   000200                     __pbssBANK2:
  1543                           	callstack 0
  1544   000200                     envio@F3355:
  1545                           	callstack 0
  1546   000200                     	ds	71
  1547   000247                     _data_out_s:
  1548                           	callstack 0
  1549   000247                     	ds	71
  1550                           
  1551                           	psect	cstackBANK1
  1552   000166                     __pcstackBANK1:
  1553                           	callstack 0
  1554   000166                     main@data_out_s:
  1555                           	callstack 0
  1556                           
  1557                           ; 71 bytes @ 0x0
  1558   000166                     	ds	71
  1559   0001AD                     main@delay_parpadeo:
  1560                           	callstack 0
  1561                           
  1562                           ; 9 bytes @ 0x47
  1563   0001AD                     	ds	9
  1564   0001B6                     main@boton1:
  1565                           	callstack 0
  1566                           
  1567                           ; 11 bytes @ 0x50
  1568   0001B6                     	ds	11
  1569                           
  1570                           	psect	cstackBANK0
  1571   000060                     __pcstackBANK0:
  1572                           	callstack 0
  1573   000060                     envio@buuf:
  1574                           	callstack 0
  1575                           
  1576                           ; 43 bytes @ 0x0
  1577   000060                     	ds	43
  1578   00008B                     envio@size:
  1579                           	callstack 0
  1580                           
  1581                           ; 1 bytes @ 0x2B
  1582   00008B                     	ds	1
  1583   00008C                     envio@data_config_s:
  1584                           	callstack 0
  1585                           
  1586                           ; 32 bytes @ 0x2C
  1587   00008C                     	ds	32
  1588   0000AC                     envio@data_out_s:
  1589                           	callstack 0
  1590                           
  1591                           ; 71 bytes @ 0x4C
  1592   0000AC                     	ds	71
  1593                           
  1594                           	psect	cstackCOMRAM
  1595   000027                     __pcstackCOMRAM:
  1596                           	callstack 0
  1597   000027                     ?_MRF24GetDataIn:
  1598                           	callstack 0
  1599   000027                     ?_strlen:
  1600                           	callstack 0
  1601   000027                     SetCSPin@estado:
  1602                           	callstack 0
  1603   000027                     SetWakePin@estado:
  1604                           	callstack 0
  1605   000027                     SetResetPin@estado:
  1606                           	callstack 0
  1607   000027                     SPIWriteByte@dato:
  1608                           	callstack 0
  1609   000027                     DelayReset@delay:
  1610                           	callstack 0
  1611   000027                     memcpy@d1:
  1612                           	callstack 0
  1613   000027                     strlen@s:
  1614                           	callstack 0
  1615   000027                     strncpy@d:
  1616                           	callstack 0
  1617   000027                     DelayInit@delay:
  1618                           	callstack 0
  1619   000027                     DelayIsRunning@delay:
  1620                           	callstack 0
  1621   000027                     
  1622                           ; 1 bytes @ 0x0
  1623   000027                     	ds	1
  1624   000028                     WriteByteSPIPort@dato:
  1625                           	callstack 0
  1626   000028                     memcpy@s1:
  1627                           	callstack 0
  1628   000028                     strncpy@s:
  1629                           	callstack 0
  1630   000028                     SPIWrite2Byte@dato:
  1631                           	callstack 0
  1632   000028                     
  1633                           ; 1 bytes @ 0x1
  1634   000028                     	ds	1
  1635   000029                     SetShortAddr@valor:
  1636                           	callstack 0
  1637   000029                     GetShortAddr@leido_spi:
  1638                           	callstack 0
  1639   000029                     strlen@a:
  1640                           	callstack 0
  1641   000029                     DelayRead@delay:
  1642                           	callstack 0
  1643   000029                     memcpy@n:
  1644                           	callstack 0
  1645   000029                     strncpy@n:
  1646                           	callstack 0
  1647   000029                     DelayInit@duration:
  1648                           	callstack 0
  1649   000029                     
  1650                           ; 1 bytes @ 0x2
  1651   000029                     	ds	1
  1652   00002A                     SetShortAddr@reg_address:
  1653                           	callstack 0
  1654   00002A                     GetShortAddr@reg_address:
  1655                           	callstack 0
  1656   00002A                     Write2ByteSPIPort@dato:
  1657                           	callstack 0
  1658   00002A                     
  1659                           ; 1 bytes @ 0x3
  1660   00002A                     	ds	1
  1661   00002B                     SetDeviceMACAddress@i:
  1662                           	callstack 0
  1663   00002B                     memcpy@tmp:
  1664                           	callstack 0
  1665   00002B                     ??_strncpy:
  1666   00002B                     ??_DelayRead:
  1667   00002B                     
  1668                           ; 1 bytes @ 0x4
  1669   00002B                     	ds	1
  1670   00002C                     memcpy@d:
  1671                           	callstack 0
  1672   00002C                     strncpy@cp:
  1673                           	callstack 0
  1674   00002C                     SetLongAddr@reg_address:
  1675                           	callstack 0
  1676   00002C                     GetLongAddr@reg_address:
  1677                           	callstack 0
  1678   00002C                     
  1679                           ; 1 bytes @ 0x5
  1680   00002C                     	ds	1
  1681   00002D                     memcpy@s:
  1682                           	callstack 0
  1683   00002D                     DebounceFSMInit@antirrebote_boton_n:
  1684                           	callstack 0
  1685   00002D                     
  1686                           ; 1 bytes @ 0x6
  1687   00002D                     	ds	1
  1688   00002E                     SetLongAddr@valor:
  1689                           	callstack 0
  1690   00002E                     ??_GetLongAddr:
  1691                           
  1692                           ; 1 bytes @ 0x7
  1693   00002E                     	ds	1
  1694   00002F                     ??_SetLongAddr:
  1695   00002F                     
  1696                           ; 1 bytes @ 0x8
  1697   00002F                     	ds	1
  1698   000030                     GetLongAddr@respuesta:
  1699                           	callstack 0
  1700                           
  1701                           ; 1 bytes @ 0x9
  1702   000030                     	ds	1
  1703   000031                     MRF24TransmitirDato@p_info_out_s:
  1704                           	callstack 0
  1705   000031                     ??_SetChannel:
  1706   000031                     ??_MRF24ReciboPaquete:
  1707                           
  1708                           ; 1 bytes @ 0xA
  1709   000031                     	ds	1
  1710   000032                     ??_MRF24TransmitirDato:
  1711                           
  1712                           ; 1 bytes @ 0xB
  1713   000032                     	ds	4
  1714   000036                     MRF24ReciboPaquete@add:
  1715                           	callstack 0
  1716                           
  1717                           ; 2 bytes @ 0xF
  1718   000036                     	ds	1
  1719   000037                     MRF24TransmitirDato@i:
  1720                           	callstack 0
  1721   000037                     DebounceFSMUpdate@antirrebote_boton_n:
  1722                           	callstack 0
  1723   000037                     ??_InicializoMRF24:
  1724                           
  1725                           ; 1 bytes @ 0x10
  1726   000037                     	ds	1
  1727   000038                     MRF24TransmitirDato@pos_mem:
  1728                           	callstack 0
  1729   000038                     MRF24ReciboPaquete@i:
  1730                           	callstack 0
  1731                           
  1732                           ; 1 bytes @ 0x11
  1733   000038                     	ds	1
  1734   000039                     InicializoMRF24@lectura:
  1735                           	callstack 0
  1736   000039                     DebounceFSMUpdate@estado_pin:
  1737                           	callstack 0
  1738   000039                     ??_envio:
  1739                           
  1740                           ; 1 bytes @ 0x12
  1741   000039                     	ds	1
  1742   00003A                     InicializoMRF24@delay_time_out:
  1743                           	callstack 0
  1744   00003A                     ??_DebounceFSMUpdate:
  1745                           
  1746                           ; 1 bytes @ 0x13
  1747   00003A                     	ds	9
  1748   000043                     ??_MRF24J40Init:
  1749                           
  1750                           ; 1 bytes @ 0x1C
  1751   000043                     	ds	1
  1752   000044                     ??_main:
  1753                           
  1754                           ; 1 bytes @ 0x1D
  1755   000044                     	ds	2
  1756                           
  1757 ;;
  1758 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1759 ;;
  1760 ;; *************** function _main *****************
  1761 ;; Defined at:
  1762 ;;		line 32 in file "main.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  mrf24_data_i    2    0        PTR struct .
  1767 ;;		 -> data_in_s(70), 
  1768 ;;  data_out_s     71    0[BANK1 ] struct .
  1769 ;;  boton1         11   80[BANK1 ] struct .
  1770 ;;  delay_parpad    9   71[BANK1 ] struct .
  1771 ;; Return value:  Size  Location     Type
  1772 ;;                  1    wreg      void 
  1773 ;; Registers used:
  1774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1775 ;; Tracked objects:
  1776 ;;		On entry : 0/0
  1777 ;;		On exit  : 0/0
  1778 ;;		Unchanged: 0/0
  1779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Locals:         0       0      91       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;      Totals:         2       0      91       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1784 ;;Total ram usage:       93 bytes
  1785 ;; Hardware stack levels required when called: 8
  1786 ;; This function calls:
  1787 ;;		_BoardInit
  1788 ;;		_DebounceFSMInit
  1789 ;;		_DebounceFSMUpdate
  1790 ;;		_DelayInit
  1791 ;;		_DelayRead
  1792 ;;		_MRF24GetDataIn
  1793 ;;		_MRF24IsNewMsg
  1794 ;;		_MRF24J40Init
  1795 ;;		_MRF24ReciboPaquete
  1796 ;;		_envio
  1797 ;; This function is called by:
  1798 ;;		Startup code after reset
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text0
  1803   00158A                     __ptext0:
  1804                           	callstack 0
  1805   00158A                     _main:
  1806                           	callstack 23
  1807   00158A                     
  1808                           ;main.c: 34:     delayNoBloqueanteData_t delay_parpadeo;;main.c: 35:     debounceData_t 
      +                          boton1;;main.c: 36:  DebounceFSMInit(&boton1);
  1809   00158A  0EB6               	movlw	low main@boton1
  1810   00158C  6E2D               	movwf	DebounceFSMInit@antirrebote_boton_n^0,c
  1811   00158E  0E01               	movlw	high main@boton1
  1812   001590  6E2E               	movwf	(DebounceFSMInit@antirrebote_boton_n+1)^0,c
  1813   001592  ECCD  F00D         	call	_DebounceFSMInit	;wreg free
  1814   001596                     
  1815                           ;main.c: 37:     BoardInit();
  1816   001596  ECF3  F00C         	call	_BoardInit	;wreg free
  1817   00159A                     
  1818                           ;main.c: 38:     MRF24J40Init();
  1819   00159A  ECB0  F00D         	call	_MRF24J40Init	;wreg free
  1820   00159E                     
  1821                           ;main.c: 39:     DelayInit(&delay_parpadeo, 1000);
  1822   00159E  0EAD               	movlw	low main@delay_parpadeo
  1823   0015A0  6E27               	movwf	DelayInit@delay^0,c
  1824   0015A2  0E01               	movlw	high main@delay_parpadeo
  1825   0015A4  6E28               	movwf	(DelayInit@delay+1)^0,c
  1826   0015A6  0EE8               	movlw	232
  1827   0015A8  6E29               	movwf	DelayInit@duration^0,c
  1828   0015AA  0E03               	movlw	3
  1829   0015AC  6E2A               	movwf	(DelayInit@duration+1)^0,c
  1830   0015AE  0E00               	movlw	0
  1831   0015B0  6E2B               	movwf	(DelayInit@duration+2)^0,c
  1832   0015B2  0E00               	movlw	0
  1833   0015B4  6E2C               	movwf	(DelayInit@duration+3)^0,c
  1834   0015B6  EC37  F00E         	call	_DelayInit	;wreg free
  1835   0015BA                     
  1836                           ;main.c: 41:     mrf24_data_out_t data_out_s;;main.c: 42:  data_out_s.dest_address = (0x
      +                          1111);
  1837   0015BA  0E11               	movlw	17
  1838   0015BC  0101               	movlb	1	; () banked
  1839   0015BE  6F69               	movwf	(main@data_out_s+3)& (0+255),b
  1840   0015C0  0E11               	movlw	17
  1841   0015C2  6F68               	movwf	(main@data_out_s+2)& (0+255),b
  1842   0015C4                     
  1843                           ; BSR set to: 1
  1844                           ;main.c: 43:  data_out_s.dest_panid = 0x1234;
  1845   0015C4  0E12               	movlw	18
  1846   0015C6  6F67               	movwf	(main@data_out_s+1)& (0+255),b
  1847   0015C8  0E34               	movlw	52
  1848   0015CA  6F66               	movwf	main@data_out_s& (0+255),b
  1849   0015CC                     
  1850                           ; BSR set to: 1
  1851                           ;main.c: 44:  data_out_s.origin_address = 0x4567;
  1852   0015CC  0E45               	movlw	69
  1853   0015CE  6F6B               	movwf	(main@data_out_s+5)& (0+255),b
  1854   0015D0  0E67               	movlw	103
  1855   0015D2  6F6A               	movwf	(main@data_out_s+4)& (0+255),b
  1856   0015D4                     l296:
  1857   0015D4  0004               	clrwdt		;# 
  1858                           
  1859                           ;main.c: 49:         switch(DebounceFSMUpdate(&boton1,PORTCbits.RC2)) {
  1860   0015D6  EFF1  F00A         	goto	l2390
  1861   0015DA                     l2386:
  1862                           
  1863                           ;main.c: 52:                 envio();
  1864   0015DA  EC40  F00B         	call	_envio	;wreg free
  1865                           
  1866                           ;main.c: 54:     break;
  1867   0015DE  EF11  F00B         	goto	l2392
  1868   0015E2                     l2390:
  1869   0015E2  0EB6               	movlw	low main@boton1
  1870   0015E4  6E37               	movwf	DebounceFSMUpdate@antirrebote_boton_n^0,c
  1871   0015E6  0E01               	movlw	high main@boton1
  1872   0015E8  6E38               	movwf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,c
  1873   0015EA  B482               	btfsc	130,2,c	;volatile
  1874   0015EC  EFFA  F00A         	goto	u1031
  1875   0015F0  EFFD  F00A         	goto	u1030
  1876   0015F4                     u1031:
  1877   0015F4  0E01               	movlw	1
  1878   0015F6  EFFE  F00A         	goto	u1036
  1879   0015FA                     u1030:
  1880   0015FA  0E00               	movlw	0
  1881   0015FC                     u1036:
  1882   0015FC  6E39               	movwf	DebounceFSMUpdate@estado_pin^0,c
  1883   0015FE  EC18  F00A         	call	_DebounceFSMUpdate	;wreg free
  1884   001602  6E44               	movwf	??_main^0,c
  1885   001604  6A45               	clrf	(??_main+1)^0,c
  1886                           
  1887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1888                           ; Switch size 1, requested type "simple"
  1889                           ; Number of cases is 1, Range of values is 0 to 0
  1890                           ; switch strategies available:
  1891                           ; Name         Instructions Cycles
  1892                           ; simple_byte            4     3 (average)
  1893                           ;	Chosen strategy is simple_byte
  1894   001606  5045               	movf	(??_main+1)^0,w,c
  1895   001608  0A00               	xorlw	0	; case 0
  1896   00160A  B4D8               	btfsc	status,2,c
  1897   00160C  EF0A  F00B         	goto	l2470
  1898   001610  EF11  F00B         	goto	l2392
  1899   001614                     l2470:
  1900                           
  1901                           ; Switch size 1, requested type "simple"
  1902                           ; Number of cases is 1, Range of values is 1 to 1
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte            4     3 (average)
  1906                           ;	Chosen strategy is simple_byte
  1907   001614  5044               	movf	??_main^0,w,c
  1908   001616  0A01               	xorlw	1	; case 1
  1909   001618  B4D8               	btfsc	status,2,c
  1910   00161A  EFED  F00A         	goto	l2386
  1911   00161E  EF11  F00B         	goto	l2392
  1912   001622                     l2392:
  1913                           
  1914                           ;main.c: 60:         if(MRF24IsNewMsg() == MSG_PRESENT) {
  1915   001622  EC06  F00E         	call	_MRF24IsNewMsg	;wreg free
  1916   001626  0A04               	xorlw	4
  1917   001628  A4D8               	btfss	status,2,c
  1918   00162A  EF19  F00B         	goto	u1041
  1919   00162E  EF1B  F00B         	goto	u1040
  1920   001632                     u1041:
  1921   001632  EF1F  F00B         	goto	l2398
  1922   001636                     u1040:
  1923   001636  EC2A  F00F         	call	_MRF24GetDataIn	;wreg free
  1924   00163A                     
  1925                           ;main.c: 63:             MRF24ReciboPaquete();
  1926   00163A  ECB4  F00B         	call	_MRF24ReciboPaquete	;wreg free
  1927   00163E                     l2398:
  1928                           
  1929                           ;main.c: 88:         if(DelayRead(&delay_parpadeo)) {
  1930   00163E  0EAD               	movlw	low main@delay_parpadeo
  1931   001640  6E29               	movwf	DelayRead@delay^0,c
  1932   001642  0E01               	movlw	high main@delay_parpadeo
  1933   001644  6E2A               	movwf	(DelayRead@delay+1)^0,c
  1934   001646  EC26  F00C         	call	_DelayRead	;wreg free
  1935   00164A  0900               	iorlw	0
  1936   00164C  B4D8               	btfsc	status,2,c
  1937   00164E  EF2B  F00B         	goto	u1051
  1938   001652  EF2D  F00B         	goto	u1050
  1939   001656                     u1051:
  1940   001656  EFEA  F00A         	goto	l296
  1941   00165A                     u1050:
  1942   00165A                     
  1943                           ;main.c: 89:             LATEbits.LATE0 = !LATEbits.LATE0;
  1944   00165A  A08D               	btfss	141,0,c	;volatile
  1945   00165C  EF32  F00B         	goto	u1061
  1946   001660  EF36  F00B         	goto	u1060
  1947   001664                     u1061:
  1948   001664  6A44               	clrf	??_main^0,c
  1949   001666  2A44               	incf	??_main^0,f,c
  1950   001668  EF37  F00B         	goto	u1078
  1951   00166C                     u1060:
  1952   00166C  6A44               	clrf	??_main^0,c
  1953   00166E                     u1078:
  1954   00166E  508D               	movf	141,w,c	;volatile
  1955   001670  1844               	xorwf	??_main^0,w,c
  1956   001672  0BFE               	andlw	-2
  1957   001674  1844               	xorwf	??_main^0,w,c
  1958   001676  6E8D               	movwf	141,c	;volatile
  1959   001678  EFEA  F00A         	goto	l296
  1960   00167C  EF20  F000         	goto	start
  1961   001680                     __end_of_main:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _envio *****************
  1965 ;; Defined at:
  1966 ;;		line 94 in file "main.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  data_out_s     71   76[BANK0 ] struct .
  1971 ;;  buuf           43    0[BANK0 ] unsigned char [43]
  1972 ;;  data_config_   32   44[BANK0 ] struct .
  1973 ;;  size            1   43[BANK0 ] unsigned char 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  1    wreg      void 
  1976 ;; Registers used:
  1977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Locals:         0     147       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;      Totals:         1     147       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1987 ;;Total ram usage:      148 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 6
  1990 ;; This function calls:
  1991 ;;		_MRF24TransmitirDato
  1992 ;;		_memcpy
  1993 ;;		_strlen
  1994 ;; This function is called by:
  1995 ;;		_main
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text1
  2000   001680                     __ptext1:
  2001                           	callstack 0
  2002   001680                     _envio:
  2003                           	callstack 24
  2004   001680                     
  2005                           ;main.c: 96:     mrf24_data_out_t data_out_s = {0};
  2006   001680  EE22  F000         	lfsr	2,envio@F3355
  2007   001684  EE10  F0AC         	lfsr	1,envio@data_out_s
  2008   001688  0E46               	movlw	70
  2009   00168A                     u961:
  2010   00168A  CFDB FFE3          	movff	plusw2,plusw1
  2011   00168E  06E8               	decf	wreg,f,c
  2012   001690  E2FC               	bc	u961
  2013                           
  2014                           ;main.c: 97:     mrf24_data_config_t data_config_s = {0};
  2015   001692  EE21  F000         	lfsr	2,envio@F3357
  2016   001696  EE10  F08C         	lfsr	1,envio@data_config_s
  2017   00169A  0E1F               	movlw	31
  2018   00169C                     u971:
  2019   00169C  CFDB FFE3          	movff	plusw2,plusw1
  2020   0016A0  06E8               	decf	wreg,f,c
  2021   0016A2  E2FC               	bc	u971
  2022   0016A4                     
  2023                           ;main.c: 99:     data_out_s.dest_address = (0x1111);
  2024   0016A4  0E11               	movlw	17
  2025   0016A6  0100               	movlb	0	; () banked
  2026   0016A8  6FAF               	movwf	(envio@data_out_s+3)& (0+255),b
  2027   0016AA  0E11               	movlw	17
  2028   0016AC  6FAE               	movwf	(envio@data_out_s+2)& (0+255),b
  2029   0016AE                     
  2030                           ; BSR set to: 0
  2031                           ;main.c: 100:  data_out_s.dest_panid = 0x1234;
  2032   0016AE  0E12               	movlw	18
  2033   0016B0  6FAD               	movwf	(envio@data_out_s+1)& (0+255),b
  2034   0016B2  0E34               	movlw	52
  2035   0016B4  6FAC               	movwf	envio@data_out_s& (0+255),b
  2036   0016B6                     
  2037                           ; BSR set to: 0
  2038                           ;main.c: 101:  data_out_s.origin_address = 0x4567;
  2039   0016B6  0E45               	movlw	69
  2040   0016B8  6FB1               	movwf	(envio@data_out_s+5)& (0+255),b
  2041   0016BA  0E67               	movlw	103
  2042   0016BC  6FB0               	movwf	(envio@data_out_s+4)& (0+255),b
  2043   0016BE                     
  2044                           ; BSR set to: 0
  2045                           ;main.c: 103:     data_config_s.my_channel = CH_11;
  2046   0016BE  0E03               	movlw	3
  2047   0016C0  6F8C               	movwf	envio@data_config_s& (0+255),b
  2048   0016C2                     
  2049                           ; BSR set to: 0
  2050                           ;main.c: 104:     data_config_s.my_address = (0x1111);
  2051   0016C2  0E11               	movlw	17
  2052   0016C4  6F90               	movwf	(envio@data_config_s+4)& (0+255),b
  2053   0016C6  0E11               	movlw	17
  2054   0016C8  6F8F               	movwf	(envio@data_config_s+3)& (0+255),b
  2055   0016CA                     
  2056                           ; BSR set to: 0
  2057                           ;main.c: 105:     data_config_s.my_panid = 0x1234;
  2058   0016CA  0E12               	movlw	18
  2059   0016CC  6F8E               	movwf	(envio@data_config_s+2)& (0+255),b
  2060   0016CE  0E34               	movlw	52
  2061   0016D0  6F8D               	movwf	(envio@data_config_s+1)& (0+255),b
  2062   0016D2                     
  2063                           ; BSR set to: 0
  2064                           ;main.c: 106:     data_config_s.intervalo = 0xf7;
  2065   0016D2  0E00               	movlw	0
  2066   0016D4  6F92               	movwf	(envio@data_config_s+6)& (0+255),b
  2067   0016D6  0EF7               	movlw	247
  2068   0016D8  6F91               	movwf	(envio@data_config_s+5)& (0+255),b
  2069   0016DA                     
  2070                           ; BSR set to: 0
  2071                           ;main.c: 108:     char buuf[sizeof(data_config_s) + 10] = {"MRFCNF:"};
  2072   0016DA  EE21  F0C1         	lfsr	2,envio@F3359
  2073   0016DE  EE10  F060         	lfsr	1,envio@buuf
  2074   0016E2  0E2A               	movlw	42
  2075   0016E4                     u981:
  2076   0016E4  CFDB FFE3          	movff	plusw2,plusw1
  2077   0016E8  06E8               	decf	wreg,f,c
  2078   0016EA  E2FC               	bc	u981
  2079   0016EC                     
  2080                           ; BSR set to: 0
  2081                           ;main.c: 110:     uint8_t size = (uint8_t)strlen(buuf);
  2082   0016EC  0E60               	movlw	low envio@buuf
  2083   0016EE  6E27               	movwf	strlen@s^0,c
  2084   0016F0  EC20  F00E         	call	_strlen	;wreg free
  2085   0016F4  5027               	movf	?_strlen^0,w,c
  2086   0016F6  0100               	movlb	0	; () banked
  2087   0016F8  6F8B               	movwf	envio@size& (0+255),b
  2088   0016FA                     
  2089                           ; BSR set to: 0
  2090                           ;main.c: 112:     memcpy(buuf + size, &data_config_s, sizeof(data_config_s));
  2091   0016FA  518B               	movf	envio@size& (0+255),w,b
  2092   0016FC  0F60               	addlw	low envio@buuf
  2093   0016FE  6E27               	movwf	memcpy@d1^0,c
  2094   001700  0E8C               	movlw	low envio@data_config_s
  2095   001702  6E28               	movwf	memcpy@s1^0,c
  2096   001704  0E00               	movlw	0
  2097   001706  6E2A               	movwf	(memcpy@n+1)^0,c
  2098   001708  0E20               	movlw	32
  2099   00170A  6E29               	movwf	memcpy@n^0,c
  2100   00170C  EC90  F00D         	call	_memcpy	;wreg free
  2101   001710                     
  2102                           ;main.c: 114:     size += sizeof(data_config_s);
  2103   001710  0E20               	movlw	32
  2104   001712  0100               	movlb	0	; () banked
  2105   001714  278B               	addwf	envio@size& (0+255),f,b
  2106   001716                     
  2107                           ; BSR set to: 0
  2108                           ;main.c: 117:     memcpy(data_out_s.buffer, buuf, size);
  2109   001716  0EB2               	movlw	low (envio@data_out_s+6)
  2110   001718  6E27               	movwf	memcpy@d1^0,c
  2111   00171A  0E60               	movlw	low envio@buuf
  2112   00171C  6E28               	movwf	memcpy@s1^0,c
  2113   00171E  C08B  F029         	movff	envio@size,memcpy@n
  2114   001722  6A2A               	clrf	(memcpy@n+1)^0,c
  2115   001724  EC90  F00D         	call	_memcpy	;wreg free
  2116   001728                     
  2117                           ;main.c: 118:     data_out_s.buffer_size = size;
  2118   001728  C08B  F0F2         	movff	envio@size,envio@data_out_s+70
  2119   00172C                     
  2120                           ;main.c: 120:     if(MRF24TransmitirDato(&data_out_s) != TRANSMISSION_COMPLETED)
  2121   00172C  0EAC               	movlw	low envio@data_out_s
  2122   00172E  6E31               	movwf	MRF24TransmitirDato@p_info_out_s^0,c
  2123   001730  EC0D  F008         	call	_MRF24TransmitirDato	;wreg free
  2124   001734  0A02               	xorlw	2
  2125   001736  B4D8               	btfsc	status,2,c
  2126   001738  EFA0  F00B         	goto	u991
  2127   00173C  EFA2  F00B         	goto	u990
  2128   001740                     u991:
  2129   001740  EFB3  F00B         	goto	l315
  2130   001744                     u990:
  2131   001744                     
  2132                           ;main.c: 121:         LATEbits.LATE2 = !LATEbits.LATE2;
  2133   001744  A48D               	btfss	141,2,c	;volatile
  2134   001746  EFA7  F00B         	goto	u1001
  2135   00174A  EFAB  F00B         	goto	u1000
  2136   00174E                     u1001:
  2137   00174E  6A39               	clrf	??_envio^0,c
  2138   001750  2A39               	incf	??_envio^0,f,c
  2139   001752  EFAC  F00B         	goto	u1018
  2140   001756                     u1000:
  2141   001756  6A39               	clrf	??_envio^0,c
  2142   001758                     u1018:
  2143   001758  4639               	rlncf	??_envio^0,f,c
  2144   00175A  4639               	rlncf	??_envio^0,f,c
  2145   00175C  508D               	movf	141,w,c	;volatile
  2146   00175E  1839               	xorwf	??_envio^0,w,c
  2147   001760  0BFB               	andlw	-5
  2148   001762  1839               	xorwf	??_envio^0,w,c
  2149   001764  6E8D               	movwf	141,c	;volatile
  2150   001766                     l315:
  2151   001766  0012               	return		;funcret
  2152   001768                     __end_of_envio:
  2153                           	callstack 0
  2154                           
  2155 ;; *************** function _strlen *****************
  2156 ;; Defined at:
  2157 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2160 ;;		 -> envio@buuf(43), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2163 ;;		 -> envio@buuf(43), 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  2    0[COMRAM] unsigned int 
  2166 ;; Registers used:
  2167 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;Total ram usage:        3 bytes
  2178 ;; Hardware stack levels used: 1
  2179 ;; Hardware stack levels required when called: 1
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_envio
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text2
  2188   001C40                     __ptext2:
  2189                           	callstack 0
  2190   001C40                     _strlen:
  2191                           	callstack 28
  2192   001C40  C027  F029         	movff	strlen@s,strlen@a
  2193   001C44  EF25  F00E         	goto	l2170
  2194   001C48                     l2168:
  2195   001C48  2A27               	incf	strlen@s^0,f,c
  2196   001C4A                     l2170:
  2197   001C4A  5027               	movf	strlen@s^0,w,c
  2198   001C4C  6ED9               	movwf	fsr2l,c
  2199   001C4E  6ADA               	clrf	fsr2h,c
  2200   001C50  50DF               	movf	indf2,w,c
  2201   001C52  A4D8               	btfss	status,2,c
  2202   001C54  EF2E  F00E         	goto	u841
  2203   001C58  EF30  F00E         	goto	u840
  2204   001C5C                     u841:
  2205   001C5C  EF24  F00E         	goto	l2168
  2206   001C60                     u840:
  2207   001C60  5029               	movf	strlen@a^0,w,c
  2208   001C62  5C27               	subwf	strlen@s^0,w,c
  2209   001C64  6E27               	movwf	?_strlen^0,c
  2210   001C66  6A28               	clrf	(?_strlen+1)^0,c
  2211   001C68  BE27               	btfsc	?_strlen^0,7,c
  2212   001C6A  0628               	decf	(?_strlen+1)^0,f,c
  2213   001C6C  0012               	return		;funcret
  2214   001C6E                     __end_of_strlen:
  2215                           	callstack 0
  2216                           
  2217 ;; *************** function _memcpy *****************
  2218 ;; Defined at:
  2219 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\memcpy.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  d1              1    0[COMRAM] PTR void 
  2222 ;;		 -> envio@buuf(43), envio@data_out_s(71), 
  2223 ;;  s1              1    1[COMRAM] PTR const void 
  2224 ;;		 -> envio@buuf(43), envio@data_config_s(32), 
  2225 ;;  n               2    2[COMRAM] unsigned int 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  s               1    6[COMRAM] PTR const unsigned char 
  2228 ;;		 -> envio@buuf(43), envio@data_config_s(32), 
  2229 ;;  d               1    5[COMRAM] PTR unsigned char 
  2230 ;;		 -> envio@buuf(43), envio@data_out_s(71), 
  2231 ;;  tmp             1    4[COMRAM] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    0[COMRAM] PTR void 
  2234 ;; Registers used:
  2235 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;Total ram usage:        7 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 1
  2248 ;; This function calls:
  2249 ;;		Nothing
  2250 ;; This function is called by:
  2251 ;;		_envio
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text3
  2256   001B20                     __ptext3:
  2257                           	callstack 0
  2258   001B20                     _memcpy:
  2259                           	callstack 28
  2260   001B20  C028  F02D         	movff	memcpy@s1,memcpy@s
  2261   001B24  C027  F02C         	movff	memcpy@d1,memcpy@d
  2262   001B28  EFA2  F00D         	goto	l2184
  2263   001B2C                     l2178:
  2264   001B2C  502D               	movf	memcpy@s^0,w,c
  2265   001B2E  6ED9               	movwf	fsr2l,c
  2266   001B30  6ADA               	clrf	fsr2h,c
  2267   001B32  50DF               	movf	indf2,w,c
  2268   001B34  6E2B               	movwf	memcpy@tmp^0,c
  2269   001B36  2A2D               	incf	memcpy@s^0,f,c
  2270   001B38  502C               	movf	memcpy@d^0,w,c
  2271   001B3A  6ED9               	movwf	fsr2l,c
  2272   001B3C  6ADA               	clrf	fsr2h,c
  2273   001B3E  C02B  FFDF         	movff	memcpy@tmp,indf2
  2274   001B42  2A2C               	incf	memcpy@d^0,f,c
  2275   001B44                     l2184:
  2276   001B44  0629               	decf	memcpy@n^0,f,c
  2277   001B46  A0D8               	btfss	status,0,c
  2278   001B48  062A               	decf	(memcpy@n+1)^0,f,c
  2279   001B4A  2829               	incf	memcpy@n^0,w,c
  2280   001B4C  E106               	bnz	u851
  2281   001B4E  282A               	incf	(memcpy@n+1)^0,w,c
  2282   001B50  A4D8               	btfss	status,2,c
  2283   001B52  EFAD  F00D         	goto	u851
  2284   001B56  EFAF  F00D         	goto	u850
  2285   001B5A                     u851:
  2286   001B5A  EF96  F00D         	goto	l2178
  2287   001B5E                     u850:
  2288   001B5E  0012               	return		;funcret
  2289   001B60                     __end_of_memcpy:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _MRF24TransmitirDato *****************
  2293 ;; Defined at:
  2294 ;;		line 376 in file "drivers/scr/API_MRF24J40.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  p_info_out_s    1   10[COMRAM] PTR struct .
  2297 ;;		 -> envio@data_out_s(71), 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  i               1   16[COMRAM] char 
  2300 ;;  pos_mem         1   17[COMRAM] unsigned char 
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      enum E3263
  2303 ;; Registers used:
  2304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2310 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2311 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2312 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2313 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;Total ram usage:        8 bytes
  2315 ;; Hardware stack levels used: 1
  2316 ;; Hardware stack levels required when called: 5
  2317 ;; This function calls:
  2318 ;;		_SetLongAddr
  2319 ;;		_SetShortAddr
  2320 ;; This function is called by:
  2321 ;;		_envio
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text4
  2326   00101A                     __ptext4:
  2327                           	callstack 0
  2328   00101A                     _MRF24TransmitirDato:
  2329                           	callstack 24
  2330   00101A                     
  2331                           ;drivers/scr/API_MRF24J40.c: 378:  if(INITIALIZATION_OK != estadoActual)
  2332   00101A  0405               	decf	_estadoActual^0,w,c
  2333   00101C  B4D8               	btfsc	status,2,c
  2334   00101E  EF13  F008         	goto	u771
  2335   001022  EF15  F008         	goto	u770
  2336   001026                     u771:
  2337   001026  EF18  F008         	goto	l2056
  2338   00102A                     u770:
  2339   00102A                     
  2340                           ;drivers/scr/API_MRF24J40.c: 379:   return OPERATION_FAIL;
  2341   00102A  0E09               	movlw	9
  2342   00102C  EF41  F009         	goto	l157
  2343   001030                     l2056:
  2344                           
  2345                           ;drivers/scr/API_MRF24J40.c: 381:  if((0X00) == p_info_out_s->dest_address)
  2346   001030  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2347   001032  6ED9               	movwf	fsr2l,c
  2348   001034  6ADA               	clrf	fsr2h,c
  2349   001036  0E02               	movlw	2
  2350   001038  26D9               	addwf	fsr2l,f,c
  2351   00103A  50DE               	movf	postinc2,w,c
  2352   00103C  10DE               	iorwf	postinc2,w,c
  2353   00103E  A4D8               	btfss	status,2,c
  2354   001040  EF24  F008         	goto	u781
  2355   001044  EF26  F008         	goto	u780
  2356   001048                     u781:
  2357   001048  EF29  F008         	goto	l2062
  2358   00104C                     u780:
  2359   00104C                     
  2360                           ;drivers/scr/API_MRF24J40.c: 382:   return DIRECTION_EMPTY;
  2361   00104C  0E03               	movlw	3
  2362   00104E  EF41  F009         	goto	l157
  2363   001052                     l2062:
  2364                           
  2365                           ;drivers/scr/API_MRF24J40.c: 384:  if((0X00) == p_info_out_s->buffer_size)
  2366   001052  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2367   001054  6ED9               	movwf	fsr2l,c
  2368   001056  6ADA               	clrf	fsr2h,c
  2369   001058  0E46               	movlw	70
  2370   00105A  26D9               	addwf	fsr2l,f,c
  2371   00105C  50DF               	movf	indf2,w,c
  2372   00105E  A4D8               	btfss	status,2,c
  2373   001060  EF34  F008         	goto	u791
  2374   001064  EF36  F008         	goto	u790
  2375   001068                     u791:
  2376   001068  EF39  F008         	goto	l2068
  2377   00106C                     u790:
  2378   00106C                     
  2379                           ;drivers/scr/API_MRF24J40.c: 385:   return BUFFER_EMPTY;
  2380   00106C  0E07               	movlw	7
  2381   00106E  EF41  F009         	goto	l157
  2382   001072                     l2068:
  2383                           
  2384                           ;drivers/scr/API_MRF24J40.c: 387:  if(64 < p_info_out_s->buffer_size)
  2385   001072  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2386   001074  6ED9               	movwf	fsr2l,c
  2387   001076  6ADA               	clrf	fsr2h,c
  2388   001078  0E46               	movlw	70
  2389   00107A  26D9               	addwf	fsr2l,f,c
  2390   00107C  0E40               	movlw	64
  2391   00107E  64DF               	cpfsgt	indf2,c
  2392   001080  EF44  F008         	goto	u801
  2393   001084  EF46  F008         	goto	u800
  2394   001088                     u801:
  2395   001088  EF49  F008         	goto	l160
  2396   00108C                     u800:
  2397   00108C                     
  2398                           ;drivers/scr/API_MRF24J40.c: 388:   return TO_LONG_MSG;
  2399   00108C  0E06               	movlw	6
  2400   00108E  EF41  F009         	goto	l157
  2401   001092                     l160:
  2402                           
  2403                           ;drivers/scr/API_MRF24J40.c: 389:  uint8_t pos_mem = 0;
  2404   001092  6A38               	clrf	MRF24TransmitirDato@pos_mem^0,c
  2405   001094                     
  2406                           ;drivers/scr/API_MRF24J40.c: 390:  SetLongAddr(pos_mem++, (0X0B));
  2407   001094  0E00               	movlw	0
  2408   001096  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  2409   001098  0E00               	movlw	0
  2410   00109A  6E2C               	movwf	SetLongAddr@reg_address^0,c
  2411   00109C  0E0B               	movlw	11
  2412   00109E  6E2E               	movwf	SetLongAddr@valor^0,c
  2413   0010A0  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2414   0010A4  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2415   0010A6                     
  2416                           ;drivers/scr/API_MRF24J40.c: 391:  SetLongAddr(pos_mem++, p_info_out_s->buffer_size + (0
      +                          X0B));
  2417   0010A6  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2418   0010AA  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2419   0010AC  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2420   0010AE  6ED9               	movwf	fsr2l,c
  2421   0010B0  6ADA               	clrf	fsr2h,c
  2422   0010B2  0E46               	movlw	70
  2423   0010B4  26D9               	addwf	fsr2l,f,c
  2424   0010B6  50DF               	movf	indf2,w,c
  2425   0010B8  0F0B               	addlw	11
  2426   0010BA  6E2E               	movwf	SetLongAddr@valor^0,c
  2427   0010BC  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2428   0010C0  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2429   0010C2                     
  2430                           ;drivers/scr/API_MRF24J40.c: 392:  SetLongAddr(pos_mem++, (0X01) | (0X20) | (0X40));
  2431   0010C2  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2432   0010C6  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2433   0010C8  0E61               	movlw	97
  2434   0010CA  6E2E               	movwf	SetLongAddr@valor^0,c
  2435   0010CC  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2436   0010D0  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2437   0010D2                     
  2438                           ;drivers/scr/API_MRF24J40.c: 393:  SetLongAddr(pos_mem++, (0X80) | (0X08));
  2439   0010D2  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2440   0010D6  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2441   0010D8  0E88               	movlw	136
  2442   0010DA  6E2E               	movwf	SetLongAddr@valor^0,c
  2443   0010DC  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2444   0010E0  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2445   0010E2                     
  2446                           ;drivers/scr/API_MRF24J40.c: 394:  SetLongAddr(pos_mem++, data_config_s.sequence_number+
      +                          +);
  2447   0010E2  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2448   0010E6  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2449   0010E8  EE20  F00E         	lfsr	2,_data_config_s+7
  2450   0010EC  50DF               	movf	indf2,w,c
  2451   0010EE  2ADF               	incf	indf2,f,c
  2452   0010F0  6E2E               	movwf	SetLongAddr@valor^0,c
  2453   0010F2  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2454   0010F6  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2455   0010F8                     
  2456                           ;drivers/scr/API_MRF24J40.c: 396:  if((0X00) == p_info_out_s->dest_panid)
  2457   0010F8  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2458   0010FA  6ED9               	movwf	fsr2l,c
  2459   0010FC  6ADA               	clrf	fsr2h,c
  2460   0010FE  50DE               	movf	postinc2,w,c
  2461   001100  10DE               	iorwf	postinc2,w,c
  2462   001102  A4D8               	btfss	status,2,c
  2463   001104  EF86  F008         	goto	u811
  2464   001108  EF88  F008         	goto	u810
  2465   00110C                     u811:
  2466   00110C  EF8F  F008         	goto	l2098
  2467   001110                     u810:
  2468   001110                     
  2469                           ;drivers/scr/API_MRF24J40.c: 397:   p_info_out_s->dest_panid = data_config_s.my_panid;
  2470   001110  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2471   001112  6ED9               	movwf	fsr2l,c
  2472   001114  6ADA               	clrf	fsr2h,c
  2473   001116  C008  FFDE         	movff	_data_config_s+1,postinc2
  2474   00111A  C009  FFDD         	movff	_data_config_s+2,postdec2
  2475   00111E                     l2098:
  2476                           
  2477                           ;drivers/scr/API_MRF24J40.c: 398:  SetLongAddr(pos_mem++, (uint8_t) p_info_out_s->dest_p
      +                          anid);
  2478   00111E  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2479   001122  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2480   001124  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2481   001126  6ED9               	movwf	fsr2l,c
  2482   001128  6ADA               	clrf	fsr2h,c
  2483   00112A  50DF               	movf	indf2,w,c
  2484   00112C  6E2E               	movwf	SetLongAddr@valor^0,c
  2485   00112E  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2486   001132  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2487   001134                     
  2488                           ;drivers/scr/API_MRF24J40.c: 399:  SetLongAddr(pos_mem++, (uint8_t) (p_info_out_s->dest_
      +                          panid >> (0X08)));
  2489   001134  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2490   001138  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2491   00113A  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2492   00113C  6ED9               	movwf	fsr2l,c
  2493   00113E  6ADA               	clrf	fsr2h,c
  2494   001140  CFDE F032          	movff	postinc2,??_MRF24TransmitirDato
  2495   001144  CFDD F033          	movff	postdec2,??_MRF24TransmitirDato+1
  2496   001148  C033  F032         	movff	??_MRF24TransmitirDato+1,??_MRF24TransmitirDato
  2497   00114C  6A33               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2498   00114E  5032               	movf	??_MRF24TransmitirDato^0,w,c
  2499   001150  6E2E               	movwf	SetLongAddr@valor^0,c
  2500   001152  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2501   001156  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2502   001158                     
  2503                           ;drivers/scr/API_MRF24J40.c: 400:  SetLongAddr(pos_mem++, (uint8_t) p_info_out_s->dest_a
      +                          ddress);
  2504   001158  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2505   00115C  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2506   00115E  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2507   001160  6ED9               	movwf	fsr2l,c
  2508   001162  6ADA               	clrf	fsr2h,c
  2509   001164  0E02               	movlw	2
  2510   001166  26D9               	addwf	fsr2l,f,c
  2511   001168  50DF               	movf	indf2,w,c
  2512   00116A  6E2E               	movwf	SetLongAddr@valor^0,c
  2513   00116C  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2514   001170  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2515   001172                     
  2516                           ;drivers/scr/API_MRF24J40.c: 401:  SetLongAddr(pos_mem++, (uint8_t) (p_info_out_s->dest_
      +                          address >> (0X08)));
  2517   001172  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2518   001176  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2519   001178  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2520   00117A  6ED9               	movwf	fsr2l,c
  2521   00117C  6ADA               	clrf	fsr2h,c
  2522   00117E  0E02               	movlw	2
  2523   001180  26D9               	addwf	fsr2l,f,c
  2524   001182  CFDE F032          	movff	postinc2,??_MRF24TransmitirDato
  2525   001186  CFDD F033          	movff	postdec2,??_MRF24TransmitirDato+1
  2526   00118A  C033  F032         	movff	??_MRF24TransmitirDato+1,??_MRF24TransmitirDato
  2527   00118E  6A33               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2528   001190  5032               	movf	??_MRF24TransmitirDato^0,w,c
  2529   001192  6E2E               	movwf	SetLongAddr@valor^0,c
  2530   001194  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2531   001198  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2532   00119A                     
  2533                           ;drivers/scr/API_MRF24J40.c: 403:  if((0X00) == p_info_out_s->origin_address)
  2534   00119A  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2535   00119C  6ED9               	movwf	fsr2l,c
  2536   00119E  6ADA               	clrf	fsr2h,c
  2537   0011A0  0E04               	movlw	4
  2538   0011A2  26D9               	addwf	fsr2l,f,c
  2539   0011A4  50DE               	movf	postinc2,w,c
  2540   0011A6  10DE               	iorwf	postinc2,w,c
  2541   0011A8  A4D8               	btfss	status,2,c
  2542   0011AA  EFD9  F008         	goto	u821
  2543   0011AE  EFDB  F008         	goto	u820
  2544   0011B2                     u821:
  2545   0011B2  EFE4  F008         	goto	l2118
  2546   0011B6                     u820:
  2547   0011B6                     
  2548                           ;drivers/scr/API_MRF24J40.c: 404:   p_info_out_s->origin_address = data_config_s.my_addr
      +                          ess;
  2549   0011B6  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2550   0011B8  6ED9               	movwf	fsr2l,c
  2551   0011BA  6ADA               	clrf	fsr2h,c
  2552   0011BC  0E04               	movlw	4
  2553   0011BE  26D9               	addwf	fsr2l,f,c
  2554   0011C0  C00A  FFDE         	movff	_data_config_s+3,postinc2
  2555   0011C4  C00B  FFDD         	movff	_data_config_s+4,postdec2
  2556   0011C8                     l2118:
  2557                           
  2558                           ;drivers/scr/API_MRF24J40.c: 405:  SetLongAddr(pos_mem++, (uint8_t) p_info_out_s->origin
      +                          _address);
  2559   0011C8  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2560   0011CC  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2561   0011CE  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2562   0011D0  6ED9               	movwf	fsr2l,c
  2563   0011D2  6ADA               	clrf	fsr2h,c
  2564   0011D4  0E04               	movlw	4
  2565   0011D6  26D9               	addwf	fsr2l,f,c
  2566   0011D8  50DF               	movf	indf2,w,c
  2567   0011DA  6E2E               	movwf	SetLongAddr@valor^0,c
  2568   0011DC  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2569   0011E0  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2570   0011E2                     
  2571                           ;drivers/scr/API_MRF24J40.c: 406:  SetLongAddr(pos_mem++, (uint8_t) (p_info_out_s->origi
      +                          n_address >> (0X08)));
  2572   0011E2  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2573   0011E6  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2574   0011E8  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2575   0011EA  6ED9               	movwf	fsr2l,c
  2576   0011EC  6ADA               	clrf	fsr2h,c
  2577   0011EE  0E04               	movlw	4
  2578   0011F0  26D9               	addwf	fsr2l,f,c
  2579   0011F2  CFDE F032          	movff	postinc2,??_MRF24TransmitirDato
  2580   0011F6  CFDD F033          	movff	postdec2,??_MRF24TransmitirDato+1
  2581   0011FA  C033  F032         	movff	??_MRF24TransmitirDato+1,??_MRF24TransmitirDato
  2582   0011FE  6A33               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2583   001200  5032               	movf	??_MRF24TransmitirDato^0,w,c
  2584   001202  6E2E               	movwf	SetLongAddr@valor^0,c
  2585   001204  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2586   001208  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2587   00120A                     
  2588                           ;drivers/scr/API_MRF24J40.c: 408:  for(int8_t i = 0; i < p_info_out_s->buffer_size; i++)
      +                           {
  2589   00120A  6A37               	clrf	MRF24TransmitirDato@i^0,c
  2590   00120C  EF17  F009         	goto	l2134
  2591   001210                     l2128:
  2592                           
  2593                           ;drivers/scr/API_MRF24J40.c: 410:   SetLongAddr(pos_mem++, p_info_out_s->buffer[i]);
  2594   001210  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2595   001214  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2596   001216  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2597   001218  2437               	addwf	MRF24TransmitirDato@i^0,w,c
  2598   00121A  6ED9               	movwf	fsr2l,c
  2599   00121C  6ADA               	clrf	fsr2h,c
  2600   00121E  0E06               	movlw	6
  2601   001220  26D9               	addwf	fsr2l,f,c
  2602   001222  50DF               	movf	indf2,w,c
  2603   001224  6E2E               	movwf	SetLongAddr@valor^0,c
  2604   001226  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2605   00122A  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2606   00122C                     
  2607                           ;drivers/scr/API_MRF24J40.c: 411:  }
  2608   00122C  2A37               	incf	MRF24TransmitirDato@i^0,f,c
  2609   00122E                     l2134:
  2610   00122E  5031               	movf	MRF24TransmitirDato@p_info_out_s^0,w,c
  2611   001230  6ED9               	movwf	fsr2l,c
  2612   001232  6ADA               	clrf	fsr2h,c
  2613   001234  0E46               	movlw	70
  2614   001236  26D9               	addwf	fsr2l,f,c
  2615   001238  50DF               	movf	indf2,w,c
  2616   00123A  6E32               	movwf	??_MRF24TransmitirDato^0,c
  2617   00123C  6A33               	clrf	(??_MRF24TransmitirDato+1)^0,c
  2618   00123E  C037  F034         	movff	MRF24TransmitirDato@i,??_MRF24TransmitirDato+2
  2619   001242  6A35               	clrf	(??_MRF24TransmitirDato+3)^0,c
  2620   001244  BE34               	btfsc	(??_MRF24TransmitirDato+2)^0,7,c
  2621   001246  0635               	decf	(??_MRF24TransmitirDato+3)^0,f,c
  2622   001248  5032               	movf	??_MRF24TransmitirDato^0,w,c
  2623   00124A  5C34               	subwf	(??_MRF24TransmitirDato+2)^0,w,c
  2624   00124C  5035               	movf	(??_MRF24TransmitirDato+3)^0,w,c
  2625   00124E  0A80               	xorlw	128
  2626   001250  6E36               	movwf	(??_MRF24TransmitirDato+4)^0,c
  2627   001252  5033               	movf	(??_MRF24TransmitirDato+1)^0,w,c
  2628   001254  0A80               	xorlw	128
  2629   001256  5836               	subwfb	(??_MRF24TransmitirDato+4)^0,w,c
  2630   001258  A0D8               	btfss	status,0,c
  2631   00125A  EF31  F009         	goto	u831
  2632   00125E  EF33  F009         	goto	u830
  2633   001262                     u831:
  2634   001262  EF08  F009         	goto	l2128
  2635   001266                     u830:
  2636   001266                     
  2637                           ;drivers/scr/API_MRF24J40.c: 412:  SetLongAddr(pos_mem++, (0X00));
  2638   001266  C038  F02C         	movff	MRF24TransmitirDato@pos_mem,SetLongAddr@reg_address
  2639   00126A  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2640   00126C  0E00               	movlw	0
  2641   00126E  6E2E               	movwf	SetLongAddr@valor^0,c
  2642   001270  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2643   001274  2A38               	incf	MRF24TransmitirDato@pos_mem^0,f,c
  2644   001276                     
  2645                           ;drivers/scr/API_MRF24J40.c: 413:  SetShortAddr((0x1B), (0X04) | (0X01));
  2646   001276  0E05               	movlw	5
  2647   001278  6E29               	movwf	SetShortAddr@valor^0,c
  2648   00127A  0E1B               	movlw	27
  2649   00127C  ECB3  F00E         	call	_SetShortAddr
  2650   001280                     
  2651                           ;drivers/scr/API_MRF24J40.c: 414:  return TRANSMISSION_COMPLETED;
  2652   001280  0E02               	movlw	2
  2653   001282                     l157:
  2654   001282  0012               	return		;funcret
  2655   001284                     __end_of_MRF24TransmitirDato:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _MRF24ReciboPaquete *****************
  2659 ;; Defined at:
  2660 ;;		line 439 in file "drivers/scr/API_MRF24J40.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  i               1   17[COMRAM] unsigned char 
  2665 ;;  add             2   15[COMRAM] unsigned short 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      enum E3263
  2668 ;; Registers used:
  2669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;Total ram usage:        8 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 5
  2682 ;; This function calls:
  2683 ;;		_GetLongAddr
  2684 ;;		_GetShortAddr
  2685 ;;		_SetLongAddr
  2686 ;;		_SetShortAddr
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a non-reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text5
  2693   001768                     __ptext5:
  2694                           	callstack 0
  2695   001768                     _MRF24ReciboPaquete:
  2696                           	callstack 25
  2697   001768                     
  2698                           ;drivers/scr/API_MRF24J40.c: 452:  if(INITIALIZATION_OK != estadoActual)
  2699   001768  0405               	decf	_estadoActual^0,w,c
  2700   00176A  B4D8               	btfsc	status,2,c
  2701   00176C  EFBA  F00B         	goto	u881
  2702   001770  EFBC  F00B         	goto	u880
  2703   001774                     u881:
  2704   001774  EFBE  F00B         	goto	l2220
  2705   001778                     u880:
  2706   001778  EF25  F00C         	goto	l174
  2707   00177C                     l2220:
  2708                           
  2709                           ;drivers/scr/API_MRF24J40.c: 454:  SetLongAddr((0x39), (0X04));
  2710   00177C  0E00               	movlw	0
  2711   00177E  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  2712   001780  0E39               	movlw	57
  2713   001782  6E2C               	movwf	SetLongAddr@reg_address^0,c
  2714   001784  0E04               	movlw	4
  2715   001786  6E2E               	movwf	SetLongAddr@valor^0,c
  2716   001788  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2717                           
  2718                           ;drivers/scr/API_MRF24J40.c: 455:  SetShortAddr((0x0D), (0X04));
  2719   00178C  0E04               	movlw	4
  2720   00178E  6E29               	movwf	SetShortAddr@valor^0,c
  2721   001790  0E0D               	movlw	13
  2722   001792  ECB3  F00E         	call	_SetShortAddr
  2723                           
  2724                           ;drivers/scr/API_MRF24J40.c: 456:  data_in_s.buffer_size = GetLongAddr((0x300));
  2725   001796  0E03               	movlw	3
  2726   001798  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  2727   00179A  0E00               	movlw	0
  2728   00179C  6E2C               	movwf	GetLongAddr@reg_address^0,c
  2729   00179E  EC4D  F00D         	call	_GetLongAddr	;wreg free
  2730   0017A2  0101               	movlb	1	; () banked
  2731   0017A4  6F65               	movwf	(_data_in_s+69)& (0+255),b
  2732                           
  2733                           ;drivers/scr/API_MRF24J40.c: 457:  uint16_t add = GetLongAddr((0x300) + 9);
  2734   0017A6  0E03               	movlw	3
  2735   0017A8  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  2736   0017AA  0E09               	movlw	9
  2737   0017AC  6E2C               	movwf	GetLongAddr@reg_address^0,c
  2738   0017AE  EC4D  F00D         	call	_GetLongAddr	;wreg free
  2739   0017B2  6E31               	movwf	??_MRF24ReciboPaquete^0,c
  2740   0017B4  5031               	movf	??_MRF24ReciboPaquete^0,w,c
  2741   0017B6  6E36               	movwf	MRF24ReciboPaquete@add^0,c
  2742   0017B8  6A37               	clrf	(MRF24ReciboPaquete@add+1)^0,c
  2743                           
  2744                           ;drivers/scr/API_MRF24J40.c: 458:  add = (add << (0X08)) | GetLongAddr((0x300) + 8);
  2745   0017BA  0E03               	movlw	3
  2746   0017BC  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  2747   0017BE  0E08               	movlw	8
  2748   0017C0  6E2C               	movwf	GetLongAddr@reg_address^0,c
  2749   0017C2  EC4D  F00D         	call	_GetLongAddr	;wreg free
  2750   0017C6  6E31               	movwf	??_MRF24ReciboPaquete^0,c
  2751   0017C8  5036               	movf	MRF24ReciboPaquete@add^0,w,c
  2752   0017CA  6E32               	movwf	(??_MRF24ReciboPaquete+1)^0,c
  2753   0017CC  5031               	movf	??_MRF24ReciboPaquete^0,w,c
  2754   0017CE  6E36               	movwf	MRF24ReciboPaquete@add^0,c
  2755   0017D0  C032  F037         	movff	??_MRF24ReciboPaquete+1,MRF24ReciboPaquete@add+1
  2756   0017D4                     
  2757                           ;drivers/scr/API_MRF24J40.c: 459:  data_in_s.source_address = add;
  2758   0017D4  C036  F122         	movff	MRF24ReciboPaquete@add,_data_in_s+2
  2759   0017D8  C037  F123         	movff	MRF24ReciboPaquete@add+1,_data_in_s+3
  2760   0017DC                     
  2761                           ;drivers/scr/API_MRF24J40.c: 461:  for(uint8_t i = 0; i < data_in_s.buffer_size - (0x04)
      +                          ; i++) {
  2762   0017DC  6A38               	clrf	MRF24ReciboPaquete@i^0,c
  2763   0017DE  EF01  F00C         	goto	l2230
  2764   0017E2                     l2226:
  2765                           
  2766                           ; BSR set to: 1
  2767                           ;drivers/scr/API_MRF24J40.c: 463:   data_in_s.buffer[i] = GetLongAddr((0x300) + (0X0B) +
      +                           i - 1);
  2768   0017E2  0E25               	movlw	low (_data_in_s+5)
  2769   0017E4  2438               	addwf	MRF24ReciboPaquete@i^0,w,c
  2770   0017E6  6ED9               	movwf	fsr2l,c
  2771   0017E8  6ADA               	clrf	fsr2h,c
  2772   0017EA  0E01               	movlw	high (_data_in_s+5)
  2773   0017EC  22DA               	addwfc	fsr2h,f,c
  2774   0017EE  0E0A               	movlw	10
  2775   0017F0  2438               	addwf	MRF24ReciboPaquete@i^0,w,c
  2776   0017F2  6E2C               	movwf	GetLongAddr@reg_address^0,c
  2777   0017F4  6A2D               	clrf	(GetLongAddr@reg_address+1)^0,c
  2778   0017F6  0E03               	movlw	3
  2779   0017F8  222D               	addwfc	(GetLongAddr@reg_address+1)^0,f,c
  2780   0017FA  EC4D  F00D         	call	_GetLongAddr	;wreg free
  2781   0017FE  6EDF               	movwf	indf2,c
  2782   001800                     
  2783                           ;drivers/scr/API_MRF24J40.c: 464:  }
  2784   001800  2A38               	incf	MRF24ReciboPaquete@i^0,f,c
  2785   001802                     l2230:
  2786   001802  0EFC               	movlw	252
  2787   001804  0101               	movlb	1	; () banked
  2788   001806  2565               	addwf	(_data_in_s+69)& (0+255),w,b
  2789   001808  6E31               	movwf	??_MRF24ReciboPaquete^0,c
  2790   00180A  6A32               	clrf	(??_MRF24ReciboPaquete+1)^0,c
  2791   00180C  0EFF               	movlw	255
  2792   00180E  2232               	addwfc	(??_MRF24ReciboPaquete+1)^0,f,c
  2793   001810  5038               	movf	MRF24ReciboPaquete@i^0,w,c
  2794   001812  6E33               	movwf	(??_MRF24ReciboPaquete+2)^0,c
  2795   001814  6A34               	clrf	(??_MRF24ReciboPaquete+3)^0,c
  2796   001816  5031               	movf	??_MRF24ReciboPaquete^0,w,c
  2797   001818  5C33               	subwf	(??_MRF24ReciboPaquete+2)^0,w,c
  2798   00181A  5034               	movf	(??_MRF24ReciboPaquete+3)^0,w,c
  2799   00181C  0A80               	xorlw	128
  2800   00181E  6E35               	movwf	(??_MRF24ReciboPaquete+4)^0,c
  2801   001820  5032               	movf	(??_MRF24ReciboPaquete+1)^0,w,c
  2802   001822  0A80               	xorlw	128
  2803   001824  5835               	subwfb	(??_MRF24ReciboPaquete+4)^0,w,c
  2804   001826  A0D8               	btfss	status,0,c
  2805   001828  EF18  F00C         	goto	u891
  2806   00182C  EF1A  F00C         	goto	u890
  2807   001830                     u891:
  2808   001830  EFF1  F00B         	goto	l2226
  2809   001834                     u890:
  2810   001834                     
  2811                           ; BSR set to: 1
  2812                           ;drivers/scr/API_MRF24J40.c: 465:  SetLongAddr((0x39), (0X00));
  2813   001834  0E00               	movlw	0
  2814   001836  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  2815   001838  0E39               	movlw	57
  2816   00183A  6E2C               	movwf	SetLongAddr@reg_address^0,c
  2817   00183C  0E00               	movlw	0
  2818   00183E  6E2E               	movwf	SetLongAddr@valor^0,c
  2819   001840  EC6F  F00D         	call	_SetLongAddr	;wreg free
  2820                           
  2821                           ;drivers/scr/API_MRF24J40.c: 466:  (void)GetShortAddr((0x31));
  2822   001844  0E31               	movlw	49
  2823   001846  EC8D  F00E         	call	_GetShortAddr
  2824   00184A                     l174:
  2825   00184A  0012               	return		;funcret
  2826   00184C                     __end_of_MRF24ReciboPaquete:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function _MRF24J40Init *****************
  2830 ;; Defined at:
  2831 ;;		line 286 in file "drivers/scr/API_MRF24J40.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      enum E3263
  2838 ;; Registers used:
  2839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;Total ram usage:        1 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 7
  2852 ;; This function calls:
  2853 ;;		_InicializoMRF24
  2854 ;;		_InicializoPines
  2855 ;;		_InicializoVariables
  2856 ;;		_SetResetPin
  2857 ;; This function is called by:
  2858 ;;		_main
  2859 ;; This function uses a non-reentrant model
  2860 ;;
  2861                           
  2862                           	psect	text6
  2863   001B60                     __ptext6:
  2864                           	callstack 0
  2865   001B60                     _MRF24J40Init:
  2866                           	callstack 23
  2867   001B60                     
  2868                           ;drivers/scr/API_MRF24J40.c: 288:  InicializoVariables();
  2869   001B60  ECC0  F00C         	call	_InicializoVariables	;wreg free
  2870   001B64                     
  2871                           ;drivers/scr/API_MRF24J40.c: 289:  InicializoPines();
  2872   001B64  ECE6  F00E         	call	_InicializoPines	;wreg free
  2873   001B68                     
  2874                           ;drivers/scr/API_MRF24J40.c: 290:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2875   001B68  0E06               	movlw	6
  2876   001B6A  6E43               	movwf	??_MRF24J40Init^0,c
  2877   001B6C  0E30               	movlw	48
  2878   001B6E                     u1107:
  2879   001B6E  2EE8               	decfsz	wreg,f,c
  2880   001B70  D7FE               	bra	u1107
  2881   001B72  2E43               	decfsz	??_MRF24J40Init^0,f,c
  2882   001B74  D7FC               	bra	u1107
  2883   001B76  F000 F000          	nop2	
  2884   001B7A                     
  2885                           ;drivers/scr/API_MRF24J40.c: 291:  SetResetPin(1);
  2886   001B7A  0E01               	movlw	1
  2887   001B7C  EC09  F00F         	call	_SetResetPin
  2888   001B80                     
  2889                           ;drivers/scr/API_MRF24J40.c: 292:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2890   001B80  0E06               	movlw	6
  2891   001B82  6E43               	movwf	??_MRF24J40Init^0,c
  2892   001B84  0E30               	movlw	48
  2893   001B86                     u1117:
  2894   001B86  2EE8               	decfsz	wreg,f,c
  2895   001B88  D7FE               	bra	u1117
  2896   001B8A  2E43               	decfsz	??_MRF24J40Init^0,f,c
  2897   001B8C  D7FC               	bra	u1117
  2898   001B8E  F000 F000          	nop2	
  2899   001B92                     
  2900                           ;drivers/scr/API_MRF24J40.c: 293:  estadoActual = InicializoMRF24();
  2901   001B92  EC42  F009         	call	_InicializoMRF24	;wreg free
  2902   001B96  6E05               	movwf	_estadoActual^0,c
  2903   001B98  0012               	return		;funcret
  2904   001B9A                     __end_of_MRF24J40Init:
  2905                           	callstack 0
  2906                           
  2907 ;; *************** function _InicializoVariables *****************
  2908 ;; Defined at:
  2909 ;;		line 88 in file "drivers/scr/API_MRF24J40.c"
  2910 ;; Parameters:    Size  Location     Type
  2911 ;;		None
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;		None
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2927 ;;Total ram usage:        0 bytes
  2928 ;; Hardware stack levels used: 1
  2929 ;; Hardware stack levels required when called: 2
  2930 ;; This function calls:
  2931 ;;		_strncpy
  2932 ;; This function is called by:
  2933 ;;		_MRF24J40Init
  2934 ;; This function uses a non-reentrant model
  2935 ;;
  2936                           
  2937                           	psect	text7
  2938   001980                     __ptext7:
  2939                           	callstack 0
  2940   001980                     _InicializoVariables:
  2941                           	callstack 27
  2942   001980                     
  2943                           ;drivers/scr/API_MRF24J40.c: 90:  if((0X00) == data_config_s.my_address || (0X00) == dat
      +                          a_config_s.my_panid) {
  2944   001980  500A               	movf	(_data_config_s+3)^0,w,c
  2945   001982  100B               	iorwf	(_data_config_s+4)^0,w,c
  2946   001984  B4D8               	btfsc	status,2,c
  2947   001986  EFC7  F00C         	goto	u711
  2948   00198A  EFC9  F00C         	goto	u710
  2949   00198E                     u711:
  2950   00198E  EFD2  F00C         	goto	l1974
  2951   001992                     u710:
  2952   001992  5008               	movf	(_data_config_s+1)^0,w,c
  2953   001994  1009               	iorwf	(_data_config_s+2)^0,w,c
  2954   001996  A4D8               	btfss	status,2,c
  2955   001998  EFD0  F00C         	goto	u721
  2956   00199C  EFD2  F00C         	goto	u720
  2957   0019A0                     u721:
  2958   0019A0  EFF2  F00C         	goto	l100
  2959   0019A4                     u720:
  2960   0019A4                     l1974:
  2961                           
  2962                           ;drivers/scr/API_MRF24J40.c: 92:   strncpy((char *)data_config_s.security_key,
  2963   0019A4  0E17               	movlw	low (_data_config_s+16)
  2964   0019A6  6E27               	movwf	strncpy@d^0,c
  2965   0019A8  0E01               	movlw	low _default_security_key
  2966   0019AA  6E28               	movwf	strncpy@s^0,c
  2967   0019AC  0E00               	movlw	0
  2968   0019AE  6E2A               	movwf	(strncpy@n+1)^0,c
  2969   0019B0  0E10               	movlw	16
  2970   0019B2  6E29               	movwf	strncpy@n^0,c
  2971   0019B4  EC83  F00C         	call	_strncpy	;wreg free
  2972                           
  2973                           ;drivers/scr/API_MRF24J40.c: 95:   strncpy((char *)data_config_s.my_mac,
  2974   0019B8  0E0F               	movlw	low (_data_config_s+8)
  2975   0019BA  6E27               	movwf	strncpy@d^0,c
  2976   0019BC  0E11               	movlw	low _default_mac_address
  2977   0019BE  6E28               	movwf	strncpy@s^0,c
  2978   0019C0  0E00               	movlw	0
  2979   0019C2  6E2A               	movwf	(strncpy@n+1)^0,c
  2980   0019C4  0E08               	movlw	8
  2981   0019C6  6E29               	movwf	strncpy@n^0,c
  2982   0019C8  EC83  F00C         	call	_strncpy	;wreg free
  2983   0019CC                     
  2984                           ;drivers/scr/API_MRF24J40.c: 98:   data_config_s.sequence_number = (0X01);
  2985   0019CC  0E01               	movlw	1
  2986   0019CE  6E0E               	movwf	(_data_config_s+7)^0,c
  2987   0019D0                     
  2988                           ;drivers/scr/API_MRF24J40.c: 99:   data_config_s.my_channel = CH_11;
  2989   0019D0  0E03               	movlw	3
  2990   0019D2  6E07               	movwf	_data_config_s^0,c
  2991   0019D4                     
  2992                           ;drivers/scr/API_MRF24J40.c: 100:   data_config_s.my_panid = (0x1234);
  2993   0019D4  0E12               	movlw	18
  2994   0019D6  6E09               	movwf	(_data_config_s+2)^0,c
  2995   0019D8  0E34               	movlw	52
  2996   0019DA  6E08               	movwf	(_data_config_s+1)^0,c
  2997   0019DC                     
  2998                           ;drivers/scr/API_MRF24J40.c: 101:   data_config_s.my_address = (0x1112);
  2999   0019DC  0E11               	movlw	17
  3000   0019DE  6E0B               	movwf	(_data_config_s+4)^0,c
  3001   0019E0  0E12               	movlw	18
  3002   0019E2  6E0A               	movwf	(_data_config_s+3)^0,c
  3003   0019E4                     l100:
  3004   0019E4  0012               	return		;funcret
  3005   0019E6                     __end_of_InicializoVariables:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function _strncpy *****************
  3009 ;; Defined at:
  3010 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncpy.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  d               1    0[COMRAM] PTR unsigned char 
  3013 ;;		 -> data_config_s(32), 
  3014 ;;  s               1    1[COMRAM] PTR const unsigned char 
  3015 ;;		 -> default_mac_address(8), default_security_key(16), 
  3016 ;;  n               2    2[COMRAM] unsigned int 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  cp              1    5[COMRAM] PTR unsigned char 
  3019 ;;		 -> data_config_s(32), 
  3020 ;; Return value:  Size  Location     Type
  3021 ;;                  1    0[COMRAM] PTR unsigned char 
  3022 ;; Registers used:
  3023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3024 ;; Tracked objects:
  3025 ;;		On entry : 0/0
  3026 ;;		On exit  : 0/0
  3027 ;;		Unchanged: 0/0
  3028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3029 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3032 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3033 ;;Total ram usage:        6 bytes
  3034 ;; Hardware stack levels used: 1
  3035 ;; Hardware stack levels required when called: 1
  3036 ;; This function calls:
  3037 ;;		Nothing
  3038 ;; This function is called by:
  3039 ;;		_InicializoVariables
  3040 ;; This function uses a non-reentrant model
  3041 ;;
  3042                           
  3043                           	psect	text8
  3044   001906                     __ptext8:
  3045                           	callstack 0
  3046   001906                     _strncpy:
  3047                           	callstack 27
  3048   001906  C027  F02C         	movff	strncpy@d,strncpy@cp
  3049   00190A  EFA2  F00C         	goto	l1874
  3050   00190E                     l1868:
  3051   00190E  0629               	decf	strncpy@n^0,f,c
  3052   001910  A0D8               	btfss	status,0,c
  3053   001912  062A               	decf	(strncpy@n+1)^0,f,c
  3054   001914  2A28               	incf	strncpy@s^0,f,c
  3055   001916  0428               	decf	strncpy@s^0,w,c
  3056   001918  6E2B               	movwf	??_strncpy^0,c
  3057   00191A  C02B  FFF6         	movff	??_strncpy,tblptrl
  3058   00191E                     	if	1	;There is more than 1 active tblptr byte
  3059   00191E  0E10               	movlw	high __smallconst
  3060   001920  6EF7               	movwf	tblptrh,c
  3061   001922                     	endif
  3062   001922                     	if	0	;tblptru may be non-zero
  3063   001922                     	endif
  3064   001922                     	if	0	;tblptru may be non-zero
  3065   001922                     	endif
  3066   001922  2A2C               	incf	strncpy@cp^0,f,c
  3067   001924  042C               	decf	strncpy@cp^0,w,c
  3068   001926  6ED9               	movwf	fsr2l,c
  3069   001928  6ADA               	clrf	fsr2h,c
  3070   00192A  0008               	tblrd		*
  3071   00192C  CFF5 FFDF          	movff	tablat,indf2
  3072   001930  50DF               	movf	indf2,w,c
  3073   001932  A4D8               	btfss	status,2,c
  3074   001934  EF9E  F00C         	goto	u631
  3075   001938  EFA0  F00C         	goto	u630
  3076   00193C                     u631:
  3077   00193C  EFA2  F00C         	goto	l1874
  3078   001940                     u630:
  3079   001940  EFB2  F00C         	goto	l1880
  3080   001944                     l1874:
  3081   001944  5029               	movf	strncpy@n^0,w,c
  3082   001946  102A               	iorwf	(strncpy@n+1)^0,w,c
  3083   001948  A4D8               	btfss	status,2,c
  3084   00194A  EFA9  F00C         	goto	u641
  3085   00194E  EFAB  F00C         	goto	u640
  3086   001952                     u641:
  3087   001952  EF87  F00C         	goto	l1868
  3088   001956                     u640:
  3089   001956  EFB2  F00C         	goto	l1880
  3090   00195A                     l1876:
  3091   00195A  502C               	movf	strncpy@cp^0,w,c
  3092   00195C  6ED9               	movwf	fsr2l,c
  3093   00195E  6ADA               	clrf	fsr2h,c
  3094   001960  6ADF               	clrf	indf2,c
  3095   001962  2A2C               	incf	strncpy@cp^0,f,c
  3096   001964                     l1880:
  3097   001964  0629               	decf	strncpy@n^0,f,c
  3098   001966  A0D8               	btfss	status,0,c
  3099   001968  062A               	decf	(strncpy@n+1)^0,f,c
  3100   00196A  2829               	incf	strncpy@n^0,w,c
  3101   00196C  E106               	bnz	u651
  3102   00196E  282A               	incf	(strncpy@n+1)^0,w,c
  3103   001970  A4D8               	btfss	status,2,c
  3104   001972  EFBD  F00C         	goto	u651
  3105   001976  EFBF  F00C         	goto	u650
  3106   00197A                     u651:
  3107   00197A  EFAD  F00C         	goto	l1876
  3108   00197E                     u650:
  3109   00197E  0012               	return		;funcret
  3110   001980                     __end_of_strncpy:
  3111                           	callstack 0
  3112                           
  3113 ;; *************** function _InicializoPines *****************
  3114 ;; Defined at:
  3115 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, cstack
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 2
  3136 ;; This function calls:
  3137 ;;		_SetCSPin
  3138 ;;		_SetResetPin
  3139 ;;		_SetWakePin
  3140 ;; This function is called by:
  3141 ;;		_MRF24J40Init
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text9
  3146   001DCC                     __ptext9:
  3147                           	callstack 0
  3148   001DCC                     _InicializoPines:
  3149                           	callstack 27
  3150   001DCC                     
  3151                           ;drivers/scr/API_MRF24J40_port.c: 23:     SetCSPin(1);
  3152   001DCC  0E01               	movlw	1
  3153   001DCE  EC1E  F00F         	call	_SetCSPin
  3154                           
  3155                           ;drivers/scr/API_MRF24J40_port.c: 24:     SetWakePin(1);
  3156   001DD2  0E01               	movlw	1
  3157   001DD4  EC02  F00F         	call	_SetWakePin
  3158                           
  3159                           ;drivers/scr/API_MRF24J40_port.c: 25:     SetResetPin(0);
  3160   001DD8  0E00               	movlw	0
  3161   001DDA  EC09  F00F         	call	_SetResetPin
  3162   001DDE  0012               	return		;funcret
  3163   001DE0                     __end_of_InicializoPines:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _SetWakePin *****************
  3167 ;; Defined at:
  3168 ;;		line 45 in file "drivers/scr/API_MRF24J40_port.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;  estado          1    wreg     _Bool 
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;  estado          1    0[COMRAM] _Bool 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3185 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3186 ;;Total ram usage:        1 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_InicializoPines
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text10
  3197   001E04                     __ptext10:
  3198                           	callstack 0
  3199   001E04                     _SetWakePin:
  3200                           	callstack 27
  3201                           
  3202                           ;incstack = 0
  3203                           ;SetWakePin@estado stored from wreg
  3204   001E04  6E27               	movwf	SetWakePin@estado^0,c
  3205   001E06                     
  3206                           ;drivers/scr/API_MRF24J40_port.c: 47:     LATCbits.LATC7 = estado;
  3207   001E06  B027               	btfsc	SetWakePin@estado^0,0,c
  3208   001E08  D002               	bra	u615
  3209   001E0A  9E8B               	bcf	139,7,c	;volatile
  3210   001E0C  D001               	bra	u616
  3211   001E0E                     u615:
  3212   001E0E  8E8B               	bsf	139,7,c	;volatile
  3213   001E10                     u616:
  3214   001E10  0012               	return		;funcret
  3215   001E12                     __end_of_SetWakePin:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function _SetResetPin *****************
  3219 ;; Defined at:
  3220 ;;		line 56 in file "drivers/scr/API_MRF24J40_port.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  estado          1    wreg     _Bool 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  estado          1    0[COMRAM] _Bool 
  3225 ;; Return value:  Size  Location     Type
  3226 ;;                  1    wreg      void 
  3227 ;; Registers used:
  3228 ;;		wreg
  3229 ;; Tracked objects:
  3230 ;;		On entry : 0/0
  3231 ;;		On exit  : 0/0
  3232 ;;		Unchanged: 0/0
  3233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;Total ram usage:        1 bytes
  3239 ;; Hardware stack levels used: 1
  3240 ;; Hardware stack levels required when called: 1
  3241 ;; This function calls:
  3242 ;;		Nothing
  3243 ;; This function is called by:
  3244 ;;		_InicializoPines
  3245 ;;		_MRF24J40Init
  3246 ;; This function uses a non-reentrant model
  3247 ;;
  3248                           
  3249                           	psect	text11
  3250   001E12                     __ptext11:
  3251                           	callstack 0
  3252   001E12                     _SetResetPin:
  3253                           	callstack 28
  3254                           
  3255                           ;incstack = 0
  3256                           ;SetResetPin@estado stored from wreg
  3257   001E12  6E27               	movwf	SetResetPin@estado^0,c
  3258   001E14                     
  3259                           ;drivers/scr/API_MRF24J40_port.c: 58:     LATDbits.LATD4 = estado;
  3260   001E14  B027               	btfsc	SetResetPin@estado^0,0,c
  3261   001E16  D002               	bra	u625
  3262   001E18  988C               	bcf	140,4,c	;volatile
  3263   001E1A  D001               	bra	u626
  3264   001E1C                     u625:
  3265   001E1C  888C               	bsf	140,4,c	;volatile
  3266   001E1E                     u626:
  3267   001E1E  0012               	return		;funcret
  3268   001E20                     __end_of_SetResetPin:
  3269                           	callstack 0
  3270                           
  3271 ;; *************** function _InicializoMRF24 *****************
  3272 ;; Defined at:
  3273 ;;		line 111 in file "drivers/scr/API_MRF24J40.c"
  3274 ;; Parameters:    Size  Location     Type
  3275 ;;		None
  3276 ;; Auto vars:     Size  Location     Type
  3277 ;;  delay_time_o    9   19[COMRAM] struct .
  3278 ;;  lectura         1   18[COMRAM] unsigned char 
  3279 ;; Return value:  Size  Location     Type
  3280 ;;                  1    wreg      enum E3263
  3281 ;; Registers used:
  3282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3283 ;; Tracked objects:
  3284 ;;		On entry : 0/0
  3285 ;;		On exit  : 0/0
  3286 ;;		Unchanged: 0/0
  3287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3289 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;Total ram usage:       12 bytes
  3293 ;; Hardware stack levels used: 1
  3294 ;; Hardware stack levels required when called: 6
  3295 ;; This function calls:
  3296 ;;		_DelayInit
  3297 ;;		_DelayRead
  3298 ;;		_DelayReset
  3299 ;;		_GetLongAddr
  3300 ;;		_GetShortAddr
  3301 ;;		_SetChannel
  3302 ;;		_SetDeviceAddress
  3303 ;;		_SetDeviceMACAddress
  3304 ;;		_SetLongAddr
  3305 ;;		_SetShortAddr
  3306 ;; This function is called by:
  3307 ;;		_MRF24J40Init
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text12
  3312   001284                     __ptext12:
  3313                           	callstack 0
  3314   001284                     _InicializoMRF24:
  3315                           	callstack 23
  3316   001284                     
  3317                           ;drivers/scr/API_MRF24J40.c: 113:  uint8_t lectura;;drivers/scr/API_MRF24J40.c: 114:  de
      +                          layNoBloqueanteData_t delay_time_out;;drivers/scr/API_MRF24J40.c: 115:  DelayInit(&delay
      +                          _time_out, 200);
  3318   001284  0E3A               	movlw	low InicializoMRF24@delay_time_out
  3319   001286  6E27               	movwf	DelayInit@delay^0,c
  3320   001288  6A28               	clrf	(DelayInit@delay+1)^0,c
  3321   00128A  0EC8               	movlw	200
  3322   00128C  6E29               	movwf	DelayInit@duration^0,c
  3323   00128E  0E00               	movlw	0
  3324   001290  6E2A               	movwf	(DelayInit@duration+1)^0,c
  3325   001292  0E00               	movlw	0
  3326   001294  6E2B               	movwf	(DelayInit@duration+2)^0,c
  3327   001296  0E00               	movlw	0
  3328   001298  6E2C               	movwf	(DelayInit@duration+3)^0,c
  3329   00129A  EC37  F00E         	call	_DelayInit	;wreg free
  3330   00129E                     
  3331                           ;drivers/scr/API_MRF24J40.c: 116:  SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  3332   00129E  0E07               	movlw	7
  3333   0012A0  6E29               	movwf	SetShortAddr@valor^0,c
  3334   0012A2  0E2A               	movlw	42
  3335   0012A4  ECB3  F00E         	call	_SetShortAddr
  3336   0012A8                     
  3337                           ;drivers/scr/API_MRF24J40.c: 117:  DelayReset(&delay_time_out);
  3338   0012A8  0E3A               	movlw	low InicializoMRF24@delay_time_out
  3339   0012AA  6E27               	movwf	DelayReset@delay^0,c
  3340   0012AC  ECA0  F00E         	call	_DelayReset	;wreg free
  3341   0012B0                     l103:
  3342                           
  3343                           ;drivers/scr/API_MRF24J40.c: 121:   lectura = GetShortAddr((0x2A));
  3344   0012B0  0E2A               	movlw	42
  3345   0012B2  EC8D  F00E         	call	_GetShortAddr
  3346   0012B6  6E39               	movwf	InicializoMRF24@lectura^0,c
  3347   0012B8                     
  3348                           ;drivers/scr/API_MRF24J40.c: 122:   if(DelayRead(&delay_time_out))
  3349   0012B8  0E3A               	movlw	low InicializoMRF24@delay_time_out
  3350   0012BA  6E29               	movwf	DelayRead@delay^0,c
  3351   0012BC  6A2A               	clrf	(DelayRead@delay+1)^0,c
  3352   0012BE  EC26  F00C         	call	_DelayRead	;wreg free
  3353   0012C2  0900               	iorlw	0
  3354   0012C4  B4D8               	btfsc	status,2,c
  3355   0012C6  EF67  F009         	goto	u731
  3356   0012CA  EF69  F009         	goto	u730
  3357   0012CE                     u731:
  3358   0012CE  EF6C  F009         	goto	l1998
  3359   0012D2                     u730:
  3360   0012D2                     l1994:
  3361                           
  3362                           ;drivers/scr/API_MRF24J40.c: 123:    return TIME_OUT_OCURRED;
  3363   0012D2  0E08               	movlw	8
  3364   0012D4  EF17  F00A         	goto	l105
  3365   0012D8                     l1998:
  3366                           
  3367                           ;drivers/scr/API_MRF24J40.c: 124:  }while((0X00) != (lectura & ((0X04) | (0X02) | (0X01)
      +                          )));
  3368   0012D8  C039  F037         	movff	InicializoMRF24@lectura,??_InicializoMRF24
  3369   0012DC  0E07               	movlw	7
  3370   0012DE  1637               	andwf	??_InicializoMRF24^0,f,c
  3371   0012E0  A4D8               	btfss	status,2,c
  3372   0012E2  EF75  F009         	goto	u741
  3373   0012E6  EF77  F009         	goto	u740
  3374   0012EA                     u741:
  3375   0012EA  EF58  F009         	goto	l103
  3376   0012EE                     u740:
  3377   0012EE                     
  3378                           ;drivers/scr/API_MRF24J40.c: 125:  _delay((unsigned long)((50)*(16000000/4000.0)));;
  3379   0012EE  0E02               	movlw	2
  3380   0012F0  6E38               	movwf	(??_InicializoMRF24+1)^0,c
  3381   0012F2  0E04               	movlw	4
  3382   0012F4  6E37               	movwf	??_InicializoMRF24^0,c
  3383   0012F6  0EBA               	movlw	186
  3384   0012F8                     u1127:
  3385   0012F8  2EE8               	decfsz	wreg,f,c
  3386   0012FA  D7FE               	bra	u1127
  3387   0012FC  2E37               	decfsz	??_InicializoMRF24^0,f,c
  3388   0012FE  D7FC               	bra	u1127
  3389   001300  2E38               	decfsz	(??_InicializoMRF24+1)^0,f,c
  3390   001302  D7FA               	bra	u1127
  3391   001304  F000 F000          	nop2	
  3392   001308                     
  3393                           ;drivers/scr/API_MRF24J40.c: 126:  SetShortAddr((0x0D), (0X01));
  3394   001308  0E01               	movlw	1
  3395   00130A  6E29               	movwf	SetShortAddr@valor^0,c
  3396   00130C  0E0D               	movlw	13
  3397   00130E  ECB3  F00E         	call	_SetShortAddr
  3398   001312                     
  3399                           ;drivers/scr/API_MRF24J40.c: 127:  SetDeviceAddress();
  3400   001312  EC78  F00E         	call	_SetDeviceAddress	;wreg free
  3401   001316                     
  3402                           ;drivers/scr/API_MRF24J40.c: 128:  SetDeviceMACAddress();
  3403   001316  EC63  F00E         	call	_SetDeviceMACAddress	;wreg free
  3404   00131A                     
  3405                           ;drivers/scr/API_MRF24J40.c: 129:  SetLongAddr((0x201), (0X02) | (0X01));
  3406   00131A  0E02               	movlw	2
  3407   00131C  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  3408   00131E  0E01               	movlw	1
  3409   001320  6E2C               	movwf	SetLongAddr@reg_address^0,c
  3410   001322  0E03               	movlw	3
  3411   001324  6E2E               	movwf	SetLongAddr@valor^0,c
  3412   001326  EC6F  F00D         	call	_SetLongAddr	;wreg free
  3413   00132A                     
  3414                           ;drivers/scr/API_MRF24J40.c: 130:  SetLongAddr((0x202), (0X80));
  3415   00132A  0E02               	movlw	2
  3416   00132C  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  3417   00132E  0E02               	movlw	2
  3418   001330  6E2C               	movwf	SetLongAddr@reg_address^0,c
  3419   001332  0E80               	movlw	128
  3420   001334  6E2E               	movwf	SetLongAddr@valor^0,c
  3421   001336  EC6F  F00D         	call	_SetLongAddr	;wreg free
  3422   00133A                     
  3423                           ;drivers/scr/API_MRF24J40.c: 131:  SetLongAddr((0x203), (0X80) | (0X00));
  3424   00133A  0E02               	movlw	2
  3425   00133C  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  3426   00133E  0E03               	movlw	3
  3427   001340  6E2C               	movwf	SetLongAddr@reg_address^0,c
  3428   001342  0E80               	movlw	128
  3429   001344  6E2E               	movwf	SetLongAddr@valor^0,c
  3430   001346  EC6F  F00D         	call	_SetLongAddr	;wreg free
  3431   00134A                     
  3432                           ;drivers/scr/API_MRF24J40.c: 132:  SetLongAddr((0x206), (0X80) | (0X10));
  3433   00134A  0E02               	movlw	2
  3434   00134C  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  3435   00134E  0E06               	movlw	6
  3436   001350  6E2C               	movwf	SetLongAddr@reg_address^0,c
  3437   001352  0E90               	movlw	144
  3438   001354  6E2E               	movwf	SetLongAddr@valor^0,c
  3439   001356  EC6F  F00D         	call	_SetLongAddr	;wreg free
  3440   00135A                     
  3441                           ;drivers/scr/API_MRF24J40.c: 133:  SetLongAddr((0x207), (0X80));
  3442   00135A  0E02               	movlw	2
  3443   00135C  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  3444   00135E  0E07               	movlw	7
  3445   001360  6E2C               	movwf	SetLongAddr@reg_address^0,c
  3446   001362  0E80               	movlw	128
  3447   001364  6E2E               	movwf	SetLongAddr@valor^0,c
  3448   001366  EC6F  F00D         	call	_SetLongAddr	;wreg free
  3449   00136A                     
  3450                           ;drivers/scr/API_MRF24J40.c: 134:  SetLongAddr((0x208), (0X10));
  3451   00136A  0E02               	movlw	2
  3452   00136C  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  3453   00136E  0E08               	movlw	8
  3454   001370  6E2C               	movwf	SetLongAddr@reg_address^0,c
  3455   001372  0E10               	movlw	16
  3456   001374  6E2E               	movwf	SetLongAddr@valor^0,c
  3457   001376  EC6F  F00D         	call	_SetLongAddr	;wreg free
  3458   00137A                     
  3459                           ;drivers/scr/API_MRF24J40.c: 135:  SetLongAddr((0x220), (0X20) | (0X01));
  3460   00137A  0E02               	movlw	2
  3461   00137C  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  3462   00137E  0E20               	movlw	32
  3463   001380  6E2C               	movwf	SetLongAddr@reg_address^0,c
  3464   001382  0E21               	movlw	33
  3465   001384  6E2E               	movwf	SetLongAddr@valor^0,c
  3466   001386  EC6F  F00D         	call	_SetLongAddr	;wreg free
  3467   00138A                     
  3468                           ;drivers/scr/API_MRF24J40.c: 136:  SetShortAddr((0x3A), (0X80));
  3469   00138A  0E80               	movlw	128
  3470   00138C  6E29               	movwf	SetShortAddr@valor^0,c
  3471   00138E  0E3A               	movlw	58
  3472   001390  ECB3  F00E         	call	_SetShortAddr
  3473   001394                     
  3474                           ;drivers/scr/API_MRF24J40.c: 137:  SetShortAddr((0x3E), (0X40));
  3475   001394  0E40               	movlw	64
  3476   001396  6E29               	movwf	SetShortAddr@valor^0,c
  3477   001398  0E3E               	movlw	62
  3478   00139A  ECB3  F00E         	call	_SetShortAddr
  3479   00139E                     
  3480                           ;drivers/scr/API_MRF24J40.c: 138:  SetShortAddr((0x3F), (0X04) | (0X02));
  3481   00139E  0E06               	movlw	6
  3482   0013A0  6E29               	movwf	SetShortAddr@valor^0,c
  3483   0013A2  0E3F               	movlw	63
  3484   0013A4  ECB3  F00E         	call	_SetShortAddr
  3485   0013A8                     
  3486                           ;drivers/scr/API_MRF24J40.c: 139:  SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  3487   0013A8  0E98               	movlw	152
  3488   0013AA  6E29               	movwf	SetShortAddr@valor^0,c
  3489   0013AC  0E18               	movlw	24
  3490   0013AE  ECB3  F00E         	call	_SetShortAddr
  3491   0013B2                     
  3492                           ;drivers/scr/API_MRF24J40.c: 140:  SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0X01
      +                          ));
  3493   0013B2  0E95               	movlw	149
  3494   0013B4  6E29               	movwf	SetShortAddr@valor^0,c
  3495   0013B6  0E2E               	movlw	46
  3496   0013B8  ECB3  F00E         	call	_SetShortAddr
  3497   0013BC                     
  3498                           ;drivers/scr/API_MRF24J40.c: 141:  DelayReset(&delay_time_out);
  3499   0013BC  0E3A               	movlw	low InicializoMRF24@delay_time_out
  3500   0013BE  6E27               	movwf	DelayReset@delay^0,c
  3501   0013C0  ECA0  F00E         	call	_DelayReset	;wreg free
  3502   0013C4                     l2034:
  3503                           
  3504                           ;drivers/scr/API_MRF24J40.c: 145:   lectura = GetLongAddr((0x20f)) & (0XA0);
  3505   0013C4  0E02               	movlw	2
  3506   0013C6  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  3507   0013C8  0E0F               	movlw	15
  3508   0013CA  6E2C               	movwf	GetLongAddr@reg_address^0,c
  3509   0013CC  EC4D  F00D         	call	_GetLongAddr	;wreg free
  3510   0013D0  0BA0               	andlw	160
  3511   0013D2  6E39               	movwf	InicializoMRF24@lectura^0,c
  3512   0013D4                     
  3513                           ;drivers/scr/API_MRF24J40.c: 146:   if(DelayRead(&delay_time_out))
  3514   0013D4  0E3A               	movlw	low InicializoMRF24@delay_time_out
  3515   0013D6  6E29               	movwf	DelayRead@delay^0,c
  3516   0013D8  6A2A               	clrf	(DelayRead@delay+1)^0,c
  3517   0013DA  EC26  F00C         	call	_DelayRead	;wreg free
  3518   0013DE  0900               	iorlw	0
  3519   0013E0  B4D8               	btfsc	status,2,c
  3520   0013E2  EFF5  F009         	goto	u751
  3521   0013E6  EFF7  F009         	goto	u750
  3522   0013EA                     u751:
  3523   0013EA  EFF9  F009         	goto	l2042
  3524   0013EE                     u750:
  3525   0013EE  EF69  F009         	goto	l1994
  3526   0013F2                     l2042:
  3527                           
  3528                           ;drivers/scr/API_MRF24J40.c: 148:  }while((0XA0) != lectura);
  3529   0013F2  0EA0               	movlw	160
  3530   0013F4  1839               	xorwf	InicializoMRF24@lectura^0,w,c
  3531   0013F6  A4D8               	btfss	status,2,c
  3532   0013F8  EF00  F00A         	goto	u761
  3533   0013FC  EF02  F00A         	goto	u760
  3534   001400                     u761:
  3535   001400  EFE2  F009         	goto	l2034
  3536   001404                     u760:
  3537   001404                     
  3538                           ;drivers/scr/API_MRF24J40.c: 149:  SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0X10
      +                          )
  3539   001404  0EF5               	movlw	245
  3540   001406  6E29               	movwf	SetShortAddr@valor^0,c
  3541   001408  0E32               	movlw	50
  3542   00140A  ECB3  F00E         	call	_SetShortAddr
  3543                           
  3544                           ;drivers/scr/API_MRF24J40.c: 151:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  3545   00140E  0EB9               	movlw	185
  3546   001410  6E29               	movwf	SetShortAddr@valor^0,c
  3547   001412  0E12               	movlw	18
  3548   001414  ECB3  F00E         	call	_SetShortAddr
  3549                           
  3550                           ;drivers/scr/API_MRF24J40.c: 152:  SetChannel();
  3551   001418  ECEA  F00D         	call	_SetChannel	;wreg free
  3552                           
  3553                           ;drivers/scr/API_MRF24J40.c: 153:  SetShortAddr((0x00), (0X00));
  3554   00141C  0E00               	movlw	0
  3555   00141E  6E29               	movwf	SetShortAddr@valor^0,c
  3556   001420  0E00               	movlw	0
  3557   001422  ECB3  F00E         	call	_SetShortAddr
  3558                           
  3559                           ;drivers/scr/API_MRF24J40.c: 154:  (void)GetShortAddr((0x31));
  3560   001426  0E31               	movlw	49
  3561   001428  EC8D  F00E         	call	_GetShortAddr
  3562   00142C                     
  3563                           ;drivers/scr/API_MRF24J40.c: 155:  return INITIALIZATION_OK;
  3564   00142C  0E01               	movlw	1
  3565   00142E                     l105:
  3566   00142E  0012               	return		;funcret
  3567   001430                     __end_of_InicializoMRF24:
  3568                           	callstack 0
  3569                           
  3570 ;; *************** function _SetDeviceMACAddress *****************
  3571 ;; Defined at:
  3572 ;;		line 271 in file "drivers/scr/API_MRF24J40.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  i               1    4[COMRAM] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;Total ram usage:        1 bytes
  3591 ;; Hardware stack levels used: 1
  3592 ;; Hardware stack levels required when called: 4
  3593 ;; This function calls:
  3594 ;;		_SetShortAddr
  3595 ;; This function is called by:
  3596 ;;		_InicializoMRF24
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text13
  3601   001CC6                     __ptext13:
  3602                           	callstack 0
  3603   001CC6                     _SetDeviceMACAddress:
  3604                           	callstack 24
  3605   001CC6                     
  3606                           ;drivers/scr/API_MRF24J40.c: 273:  for(uint8_t i = 0; i < 8; i++) {
  3607   001CC6  6A2B               	clrf	SetDeviceMACAddress@i^0,c
  3608   001CC8                     l1936:
  3609                           
  3610                           ;drivers/scr/API_MRF24J40.c: 275:   SetShortAddr(EADR0 + i, data_config_s.my_mac[i]);
  3611   001CC8  502B               	movf	SetDeviceMACAddress@i^0,w,c
  3612   001CCA  0F0F               	addlw	low (_data_config_s+8)
  3613   001CCC  6ED9               	movwf	fsr2l,c
  3614   001CCE  6ADA               	clrf	fsr2h,c
  3615   001CD0  50DF               	movf	indf2,w,c
  3616   001CD2  6E29               	movwf	SetShortAddr@valor^0,c
  3617   001CD4  502B               	movf	SetDeviceMACAddress@i^0,w,c
  3618   001CD6  0F05               	addlw	5
  3619   001CD8  ECB3  F00E         	call	_SetShortAddr
  3620   001CDC                     
  3621                           ;drivers/scr/API_MRF24J40.c: 276:  }
  3622   001CDC  2A2B               	incf	SetDeviceMACAddress@i^0,f,c
  3623   001CDE  0E07               	movlw	7
  3624   001CE0  642B               	cpfsgt	SetDeviceMACAddress@i^0,c
  3625   001CE2  EF75  F00E         	goto	u681
  3626   001CE6  EF77  F00E         	goto	u680
  3627   001CEA                     u681:
  3628   001CEA  EF64  F00E         	goto	l1936
  3629   001CEE                     u680:
  3630   001CEE  0012               	return		;funcret
  3631   001CF0                     __end_of_SetDeviceMACAddress:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _SetDeviceAddress *****************
  3635 ;; Defined at:
  3636 ;;		line 257 in file "drivers/scr/API_MRF24J40.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;		None
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  1    wreg      void 
  3643 ;; Registers used:
  3644 ;;		wreg, status,2, status,0, cstack
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;Total ram usage:        0 bytes
  3655 ;; Hardware stack levels used: 1
  3656 ;; Hardware stack levels required when called: 4
  3657 ;; This function calls:
  3658 ;;		_SetShortAddr
  3659 ;; This function is called by:
  3660 ;;		_InicializoMRF24
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text14
  3665   001CF0                     __ptext14:
  3666                           	callstack 0
  3667   001CF0                     _SetDeviceAddress:
  3668                           	callstack 24
  3669   001CF0                     
  3670                           ;drivers/scr/API_MRF24J40.c: 259:  SetShortAddr((0x04), (uint8_t) (data_config_s.my_addr
      +                          ess >> (0X08)));
  3671   001CF0  500B               	movf	(_data_config_s+4)^0,w,c
  3672   001CF2  6E29               	movwf	SetShortAddr@valor^0,c
  3673   001CF4  0E04               	movlw	4
  3674   001CF6  ECB3  F00E         	call	_SetShortAddr
  3675                           
  3676                           ;drivers/scr/API_MRF24J40.c: 260:  SetShortAddr((0x03), (uint8_t) (data_config_s.my_addr
      +                          ess));
  3677   001CFA  C00A  F029         	movff	_data_config_s+3,SetShortAddr@valor
  3678   001CFE  0E03               	movlw	3
  3679   001D00  ECB3  F00E         	call	_SetShortAddr
  3680                           
  3681                           ;drivers/scr/API_MRF24J40.c: 261:  SetShortAddr((0x02), (uint8_t) (data_config_s.my_pani
      +                          d >> (0X08)));
  3682   001D04  5009               	movf	(_data_config_s+2)^0,w,c
  3683   001D06  6E29               	movwf	SetShortAddr@valor^0,c
  3684   001D08  0E02               	movlw	2
  3685   001D0A  ECB3  F00E         	call	_SetShortAddr
  3686                           
  3687                           ;drivers/scr/API_MRF24J40.c: 262:  SetShortAddr((0x01), (uint8_t) (data_config_s.my_pani
      +                          d));
  3688   001D0E  C008  F029         	movff	_data_config_s+1,SetShortAddr@valor
  3689   001D12  0E01               	movlw	1
  3690   001D14  ECB3  F00E         	call	_SetShortAddr
  3691   001D18  0012               	return		;funcret
  3692   001D1A                     __end_of_SetDeviceAddress:
  3693                           	callstack 0
  3694                           
  3695 ;; *************** function _SetChannel *****************
  3696 ;; Defined at:
  3697 ;;		line 243 in file "drivers/scr/API_MRF24J40.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;		None
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3715 ;;Total ram usage:        1 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 5
  3718 ;; This function calls:
  3719 ;;		_SetLongAddr
  3720 ;;		_SetShortAddr
  3721 ;; This function is called by:
  3722 ;;		_InicializoMRF24
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text15
  3727   001BD4                     __ptext15:
  3728                           	callstack 0
  3729   001BD4                     _SetChannel:
  3730                           	callstack 23
  3731   001BD4                     
  3732                           ;drivers/scr/API_MRF24J40.c: 245:  SetLongAddr((0x200), data_config_s.my_channel);
  3733   001BD4  0E02               	movlw	2
  3734   001BD6  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  3735   001BD8  0E00               	movlw	0
  3736   001BDA  6E2C               	movwf	SetLongAddr@reg_address^0,c
  3737   001BDC  C007  F02E         	movff	_data_config_s,SetLongAddr@valor
  3738   001BE0  EC6F  F00D         	call	_SetLongAddr	;wreg free
  3739                           
  3740                           ;drivers/scr/API_MRF24J40.c: 246:  SetShortAddr((0x36), (0X04));
  3741   001BE4  0E04               	movlw	4
  3742   001BE6  6E29               	movwf	SetShortAddr@valor^0,c
  3743   001BE8  0E36               	movlw	54
  3744   001BEA  ECB3  F00E         	call	_SetShortAddr
  3745                           
  3746                           ;drivers/scr/API_MRF24J40.c: 247:  SetShortAddr((0x36), (0X00));
  3747   001BEE  0E00               	movlw	0
  3748   001BF0  6E29               	movwf	SetShortAddr@valor^0,c
  3749   001BF2  0E36               	movlw	54
  3750   001BF4  ECB3  F00E         	call	_SetShortAddr
  3751   001BF8                     
  3752                           ;drivers/scr/API_MRF24J40.c: 248:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  3753   001BF8  0E06               	movlw	6
  3754   001BFA  6E31               	movwf	??_SetChannel^0,c
  3755   001BFC  0E30               	movlw	48
  3756   001BFE                     u1137:
  3757   001BFE  2EE8               	decfsz	wreg,f,c
  3758   001C00  D7FE               	bra	u1137
  3759   001C02  2E31               	decfsz	??_SetChannel^0,f,c
  3760   001C04  D7FC               	bra	u1137
  3761   001C06  F000 F000          	nop2	
  3762   001C0A  0012               	return		;funcret
  3763   001C0C                     __end_of_SetChannel:
  3764                           	callstack 0
  3765                           
  3766 ;; *************** function _SetShortAddr *****************
  3767 ;; Defined at:
  3768 ;;		line 167 in file "drivers/scr/API_MRF24J40.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  reg_address     1    wreg     unsigned char 
  3771 ;;  valor           1    2[COMRAM] unsigned char 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  reg_address     1    3[COMRAM] unsigned char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3783 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3786 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;Total ram usage:        2 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; Hardware stack levels required when called: 3
  3790 ;; This function calls:
  3791 ;;		_SetCSPin
  3792 ;;		_WriteByteSPIPort
  3793 ;; This function is called by:
  3794 ;;		_InicializoMRF24
  3795 ;;		_SetChannel
  3796 ;;		_SetDeviceAddress
  3797 ;;		_SetDeviceMACAddress
  3798 ;;		_MRF24TransmitirDato
  3799 ;;		_MRF24ReciboPaquete
  3800 ;;		_MRF24BuscarDispositivos
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text16
  3805   001D66                     __ptext16:
  3806                           	callstack 0
  3807   001D66                     _SetShortAddr:
  3808                           	callstack 25
  3809                           
  3810                           ;incstack = 0
  3811                           ;SetShortAddr@reg_address stored from wreg
  3812   001D66  6E2A               	movwf	SetShortAddr@reg_address^0,c
  3813   001D68                     
  3814                           ;drivers/scr/API_MRF24J40.c: 169:  reg_address = (uint8_t) (reg_address << (0X01)) | (0x
      +                          01);
  3815   001D68  80D8               	bsf	status,0,c
  3816   001D6A  362A               	rlcf	SetShortAddr@reg_address^0,f,c
  3817   001D6C                     
  3818                           ;drivers/scr/API_MRF24J40.c: 170:  SetCSPin(0);
  3819   001D6C  0E00               	movlw	0
  3820   001D6E  EC1E  F00F         	call	_SetCSPin
  3821   001D72                     
  3822                           ;drivers/scr/API_MRF24J40.c: 171:  WriteByteSPIPort(reg_address);
  3823   001D72  502A               	movf	SetShortAddr@reg_address^0,w,c
  3824   001D74  EC25  F00F         	call	_WriteByteSPIPort
  3825   001D78                     
  3826                           ;drivers/scr/API_MRF24J40.c: 172:  WriteByteSPIPort(valor);
  3827   001D78  5029               	movf	SetShortAddr@valor^0,w,c
  3828   001D7A  EC25  F00F         	call	_WriteByteSPIPort
  3829   001D7E                     
  3830                           ;drivers/scr/API_MRF24J40.c: 173:  SetCSPin(1);
  3831   001D7E  0E01               	movlw	1
  3832   001D80  EC1E  F00F         	call	_SetCSPin
  3833   001D84  0012               	return		;funcret
  3834   001D86                     __end_of_SetShortAddr:
  3835                           	callstack 0
  3836                           
  3837 ;; *************** function _SetLongAddr *****************
  3838 ;; Defined at:
  3839 ;;		line 207 in file "drivers/scr/API_MRF24J40.c"
  3840 ;; Parameters:    Size  Location     Type
  3841 ;;  reg_address     2    5[COMRAM] unsigned short 
  3842 ;;  valor           1    7[COMRAM] unsigned char 
  3843 ;; Auto vars:     Size  Location     Type
  3844 ;;		None
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  1    wreg      void 
  3847 ;; Registers used:
  3848 ;;		wreg, status,2, status,0, cstack
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3854 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3856 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3857 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3858 ;;Total ram usage:        5 bytes
  3859 ;; Hardware stack levels used: 1
  3860 ;; Hardware stack levels required when called: 4
  3861 ;; This function calls:
  3862 ;;		_SetCSPin
  3863 ;;		_Write2ByteSPIPort
  3864 ;;		_WriteByteSPIPort
  3865 ;; This function is called by:
  3866 ;;		_InicializoMRF24
  3867 ;;		_SetChannel
  3868 ;;		_MRF24TransmitirDato
  3869 ;;		_MRF24ReciboPaquete
  3870 ;; This function uses a non-reentrant model
  3871 ;;
  3872                           
  3873                           	psect	text17
  3874   001ADE                     __ptext17:
  3875                           	callstack 0
  3876   001ADE                     _SetLongAddr:
  3877                           	callstack 24
  3878   001ADE                     
  3879                           ;drivers/scr/API_MRF24J40.c: 209:  reg_address = (reg_address << (0X05)) | (0X8010);
  3880   001ADE  C02C  F02F         	movff	SetLongAddr@reg_address,??_SetLongAddr
  3881   001AE2  C02D  F030         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  3882   001AE6  0E05               	movlw	5
  3883   001AE8                     u605:
  3884   001AE8  90D8               	bcf	status,0,c
  3885   001AEA  362F               	rlcf	??_SetLongAddr^0,f,c
  3886   001AEC  3630               	rlcf	(??_SetLongAddr+1)^0,f,c
  3887   001AEE  2EE8               	decfsz	wreg,f,c
  3888   001AF0  EF74  F00D         	goto	u605
  3889   001AF4  0E10               	movlw	16
  3890   001AF6  102F               	iorwf	??_SetLongAddr^0,w,c
  3891   001AF8  6E2C               	movwf	SetLongAddr@reg_address^0,c
  3892   001AFA  0E80               	movlw	128
  3893   001AFC  1030               	iorwf	(??_SetLongAddr+1)^0,w,c
  3894   001AFE  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  3895   001B00                     
  3896                           ;drivers/scr/API_MRF24J40.c: 210:  SetCSPin(0);
  3897   001B00  0E00               	movlw	0
  3898   001B02  EC1E  F00F         	call	_SetCSPin
  3899   001B06                     
  3900                           ;drivers/scr/API_MRF24J40.c: 211:  Write2ByteSPIPort(reg_address);
  3901   001B06  C02C  F02A         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  3902   001B0A  C02D  F02B         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3903   001B0E  EC10  F00F         	call	_Write2ByteSPIPort	;wreg free
  3904   001B12                     
  3905                           ;drivers/scr/API_MRF24J40.c: 212:  WriteByteSPIPort(valor);
  3906   001B12  502E               	movf	SetLongAddr@valor^0,w,c
  3907   001B14  EC25  F00F         	call	_WriteByteSPIPort
  3908   001B18                     
  3909                           ;drivers/scr/API_MRF24J40.c: 213:  SetCSPin(1);
  3910   001B18  0E01               	movlw	1
  3911   001B1A  EC1E  F00F         	call	_SetCSPin
  3912   001B1E  0012               	return		;funcret
  3913   001B20                     __end_of_SetLongAddr:
  3914                           	callstack 0
  3915                           
  3916 ;; *************** function _GetShortAddr *****************
  3917 ;; Defined at:
  3918 ;;		line 186 in file "drivers/scr/API_MRF24J40.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  reg_address     1    wreg     unsigned char 
  3921 ;; Auto vars:     Size  Location     Type
  3922 ;;  reg_address     1    3[COMRAM] unsigned char 
  3923 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3924 ;; Return value:  Size  Location     Type
  3925 ;;                  1    wreg      unsigned char 
  3926 ;; Registers used:
  3927 ;;		wreg, status,2, status,0, cstack
  3928 ;; Tracked objects:
  3929 ;;		On entry : 0/0
  3930 ;;		On exit  : 0/0
  3931 ;;		Unchanged: 0/0
  3932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3937 ;;Total ram usage:        2 bytes
  3938 ;; Hardware stack levels used: 1
  3939 ;; Hardware stack levels required when called: 3
  3940 ;; This function calls:
  3941 ;;		_ReadByteSPIPort
  3942 ;;		_SetCSPin
  3943 ;;		_WriteByteSPIPort
  3944 ;; This function is called by:
  3945 ;;		_InicializoMRF24
  3946 ;;		_MRF24ReciboPaquete
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950                           	psect	text18
  3951   001D1A                     __ptext18:
  3952                           	callstack 0
  3953   001D1A                     _GetShortAddr:
  3954                           	callstack 26
  3955                           
  3956                           ;incstack = 0
  3957                           ;GetShortAddr@reg_address stored from wreg
  3958   001D1A  6E2A               	movwf	GetShortAddr@reg_address^0,c
  3959   001D1C                     
  3960                           ;drivers/scr/API_MRF24J40.c: 189:  reg_address = (uint8_t) (reg_address << (0X01)) & (0x
      +                          7E);
  3961   001D1C  502A               	movf	GetShortAddr@reg_address^0,w,c
  3962   001D1E  242A               	addwf	GetShortAddr@reg_address^0,w,c
  3963   001D20  0B7E               	andlw	126
  3964   001D22  6E2A               	movwf	GetShortAddr@reg_address^0,c
  3965   001D24                     
  3966                           ;drivers/scr/API_MRF24J40.c: 190:  SetCSPin(0);
  3967   001D24  0E00               	movlw	0
  3968   001D26  EC1E  F00F         	call	_SetCSPin
  3969   001D2A                     
  3970                           ;drivers/scr/API_MRF24J40.c: 191:  WriteByteSPIPort(reg_address);
  3971   001D2A  502A               	movf	GetShortAddr@reg_address^0,w,c
  3972   001D2C  EC25  F00F         	call	_WriteByteSPIPort
  3973   001D30                     
  3974                           ;drivers/scr/API_MRF24J40.c: 192:  leido_spi = ReadByteSPIPort();
  3975   001D30  EC2F  F00F         	call	_ReadByteSPIPort	;wreg free
  3976   001D34  6E29               	movwf	GetShortAddr@leido_spi^0,c
  3977   001D36                     
  3978                           ;drivers/scr/API_MRF24J40.c: 193:  SetCSPin(1);
  3979   001D36  0E01               	movlw	1
  3980   001D38  EC1E  F00F         	call	_SetCSPin
  3981   001D3C                     
  3982                           ;drivers/scr/API_MRF24J40.c: 194:  return leido_spi;
  3983   001D3C  5029               	movf	GetShortAddr@leido_spi^0,w,c
  3984   001D3E  0012               	return		;funcret
  3985   001D40                     __end_of_GetShortAddr:
  3986                           	callstack 0
  3987                           
  3988 ;; *************** function _WriteByteSPIPort *****************
  3989 ;; Defined at:
  3990 ;;		line 76 in file "drivers/scr/API_MRF24J40_port.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  dato            1    wreg     unsigned char 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  dato            1    1[COMRAM] unsigned char 
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		wreg, status,2, cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4008 ;;Total ram usage:        1 bytes
  4009 ;; Hardware stack levels used: 1
  4010 ;; Hardware stack levels required when called: 2
  4011 ;; This function calls:
  4012 ;;		_SPIWriteByte
  4013 ;; This function is called by:
  4014 ;;		_SetShortAddr
  4015 ;;		_GetShortAddr
  4016 ;;		_SetLongAddr
  4017 ;; This function uses a non-reentrant model
  4018 ;;
  4019                           
  4020                           	psect	text19
  4021   001E4A                     __ptext19:
  4022                           	callstack 0
  4023   001E4A                     _WriteByteSPIPort:
  4024                           	callstack 25
  4025                           
  4026                           ;incstack = 0
  4027                           ;WriteByteSPIPort@dato stored from wreg
  4028   001E4A  6E28               	movwf	WriteByteSPIPort@dato^0,c
  4029   001E4C                     
  4030                           ;drivers/scr/API_MRF24J40_port.c: 78:     SPIWriteByte(dato);
  4031   001E4C  5028               	movf	WriteByteSPIPort@dato^0,w,c
  4032   001E4E  ECC3  F00E         	call	_SPIWriteByte
  4033   001E52  0012               	return		;funcret
  4034   001E54                     __end_of_WriteByteSPIPort:
  4035                           	callstack 0
  4036                           
  4037 ;; *************** function _GetLongAddr *****************
  4038 ;; Defined at:
  4039 ;;		line 227 in file "drivers/scr/API_MRF24J40.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;  reg_address     2    5[COMRAM] unsigned short 
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;  respuesta       1    9[COMRAM] unsigned char 
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      unsigned char 
  4046 ;; Registers used:
  4047 ;;		wreg, status,2, status,0, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4056 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4057 ;;Total ram usage:        5 bytes
  4058 ;; Hardware stack levels used: 1
  4059 ;; Hardware stack levels required when called: 4
  4060 ;; This function calls:
  4061 ;;		_ReadByteSPIPort
  4062 ;;		_SetCSPin
  4063 ;;		_Write2ByteSPIPort
  4064 ;; This function is called by:
  4065 ;;		_InicializoMRF24
  4066 ;;		_MRF24ReciboPaquete
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text20
  4071   001A9A                     __ptext20:
  4072                           	callstack 0
  4073   001A9A                     _GetLongAddr:
  4074                           	callstack 25
  4075   001A9A                     
  4076                           ;drivers/scr/API_MRF24J40.c: 229:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 230:  
      +                          reg_address = (reg_address << (0X05)) | (0X8000);
  4077   001A9A  C02C  F02E         	movff	GetLongAddr@reg_address,??_GetLongAddr
  4078   001A9E  C02D  F02F         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  4079   001AA2  0E05               	movlw	5
  4080   001AA4                     u695:
  4081   001AA4  90D8               	bcf	status,0,c
  4082   001AA6  362E               	rlcf	??_GetLongAddr^0,f,c
  4083   001AA8  362F               	rlcf	(??_GetLongAddr+1)^0,f,c
  4084   001AAA  2EE8               	decfsz	wreg,f,c
  4085   001AAC  EF52  F00D         	goto	u695
  4086   001AB0  0E00               	movlw	0
  4087   001AB2  102E               	iorwf	??_GetLongAddr^0,w,c
  4088   001AB4  6E2C               	movwf	GetLongAddr@reg_address^0,c
  4089   001AB6  0E80               	movlw	128
  4090   001AB8  102F               	iorwf	(??_GetLongAddr+1)^0,w,c
  4091   001ABA  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  4092   001ABC                     
  4093                           ;drivers/scr/API_MRF24J40.c: 231:  SetCSPin(0);
  4094   001ABC  0E00               	movlw	0
  4095   001ABE  EC1E  F00F         	call	_SetCSPin
  4096   001AC2                     
  4097                           ;drivers/scr/API_MRF24J40.c: 232:  Write2ByteSPIPort(reg_address);
  4098   001AC2  C02C  F02A         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  4099   001AC6  C02D  F02B         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  4100   001ACA  EC10  F00F         	call	_Write2ByteSPIPort	;wreg free
  4101   001ACE                     
  4102                           ;drivers/scr/API_MRF24J40.c: 233:  respuesta = ReadByteSPIPort();
  4103   001ACE  EC2F  F00F         	call	_ReadByteSPIPort	;wreg free
  4104   001AD2  6E30               	movwf	GetLongAddr@respuesta^0,c
  4105   001AD4                     
  4106                           ;drivers/scr/API_MRF24J40.c: 234:  SetCSPin(1);
  4107   001AD4  0E01               	movlw	1
  4108   001AD6  EC1E  F00F         	call	_SetCSPin
  4109   001ADA                     
  4110                           ;drivers/scr/API_MRF24J40.c: 235:  return respuesta;
  4111   001ADA  5030               	movf	GetLongAddr@respuesta^0,w,c
  4112   001ADC  0012               	return		;funcret
  4113   001ADE                     __end_of_GetLongAddr:
  4114                           	callstack 0
  4115                           
  4116 ;; *************** function _Write2ByteSPIPort *****************
  4117 ;; Defined at:
  4118 ;;		line 87 in file "drivers/scr/API_MRF24J40_port.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  dato            2    3[COMRAM] unsigned short 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;		None
  4123 ;; Return value:  Size  Location     Type
  4124 ;;                  1    wreg      void 
  4125 ;; Registers used:
  4126 ;;		wreg, status,2, cstack
  4127 ;; Tracked objects:
  4128 ;;		On entry : 0/0
  4129 ;;		On exit  : 0/0
  4130 ;;		Unchanged: 0/0
  4131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4136 ;;Total ram usage:        2 bytes
  4137 ;; Hardware stack levels used: 1
  4138 ;; Hardware stack levels required when called: 3
  4139 ;; This function calls:
  4140 ;;		_SPIWrite2Byte
  4141 ;; This function is called by:
  4142 ;;		_SetLongAddr
  4143 ;;		_GetLongAddr
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           	psect	text21
  4148   001E20                     __ptext21:
  4149                           	callstack 0
  4150   001E20                     _Write2ByteSPIPort:
  4151                           	callstack 24
  4152   001E20                     
  4153                           ;drivers/scr/API_MRF24J40_port.c: 89:     SPIWrite2Byte(dato);
  4154   001E20  C02A  F028         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  4155   001E24  C02B  F029         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  4156   001E28  EC17  F00F         	call	_SPIWrite2Byte	;wreg free
  4157   001E2C  0012               	return		;funcret
  4158   001E2E                     __end_of_Write2ByteSPIPort:
  4159                           	callstack 0
  4160                           
  4161 ;; *************** function _SPIWrite2Byte *****************
  4162 ;; Defined at:
  4163 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;  dato            2    1[COMRAM] unsigned short 
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4180 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4181 ;;Total ram usage:        2 bytes
  4182 ;; Hardware stack levels used: 1
  4183 ;; Hardware stack levels required when called: 2
  4184 ;; This function calls:
  4185 ;;		_SPIWriteByte
  4186 ;; This function is called by:
  4187 ;;		_Write2ByteSPIPort
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           
  4191                           	psect	text22
  4192   001E2E                     __ptext22:
  4193                           	callstack 0
  4194   001E2E                     _SPIWrite2Byte:
  4195                           	callstack 24
  4196   001E2E                     
  4197                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  4198   001E2E  5029               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  4199   001E30  ECC3  F00E         	call	_SPIWriteByte
  4200                           
  4201                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  4202   001E34  5028               	movf	SPIWrite2Byte@dato^0,w,c
  4203   001E36  ECC3  F00E         	call	_SPIWriteByte
  4204   001E3A  0012               	return		;funcret
  4205   001E3C                     __end_of_SPIWrite2Byte:
  4206                           	callstack 0
  4207                           
  4208 ;; *************** function _SPIWriteByte *****************
  4209 ;; Defined at:
  4210 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  dato            1    wreg     unsigned char 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;  dato            1    0[COMRAM] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1    wreg      void 
  4217 ;; Registers used:
  4218 ;;		wreg
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;Total ram usage:        1 bytes
  4229 ;; Hardware stack levels used: 1
  4230 ;; Hardware stack levels required when called: 1
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_WriteByteSPIPort
  4235 ;;		_SPIWrite2Byte
  4236 ;; This function uses a non-reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text23
  4240   001D86                     __ptext23:
  4241                           	callstack 0
  4242   001D86                     _SPIWriteByte:
  4243                           	callstack 25
  4244                           
  4245                           ;incstack = 0
  4246                           ;SPIWriteByte@dato stored from wreg
  4247   001D86  6E27               	movwf	SPIWriteByte@dato^0,c
  4248   001D88                     
  4249                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  4250   001D88  969E               	bcf	158,3,c	;volatile
  4251   001D8A                     
  4252                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  4253   001D8A  C027  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  4254   001D8E                     l202:
  4255   001D8E  A69E               	btfss	158,3,c	;volatile
  4256   001D90  EFCC  F00E         	goto	u571
  4257   001D94  EFCE  F00E         	goto	u570
  4258   001D98                     u571:
  4259   001D98  EFC7  F00E         	goto	l202
  4260   001D9C                     u570:
  4261   001D9C  0012               	return		;funcret
  4262   001D9E                     __end_of_SPIWriteByte:
  4263                           	callstack 0
  4264                           
  4265 ;; *************** function _SetCSPin *****************
  4266 ;; Defined at:
  4267 ;;		line 34 in file "drivers/scr/API_MRF24J40_port.c"
  4268 ;; Parameters:    Size  Location     Type
  4269 ;;  estado          1    wreg     _Bool 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;  estado          1    0[COMRAM] _Bool 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		wreg
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4282 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4284 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4285 ;;Total ram usage:        1 bytes
  4286 ;; Hardware stack levels used: 1
  4287 ;; Hardware stack levels required when called: 1
  4288 ;; This function calls:
  4289 ;;		Nothing
  4290 ;; This function is called by:
  4291 ;;		_InicializoPines
  4292 ;;		_SetShortAddr
  4293 ;;		_GetShortAddr
  4294 ;;		_SetLongAddr
  4295 ;;		_GetLongAddr
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text24
  4300   001E3C                     __ptext24:
  4301                           	callstack 0
  4302   001E3C                     _SetCSPin:
  4303                           	callstack 26
  4304                           
  4305                           ;incstack = 0
  4306                           ;SetCSPin@estado stored from wreg
  4307   001E3C  6E27               	movwf	SetCSPin@estado^0,c
  4308   001E3E                     
  4309                           ;drivers/scr/API_MRF24J40_port.c: 36:     LATCbits.LATC6 = estado;
  4310   001E3E  B027               	btfsc	SetCSPin@estado^0,0,c
  4311   001E40  D002               	bra	u585
  4312   001E42  9C8B               	bcf	139,6,c	;volatile
  4313   001E44  D001               	bra	u586
  4314   001E46                     u585:
  4315   001E46  8C8B               	bsf	139,6,c	;volatile
  4316   001E48                     u586:
  4317   001E48  0012               	return		;funcret
  4318   001E4A                     __end_of_SetCSPin:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _ReadByteSPIPort *****************
  4322 ;; Defined at:
  4323 ;;		line 98 in file "drivers/scr/API_MRF24J40_port.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      unsigned char 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2, cstack
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;Total ram usage:        0 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 2
  4344 ;; This function calls:
  4345 ;;		_SPIRead
  4346 ;; This function is called by:
  4347 ;;		_GetShortAddr
  4348 ;;		_GetLongAddr
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text25
  4353   001E5E                     __ptext25:
  4354                           	callstack 0
  4355   001E5E                     _ReadByteSPIPort:
  4356                           	callstack 26
  4357   001E5E                     
  4358                           ;drivers/scr/API_MRF24J40_port.c: 100:     return SPIRead();
  4359   001E5E  ECDB  F00E         	call	_SPIRead	;wreg free
  4360   001E62  0012               	return		;funcret
  4361   001E64                     __end_of_ReadByteSPIPort:
  4362                           	callstack 0
  4363                           
  4364 ;; *************** function _SPIRead *****************
  4365 ;; Defined at:
  4366 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;		None
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;		None
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      unsigned char 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4384 ;;Total ram usage:        0 bytes
  4385 ;; Hardware stack levels used: 1
  4386 ;; Hardware stack levels required when called: 1
  4387 ;; This function calls:
  4388 ;;		Nothing
  4389 ;; This function is called by:
  4390 ;;		_ReadByteSPIPort
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394                           	psect	text26
  4395   001DB6                     __ptext26:
  4396                           	callstack 0
  4397   001DB6                     _SPIRead:
  4398                           	callstack 26
  4399   001DB6                     
  4400                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  4401   001DB6  9EC6               	bcf	198,7,c	;volatile
  4402                           
  4403                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  4404   001DB8  6AC9               	clrf	201,c	;volatile
  4405   001DBA                     l211:
  4406   001DBA  A0C7               	btfss	199,0,c	;volatile
  4407   001DBC  EFE2  F00E         	goto	u591
  4408   001DC0  EFE4  F00E         	goto	u590
  4409   001DC4                     u591:
  4410   001DC4  EFDD  F00E         	goto	l211
  4411   001DC8                     u590:
  4412   001DC8                     
  4413                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  4414   001DC8  50C9               	movf	201,w,c	;volatile
  4415   001DCA  0012               	return		;funcret
  4416   001DCC                     __end_of_SPIRead:
  4417                           	callstack 0
  4418                           
  4419 ;; *************** function _DelayReset *****************
  4420 ;; Defined at:
  4421 ;;		line 68 in file "drivers/scr/API_delay.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  delay           1    0[COMRAM] PTR struct .
  4424 ;;		 -> InicializoMRF24@delay_time_out(9), 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;		None
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1    wreg      void 
  4429 ;; Registers used:
  4430 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4436 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;Total ram usage:        1 bytes
  4441 ;; Hardware stack levels used: 1
  4442 ;; Hardware stack levels required when called: 1
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_InicializoMRF24
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text27
  4451   001D40                     __ptext27:
  4452                           	callstack 0
  4453   001D40                     _DelayReset:
  4454                           	callstack 27
  4455   001D40                     
  4456                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  4457   001D40  5027               	movf	DelayReset@delay^0,w,c
  4458   001D42  6ED9               	movwf	fsr2l,c
  4459   001D44  6ADA               	clrf	fsr2h,c
  4460   001D46  C001  FFDE         	movff	_timeStamp,postinc2
  4461   001D4A  C002  FFDE         	movff	_timeStamp+1,postinc2
  4462   001D4E  C003  FFDE         	movff	_timeStamp+2,postinc2
  4463   001D52  C004  FFDE         	movff	_timeStamp+3,postinc2
  4464   001D56                     
  4465                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  4466   001D56  5027               	movf	DelayReset@delay^0,w,c
  4467   001D58  6ED9               	movwf	fsr2l,c
  4468   001D5A  6ADA               	clrf	fsr2h,c
  4469   001D5C  0E08               	movlw	8
  4470   001D5E  26D9               	addwf	fsr2l,f,c
  4471   001D60  0E01               	movlw	1
  4472   001D62  6EDF               	movwf	indf2,c
  4473   001D64  0012               	return		;funcret
  4474   001D66                     __end_of_DelayReset:
  4475                           	callstack 0
  4476                           
  4477 ;; *************** function _MRF24IsNewMsg *****************
  4478 ;; Defined at:
  4479 ;;		line 423 in file "drivers/scr/API_MRF24J40.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;                  1    wreg      enum E3263
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 0/0
  4490 ;;		On exit  : 0/0
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;Total ram usage:        0 bytes
  4498 ;; Hardware stack levels used: 1
  4499 ;; Hardware stack levels required when called: 2
  4500 ;; This function calls:
  4501 ;;		_IsMRF24Interrup
  4502 ;; This function is called by:
  4503 ;;		_main
  4504 ;; This function uses a non-reentrant model
  4505 ;;
  4506                           
  4507                           	psect	text28
  4508   001C0C                     __ptext28:
  4509                           	callstack 0
  4510   001C0C                     _MRF24IsNewMsg:
  4511                           	callstack 28
  4512   001C0C                     
  4513                           ;drivers/scr/API_MRF24J40.c: 425:  if(INITIALIZATION_OK != estadoActual)
  4514   001C0C  0405               	decf	_estadoActual^0,w,c
  4515   001C0E  B4D8               	btfsc	status,2,c
  4516   001C10  EF0C  F00E         	goto	u861
  4517   001C14  EF0E  F00E         	goto	u860
  4518   001C18                     u861:
  4519   001C18  EF11  F00E         	goto	l2206
  4520   001C1C                     u860:
  4521   001C1C                     
  4522                           ;drivers/scr/API_MRF24J40.c: 426:   return UNEXPECTED_ERROR;
  4523   001C1C  0E0B               	movlw	11
  4524   001C1E  EF1F  F00E         	goto	l169
  4525   001C22                     l2206:
  4526                           
  4527                           ;drivers/scr/API_MRF24J40.c: 428:  if(!IsMRF24Interrup())
  4528   001C22  ECF0  F00E         	call	_IsMRF24Interrup	;wreg free
  4529   001C26  0900               	iorlw	0
  4530   001C28  A4D8               	btfss	status,2,c
  4531   001C2A  EF19  F00E         	goto	u871
  4532   001C2E  EF1B  F00E         	goto	u870
  4533   001C32                     u871:
  4534   001C32  EF1E  F00E         	goto	l2212
  4535   001C36                     u870:
  4536   001C36                     
  4537                           ;drivers/scr/API_MRF24J40.c: 429:   return MSG_PRESENT;
  4538   001C36  0E04               	movlw	4
  4539   001C38  EF1F  F00E         	goto	l169
  4540   001C3C                     l2212:
  4541                           
  4542                           ;drivers/scr/API_MRF24J40.c: 430:  return BUFFER_EMPTY;
  4543   001C3C  0E07               	movlw	7
  4544   001C3E                     l169:
  4545   001C3E  0012               	return		;funcret
  4546   001C40                     __end_of_MRF24IsNewMsg:
  4547                           	callstack 0
  4548                           
  4549 ;; *************** function _IsMRF24Interrup *****************
  4550 ;; Defined at:
  4551 ;;		line 66 in file "drivers/scr/API_MRF24J40_port.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      _Bool 
  4558 ;; Registers used:
  4559 ;;		wreg
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;Total ram usage:        0 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; Hardware stack levels required when called: 1
  4572 ;; This function calls:
  4573 ;;		Nothing
  4574 ;; This function is called by:
  4575 ;;		_MRF24IsNewMsg
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579                           	psect	text29
  4580   001DE0                     __ptext29:
  4581                           	callstack 0
  4582   001DE0                     _IsMRF24Interrup:
  4583                           	callstack 28
  4584   001DE0                     
  4585                           ;drivers/scr/API_MRF24J40_port.c: 68:  return PORTBbits.RB0;
  4586   001DE0  B081               	btfsc	129,0,c	;volatile
  4587   001DE2  EFF5  F00E         	goto	u701
  4588   001DE6  EFF8  F00E         	goto	u700
  4589   001DEA                     u701:
  4590   001DEA  0E01               	movlw	1
  4591   001DEC  EFF9  F00E         	goto	u706
  4592   001DF0                     u700:
  4593   001DF0  0E00               	movlw	0
  4594   001DF2                     u706:
  4595   001DF2  0012               	return		;funcret
  4596   001DF4                     __end_of_IsMRF24Interrup:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function _MRF24GetDataIn *****************
  4600 ;; Defined at:
  4601 ;;		line 476 in file "drivers/scr/API_MRF24J40.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;		None
  4604 ;; Auto vars:     Size  Location     Type
  4605 ;;		None
  4606 ;; Return value:  Size  Location     Type
  4607 ;;                  2    0[COMRAM] PTR struct .
  4608 ;; Registers used:
  4609 ;;		wreg, status,2, status,0
  4610 ;; Tracked objects:
  4611 ;;		On entry : 0/0
  4612 ;;		On exit  : 0/0
  4613 ;;		Unchanged: 0/0
  4614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4615 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4618 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4619 ;;Total ram usage:        2 bytes
  4620 ;; Hardware stack levels used: 1
  4621 ;; Hardware stack levels required when called: 1
  4622 ;; This function calls:
  4623 ;;		Nothing
  4624 ;; This function is called by:
  4625 ;;		_main
  4626 ;; This function uses a non-reentrant model
  4627 ;;
  4628                           
  4629                           	psect	text30
  4630   001E54                     __ptext30:
  4631                           	callstack 0
  4632   001E54                     _MRF24GetDataIn:
  4633                           	callstack 29
  4634   001E54                     
  4635                           ;drivers/scr/API_MRF24J40.c: 478:  return &data_in_s;
  4636   001E54  0E20               	movlw	low _data_in_s
  4637   001E56  6E27               	movwf	?_MRF24GetDataIn^0,c
  4638   001E58  0E01               	movlw	high _data_in_s
  4639   001E5A  6E28               	movwf	(?_MRF24GetDataIn+1)^0,c
  4640   001E5C  0012               	return		;funcret
  4641   001E5E                     __end_of_MRF24GetDataIn:
  4642                           	callstack 0
  4643                           
  4644 ;; *************** function _DebounceFSMUpdate *****************
  4645 ;; Defined at:
  4646 ;;		line 34 in file "drivers/scr/API_debounce.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;  antirrebote_    2   16[COMRAM] PTR struct .
  4649 ;;		 -> main@boton1(11), 
  4650 ;;  estado_pin      1   18[COMRAM] _Bool 
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;                  1    wreg      enum E2763
  4655 ;; Registers used:
  4656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4662 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4665 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4666 ;;Total ram usage:        5 bytes
  4667 ;; Hardware stack levels used: 1
  4668 ;; Hardware stack levels required when called: 3
  4669 ;; This function calls:
  4670 ;;		_DebounceFSMInit
  4671 ;;		_DelayRead
  4672 ;; This function is called by:
  4673 ;;		_main
  4674 ;; This function uses a non-reentrant model
  4675 ;;
  4676                           
  4677                           	psect	text31
  4678   001430                     __ptext31:
  4679                           	callstack 0
  4680   001430                     _DebounceFSMUpdate:
  4681                           	callstack 27
  4682   001430                     
  4683                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  4684   001430  EFA0  F00A         	goto	l2294
  4685   001434                     l2242:
  4686                           
  4687                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  4688   001434  5039               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4689   001436  A4D8               	btfss	status,2,c
  4690   001438  EF20  F00A         	goto	u901
  4691   00143C  EF22  F00A         	goto	u900
  4692   001440                     u901:
  4693   001440  EFC3  F00A         	goto	l2296
  4694   001444                     u900:
  4695   001444                     
  4696                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  4697   001444  EE20 F001          	lfsr	2,1
  4698   001448  5037               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4699   00144A  26D9               	addwf	fsr2l,f,c
  4700   00144C  5038               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  4701   00144E  22DA               	addwfc	fsr2h,f,c
  4702   001450  0E01               	movlw	1
  4703   001452  6EDF               	movwf	indf2,c
  4704   001454  EFC3  F00A         	goto	l2296
  4705   001458                     l2246:
  4706                           
  4707                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4708   001458  0E02               	movlw	2
  4709   00145A  2437               	addwf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4710   00145C  6E29               	movwf	DelayRead@delay^0,c
  4711   00145E  0E00               	movlw	0
  4712   001460  2038               	addwfc	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  4713   001462  6E2A               	movwf	(DelayRead@delay+1)^0,c
  4714   001464  EC26  F00C         	call	_DelayRead	;wreg free
  4715   001468  0900               	iorlw	0
  4716   00146A  B4D8               	btfsc	status,2,c
  4717   00146C  EF3A  F00A         	goto	u911
  4718   001470  EF3C  F00A         	goto	u910
  4719   001474                     u911:
  4720   001474  EFC3  F00A         	goto	l2296
  4721   001478                     u910:
  4722   001478                     
  4723                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  4724   001478  5039               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4725   00147A  A4D8               	btfss	status,2,c
  4726   00147C  EF42  F00A         	goto	u921
  4727   001480  EF44  F00A         	goto	u920
  4728   001484                     u921:
  4729   001484  EF4F  F00A         	goto	l2258
  4730   001488                     u920:
  4731   001488                     
  4732                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4733   001488  EE20 F001          	lfsr	2,1
  4734   00148C  5037               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4735   00148E  26D9               	addwf	fsr2l,f,c
  4736   001490  5038               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  4737   001492  22DA               	addwfc	fsr2h,f,c
  4738   001494  0E02               	movlw	2
  4739   001496  6EDF               	movwf	indf2,c
  4740   001498                     
  4741                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  4742   001498  0E01               	movlw	1
  4743   00149A  EFC4  F00A         	goto	l253
  4744   00149E                     l2258:
  4745                           
  4746                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4747   00149E  EE20 F001          	lfsr	2,1
  4748   0014A2  5037               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4749   0014A4  26D9               	addwf	fsr2l,f,c
  4750   0014A6  5038               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  4751   0014A8  22DA               	addwfc	fsr2h,f,c
  4752   0014AA  6ADF               	clrf	indf2,c
  4753   0014AC                     l2260:
  4754                           
  4755                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  4756   0014AC  0E04               	movlw	4
  4757   0014AE  EFC4  F00A         	goto	l253
  4758   0014B2                     l2264:
  4759                           
  4760                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  4761   0014B2  0E02               	movlw	2
  4762   0014B4  2437               	addwf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4763   0014B6  6E29               	movwf	DelayRead@delay^0,c
  4764   0014B8  0E00               	movlw	0
  4765   0014BA  2038               	addwfc	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  4766   0014BC  6E2A               	movwf	(DelayRead@delay+1)^0,c
  4767   0014BE  EC26  F00C         	call	_DelayRead	;wreg free
  4768   0014C2  0900               	iorlw	0
  4769   0014C4  B4D8               	btfsc	status,2,c
  4770   0014C6  EF67  F00A         	goto	u931
  4771   0014CA  EF69  F00A         	goto	u930
  4772   0014CE                     u931:
  4773   0014CE  EFC3  F00A         	goto	l2296
  4774   0014D2                     u930:
  4775   0014D2                     
  4776                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  4777   0014D2  5039               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4778   0014D4  B4D8               	btfsc	status,2,c
  4779   0014D6  EF6F  F00A         	goto	u941
  4780   0014DA  EF71  F00A         	goto	u940
  4781   0014DE                     u941:
  4782   0014DE  EF7B  F00A         	goto	l2276
  4783   0014E2                     u940:
  4784   0014E2                     
  4785                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  4786   0014E2  EE20 F001          	lfsr	2,1
  4787   0014E6  5037               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4788   0014E8  26D9               	addwf	fsr2l,f,c
  4789   0014EA  5038               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  4790   0014EC  22DA               	addwfc	fsr2h,f,c
  4791   0014EE  6ADF               	clrf	indf2,c
  4792   0014F0                     
  4793                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  4794   0014F0  0E02               	movlw	2
  4795   0014F2  EFC4  F00A         	goto	l253
  4796   0014F6                     l2276:
  4797                           
  4798                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  4799   0014F6  EE20 F001          	lfsr	2,1
  4800   0014FA  5037               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4801   0014FC  26D9               	addwf	fsr2l,f,c
  4802   0014FE  5038               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  4803   001500  22DA               	addwfc	fsr2h,f,c
  4804   001502  0E02               	movlw	2
  4805   001504  6EDF               	movwf	indf2,c
  4806   001506  EF56  F00A         	goto	l2260
  4807   00150A                     l2282:
  4808                           
  4809                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  4810   00150A  5039               	movf	DebounceFSMUpdate@estado_pin^0,w,c
  4811   00150C  B4D8               	btfsc	status,2,c
  4812   00150E  EF8B  F00A         	goto	u951
  4813   001512  EF8D  F00A         	goto	u950
  4814   001516                     u951:
  4815   001516  EFC3  F00A         	goto	l2296
  4816   00151A                     u950:
  4817   00151A                     
  4818                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  4819   00151A  EE20 F001          	lfsr	2,1
  4820   00151E  5037               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4821   001520  26D9               	addwf	fsr2l,f,c
  4822   001522  5038               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  4823   001524  22DA               	addwfc	fsr2h,f,c
  4824   001526  0E03               	movlw	3
  4825   001528  6EDF               	movwf	indf2,c
  4826   00152A  EFC3  F00A         	goto	l2296
  4827   00152E                     l2286:
  4828                           
  4829                           ;drivers/scr/API_debounce.c: 84:    DebounceFSMInit(antirrebote_boton_n);
  4830   00152E  C037  F02D         	movff	DebounceFSMUpdate@antirrebote_boton_n,DebounceFSMInit@antirrebote_boton_n
  4831   001532  C038  F02E         	movff	DebounceFSMUpdate@antirrebote_boton_n+1,DebounceFSMInit@antirrebote_boton_n+1
  4832   001536  ECCD  F00D         	call	_DebounceFSMInit	;wreg free
  4833   00153A                     
  4834                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  4835   00153A  0E00               	movlw	0
  4836   00153C  EFC4  F00A         	goto	l253
  4837   001540                     l2294:
  4838   001540  EE20 F001          	lfsr	2,1
  4839   001544  5037               	movf	DebounceFSMUpdate@antirrebote_boton_n^0,w,c
  4840   001546  26D9               	addwf	fsr2l,f,c
  4841   001548  5038               	movf	(DebounceFSMUpdate@antirrebote_boton_n+1)^0,w,c
  4842   00154A  22DA               	addwfc	fsr2h,f,c
  4843   00154C  50DF               	movf	indf2,w,c
  4844   00154E  6E3A               	movwf	??_DebounceFSMUpdate^0,c
  4845   001550  6A3B               	clrf	(??_DebounceFSMUpdate+1)^0,c
  4846                           
  4847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4848                           ; Switch size 1, requested type "simple"
  4849                           ; Number of cases is 1, Range of values is 0 to 0
  4850                           ; switch strategies available:
  4851                           ; Name         Instructions Cycles
  4852                           ; simple_byte            4     3 (average)
  4853                           ;	Chosen strategy is simple_byte
  4854   001552  503B               	movf	(??_DebounceFSMUpdate+1)^0,w,c
  4855   001554  0A00               	xorlw	0	; case 0
  4856   001556  B4D8               	btfsc	status,2,c
  4857   001558  EFB0  F00A         	goto	l2472
  4858   00155C  EF97  F00A         	goto	l2286
  4859   001560                     l2472:
  4860                           
  4861                           ; Switch size 1, requested type "simple"
  4862                           ; Number of cases is 4, Range of values is 0 to 3
  4863                           ; switch strategies available:
  4864                           ; Name         Instructions Cycles
  4865                           ; simple_byte           13     7 (average)
  4866                           ;	Chosen strategy is simple_byte
  4867   001560  503A               	movf	??_DebounceFSMUpdate^0,w,c
  4868   001562  0A00               	xorlw	0	; case 0
  4869   001564  B4D8               	btfsc	status,2,c
  4870   001566  EF1A  F00A         	goto	l2242
  4871   00156A  0A01               	xorlw	1	; case 1
  4872   00156C  B4D8               	btfsc	status,2,c
  4873   00156E  EF2C  F00A         	goto	l2246
  4874   001572  0A03               	xorlw	3	; case 2
  4875   001574  B4D8               	btfsc	status,2,c
  4876   001576  EF85  F00A         	goto	l2282
  4877   00157A  0A01               	xorlw	1	; case 3
  4878   00157C  B4D8               	btfsc	status,2,c
  4879   00157E  EF59  F00A         	goto	l2264
  4880   001582  EF97  F00A         	goto	l2286
  4881   001586                     l2296:
  4882                           
  4883                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  4884   001586  0E03               	movlw	3
  4885   001588                     l253:
  4886   001588  0012               	return		;funcret
  4887   00158A                     __end_of_DebounceFSMUpdate:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _DelayRead *****************
  4891 ;; Defined at:
  4892 ;;		line 34 in file "drivers/scr/API_delay.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  delay           2    2[COMRAM] PTR struct .
  4895 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  4896 ;; Auto vars:     Size  Location     Type
  4897 ;;		None
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  1    wreg      _Bool 
  4900 ;; Registers used:
  4901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4909 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4910 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4911 ;;Total ram usage:       14 bytes
  4912 ;; Hardware stack levels used: 1
  4913 ;; Hardware stack levels required when called: 2
  4914 ;; This function calls:
  4915 ;;		_DelayIsRunning
  4916 ;; This function is called by:
  4917 ;;		_InicializoMRF24
  4918 ;;		_DebounceFSMUpdate
  4919 ;;		_main
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text32
  4924   00184C                     __ptext32:
  4925                           	callstack 0
  4926   00184C                     _DelayRead:
  4927                           	callstack 26
  4928   00184C                     
  4929                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  4930   00184C  C029  F027         	movff	DelayRead@delay,DelayIsRunning@delay
  4931   001850  C02A  F028         	movff	DelayRead@delay+1,DelayIsRunning@delay+1
  4932   001854  ECFA  F00E         	call	_DelayIsRunning	;wreg free
  4933   001858  0900               	iorlw	0
  4934   00185A  A4D8               	btfss	status,2,c
  4935   00185C  EF32  F00C         	goto	u661
  4936   001860  EF34  F00C         	goto	u660
  4937   001864                     u661:
  4938   001864  EF4A  F00C         	goto	l1914
  4939   001868                     u660:
  4940   001868                     
  4941                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  4942   001868  C029  FFD9         	movff	DelayRead@delay,fsr2l
  4943   00186C  C02A  FFDA         	movff	DelayRead@delay+1,fsr2h
  4944   001870  C001  FFDE         	movff	_timeStamp,postinc2
  4945   001874  C002  FFDE         	movff	_timeStamp+1,postinc2
  4946   001878  C003  FFDE         	movff	_timeStamp+2,postinc2
  4947   00187C  C004  FFDE         	movff	_timeStamp+3,postinc2
  4948   001880                     
  4949                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  4950   001880  EE20 F008          	lfsr	2,8
  4951   001884  5029               	movf	DelayRead@delay^0,w,c
  4952   001886  26D9               	addwf	fsr2l,f,c
  4953   001888  502A               	movf	(DelayRead@delay+1)^0,w,c
  4954   00188A  22DA               	addwfc	fsr2h,f,c
  4955   00188C  0E01               	movlw	1
  4956   00188E  6EDF               	movwf	indf2,c
  4957                           
  4958                           ;drivers/scr/API_delay.c: 40:  } else {
  4959   001890  EF81  F00C         	goto	l1922
  4960   001894                     l1914:
  4961                           
  4962                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  4963   001894  EE20 F004          	lfsr	2,4
  4964   001898  5029               	movf	DelayRead@delay^0,w,c
  4965   00189A  26D9               	addwf	fsr2l,f,c
  4966   00189C  502A               	movf	(DelayRead@delay+1)^0,w,c
  4967   00189E  22DA               	addwfc	fsr2h,f,c
  4968   0018A0  C029  FFE1         	movff	DelayRead@delay,fsr1l
  4969   0018A4  C02A  FFE2         	movff	DelayRead@delay+1,fsr1h
  4970   0018A8  CFE6 F02F          	movff	postinc1,??_DelayRead+4
  4971   0018AC  CFE6 F030          	movff	postinc1,??_DelayRead+5
  4972   0018B0  CFE6 F031          	movff	postinc1,??_DelayRead+6
  4973   0018B4  CFE6 F032          	movff	postinc1,??_DelayRead+7
  4974   0018B8  502F               	movf	(??_DelayRead+4)^0,w,c
  4975   0018BA  5C01               	subwf	_timeStamp^0,w,c
  4976   0018BC  6E33               	movwf	(??_DelayRead+8)^0,c
  4977   0018BE  5030               	movf	(??_DelayRead+5)^0,w,c
  4978   0018C0  5802               	subwfb	(_timeStamp+1)^0,w,c
  4979   0018C2  6E34               	movwf	(??_DelayRead+9)^0,c
  4980   0018C4  5031               	movf	(??_DelayRead+6)^0,w,c
  4981   0018C6  5803               	subwfb	(_timeStamp+2)^0,w,c
  4982   0018C8  6E35               	movwf	(??_DelayRead+10)^0,c
  4983   0018CA  5032               	movf	(??_DelayRead+7)^0,w,c
  4984   0018CC  5804               	subwfb	(_timeStamp+3)^0,w,c
  4985   0018CE  6E36               	movwf	(??_DelayRead+11)^0,c
  4986   0018D0  50DE               	movf	postinc2,w,c
  4987   0018D2  5C33               	subwf	(??_DelayRead+8)^0,w,c
  4988   0018D4  50DE               	movf	postinc2,w,c
  4989   0018D6  5834               	subwfb	(??_DelayRead+9)^0,w,c
  4990   0018D8  50DE               	movf	postinc2,w,c
  4991   0018DA  5835               	subwfb	(??_DelayRead+10)^0,w,c
  4992   0018DC  50DE               	movf	postinc2,w,c
  4993   0018DE  5836               	subwfb	(??_DelayRead+11)^0,w,c
  4994   0018E0  A0D8               	btfss	status,0,c
  4995   0018E2  EF75  F00C         	goto	u671
  4996   0018E6  EF77  F00C         	goto	u670
  4997   0018EA                     u671:
  4998   0018EA  EF81  F00C         	goto	l1922
  4999   0018EE                     u670:
  5000   0018EE                     
  5001                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  5002   0018EE  EE20 F008          	lfsr	2,8
  5003   0018F2  5029               	movf	DelayRead@delay^0,w,c
  5004   0018F4  26D9               	addwf	fsr2l,f,c
  5005   0018F6  502A               	movf	(DelayRead@delay+1)^0,w,c
  5006   0018F8  22DA               	addwfc	fsr2h,f,c
  5007   0018FA  6ADF               	clrf	indf2,c
  5008   0018FC                     
  5009                           ;drivers/scr/API_delay.c: 45:    return 1;
  5010   0018FC  0E01               	movlw	1
  5011   0018FE  EF82  F00C         	goto	l227
  5012   001902                     l1922:
  5013                           
  5014                           ;drivers/scr/API_delay.c: 48:  return 0;
  5015   001902  0E00               	movlw	0
  5016   001904                     l227:
  5017   001904  0012               	return		;funcret
  5018   001906                     __end_of_DelayRead:
  5019                           	callstack 0
  5020                           
  5021 ;; *************** function _DelayIsRunning *****************
  5022 ;; Defined at:
  5023 ;;		line 83 in file "drivers/scr/API_delay.c"
  5024 ;; Parameters:    Size  Location     Type
  5025 ;;  delay           2    0[COMRAM] PTR struct .
  5026 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5027 ;; Auto vars:     Size  Location     Type
  5028 ;;		None
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      _Bool 
  5031 ;; Registers used:
  5032 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5041 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5042 ;;Total ram usage:        2 bytes
  5043 ;; Hardware stack levels used: 1
  5044 ;; Hardware stack levels required when called: 1
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_DelayRead
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           
  5052                           	psect	text33
  5053   001DF4                     __ptext33:
  5054                           	callstack 0
  5055   001DF4                     _DelayIsRunning:
  5056                           	callstack 26
  5057   001DF4                     
  5058                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  5059   001DF4  EE20 F008          	lfsr	2,8
  5060   001DF8  5027               	movf	DelayIsRunning@delay^0,w,c
  5061   001DFA  26D9               	addwf	fsr2l,f,c
  5062   001DFC  5028               	movf	(DelayIsRunning@delay+1)^0,w,c
  5063   001DFE  22DA               	addwfc	fsr2h,f,c
  5064   001E00  50DF               	movf	indf2,w,c
  5065   001E02  0012               	return		;funcret
  5066   001E04                     __end_of_DelayIsRunning:
  5067                           	callstack 0
  5068                           
  5069 ;; *************** function _DebounceFSMInit *****************
  5070 ;; Defined at:
  5071 ;;		line 19 in file "drivers/scr/API_debounce.c"
  5072 ;; Parameters:    Size  Location     Type
  5073 ;;  antirrebote_    2    6[COMRAM] PTR struct .
  5074 ;;		 -> main@boton1(11), 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;		None
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  1    wreg      void 
  5079 ;; Registers used:
  5080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;Total ram usage:        2 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; Hardware stack levels required when called: 2
  5093 ;; This function calls:
  5094 ;;		_DelayInit
  5095 ;; This function is called by:
  5096 ;;		_DebounceFSMUpdate
  5097 ;;		_main
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text34
  5102   001B9A                     __ptext34:
  5103                           	callstack 0
  5104   001B9A                     _DebounceFSMInit:
  5105                           	callstack 27
  5106   001B9A                     
  5107                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  5108   001B9A  EE20 F001          	lfsr	2,1
  5109   001B9E  502D               	movf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5110   001BA0  26D9               	addwf	fsr2l,f,c
  5111   001BA2  502E               	movf	(DebounceFSMInit@antirrebote_boton_n+1)^0,w,c
  5112   001BA4  22DA               	addwfc	fsr2h,f,c
  5113   001BA6  6ADF               	clrf	indf2,c
  5114   001BA8                     
  5115                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  5116   001BA8  0E02               	movlw	2
  5117   001BAA  242D               	addwf	DebounceFSMInit@antirrebote_boton_n^0,w,c
  5118   001BAC  6E27               	movwf	DelayInit@delay^0,c
  5119   001BAE  0E00               	movlw	0
  5120   001BB0  202E               	addwfc	(DebounceFSMInit@antirrebote_boton_n+1)^0,w,c
  5121   001BB2  6E28               	movwf	(DelayInit@delay+1)^0,c
  5122   001BB4  0E28               	movlw	40
  5123   001BB6  6E29               	movwf	DelayInit@duration^0,c
  5124   001BB8  0E00               	movlw	0
  5125   001BBA  6E2A               	movwf	(DelayInit@duration+1)^0,c
  5126   001BBC  0E00               	movlw	0
  5127   001BBE  6E2B               	movwf	(DelayInit@duration+2)^0,c
  5128   001BC0  0E00               	movlw	0
  5129   001BC2  6E2C               	movwf	(DelayInit@duration+3)^0,c
  5130   001BC4  EC37  F00E         	call	_DelayInit	;wreg free
  5131   001BC8                     
  5132                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  5133   001BC8  C02D  FFD9         	movff	DebounceFSMInit@antirrebote_boton_n,fsr2l
  5134   001BCC  C02E  FFDA         	movff	DebounceFSMInit@antirrebote_boton_n+1,fsr2h
  5135   001BD0  6ADF               	clrf	indf2,c
  5136   001BD2  0012               	return		;funcret
  5137   001BD4                     __end_of_DebounceFSMInit:
  5138                           	callstack 0
  5139                           
  5140 ;; *************** function _DelayInit *****************
  5141 ;; Defined at:
  5142 ;;		line 22 in file "drivers/scr/API_delay.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  delay           2    0[COMRAM] PTR struct .
  5145 ;;		 -> main@delay_parpadeo(9), main@boton1(11), InicializoMRF24@delay_time_out(9), 
  5146 ;;  duration        4    2[COMRAM] unsigned long 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;		None
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      void 
  5151 ;; Registers used:
  5152 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5158 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;Total ram usage:        6 bytes
  5163 ;; Hardware stack levels used: 1
  5164 ;; Hardware stack levels required when called: 1
  5165 ;; This function calls:
  5166 ;;		Nothing
  5167 ;; This function is called by:
  5168 ;;		_InicializoMRF24
  5169 ;;		_DebounceFSMInit
  5170 ;;		_main
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text35
  5175   001C6E                     __ptext35:
  5176                           	callstack 0
  5177   001C6E                     _DelayInit:
  5178                           	callstack 27
  5179   001C6E                     
  5180                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  5181   001C6E  EE20 F004          	lfsr	2,4
  5182   001C72  5027               	movf	DelayInit@delay^0,w,c
  5183   001C74  26D9               	addwf	fsr2l,f,c
  5184   001C76  5028               	movf	(DelayInit@delay+1)^0,w,c
  5185   001C78  22DA               	addwfc	fsr2h,f,c
  5186   001C7A  C029  FFDE         	movff	DelayInit@duration,postinc2
  5187   001C7E  C02A  FFDE         	movff	DelayInit@duration+1,postinc2
  5188   001C82  C02B  FFDE         	movff	DelayInit@duration+2,postinc2
  5189   001C86  C02C  FFDE         	movff	DelayInit@duration+3,postinc2
  5190                           
  5191                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  5192   001C8A  EE20 F008          	lfsr	2,8
  5193   001C8E  5027               	movf	DelayInit@delay^0,w,c
  5194   001C90  26D9               	addwf	fsr2l,f,c
  5195   001C92  5028               	movf	(DelayInit@delay+1)^0,w,c
  5196   001C94  22DA               	addwfc	fsr2h,f,c
  5197   001C96  6ADF               	clrf	indf2,c
  5198   001C98  0012               	return		;funcret
  5199   001C9A                     __end_of_DelayInit:
  5200                           	callstack 0
  5201                           
  5202 ;; *************** function _BoardInit *****************
  5203 ;; Defined at:
  5204 ;;		line 21 in file "hardware_config.c"
  5205 ;; Parameters:    Size  Location     Type
  5206 ;;		None
  5207 ;; Auto vars:     Size  Location     Type
  5208 ;;		None
  5209 ;; Return value:  Size  Location     Type
  5210 ;;                  1    wreg      void 
  5211 ;; Registers used:
  5212 ;;		wreg, status,2, cstack
  5213 ;; Tracked objects:
  5214 ;;		On entry : 0/0
  5215 ;;		On exit  : 0/0
  5216 ;;		Unchanged: 0/0
  5217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5222 ;;Total ram usage:        0 bytes
  5223 ;; Hardware stack levels used: 1
  5224 ;; Hardware stack levels required when called: 2
  5225 ;; This function calls:
  5226 ;;		_SPIInit
  5227 ;; This function is called by:
  5228 ;;		_main
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           	psect	text36
  5233   0019E6                     __ptext36:
  5234                           	callstack 0
  5235   0019E6                     _BoardInit:
  5236                           	callstack 28
  5237   0019E6                     
  5238                           ;hardware_config.c: 23:     PORTA = 0;
  5239   0019E6  6A80               	clrf	128,c	;volatile
  5240                           
  5241                           ;hardware_config.c: 24:     PORTB = 0;
  5242   0019E8  6A81               	clrf	129,c	;volatile
  5243                           
  5244                           ;hardware_config.c: 25:     PORTC = 0;
  5245   0019EA  6A82               	clrf	130,c	;volatile
  5246                           
  5247                           ;hardware_config.c: 26:     PORTD = 0;
  5248   0019EC  6A83               	clrf	131,c	;volatile
  5249                           
  5250                           ;hardware_config.c: 27:     PORTE = 0;
  5251   0019EE  6A84               	clrf	132,c	;volatile
  5252                           
  5253                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  5254   0019F0  8C93               	bsf	147,6,c	;volatile
  5255                           
  5256                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  5257   0019F2  8E93               	bsf	147,7,c	;volatile
  5258                           
  5259                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  5260   0019F4  9496               	bcf	150,2,c	;volatile
  5261                           
  5262                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  5263   0019F6  9096               	bcf	150,0,c	;volatile
  5264                           
  5265                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  5266   0019F8  9296               	bcf	150,1,c	;volatile
  5267                           
  5268                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  5269   0019FA  8494               	bsf	148,2,c	;volatile
  5270                           
  5271                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  5272   0019FC  848D               	bsf	141,2,c	;volatile
  5273                           
  5274                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  5275   0019FE  808D               	bsf	141,0,c	;volatile
  5276                           
  5277                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  5278   001A00  828D               	bsf	141,1,c	;volatile
  5279                           
  5280                           ;hardware_config.c: 39:     TRISBbits.TRISB0 = 1;
  5281   001A02  8093               	bsf	147,0,c	;volatile
  5282                           
  5283                           ;hardware_config.c: 40:     TRISCbits.TRISC6 = 0;
  5284   001A04  9C94               	bcf	148,6,c	;volatile
  5285                           
  5286                           ;hardware_config.c: 41:     TRISCbits.TRISC7 = 0;
  5287   001A06  9E94               	bcf	148,7,c	;volatile
  5288                           
  5289                           ;hardware_config.c: 42:     TRISDbits.TRISD4 = 0;
  5290   001A08  9895               	bcf	149,4,c	;volatile
  5291                           
  5292                           ;hardware_config.c: 45:     IPEN = 0;
  5293   001A0A  9ED0               	bcf	4048,7,c	;volatile
  5294                           
  5295                           ;hardware_config.c: 46:  GIE = 1;
  5296   001A0C  8EF2               	bsf	4082,7,c	;volatile
  5297                           
  5298                           ;hardware_config.c: 47:  PEIE = 1;
  5299   001A0E  8CF2               	bsf	4082,6,c	;volatile
  5300                           
  5301                           ;hardware_config.c: 48:     INT0E = 0;
  5302   001A10  98F2               	bcf	4082,4,c	;volatile
  5303                           
  5304                           ;hardware_config.c: 49:  RBIE = 0;
  5305   001A12  96F2               	bcf	4082,3,c	;volatile
  5306                           
  5307                           ;hardware_config.c: 50:  T0IE = 0;
  5308   001A14  9AF2               	bcf	4082,5,c	;volatile
  5309                           
  5310                           ;hardware_config.c: 51:  TMR1IE = 1;
  5311   001A16  809D               	bsf	3997,0,c	;volatile
  5312                           
  5313                           ;hardware_config.c: 52:  TMR2IE = 0;
  5314   001A18  929D               	bcf	3997,1,c	;volatile
  5315                           
  5316                           ;hardware_config.c: 53:  CCP1IE = 0;
  5317   001A1A  949D               	bcf	3997,2,c	;volatile
  5318                           
  5319                           ;hardware_config.c: 54:  CCP2IE = 0;
  5320   001A1C  90A0               	bcf	4000,0,c	;volatile
  5321                           
  5322                           ;hardware_config.c: 55:  EEIE = 0;
  5323   001A1E  98A0               	bcf	4000,4,c	;volatile
  5324                           
  5325                           ;hardware_config.c: 56:  SSPIE = 0;
  5326   001A20  969D               	bcf	3997,3,c	;volatile
  5327                           
  5328                           ;hardware_config.c: 57:  BCLIE = 0;
  5329   001A22  96A0               	bcf	4000,3,c	;volatile
  5330                           
  5331                           ;hardware_config.c: 58:  ADIE = 0;
  5332   001A24  9C9D               	bcf	3997,6,c	;volatile
  5333                           
  5334                           ;hardware_config.c: 59:  RBIE = 0;
  5335   001A26  96F2               	bcf	4082,3,c	;volatile
  5336                           
  5337                           ;hardware_config.c: 60:  RCIE = 0;
  5338   001A28  9A9D               	bcf	3997,5,c	;volatile
  5339   001A2A                     
  5340                           ;hardware_config.c: 61:     OSCCON = 0b01110010;
  5341   001A2A  0E72               	movlw	114
  5342   001A2C  6ED3               	movwf	211,c	;volatile
  5343                           
  5344                           ;hardware_config.c: 62:     OSCTUNE = 0b11011111;
  5345   001A2E  0EDF               	movlw	223
  5346   001A30  6E9B               	movwf	155,c	;volatile
  5347   001A32                     
  5348                           ;hardware_config.c: 63:     RBPU = 1;
  5349   001A32  8EF1               	bsf	4081,7,c	;volatile
  5350   001A34                     
  5351                           ;hardware_config.c: 66:     T1RD16 = 0;
  5352   001A34  9ECD               	bcf	4045,7,c	;volatile
  5353   001A36                     
  5354                           ;hardware_config.c: 67:  T1CKPS0 = 1;
  5355   001A36  88CD               	bsf	4045,4,c	;volatile
  5356   001A38                     
  5357                           ;hardware_config.c: 68:  T1CKPS1 = 1;
  5358   001A38  8ACD               	bsf	4045,5,c	;volatile
  5359   001A3A                     
  5360                           ;hardware_config.c: 69:  T1SYNC = 0;
  5361   001A3A  94CD               	bcf	4045,2,c	;volatile
  5362   001A3C                     
  5363                           ;hardware_config.c: 70:  T1OSCEN = 0;
  5364   001A3C  96CD               	bcf	4045,3,c	;volatile
  5365   001A3E                     
  5366                           ;hardware_config.c: 71:  TMR1CS = 0;
  5367   001A3E  92CD               	bcf	4045,1,c	;volatile
  5368   001A40                     
  5369                           ;hardware_config.c: 72:  TMR1ON = 1;
  5370   001A40  80CD               	bsf	4045,0,c	;volatile
  5371   001A42                     
  5372                           ;hardware_config.c: 75:     SPIInit();
  5373   001A42  ECCF  F00E         	call	_SPIInit	;wreg free
  5374   001A46  0012               	return		;funcret
  5375   001A48                     __end_of_BoardInit:
  5376                           	callstack 0
  5377                           
  5378 ;; *************** function _SPIInit *****************
  5379 ;; Defined at:
  5380 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  5381 ;; Parameters:    Size  Location     Type
  5382 ;;		None
  5383 ;; Auto vars:     Size  Location     Type
  5384 ;;		None
  5385 ;; Return value:  Size  Location     Type
  5386 ;;                  1    wreg      void 
  5387 ;; Registers used:
  5388 ;;		wreg, status,2
  5389 ;; Tracked objects:
  5390 ;;		On entry : 0/0
  5391 ;;		On exit  : 0/0
  5392 ;;		Unchanged: 0/0
  5393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5398 ;;Total ram usage:        0 bytes
  5399 ;; Hardware stack levels used: 1
  5400 ;; Hardware stack levels required when called: 1
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_BoardInit
  5405 ;; This function uses a non-reentrant model
  5406 ;;
  5407                           
  5408                           	psect	text37
  5409   001D9E                     __ptext37:
  5410                           	callstack 0
  5411   001D9E                     _SPIInit:
  5412                           	callstack 28
  5413   001D9E                     
  5414                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  5415   001D9E  9694               	bcf	148,3,c	;volatile
  5416                           
  5417                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  5418   001DA0  9A94               	bcf	148,5,c	;volatile
  5419                           
  5420                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  5421   001DA2  8894               	bsf	148,4,c	;volatile
  5422                           
  5423                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  5424   001DA4  8EC7               	bsf	199,7,c	;volatile
  5425                           
  5426                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  5427   001DA6  8CC7               	bsf	199,6,c	;volatile
  5428   001DA8                     
  5429                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  5430   001DA8  0E01               	movlw	1
  5431   001DAA  6EC6               	movwf	198,c	;volatile
  5432   001DAC                     
  5433                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  5434   001DAC  8EC6               	bsf	198,7,c	;volatile
  5435   001DAE                     
  5436                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  5437   001DAE  9CC6               	bcf	198,6,c	;volatile
  5438   001DB0                     
  5439                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  5440   001DB0  8AC6               	bsf	198,5,c	;volatile
  5441   001DB2                     
  5442                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  5443   001DB2  98C6               	bcf	198,4,c	;volatile
  5444   001DB4  0012               	return		;funcret
  5445   001DB6                     __end_of_SPIInit:
  5446                           	callstack 0
  5447                           
  5448 ;; *************** function _isr *****************
  5449 ;; Defined at:
  5450 ;;		line 5 in file "drivers/inc/interrupciones.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;		None
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;		None
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1    wreg      void 
  5457 ;; Registers used:
  5458 ;;		wreg, status,2, status,0
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5468 ;;Total ram usage:        0 bytes
  5469 ;; Hardware stack levels used: 1
  5470 ;; This function calls:
  5471 ;;		Nothing
  5472 ;; This function is called by:
  5473 ;;		Interrupt level 2
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	intcode
  5478   000008                     __pintcode:
  5479                           	callstack 0
  5480   000008                     _isr:
  5481                           	callstack 23
  5482                           
  5483                           ;incstack = 0
  5484   000008  8246               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5485   00000A                     
  5486                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  5487   00000A  A09D               	btfss	3997,0,c	;volatile
  5488   00000C  EF0A  F000         	goto	i2u108_41
  5489   000010  EF0C  F000         	goto	i2u108_40
  5490   000014                     i2u108_41:
  5491   000014  EF1E  F000         	goto	i2l406
  5492   000018                     i2u108_40:
  5493   000018  A09E               	btfss	3998,0,c	;volatile
  5494   00001A  EF11  F000         	goto	i2u109_41
  5495   00001E  EF13  F000         	goto	i2u109_40
  5496   000022                     i2u109_41:
  5497   000022  EF1E  F000         	goto	i2l406
  5498   000026                     i2u109_40:
  5499   000026                     
  5500                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  5501   000026  909E               	bcf	3998,0,c	;volatile
  5502   000028                     
  5503                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  5504   000028  0EF7               	movlw	247
  5505   00002A  6ECE               	movwf	206,c	;volatile
  5506                           
  5507                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  5508   00002C  0EFD               	movlw	253
  5509   00002E  6ECF               	movwf	207,c	;volatile
  5510   000030                     
  5511                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  5512   000030  0E01               	movlw	1
  5513   000032  2601               	addwf	_timeStamp^0,f,c
  5514   000034  0E00               	movlw	0
  5515   000036  2202               	addwfc	(_timeStamp+1)^0,f,c
  5516   000038  2203               	addwfc	(_timeStamp+2)^0,f,c
  5517   00003A  2204               	addwfc	(_timeStamp+3)^0,f,c
  5518   00003C                     i2l406:
  5519   00003C  9246               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5520   00003E  0011               	retfie		f
  5521   000040                     __end_of_isr:
  5522                           	callstack 0
  5523                           
  5524                           	psect	rparam
  5525   000001                     ___rparam_used  equ	1
  5526   000000                     ___param_bank   equ	0
  5527   000000                     __Lparam        equ	__Lrparam
  5528   000000                     __Hparam        equ	__Hrparam
  5529                           
  5530                           	psect	temp
  5531   000046                     btemp:
  5532                           	callstack 0
  5533   000046                     	ds	1
  5534   000046                     int$flags       set	btemp
  5535   000047                     wtemp8          set	btemp+1
  5536   000047                     ttemp5          set	btemp+1
  5537   00004A                     ttemp6          set	btemp+4
  5538   00004E                     ttemp7          set	btemp+8
  5539                           
  5540                           	psect	idloc
  5541                           
  5542                           ;Config register IDLOC0 @ 0x200000
  5543                           ;	unspecified, using default values
  5544   200000                     	org	2097152
  5545   200000  FF                 	db	255
  5546                           
  5547                           ;Config register IDLOC1 @ 0x200001
  5548                           ;	unspecified, using default values
  5549   200001                     	org	2097153
  5550   200001  FF                 	db	255
  5551                           
  5552                           ;Config register IDLOC2 @ 0x200002
  5553                           ;	unspecified, using default values
  5554   200002                     	org	2097154
  5555   200002  FF                 	db	255
  5556                           
  5557                           ;Config register IDLOC3 @ 0x200003
  5558                           ;	unspecified, using default values
  5559   200003                     	org	2097155
  5560   200003  FF                 	db	255
  5561                           
  5562                           ;Config register IDLOC4 @ 0x200004
  5563                           ;	unspecified, using default values
  5564   200004                     	org	2097156
  5565   200004  FF                 	db	255
  5566                           
  5567                           ;Config register IDLOC5 @ 0x200005
  5568                           ;	unspecified, using default values
  5569   200005                     	org	2097157
  5570   200005  FF                 	db	255
  5571                           
  5572                           ;Config register IDLOC6 @ 0x200006
  5573                           ;	unspecified, using default values
  5574   200006                     	org	2097158
  5575   200006  FF                 	db	255
  5576                           
  5577                           ;Config register IDLOC7 @ 0x200007
  5578                           ;	unspecified, using default values
  5579   200007                     	org	2097159
  5580   200007  FF                 	db	255
  5581                           
  5582                           	psect	config
  5583                           
  5584                           ; Padding undefined space
  5585   300000                     	org	3145728
  5586   300000  FF                 	db	255
  5587                           
  5588                           ;Config register CONFIG1H @ 0x300001
  5589                           ;	Oscillator Selection bits
  5590                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5591                           ;	Fail-Safe Clock Monitor Enable bit
  5592                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5593                           ;	Internal/External Oscillator Switchover bit
  5594                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5595   300001                     	org	3145729
  5596   300001  08                 	db	8
  5597                           
  5598                           ;Config register CONFIG2L @ 0x300002
  5599                           ;	Power-up Timer Enable bit
  5600                           ;	PWRT = 0x1, unprogrammed default
  5601                           ;	Brown-out Reset Enable bits
  5602                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5603                           ;	Brown Out Reset Voltage bits
  5604                           ;	BORV = 22, VBOR set to 2.2 V nominal
  5605   300002                     	org	3145730
  5606   300002  11                 	db	17
  5607                           
  5608                           ;Config register CONFIG2H @ 0x300003
  5609                           ;	Watchdog Timer Enable bit
  5610                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5611                           ;	Watchdog Timer Postscale Select bits
  5612                           ;	WDTPS = 8192, 1:8192
  5613   300003                     	org	3145731
  5614   300003  1A                 	db	26
  5615                           
  5616                           ; Padding undefined space
  5617   300004                     	org	3145732
  5618   300004  FF                 	db	255
  5619                           
  5620                           ;Config register CONFIG3H @ 0x300005
  5621                           ;	CCP2 MUX bit
  5622                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5623                           ;	PORTB A/D Enable bit
  5624                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5625                           ;	Low-Power Timer1 Oscillator Enable bit
  5626                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5627                           ;	HFINTOSC Fast Start-up
  5628                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  5629                           ;	MCLR Pin Enable bit
  5630                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5631   300005                     	org	3145733
  5632   300005  01                 	db	1
  5633                           
  5634                           ;Config register CONFIG4L @ 0x300006
  5635                           ;	Stack Full/Underflow Reset Enable bit
  5636                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  5637                           ;	Single-Supply ICSP Enable bit
  5638                           ;	LVP = OFF, Single-Supply ICSP disabled
  5639                           ;	Extended Instruction Set Enable bit
  5640                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5641                           ;	Background Debugger Enable bit
  5642                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5643   300006                     	org	3145734
  5644   300006  80                 	db	128
  5645                           
  5646                           ; Padding undefined space
  5647   300007                     	org	3145735
  5648   300007  FF                 	db	255
  5649                           
  5650                           ;Config register CONFIG5L @ 0x300008
  5651                           ;	Code Protection Block 0
  5652                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5653                           ;	Code Protection Block 1
  5654                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5655                           ;	Code Protection Block 2
  5656                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5657                           ;	Code Protection Block 3
  5658                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5659   300008                     	org	3145736
  5660   300008  0F                 	db	15
  5661                           
  5662                           ;Config register CONFIG5H @ 0x300009
  5663                           ;	Boot Block Code Protection bit
  5664                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5665                           ;	Data EEPROM Code Protection bit
  5666                           ;	CPD = OFF, Data EEPROM not code-protected
  5667   300009                     	org	3145737
  5668   300009  C0                 	db	192
  5669                           
  5670                           ;Config register CONFIG6L @ 0x30000A
  5671                           ;	Write Protection Block 0
  5672                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5673                           ;	Write Protection Block 1
  5674                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5675                           ;	Write Protection Block 2
  5676                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5677                           ;	Write Protection Block 3
  5678                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5679   30000A                     	org	3145738
  5680   30000A  0F                 	db	15
  5681                           
  5682                           ;Config register CONFIG6H @ 0x30000B
  5683                           ;	Configuration Register Write Protection bit
  5684                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5685                           ;	Boot Block Write Protection bit
  5686                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5687                           ;	Data EEPROM Write Protection bit
  5688                           ;	WRTD = OFF, Data EEPROM not write-protected
  5689   30000B                     	org	3145739
  5690   30000B  E0                 	db	224
  5691                           
  5692                           ;Config register CONFIG7L @ 0x30000C
  5693                           ;	unspecified, using default values
  5694                           ;	Table Read Protection Block 0
  5695                           ;	EBTR0 = 0x1, unprogrammed default
  5696                           ;	Table Read Protection Block 1
  5697                           ;	EBTR1 = 0x1, unprogrammed default
  5698                           ;	Table Read Protection Block 2
  5699                           ;	EBTR2 = 0x1, unprogrammed default
  5700                           ;	Table Read Protection Block 3
  5701                           ;	EBTR3 = 0x1, unprogrammed default
  5702   30000C                     	org	3145740
  5703   30000C  0F                 	db	15
  5704                           
  5705                           ;Config register CONFIG7H @ 0x30000D
  5706                           ;	Boot Block Table Read Protection bit
  5707                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5708   30000D                     	org	3145741
  5709   30000D  40                 	db	64
  5710                           tosu	equ	0xFFF
  5711                           tosh	equ	0xFFE
  5712                           tosl	equ	0xFFD
  5713                           stkptr	equ	0xFFC
  5714                           pclatu	equ	0xFFB
  5715                           pclath	equ	0xFFA
  5716                           pcl	equ	0xFF9
  5717                           tblptru	equ	0xFF8
  5718                           tblptrh	equ	0xFF7
  5719                           tblptrl	equ	0xFF6
  5720                           tablat	equ	0xFF5
  5721                           prodh	equ	0xFF4
  5722                           prodl	equ	0xFF3
  5723                           indf0	equ	0xFEF
  5724                           postinc0	equ	0xFEE
  5725                           postdec0	equ	0xFED
  5726                           preinc0	equ	0xFEC
  5727                           plusw0	equ	0xFEB
  5728                           fsr0h	equ	0xFEA
  5729                           fsr0l	equ	0xFE9
  5730                           wreg	equ	0xFE8
  5731                           indf1	equ	0xFE7
  5732                           postinc1	equ	0xFE6
  5733                           postdec1	equ	0xFE5
  5734                           preinc1	equ	0xFE4
  5735                           plusw1	equ	0xFE3
  5736                           fsr1h	equ	0xFE2
  5737                           fsr1l	equ	0xFE1
  5738                           bsr	equ	0xFE0
  5739                           indf2	equ	0xFDF
  5740                           postinc2	equ	0xFDE
  5741                           postdec2	equ	0xFDD
  5742                           preinc2	equ	0xFDC
  5743                           plusw2	equ	0xFDB
  5744                           fsr2h	equ	0xFDA
  5745                           fsr2l	equ	0xFD9
  5746                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    24
    Data        43
    BSS         282
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     31      69
    BANK0           160    147     147
    BANK1           256     91     236
    BANK2           256      0     142
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    DebounceFSMInit@antirrebote_boton_n	PTR struct . size(2) Largest target is 11
		 -> main@boton1(BANK1[11]), 

    DebounceFSMUpdate@antirrebote_boton_n	PTR struct . size(2) Largest target is 11
		 -> main@boton1(BANK1[11]), 

    DelayInit@delay	PTR struct . size(2) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(BANK1[11]), main@delay_parpadeo(BANK1[9]), 

    DelayIsRunning@delay	PTR struct . size(2) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(BANK1[11]), main@delay_parpadeo(BANK1[9]), 

    DelayRead@delay	PTR struct . size(2) Largest target is 11
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), main@boton1(BANK1[11]), main@delay_parpadeo(BANK1[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> InicializoMRF24@delay_time_out(COMRAM[9]), 

    main@mrf24_data_in	PTR struct . size(2) Largest target is 70
		 -> data_in_s(BANK1[70]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 71
		 -> envio@buuf(BANK0[43]), envio@data_out_s(BANK0[71]), 

    memcpy@d1	PTR void  size(1) Largest target is 71
		 -> envio@buuf(BANK0[43]), envio@data_out_s(BANK0[71]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 43
		 -> envio@buuf(BANK0[43]), envio@data_config_s(BANK0[32]), 

    memcpy@s1	PTR const void  size(1) Largest target is 43
		 -> envio@buuf(BANK0[43]), envio@data_config_s(BANK0[32]), 

    MRF24TransmitirDato@p_info_out_s	PTR struct . size(1) Largest target is 71
		 -> envio@data_out_s(BANK0[71]), 

    sp__memcpy	PTR void  size(1) Largest target is 71
		 -> envio@buuf(BANK0[43]), envio@data_out_s(BANK0[71]), 

    sp__MRF24GetConfig	PTR struct . size(1) Largest target is 32
		 -> data_config_s(COMRAM[32]), 

    sp__MRF24GetDataIn	PTR struct . size(2) Largest target is 70
		 -> data_in_s(BANK1[70]), 

    sp__strncpy	PTR unsigned char  size(1) Largest target is 32
		 -> data_config_s(COMRAM[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 43
		 -> envio@buuf(BANK0[43]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 43
		 -> envio@buuf(BANK0[43]), 

    strncpy@cp	PTR unsigned char  size(1) Largest target is 32
		 -> data_config_s(COMRAM[32]), 

    strncpy@d	PTR unsigned char  size(1) Largest target is 32
		 -> data_config_s(COMRAM[32]), 

    strncpy@s	PTR const unsigned char  size(1) Largest target is 16
		 -> default_mac_address(CODE[8]), default_security_key(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _envio->_MRF24TransmitirDato
    _MRF24TransmitirDato->_SetLongAddr
    _MRF24ReciboPaquete->_GetLongAddr
    _MRF24ReciboPaquete->_SetLongAddr
    _MRF24J40Init->_InicializoMRF24
    _InicializoVariables->_strncpy
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _InicializoMRF24->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _GetShortAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _GetLongAddr->_Write2ByteSPIPort
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte
    _DebounceFSMUpdate->_DelayRead
    _DelayRead->_DelayIsRunning
    _DebounceFSMInit->_DelayInit

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_envio

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                95    95      0    6465
                                             29 COMRAM     2     2      0
                                              0 BANK1     91    91      0
                          _BoardInit
                    _DebounceFSMInit
                  _DebounceFSMUpdate
                          _DelayInit
                          _DelayRead
                     _MRF24GetDataIn
                      _MRF24IsNewMsg
                       _MRF24J40Init
                 _MRF24ReciboPaquete
                              _envio
 ---------------------------------------------------------------------------------
 (1) _envio                                              148   148      0    1800
                                             18 COMRAM     1     1      0
                                              0 BANK0    147   147      0
                _MRF24TransmitirDato
                             _memcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _memcpy                                               7     3      4     149
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _MRF24TransmitirDato                                  8     7      1    1186
                                             10 COMRAM     8     7      1
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24ReciboPaquete                                   8     8      0     972
                                             10 COMRAM     8     8      0
                        _GetLongAddr
                       _GetShortAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         1     1      0    2528
                                             28 COMRAM     1     1      0
                    _InicializoMRF24
                    _InicializoPines
                _InicializoVariables
                        _SetResetPin
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  0     0      0     147
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              6     2      4     147
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      87
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _InicializoMRF24                                     12    12      0    2265
                                             16 COMRAM    12    12      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceMACAddress                                  1     1      0     279
                                              4 COMRAM     1     1      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetChannel                                           1     1      0     487
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _SetLongAddr                                          5     2      3     298
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (4) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     200
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (4) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (5) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (5) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _MRF24IsNewMsg                                        0     0      0       0
                    _IsMRF24Interrup
 ---------------------------------------------------------------------------------
 (2) _IsMRF24Interrup                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MRF24GetDataIn                                       2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _DebounceFSMUpdate                                    5     2      3     610
                                             16 COMRAM     5     2      3
                    _DebounceFSMInit
                          _DelayRead
 ---------------------------------------------------------------------------------
 (3) _DelayRead                                           14    12      2     160
                                              2 COMRAM    14    12      2
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (4) _DelayIsRunning                                       2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _DebounceFSMInit                                      2     0      2     140
                                              6 COMRAM     2     0      2
                          _DelayInit
 ---------------------------------------------------------------------------------
 (3) _DelayInit                                            6     0      6      72
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DebounceFSMInit
     _DelayInit
   _DebounceFSMUpdate
     _DebounceFSMInit
     _DelayRead
       _DelayIsRunning
   _DelayInit
   _DelayRead
   _MRF24GetDataIn
   _MRF24IsNewMsg
     _IsMRF24Interrup
   _MRF24J40Init
     _InicializoMRF24
       _DelayInit
       _DelayRead
       _DelayReset
       _GetLongAddr
         _ReadByteSPIPort
           _SPIRead
         _SetCSPin
         _Write2ByteSPIPort
           _SPIWrite2Byte
             _SPIWriteByte
       _GetShortAddr
         _ReadByteSPIPort
         _SetCSPin
         _WriteByteSPIPort
           _SPIWriteByte
       _SetChannel
         _SetLongAddr
           _SetCSPin
           _Write2ByteSPIPort
           _WriteByteSPIPort
         _SetShortAddr
           _SetCSPin
           _WriteByteSPIPort
       _SetDeviceAddress
         _SetShortAddr
       _SetDeviceMACAddress
         _SetShortAddr
       _SetLongAddr
       _SetShortAddr
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
       _strncpy
     _SetResetPin
   _MRF24ReciboPaquete
     _GetLongAddr
     _GetShortAddr
     _SetLongAddr
     _SetShortAddr
   _envio
     _MRF24TransmitirDato
       _SetLongAddr
       _SetShortAddr
     _memcpy
     _strlen

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0     142     55.5%
BITBANK1           256      0       0      0.0%
BANK1              256     91     236     92.2%
BITBANK0           160      0       0      0.0%
BANK0              160    147     147     91.9%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     31      69     73.4%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     600      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon Aug 11 21:01:03 2025

                         _SSPSTATbits 0FC7                                    l21 1DDE  
                                  l30 1E1E                                    l24 1E48  
                                  l33 1DF2                                    l42 1E62  
                                  l27 1E10                                    l36 1E52  
                                  l39 1E2C                       _IsMRF24Interrup 1DE0  
                       ?_MRF24J40Init 0027                                   l100 19E4  
                                 l103 12B0                                   l112 1D84  
                                 l121 1ADC                                   l105 142E  
                                 l202 1D8E                                   l211 1DBA  
                                 l115 1D3E                                   l124 1C0A  
                                 l132 1CEE                                   l221 1C98  
                                 l205 1D9C                                   l214 1DCA  
                                 l118 1B1E                                   l127 1D18  
                                 l135 1B98                                   l208 1E3A  
                                 l160 1092                                   l233 1D64  
                                 l243 1BD2                                   l227 1904  
                                 l315 1766                                   l236 1E02  
                                 l180 1E5C                                   l253 1588  
                                 l157 1282                                   l174 184A  
                                 l169 1C3E                                   l390 1A46  
                                 l199 1DB4                                   l296 15D4  
                                 _GIE 7F97                                   u700 1DF0  
                                 u701 1DEA                                   u605 1AE8  
                                 u630 1940                                   u710 1992  
                                 u615 1E0E                                   u631 193C  
                                 u711 198E                                   u616 1E10  
                                 u640 1956                                   u720 19A4  
                                 u800 108C                                   u625 1E1C  
                                 u641 1952                                   u721 19A0  
                                 u801 1088                                   u706 1DF2  
                                 u570 1D9C                                   u730 12D2  
                                 u626 1E1E                                   u650 197E  
                                 u810 1110                                   u571 1D98  
                                 u731 12CE                                   u651 197A  
                                 u811 110C                                   u660 1868  
                                 u900 1444                                   u740 12EE  
                                 u820 11B6                                   u661 1864  
                                 u901 1440                                   u741 12EA  
                                 u821 11B2                                   u670 18EE  
                                 u910 1478                                   u590 1DC8  
                                 u750 13EE                                   u830 1266  
                                 u671 18EA                                   u911 1474  
                                 u591 1DC4                                   u751 13EA  
                                 u831 1262                                   u920 1488  
                                 u680 1CEE                                   u760 1404  
                                 u840 1C60                                   u921 1484  
                                 u585 1E46                                   u681 1CEA  
                                 u761 1400                                   u841 1C5C  
                                 u930 14D2                                   u586 1E48  
                                 u770 102A                                   u850 1B5E  
                                 u931 14CE                                   u771 1026  
                                 u851 1B5A                                   u940 14E2  
                                 u860 1C1C                                   u780 104C  
                                 u941 14DE                                   u861 1C18  
                                 u781 1048                                   u950 151A  
                                 u870 1C36                                   u790 106C  
                                 u951 1516                                   u871 1C32  
                                 u695 1AA4                                   u791 1068  
                                 u880 1778                                   u881 1774  
                                 u961 168A                                   u890 1834  
                                 u891 1830                                   u971 169C  
                                 u981 16E4                                   u990 1744  
                                 u991 1740                                   _isr 0008  
                                 wreg 0FE8                   __end_of_GetLongAddr 1ADE  
                                l1102 197E                                  l2000 12EE  
                                l2010 132A                                  l2002 1308  
                                l2020 137A                                  l2012 133A  
                                l2004 1312                                  l2100 1132  
                                l2030 13B2                                  l2022 138A  
                                l2014 134A                                  l2006 1316  
                                l2110 1172                                  l2102 1134  
                                l2200 1C0C                                  l2032 13BC  
                                l2024 1394                                  l2016 135A  
                                l2008 131A                                  l2120 11E0  
                                l2112 1198                                  l2104 1156  
                                l2202 1C1C                                  l2042 13F2  
                                l2034 13C4                                  l2026 139E  
                                l2018 136A                                  l2130 122A  
                                l2122 11E2                                  l2114 119A  
                                l2106 1158                                  l2050 101A  
                                l2212 1C3C                                  l2044 1404  
                                l2036 13D4                                  l2028 13A8  
                                l2220 177C                                  l2140 1276  
                                l2132 122C                                  l2124 1208  
                                l2116 11B6                                  l2108 1170  
                                l2052 102A                                  l1092 1C6C  
                                l2150 1DAC                                  l2310 1A34  
                                l2206 1C22                                  l2046 142C  
                                l2230 1802                                  l2222 17D4  
                                l2142 1280                                  l2134 122E  
                                l2126 120A                                  l2118 11C8  
                                l2070 108C                                  l2062 1052  
                                l1086 1B5E                                  l2152 1DAE  
                                l2320 1A3E                                  l2312 1A36  
                                l2304 19E6                                  l2160 1B9A  
                                l2240 1430                                  l2208 1C36  
                                l2232 1834                                  l2224 17DC  
                                l2216 1768                                  l2136 1266  
                                l2128 1210                                  l2080 10C0  
                                l2064 106C                                  l2056 1030  
                                l2400 165A                                  l2154 1DB0  
                                l2146 1D9E                                  l2322 1A40  
                                l2314 1A38                                  l2306 1A2A  
                                l2162 1BA8                                  l2250 1488  
                                l2242 1434                                  l2226 17E2  
                                l2138 1274                                  l2090 10E2  
                                l2082 10C2                                  l2074 1094  
                                l2058 104C                                  l2170 1C4A  
                                l2330 16A4                                  l2156 1DB2  
                                l2148 1DA8                                  l2324 1A42  
                                l2316 1A3A                                  l2308 1A32  
                                l2164 1BC8                                  l2260 14AC  
                                l2252 1498                                  l2244 1444  
                                l2236 1E54                                  l2228 1800  
                                l2092 10F6                                  l2084 10D0  
                                l2076 10A4                                  l2068 1072  
                                l2180 1B36                                  l2172 1C60  
                                l2340 16CA                                  l2332 16AE  
                                l2318 1A3C                                  l2270 14F0  
                                l2246 1458                                  l2190 1B68  
                                l2094 10F8                                  l2086 10D2  
                                l2078 10A6                                  l2182 1B38  
                                l2166 1C40                                  l2350 1710  
                                l2342 16D2                                  l2334 16B6  
                                l2264 14B2                                  l2248 1478  
                                l1800 1D88                                  l2192 1B7A  
                                l2096 1110                                  l2088 10E0  
                                l2184 1B44                                  l2176 1B20  
                                l2168 1C48                                  l2352 1716  
                                l2344 16DA                                  l2336 16BE  
                                l2328 1680                                  l2282 150A  
                                l2266 14D2                                  l2258 149E  
                                l1802 1D8A                                  l2194 1B80  
                                l2186 1B60                                  l2098 111E  
                                l2178 1B2C                                  l2354 1728  
                                l2346 16EC                                  l2338 16C2  
                                l2284 151A                                  l2268 14E2  
                                l2276 14F6                                  l1820 1DB6  
                                l1804 1E2E                                  l1812 1E4C  
                                l1900 1D30                                  l2196 1B92  
                                l2188 1B64                                  l2356 172C  
                                l2348 16FA                                  l2380 15BA  
                                l2372 158A                                  l1910 1868  
                                l2286 152E                                  l2294 1540  
                                l1822 1DC8                                  l1902 1D36  
                                l1830 1D68                                  l2358 1744  
                                l2470 1614                                  l2390 15E2  
                                l2382 15C4                                  l2374 1596  
                                l1912 1880                                  l2472 1560  
                                l2288 153A                                  l2296 1586  
                                l1808 1E3E                                  l1816 1E20  
                                l1904 1D3C                                  l1832 1D6C  
                                l2392 1622                                  l2384 15CC  
                                l2376 159A                                  l1922 1902  
                                l1914 1894                                  l1826 1E5E  
                                l1850 1B18                                  l1842 1ADE  
                                l1834 1D72                                  l1930 1CC6  
                                l2394 1636                                  l2386 15DA  
                                l2378 159E                                  l1916 18EE  
                                l1908 184C                                  l1844 1B00  
                                l1836 1D78                                  l1940 1CDE  
                                l2396 163A                                  l1854 1DF4  
                                l1918 18FC                                  l1950 1AD4  
                                l1942 1A9A                                  l1846 1B06  
                                l1838 1D7E                                  l1926 1CF0  
                                l1862 1E14                                  l1870 1914  
                                l2398 163E                                  l1952 1ADA  
                                l1944 1ABC                                  l1848 1B12  
                                l1936 1CC8                                  l1880 1964  
                                l1882 1C6E                                  l1946 1AC2  
                                l1938 1CDC                                  l1858 1E06  
                                l1962 1DCC                                  l1874 1944  
                                l1866 1906                                  l1970 1980  
                                l1948 1ACE                                  l1892 1D1C  
                                l1956 1BD4                                  l1876 195A  
                                l1868 190E                                  l1980 19D4  
                                l1972 1992                                  l1966 1DE0  
                                l1886 1D40                                  l1894 1D1C  
                                l1958 1BF8                                  l1990 12A8  
                                l1878 1962                                  l1982 19DC  
                                l1974 19A4                                  l1888 1D56  
                                l1896 1D24                                  l1992 12B8  
                                l1976 19CC                                  l1898 1D2A  
                                l1994 12D2                                  l1986 1284  
                                l1978 19D0                                  l1988 129E  
                                l1998 12D8                                  _ADIE 7CEE  
                                ?_isr 0027                                  _EEIE 7D04  
                                _T0IE 7F95                                  u1000 1756  
                                u1001 174E                                  u1030 15FA  
                                u1031 15F4                                  u1040 1636  
                                u1041 1632                                  u1018 1758  
                                u1050 165A                                  u1107 1B6E  
                                u1051 1656                                  u1060 166C  
                                u1036 15FC                                  u1117 1B86  
                                u1061 1664                                  u1127 12F8  
                                u1137 1BFE                                  u1078 166E  
                                _IPEN 7E87                                  _PEIE 7F96  
                                _RBIE 7F93                                  _RCIE 7CED  
                                _RBPU 7F8F                          _SPIWriteByte 1D86  
                                _main 158A                       __end_of_SPIInit 1DB6  
                     __end_of_SPIRead 1DCC                                  fsr1h 0FE2  
                                fsr2h 0FDA                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                btemp 0046                         _MRF24IsNewMsg 1C0C  
                          _DelayReset 1D40               GetShortAddr@reg_address 002A  
                                start 0040                     DelayInit@duration 0029  
                        ___param_bank 0000                     ??_ReadByteSPIPort 0027  
                               ??_isr 0027                        ??_MRF24J40Init 0043  
         __end_of_InicializoVariables 19E6                         _SPIWrite2Byte 1E2E  
                               ?_main 0027                                 _BCLIE 7D03  
                               _INT0E 7F94                                 i2l406 003C  
                SetDeviceMACAddress@i 002B                        _MRF24GetDataIn 1E54  
                               _TMR1H 0FCF                                 _TMR1L 0FCE  
                               _PORTA 0F80                                 _PORTB 0F81  
                               _PORTC 0F82                                 _PORTD 0F83  
                               _PORTE 0F84                                 _SSPIE 7CEB  
                __end_of_GetShortAddr 1D40                       _InicializoMRF24 1284  
                     _InicializoPines 1DCC               SetShortAddr@reg_address 002A  
                               _envio 1680                                 tablat 0FF5  
                               plusw1 0FE3                                 plusw2 0FDB  
                      ?_MRF24IsNewMsg 0027                                 ttemp5 0047  
                               ttemp6 004A                                 ttemp7 004E  
                               status 0FD8                                 wtemp8 0047  
                     __end_of_strncpy 1980               __end_of_IsMRF24Interrup 1DF4  
                 _SetDeviceMACAddress 1CC6                       __initialization 1A48  
                        __end_of_main 1680  DebounceFSMUpdate@antirrebote_boton_n 0037  
                  envio@data_config_s 008C                        ?_SPIWrite2Byte 0028  
                    __end_of_SetCSPin 1E4A                       envio@data_out_s 00AC  
                         _GetLongAddr 1A9A                         ??_SetLongAddr 002F  
              __end_of_MRF24GetDataIn 1E5E                                ??_main 0044  
                       __activetblptr 0002                         ??_SetResetPin 0027  
                ?_SetDeviceMACAddress 0027                            _SetChannel 1BD4  
       InicializoMRF24@delay_time_out 003A                     ?_SetDeviceAddress 0027  
                              _CCP1IE 7CEA                                _CCP2IE 7D00  
                              ?_envio 0027                             ??_SPIInit 0027  
                           ??_SPIRead 0027                    ??_SetDeviceAddress 002B  
                              _T1RD16 7E6F                                _T1SYNC 7E6A  
                              i2l2410 0018                                i2l2412 0026  
                              i2l2414 0028                                i2l2416 0030  
                              i2l2408 000A                            _SetWakePin 1E04  
                              _OSCCON 0FD3                                _TMR1IE 7CE8  
                              _TMR1IF 7CF0                                _TMR1CS 7E69  
                              _TMR2IE 7CE9                                _TMR1ON 7E68  
        __end_of_default_security_key 1011                                _SSPBUF 0FC9  
                         ?_DelayReset 0027                   DelayIsRunning@delay 0027  
             __end_of_InicializoMRF24 1430                                _memcpy 1B20  
                              clear_0 1A6E                                clear_1 1A7A  
                              clear_2 1A86                                isa$std 0001  
                     ?_MRF24GetDataIn 0027                        SetCSPin@estado 0027  
             __end_of_InicializoPines 1DE0                                _strlen 1C40  
                 MRF24ReciboPaquete@i 0038                 ??_SetDeviceMACAddress 002B  
                        __mediumconst 0000                                tblptrh 0FF7  
                              tblptrl 0FF6                                tblptru 0FF8  
                 __end_of_SetLongAddr 1B20                    _MRF24ReciboPaquete 1768  
                    ??_DelayIsRunning 0029                             ??_strncpy 002B  
                     ??_MRF24IsNewMsg 0027                   __end_of_SetResetPin 1E20  
               GetShortAddr@leido_spi 0029                     __end_of_DelayInit 1C9A  
                   __end_of_DelayRead 1906                  __end_of_MRF24J40Init 1B9A  
                          __accesstop 0060               __end_of__initialization 1A8C  
                 ?_MRF24ReciboPaquete 0027           __end_of_MRF24TransmitirDato 1284  
                   __end_of_BoardInit 1A48                        DelayInit@delay 0027  
                       ___rparam_used 0001                        DelayRead@delay 0029  
                    SetWakePin@estado 0027                      ?_IsMRF24Interrup 0027  
                       ?_SetShortAddr 0029                        __pcstackCOMRAM 0027  
                        __pidataBANK1 1C9A                       ??_SPIWrite2Byte 002A  
                  _long_mac_address_e 0006                         __end_of_envio 1768  
                ??_MRF24ReciboPaquete 0031                        main@data_out_s 0166  
                         ?_SetChannel 0027                               ??_envio 0039  
                          __pbssBANK1 0100                            __pbssBANK2 0200  
                         ?_SetWakePin 0027                             ?_SetCSPin 0027  
                     _ReadByteSPIPort 1E5E                InicializoMRF24@lectura 0039  
                          _data_out_s 0247                          _GetShortAddr 1D1A  
                      ??_SetShortAddr 002A                      ?_InicializoMRF24 0027  
                             ?_memcpy 0027                           _SetLongAddr 1ADE  
                             _T1CKPS0 7E6C                               _T1CKPS1 7E6D  
                             ?_strlen 0027                      ?_InicializoPines 0027  
                _default_security_key 1001                               _T1OSCEN 7E6B  
                         _SetResetPin 1E12                               _OSCTUNE 0F9B  
                             _SSPCON1 0FC6                               _SPIInit 1D9E  
                             _SPIRead 1DB6                            ??_SetCSPin 0027  
                   SetShortAddr@valor 0029                               __Hparam 0000  
                             __Lparam 0000                     ??_DebounceFSMInit 002F  
                        __psmallconst 1000                               __pcinit 1A48  
                        ?_GetLongAddr 002C                               __ramtop 1000  
                             __ptext0 158A                               __ptext1 1680  
                             __ptext2 1C40                               __ptext3 1B20  
                             __ptext4 101A                               __ptext5 1768  
                             __ptext6 1B60                               __ptext7 1980  
                             __ptext8 1906                               __ptext9 1DCC  
                    _WriteByteSPIPort 1E4A               __end_of_ReadByteSPIPort 1E64  
                             _strncpy 1906                  end_of_initialization 1A8C  
                             memcpy@d 002C                               memcpy@n 0029  
                             memcpy@s 002D                         __Lmediumconst 0000  
                        ??_DelayReset 0028                      ??_MRF24GetDataIn 0029  
                 _default_mac_address 1011                               postdec1 0FE5  
                             postdec2 0FDD                               postinc0 0FEE  
                             postinc1 0FE6                               postinc2 0FDE  
                             strlen@a 0029                               strlen@s 0027  
                        _MRF24J40Init 1B60                             _PORTBbits 0F81  
                           _PORTCbits 0F82                    __end_of_DelayReset 1D66  
                WriteByteSPIPort@dato 0028                             _TRISBbits 0F93  
                           _TRISCbits 0F94                             _TRISDbits 0F95  
                           _TRISEbits 0F96                  __end_of_SetShortAddr 1D86  
               Write2ByteSPIPort@dato 002A                  GetLongAddr@respuesta 0030  
                          main@boton1 01B6                             _DelayInit 1C6E  
                           _DelayRead 184C                             _BoardInit 19E6  
                   _Write2ByteSPIPort 1E20           __end_of_SetDeviceMACAddress 1CF0  
                       _data_config_s 0007                            envio@F3355 0200  
                          envio@F3357 0100                            envio@F3359 01C1  
                  ?_Write2ByteSPIPort 002A                        __end_of_memcpy 1B60  
                      __end_of_strlen 1C6E                          ??_SetChannel 0031  
                 start_initialization 1A48                   ??_Write2ByteSPIPort 002C  
                         __end_of_isr 0040                      ?_ReadByteSPIPort 0027  
                       ?_SPIWriteByte 0027                          ??_SetWakePin 0027  
               __end_of_MRF24IsNewMsg 1C40                            ?_DelayInit 0027  
                          ?_DelayRead 0029                            ?_BoardInit 0027  
           __end_of_Write2ByteSPIPort 1E2E                    __end_of_SetChannel 1C0C  
                        _estadoActual 0005                           __pdataBANK1 01C1  
               __end_of_SPIWrite2Byte 1E3C                              ??_memcpy 002B  
                        ?_SetLongAddr 002C                              ??_strlen 0029  
                  __end_of_SetWakePin 1E12                     _DebounceFSMUpdate 1430  
                        ?_SetResetPin 0027                           __pbssCOMRAM 0001  
                  ?_DebounceFSMUpdate 0037                         __pcstackBANK0 0060  
                       __pcstackBANK1 0166                       DelayReset@delay 0027  
                            ?_SPIInit 0027                              ?_SPIRead 0027  
                      ??_SPIWriteByte 0027                   ??_DebounceFSMUpdate 003A  
                    SPIWriteByte@dato 0027                       _DebounceFSMInit 1B9A  
                           _data_in_s 0120                      _SetDeviceAddress 1CF0  
                 _InicializoVariables 1980              __end_of_WriteByteSPIPort 1E54  
                           __pintcode 0008             __end_of_DebounceFSMUpdate 158A  
                   SetResetPin@estado 0027                           __smallconst 1000  
                ?_InicializoVariables 0027                              ?_strncpy 0027  
                    SetLongAddr@valor 002E                              _LATCbits 0F8B  
                            _LATDbits 0F8C                              _LATEbits 0F8D  
                         ??_DelayInit 002D                           ??_DelayRead 002B  
                            i2u108_40 0018                              i2u108_41 0014  
                            i2u109_40 0026                              i2u109_41 0022  
                         ??_BoardInit 0027                              _PIR1bits 0F9E  
                        _SetShortAddr 1D66                             _timeStamp 0001  
                  main@delay_parpadeo 01AD                 ??_InicializoVariables 002D  
                   ??_IsMRF24Interrup 0027               __end_of_DebounceFSMInit 1BD4  
                           copy_data0 1A5C                             envio@buuf 0060  
                           envio@size 008B                              _SetCSPin 1E3C  
                            __Hrparam 0000                             memcpy@tmp 002B  
                            __Lrparam 0000                  __end_of_SPIWriteByte 1D9E  
                            __ptext10 1E04                              __ptext11 1E12  
                            __ptext20 1A9A                              __ptext12 1284  
                            __ptext21 1E20                              __ptext13 1CC6  
                            __ptext30 1E54                              __ptext22 1E2E  
                            __ptext14 1CF0                              __ptext31 1430  
                            __ptext23 1D86                              __ptext15 1BD4  
                            __ptext32 184C                              __ptext24 1E3C  
                            __ptext16 1D66                              __ptext33 1DF4  
                            __ptext25 1E5E                              __ptext17 1ADE  
                            __ptext34 1B9A                              __ptext26 1DB6  
                            __ptext18 1D1A                   _MRF24TransmitirDato 101A  
                            __ptext35 1C6E                              __ptext27 1D40  
                            __ptext19 1E4A                              __ptext36 19E6  
                            __ptext28 1C0C                              __ptext37 1D9E  
                            __ptext29 1DE0                     ??_InicializoMRF24 0037  
                      _DelayIsRunning 1DF4                     ??_InicializoPines 0028  
                       ?_GetShortAddr 0027                  ?_MRF24TransmitirDato 0031  
                            isa$xinst 0000                              int$flags 0046  
  DebounceFSMInit@antirrebote_boton_n 002D           __end_of_default_mac_address 1019  
            __end_of_SetDeviceAddress 1D1A                              memcpy@d1 0027  
                            memcpy@s1 0028                 MRF24ReciboPaquete@add 0036  
                    ?_DebounceFSMInit 002D                              intlevel2 0000  
              __end_of_DelayIsRunning 1E04                  MRF24TransmitirDato@i 0037  
     MRF24TransmitirDato@p_info_out_s 0031                        ??_GetShortAddr 0029  
                           strncpy@cp 002C                 ??_MRF24TransmitirDato 0032  
                   ?_WriteByteSPIPort 0027            __end_of_MRF24ReciboPaquete 184C  
                       ??_GetLongAddr 002E                    ??_WriteByteSPIPort 0028  
              GetLongAddr@reg_address 002C                              strncpy@d 0027  
                            strncpy@n 0029                              strncpy@s 0028  
                         _SSPCON1bits 0FC6           DebounceFSMUpdate@estado_pin 0039  
                   SPIWrite2Byte@dato 0028                SetLongAddr@reg_address 002C  
                     ?_DelayIsRunning 0027            MRF24TransmitirDato@pos_mem 0038  
