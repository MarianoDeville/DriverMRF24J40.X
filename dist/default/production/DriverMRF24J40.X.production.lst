

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Mar 30 08:30:46 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 13/12/2024 GMT
    39                           ; 
    40                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F46K20 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F77                     SSPMSK          equ	3959	;# 
   114   000F78                     SLRCON          equ	3960	;# 
   115   000F79                     CM2CON1         equ	3961	;# 
   116   000F7A                     CM2CON0         equ	3962	;# 
   117   000F7B                     CM1CON0         equ	3963	;# 
   118   000F7C                     WPUB            equ	3964	;# 
   119   000F7D                     IOCB            equ	3965	;# 
   120   000F7E                     ANSEL           equ	3966	;# 
   121   000F7F                     ANSELH          equ	3967	;# 
   122   000F80                     PORTA           equ	3968	;# 
   123   000F81                     PORTB           equ	3969	;# 
   124   000F82                     PORTC           equ	3970	;# 
   125   000F83                     PORTD           equ	3971	;# 
   126   000F84                     PORTE           equ	3972	;# 
   127   000F89                     LATA            equ	3977	;# 
   128   000F8A                     LATB            equ	3978	;# 
   129   000F8B                     LATC            equ	3979	;# 
   130   000F8C                     LATD            equ	3980	;# 
   131   000F8D                     LATE            equ	3981	;# 
   132   000F92                     TRISA           equ	3986	;# 
   133   000F92                     DDRA            equ	3986	;# 
   134   000F93                     TRISB           equ	3987	;# 
   135   000F93                     DDRB            equ	3987	;# 
   136   000F94                     TRISC           equ	3988	;# 
   137   000F94                     DDRC            equ	3988	;# 
   138   000F95                     TRISD           equ	3989	;# 
   139   000F95                     DDRD            equ	3989	;# 
   140   000F96                     TRISE           equ	3990	;# 
   141   000F96                     DDRE            equ	3990	;# 
   142   000F9B                     OSCTUNE         equ	3995	;# 
   143   000F9D                     PIE1            equ	3997	;# 
   144   000F9E                     PIR1            equ	3998	;# 
   145   000F9F                     IPR1            equ	3999	;# 
   146   000FA0                     PIE2            equ	4000	;# 
   147   000FA1                     PIR2            equ	4001	;# 
   148   000FA2                     IPR2            equ	4002	;# 
   149   000FA6                     EECON1          equ	4006	;# 
   150   000FA7                     EECON2          equ	4007	;# 
   151   000FA8                     EEDATA          equ	4008	;# 
   152   000FA9                     EEADR           equ	4009	;# 
   153   000FAA                     EEADRH          equ	4010	;# 
   154   000FAB                     RCSTA           equ	4011	;# 
   155   000FAB                     RCSTA1          equ	4011	;# 
   156   000FAC                     TXSTA           equ	4012	;# 
   157   000FAC                     TXSTA1          equ	4012	;# 
   158   000FAD                     TXREG           equ	4013	;# 
   159   000FAD                     TXREG1          equ	4013	;# 
   160   000FAE                     RCREG           equ	4014	;# 
   161   000FAE                     RCREG1          equ	4014	;# 
   162   000FAF                     SPBRG           equ	4015	;# 
   163   000FAF                     SPBRG1          equ	4015	;# 
   164   000FB0                     SPBRGH          equ	4016	;# 
   165   000FB1                     T3CON           equ	4017	;# 
   166   000FB2                     TMR3            equ	4018	;# 
   167   000FB2                     TMR3L           equ	4018	;# 
   168   000FB3                     TMR3H           equ	4019	;# 
   169   000FB4                     CVRCON2         equ	4020	;# 
   170   000FB5                     CVRCON          equ	4021	;# 
   171   000FB6                     ECCP1AS         equ	4022	;# 
   172   000FB7                     PWM1CON         equ	4023	;# 
   173   000FB8                     BAUDCON         equ	4024	;# 
   174   000FB8                     BAUDCTL         equ	4024	;# 
   175   000FB9                     PSTRCON         equ	4025	;# 
   176   000FBA                     CCP2CON         equ	4026	;# 
   177   000FBB                     CCPR2           equ	4027	;# 
   178   000FBB                     CCPR2L          equ	4027	;# 
   179   000FBC                     CCPR2H          equ	4028	;# 
   180   000FBD                     CCP1CON         equ	4029	;# 
   181   000FBE                     CCPR1           equ	4030	;# 
   182   000FBE                     CCPR1L          equ	4030	;# 
   183   000FBF                     CCPR1H          equ	4031	;# 
   184   000FC0                     ADCON2          equ	4032	;# 
   185   000FC1                     ADCON1          equ	4033	;# 
   186   000FC2                     ADCON0          equ	4034	;# 
   187   000FC3                     ADRES           equ	4035	;# 
   188   000FC3                     ADRESL          equ	4035	;# 
   189   000FC4                     ADRESH          equ	4036	;# 
   190   000FC5                     SSPCON2         equ	4037	;# 
   191   000FC6                     SSPCON1         equ	4038	;# 
   192   000FC7                     SSPSTAT         equ	4039	;# 
   193   000FC8                     SSPADD          equ	4040	;# 
   194   000FC9                     SSPBUF          equ	4041	;# 
   195   000FCA                     T2CON           equ	4042	;# 
   196   000FCB                     PR2             equ	4043	;# 
   197   000FCB                     MEMCON          equ	4043	;# 
   198   000FCC                     TMR2            equ	4044	;# 
   199   000FCD                     T1CON           equ	4045	;# 
   200   000FCE                     TMR1            equ	4046	;# 
   201   000FCE                     TMR1L           equ	4046	;# 
   202   000FCF                     TMR1H           equ	4047	;# 
   203   000FD0                     RCON            equ	4048	;# 
   204   000FD1                     WDTCON          equ	4049	;# 
   205   000FD2                     HLVDCON         equ	4050	;# 
   206   000FD2                     LVDCON          equ	4050	;# 
   207   000FD3                     OSCCON          equ	4051	;# 
   208   000FD5                     T0CON           equ	4053	;# 
   209   000FD6                     TMR0            equ	4054	;# 
   210   000FD6                     TMR0L           equ	4054	;# 
   211   000FD7                     TMR0H           equ	4055	;# 
   212   000FD8                     STATUS          equ	4056	;# 
   213   000FD9                     FSR2            equ	4057	;# 
   214   000FD9                     FSR2L           equ	4057	;# 
   215   000FDA                     FSR2H           equ	4058	;# 
   216   000FDB                     PLUSW2          equ	4059	;# 
   217   000FDC                     PREINC2         equ	4060	;# 
   218   000FDD                     POSTDEC2        equ	4061	;# 
   219   000FDE                     POSTINC2        equ	4062	;# 
   220   000FDF                     INDF2           equ	4063	;# 
   221   000FE0                     BSR             equ	4064	;# 
   222   000FE1                     FSR1            equ	4065	;# 
   223   000FE1                     FSR1L           equ	4065	;# 
   224   000FE2                     FSR1H           equ	4066	;# 
   225   000FE3                     PLUSW1          equ	4067	;# 
   226   000FE4                     PREINC1         equ	4068	;# 
   227   000FE5                     POSTDEC1        equ	4069	;# 
   228   000FE6                     POSTINC1        equ	4070	;# 
   229   000FE7                     INDF1           equ	4071	;# 
   230   000FE8                     WREG            equ	4072	;# 
   231   000FE9                     FSR0            equ	4073	;# 
   232   000FE9                     FSR0L           equ	4073	;# 
   233   000FEA                     FSR0H           equ	4074	;# 
   234   000FEB                     PLUSW0          equ	4075	;# 
   235   000FEC                     PREINC0         equ	4076	;# 
   236   000FED                     POSTDEC0        equ	4077	;# 
   237   000FEE                     POSTINC0        equ	4078	;# 
   238   000FEF                     INDF0           equ	4079	;# 
   239   000FF0                     INTCON3         equ	4080	;# 
   240   000FF1                     INTCON2         equ	4081	;# 
   241   000FF2                     INTCON          equ	4082	;# 
   242   000FF3                     PROD            equ	4083	;# 
   243   000FF3                     PRODL           equ	4083	;# 
   244   000FF4                     PRODH           equ	4084	;# 
   245   000FF5                     TABLAT          equ	4085	;# 
   246   000FF6                     TBLPTR          equ	4086	;# 
   247   000FF6                     TBLPTRL         equ	4086	;# 
   248   000FF7                     TBLPTRH         equ	4087	;# 
   249   000FF8                     TBLPTRU         equ	4088	;# 
   250   000FF9                     PCLAT           equ	4089	;# 
   251   000FF9                     PC              equ	4089	;# 
   252   000FF9                     PCL             equ	4089	;# 
   253   000FFA                     PCLATH          equ	4090	;# 
   254   000FFB                     PCLATU          equ	4091	;# 
   255   000FFC                     STKPTR          equ	4092	;# 
   256   000FFD                     TOS             equ	4093	;# 
   257   000FFD                     TOSL            equ	4093	;# 
   258   000FFE                     TOSH            equ	4094	;# 
   259   000FFF                     TOSU            equ	4095	;# 
   260   000F77                     SSPMSK          equ	3959	;# 
   261   000F78                     SLRCON          equ	3960	;# 
   262   000F79                     CM2CON1         equ	3961	;# 
   263   000F7A                     CM2CON0         equ	3962	;# 
   264   000F7B                     CM1CON0         equ	3963	;# 
   265   000F7C                     WPUB            equ	3964	;# 
   266   000F7D                     IOCB            equ	3965	;# 
   267   000F7E                     ANSEL           equ	3966	;# 
   268   000F7F                     ANSELH          equ	3967	;# 
   269   000F80                     PORTA           equ	3968	;# 
   270   000F81                     PORTB           equ	3969	;# 
   271   000F82                     PORTC           equ	3970	;# 
   272   000F83                     PORTD           equ	3971	;# 
   273   000F84                     PORTE           equ	3972	;# 
   274   000F89                     LATA            equ	3977	;# 
   275   000F8A                     LATB            equ	3978	;# 
   276   000F8B                     LATC            equ	3979	;# 
   277   000F8C                     LATD            equ	3980	;# 
   278   000F8D                     LATE            equ	3981	;# 
   279   000F92                     TRISA           equ	3986	;# 
   280   000F92                     DDRA            equ	3986	;# 
   281   000F93                     TRISB           equ	3987	;# 
   282   000F93                     DDRB            equ	3987	;# 
   283   000F94                     TRISC           equ	3988	;# 
   284   000F94                     DDRC            equ	3988	;# 
   285   000F95                     TRISD           equ	3989	;# 
   286   000F95                     DDRD            equ	3989	;# 
   287   000F96                     TRISE           equ	3990	;# 
   288   000F96                     DDRE            equ	3990	;# 
   289   000F9B                     OSCTUNE         equ	3995	;# 
   290   000F9D                     PIE1            equ	3997	;# 
   291   000F9E                     PIR1            equ	3998	;# 
   292   000F9F                     IPR1            equ	3999	;# 
   293   000FA0                     PIE2            equ	4000	;# 
   294   000FA1                     PIR2            equ	4001	;# 
   295   000FA2                     IPR2            equ	4002	;# 
   296   000FA6                     EECON1          equ	4006	;# 
   297   000FA7                     EECON2          equ	4007	;# 
   298   000FA8                     EEDATA          equ	4008	;# 
   299   000FA9                     EEADR           equ	4009	;# 
   300   000FAA                     EEADRH          equ	4010	;# 
   301   000FAB                     RCSTA           equ	4011	;# 
   302   000FAB                     RCSTA1          equ	4011	;# 
   303   000FAC                     TXSTA           equ	4012	;# 
   304   000FAC                     TXSTA1          equ	4012	;# 
   305   000FAD                     TXREG           equ	4013	;# 
   306   000FAD                     TXREG1          equ	4013	;# 
   307   000FAE                     RCREG           equ	4014	;# 
   308   000FAE                     RCREG1          equ	4014	;# 
   309   000FAF                     SPBRG           equ	4015	;# 
   310   000FAF                     SPBRG1          equ	4015	;# 
   311   000FB0                     SPBRGH          equ	4016	;# 
   312   000FB1                     T3CON           equ	4017	;# 
   313   000FB2                     TMR3            equ	4018	;# 
   314   000FB2                     TMR3L           equ	4018	;# 
   315   000FB3                     TMR3H           equ	4019	;# 
   316   000FB4                     CVRCON2         equ	4020	;# 
   317   000FB5                     CVRCON          equ	4021	;# 
   318   000FB6                     ECCP1AS         equ	4022	;# 
   319   000FB7                     PWM1CON         equ	4023	;# 
   320   000FB8                     BAUDCON         equ	4024	;# 
   321   000FB8                     BAUDCTL         equ	4024	;# 
   322   000FB9                     PSTRCON         equ	4025	;# 
   323   000FBA                     CCP2CON         equ	4026	;# 
   324   000FBB                     CCPR2           equ	4027	;# 
   325   000FBB                     CCPR2L          equ	4027	;# 
   326   000FBC                     CCPR2H          equ	4028	;# 
   327   000FBD                     CCP1CON         equ	4029	;# 
   328   000FBE                     CCPR1           equ	4030	;# 
   329   000FBE                     CCPR1L          equ	4030	;# 
   330   000FBF                     CCPR1H          equ	4031	;# 
   331   000FC0                     ADCON2          equ	4032	;# 
   332   000FC1                     ADCON1          equ	4033	;# 
   333   000FC2                     ADCON0          equ	4034	;# 
   334   000FC3                     ADRES           equ	4035	;# 
   335   000FC3                     ADRESL          equ	4035	;# 
   336   000FC4                     ADRESH          equ	4036	;# 
   337   000FC5                     SSPCON2         equ	4037	;# 
   338   000FC6                     SSPCON1         equ	4038	;# 
   339   000FC7                     SSPSTAT         equ	4039	;# 
   340   000FC8                     SSPADD          equ	4040	;# 
   341   000FC9                     SSPBUF          equ	4041	;# 
   342   000FCA                     T2CON           equ	4042	;# 
   343   000FCB                     PR2             equ	4043	;# 
   344   000FCB                     MEMCON          equ	4043	;# 
   345   000FCC                     TMR2            equ	4044	;# 
   346   000FCD                     T1CON           equ	4045	;# 
   347   000FCE                     TMR1            equ	4046	;# 
   348   000FCE                     TMR1L           equ	4046	;# 
   349   000FCF                     TMR1H           equ	4047	;# 
   350   000FD0                     RCON            equ	4048	;# 
   351   000FD1                     WDTCON          equ	4049	;# 
   352   000FD2                     HLVDCON         equ	4050	;# 
   353   000FD2                     LVDCON          equ	4050	;# 
   354   000FD3                     OSCCON          equ	4051	;# 
   355   000FD5                     T0CON           equ	4053	;# 
   356   000FD6                     TMR0            equ	4054	;# 
   357   000FD6                     TMR0L           equ	4054	;# 
   358   000FD7                     TMR0H           equ	4055	;# 
   359   000FD8                     STATUS          equ	4056	;# 
   360   000FD9                     FSR2            equ	4057	;# 
   361   000FD9                     FSR2L           equ	4057	;# 
   362   000FDA                     FSR2H           equ	4058	;# 
   363   000FDB                     PLUSW2          equ	4059	;# 
   364   000FDC                     PREINC2         equ	4060	;# 
   365   000FDD                     POSTDEC2        equ	4061	;# 
   366   000FDE                     POSTINC2        equ	4062	;# 
   367   000FDF                     INDF2           equ	4063	;# 
   368   000FE0                     BSR             equ	4064	;# 
   369   000FE1                     FSR1            equ	4065	;# 
   370   000FE1                     FSR1L           equ	4065	;# 
   371   000FE2                     FSR1H           equ	4066	;# 
   372   000FE3                     PLUSW1          equ	4067	;# 
   373   000FE4                     PREINC1         equ	4068	;# 
   374   000FE5                     POSTDEC1        equ	4069	;# 
   375   000FE6                     POSTINC1        equ	4070	;# 
   376   000FE7                     INDF1           equ	4071	;# 
   377   000FE8                     WREG            equ	4072	;# 
   378   000FE9                     FSR0            equ	4073	;# 
   379   000FE9                     FSR0L           equ	4073	;# 
   380   000FEA                     FSR0H           equ	4074	;# 
   381   000FEB                     PLUSW0          equ	4075	;# 
   382   000FEC                     PREINC0         equ	4076	;# 
   383   000FED                     POSTDEC0        equ	4077	;# 
   384   000FEE                     POSTINC0        equ	4078	;# 
   385   000FEF                     INDF0           equ	4079	;# 
   386   000FF0                     INTCON3         equ	4080	;# 
   387   000FF1                     INTCON2         equ	4081	;# 
   388   000FF2                     INTCON          equ	4082	;# 
   389   000FF3                     PROD            equ	4083	;# 
   390   000FF3                     PRODL           equ	4083	;# 
   391   000FF4                     PRODH           equ	4084	;# 
   392   000FF5                     TABLAT          equ	4085	;# 
   393   000FF6                     TBLPTR          equ	4086	;# 
   394   000FF6                     TBLPTRL         equ	4086	;# 
   395   000FF7                     TBLPTRH         equ	4087	;# 
   396   000FF8                     TBLPTRU         equ	4088	;# 
   397   000FF9                     PCLAT           equ	4089	;# 
   398   000FF9                     PC              equ	4089	;# 
   399   000FF9                     PCL             equ	4089	;# 
   400   000FFA                     PCLATH          equ	4090	;# 
   401   000FFB                     PCLATU          equ	4091	;# 
   402   000FFC                     STKPTR          equ	4092	;# 
   403   000FFD                     TOS             equ	4093	;# 
   404   000FFD                     TOSL            equ	4093	;# 
   405   000FFE                     TOSH            equ	4094	;# 
   406   000FFF                     TOSU            equ	4095	;# 
   407   000F77                     SSPMSK          equ	3959	;# 
   408   000F78                     SLRCON          equ	3960	;# 
   409   000F79                     CM2CON1         equ	3961	;# 
   410   000F7A                     CM2CON0         equ	3962	;# 
   411   000F7B                     CM1CON0         equ	3963	;# 
   412   000F7C                     WPUB            equ	3964	;# 
   413   000F7D                     IOCB            equ	3965	;# 
   414   000F7E                     ANSEL           equ	3966	;# 
   415   000F7F                     ANSELH          equ	3967	;# 
   416   000F80                     PORTA           equ	3968	;# 
   417   000F81                     PORTB           equ	3969	;# 
   418   000F82                     PORTC           equ	3970	;# 
   419   000F83                     PORTD           equ	3971	;# 
   420   000F84                     PORTE           equ	3972	;# 
   421   000F89                     LATA            equ	3977	;# 
   422   000F8A                     LATB            equ	3978	;# 
   423   000F8B                     LATC            equ	3979	;# 
   424   000F8C                     LATD            equ	3980	;# 
   425   000F8D                     LATE            equ	3981	;# 
   426   000F92                     TRISA           equ	3986	;# 
   427   000F92                     DDRA            equ	3986	;# 
   428   000F93                     TRISB           equ	3987	;# 
   429   000F93                     DDRB            equ	3987	;# 
   430   000F94                     TRISC           equ	3988	;# 
   431   000F94                     DDRC            equ	3988	;# 
   432   000F95                     TRISD           equ	3989	;# 
   433   000F95                     DDRD            equ	3989	;# 
   434   000F96                     TRISE           equ	3990	;# 
   435   000F96                     DDRE            equ	3990	;# 
   436   000F9B                     OSCTUNE         equ	3995	;# 
   437   000F9D                     PIE1            equ	3997	;# 
   438   000F9E                     PIR1            equ	3998	;# 
   439   000F9F                     IPR1            equ	3999	;# 
   440   000FA0                     PIE2            equ	4000	;# 
   441   000FA1                     PIR2            equ	4001	;# 
   442   000FA2                     IPR2            equ	4002	;# 
   443   000FA6                     EECON1          equ	4006	;# 
   444   000FA7                     EECON2          equ	4007	;# 
   445   000FA8                     EEDATA          equ	4008	;# 
   446   000FA9                     EEADR           equ	4009	;# 
   447   000FAA                     EEADRH          equ	4010	;# 
   448   000FAB                     RCSTA           equ	4011	;# 
   449   000FAB                     RCSTA1          equ	4011	;# 
   450   000FAC                     TXSTA           equ	4012	;# 
   451   000FAC                     TXSTA1          equ	4012	;# 
   452   000FAD                     TXREG           equ	4013	;# 
   453   000FAD                     TXREG1          equ	4013	;# 
   454   000FAE                     RCREG           equ	4014	;# 
   455   000FAE                     RCREG1          equ	4014	;# 
   456   000FAF                     SPBRG           equ	4015	;# 
   457   000FAF                     SPBRG1          equ	4015	;# 
   458   000FB0                     SPBRGH          equ	4016	;# 
   459   000FB1                     T3CON           equ	4017	;# 
   460   000FB2                     TMR3            equ	4018	;# 
   461   000FB2                     TMR3L           equ	4018	;# 
   462   000FB3                     TMR3H           equ	4019	;# 
   463   000FB4                     CVRCON2         equ	4020	;# 
   464   000FB5                     CVRCON          equ	4021	;# 
   465   000FB6                     ECCP1AS         equ	4022	;# 
   466   000FB7                     PWM1CON         equ	4023	;# 
   467   000FB8                     BAUDCON         equ	4024	;# 
   468   000FB8                     BAUDCTL         equ	4024	;# 
   469   000FB9                     PSTRCON         equ	4025	;# 
   470   000FBA                     CCP2CON         equ	4026	;# 
   471   000FBB                     CCPR2           equ	4027	;# 
   472   000FBB                     CCPR2L          equ	4027	;# 
   473   000FBC                     CCPR2H          equ	4028	;# 
   474   000FBD                     CCP1CON         equ	4029	;# 
   475   000FBE                     CCPR1           equ	4030	;# 
   476   000FBE                     CCPR1L          equ	4030	;# 
   477   000FBF                     CCPR1H          equ	4031	;# 
   478   000FC0                     ADCON2          equ	4032	;# 
   479   000FC1                     ADCON1          equ	4033	;# 
   480   000FC2                     ADCON0          equ	4034	;# 
   481   000FC3                     ADRES           equ	4035	;# 
   482   000FC3                     ADRESL          equ	4035	;# 
   483   000FC4                     ADRESH          equ	4036	;# 
   484   000FC5                     SSPCON2         equ	4037	;# 
   485   000FC6                     SSPCON1         equ	4038	;# 
   486   000FC7                     SSPSTAT         equ	4039	;# 
   487   000FC8                     SSPADD          equ	4040	;# 
   488   000FC9                     SSPBUF          equ	4041	;# 
   489   000FCA                     T2CON           equ	4042	;# 
   490   000FCB                     PR2             equ	4043	;# 
   491   000FCB                     MEMCON          equ	4043	;# 
   492   000FCC                     TMR2            equ	4044	;# 
   493   000FCD                     T1CON           equ	4045	;# 
   494   000FCE                     TMR1            equ	4046	;# 
   495   000FCE                     TMR1L           equ	4046	;# 
   496   000FCF                     TMR1H           equ	4047	;# 
   497   000FD0                     RCON            equ	4048	;# 
   498   000FD1                     WDTCON          equ	4049	;# 
   499   000FD2                     HLVDCON         equ	4050	;# 
   500   000FD2                     LVDCON          equ	4050	;# 
   501   000FD3                     OSCCON          equ	4051	;# 
   502   000FD5                     T0CON           equ	4053	;# 
   503   000FD6                     TMR0            equ	4054	;# 
   504   000FD6                     TMR0L           equ	4054	;# 
   505   000FD7                     TMR0H           equ	4055	;# 
   506   000FD8                     STATUS          equ	4056	;# 
   507   000FD9                     FSR2            equ	4057	;# 
   508   000FD9                     FSR2L           equ	4057	;# 
   509   000FDA                     FSR2H           equ	4058	;# 
   510   000FDB                     PLUSW2          equ	4059	;# 
   511   000FDC                     PREINC2         equ	4060	;# 
   512   000FDD                     POSTDEC2        equ	4061	;# 
   513   000FDE                     POSTINC2        equ	4062	;# 
   514   000FDF                     INDF2           equ	4063	;# 
   515   000FE0                     BSR             equ	4064	;# 
   516   000FE1                     FSR1            equ	4065	;# 
   517   000FE1                     FSR1L           equ	4065	;# 
   518   000FE2                     FSR1H           equ	4066	;# 
   519   000FE3                     PLUSW1          equ	4067	;# 
   520   000FE4                     PREINC1         equ	4068	;# 
   521   000FE5                     POSTDEC1        equ	4069	;# 
   522   000FE6                     POSTINC1        equ	4070	;# 
   523   000FE7                     INDF1           equ	4071	;# 
   524   000FE8                     WREG            equ	4072	;# 
   525   000FE9                     FSR0            equ	4073	;# 
   526   000FE9                     FSR0L           equ	4073	;# 
   527   000FEA                     FSR0H           equ	4074	;# 
   528   000FEB                     PLUSW0          equ	4075	;# 
   529   000FEC                     PREINC0         equ	4076	;# 
   530   000FED                     POSTDEC0        equ	4077	;# 
   531   000FEE                     POSTINC0        equ	4078	;# 
   532   000FEF                     INDF0           equ	4079	;# 
   533   000FF0                     INTCON3         equ	4080	;# 
   534   000FF1                     INTCON2         equ	4081	;# 
   535   000FF2                     INTCON          equ	4082	;# 
   536   000FF3                     PROD            equ	4083	;# 
   537   000FF3                     PRODL           equ	4083	;# 
   538   000FF4                     PRODH           equ	4084	;# 
   539   000FF5                     TABLAT          equ	4085	;# 
   540   000FF6                     TBLPTR          equ	4086	;# 
   541   000FF6                     TBLPTRL         equ	4086	;# 
   542   000FF7                     TBLPTRH         equ	4087	;# 
   543   000FF8                     TBLPTRU         equ	4088	;# 
   544   000FF9                     PCLAT           equ	4089	;# 
   545   000FF9                     PC              equ	4089	;# 
   546   000FF9                     PCL             equ	4089	;# 
   547   000FFA                     PCLATH          equ	4090	;# 
   548   000FFB                     PCLATU          equ	4091	;# 
   549   000FFC                     STKPTR          equ	4092	;# 
   550   000FFD                     TOS             equ	4093	;# 
   551   000FFD                     TOSL            equ	4093	;# 
   552   000FFE                     TOSH            equ	4094	;# 
   553   000FFF                     TOSU            equ	4095	;# 
   554   000F77                     SSPMSK          equ	3959	;# 
   555   000F78                     SLRCON          equ	3960	;# 
   556   000F79                     CM2CON1         equ	3961	;# 
   557   000F7A                     CM2CON0         equ	3962	;# 
   558   000F7B                     CM1CON0         equ	3963	;# 
   559   000F7C                     WPUB            equ	3964	;# 
   560   000F7D                     IOCB            equ	3965	;# 
   561   000F7E                     ANSEL           equ	3966	;# 
   562   000F7F                     ANSELH          equ	3967	;# 
   563   000F80                     PORTA           equ	3968	;# 
   564   000F81                     PORTB           equ	3969	;# 
   565   000F82                     PORTC           equ	3970	;# 
   566   000F83                     PORTD           equ	3971	;# 
   567   000F84                     PORTE           equ	3972	;# 
   568   000F89                     LATA            equ	3977	;# 
   569   000F8A                     LATB            equ	3978	;# 
   570   000F8B                     LATC            equ	3979	;# 
   571   000F8C                     LATD            equ	3980	;# 
   572   000F8D                     LATE            equ	3981	;# 
   573   000F92                     TRISA           equ	3986	;# 
   574   000F92                     DDRA            equ	3986	;# 
   575   000F93                     TRISB           equ	3987	;# 
   576   000F93                     DDRB            equ	3987	;# 
   577   000F94                     TRISC           equ	3988	;# 
   578   000F94                     DDRC            equ	3988	;# 
   579   000F95                     TRISD           equ	3989	;# 
   580   000F95                     DDRD            equ	3989	;# 
   581   000F96                     TRISE           equ	3990	;# 
   582   000F96                     DDRE            equ	3990	;# 
   583   000F9B                     OSCTUNE         equ	3995	;# 
   584   000F9D                     PIE1            equ	3997	;# 
   585   000F9E                     PIR1            equ	3998	;# 
   586   000F9F                     IPR1            equ	3999	;# 
   587   000FA0                     PIE2            equ	4000	;# 
   588   000FA1                     PIR2            equ	4001	;# 
   589   000FA2                     IPR2            equ	4002	;# 
   590   000FA6                     EECON1          equ	4006	;# 
   591   000FA7                     EECON2          equ	4007	;# 
   592   000FA8                     EEDATA          equ	4008	;# 
   593   000FA9                     EEADR           equ	4009	;# 
   594   000FAA                     EEADRH          equ	4010	;# 
   595   000FAB                     RCSTA           equ	4011	;# 
   596   000FAB                     RCSTA1          equ	4011	;# 
   597   000FAC                     TXSTA           equ	4012	;# 
   598   000FAC                     TXSTA1          equ	4012	;# 
   599   000FAD                     TXREG           equ	4013	;# 
   600   000FAD                     TXREG1          equ	4013	;# 
   601   000FAE                     RCREG           equ	4014	;# 
   602   000FAE                     RCREG1          equ	4014	;# 
   603   000FAF                     SPBRG           equ	4015	;# 
   604   000FAF                     SPBRG1          equ	4015	;# 
   605   000FB0                     SPBRGH          equ	4016	;# 
   606   000FB1                     T3CON           equ	4017	;# 
   607   000FB2                     TMR3            equ	4018	;# 
   608   000FB2                     TMR3L           equ	4018	;# 
   609   000FB3                     TMR3H           equ	4019	;# 
   610   000FB4                     CVRCON2         equ	4020	;# 
   611   000FB5                     CVRCON          equ	4021	;# 
   612   000FB6                     ECCP1AS         equ	4022	;# 
   613   000FB7                     PWM1CON         equ	4023	;# 
   614   000FB8                     BAUDCON         equ	4024	;# 
   615   000FB8                     BAUDCTL         equ	4024	;# 
   616   000FB9                     PSTRCON         equ	4025	;# 
   617   000FBA                     CCP2CON         equ	4026	;# 
   618   000FBB                     CCPR2           equ	4027	;# 
   619   000FBB                     CCPR2L          equ	4027	;# 
   620   000FBC                     CCPR2H          equ	4028	;# 
   621   000FBD                     CCP1CON         equ	4029	;# 
   622   000FBE                     CCPR1           equ	4030	;# 
   623   000FBE                     CCPR1L          equ	4030	;# 
   624   000FBF                     CCPR1H          equ	4031	;# 
   625   000FC0                     ADCON2          equ	4032	;# 
   626   000FC1                     ADCON1          equ	4033	;# 
   627   000FC2                     ADCON0          equ	4034	;# 
   628   000FC3                     ADRES           equ	4035	;# 
   629   000FC3                     ADRESL          equ	4035	;# 
   630   000FC4                     ADRESH          equ	4036	;# 
   631   000FC5                     SSPCON2         equ	4037	;# 
   632   000FC6                     SSPCON1         equ	4038	;# 
   633   000FC7                     SSPSTAT         equ	4039	;# 
   634   000FC8                     SSPADD          equ	4040	;# 
   635   000FC9                     SSPBUF          equ	4041	;# 
   636   000FCA                     T2CON           equ	4042	;# 
   637   000FCB                     PR2             equ	4043	;# 
   638   000FCB                     MEMCON          equ	4043	;# 
   639   000FCC                     TMR2            equ	4044	;# 
   640   000FCD                     T1CON           equ	4045	;# 
   641   000FCE                     TMR1            equ	4046	;# 
   642   000FCE                     TMR1L           equ	4046	;# 
   643   000FCF                     TMR1H           equ	4047	;# 
   644   000FD0                     RCON            equ	4048	;# 
   645   000FD1                     WDTCON          equ	4049	;# 
   646   000FD2                     HLVDCON         equ	4050	;# 
   647   000FD2                     LVDCON          equ	4050	;# 
   648   000FD3                     OSCCON          equ	4051	;# 
   649   000FD5                     T0CON           equ	4053	;# 
   650   000FD6                     TMR0            equ	4054	;# 
   651   000FD6                     TMR0L           equ	4054	;# 
   652   000FD7                     TMR0H           equ	4055	;# 
   653   000FD8                     STATUS          equ	4056	;# 
   654   000FD9                     FSR2            equ	4057	;# 
   655   000FD9                     FSR2L           equ	4057	;# 
   656   000FDA                     FSR2H           equ	4058	;# 
   657   000FDB                     PLUSW2          equ	4059	;# 
   658   000FDC                     PREINC2         equ	4060	;# 
   659   000FDD                     POSTDEC2        equ	4061	;# 
   660   000FDE                     POSTINC2        equ	4062	;# 
   661   000FDF                     INDF2           equ	4063	;# 
   662   000FE0                     BSR             equ	4064	;# 
   663   000FE1                     FSR1            equ	4065	;# 
   664   000FE1                     FSR1L           equ	4065	;# 
   665   000FE2                     FSR1H           equ	4066	;# 
   666   000FE3                     PLUSW1          equ	4067	;# 
   667   000FE4                     PREINC1         equ	4068	;# 
   668   000FE5                     POSTDEC1        equ	4069	;# 
   669   000FE6                     POSTINC1        equ	4070	;# 
   670   000FE7                     INDF1           equ	4071	;# 
   671   000FE8                     WREG            equ	4072	;# 
   672   000FE9                     FSR0            equ	4073	;# 
   673   000FE9                     FSR0L           equ	4073	;# 
   674   000FEA                     FSR0H           equ	4074	;# 
   675   000FEB                     PLUSW0          equ	4075	;# 
   676   000FEC                     PREINC0         equ	4076	;# 
   677   000FED                     POSTDEC0        equ	4077	;# 
   678   000FEE                     POSTINC0        equ	4078	;# 
   679   000FEF                     INDF0           equ	4079	;# 
   680   000FF0                     INTCON3         equ	4080	;# 
   681   000FF1                     INTCON2         equ	4081	;# 
   682   000FF2                     INTCON          equ	4082	;# 
   683   000FF3                     PROD            equ	4083	;# 
   684   000FF3                     PRODL           equ	4083	;# 
   685   000FF4                     PRODH           equ	4084	;# 
   686   000FF5                     TABLAT          equ	4085	;# 
   687   000FF6                     TBLPTR          equ	4086	;# 
   688   000FF6                     TBLPTRL         equ	4086	;# 
   689   000FF7                     TBLPTRH         equ	4087	;# 
   690   000FF8                     TBLPTRU         equ	4088	;# 
   691   000FF9                     PCLAT           equ	4089	;# 
   692   000FF9                     PC              equ	4089	;# 
   693   000FF9                     PCL             equ	4089	;# 
   694   000FFA                     PCLATH          equ	4090	;# 
   695   000FFB                     PCLATU          equ	4091	;# 
   696   000FFC                     STKPTR          equ	4092	;# 
   697   000FFD                     TOS             equ	4093	;# 
   698   000FFD                     TOSL            equ	4093	;# 
   699   000FFE                     TOSH            equ	4094	;# 
   700   000FFF                     TOSU            equ	4095	;# 
   701   000F77                     SSPMSK          equ	3959	;# 
   702   000F78                     SLRCON          equ	3960	;# 
   703   000F79                     CM2CON1         equ	3961	;# 
   704   000F7A                     CM2CON0         equ	3962	;# 
   705   000F7B                     CM1CON0         equ	3963	;# 
   706   000F7C                     WPUB            equ	3964	;# 
   707   000F7D                     IOCB            equ	3965	;# 
   708   000F7E                     ANSEL           equ	3966	;# 
   709   000F7F                     ANSELH          equ	3967	;# 
   710   000F80                     PORTA           equ	3968	;# 
   711   000F81                     PORTB           equ	3969	;# 
   712   000F82                     PORTC           equ	3970	;# 
   713   000F83                     PORTD           equ	3971	;# 
   714   000F84                     PORTE           equ	3972	;# 
   715   000F89                     LATA            equ	3977	;# 
   716   000F8A                     LATB            equ	3978	;# 
   717   000F8B                     LATC            equ	3979	;# 
   718   000F8C                     LATD            equ	3980	;# 
   719   000F8D                     LATE            equ	3981	;# 
   720   000F92                     TRISA           equ	3986	;# 
   721   000F92                     DDRA            equ	3986	;# 
   722   000F93                     TRISB           equ	3987	;# 
   723   000F93                     DDRB            equ	3987	;# 
   724   000F94                     TRISC           equ	3988	;# 
   725   000F94                     DDRC            equ	3988	;# 
   726   000F95                     TRISD           equ	3989	;# 
   727   000F95                     DDRD            equ	3989	;# 
   728   000F96                     TRISE           equ	3990	;# 
   729   000F96                     DDRE            equ	3990	;# 
   730   000F9B                     OSCTUNE         equ	3995	;# 
   731   000F9D                     PIE1            equ	3997	;# 
   732   000F9E                     PIR1            equ	3998	;# 
   733   000F9F                     IPR1            equ	3999	;# 
   734   000FA0                     PIE2            equ	4000	;# 
   735   000FA1                     PIR2            equ	4001	;# 
   736   000FA2                     IPR2            equ	4002	;# 
   737   000FA6                     EECON1          equ	4006	;# 
   738   000FA7                     EECON2          equ	4007	;# 
   739   000FA8                     EEDATA          equ	4008	;# 
   740   000FA9                     EEADR           equ	4009	;# 
   741   000FAA                     EEADRH          equ	4010	;# 
   742   000FAB                     RCSTA           equ	4011	;# 
   743   000FAB                     RCSTA1          equ	4011	;# 
   744   000FAC                     TXSTA           equ	4012	;# 
   745   000FAC                     TXSTA1          equ	4012	;# 
   746   000FAD                     TXREG           equ	4013	;# 
   747   000FAD                     TXREG1          equ	4013	;# 
   748   000FAE                     RCREG           equ	4014	;# 
   749   000FAE                     RCREG1          equ	4014	;# 
   750   000FAF                     SPBRG           equ	4015	;# 
   751   000FAF                     SPBRG1          equ	4015	;# 
   752   000FB0                     SPBRGH          equ	4016	;# 
   753   000FB1                     T3CON           equ	4017	;# 
   754   000FB2                     TMR3            equ	4018	;# 
   755   000FB2                     TMR3L           equ	4018	;# 
   756   000FB3                     TMR3H           equ	4019	;# 
   757   000FB4                     CVRCON2         equ	4020	;# 
   758   000FB5                     CVRCON          equ	4021	;# 
   759   000FB6                     ECCP1AS         equ	4022	;# 
   760   000FB7                     PWM1CON         equ	4023	;# 
   761   000FB8                     BAUDCON         equ	4024	;# 
   762   000FB8                     BAUDCTL         equ	4024	;# 
   763   000FB9                     PSTRCON         equ	4025	;# 
   764   000FBA                     CCP2CON         equ	4026	;# 
   765   000FBB                     CCPR2           equ	4027	;# 
   766   000FBB                     CCPR2L          equ	4027	;# 
   767   000FBC                     CCPR2H          equ	4028	;# 
   768   000FBD                     CCP1CON         equ	4029	;# 
   769   000FBE                     CCPR1           equ	4030	;# 
   770   000FBE                     CCPR1L          equ	4030	;# 
   771   000FBF                     CCPR1H          equ	4031	;# 
   772   000FC0                     ADCON2          equ	4032	;# 
   773   000FC1                     ADCON1          equ	4033	;# 
   774   000FC2                     ADCON0          equ	4034	;# 
   775   000FC3                     ADRES           equ	4035	;# 
   776   000FC3                     ADRESL          equ	4035	;# 
   777   000FC4                     ADRESH          equ	4036	;# 
   778   000FC5                     SSPCON2         equ	4037	;# 
   779   000FC6                     SSPCON1         equ	4038	;# 
   780   000FC7                     SSPSTAT         equ	4039	;# 
   781   000FC8                     SSPADD          equ	4040	;# 
   782   000FC9                     SSPBUF          equ	4041	;# 
   783   000FCA                     T2CON           equ	4042	;# 
   784   000FCB                     PR2             equ	4043	;# 
   785   000FCB                     MEMCON          equ	4043	;# 
   786   000FCC                     TMR2            equ	4044	;# 
   787   000FCD                     T1CON           equ	4045	;# 
   788   000FCE                     TMR1            equ	4046	;# 
   789   000FCE                     TMR1L           equ	4046	;# 
   790   000FCF                     TMR1H           equ	4047	;# 
   791   000FD0                     RCON            equ	4048	;# 
   792   000FD1                     WDTCON          equ	4049	;# 
   793   000FD2                     HLVDCON         equ	4050	;# 
   794   000FD2                     LVDCON          equ	4050	;# 
   795   000FD3                     OSCCON          equ	4051	;# 
   796   000FD5                     T0CON           equ	4053	;# 
   797   000FD6                     TMR0            equ	4054	;# 
   798   000FD6                     TMR0L           equ	4054	;# 
   799   000FD7                     TMR0H           equ	4055	;# 
   800   000FD8                     STATUS          equ	4056	;# 
   801   000FD9                     FSR2            equ	4057	;# 
   802   000FD9                     FSR2L           equ	4057	;# 
   803   000FDA                     FSR2H           equ	4058	;# 
   804   000FDB                     PLUSW2          equ	4059	;# 
   805   000FDC                     PREINC2         equ	4060	;# 
   806   000FDD                     POSTDEC2        equ	4061	;# 
   807   000FDE                     POSTINC2        equ	4062	;# 
   808   000FDF                     INDF2           equ	4063	;# 
   809   000FE0                     BSR             equ	4064	;# 
   810   000FE1                     FSR1            equ	4065	;# 
   811   000FE1                     FSR1L           equ	4065	;# 
   812   000FE2                     FSR1H           equ	4066	;# 
   813   000FE3                     PLUSW1          equ	4067	;# 
   814   000FE4                     PREINC1         equ	4068	;# 
   815   000FE5                     POSTDEC1        equ	4069	;# 
   816   000FE6                     POSTINC1        equ	4070	;# 
   817   000FE7                     INDF1           equ	4071	;# 
   818   000FE8                     WREG            equ	4072	;# 
   819   000FE9                     FSR0            equ	4073	;# 
   820   000FE9                     FSR0L           equ	4073	;# 
   821   000FEA                     FSR0H           equ	4074	;# 
   822   000FEB                     PLUSW0          equ	4075	;# 
   823   000FEC                     PREINC0         equ	4076	;# 
   824   000FED                     POSTDEC0        equ	4077	;# 
   825   000FEE                     POSTINC0        equ	4078	;# 
   826   000FEF                     INDF0           equ	4079	;# 
   827   000FF0                     INTCON3         equ	4080	;# 
   828   000FF1                     INTCON2         equ	4081	;# 
   829   000FF2                     INTCON          equ	4082	;# 
   830   000FF3                     PROD            equ	4083	;# 
   831   000FF3                     PRODL           equ	4083	;# 
   832   000FF4                     PRODH           equ	4084	;# 
   833   000FF5                     TABLAT          equ	4085	;# 
   834   000FF6                     TBLPTR          equ	4086	;# 
   835   000FF6                     TBLPTRL         equ	4086	;# 
   836   000FF7                     TBLPTRH         equ	4087	;# 
   837   000FF8                     TBLPTRU         equ	4088	;# 
   838   000FF9                     PCLAT           equ	4089	;# 
   839   000FF9                     PC              equ	4089	;# 
   840   000FF9                     PCL             equ	4089	;# 
   841   000FFA                     PCLATH          equ	4090	;# 
   842   000FFB                     PCLATU          equ	4091	;# 
   843   000FFC                     STKPTR          equ	4092	;# 
   844   000FFD                     TOS             equ	4093	;# 
   845   000FFD                     TOSL            equ	4093	;# 
   846   000FFE                     TOSH            equ	4094	;# 
   847   000FFF                     TOSU            equ	4095	;# 
   848                           
   849                           	psect	smallconst
   850   001000                     __psmallconst:
   851                           	callstack 0
   852   001000  00                 	db	0
   853   001001                     _default_security_key:
   854                           	callstack 0
   855   001001  00                 	db	0
   856   001002  10                 	db	16
   857   001003  25                 	db	37
   858   001004  37                 	db	55
   859   001005  04                 	db	4
   860   001006  55                 	db	85
   861   001007  06                 	db	6
   862   001008  79                 	db	121
   863   001009  08                 	db	8
   864   00100A  09                 	db	9
   865   00100B  10                 	db	16
   866   00100C  11                 	db	17
   867   00100D  12                 	db	18
   868   00100E  13                 	db	19
   869   00100F  14                 	db	20
   870   001010  15                 	db	21
   871   001011                     __end_of_default_security_key:
   872                           	callstack 0
   873   001011                     _default_mac_address:
   874                           	callstack 0
   875   001011  11                 	db	17
   876   001012  28                 	db	40
   877   001013  35                 	db	53
   878   001014  44                 	db	68
   879   001015  56                 	db	86
   880   001016  66                 	db	102
   881   001017  77                 	db	119
   882   001018  01                 	db	1
   883   001019                     __end_of_default_mac_address:
   884                           	callstack 0
   885   007CED                     _RCIE           set	31981
   886   007CEE                     _ADIE           set	31982
   887   007D03                     _BCLIE          set	32003
   888   007CEB                     _SSPIE          set	31979
   889   007D04                     _EEIE           set	32004
   890   007D00                     _CCP2IE         set	32000
   891   007CEA                     _CCP1IE         set	31978
   892   007CE9                     _TMR2IE         set	31977
   893   007CE8                     _TMR1IE         set	31976
   894   007F95                     _T0IE           set	32661
   895   007F93                     _RBIE           set	32659
   896   007F96                     _PEIE           set	32662
   897   007F97                     _GIE            set	32663
   898   000F9B                     _OSCTUNE        set	3995
   899   000FD3                     _OSCCON         set	4051
   900   000F96                     _TRISEbits      set	3990
   901   000F84                     _PORTE          set	3972
   902   000F83                     _PORTD          set	3971
   903   000F82                     _PORTC          set	3970
   904   000F81                     _PORTB          set	3969
   905   000F80                     _PORTA          set	3968
   906   000F8D                     _LATEbits       set	3981
   907   000FC9                     _SSPBUF         set	4041
   908   000F9E                     _PIR1bits       set	3998
   909   000FC6                     _SSPCON1bits    set	4038
   910   000FC7                     _SSPSTATbits    set	4039
   911   000F8C                     _LATDbits       set	3980
   912   000F8B                     _LATCbits       set	3979
   913   000F95                     _TRISDbits      set	3989
   914   000F94                     _TRISCbits      set	3988
   915   000F93                     _TRISBbits      set	3987
   916   001019                     STR_1:
   917   001019  68                 	db	104	;'h'
   918   00101A  6F                 	db	111	;'o'
   919   00101B  6C                 	db	108	;'l'
   920   00101C  61                 	db	97	;'a'
   921   00101D  20                 	db	32
   922   00101E  6D                 	db	109	;'m'
   923   00101F  75                 	db	117	;'u'
   924   001020  6E                 	db	110	;'n'
   925   001021  64                 	db	100	;'d'
   926   001022  6F                 	db	111	;'o'
   927   001023  2E                 	db	46
   928   001024  20                 	db	32
   929   001025  63                 	db	99	;'c'
   930   001026  61                 	db	97	;'a'
   931   001027  72                 	db	114	;'r'
   932   001028  61                 	db	97	;'a'
   933   001029  6A                 	db	106	;'j'
   934   00102A  6F                 	db	111	;'o'
   935   00102B  00                 	db	0
   936   00102C  00                 	db	0	; dummy byte at the end
   937   000001                     __activetblptr  equ	1
   938                           
   939                           ; #config settings
   940                           
   941                           	psect	cinit
   942   0015B2                     __pcinit:
   943                           	callstack 0
   944   0015B2                     start_initialization:
   945                           	callstack 0
   946   0015B2                     __initialization:
   947                           	callstack 0
   948                           
   949                           ; Clear objects allocated to BANK0 (55 bytes)
   950   0015B2  EE00  F060         	lfsr	0,__pbssBANK0
   951   0015B6  0E37               	movlw	55
   952   0015B8                     clear_0:
   953   0015B8  6AEE               	clrf	postinc0,c
   954   0015BA  06E8               	decf	wreg,f,c
   955   0015BC  E1FD               	bnz	clear_0
   956                           
   957                           ; Clear objects allocated to COMRAM (41 bytes)
   958   0015BE  EE00  F001         	lfsr	0,__pbssCOMRAM
   959   0015C2  0E29               	movlw	41
   960   0015C4                     clear_1:
   961   0015C4  6AEE               	clrf	postinc0,c
   962   0015C6  06E8               	decf	wreg,f,c
   963   0015C8  E1FD               	bnz	clear_1
   964   0015CA                     end_of_initialization:
   965                           	callstack 0
   966   0015CA                     __end_of__initialization:
   967                           	callstack 0
   968   0015CA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   969   0015CC  6EF8               	movwf	tblptru,c
   970   0015CE  0E10               	movlw	high __Lsmallconst
   971   0015D0  6EF7               	movwf	tblptrh,c
   972   0015D2  0100               	movlb	0
   973   0015D4  EF5B  F009         	goto	_main	;jump to C main() function
   974                           
   975                           	psect	bssCOMRAM
   976   000001                     __pbssCOMRAM:
   977                           	callstack 0
   978   000001                     _mrf24_data_config:
   979                           	callstack 0
   980   000001                     	ds	34
   981   000023                     _mrf24_data_out:
   982                           	callstack 0
   983   000023                     	ds	6
   984   000029                     _my_default_mac_address:
   985                           	callstack 0
   986   000029                     	ds	1
   987                           
   988                           	psect	bssBANK0
   989   000060                     __pbssBANK0:
   990                           	callstack 0
   991   000060                     _mrf24_data_in:
   992                           	callstack 0
   993   000060                     	ds	55
   994                           
   995                           	psect	cstackCOMRAM
   996   00002A                     __pcstackCOMRAM:
   997                           	callstack 0
   998   00002A                     ?_strlen:
   999                           	callstack 0
  1000   00002A                     SetCSPin@estado:
  1001                           	callstack 0
  1002   00002A                     SetWakePin@estado:
  1003                           	callstack 0
  1004   00002A                     SetResetPin@estado:
  1005                           	callstack 0
  1006   00002A                     SPIWriteByte@dato:
  1007                           	callstack 0
  1008   00002A                     strlen@s:
  1009                           	callstack 0
  1010   00002A                     ??_InicializoVariables:
  1011   00002A                     
  1012                           ; 1 bytes @ 0x0
  1013   00002A                     	ds	1
  1014   00002B                     WriteByteSPIPort@dato:
  1015                           	callstack 0
  1016   00002B                     InicializoVariables@i:
  1017                           	callstack 0
  1018   00002B                     
  1019                           ; 1 bytes @ 0x1
  1020   00002B                     	ds	1
  1021   00002C                     SetShortAddr@value:
  1022                           	callstack 0
  1023   00002C                     GetShortAddr@leido_spi:
  1024                           	callstack 0
  1025   00002C                     strlen@a:
  1026                           	callstack 0
  1027   00002C                     SetLongAddr@reg_address:
  1028                           	callstack 0
  1029   00002C                     GetLongAddr@reg_address:
  1030                           	callstack 0
  1031   00002C                     
  1032                           ; 1 bytes @ 0x2
  1033   00002C                     	ds	1
  1034   00002D                     SetShortAddr@reg_address:
  1035                           	callstack 0
  1036   00002D                     GetShortAddr@reg_address:
  1037                           	callstack 0
  1038   00002D                     SetMensajeSalida@mensaje:
  1039                           	callstack 0
  1040   00002D                     
  1041                           ; 1 bytes @ 0x3
  1042   00002D                     	ds	1
  1043   00002E                     SetLongAddr@value:
  1044                           	callstack 0
  1045   00002E                     SetDeviceMACAddress@i:
  1046                           	callstack 0
  1047   00002E                     ??_GetLongAddr:
  1048   00002E                     
  1049                           ; 1 bytes @ 0x4
  1050   00002E                     	ds	1
  1051   00002F                     ??_SetLongAddr:
  1052                           
  1053                           ; 1 bytes @ 0x5
  1054   00002F                     	ds	1
  1055   000030                     GetLongAddr@toReturn:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x6
  1059   000030                     	ds	1
  1060   000031                     ??_MRF24J40Init:
  1061   000031                     ??_EnviarDato:
  1062                           
  1063                           ; 1 bytes @ 0x7
  1064   000031                     	ds	1
  1065   000032                     MRF24J40Init@lectura:
  1066                           	callstack 0
  1067   000032                     EnviarDato@i:
  1068                           	callstack 0
  1069                           
  1070                           ; 1 bytes @ 0x8
  1071   000032                     	ds	1
  1072   000033                     EnviarDato@pos:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x9
  1076   000033                     	ds	1
  1077   000034                     ??_main:
  1078                           
  1079                           ; 1 bytes @ 0xA
  1080   000034                     	ds	2
  1081                           
  1082 ;;
  1083 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1084 ;;
  1085 ;; *************** function _main *****************
  1086 ;; Defined at:
  1087 ;;		line 23 in file "main.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;Total ram usage:        2 bytes
  1106 ;; Hardware stack levels required when called: 5
  1107 ;; This function calls:
  1108 ;;		_BoardInit
  1109 ;;		_EnviarDato
  1110 ;;		_MRF24J40Init
  1111 ;;		_SetMensajeSalida
  1112 ;; This function is called by:
  1113 ;;		Startup code after reset
  1114 ;; This function uses a non-reentrant model
  1115 ;;
  1116                           
  1117                           	psect	text0
  1118   0012B6                     __ptext0:
  1119                           	callstack 0
  1120   0012B6                     _main:
  1121                           	callstack 26
  1122   0012B6                     
  1123                           ;main.c: 25:     BoardInit();
  1124   0012B6  EC77  F00A         	call	_BoardInit	;wreg free
  1125   0012BA                     
  1126                           ;main.c: 26:     MRF24J40Init();
  1127   0012BA  EC17  F008         	call	_MRF24J40Init	;wreg free
  1128   0012BE                     
  1129                           ;main.c: 28:     SetMensajeSalida("hola mundo. carajo");
  1130   0012BE  0E19               	movlw	low STR_1
  1131   0012C0  6E2D               	movwf	SetMensajeSalida@mensaje^0,c
  1132   0012C2  EC42  F00B         	call	_SetMensajeSalida	;wreg free
  1133   0012C6                     l209:
  1134   0012C6  0004               	clrwdt		;# 
  1135   0012C8                     
  1136                           ;main.c: 34:         LATEbits.LATE2 = !LATEbits.LATE2;
  1137   0012C8  A48D               	btfss	141,2,c	;volatile
  1138   0012CA  EF69  F009         	goto	u491
  1139   0012CE  EF6D  F009         	goto	u490
  1140   0012D2                     u491:
  1141   0012D2  6A34               	clrf	??_main^0,c
  1142   0012D4  2A34               	incf	??_main^0,f,c
  1143   0012D6  EF6E  F009         	goto	u508
  1144   0012DA                     u490:
  1145   0012DA  6A34               	clrf	??_main^0,c
  1146   0012DC                     u508:
  1147   0012DC  4634               	rlncf	??_main^0,f,c
  1148   0012DE  4634               	rlncf	??_main^0,f,c
  1149   0012E0  508D               	movf	141,w,c	;volatile
  1150   0012E2  1834               	xorwf	??_main^0,w,c
  1151   0012E4  0BFB               	andlw	-5
  1152   0012E6  1834               	xorwf	??_main^0,w,c
  1153   0012E8  6E8D               	movwf	141,c	;volatile
  1154   0012EA                     
  1155                           ;main.c: 35:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1156   0012EA  0E06               	movlw	6
  1157   0012EC  6E35               	movwf	(??_main+1)^0,c
  1158   0012EE  0E13               	movlw	19
  1159   0012F0  6E34               	movwf	??_main^0,c
  1160   0012F2  0EAE               	movlw	174
  1161   0012F4                     u557:
  1162   0012F4  2EE8               	decfsz	wreg,f,c
  1163   0012F6  D7FE               	bra	u557
  1164   0012F8  2E34               	decfsz	??_main^0,f,c
  1165   0012FA  D7FC               	bra	u557
  1166   0012FC  2E35               	decfsz	(??_main+1)^0,f,c
  1167   0012FE  D7FA               	bra	u557
  1168   001300                     
  1169                           ;main.c: 36:         LATEbits.LATE1 = !LATEbits.LATE1;
  1170   001300  A28D               	btfss	141,1,c	;volatile
  1171   001302  EF85  F009         	goto	u511
  1172   001306  EF89  F009         	goto	u510
  1173   00130A                     u511:
  1174   00130A  6A34               	clrf	??_main^0,c
  1175   00130C  2A34               	incf	??_main^0,f,c
  1176   00130E  EF8A  F009         	goto	u528
  1177   001312                     u510:
  1178   001312  6A34               	clrf	??_main^0,c
  1179   001314                     u528:
  1180   001314  4634               	rlncf	??_main^0,f,c
  1181   001316  508D               	movf	141,w,c	;volatile
  1182   001318  1834               	xorwf	??_main^0,w,c
  1183   00131A  0BFD               	andlw	-3
  1184   00131C  1834               	xorwf	??_main^0,w,c
  1185   00131E  6E8D               	movwf	141,c	;volatile
  1186   001320                     
  1187                           ;main.c: 37:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1188   001320  0E06               	movlw	6
  1189   001322  6E35               	movwf	(??_main+1)^0,c
  1190   001324  0E13               	movlw	19
  1191   001326  6E34               	movwf	??_main^0,c
  1192   001328  0EAE               	movlw	174
  1193   00132A                     u567:
  1194   00132A  2EE8               	decfsz	wreg,f,c
  1195   00132C  D7FE               	bra	u567
  1196   00132E  2E34               	decfsz	??_main^0,f,c
  1197   001330  D7FC               	bra	u567
  1198   001332  2E35               	decfsz	(??_main+1)^0,f,c
  1199   001334  D7FA               	bra	u567
  1200   001336                     
  1201                           ;main.c: 38:         LATEbits.LATE0 = !LATEbits.LATE0;
  1202   001336  A08D               	btfss	141,0,c	;volatile
  1203   001338  EFA0  F009         	goto	u531
  1204   00133C  EFA4  F009         	goto	u530
  1205   001340                     u531:
  1206   001340  6A34               	clrf	??_main^0,c
  1207   001342  2A34               	incf	??_main^0,f,c
  1208   001344  EFA5  F009         	goto	u548
  1209   001348                     u530:
  1210   001348  6A34               	clrf	??_main^0,c
  1211   00134A                     u548:
  1212   00134A  508D               	movf	141,w,c	;volatile
  1213   00134C  1834               	xorwf	??_main^0,w,c
  1214   00134E  0BFE               	andlw	-2
  1215   001350  1834               	xorwf	??_main^0,w,c
  1216   001352  6E8D               	movwf	141,c	;volatile
  1217   001354                     
  1218                           ;main.c: 39:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1219   001354  0E06               	movlw	6
  1220   001356  6E35               	movwf	(??_main+1)^0,c
  1221   001358  0E13               	movlw	19
  1222   00135A  6E34               	movwf	??_main^0,c
  1223   00135C  0EAE               	movlw	174
  1224   00135E                     u577:
  1225   00135E  2EE8               	decfsz	wreg,f,c
  1226   001360  D7FE               	bra	u577
  1227   001362  2E34               	decfsz	??_main^0,f,c
  1228   001364  D7FC               	bra	u577
  1229   001366  2E35               	decfsz	(??_main+1)^0,f,c
  1230   001368  D7FA               	bra	u577
  1231   00136A                     
  1232                           ;main.c: 41:         EnviarDato();
  1233   00136A  ECD0  F008         	call	_EnviarDato	;wreg free
  1234   00136E  EF63  F009         	goto	l209
  1235   001372  EF00  F000         	goto	start
  1236   001376                     __end_of_main:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _SetMensajeSalida *****************
  1240 ;; Defined at:
  1241 ;;		line 632 in file "drivers/scr/drv_mrf24j40.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  1244 ;;		 -> STR_1(19), 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;		None
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1256 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;Total ram usage:        1 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; Hardware stack levels required when called: 1
  1263 ;; This function calls:
  1264 ;;		_strlen
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text1
  1271   001684                     __ptext1:
  1272                           	callstack 0
  1273   001684                     _SetMensajeSalida:
  1274                           	callstack 29
  1275   001684                     
  1276                           ;drivers/scr/drv_mrf24j40.c: 635: mrf24_data_out.buffer_salida = mensaje;
  1277   001684  C02D  F028         	movff	SetMensajeSalida@mensaje,_mrf24_data_out+5
  1278   001688                     
  1279                           ;drivers/scr/drv_mrf24j40.c: 636: mrf24_data_out.tamano_mensaje = (uint8_t) strlen(mensa
      +                          je);
  1280   001688  C02D  F02A         	movff	SetMensajeSalida@mensaje,strlen@s
  1281   00168C  EC96  F00A         	call	_strlen	;wreg free
  1282   001690  502A               	movf	?_strlen^0,w,c
  1283   001692  6E27               	movwf	(_mrf24_data_out+4)^0,c
  1284   001694  0012               	return		;funcret
  1285   001696                     __end_of_SetMensajeSalida:
  1286                           	callstack 0
  1287                           
  1288 ;; *************** function _strlen *****************
  1289 ;; Defined at:
  1290 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1293 ;;		 -> STR_1(19), 
  1294 ;; Auto vars:     Size  Location     Type
  1295 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1296 ;;		 -> STR_1(19), 
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  2    0[COMRAM] unsigned int 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1306 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;Total ram usage:        3 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; This function calls:
  1313 ;;		Nothing
  1314 ;; This function is called by:
  1315 ;;		_SetMensajeSalida
  1316 ;; This function uses a non-reentrant model
  1317 ;;
  1318                           
  1319                           	psect	text2
  1320   00152C                     __ptext2:
  1321                           	callstack 0
  1322   00152C                     _strlen:
  1323                           	callstack 29
  1324   00152C  C02A  F02C         	movff	strlen@s,strlen@a
  1325   001530  EF9B  F00A         	goto	l1579
  1326   001534                     l1577:
  1327   001534  2A2A               	incf	strlen@s^0,f,c
  1328   001536                     l1579:
  1329   001536  C02A  FFF6         	movff	strlen@s,tblptrl
  1330   00153A                     	if	0	;There is only one active tblptr byte
  1331   00153A                     	endif
  1332   00153A                     	if	0	;tblptru may be non-zero
  1333   00153A                     	endif
  1334   00153A                     	if	0	;tblptru may be non-zero
  1335   00153A                     	endif
  1336   00153A  0008               	tblrd		*
  1337   00153C  50F5               	movf	tablat,w,c
  1338   00153E  0900               	iorlw	0
  1339   001540  A4D8               	btfss	status,2,c
  1340   001542  EFA5  F00A         	goto	u381
  1341   001546  EFA7  F00A         	goto	u380
  1342   00154A                     u381:
  1343   00154A  EF9A  F00A         	goto	l1577
  1344   00154E                     u380:
  1345   00154E  502C               	movf	strlen@a^0,w,c
  1346   001550  5C2A               	subwf	strlen@s^0,w,c
  1347   001552  6E2A               	movwf	?_strlen^0,c
  1348   001554  6A2B               	clrf	(?_strlen+1)^0,c
  1349   001556  BE2A               	btfsc	?_strlen^0,7,c
  1350   001558  062B               	decf	(?_strlen+1)^0,f,c
  1351   00155A  0012               	return		;funcret
  1352   00155C                     __end_of_strlen:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _MRF24J40Init *****************
  1356 ;; Defined at:
  1357 ;;		line 277 in file "drivers/scr/drv_mrf24j40.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;  lectura         1    8[COMRAM] unsigned char 
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1372 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1373 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;Total ram usage:        2 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 4
  1378 ;; This function calls:
  1379 ;;		_GetLongAddr
  1380 ;;		_GetShortAddr
  1381 ;;		_InicializoPines
  1382 ;;		_InicializoVariables
  1383 ;;		_SetChannel
  1384 ;;		_SetDeviceAddress
  1385 ;;		_SetDeviceMACAddress
  1386 ;;		_SetLongAddr
  1387 ;;		_SetResetPin
  1388 ;;		_SetShortAddr
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text3
  1395   00102E                     __ptext3:
  1396                           	callstack 0
  1397   00102E                     _MRF24J40Init:
  1398                           	callstack 26
  1399   00102E                     
  1400                           ;drivers/scr/drv_mrf24j40.c: 279:     uint8_t lectura;;drivers/scr/drv_mrf24j40.c: 280: 
      +                              InicializoVariables();
  1401   00102E  ECBB  F009         	call	_InicializoVariables	;wreg free
  1402   001032                     
  1403                           ;drivers/scr/drv_mrf24j40.c: 281:     InicializoPines();
  1404   001032  EC0F  F00B         	call	_InicializoPines	;wreg free
  1405   001036                     
  1406                           ;drivers/scr/drv_mrf24j40.c: 282:   _delay((unsigned long)((5)*(16000000/4000.0)));;
  1407   001036  0E1A               	movlw	26
  1408   001038  6E31               	movwf	??_MRF24J40Init^0,c
  1409   00103A  0EF8               	movlw	248
  1410   00103C                     u587:
  1411   00103C  2EE8               	decfsz	wreg,f,c
  1412   00103E  D7FE               	bra	u587
  1413   001040  2E31               	decfsz	??_MRF24J40Init^0,f,c
  1414   001042  D7FC               	bra	u587
  1415   001044  F000 F000          	nop2	
  1416   001048                     
  1417                           ;drivers/scr/drv_mrf24j40.c: 283:     SetResetPin(1);
  1418   001048  0E01               	movlw	1
  1419   00104A  EC52  F00B         	call	_SetResetPin
  1420   00104E                     
  1421                           ;drivers/scr/drv_mrf24j40.c: 284:  _delay((unsigned long)((5)*(16000000/4000.0)));;
  1422   00104E  0E1A               	movlw	26
  1423   001050  6E31               	movwf	??_MRF24J40Init^0,c
  1424   001052  0EF8               	movlw	248
  1425   001054                     u597:
  1426   001054  2EE8               	decfsz	wreg,f,c
  1427   001056  D7FE               	bra	u597
  1428   001058  2E31               	decfsz	??_MRF24J40Init^0,f,c
  1429   00105A  D7FC               	bra	u597
  1430   00105C  F000 F000          	nop2	
  1431   001060                     
  1432                           ;drivers/scr/drv_mrf24j40.c: 285:     SetShortAddr((0x2A),0x07);
  1433   001060  0E07               	movlw	7
  1434   001062  6E2C               	movwf	SetShortAddr@value^0,c
  1435   001064  0E2A               	movlw	42
  1436   001066  ECFF  F00A         	call	_SetShortAddr
  1437   00106A                     l1597:
  1438                           
  1439                           ;drivers/scr/drv_mrf24j40.c: 288:         lectura = GetShortAddr((0x2A));
  1440   00106A  0E2A               	movlw	42
  1441   00106C  ECEC  F00A         	call	_GetShortAddr
  1442   001070  6E32               	movwf	MRF24J40Init@lectura^0,c
  1443   001072                     
  1444                           ;drivers/scr/drv_mrf24j40.c: 289:     }while((lectura&0x07) != 0x00);
  1445   001072  C032  F031         	movff	MRF24J40Init@lectura,??_MRF24J40Init
  1446   001076  0E07               	movlw	7
  1447   001078  1631               	andwf	??_MRF24J40Init^0,f,c
  1448   00107A  A4D8               	btfss	status,2,c
  1449   00107C  EF42  F008         	goto	u391
  1450   001080  EF44  F008         	goto	u390
  1451   001084                     u391:
  1452   001084  EF35  F008         	goto	l1597
  1453   001088                     u390:
  1454   001088                     
  1455                           ;drivers/scr/drv_mrf24j40.c: 290:     _delay((unsigned long)((10)*(16000000/4000.0)));;
  1456   001088  0E34               	movlw	52
  1457   00108A  6E31               	movwf	??_MRF24J40Init^0,c
  1458   00108C  0EF2               	movlw	242
  1459   00108E                     u607:
  1460   00108E  2EE8               	decfsz	wreg,f,c
  1461   001090  D7FE               	bra	u607
  1462   001092  2E31               	decfsz	??_MRF24J40Init^0,f,c
  1463   001094  D7FC               	bra	u607
  1464   001096                     
  1465                           ;drivers/scr/drv_mrf24j40.c: 291:     SetShortAddr((0x0D), 0x01);
  1466   001096  0E01               	movlw	1
  1467   001098  6E2C               	movwf	SetShortAddr@value^0,c
  1468   00109A  0E0D               	movlw	13
  1469   00109C  ECFF  F00A         	call	_SetShortAddr
  1470   0010A0                     
  1471                           ;drivers/scr/drv_mrf24j40.c: 292:     SetDeviceAddress();
  1472   0010A0  ECC4  F00A         	call	_SetDeviceAddress	;wreg free
  1473   0010A4                     
  1474                           ;drivers/scr/drv_mrf24j40.c: 293:     SetDeviceMACAddress();
  1475   0010A4  EC35  F00A         	call	_SetDeviceMACAddress	;wreg free
  1476   0010A8                     
  1477                           ;drivers/scr/drv_mrf24j40.c: 294:     SetLongAddr((0x202), 0x80);
  1478   0010A8  0E02               	movlw	2
  1479   0010AA  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1480   0010AC  0E02               	movlw	2
  1481   0010AE  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1482   0010B0  0E80               	movlw	128
  1483   0010B2  6E2E               	movwf	SetLongAddr@value^0,c
  1484   0010B4  EC56  F00A         	call	_SetLongAddr	;wreg free
  1485   0010B8                     
  1486                           ;drivers/scr/drv_mrf24j40.c: 295:     SetLongAddr((0x203), (0XC0) | (0X38));
  1487   0010B8  0E02               	movlw	2
  1488   0010BA  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1489   0010BC  0E03               	movlw	3
  1490   0010BE  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1491   0010C0  0EF8               	movlw	248
  1492   0010C2  6E2E               	movwf	SetLongAddr@value^0,c
  1493   0010C4  EC56  F00A         	call	_SetLongAddr	;wreg free
  1494   0010C8                     
  1495                           ;drivers/scr/drv_mrf24j40.c: 296:  SetLongAddr((0x206), 0x90);
  1496   0010C8  0E02               	movlw	2
  1497   0010CA  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1498   0010CC  0E06               	movlw	6
  1499   0010CE  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1500   0010D0  0E90               	movlw	144
  1501   0010D2  6E2E               	movwf	SetLongAddr@value^0,c
  1502   0010D4  EC56  F00A         	call	_SetLongAddr	;wreg free
  1503   0010D8                     
  1504                           ;drivers/scr/drv_mrf24j40.c: 297:  SetLongAddr((0x207), 0x80);
  1505   0010D8  0E02               	movlw	2
  1506   0010DA  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1507   0010DC  0E07               	movlw	7
  1508   0010DE  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1509   0010E0  0E80               	movlw	128
  1510   0010E2  6E2E               	movwf	SetLongAddr@value^0,c
  1511   0010E4  EC56  F00A         	call	_SetLongAddr	;wreg free
  1512   0010E8                     
  1513                           ;drivers/scr/drv_mrf24j40.c: 298:  SetLongAddr((0x208), 0x10);
  1514   0010E8  0E02               	movlw	2
  1515   0010EA  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1516   0010EC  0E08               	movlw	8
  1517   0010EE  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1518   0010F0  0E10               	movlw	16
  1519   0010F2  6E2E               	movwf	SetLongAddr@value^0,c
  1520   0010F4  EC56  F00A         	call	_SetLongAddr	;wreg free
  1521   0010F8                     
  1522                           ;drivers/scr/drv_mrf24j40.c: 299:  SetLongAddr((0x220), 0x21);
  1523   0010F8  0E02               	movlw	2
  1524   0010FA  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1525   0010FC  0E20               	movlw	32
  1526   0010FE  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1527   001100  0E21               	movlw	33
  1528   001102  6E2E               	movwf	SetLongAddr@value^0,c
  1529   001104  EC56  F00A         	call	_SetLongAddr	;wreg free
  1530   001108                     
  1531                           ;drivers/scr/drv_mrf24j40.c: 300:     SetShortAddr((0x3A), 0x80);
  1532   001108  0E80               	movlw	128
  1533   00110A  6E2C               	movwf	SetShortAddr@value^0,c
  1534   00110C  0E3A               	movlw	58
  1535   00110E  ECFF  F00A         	call	_SetShortAddr
  1536   001112                     
  1537                           ;drivers/scr/drv_mrf24j40.c: 301:     SetShortAddr((0x3E), 0x40);
  1538   001112  0E40               	movlw	64
  1539   001114  6E2C               	movwf	SetShortAddr@value^0,c
  1540   001116  0E3E               	movlw	62
  1541   001118  ECFF  F00A         	call	_SetShortAddr
  1542   00111C                     
  1543                           ;drivers/scr/drv_mrf24j40.c: 302:     SetShortAddr((0x3F), 0x60);
  1544   00111C  0E60               	movlw	96
  1545   00111E  6E2C               	movwf	SetShortAddr@value^0,c
  1546   001120  0E3F               	movlw	63
  1547   001122  ECFF  F00A         	call	_SetShortAddr
  1548   001126                     
  1549                           ;drivers/scr/drv_mrf24j40.c: 303:     SetShortAddr((0x18), 0x98);
  1550   001126  0E98               	movlw	152
  1551   001128  6E2C               	movwf	SetShortAddr@value^0,c
  1552   00112A  0E18               	movlw	24
  1553   00112C  ECFF  F00A         	call	_SetShortAddr
  1554   001130                     
  1555                           ;drivers/scr/drv_mrf24j40.c: 304:     SetShortAddr((0x2E), 0x95);
  1556   001130  0E95               	movlw	149
  1557   001132  6E2C               	movwf	SetShortAddr@value^0,c
  1558   001134  0E2E               	movlw	46
  1559   001136  ECFF  F00A         	call	_SetShortAddr
  1560   00113A                     l1631:
  1561                           
  1562                           ;drivers/scr/drv_mrf24j40.c: 307:   lectura = GetLongAddr((0x20f));
  1563   00113A  0E02               	movlw	2
  1564   00113C  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  1565   00113E  0E0F               	movlw	15
  1566   001140  6E2C               	movwf	GetLongAddr@reg_address^0,c
  1567   001142  EC13  F00A         	call	_GetLongAddr	;wreg free
  1568   001146  6E32               	movwf	MRF24J40Init@lectura^0,c
  1569   001148                     
  1570                           ;drivers/scr/drv_mrf24j40.c: 308:  }while((lectura & 0xA0) != 0xA0);
  1571   001148  5032               	movf	MRF24J40Init@lectura^0,w,c
  1572   00114A  0BA0               	andlw	160
  1573   00114C  0AA0               	xorlw	160
  1574   00114E  A4D8               	btfss	status,2,c
  1575   001150  EFAC  F008         	goto	u401
  1576   001154  EFAE  F008         	goto	u400
  1577   001158                     u401:
  1578   001158  EF9D  F008         	goto	l1631
  1579   00115C                     u400:
  1580   00115C                     
  1581                           ;drivers/scr/drv_mrf24j40.c: 309:     SetShortAddr((0x32), 0xE6);
  1582   00115C  0EE6               	movlw	230
  1583   00115E  6E2C               	movwf	SetShortAddr@value^0,c
  1584   001160  0E32               	movlw	50
  1585   001162  ECFF  F00A         	call	_SetShortAddr
  1586                           
  1587                           ;drivers/scr/drv_mrf24j40.c: 310:  SetShortAddr((0x12), 0xB9);
  1588   001166  0EB9               	movlw	185
  1589   001168  6E2C               	movwf	SetShortAddr@value^0,c
  1590   00116A  0E12               	movlw	18
  1591   00116C  ECFF  F00A         	call	_SetShortAddr
  1592                           
  1593                           ;drivers/scr/drv_mrf24j40.c: 311:     SetLongAddr((0x200), 0x03);
  1594   001170  0E02               	movlw	2
  1595   001172  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1596   001174  0E00               	movlw	0
  1597   001176  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1598   001178  0E03               	movlw	3
  1599   00117A  6E2E               	movwf	SetLongAddr@value^0,c
  1600   00117C  EC56  F00A         	call	_SetLongAddr	;wreg free
  1601                           
  1602                           ;drivers/scr/drv_mrf24j40.c: 312:  SetLongAddr((0x201), 0x02);
  1603   001180  0E02               	movlw	2
  1604   001182  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1605   001184  0E01               	movlw	1
  1606   001186  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1607   001188  0E02               	movlw	2
  1608   00118A  6E2E               	movwf	SetLongAddr@value^0,c
  1609   00118C  EC56  F00A         	call	_SetLongAddr	;wreg free
  1610                           
  1611                           ;drivers/scr/drv_mrf24j40.c: 313:  SetChannel();
  1612   001190  ECAE  F00A         	call	_SetChannel	;wreg free
  1613                           
  1614                           ;drivers/scr/drv_mrf24j40.c: 322:  SetShortAddr((0x00),0x00);
  1615   001194  0E00               	movlw	0
  1616   001196  6E2C               	movwf	SetShortAddr@value^0,c
  1617   001198  0E00               	movlw	0
  1618   00119A  ECFF  F00A         	call	_SetShortAddr
  1619   00119E  0012               	return		;funcret
  1620   0011A0                     __end_of_MRF24J40Init:
  1621                           	callstack 0
  1622                           
  1623 ;; *************** function _SetDeviceMACAddress *****************
  1624 ;; Defined at:
  1625 ;;		line 454 in file "drivers/scr/drv_mrf24j40.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  i               2    4[COMRAM] int 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;Total ram usage:        2 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 3
  1646 ;; This function calls:
  1647 ;;		_SetShortAddr
  1648 ;; This function is called by:
  1649 ;;		_MRF24J40Init
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text4
  1654   00146A                     __ptext4:
  1655                           	callstack 0
  1656   00146A                     _SetDeviceMACAddress:
  1657                           	callstack 26
  1658   00146A                     
  1659                           ;drivers/scr/drv_mrf24j40.c: 456:     my_default_mac_address = EADR0;
  1660   00146A  0E05               	movlw	5
  1661   00146C  6E29               	movwf	_my_default_mac_address^0,c
  1662                           
  1663                           ;drivers/scr/drv_mrf24j40.c: 458:     for(int i = 0; i < 8; i++) {
  1664   00146E  0E00               	movlw	0
  1665   001470  6E2F               	movwf	(SetDeviceMACAddress@i+1)^0,c
  1666   001472  0E00               	movlw	0
  1667   001474  6E2E               	movwf	SetDeviceMACAddress@i^0,c
  1668   001476                     l1545:
  1669                           
  1670                           ;drivers/scr/drv_mrf24j40.c: 460:         SetShortAddr(my_default_mac_address++, mrf24_d
      +                          ata_config.my_mac[i]);
  1671   001476  502E               	movf	SetDeviceMACAddress@i^0,w,c
  1672   001478  0F15               	addlw	low (_mrf24_data_config+20)
  1673   00147A  6ED9               	movwf	fsr2l,c
  1674   00147C  6ADA               	clrf	fsr2h,c
  1675   00147E  50DF               	movf	indf2,w,c
  1676   001480  6E2C               	movwf	SetShortAddr@value^0,c
  1677   001482  5029               	movf	_my_default_mac_address^0,w,c
  1678   001484  ECFF  F00A         	call	_SetShortAddr
  1679   001488  2A29               	incf	_my_default_mac_address^0,f,c
  1680   00148A                     
  1681                           ;drivers/scr/drv_mrf24j40.c: 461:     }
  1682   00148A  4A2E               	infsnz	SetDeviceMACAddress@i^0,f,c
  1683   00148C  2A2F               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  1684   00148E  BE2F               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  1685   001490  EF53  F00A         	goto	u361
  1686   001494  502F               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  1687   001496  E109               	bnz	u360
  1688   001498  0E08               	movlw	8
  1689   00149A  5C2E               	subwf	SetDeviceMACAddress@i^0,w,c
  1690   00149C  A0D8               	btfss	status,0,c
  1691   00149E  EF53  F00A         	goto	u361
  1692   0014A2  EF55  F00A         	goto	u360
  1693   0014A6                     u361:
  1694   0014A6  EF3B  F00A         	goto	l1545
  1695   0014AA                     u360:
  1696   0014AA  0012               	return		;funcret
  1697   0014AC                     __end_of_SetDeviceMACAddress:
  1698                           	callstack 0
  1699                           
  1700 ;; *************** function _SetDeviceAddress *****************
  1701 ;; Defined at:
  1702 ;;		line 440 in file "drivers/scr/drv_mrf24j40.c"
  1703 ;; Parameters:    Size  Location     Type
  1704 ;;		None
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;		None
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  1    wreg      void 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0, cstack
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1720 ;;Total ram usage:        0 bytes
  1721 ;; Hardware stack levels used: 1
  1722 ;; Hardware stack levels required when called: 3
  1723 ;; This function calls:
  1724 ;;		_SetShortAddr
  1725 ;; This function is called by:
  1726 ;;		_MRF24J40Init
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text5
  1731   001588                     __ptext5:
  1732                           	callstack 0
  1733   001588                     _SetDeviceAddress:
  1734                           	callstack 26
  1735   001588                     
  1736                           ;drivers/scr/drv_mrf24j40.c: 442:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> 8));
  1737   001588  5020               	movf	(_mrf24_data_config+31)^0,w,c
  1738   00158A  6E2C               	movwf	SetShortAddr@value^0,c
  1739   00158C  0E04               	movlw	4
  1740   00158E  ECFF  F00A         	call	_SetShortAddr
  1741                           
  1742                           ;drivers/scr/drv_mrf24j40.c: 443:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  1743   001592  C01F  F02C         	movff	_mrf24_data_config+30,SetShortAddr@value
  1744   001596  0E03               	movlw	3
  1745   001598  ECFF  F00A         	call	_SetShortAddr
  1746                           
  1747                           ;drivers/scr/drv_mrf24j40.c: 444:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> 8));
  1748   00159C  501E               	movf	(_mrf24_data_config+29)^0,w,c
  1749   00159E  6E2C               	movwf	SetShortAddr@value^0,c
  1750   0015A0  0E02               	movlw	2
  1751   0015A2  ECFF  F00A         	call	_SetShortAddr
  1752                           
  1753                           ;drivers/scr/drv_mrf24j40.c: 445:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  1754   0015A6  C01D  F02C         	movff	_mrf24_data_config+28,SetShortAddr@value
  1755   0015AA  0E01               	movlw	1
  1756   0015AC  ECFF  F00A         	call	_SetShortAddr
  1757   0015B0  0012               	return		;funcret
  1758   0015B2                     __end_of_SetDeviceAddress:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _SetChannel *****************
  1762 ;; Defined at:
  1763 ;;		line 426 in file "drivers/scr/drv_mrf24j40.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;Total ram usage:        0 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 3
  1784 ;; This function calls:
  1785 ;;		_SetLongAddr
  1786 ;;		_SetShortAddr
  1787 ;; This function is called by:
  1788 ;;		_MRF24J40Init
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text6
  1793   00155C                     __ptext6:
  1794                           	callstack 0
  1795   00155C                     _SetChannel:
  1796                           	callstack 26
  1797   00155C                     
  1798                           ;drivers/scr/drv_mrf24j40.c: 428:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  1799   00155C  0E02               	movlw	2
  1800   00155E  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1801   001560  0E00               	movlw	0
  1802   001562  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1803   001564  C004  F02E         	movff	_mrf24_data_config+3,SetLongAddr@value
  1804   001568  EC56  F00A         	call	_SetLongAddr	;wreg free
  1805                           
  1806                           ;drivers/scr/drv_mrf24j40.c: 429:  SetShortAddr((0x36), 0x04);
  1807   00156C  0E04               	movlw	4
  1808   00156E  6E2C               	movwf	SetShortAddr@value^0,c
  1809   001570  0E36               	movlw	54
  1810   001572  ECFF  F00A         	call	_SetShortAddr
  1811                           
  1812                           ;drivers/scr/drv_mrf24j40.c: 430:  SetShortAddr((0x36), 0x00);
  1813   001576  0E00               	movlw	0
  1814   001578  6E2C               	movwf	SetShortAddr@value^0,c
  1815   00157A  0E36               	movlw	54
  1816   00157C  ECFF  F00A         	call	_SetShortAddr
  1817   001580                     
  1818                           ;drivers/scr/drv_mrf24j40.c: 431:  _delay((unsigned long)((192)*(16000000/4000000.0)));;
  1819   001580  0E00               	movlw	0
  1820   001582                     u617:
  1821   001582  2EE8               	decfsz	wreg,f,c
  1822   001584  D7FE               	bra	u617
  1823   001586  0012               	return		;funcret
  1824   001588                     __end_of_SetChannel:
  1825                           	callstack 0
  1826                           
  1827 ;; *************** function _InicializoVariables *****************
  1828 ;; Defined at:
  1829 ;;		line 332 in file "drivers/scr/drv_mrf24j40.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;		None
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  i               2    1[COMRAM] int 
  1834 ;; Return value:  Size  Location     Type
  1835 ;;                  1    wreg      void 
  1836 ;; Registers used:
  1837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1838 ;; Tracked objects:
  1839 ;;		On entry : 0/0
  1840 ;;		On exit  : 0/0
  1841 ;;		Unchanged: 0/0
  1842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1845 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1846 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1847 ;;Total ram usage:        3 bytes
  1848 ;; Hardware stack levels used: 1
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_MRF24J40Init
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text7
  1857   001376                     __ptext7:
  1858                           	callstack 0
  1859   001376                     _InicializoVariables:
  1860                           	callstack 29
  1861   001376                     
  1862                           ;drivers/scr/drv_mrf24j40.c: 334:     for(int i = 0; i < 16; i++){
  1863   001376  0E00               	movlw	0
  1864   001378  6E2C               	movwf	(InicializoVariables@i+1)^0,c
  1865   00137A  0E00               	movlw	0
  1866   00137C  6E2B               	movwf	InicializoVariables@i^0,c
  1867   00137E                     l1493:
  1868                           
  1869                           ;drivers/scr/drv_mrf24j40.c: 336:         if(i < 8)
  1870   00137E  BE2C               	btfsc	(InicializoVariables@i+1)^0,7,c
  1871   001380  EFCD  F009         	goto	u340
  1872   001384  502C               	movf	(InicializoVariables@i+1)^0,w,c
  1873   001386  E107               	bnz	u341
  1874   001388  0E08               	movlw	8
  1875   00138A  5C2B               	subwf	InicializoVariables@i^0,w,c
  1876   00138C  B0D8               	btfsc	status,0,c
  1877   00138E  EFCB  F009         	goto	u341
  1878   001392  EFCD  F009         	goto	u340
  1879   001396                     u341:
  1880   001396  EFD9  F009         	goto	l54
  1881   00139A                     u340:
  1882   00139A                     
  1883                           ;drivers/scr/drv_mrf24j40.c: 337:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  1884   00139A  502B               	movf	InicializoVariables@i^0,w,c
  1885   00139C  0F11               	addlw	low _default_mac_address
  1886   00139E  6E2A               	movwf	??_InicializoVariables^0,c
  1887   0013A0  C02A  FFF6         	movff	??_InicializoVariables,tblptrl
  1888   0013A4                     	if	0	;There is only one active tblptr byte
  1889   0013A4                     	endif
  1890   0013A4                     	if	0	;tblptru may be non-zero
  1891   0013A4                     	endif
  1892   0013A4                     	if	0	;tblptru may be non-zero
  1893   0013A4                     	endif
  1894   0013A4  502B               	movf	InicializoVariables@i^0,w,c
  1895   0013A6  0F15               	addlw	low (_mrf24_data_config+20)
  1896   0013A8  6ED9               	movwf	fsr2l,c
  1897   0013AA  6ADA               	clrf	fsr2h,c
  1898   0013AC  0008               	tblrd		*
  1899   0013AE  CFF5 FFDF          	movff	tablat,indf2
  1900   0013B2                     l54:
  1901                           
  1902                           ;drivers/scr/drv_mrf24j40.c: 338:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  1903   0013B2  502B               	movf	InicializoVariables@i^0,w,c
  1904   0013B4  0F01               	addlw	low _default_security_key
  1905   0013B6  6E2A               	movwf	??_InicializoVariables^0,c
  1906   0013B8  C02A  FFF6         	movff	??_InicializoVariables,tblptrl
  1907   0013BC                     	if	0	;There is only one active tblptr byte
  1908   0013BC                     	endif
  1909   0013BC                     	if	0	;tblptru may be non-zero
  1910   0013BC                     	endif
  1911   0013BC                     	if	0	;tblptru may be non-zero
  1912   0013BC                     	endif
  1913   0013BC  502B               	movf	InicializoVariables@i^0,w,c
  1914   0013BE  0F05               	addlw	low (_mrf24_data_config+4)
  1915   0013C0  6ED9               	movwf	fsr2l,c
  1916   0013C2  6ADA               	clrf	fsr2h,c
  1917   0013C4  0008               	tblrd		*
  1918   0013C6  CFF5 FFDF          	movff	tablat,indf2
  1919   0013CA                     
  1920                           ;drivers/scr/drv_mrf24j40.c: 339:     }
  1921   0013CA  4A2B               	infsnz	InicializoVariables@i^0,f,c
  1922   0013CC  2A2C               	incf	(InicializoVariables@i+1)^0,f,c
  1923   0013CE  BE2C               	btfsc	(InicializoVariables@i+1)^0,7,c
  1924   0013D0  EFF3  F009         	goto	u351
  1925   0013D4  502C               	movf	(InicializoVariables@i+1)^0,w,c
  1926   0013D6  E109               	bnz	u350
  1927   0013D8  0E10               	movlw	16
  1928   0013DA  5C2B               	subwf	InicializoVariables@i^0,w,c
  1929   0013DC  A0D8               	btfss	status,0,c
  1930   0013DE  EFF3  F009         	goto	u351
  1931   0013E2  EFF5  F009         	goto	u350
  1932   0013E6                     u351:
  1933   0013E6  EFBF  F009         	goto	l1493
  1934   0013EA                     u350:
  1935   0013EA                     
  1936                           ;drivers/scr/drv_mrf24j40.c: 340:     mrf24_data_config.sequence_number = 0x68;
  1937   0013EA  0E68               	movlw	104
  1938   0013EC  6E03               	movwf	(_mrf24_data_config+2)^0,c
  1939                           
  1940                           ;drivers/scr/drv_mrf24j40.c: 341:     mrf24_data_config.my_channel = CH_11;
  1941   0013EE  0E03               	movlw	3
  1942   0013F0  6E04               	movwf	(_mrf24_data_config+3)^0,c
  1943   0013F2                     
  1944                           ;drivers/scr/drv_mrf24j40.c: 342:     mrf24_data_config.get_new_msg = 0;
  1945   0013F2  6A01               	clrf	_mrf24_data_config^0,c
  1946   0013F4                     
  1947                           ;drivers/scr/drv_mrf24j40.c: 343:     mrf24_data_config.put_new_msg = 0;
  1948   0013F4  6A02               	clrf	(_mrf24_data_config+1)^0,c
  1949                           
  1950                           ;drivers/scr/drv_mrf24j40.c: 344:     mrf24_data_config.my_panid = 0x1234;
  1951   0013F6  0E12               	movlw	18
  1952   0013F8  6E1E               	movwf	(_mrf24_data_config+29)^0,c
  1953   0013FA  0E34               	movlw	52
  1954   0013FC  6E1D               	movwf	(_mrf24_data_config+28)^0,c
  1955                           
  1956                           ;drivers/scr/drv_mrf24j40.c: 345:     mrf24_data_config.my_address = 0x0001;
  1957   0013FE  0E00               	movlw	0
  1958   001400  6E20               	movwf	(_mrf24_data_config+31)^0,c
  1959   001402  0E01               	movlw	1
  1960   001404  6E1F               	movwf	(_mrf24_data_config+30)^0,c
  1961                           
  1962                           ;drivers/scr/drv_mrf24j40.c: 346:     mrf24_data_config.intervalo = 0x2222;
  1963   001406  0E22               	movlw	34
  1964   001408  6E22               	movwf	(_mrf24_data_config+33)^0,c
  1965   00140A  0E22               	movlw	34
  1966   00140C  6E21               	movwf	(_mrf24_data_config+32)^0,c
  1967                           
  1968                           ;drivers/scr/drv_mrf24j40.c: 347:     mrf24_data_in.source_address = 0;
  1969   00140E  0E00               	movlw	0
  1970   001410  0100               	movlb	0	; () banked
  1971   001412  6F63               	movwf	(_mrf24_data_in+3)& (0+255),b
  1972   001414  0E00               	movlw	0
  1973   001416  6F62               	movwf	(_mrf24_data_in+2)& (0+255),b
  1974                           
  1975                           ;drivers/scr/drv_mrf24j40.c: 348:     mrf24_data_in.source_panid = 0;
  1976   001418  0E00               	movlw	0
  1977   00141A  6F61               	movwf	(_mrf24_data_in+1)& (0+255),b
  1978   00141C  0E00               	movlw	0
  1979   00141E  6F60               	movwf	_mrf24_data_in& (0+255),b
  1980   001420                     
  1981                           ; BSR set to: 0
  1982                           ;drivers/scr/drv_mrf24j40.c: 349:     mrf24_data_in.tamano_mensaje = 0;
  1983   001420  6B64               	clrf	(_mrf24_data_in+4)& (0+255),b
  1984   001422                     
  1985                           ; BSR set to: 0
  1986                           ;drivers/scr/drv_mrf24j40.c: 350:     mrf24_data_in.buffer_entrada[0] = 0;
  1987   001422  6B65               	clrf	(_mrf24_data_in+5)& (0+255),b
  1988   001424                     
  1989                           ; BSR set to: 0
  1990   001424  0012               	return		;funcret
  1991   001426                     __end_of_InicializoVariables:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _InicializoPines *****************
  1995 ;; Defined at:
  1996 ;;		line 21 in file "drivers/scr/drv_mrf24j40_port.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;		None
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;		None
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;Total ram usage:        0 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 1
  2017 ;; This function calls:
  2018 ;;		_SetCSPin
  2019 ;;		_SetResetPin
  2020 ;;		_SetWakePin
  2021 ;; This function is called by:
  2022 ;;		_MRF24J40Init
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text8
  2027   00161E                     __ptext8:
  2028                           	callstack 0
  2029   00161E                     _InicializoPines:
  2030                           	callstack 28
  2031   00161E                     
  2032                           ;drivers/scr/drv_mrf24j40_port.c: 23:     TRISBbits.TRISB0 = 1;
  2033   00161E  8093               	bsf	147,0,c	;volatile
  2034                           
  2035                           ;drivers/scr/drv_mrf24j40_port.c: 24:     TRISCbits.TRISC6 = 0;
  2036   001620  9C94               	bcf	148,6,c	;volatile
  2037                           
  2038                           ;drivers/scr/drv_mrf24j40_port.c: 25:     TRISCbits.TRISC7 = 0;
  2039   001622  9E94               	bcf	148,7,c	;volatile
  2040                           
  2041                           ;drivers/scr/drv_mrf24j40_port.c: 26:     TRISDbits.TRISD4 = 0;
  2042   001624  9895               	bcf	149,4,c	;volatile
  2043   001626                     
  2044                           ;drivers/scr/drv_mrf24j40_port.c: 27:     SetCSPin(1);
  2045   001626  0E01               	movlw	1
  2046   001628  EC59  F00B         	call	_SetCSPin
  2047                           
  2048                           ;drivers/scr/drv_mrf24j40_port.c: 28:     SetWakePin(1);
  2049   00162C  0E01               	movlw	1
  2050   00162E  EC4B  F00B         	call	_SetWakePin
  2051                           
  2052                           ;drivers/scr/drv_mrf24j40_port.c: 29:     SetResetPin(0);
  2053   001632  0E00               	movlw	0
  2054   001634  EC52  F00B         	call	_SetResetPin
  2055   001638  0012               	return		;funcret
  2056   00163A                     __end_of_InicializoPines:
  2057                           	callstack 0
  2058                           
  2059 ;; *************** function _SetWakePin *****************
  2060 ;; Defined at:
  2061 ;;		line 49 in file "drivers/scr/drv_mrf24j40_port.c"
  2062 ;; Parameters:    Size  Location     Type
  2063 ;;  estado          1    wreg     _Bool 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  estado          1    0[COMRAM] _Bool 
  2066 ;; Return value:  Size  Location     Type
  2067 ;;                  1    wreg      void 
  2068 ;; Registers used:
  2069 ;;		wreg
  2070 ;; Tracked objects:
  2071 ;;		On entry : 0/0
  2072 ;;		On exit  : 0/0
  2073 ;;		Unchanged: 0/0
  2074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2079 ;;Total ram usage:        1 bytes
  2080 ;; Hardware stack levels used: 1
  2081 ;; This function calls:
  2082 ;;		Nothing
  2083 ;; This function is called by:
  2084 ;;		_InicializoPines
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text9
  2089   001696                     __ptext9:
  2090                           	callstack 0
  2091   001696                     _SetWakePin:
  2092                           	callstack 28
  2093                           
  2094                           ;incstack = 0
  2095                           ;SetWakePin@estado stored from wreg
  2096   001696  6E2A               	movwf	SetWakePin@estado^0,c
  2097   001698                     
  2098                           ;drivers/scr/drv_mrf24j40_port.c: 51:     LATCbits.LATC7 = estado;
  2099   001698  B02A               	btfsc	SetWakePin@estado^0,0,c
  2100   00169A  D002               	bra	u65
  2101   00169C  9E8B               	bcf	139,7,c	;volatile
  2102   00169E  D001               	bra	u66
  2103   0016A0                     u65:
  2104   0016A0  8E8B               	bsf	139,7,c	;volatile
  2105   0016A2                     u66:
  2106   0016A2  0012               	return		;funcret
  2107   0016A4                     __end_of_SetWakePin:
  2108                           	callstack 0
  2109                           
  2110 ;; *************** function _SetResetPin *****************
  2111 ;; Defined at:
  2112 ;;		line 60 in file "drivers/scr/drv_mrf24j40_port.c"
  2113 ;; Parameters:    Size  Location     Type
  2114 ;;  estado          1    wreg     _Bool 
  2115 ;; Auto vars:     Size  Location     Type
  2116 ;;  estado          1    0[COMRAM] _Bool 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  1    wreg      void 
  2119 ;; Registers used:
  2120 ;;		wreg
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2130 ;;Total ram usage:        1 bytes
  2131 ;; Hardware stack levels used: 1
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_MRF24J40Init
  2136 ;;		_InicializoPines
  2137 ;; This function uses a non-reentrant model
  2138 ;;
  2139                           
  2140                           	psect	text10
  2141   0016A4                     __ptext10:
  2142                           	callstack 0
  2143   0016A4                     _SetResetPin:
  2144                           	callstack 29
  2145                           
  2146                           ;incstack = 0
  2147                           ;SetResetPin@estado stored from wreg
  2148   0016A4  6E2A               	movwf	SetResetPin@estado^0,c
  2149   0016A6                     
  2150                           ;drivers/scr/drv_mrf24j40_port.c: 62:     LATDbits.LATD4 = estado;
  2151   0016A6  B02A               	btfsc	SetResetPin@estado^0,0,c
  2152   0016A8  D002               	bra	u45
  2153   0016AA  988C               	bcf	140,4,c	;volatile
  2154   0016AC  D001               	bra	u46
  2155   0016AE                     u45:
  2156   0016AE  888C               	bsf	140,4,c	;volatile
  2157   0016B0                     u46:
  2158   0016B0  0012               	return		;funcret
  2159   0016B2                     __end_of_SetResetPin:
  2160                           	callstack 0
  2161                           
  2162 ;; *************** function _GetShortAddr *****************
  2163 ;; Defined at:
  2164 ;;		line 375 in file "drivers/scr/drv_mrf24j40.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  reg_address     1    wreg     unsigned char 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  reg_address     1    3[COMRAM] unsigned char 
  2169 ;;  leido_spi       1    2[COMRAM] unsigned char 
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      unsigned char 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2, status,0, cstack
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2182 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2183 ;;Total ram usage:        2 bytes
  2184 ;; Hardware stack levels used: 1
  2185 ;; Hardware stack levels required when called: 2
  2186 ;; This function calls:
  2187 ;;		_ReadByteSPIPort
  2188 ;;		_SetCSPin
  2189 ;;		_WriteByteSPIPort
  2190 ;; This function is called by:
  2191 ;;		_MRF24J40Init
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text11
  2196   0015D8                     __ptext11:
  2197                           	callstack 0
  2198   0015D8                     _GetShortAddr:
  2199                           	callstack 27
  2200                           
  2201                           ;incstack = 0
  2202                           ;GetShortAddr@reg_address stored from wreg
  2203   0015D8  6E2D               	movwf	GetShortAddr@reg_address^0,c
  2204   0015DA                     
  2205                           ;drivers/scr/drv_mrf24j40.c: 378:     reg_address = (uint8_t) (reg_address << 1) & 0x7E;
  2206   0015DA  502D               	movf	GetShortAddr@reg_address^0,w,c
  2207   0015DC  242D               	addwf	GetShortAddr@reg_address^0,w,c
  2208   0015DE  0B7E               	andlw	126
  2209   0015E0  6E2D               	movwf	GetShortAddr@reg_address^0,c
  2210   0015E2                     
  2211                           ;drivers/scr/drv_mrf24j40.c: 379:     SetCSPin(0);
  2212   0015E2  0E00               	movlw	0
  2213   0015E4  EC59  F00B         	call	_SetCSPin
  2214   0015E8                     
  2215                           ;drivers/scr/drv_mrf24j40.c: 380:     WriteByteSPIPort(reg_address);
  2216   0015E8  502D               	movf	GetShortAddr@reg_address^0,w,c
  2217   0015EA  EC60  F00B         	call	_WriteByteSPIPort
  2218   0015EE                     
  2219                           ;drivers/scr/drv_mrf24j40.c: 381:     leido_spi = ReadByteSPIPort();
  2220   0015EE  EC65  F00B         	call	_ReadByteSPIPort	;wreg free
  2221   0015F2  6E2C               	movwf	GetShortAddr@leido_spi^0,c
  2222   0015F4                     
  2223                           ;drivers/scr/drv_mrf24j40.c: 382:     SetCSPin(1);
  2224   0015F4  0E01               	movlw	1
  2225   0015F6  EC59  F00B         	call	_SetCSPin
  2226   0015FA                     
  2227                           ;drivers/scr/drv_mrf24j40.c: 383:  return leido_spi;
  2228   0015FA  502C               	movf	GetShortAddr@leido_spi^0,w,c
  2229   0015FC  0012               	return		;funcret
  2230   0015FE                     __end_of_GetShortAddr:
  2231                           	callstack 0
  2232                           
  2233 ;; *************** function _GetLongAddr *****************
  2234 ;; Defined at:
  2235 ;;		line 408 in file "drivers/scr/drv_mrf24j40.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  reg_address     2    2[COMRAM] unsigned short 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;  toReturn        1    6[COMRAM] unsigned char 
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      unsigned char 
  2242 ;; Registers used:
  2243 ;;		wreg, status,2, status,0, cstack
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;Total ram usage:        5 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 2
  2256 ;; This function calls:
  2257 ;;		_ReadByteSPIPort
  2258 ;;		_SetCSPin
  2259 ;;		_WriteByteSPIPort
  2260 ;; This function is called by:
  2261 ;;		_MRF24J40Init
  2262 ;;		_ReciboPaquete
  2263 ;; This function uses a non-reentrant model
  2264 ;;
  2265                           
  2266                           	psect	text12
  2267   001426                     __ptext12:
  2268                           	callstack 0
  2269   001426                     _GetLongAddr:
  2270                           	callstack 27
  2271   001426                     
  2272                           ;drivers/scr/drv_mrf24j40.c: 410:  uint8_t toReturn;;drivers/scr/drv_mrf24j40.c: 411:   
      +                            reg_address = (reg_address << 5) | 0x8000;
  2273   001426  C02C  F02E         	movff	GetLongAddr@reg_address,??_GetLongAddr
  2274   00142A  C02D  F02F         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  2275   00142E  0E05               	movlw	5
  2276   001430                     u375:
  2277   001430  90D8               	bcf	status,0,c
  2278   001432  362E               	rlcf	??_GetLongAddr^0,f,c
  2279   001434  362F               	rlcf	(??_GetLongAddr+1)^0,f,c
  2280   001436  2EE8               	decfsz	wreg,f,c
  2281   001438  EF18  F00A         	goto	u375
  2282   00143C  0E00               	movlw	0
  2283   00143E  102E               	iorwf	??_GetLongAddr^0,w,c
  2284   001440  6E2C               	movwf	GetLongAddr@reg_address^0,c
  2285   001442  0E80               	movlw	128
  2286   001444  102F               	iorwf	(??_GetLongAddr+1)^0,w,c
  2287   001446  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  2288   001448                     
  2289                           ;drivers/scr/drv_mrf24j40.c: 412:     SetCSPin(0);
  2290   001448  0E00               	movlw	0
  2291   00144A  EC59  F00B         	call	_SetCSPin
  2292   00144E                     
  2293                           ;drivers/scr/drv_mrf24j40.c: 413:     WriteByteSPIPort((uint8_t) (reg_address >> 8));
  2294   00144E  502D               	movf	(GetLongAddr@reg_address+1)^0,w,c
  2295   001450  EC60  F00B         	call	_WriteByteSPIPort
  2296   001454                     
  2297                           ;drivers/scr/drv_mrf24j40.c: 414:  WriteByteSPIPort((uint8_t) reg_address );
  2298   001454  502C               	movf	GetLongAddr@reg_address^0,w,c
  2299   001456  EC60  F00B         	call	_WriteByteSPIPort
  2300   00145A                     
  2301                           ;drivers/scr/drv_mrf24j40.c: 416:  toReturn = ReadByteSPIPort();
  2302   00145A  EC65  F00B         	call	_ReadByteSPIPort	;wreg free
  2303   00145E  6E30               	movwf	GetLongAddr@toReturn^0,c
  2304   001460                     
  2305                           ;drivers/scr/drv_mrf24j40.c: 417:     SetCSPin(1);
  2306   001460  0E01               	movlw	1
  2307   001462  EC59  F00B         	call	_SetCSPin
  2308   001466                     
  2309                           ;drivers/scr/drv_mrf24j40.c: 418:  return toReturn;
  2310   001466  5030               	movf	GetLongAddr@toReturn^0,w,c
  2311   001468  0012               	return		;funcret
  2312   00146A                     __end_of_GetLongAddr:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function _ReadByteSPIPort *****************
  2316 ;; Defined at:
  2317 ;;		line 93 in file "drivers/scr/drv_mrf24j40_port.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;		None
  2320 ;; Auto vars:     Size  Location     Type
  2321 ;;		None
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  1    wreg      unsigned char 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, cstack
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;Total ram usage:        0 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; Hardware stack levels required when called: 1
  2338 ;; This function calls:
  2339 ;;		_SPIRead
  2340 ;; This function is called by:
  2341 ;;		_GetShortAddr
  2342 ;;		_GetLongAddr
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text13
  2347   0016CA                     __ptext13:
  2348                           	callstack 0
  2349   0016CA                     _ReadByteSPIPort:
  2350                           	callstack 27
  2351   0016CA                     
  2352                           ;drivers/scr/drv_mrf24j40_port.c: 95:     return SPIRead();
  2353   0016CA  EC37  F00B         	call	_SPIRead	;wreg free
  2354   0016CE  0012               	return		;funcret
  2355   0016D0                     __end_of_ReadByteSPIPort:
  2356                           	callstack 0
  2357                           
  2358 ;; *************** function _SPIRead *****************
  2359 ;; Defined at:
  2360 ;;		line 82 in file "drivers/scr/drv_mspi_port.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      unsigned char 
  2367 ;; Registers used:
  2368 ;;		wreg, status,2
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used: 1
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_ReadByteSPIPort
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           	psect	text14
  2388   00166E                     __ptext14:
  2389                           	callstack 0
  2390   00166E                     _SPIRead:
  2391                           	callstack 27
  2392   00166E                     
  2393                           ;drivers/scr/drv_mspi_port.c: 84:     SSPCON1bits.WCOL = 0;
  2394   00166E  9EC6               	bcf	198,7,c	;volatile
  2395                           
  2396                           ;drivers/scr/drv_mspi_port.c: 85:     SSPBUF = 0x00;
  2397   001670  6AC9               	clrf	201,c	;volatile
  2398   001672                     l189:
  2399   001672  A0C7               	btfss	199,0,c	;volatile
  2400   001674  EF3E  F00B         	goto	u321
  2401   001678  EF40  F00B         	goto	u320
  2402   00167C                     u321:
  2403   00167C  EF39  F00B         	goto	l189
  2404   001680                     u320:
  2405   001680                     
  2406                           ;drivers/scr/drv_mspi_port.c: 87:     return SSPBUF;
  2407   001680  50C9               	movf	201,w,c	;volatile
  2408   001682  0012               	return		;funcret
  2409   001684                     __end_of_SPIRead:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function _EnviarDato *****************
  2413 ;; Defined at:
  2414 ;;		line 535 in file "drivers/scr/drv_mrf24j40.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  pos             1    9[COMRAM] unsigned char 
  2419 ;;  i               1    8[COMRAM] unsigned char 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        3 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 3
  2436 ;; This function calls:
  2437 ;;		_SetLongAddr
  2438 ;;		_SetShortAddr
  2439 ;; This function is called by:
  2440 ;;		_main
  2441 ;; This function uses a non-reentrant model
  2442 ;;
  2443                           
  2444                           	psect	text15
  2445   0011A0                     __ptext15:
  2446                           	callstack 0
  2447   0011A0                     _EnviarDato:
  2448                           	callstack 27
  2449   0011A0                     
  2450                           ;drivers/scr/drv_mrf24j40.c: 537:  uint8_t pos = 0;
  2451   0011A0  6A33               	clrf	EnviarDato@pos^0,c
  2452   0011A2                     
  2453                           ;drivers/scr/drv_mrf24j40.c: 540:  SetLongAddr(pos++, i);
  2454   0011A2  0E00               	movlw	0
  2455   0011A4  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  2456   0011A6  0E00               	movlw	0
  2457   0011A8  6E2C               	movwf	SetLongAddr@reg_address^0,c
  2458   0011AA  0E0F               	movlw	15
  2459   0011AC  6E2E               	movwf	SetLongAddr@value^0,c
  2460   0011AE  EC56  F00A         	call	_SetLongAddr	;wreg free
  2461   0011B2  2A33               	incf	EnviarDato@pos^0,f,c
  2462   0011B4                     
  2463                           ;drivers/scr/drv_mrf24j40.c: 541:  SetLongAddr(pos++, mrf24_data_out.tamano_mensaje + i)
      +                          ;
  2464   0011B4  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2465   0011B8  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2466   0011BA  5027               	movf	(_mrf24_data_out+4)^0,w,c
  2467   0011BC  0F0F               	addlw	15
  2468   0011BE  6E2E               	movwf	SetLongAddr@value^0,c
  2469   0011C0  EC56  F00A         	call	_SetLongAddr	;wreg free
  2470   0011C4  2A33               	incf	EnviarDato@pos^0,f,c
  2471   0011C6                     
  2472                           ;drivers/scr/drv_mrf24j40.c: 542:  SetLongAddr(pos++, (0X01)|(0X20)|(0X40));
  2473   0011C6  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2474   0011CA  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2475   0011CC  0E61               	movlw	97
  2476   0011CE  6E2E               	movwf	SetLongAddr@value^0,c
  2477   0011D0  EC56  F00A         	call	_SetLongAddr	;wreg free
  2478   0011D4  2A33               	incf	EnviarDato@pos^0,f,c
  2479   0011D6                     
  2480                           ;drivers/scr/drv_mrf24j40.c: 543:  SetLongAddr(pos++, (0XC0)|(0X08));
  2481   0011D6  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2482   0011DA  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2483   0011DC  0EC8               	movlw	200
  2484   0011DE  6E2E               	movwf	SetLongAddr@value^0,c
  2485   0011E0  EC56  F00A         	call	_SetLongAddr	;wreg free
  2486   0011E4  2A33               	incf	EnviarDato@pos^0,f,c
  2487   0011E6                     
  2488                           ;drivers/scr/drv_mrf24j40.c: 544:  SetLongAddr(pos++, mrf24_data_config.sequence_number+
      +                          +);
  2489   0011E6  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2490   0011EA  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2491   0011EC  EE20  F003         	lfsr	2,_mrf24_data_config+2
  2492   0011F0  50DF               	movf	indf2,w,c
  2493   0011F2  2ADF               	incf	indf2,f,c
  2494   0011F4  6E2E               	movwf	SetLongAddr@value^0,c
  2495   0011F6  EC56  F00A         	call	_SetLongAddr	;wreg free
  2496   0011FA  2A33               	incf	EnviarDato@pos^0,f,c
  2497   0011FC                     
  2498                           ;drivers/scr/drv_mrf24j40.c: 545:  SetLongAddr(pos++, (uint8_t) mrf24_data_out.destinity
      +                          _panid);
  2499   0011FC  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2500   001200  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2501   001202  C023  F02E         	movff	_mrf24_data_out,SetLongAddr@value
  2502   001206  EC56  F00A         	call	_SetLongAddr	;wreg free
  2503   00120A  2A33               	incf	EnviarDato@pos^0,f,c
  2504   00120C                     
  2505                           ;drivers/scr/drv_mrf24j40.c: 546:  SetLongAddr(pos++, (uint8_t) (mrf24_data_out.destinit
      +                          y_panid >> 8));
  2506   00120C  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2507   001210  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2508   001212  5024               	movf	(_mrf24_data_out+1)^0,w,c
  2509   001214  6E2E               	movwf	SetLongAddr@value^0,c
  2510   001216  EC56  F00A         	call	_SetLongAddr	;wreg free
  2511   00121A  2A33               	incf	EnviarDato@pos^0,f,c
  2512   00121C                     
  2513                           ;drivers/scr/drv_mrf24j40.c: 547:  SetLongAddr(pos++, (uint8_t) mrf24_data_out.destinity
      +                          _address);
  2514   00121C  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2515   001220  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2516   001222  C025  F02E         	movff	_mrf24_data_out+2,SetLongAddr@value
  2517   001226  EC56  F00A         	call	_SetLongAddr	;wreg free
  2518   00122A  2A33               	incf	EnviarDato@pos^0,f,c
  2519   00122C                     
  2520                           ;drivers/scr/drv_mrf24j40.c: 548:  SetLongAddr(pos++, (uint8_t) (mrf24_data_out.destinit
      +                          y_address >> 8));
  2521   00122C  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2522   001230  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2523   001232  5026               	movf	(_mrf24_data_out+3)^0,w,c
  2524   001234  6E2E               	movwf	SetLongAddr@value^0,c
  2525   001236  EC56  F00A         	call	_SetLongAddr	;wreg free
  2526   00123A  2A33               	incf	EnviarDato@pos^0,f,c
  2527   00123C                     
  2528                           ;drivers/scr/drv_mrf24j40.c: 550:  for(i = 0; i < 8; i++) {
  2529   00123C  6A32               	clrf	EnviarDato@i^0,c
  2530   00123E                     l1685:
  2531                           
  2532                           ;drivers/scr/drv_mrf24j40.c: 552:   SetLongAddr(pos++, mrf24_data_config.my_mac[i]);
  2533   00123E  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2534   001242  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2535   001244  5032               	movf	EnviarDato@i^0,w,c
  2536   001246  0F15               	addlw	low (_mrf24_data_config+20)
  2537   001248  6ED9               	movwf	fsr2l,c
  2538   00124A  6ADA               	clrf	fsr2h,c
  2539   00124C  50DF               	movf	indf2,w,c
  2540   00124E  6E2E               	movwf	SetLongAddr@value^0,c
  2541   001250  EC56  F00A         	call	_SetLongAddr	;wreg free
  2542   001254  2A33               	incf	EnviarDato@pos^0,f,c
  2543   001256                     
  2544                           ;drivers/scr/drv_mrf24j40.c: 553:  }
  2545   001256  2A32               	incf	EnviarDato@i^0,f,c
  2546   001258  0E07               	movlw	7
  2547   00125A  6432               	cpfsgt	EnviarDato@i^0,c
  2548   00125C  EF32  F009         	goto	u411
  2549   001260  EF34  F009         	goto	u410
  2550   001264                     u411:
  2551   001264  EF1F  F009         	goto	l1685
  2552   001268                     u410:
  2553   001268  EF47  F009         	goto	l1697
  2554   00126C                     l1693:
  2555                           
  2556                           ;drivers/scr/drv_mrf24j40.c: 557:   SetLongAddr(pos++, *mrf24_data_out.buffer_salida++);
  2557   00126C  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2558   001270  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2559   001272  EE20  F028         	lfsr	2,_mrf24_data_out+5
  2560   001276  CFDF F031          	movff	indf2,??_EnviarDato
  2561   00127A  0E01               	movlw	1
  2562   00127C  26DF               	addwf	indf2,f,c
  2563   00127E  C031  FFF6         	movff	??_EnviarDato,tblptrl
  2564   001282                     	if	0	;There is only one active tblptr byte
  2565   001282                     	endif
  2566   001282                     	if	0	;tblptru may be non-zero
  2567   001282                     	endif
  2568   001282                     	if	0	;tblptru may be non-zero
  2569   001282                     	endif
  2570   001282  0008               	tblrd		*
  2571   001284  CFF5 F02E          	movff	tablat,SetLongAddr@value
  2572   001288  EC56  F00A         	call	_SetLongAddr	;wreg free
  2573   00128C  2A33               	incf	EnviarDato@pos^0,f,c
  2574   00128E                     l1697:
  2575                           
  2576                           ;drivers/scr/drv_mrf24j40.c: 555:  while(*mrf24_data_out.buffer_salida) {
  2577   00128E  EE20  F028         	lfsr	2,_mrf24_data_out+5
  2578   001292  CFDF FFF6          	movff	indf2,tblptrl
  2579   001296                     	if	0	;There is only one active tblptr byte
  2580   001296                     	endif
  2581   001296                     	if	0	;tblptru may be non-zero
  2582   001296                     	endif
  2583   001296                     	if	0	;tblptru may be non-zero
  2584   001296                     	endif
  2585   001296  0008               	tblrd		*
  2586   001298  50F5               	movf	tablat,w,c
  2587   00129A  0900               	iorlw	0
  2588   00129C  A4D8               	btfss	status,2,c
  2589   00129E  EF53  F009         	goto	u421
  2590   0012A2  EF55  F009         	goto	u420
  2591   0012A6                     u421:
  2592   0012A6  EF36  F009         	goto	l1693
  2593   0012AA                     u420:
  2594   0012AA                     
  2595                           ;drivers/scr/drv_mrf24j40.c: 559:  SetShortAddr((0x1B), 1 | (0X04));
  2596   0012AA  0E05               	movlw	5
  2597   0012AC  6E2C               	movwf	SetShortAddr@value^0,c
  2598   0012AE  0E1B               	movlw	27
  2599   0012B0  ECFF  F00A         	call	_SetShortAddr
  2600   0012B4  0012               	return		;funcret
  2601   0012B6                     __end_of_EnviarDato:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _SetShortAddr *****************
  2605 ;; Defined at:
  2606 ;;		line 360 in file "drivers/scr/drv_mrf24j40.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  reg_address     1    wreg     unsigned char 
  2609 ;;  value           1    2[COMRAM] unsigned char 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  reg_address     1    3[COMRAM] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2621 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;Total ram usage:        2 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 2
  2628 ;; This function calls:
  2629 ;;		_SetCSPin
  2630 ;;		_WriteByteSPIPort
  2631 ;; This function is called by:
  2632 ;;		_MRF24J40Init
  2633 ;;		_SetChannel
  2634 ;;		_SetDeviceAddress
  2635 ;;		_SetDeviceMACAddress
  2636 ;;		_EnviarDato
  2637 ;;		_EnviarDatoEncriptado
  2638 ;;		_EnviarComando
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text16
  2643   0015FE                     __ptext16:
  2644                           	callstack 0
  2645   0015FE                     _SetShortAddr:
  2646                           	callstack 27
  2647                           
  2648                           ;incstack = 0
  2649                           ;SetShortAddr@reg_address stored from wreg
  2650   0015FE  6E2D               	movwf	SetShortAddr@reg_address^0,c
  2651   001600                     
  2652                           ;drivers/scr/drv_mrf24j40.c: 362:     reg_address = (uint8_t) (reg_address << 1) | 0x01;
  2653   001600  80D8               	bsf	status,0,c
  2654   001602  362D               	rlcf	SetShortAddr@reg_address^0,f,c
  2655   001604                     
  2656                           ;drivers/scr/drv_mrf24j40.c: 363:     SetCSPin(0);
  2657   001604  0E00               	movlw	0
  2658   001606  EC59  F00B         	call	_SetCSPin
  2659   00160A                     
  2660                           ;drivers/scr/drv_mrf24j40.c: 364:  WriteByteSPIPort(reg_address);
  2661   00160A  502D               	movf	SetShortAddr@reg_address^0,w,c
  2662   00160C  EC60  F00B         	call	_WriteByteSPIPort
  2663   001610                     
  2664                           ;drivers/scr/drv_mrf24j40.c: 365:  WriteByteSPIPort(value);
  2665   001610  502C               	movf	SetShortAddr@value^0,w,c
  2666   001612  EC60  F00B         	call	_WriteByteSPIPort
  2667   001616                     
  2668                           ;drivers/scr/drv_mrf24j40.c: 366:     SetCSPin(1);
  2669   001616  0E01               	movlw	1
  2670   001618  EC59  F00B         	call	_SetCSPin
  2671   00161C  0012               	return		;funcret
  2672   00161E                     __end_of_SetShortAddr:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _SetLongAddr *****************
  2676 ;; Defined at:
  2677 ;;		line 391 in file "drivers/scr/drv_mrf24j40.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  reg_address     2    2[COMRAM] unsigned short 
  2680 ;;  value           1    4[COMRAM] unsigned char 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2692 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;Total ram usage:        5 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; Hardware stack levels required when called: 2
  2699 ;; This function calls:
  2700 ;;		_SetCSPin
  2701 ;;		_WriteByteSPIPort
  2702 ;; This function is called by:
  2703 ;;		_MRF24J40Init
  2704 ;;		_SetChannel
  2705 ;;		_EnviarDato
  2706 ;;		_EnviarDatoEncriptado
  2707 ;;		_EnviarComando
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text17
  2712   0014AC                     __ptext17:
  2713                           	callstack 0
  2714   0014AC                     _SetLongAddr:
  2715                           	callstack 27
  2716   0014AC                     
  2717                           ;drivers/scr/drv_mrf24j40.c: 393:     reg_address = (reg_address << 5) | 0x8010;
  2718   0014AC  C02C  F02F         	movff	SetLongAddr@reg_address,??_SetLongAddr
  2719   0014B0  C02D  F030         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  2720   0014B4  0E05               	movlw	5
  2721   0014B6                     u335:
  2722   0014B6  90D8               	bcf	status,0,c
  2723   0014B8  362F               	rlcf	??_SetLongAddr^0,f,c
  2724   0014BA  3630               	rlcf	(??_SetLongAddr+1)^0,f,c
  2725   0014BC  2EE8               	decfsz	wreg,f,c
  2726   0014BE  EF5B  F00A         	goto	u335
  2727   0014C2  0E10               	movlw	16
  2728   0014C4  102F               	iorwf	??_SetLongAddr^0,w,c
  2729   0014C6  6E2C               	movwf	SetLongAddr@reg_address^0,c
  2730   0014C8  0E80               	movlw	128
  2731   0014CA  1030               	iorwf	(??_SetLongAddr+1)^0,w,c
  2732   0014CC  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  2733   0014CE                     
  2734                           ;drivers/scr/drv_mrf24j40.c: 394:     SetCSPin(0);
  2735   0014CE  0E00               	movlw	0
  2736   0014D0  EC59  F00B         	call	_SetCSPin
  2737   0014D4                     
  2738                           ;drivers/scr/drv_mrf24j40.c: 395:  WriteByteSPIPort((uint8_t) (reg_address >> 8));
  2739   0014D4  502D               	movf	(SetLongAddr@reg_address+1)^0,w,c
  2740   0014D6  EC60  F00B         	call	_WriteByteSPIPort
  2741   0014DA                     
  2742                           ;drivers/scr/drv_mrf24j40.c: 396:  WriteByteSPIPort((uint8_t) reg_address );
  2743   0014DA  502C               	movf	SetLongAddr@reg_address^0,w,c
  2744   0014DC  EC60  F00B         	call	_WriteByteSPIPort
  2745   0014E0                     
  2746                           ;drivers/scr/drv_mrf24j40.c: 398:  WriteByteSPIPort(value);
  2747   0014E0  502E               	movf	SetLongAddr@value^0,w,c
  2748   0014E2  EC60  F00B         	call	_WriteByteSPIPort
  2749   0014E6                     
  2750                           ;drivers/scr/drv_mrf24j40.c: 399:     SetCSPin(1);
  2751   0014E6  0E01               	movlw	1
  2752   0014E8  EC59  F00B         	call	_SetCSPin
  2753   0014EC  0012               	return		;funcret
  2754   0014EE                     __end_of_SetLongAddr:
  2755                           	callstack 0
  2756                           
  2757 ;; *************** function _WriteByteSPIPort *****************
  2758 ;; Defined at:
  2759 ;;		line 71 in file "drivers/scr/drv_mrf24j40_port.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  dato            1    wreg     unsigned char 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  dato            1    1[COMRAM] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;Total ram usage:        1 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 1
  2780 ;; This function calls:
  2781 ;;		_SPIWriteByte
  2782 ;; This function is called by:
  2783 ;;		_SetShortAddr
  2784 ;;		_GetShortAddr
  2785 ;;		_SetLongAddr
  2786 ;;		_GetLongAddr
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text18
  2791   0016C0                     __ptext18:
  2792                           	callstack 0
  2793   0016C0                     _WriteByteSPIPort:
  2794                           	callstack 27
  2795                           
  2796                           ;incstack = 0
  2797                           ;WriteByteSPIPort@dato stored from wreg
  2798   0016C0  6E2B               	movwf	WriteByteSPIPort@dato^0,c
  2799   0016C2                     
  2800                           ;drivers/scr/drv_mrf24j40_port.c: 73:     SPIWriteByte(dato);
  2801   0016C2  502B               	movf	WriteByteSPIPort@dato^0,w,c
  2802   0016C4  EC2B  F00B         	call	_SPIWriteByte
  2803   0016C8  0012               	return		;funcret
  2804   0016CA                     __end_of_WriteByteSPIPort:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function _SPIWriteByte *****************
  2808 ;; Defined at:
  2809 ;;		line 54 in file "drivers/scr/drv_mspi_port.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  dato            1    wreg     unsigned char 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  dato            1    0[COMRAM] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;Total ram usage:        1 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_WriteByteSPIPort
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text19
  2837   001656                     __ptext19:
  2838                           	callstack 0
  2839   001656                     _SPIWriteByte:
  2840                           	callstack 27
  2841                           
  2842                           ;incstack = 0
  2843                           ;SPIWriteByte@dato stored from wreg
  2844   001656  6E2A               	movwf	SPIWriteByte@dato^0,c
  2845   001658                     
  2846                           ;drivers/scr/drv_mspi_port.c: 56:     PIR1bits.SSPIF = 0;
  2847   001658  969E               	bcf	158,3,c	;volatile
  2848   00165A                     
  2849                           ;drivers/scr/drv_mspi_port.c: 57:     SSPBUF = dato;
  2850   00165A  C02A  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  2851   00165E                     l174:
  2852   00165E  A69E               	btfss	158,3,c	;volatile
  2853   001660  EF34  F00B         	goto	u301
  2854   001664  EF36  F00B         	goto	u300
  2855   001668                     u301:
  2856   001668  EF2F  F00B         	goto	l174
  2857   00166C                     u300:
  2858   00166C  0012               	return		;funcret
  2859   00166E                     __end_of_SPIWriteByte:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _SetCSPin *****************
  2863 ;; Defined at:
  2864 ;;		line 38 in file "drivers/scr/drv_mrf24j40_port.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  estado          1    wreg     _Bool 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  estado          1    0[COMRAM] _Bool 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;Total ram usage:        1 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; This function calls:
  2885 ;;		Nothing
  2886 ;; This function is called by:
  2887 ;;		_SetShortAddr
  2888 ;;		_GetShortAddr
  2889 ;;		_SetLongAddr
  2890 ;;		_GetLongAddr
  2891 ;;		_InicializoPines
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text20
  2896   0016B2                     __ptext20:
  2897                           	callstack 0
  2898   0016B2                     _SetCSPin:
  2899                           	callstack 28
  2900                           
  2901                           ;incstack = 0
  2902                           ;SetCSPin@estado stored from wreg
  2903   0016B2  6E2A               	movwf	SetCSPin@estado^0,c
  2904   0016B4                     
  2905                           ;drivers/scr/drv_mrf24j40_port.c: 40:     LATCbits.LATC6 = estado;
  2906   0016B4  B02A               	btfsc	SetCSPin@estado^0,0,c
  2907   0016B6  D002               	bra	u315
  2908   0016B8  9C8B               	bcf	139,6,c	;volatile
  2909   0016BA  D001               	bra	u316
  2910   0016BC                     u315:
  2911   0016BC  8C8B               	bsf	139,6,c	;volatile
  2912   0016BE                     u316:
  2913   0016BE  0012               	return		;funcret
  2914   0016C0                     __end_of_SetCSPin:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _BoardInit *****************
  2918 ;; Defined at:
  2919 ;;		line 21 in file "hardware_config.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 1
  2940 ;; This function calls:
  2941 ;;		_SPIInit
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text21
  2948   0014EE                     __ptext21:
  2949                           	callstack 0
  2950   0014EE                     _BoardInit:
  2951                           	callstack 29
  2952   0014EE                     
  2953                           ;hardware_config.c: 23:     PORTA = 0;
  2954   0014EE  6A80               	clrf	128,c	;volatile
  2955                           
  2956                           ;hardware_config.c: 24:     PORTB = 0;
  2957   0014F0  6A81               	clrf	129,c	;volatile
  2958                           
  2959                           ;hardware_config.c: 25:     PORTC = 0;
  2960   0014F2  6A82               	clrf	130,c	;volatile
  2961                           
  2962                           ;hardware_config.c: 26:     PORTD = 0;
  2963   0014F4  6A83               	clrf	131,c	;volatile
  2964                           
  2965                           ;hardware_config.c: 27:     PORTE = 0;
  2966   0014F6  6A84               	clrf	132,c	;volatile
  2967                           
  2968                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  2969   0014F8  8C93               	bsf	147,6,c	;volatile
  2970                           
  2971                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  2972   0014FA  8E93               	bsf	147,7,c	;volatile
  2973                           
  2974                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  2975   0014FC  9496               	bcf	150,2,c	;volatile
  2976                           
  2977                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  2978   0014FE  9096               	bcf	150,0,c	;volatile
  2979                           
  2980                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  2981   001500  9296               	bcf	150,1,c	;volatile
  2982                           
  2983                           ;hardware_config.c: 37:  GIE = 0;
  2984   001502  9EF2               	bcf	4082,7,c	;volatile
  2985                           
  2986                           ;hardware_config.c: 38:  PEIE = 0;
  2987   001504  9CF2               	bcf	4082,6,c	;volatile
  2988                           
  2989                           ;hardware_config.c: 39:  RBIE = 0;
  2990   001506  96F2               	bcf	4082,3,c	;volatile
  2991                           
  2992                           ;hardware_config.c: 40:  T0IE = 0;
  2993   001508  9AF2               	bcf	4082,5,c	;volatile
  2994                           
  2995                           ;hardware_config.c: 41:  TMR1IE = 0;
  2996   00150A  909D               	bcf	3997,0,c	;volatile
  2997                           
  2998                           ;hardware_config.c: 42:  TMR2IE = 0;
  2999   00150C  929D               	bcf	3997,1,c	;volatile
  3000                           
  3001                           ;hardware_config.c: 43:  CCP1IE = 0;
  3002   00150E  949D               	bcf	3997,2,c	;volatile
  3003                           
  3004                           ;hardware_config.c: 44:  CCP2IE = 0;
  3005   001510  90A0               	bcf	4000,0,c	;volatile
  3006                           
  3007                           ;hardware_config.c: 45:  EEIE = 0;
  3008   001512  98A0               	bcf	4000,4,c	;volatile
  3009                           
  3010                           ;hardware_config.c: 46:  SSPIE = 0;
  3011   001514  969D               	bcf	3997,3,c	;volatile
  3012                           
  3013                           ;hardware_config.c: 47:  BCLIE = 0;
  3014   001516  96A0               	bcf	4000,3,c	;volatile
  3015                           
  3016                           ;hardware_config.c: 48:  ADIE = 0;
  3017   001518  9C9D               	bcf	3997,6,c	;volatile
  3018                           
  3019                           ;hardware_config.c: 49:  RBIE = 0;
  3020   00151A  96F2               	bcf	4082,3,c	;volatile
  3021                           
  3022                           ;hardware_config.c: 50:  RCIE = 0;
  3023   00151C  9A9D               	bcf	3997,5,c	;volatile
  3024   00151E                     
  3025                           ;hardware_config.c: 51:     OSCCON = 0b01110010;
  3026   00151E  0E72               	movlw	114
  3027   001520  6ED3               	movwf	211,c	;volatile
  3028                           
  3029                           ;hardware_config.c: 52:     OSCTUNE = 0b11011111;
  3030   001522  0EDF               	movlw	223
  3031   001524  6E9B               	movwf	155,c	;volatile
  3032   001526                     
  3033                           ;hardware_config.c: 55:     SPIInit();
  3034   001526  EC1D  F00B         	call	_SPIInit	;wreg free
  3035   00152A  0012               	return		;funcret
  3036   00152C                     __end_of_BoardInit:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function _SPIInit *****************
  3040 ;; Defined at:
  3041 ;;		line 31 in file "drivers/scr/drv_mspi_port.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		None
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_BoardInit
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text22
  3069   00163A                     __ptext22:
  3070                           	callstack 0
  3071   00163A                     _SPIInit:
  3072                           	callstack 29
  3073   00163A                     
  3074                           ;drivers/scr/drv_mspi_port.c: 33:     TRISCbits.TRISC3 = 0;
  3075   00163A  9694               	bcf	148,3,c	;volatile
  3076                           
  3077                           ;drivers/scr/drv_mspi_port.c: 34:     TRISCbits.TRISC5 = 0;
  3078   00163C  9A94               	bcf	148,5,c	;volatile
  3079                           
  3080                           ;drivers/scr/drv_mspi_port.c: 35:     TRISCbits.TRISC4 = 1;
  3081   00163E  8894               	bsf	148,4,c	;volatile
  3082                           
  3083                           ;drivers/scr/drv_mspi_port.c: 36:  SSPSTATbits.CKE = 1;
  3084   001640  8CC7               	bsf	199,6,c	;volatile
  3085                           
  3086                           ;drivers/scr/drv_mspi_port.c: 37:  SSPCON1bits.WCOL = 1;
  3087   001642  8EC6               	bsf	198,7,c	;volatile
  3088                           
  3089                           ;drivers/scr/drv_mspi_port.c: 38:  SSPCON1bits.SSPOV = 0;
  3090   001644  9CC6               	bcf	198,6,c	;volatile
  3091                           
  3092                           ;drivers/scr/drv_mspi_port.c: 39:  SSPCON1bits.SSPEN = 1;
  3093   001646  8AC6               	bsf	198,5,c	;volatile
  3094                           
  3095                           ;drivers/scr/drv_mspi_port.c: 40:  SSPCON1bits.CKP = 0;
  3096   001648  98C6               	bcf	198,4,c	;volatile
  3097                           
  3098                           ;drivers/scr/drv_mspi_port.c: 41:  SSPSTATbits.SMP = 1;
  3099   00164A  8EC7               	bsf	199,7,c	;volatile
  3100                           
  3101                           ;drivers/scr/drv_mspi_port.c: 42:  SSPCON1bits.SSPM3 = 0;
  3102   00164C  96C6               	bcf	198,3,c	;volatile
  3103                           
  3104                           ;drivers/scr/drv_mspi_port.c: 43:  SSPCON1bits.SSPM2 = 0;
  3105   00164E  94C6               	bcf	198,2,c	;volatile
  3106                           
  3107                           ;drivers/scr/drv_mspi_port.c: 44:  SSPCON1bits.SSPM1 = 0;
  3108   001650  92C6               	bcf	198,1,c	;volatile
  3109                           
  3110                           ;drivers/scr/drv_mspi_port.c: 45:  SSPCON1bits.SSPM0 = 1;
  3111   001652  80C6               	bsf	198,0,c	;volatile
  3112   001654  0012               	return		;funcret
  3113   001656                     __end_of_SPIInit:
  3114                           	callstack 0
  3115                           
  3116                           	psect	rparam
  3117   000001                     ___rparam_used  equ	1
  3118   000000                     ___param_bank   equ	0
  3119   000000                     __Lparam        equ	__Lrparam
  3120   000000                     __Hparam        equ	__Hrparam
  3121                           
  3122                           	psect	idloc
  3123                           
  3124                           ;Config register IDLOC0 @ 0x200000
  3125                           ;	unspecified, using default values
  3126   200000                     	org	2097152
  3127   200000  FF                 	db	255
  3128                           
  3129                           ;Config register IDLOC1 @ 0x200001
  3130                           ;	unspecified, using default values
  3131   200001                     	org	2097153
  3132   200001  FF                 	db	255
  3133                           
  3134                           ;Config register IDLOC2 @ 0x200002
  3135                           ;	unspecified, using default values
  3136   200002                     	org	2097154
  3137   200002  FF                 	db	255
  3138                           
  3139                           ;Config register IDLOC3 @ 0x200003
  3140                           ;	unspecified, using default values
  3141   200003                     	org	2097155
  3142   200003  FF                 	db	255
  3143                           
  3144                           ;Config register IDLOC4 @ 0x200004
  3145                           ;	unspecified, using default values
  3146   200004                     	org	2097156
  3147   200004  FF                 	db	255
  3148                           
  3149                           ;Config register IDLOC5 @ 0x200005
  3150                           ;	unspecified, using default values
  3151   200005                     	org	2097157
  3152   200005  FF                 	db	255
  3153                           
  3154                           ;Config register IDLOC6 @ 0x200006
  3155                           ;	unspecified, using default values
  3156   200006                     	org	2097158
  3157   200006  FF                 	db	255
  3158                           
  3159                           ;Config register IDLOC7 @ 0x200007
  3160                           ;	unspecified, using default values
  3161   200007                     	org	2097159
  3162   200007  FF                 	db	255
  3163                           
  3164                           	psect	config
  3165                           
  3166                           ; Padding undefined space
  3167   300000                     	org	3145728
  3168   300000  FF                 	db	255
  3169                           
  3170                           ;Config register CONFIG1H @ 0x300001
  3171                           ;	Oscillator Selection bits
  3172                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3173                           ;	Fail-Safe Clock Monitor Enable bit
  3174                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3175                           ;	Internal/External Oscillator Switchover bit
  3176                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3177   300001                     	org	3145729
  3178   300001  08                 	db	8
  3179                           
  3180                           ;Config register CONFIG2L @ 0x300002
  3181                           ;	Power-up Timer Enable bit
  3182                           ;	PWRTEN = OFF, PWRT disabled
  3183                           ;	Brown-out Reset Enable bits
  3184                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3185                           ;	Brown Out Reset Voltage bits
  3186                           ;	BORV = 22, VBOR set to 2.2 V nominal
  3187   300002                     	org	3145730
  3188   300002  11                 	db	17
  3189                           
  3190                           ;Config register CONFIG2H @ 0x300003
  3191                           ;	Watchdog Timer Enable bit
  3192                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3193                           ;	Watchdog Timer Postscale Select bits
  3194                           ;	WDTPS = 8192, 1:8192
  3195   300003                     	org	3145731
  3196   300003  1A                 	db	26
  3197                           
  3198                           ; Padding undefined space
  3199   300004                     	org	3145732
  3200   300004  FF                 	db	255
  3201                           
  3202                           ;Config register CONFIG3H @ 0x300005
  3203                           ;	CCP2 MUX bit
  3204                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3205                           ;	PORTB A/D Enable bit
  3206                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3207                           ;	Low-Power Timer1 Oscillator Enable bit
  3208                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3209                           ;	HFINTOSC Fast Start-up
  3210                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  3211                           ;	MCLR Pin Enable bit
  3212                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3213   300005                     	org	3145733
  3214   300005  81                 	db	129
  3215                           
  3216                           ;Config register CONFIG4L @ 0x300006
  3217                           ;	Stack Full/Underflow Reset Enable bit
  3218                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3219                           ;	Single-Supply ICSP Enable bit
  3220                           ;	LVP = OFF, Single-Supply ICSP disabled
  3221                           ;	Extended Instruction Set Enable bit
  3222                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3223                           ;	Background Debugger Enable bit
  3224                           ;	DEBUG = ON, Background debugger enabled, RB6 and RB7 are dedicated to In-Circuit Debug
  3225   300006                     	org	3145734
  3226   300006  00                 	db	0
  3227                           
  3228                           ; Padding undefined space
  3229   300007                     	org	3145735
  3230   300007  FF                 	db	255
  3231                           
  3232                           ;Config register CONFIG5L @ 0x300008
  3233                           ;	Code Protection Block 0
  3234                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3235                           ;	Code Protection Block 1
  3236                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3237                           ;	Code Protection Block 2
  3238                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3239                           ;	Code Protection Block 3
  3240                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3241   300008                     	org	3145736
  3242   300008  0F                 	db	15
  3243                           
  3244                           ;Config register CONFIG5H @ 0x300009
  3245                           ;	Boot Block Code Protection bit
  3246                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3247                           ;	Data EEPROM Code Protection bit
  3248                           ;	CPD = OFF, Data EEPROM not code-protected
  3249   300009                     	org	3145737
  3250   300009  C0                 	db	192
  3251                           
  3252                           ;Config register CONFIG6L @ 0x30000A
  3253                           ;	Write Protection Block 0
  3254                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3255                           ;	Write Protection Block 1
  3256                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3257                           ;	Write Protection Block 2
  3258                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3259                           ;	Write Protection Block 3
  3260                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3261   30000A                     	org	3145738
  3262   30000A  0F                 	db	15
  3263                           
  3264                           ;Config register CONFIG6H @ 0x30000B
  3265                           ;	Configuration Register Write Protection bit
  3266                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3267                           ;	Boot Block Write Protection bit
  3268                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3269                           ;	Data EEPROM Write Protection bit
  3270                           ;	WRTD = OFF, Data EEPROM not write-protected
  3271   30000B                     	org	3145739
  3272   30000B  E0                 	db	224
  3273                           
  3274                           ;Config register CONFIG7L @ 0x30000C
  3275                           ;	unspecified, using default values
  3276                           ;	Table Read Protection Block 0
  3277                           ;	EBTR0 = 0x1, unprogrammed default
  3278                           ;	Table Read Protection Block 1
  3279                           ;	EBTR1 = 0x1, unprogrammed default
  3280                           ;	Table Read Protection Block 2
  3281                           ;	EBTR2 = 0x1, unprogrammed default
  3282                           ;	Table Read Protection Block 3
  3283                           ;	EBTR3 = 0x1, unprogrammed default
  3284   30000C                     	org	3145740
  3285   30000C  0F                 	db	15
  3286                           
  3287                           ;Config register CONFIG7H @ 0x30000D
  3288                           ;	Boot Block Table Read Protection bit
  3289                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3290   30000D                     	org	3145741
  3291   30000D  40                 	db	64
  3292                           tosu	equ	0xFFF
  3293                           tosh	equ	0xFFE
  3294                           tosl	equ	0xFFD
  3295                           stkptr	equ	0xFFC
  3296                           pclatu	equ	0xFFB
  3297                           pclath	equ	0xFFA
  3298                           pcl	equ	0xFF9
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           prodh	equ	0xFF4
  3304                           prodl	equ	0xFF3
  3305                           indf0	equ	0xFEF
  3306                           postinc0	equ	0xFEE
  3307                           postdec0	equ	0xFED
  3308                           preinc0	equ	0xFEC
  3309                           plusw0	equ	0xFEB
  3310                           fsr0h	equ	0xFEA
  3311                           fsr0l	equ	0xFE9
  3312                           wreg	equ	0xFE8
  3313                           indf1	equ	0xFE7
  3314                           postinc1	equ	0xFE6
  3315                           postdec1	equ	0xFE5
  3316                           preinc1	equ	0xFE4
  3317                           plusw1	equ	0xFE3
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           bsr	equ	0xFE0
  3321                           indf2	equ	0xFDF
  3322                           postinc2	equ	0xFDE
  3323                           postdec2	equ	0xFDD
  3324                           preinc2	equ	0xFDC
  3325                           plusw2	equ	0xFDB
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    24
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      53
    BANK0           160      0      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    S34$buffer_salida	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[19]), 


Critical Paths under _main in COMRAM

    _main->_EnviarDato
    _SetMensajeSalida->_strlen
    _MRF24J40Init->_GetLongAddr
    _MRF24J40Init->_SetLongAddr
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _GetShortAddr->_WriteByteSPIPort
    _GetLongAddr->_WriteByteSPIPort
    _EnviarDato->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2978
                                             10 COMRAM     2     2      0
                          _BoardInit
                         _EnviarDato
                       _MRF24J40Init
                   _SetMensajeSalida
 ---------------------------------------------------------------------------------
 (1) _SetMensajeSalida                                     1     0      1     136
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         2     2      0    2008
                                              7 COMRAM     2     2      0
                        _GetLongAddr
                       _GetShortAddr
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  2     2      0     257
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           0     0      0     467
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     181
                                              2 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnviarDato                                           3     3      0     834
                                              7 COMRAM     3     3      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     278
                                              2 COMRAM     5     2      3
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _EnviarDato
     _SetLongAddr
       _SetCSPin
       _WriteByteSPIPort
         _SPIWriteByte
     _SetShortAddr
       _SetCSPin
       _WriteByteSPIPort
   _MRF24J40Init
     _GetLongAddr
       _ReadByteSPIPort
         _SPIRead
       _SetCSPin
       _WriteByteSPIPort
     _GetShortAddr
       _ReadByteSPIPort
       _SetCSPin
       _WriteByteSPIPort
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _SetLongAddr
       _SetShortAddr
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr
   _SetMensajeSalida
     _strlen

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      55     34.4%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     12      53     55.8%
BITBIGSFRlll        32      0       0      0.0%
BITBIGSFRlh         16      0       0      0.0%
BITBIGSFRllh        11      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     108      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Mar 30 08:30:46 2025

                 _SSPSTATbits 0FC7                            l61 15FC                            l54 13B2  
                          l70 1586                            l55 1424                            l64 14EC  
                          l73 15B0                            l49 119E                            l58 161C  
                          l67 1468                            l78 14AA                            l98 12B4  
                          u45 16AE                            u46 16B0                            u65 16A0  
                          u66 16A2                 ?_MRF24J40Init 002A                           l115 1694  
                         l140 1638                           l143 16BE                           l152 16C8  
                         l209 12C6                           l146 16A2                           l171 1654  
                         l261 152A                           l149 16B0                           l174 165E  
                         l158 16CE                           l192 1682                           l177 166C  
                         l189 1672                           l941 155A                           l961 16A6  
                         l995 1698                           _GIE 7F97                           u300 166C  
                         u301 1668                           u320 1680                           u400 115C  
                         u321 167C                           u401 1158                           u410 1268  
                         u315 16BC                           u411 1264                           u316 16BE  
                         u420 12AA                           u340 139A                           u421 12A6  
                         u341 1396                           u350 13EA                           u510 1312  
                         u335 14B6                           u351 13E6                           u511 130A  
                         u360 14AA                           u361 14A6                           u530 1348  
                         u531 1340                           u380 154E                           u508 12DC  
                         u381 154A                           u390 1088                           u375 1430  
                         u607 108E                           u391 1084                           u528 1314  
                         u617 1582                           u490 12DA                           u491 12D2  
                         u548 134A                           u557 12F4                           u567 132A  
                         u577 135E                           u587 103C                           u597 1054  
                         wreg 0FE8           __end_of_GetLongAddr 146A                          l1221 14EE  
                        l1223 151E                          l1225 1526                          l1501 13EA  
                        l1503 13F2                          l1097 163A                          l1441 165A  
                        l1521 15DA                          l1513 161E                          l1505 13F4  
                        l1601 1088                          l1443 16B4                          l1451 166E  
                        l1531 15FA                          l1523 15E2                          l1515 1626  
                        l1507 1420                          l1611 10B8                          l1603 1096  
                        l1461 160A                          l1453 1680                          l1525 15E8  
                        l1509 1422                          l1621 1108                          l1613 10C8  
                        l1605 10A0                          l1439 1658                          l1447 16C2  
                        l1471 14CE                          l1463 1610                          l1527 15EE  
                        l1519 15DA                          l1535 1588                          l1551 148E  
                        l1631 113A                          l1623 1112                          l1615 10D8  
                        l1607 10A4                          l1703 1684                          l1473 14D4  
                        l1465 1616                          l1457 1600                          l1641 11A2  
                        l1561 145A                          l1553 1426                          l1529 15F4  
                        l1545 1476                          l1633 1148                          l1625 111C  
                        l1617 10E8                          l1609 10A8                          l1705 1688  
                        l1475 14DA                          l1459 1604                          l1651 11C6  
                        l1643 11A2                          l1483 16CA                          l1563 1460  
                        l1555 1448                          l1571 1580                          l1547 1488  
                        l1539 146A                          l1635 115C                          l1627 1126  
                        l1619 10F8                          l1477 14E0                          l1469 14AC  
                        l1661 11FA                          l1653 11D4                          l1645 11B2  
                        l1565 1466                          l1557 144E                          l1493 137E  
                        l1549 148A                          l1629 1130                          l1581 154E  
                        l1901 1336                          l1479 14E6                          l1671 121C  
                        l1663 11FC                          l1655 11D6                          l1647 11B4  
                        l1639 11A0                          l1559 1454                          l1495 139A  
                        l1487 1376                          l1591 1048                          l1575 152C  
                        l1903 1354                          l1673 122A                          l1665 120A  
                        l1657 11E4                          l1649 11C4                          l1497 13CA  
                        l1569 155C                          l1593 104E                          l1585 102E  
                        l1577 1534                          l1905 136A                          l1691 1258  
                        l1675 122C                          l1667 120C                          l1659 11E6  
                        l1499 13CE                          l1595 1060                          l1587 1032  
                        l1579 1536                          l1693 126C                          l1685 123E  
                        l1677 123A                          l1669 121A                          l1597 106A  
                        l1589 1036                          l1695 128C                          l1687 1254  
                        l1679 123C                          l1599 1072                          l1697 128E  
                        l1689 1256                          l1699 12AA                          l1891 12BE  
                        l1893 12C8                          l1895 12EA                          l1887 12B6  
                        l1897 1300                          l1889 12BA                          l1899 1320  
                        _ADIE 7CEE                          _EEIE 7D04                          STR_1 1019  
                        _T0IE 7F95                          _PEIE 7F96                          _RBIE 7F93  
                        _RCIE 7CED                  _SPIWriteByte 1656                          _main 12B6  
             __end_of_SPIInit 1656               __end_of_SPIRead 1684                          fsr2h 0FDA  
                        indf2 0FDF                          fsr2l 0FD9                   EnviarDato@i 0032  
     GetShortAddr@reg_address 002D                          start 0000                  ___param_bank 0000  
           ??_ReadByteSPIPort 002A                ??_MRF24J40Init 0031   __end_of_InicializoVariables 1426  
                       ?_main 002A                         _BCLIE 7D03          SetDeviceMACAddress@i 002E  
                       _PORTA 0F80                         _PORTB 0F81                         _PORTC 0F82  
                       _PORTD 0F83                         _PORTE 0F84                         _SSPIE 7CEB  
        __end_of_GetShortAddr 15FE               _InicializoPines 161E       SetShortAddr@reg_address 002D  
         MRF24J40Init@lectura 0032                         tablat 0FF5                         status 0FD8  
                  _EnviarDato 11A0           _SetDeviceMACAddress 146A               __initialization 15B2  
                __end_of_main 1376              __end_of_SetCSPin 16C0                   _GetLongAddr 1426  
               ??_SetLongAddr 002F                        ??_main 0034                 __activetblptr 0001  
               ??_SetResetPin 002A          ?_SetDeviceMACAddress 002A                    _SetChannel 155C  
           ?_SetDeviceAddress 002A                        _CCP1IE 7CEA                        _CCP2IE 7D00  
                   ??_SPIInit 002A                     ??_SPIRead 002A            ??_SetDeviceAddress 002E  
                  _SetWakePin 1696                        _OSCCON 0FD3                        _TMR1IE 7CE8  
                      _TMR2IE 7CE9  __end_of_default_security_key 1011                        _SSPBUF 0FC9  
                      clear_0 15B8                        clear_1 15C4                        isa$std 0001  
              SetCSPin@estado 002A       __end_of_InicializoPines 163A                        _strlen 152C  
       ??_SetDeviceMACAddress 002E          InicializoVariables@i 002B                 EnviarDato@pos 0033  
                __mediumconst 0000             _mrf24_data_config 0001                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8           __end_of_SetLongAddr 14EE  
         __end_of_SetResetPin 16B2         GetShortAddr@leido_spi 002C          __end_of_MRF24J40Init 11A0  
            _SetMensajeSalida 1684                    __accesstop 0060       __end_of__initialization 15CA  
           __end_of_BoardInit 152C                   ?_EnviarDato 002A                 ___rparam_used 0001  
            SetWakePin@estado 002A                 ?_SetShortAddr 002C                __pcstackCOMRAM 002A  
                 ?_SetChannel 002A                    __pbssBANK0 0060                   ?_SetWakePin 002A  
                   ?_SetCSPin 002A               _ReadByteSPIPort 16CA                  _GetShortAddr 15D8  
              ??_SetShortAddr 002D                   _SetLongAddr 14AC                       ?_strlen 002A  
            ?_InicializoPines 002A          _default_security_key 1001                   _SetResetPin 16A4  
                     _OSCTUNE 0F9B                       _SPIInit 163A                       _SPIRead 166E  
                  ??_SetCSPin 002A             SetShortAddr@value 002C                       __Hparam 0000  
                     __Lparam 0000                  __psmallconst 1000                       __pcinit 15B2  
                ?_GetLongAddr 002C                       __ramtop 1000                       __ptext0 12B6  
                     __ptext1 1684                       __ptext2 152C                       __ptext3 102E  
                     __ptext4 146A                       __ptext5 1588                       __ptext6 155C  
                     __ptext7 1376                       __ptext8 161E                       __ptext9 1696  
            _WriteByteSPIPort 16C0       __end_of_ReadByteSPIPort 16D0          end_of_initialization 15CA  
         _default_mac_address 1011                       postinc0 0FEE                       strlen@a 002C  
                     strlen@s 002A                  _MRF24J40Init 102E      __end_of_SetMensajeSalida 1696  
        WriteByteSPIPort@dato 002B                     _TRISBbits 0F93                     _TRISCbits 0F94  
                   _TRISDbits 0F95                     _TRISEbits 0F96          __end_of_SetShortAddr 161E  
      _my_default_mac_address 0029                  ??_EnviarDato 0031                     _BoardInit 14EE  
 __end_of_SetDeviceMACAddress 14AC                __end_of_strlen 155C                  ??_SetChannel 0031  
         start_initialization 15B2            __end_of_EnviarDato 12B6              ?_ReadByteSPIPort 002A  
               ?_SPIWriteByte 002A                  ??_SetWakePin 002A                    ?_BoardInit 002A  
          __end_of_SetChannel 1588                  ?_SetLongAddr 002C                      ??_strlen 002C  
          __end_of_SetWakePin 16A4                  ?_SetResetPin 002A                   __pbssCOMRAM 0001  
     SetMensajeSalida@mensaje 002D                      ?_SPIInit 002A                      ?_SPIRead 002A  
              ??_SPIWriteByte 002A              SPIWriteByte@dato 002A              _SetDeviceAddress 1588  
         _InicializoVariables 1376      __end_of_WriteByteSPIPort 16CA             SetResetPin@estado 002A  
                 __smallconst 1000          ?_InicializoVariables 002A              SetLongAddr@value 002E  
                    _LATCbits 0F8B                      _LATDbits 0F8C                      _LATEbits 0F8D  
                 ??_BoardInit 002A                      _PIR1bits 0F9E                  _SetShortAddr 15FE  
         GetLongAddr@toReturn 0030             ?_SetMensajeSalida 002D         ??_InicializoVariables 002A  
          ??_SetMensajeSalida 002E                _mrf24_data_out 0023                      _SetCSPin 16B2  
                    __Hrparam 0000                      __Lrparam 0000                  __Lsmallconst 1000  
        __end_of_SPIWriteByte 166E                      __ptext10 16A4                      __ptext11 15D8  
                    __ptext20 16B2                      __ptext12 1426                      __ptext21 14EE  
                    __ptext13 16CA                      __ptext22 163A                      __ptext14 166E  
                    __ptext15 11A0                      __ptext16 15FE                      __ptext17 14AC  
                    __ptext18 16C0                      __ptext19 1656             ??_InicializoPines 002B  
               ?_GetShortAddr 002A                      isa$xinst 0000   __end_of_default_mac_address 1019  
               _mrf24_data_in 0060      __end_of_SetDeviceAddress 15B2                ??_GetShortAddr 002C  
           ?_WriteByteSPIPort 002A                 ??_GetLongAddr 002E            ??_WriteByteSPIPort 002B  
      GetLongAddr@reg_address 002C                   _SSPCON1bits 0FC6        SetLongAddr@reg_address 002C  
