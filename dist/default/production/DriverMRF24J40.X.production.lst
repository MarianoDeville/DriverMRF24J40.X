

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Mar 30 09:06:15 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 13/12/2024 GMT
    39                           ; 
    40                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F46K20 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F77                     SSPMSK          equ	3959	;# 
   114   000F78                     SLRCON          equ	3960	;# 
   115   000F79                     CM2CON1         equ	3961	;# 
   116   000F7A                     CM2CON0         equ	3962	;# 
   117   000F7B                     CM1CON0         equ	3963	;# 
   118   000F7C                     WPUB            equ	3964	;# 
   119   000F7D                     IOCB            equ	3965	;# 
   120   000F7E                     ANSEL           equ	3966	;# 
   121   000F7F                     ANSELH          equ	3967	;# 
   122   000F80                     PORTA           equ	3968	;# 
   123   000F81                     PORTB           equ	3969	;# 
   124   000F82                     PORTC           equ	3970	;# 
   125   000F83                     PORTD           equ	3971	;# 
   126   000F84                     PORTE           equ	3972	;# 
   127   000F89                     LATA            equ	3977	;# 
   128   000F8A                     LATB            equ	3978	;# 
   129   000F8B                     LATC            equ	3979	;# 
   130   000F8C                     LATD            equ	3980	;# 
   131   000F8D                     LATE            equ	3981	;# 
   132   000F92                     TRISA           equ	3986	;# 
   133   000F92                     DDRA            equ	3986	;# 
   134   000F93                     TRISB           equ	3987	;# 
   135   000F93                     DDRB            equ	3987	;# 
   136   000F94                     TRISC           equ	3988	;# 
   137   000F94                     DDRC            equ	3988	;# 
   138   000F95                     TRISD           equ	3989	;# 
   139   000F95                     DDRD            equ	3989	;# 
   140   000F96                     TRISE           equ	3990	;# 
   141   000F96                     DDRE            equ	3990	;# 
   142   000F9B                     OSCTUNE         equ	3995	;# 
   143   000F9D                     PIE1            equ	3997	;# 
   144   000F9E                     PIR1            equ	3998	;# 
   145   000F9F                     IPR1            equ	3999	;# 
   146   000FA0                     PIE2            equ	4000	;# 
   147   000FA1                     PIR2            equ	4001	;# 
   148   000FA2                     IPR2            equ	4002	;# 
   149   000FA6                     EECON1          equ	4006	;# 
   150   000FA7                     EECON2          equ	4007	;# 
   151   000FA8                     EEDATA          equ	4008	;# 
   152   000FA9                     EEADR           equ	4009	;# 
   153   000FAA                     EEADRH          equ	4010	;# 
   154   000FAB                     RCSTA           equ	4011	;# 
   155   000FAB                     RCSTA1          equ	4011	;# 
   156   000FAC                     TXSTA           equ	4012	;# 
   157   000FAC                     TXSTA1          equ	4012	;# 
   158   000FAD                     TXREG           equ	4013	;# 
   159   000FAD                     TXREG1          equ	4013	;# 
   160   000FAE                     RCREG           equ	4014	;# 
   161   000FAE                     RCREG1          equ	4014	;# 
   162   000FAF                     SPBRG           equ	4015	;# 
   163   000FAF                     SPBRG1          equ	4015	;# 
   164   000FB0                     SPBRGH          equ	4016	;# 
   165   000FB1                     T3CON           equ	4017	;# 
   166   000FB2                     TMR3            equ	4018	;# 
   167   000FB2                     TMR3L           equ	4018	;# 
   168   000FB3                     TMR3H           equ	4019	;# 
   169   000FB4                     CVRCON2         equ	4020	;# 
   170   000FB5                     CVRCON          equ	4021	;# 
   171   000FB6                     ECCP1AS         equ	4022	;# 
   172   000FB7                     PWM1CON         equ	4023	;# 
   173   000FB8                     BAUDCON         equ	4024	;# 
   174   000FB8                     BAUDCTL         equ	4024	;# 
   175   000FB9                     PSTRCON         equ	4025	;# 
   176   000FBA                     CCP2CON         equ	4026	;# 
   177   000FBB                     CCPR2           equ	4027	;# 
   178   000FBB                     CCPR2L          equ	4027	;# 
   179   000FBC                     CCPR2H          equ	4028	;# 
   180   000FBD                     CCP1CON         equ	4029	;# 
   181   000FBE                     CCPR1           equ	4030	;# 
   182   000FBE                     CCPR1L          equ	4030	;# 
   183   000FBF                     CCPR1H          equ	4031	;# 
   184   000FC0                     ADCON2          equ	4032	;# 
   185   000FC1                     ADCON1          equ	4033	;# 
   186   000FC2                     ADCON0          equ	4034	;# 
   187   000FC3                     ADRES           equ	4035	;# 
   188   000FC3                     ADRESL          equ	4035	;# 
   189   000FC4                     ADRESH          equ	4036	;# 
   190   000FC5                     SSPCON2         equ	4037	;# 
   191   000FC6                     SSPCON1         equ	4038	;# 
   192   000FC7                     SSPSTAT         equ	4039	;# 
   193   000FC8                     SSPADD          equ	4040	;# 
   194   000FC9                     SSPBUF          equ	4041	;# 
   195   000FCA                     T2CON           equ	4042	;# 
   196   000FCB                     PR2             equ	4043	;# 
   197   000FCB                     MEMCON          equ	4043	;# 
   198   000FCC                     TMR2            equ	4044	;# 
   199   000FCD                     T1CON           equ	4045	;# 
   200   000FCE                     TMR1            equ	4046	;# 
   201   000FCE                     TMR1L           equ	4046	;# 
   202   000FCF                     TMR1H           equ	4047	;# 
   203   000FD0                     RCON            equ	4048	;# 
   204   000FD1                     WDTCON          equ	4049	;# 
   205   000FD2                     HLVDCON         equ	4050	;# 
   206   000FD2                     LVDCON          equ	4050	;# 
   207   000FD3                     OSCCON          equ	4051	;# 
   208   000FD5                     T0CON           equ	4053	;# 
   209   000FD6                     TMR0            equ	4054	;# 
   210   000FD6                     TMR0L           equ	4054	;# 
   211   000FD7                     TMR0H           equ	4055	;# 
   212   000FD8                     STATUS          equ	4056	;# 
   213   000FD9                     FSR2            equ	4057	;# 
   214   000FD9                     FSR2L           equ	4057	;# 
   215   000FDA                     FSR2H           equ	4058	;# 
   216   000FDB                     PLUSW2          equ	4059	;# 
   217   000FDC                     PREINC2         equ	4060	;# 
   218   000FDD                     POSTDEC2        equ	4061	;# 
   219   000FDE                     POSTINC2        equ	4062	;# 
   220   000FDF                     INDF2           equ	4063	;# 
   221   000FE0                     BSR             equ	4064	;# 
   222   000FE1                     FSR1            equ	4065	;# 
   223   000FE1                     FSR1L           equ	4065	;# 
   224   000FE2                     FSR1H           equ	4066	;# 
   225   000FE3                     PLUSW1          equ	4067	;# 
   226   000FE4                     PREINC1         equ	4068	;# 
   227   000FE5                     POSTDEC1        equ	4069	;# 
   228   000FE6                     POSTINC1        equ	4070	;# 
   229   000FE7                     INDF1           equ	4071	;# 
   230   000FE8                     WREG            equ	4072	;# 
   231   000FE9                     FSR0            equ	4073	;# 
   232   000FE9                     FSR0L           equ	4073	;# 
   233   000FEA                     FSR0H           equ	4074	;# 
   234   000FEB                     PLUSW0          equ	4075	;# 
   235   000FEC                     PREINC0         equ	4076	;# 
   236   000FED                     POSTDEC0        equ	4077	;# 
   237   000FEE                     POSTINC0        equ	4078	;# 
   238   000FEF                     INDF0           equ	4079	;# 
   239   000FF0                     INTCON3         equ	4080	;# 
   240   000FF1                     INTCON2         equ	4081	;# 
   241   000FF2                     INTCON          equ	4082	;# 
   242   000FF3                     PROD            equ	4083	;# 
   243   000FF3                     PRODL           equ	4083	;# 
   244   000FF4                     PRODH           equ	4084	;# 
   245   000FF5                     TABLAT          equ	4085	;# 
   246   000FF6                     TBLPTR          equ	4086	;# 
   247   000FF6                     TBLPTRL         equ	4086	;# 
   248   000FF7                     TBLPTRH         equ	4087	;# 
   249   000FF8                     TBLPTRU         equ	4088	;# 
   250   000FF9                     PCLAT           equ	4089	;# 
   251   000FF9                     PC              equ	4089	;# 
   252   000FF9                     PCL             equ	4089	;# 
   253   000FFA                     PCLATH          equ	4090	;# 
   254   000FFB                     PCLATU          equ	4091	;# 
   255   000FFC                     STKPTR          equ	4092	;# 
   256   000FFD                     TOS             equ	4093	;# 
   257   000FFD                     TOSL            equ	4093	;# 
   258   000FFE                     TOSH            equ	4094	;# 
   259   000FFF                     TOSU            equ	4095	;# 
   260   000F77                     SSPMSK          equ	3959	;# 
   261   000F78                     SLRCON          equ	3960	;# 
   262   000F79                     CM2CON1         equ	3961	;# 
   263   000F7A                     CM2CON0         equ	3962	;# 
   264   000F7B                     CM1CON0         equ	3963	;# 
   265   000F7C                     WPUB            equ	3964	;# 
   266   000F7D                     IOCB            equ	3965	;# 
   267   000F7E                     ANSEL           equ	3966	;# 
   268   000F7F                     ANSELH          equ	3967	;# 
   269   000F80                     PORTA           equ	3968	;# 
   270   000F81                     PORTB           equ	3969	;# 
   271   000F82                     PORTC           equ	3970	;# 
   272   000F83                     PORTD           equ	3971	;# 
   273   000F84                     PORTE           equ	3972	;# 
   274   000F89                     LATA            equ	3977	;# 
   275   000F8A                     LATB            equ	3978	;# 
   276   000F8B                     LATC            equ	3979	;# 
   277   000F8C                     LATD            equ	3980	;# 
   278   000F8D                     LATE            equ	3981	;# 
   279   000F92                     TRISA           equ	3986	;# 
   280   000F92                     DDRA            equ	3986	;# 
   281   000F93                     TRISB           equ	3987	;# 
   282   000F93                     DDRB            equ	3987	;# 
   283   000F94                     TRISC           equ	3988	;# 
   284   000F94                     DDRC            equ	3988	;# 
   285   000F95                     TRISD           equ	3989	;# 
   286   000F95                     DDRD            equ	3989	;# 
   287   000F96                     TRISE           equ	3990	;# 
   288   000F96                     DDRE            equ	3990	;# 
   289   000F9B                     OSCTUNE         equ	3995	;# 
   290   000F9D                     PIE1            equ	3997	;# 
   291   000F9E                     PIR1            equ	3998	;# 
   292   000F9F                     IPR1            equ	3999	;# 
   293   000FA0                     PIE2            equ	4000	;# 
   294   000FA1                     PIR2            equ	4001	;# 
   295   000FA2                     IPR2            equ	4002	;# 
   296   000FA6                     EECON1          equ	4006	;# 
   297   000FA7                     EECON2          equ	4007	;# 
   298   000FA8                     EEDATA          equ	4008	;# 
   299   000FA9                     EEADR           equ	4009	;# 
   300   000FAA                     EEADRH          equ	4010	;# 
   301   000FAB                     RCSTA           equ	4011	;# 
   302   000FAB                     RCSTA1          equ	4011	;# 
   303   000FAC                     TXSTA           equ	4012	;# 
   304   000FAC                     TXSTA1          equ	4012	;# 
   305   000FAD                     TXREG           equ	4013	;# 
   306   000FAD                     TXREG1          equ	4013	;# 
   307   000FAE                     RCREG           equ	4014	;# 
   308   000FAE                     RCREG1          equ	4014	;# 
   309   000FAF                     SPBRG           equ	4015	;# 
   310   000FAF                     SPBRG1          equ	4015	;# 
   311   000FB0                     SPBRGH          equ	4016	;# 
   312   000FB1                     T3CON           equ	4017	;# 
   313   000FB2                     TMR3            equ	4018	;# 
   314   000FB2                     TMR3L           equ	4018	;# 
   315   000FB3                     TMR3H           equ	4019	;# 
   316   000FB4                     CVRCON2         equ	4020	;# 
   317   000FB5                     CVRCON          equ	4021	;# 
   318   000FB6                     ECCP1AS         equ	4022	;# 
   319   000FB7                     PWM1CON         equ	4023	;# 
   320   000FB8                     BAUDCON         equ	4024	;# 
   321   000FB8                     BAUDCTL         equ	4024	;# 
   322   000FB9                     PSTRCON         equ	4025	;# 
   323   000FBA                     CCP2CON         equ	4026	;# 
   324   000FBB                     CCPR2           equ	4027	;# 
   325   000FBB                     CCPR2L          equ	4027	;# 
   326   000FBC                     CCPR2H          equ	4028	;# 
   327   000FBD                     CCP1CON         equ	4029	;# 
   328   000FBE                     CCPR1           equ	4030	;# 
   329   000FBE                     CCPR1L          equ	4030	;# 
   330   000FBF                     CCPR1H          equ	4031	;# 
   331   000FC0                     ADCON2          equ	4032	;# 
   332   000FC1                     ADCON1          equ	4033	;# 
   333   000FC2                     ADCON0          equ	4034	;# 
   334   000FC3                     ADRES           equ	4035	;# 
   335   000FC3                     ADRESL          equ	4035	;# 
   336   000FC4                     ADRESH          equ	4036	;# 
   337   000FC5                     SSPCON2         equ	4037	;# 
   338   000FC6                     SSPCON1         equ	4038	;# 
   339   000FC7                     SSPSTAT         equ	4039	;# 
   340   000FC8                     SSPADD          equ	4040	;# 
   341   000FC9                     SSPBUF          equ	4041	;# 
   342   000FCA                     T2CON           equ	4042	;# 
   343   000FCB                     PR2             equ	4043	;# 
   344   000FCB                     MEMCON          equ	4043	;# 
   345   000FCC                     TMR2            equ	4044	;# 
   346   000FCD                     T1CON           equ	4045	;# 
   347   000FCE                     TMR1            equ	4046	;# 
   348   000FCE                     TMR1L           equ	4046	;# 
   349   000FCF                     TMR1H           equ	4047	;# 
   350   000FD0                     RCON            equ	4048	;# 
   351   000FD1                     WDTCON          equ	4049	;# 
   352   000FD2                     HLVDCON         equ	4050	;# 
   353   000FD2                     LVDCON          equ	4050	;# 
   354   000FD3                     OSCCON          equ	4051	;# 
   355   000FD5                     T0CON           equ	4053	;# 
   356   000FD6                     TMR0            equ	4054	;# 
   357   000FD6                     TMR0L           equ	4054	;# 
   358   000FD7                     TMR0H           equ	4055	;# 
   359   000FD8                     STATUS          equ	4056	;# 
   360   000FD9                     FSR2            equ	4057	;# 
   361   000FD9                     FSR2L           equ	4057	;# 
   362   000FDA                     FSR2H           equ	4058	;# 
   363   000FDB                     PLUSW2          equ	4059	;# 
   364   000FDC                     PREINC2         equ	4060	;# 
   365   000FDD                     POSTDEC2        equ	4061	;# 
   366   000FDE                     POSTINC2        equ	4062	;# 
   367   000FDF                     INDF2           equ	4063	;# 
   368   000FE0                     BSR             equ	4064	;# 
   369   000FE1                     FSR1            equ	4065	;# 
   370   000FE1                     FSR1L           equ	4065	;# 
   371   000FE2                     FSR1H           equ	4066	;# 
   372   000FE3                     PLUSW1          equ	4067	;# 
   373   000FE4                     PREINC1         equ	4068	;# 
   374   000FE5                     POSTDEC1        equ	4069	;# 
   375   000FE6                     POSTINC1        equ	4070	;# 
   376   000FE7                     INDF1           equ	4071	;# 
   377   000FE8                     WREG            equ	4072	;# 
   378   000FE9                     FSR0            equ	4073	;# 
   379   000FE9                     FSR0L           equ	4073	;# 
   380   000FEA                     FSR0H           equ	4074	;# 
   381   000FEB                     PLUSW0          equ	4075	;# 
   382   000FEC                     PREINC0         equ	4076	;# 
   383   000FED                     POSTDEC0        equ	4077	;# 
   384   000FEE                     POSTINC0        equ	4078	;# 
   385   000FEF                     INDF0           equ	4079	;# 
   386   000FF0                     INTCON3         equ	4080	;# 
   387   000FF1                     INTCON2         equ	4081	;# 
   388   000FF2                     INTCON          equ	4082	;# 
   389   000FF3                     PROD            equ	4083	;# 
   390   000FF3                     PRODL           equ	4083	;# 
   391   000FF4                     PRODH           equ	4084	;# 
   392   000FF5                     TABLAT          equ	4085	;# 
   393   000FF6                     TBLPTR          equ	4086	;# 
   394   000FF6                     TBLPTRL         equ	4086	;# 
   395   000FF7                     TBLPTRH         equ	4087	;# 
   396   000FF8                     TBLPTRU         equ	4088	;# 
   397   000FF9                     PCLAT           equ	4089	;# 
   398   000FF9                     PC              equ	4089	;# 
   399   000FF9                     PCL             equ	4089	;# 
   400   000FFA                     PCLATH          equ	4090	;# 
   401   000FFB                     PCLATU          equ	4091	;# 
   402   000FFC                     STKPTR          equ	4092	;# 
   403   000FFD                     TOS             equ	4093	;# 
   404   000FFD                     TOSL            equ	4093	;# 
   405   000FFE                     TOSH            equ	4094	;# 
   406   000FFF                     TOSU            equ	4095	;# 
   407   000F77                     SSPMSK          equ	3959	;# 
   408   000F78                     SLRCON          equ	3960	;# 
   409   000F79                     CM2CON1         equ	3961	;# 
   410   000F7A                     CM2CON0         equ	3962	;# 
   411   000F7B                     CM1CON0         equ	3963	;# 
   412   000F7C                     WPUB            equ	3964	;# 
   413   000F7D                     IOCB            equ	3965	;# 
   414   000F7E                     ANSEL           equ	3966	;# 
   415   000F7F                     ANSELH          equ	3967	;# 
   416   000F80                     PORTA           equ	3968	;# 
   417   000F81                     PORTB           equ	3969	;# 
   418   000F82                     PORTC           equ	3970	;# 
   419   000F83                     PORTD           equ	3971	;# 
   420   000F84                     PORTE           equ	3972	;# 
   421   000F89                     LATA            equ	3977	;# 
   422   000F8A                     LATB            equ	3978	;# 
   423   000F8B                     LATC            equ	3979	;# 
   424   000F8C                     LATD            equ	3980	;# 
   425   000F8D                     LATE            equ	3981	;# 
   426   000F92                     TRISA           equ	3986	;# 
   427   000F92                     DDRA            equ	3986	;# 
   428   000F93                     TRISB           equ	3987	;# 
   429   000F93                     DDRB            equ	3987	;# 
   430   000F94                     TRISC           equ	3988	;# 
   431   000F94                     DDRC            equ	3988	;# 
   432   000F95                     TRISD           equ	3989	;# 
   433   000F95                     DDRD            equ	3989	;# 
   434   000F96                     TRISE           equ	3990	;# 
   435   000F96                     DDRE            equ	3990	;# 
   436   000F9B                     OSCTUNE         equ	3995	;# 
   437   000F9D                     PIE1            equ	3997	;# 
   438   000F9E                     PIR1            equ	3998	;# 
   439   000F9F                     IPR1            equ	3999	;# 
   440   000FA0                     PIE2            equ	4000	;# 
   441   000FA1                     PIR2            equ	4001	;# 
   442   000FA2                     IPR2            equ	4002	;# 
   443   000FA6                     EECON1          equ	4006	;# 
   444   000FA7                     EECON2          equ	4007	;# 
   445   000FA8                     EEDATA          equ	4008	;# 
   446   000FA9                     EEADR           equ	4009	;# 
   447   000FAA                     EEADRH          equ	4010	;# 
   448   000FAB                     RCSTA           equ	4011	;# 
   449   000FAB                     RCSTA1          equ	4011	;# 
   450   000FAC                     TXSTA           equ	4012	;# 
   451   000FAC                     TXSTA1          equ	4012	;# 
   452   000FAD                     TXREG           equ	4013	;# 
   453   000FAD                     TXREG1          equ	4013	;# 
   454   000FAE                     RCREG           equ	4014	;# 
   455   000FAE                     RCREG1          equ	4014	;# 
   456   000FAF                     SPBRG           equ	4015	;# 
   457   000FAF                     SPBRG1          equ	4015	;# 
   458   000FB0                     SPBRGH          equ	4016	;# 
   459   000FB1                     T3CON           equ	4017	;# 
   460   000FB2                     TMR3            equ	4018	;# 
   461   000FB2                     TMR3L           equ	4018	;# 
   462   000FB3                     TMR3H           equ	4019	;# 
   463   000FB4                     CVRCON2         equ	4020	;# 
   464   000FB5                     CVRCON          equ	4021	;# 
   465   000FB6                     ECCP1AS         equ	4022	;# 
   466   000FB7                     PWM1CON         equ	4023	;# 
   467   000FB8                     BAUDCON         equ	4024	;# 
   468   000FB8                     BAUDCTL         equ	4024	;# 
   469   000FB9                     PSTRCON         equ	4025	;# 
   470   000FBA                     CCP2CON         equ	4026	;# 
   471   000FBB                     CCPR2           equ	4027	;# 
   472   000FBB                     CCPR2L          equ	4027	;# 
   473   000FBC                     CCPR2H          equ	4028	;# 
   474   000FBD                     CCP1CON         equ	4029	;# 
   475   000FBE                     CCPR1           equ	4030	;# 
   476   000FBE                     CCPR1L          equ	4030	;# 
   477   000FBF                     CCPR1H          equ	4031	;# 
   478   000FC0                     ADCON2          equ	4032	;# 
   479   000FC1                     ADCON1          equ	4033	;# 
   480   000FC2                     ADCON0          equ	4034	;# 
   481   000FC3                     ADRES           equ	4035	;# 
   482   000FC3                     ADRESL          equ	4035	;# 
   483   000FC4                     ADRESH          equ	4036	;# 
   484   000FC5                     SSPCON2         equ	4037	;# 
   485   000FC6                     SSPCON1         equ	4038	;# 
   486   000FC7                     SSPSTAT         equ	4039	;# 
   487   000FC8                     SSPADD          equ	4040	;# 
   488   000FC9                     SSPBUF          equ	4041	;# 
   489   000FCA                     T2CON           equ	4042	;# 
   490   000FCB                     PR2             equ	4043	;# 
   491   000FCB                     MEMCON          equ	4043	;# 
   492   000FCC                     TMR2            equ	4044	;# 
   493   000FCD                     T1CON           equ	4045	;# 
   494   000FCE                     TMR1            equ	4046	;# 
   495   000FCE                     TMR1L           equ	4046	;# 
   496   000FCF                     TMR1H           equ	4047	;# 
   497   000FD0                     RCON            equ	4048	;# 
   498   000FD1                     WDTCON          equ	4049	;# 
   499   000FD2                     HLVDCON         equ	4050	;# 
   500   000FD2                     LVDCON          equ	4050	;# 
   501   000FD3                     OSCCON          equ	4051	;# 
   502   000FD5                     T0CON           equ	4053	;# 
   503   000FD6                     TMR0            equ	4054	;# 
   504   000FD6                     TMR0L           equ	4054	;# 
   505   000FD7                     TMR0H           equ	4055	;# 
   506   000FD8                     STATUS          equ	4056	;# 
   507   000FD9                     FSR2            equ	4057	;# 
   508   000FD9                     FSR2L           equ	4057	;# 
   509   000FDA                     FSR2H           equ	4058	;# 
   510   000FDB                     PLUSW2          equ	4059	;# 
   511   000FDC                     PREINC2         equ	4060	;# 
   512   000FDD                     POSTDEC2        equ	4061	;# 
   513   000FDE                     POSTINC2        equ	4062	;# 
   514   000FDF                     INDF2           equ	4063	;# 
   515   000FE0                     BSR             equ	4064	;# 
   516   000FE1                     FSR1            equ	4065	;# 
   517   000FE1                     FSR1L           equ	4065	;# 
   518   000FE2                     FSR1H           equ	4066	;# 
   519   000FE3                     PLUSW1          equ	4067	;# 
   520   000FE4                     PREINC1         equ	4068	;# 
   521   000FE5                     POSTDEC1        equ	4069	;# 
   522   000FE6                     POSTINC1        equ	4070	;# 
   523   000FE7                     INDF1           equ	4071	;# 
   524   000FE8                     WREG            equ	4072	;# 
   525   000FE9                     FSR0            equ	4073	;# 
   526   000FE9                     FSR0L           equ	4073	;# 
   527   000FEA                     FSR0H           equ	4074	;# 
   528   000FEB                     PLUSW0          equ	4075	;# 
   529   000FEC                     PREINC0         equ	4076	;# 
   530   000FED                     POSTDEC0        equ	4077	;# 
   531   000FEE                     POSTINC0        equ	4078	;# 
   532   000FEF                     INDF0           equ	4079	;# 
   533   000FF0                     INTCON3         equ	4080	;# 
   534   000FF1                     INTCON2         equ	4081	;# 
   535   000FF2                     INTCON          equ	4082	;# 
   536   000FF3                     PROD            equ	4083	;# 
   537   000FF3                     PRODL           equ	4083	;# 
   538   000FF4                     PRODH           equ	4084	;# 
   539   000FF5                     TABLAT          equ	4085	;# 
   540   000FF6                     TBLPTR          equ	4086	;# 
   541   000FF6                     TBLPTRL         equ	4086	;# 
   542   000FF7                     TBLPTRH         equ	4087	;# 
   543   000FF8                     TBLPTRU         equ	4088	;# 
   544   000FF9                     PCLAT           equ	4089	;# 
   545   000FF9                     PC              equ	4089	;# 
   546   000FF9                     PCL             equ	4089	;# 
   547   000FFA                     PCLATH          equ	4090	;# 
   548   000FFB                     PCLATU          equ	4091	;# 
   549   000FFC                     STKPTR          equ	4092	;# 
   550   000FFD                     TOS             equ	4093	;# 
   551   000FFD                     TOSL            equ	4093	;# 
   552   000FFE                     TOSH            equ	4094	;# 
   553   000FFF                     TOSU            equ	4095	;# 
   554   000F77                     SSPMSK          equ	3959	;# 
   555   000F78                     SLRCON          equ	3960	;# 
   556   000F79                     CM2CON1         equ	3961	;# 
   557   000F7A                     CM2CON0         equ	3962	;# 
   558   000F7B                     CM1CON0         equ	3963	;# 
   559   000F7C                     WPUB            equ	3964	;# 
   560   000F7D                     IOCB            equ	3965	;# 
   561   000F7E                     ANSEL           equ	3966	;# 
   562   000F7F                     ANSELH          equ	3967	;# 
   563   000F80                     PORTA           equ	3968	;# 
   564   000F81                     PORTB           equ	3969	;# 
   565   000F82                     PORTC           equ	3970	;# 
   566   000F83                     PORTD           equ	3971	;# 
   567   000F84                     PORTE           equ	3972	;# 
   568   000F89                     LATA            equ	3977	;# 
   569   000F8A                     LATB            equ	3978	;# 
   570   000F8B                     LATC            equ	3979	;# 
   571   000F8C                     LATD            equ	3980	;# 
   572   000F8D                     LATE            equ	3981	;# 
   573   000F92                     TRISA           equ	3986	;# 
   574   000F92                     DDRA            equ	3986	;# 
   575   000F93                     TRISB           equ	3987	;# 
   576   000F93                     DDRB            equ	3987	;# 
   577   000F94                     TRISC           equ	3988	;# 
   578   000F94                     DDRC            equ	3988	;# 
   579   000F95                     TRISD           equ	3989	;# 
   580   000F95                     DDRD            equ	3989	;# 
   581   000F96                     TRISE           equ	3990	;# 
   582   000F96                     DDRE            equ	3990	;# 
   583   000F9B                     OSCTUNE         equ	3995	;# 
   584   000F9D                     PIE1            equ	3997	;# 
   585   000F9E                     PIR1            equ	3998	;# 
   586   000F9F                     IPR1            equ	3999	;# 
   587   000FA0                     PIE2            equ	4000	;# 
   588   000FA1                     PIR2            equ	4001	;# 
   589   000FA2                     IPR2            equ	4002	;# 
   590   000FA6                     EECON1          equ	4006	;# 
   591   000FA7                     EECON2          equ	4007	;# 
   592   000FA8                     EEDATA          equ	4008	;# 
   593   000FA9                     EEADR           equ	4009	;# 
   594   000FAA                     EEADRH          equ	4010	;# 
   595   000FAB                     RCSTA           equ	4011	;# 
   596   000FAB                     RCSTA1          equ	4011	;# 
   597   000FAC                     TXSTA           equ	4012	;# 
   598   000FAC                     TXSTA1          equ	4012	;# 
   599   000FAD                     TXREG           equ	4013	;# 
   600   000FAD                     TXREG1          equ	4013	;# 
   601   000FAE                     RCREG           equ	4014	;# 
   602   000FAE                     RCREG1          equ	4014	;# 
   603   000FAF                     SPBRG           equ	4015	;# 
   604   000FAF                     SPBRG1          equ	4015	;# 
   605   000FB0                     SPBRGH          equ	4016	;# 
   606   000FB1                     T3CON           equ	4017	;# 
   607   000FB2                     TMR3            equ	4018	;# 
   608   000FB2                     TMR3L           equ	4018	;# 
   609   000FB3                     TMR3H           equ	4019	;# 
   610   000FB4                     CVRCON2         equ	4020	;# 
   611   000FB5                     CVRCON          equ	4021	;# 
   612   000FB6                     ECCP1AS         equ	4022	;# 
   613   000FB7                     PWM1CON         equ	4023	;# 
   614   000FB8                     BAUDCON         equ	4024	;# 
   615   000FB8                     BAUDCTL         equ	4024	;# 
   616   000FB9                     PSTRCON         equ	4025	;# 
   617   000FBA                     CCP2CON         equ	4026	;# 
   618   000FBB                     CCPR2           equ	4027	;# 
   619   000FBB                     CCPR2L          equ	4027	;# 
   620   000FBC                     CCPR2H          equ	4028	;# 
   621   000FBD                     CCP1CON         equ	4029	;# 
   622   000FBE                     CCPR1           equ	4030	;# 
   623   000FBE                     CCPR1L          equ	4030	;# 
   624   000FBF                     CCPR1H          equ	4031	;# 
   625   000FC0                     ADCON2          equ	4032	;# 
   626   000FC1                     ADCON1          equ	4033	;# 
   627   000FC2                     ADCON0          equ	4034	;# 
   628   000FC3                     ADRES           equ	4035	;# 
   629   000FC3                     ADRESL          equ	4035	;# 
   630   000FC4                     ADRESH          equ	4036	;# 
   631   000FC5                     SSPCON2         equ	4037	;# 
   632   000FC6                     SSPCON1         equ	4038	;# 
   633   000FC7                     SSPSTAT         equ	4039	;# 
   634   000FC8                     SSPADD          equ	4040	;# 
   635   000FC9                     SSPBUF          equ	4041	;# 
   636   000FCA                     T2CON           equ	4042	;# 
   637   000FCB                     PR2             equ	4043	;# 
   638   000FCB                     MEMCON          equ	4043	;# 
   639   000FCC                     TMR2            equ	4044	;# 
   640   000FCD                     T1CON           equ	4045	;# 
   641   000FCE                     TMR1            equ	4046	;# 
   642   000FCE                     TMR1L           equ	4046	;# 
   643   000FCF                     TMR1H           equ	4047	;# 
   644   000FD0                     RCON            equ	4048	;# 
   645   000FD1                     WDTCON          equ	4049	;# 
   646   000FD2                     HLVDCON         equ	4050	;# 
   647   000FD2                     LVDCON          equ	4050	;# 
   648   000FD3                     OSCCON          equ	4051	;# 
   649   000FD5                     T0CON           equ	4053	;# 
   650   000FD6                     TMR0            equ	4054	;# 
   651   000FD6                     TMR0L           equ	4054	;# 
   652   000FD7                     TMR0H           equ	4055	;# 
   653   000FD8                     STATUS          equ	4056	;# 
   654   000FD9                     FSR2            equ	4057	;# 
   655   000FD9                     FSR2L           equ	4057	;# 
   656   000FDA                     FSR2H           equ	4058	;# 
   657   000FDB                     PLUSW2          equ	4059	;# 
   658   000FDC                     PREINC2         equ	4060	;# 
   659   000FDD                     POSTDEC2        equ	4061	;# 
   660   000FDE                     POSTINC2        equ	4062	;# 
   661   000FDF                     INDF2           equ	4063	;# 
   662   000FE0                     BSR             equ	4064	;# 
   663   000FE1                     FSR1            equ	4065	;# 
   664   000FE1                     FSR1L           equ	4065	;# 
   665   000FE2                     FSR1H           equ	4066	;# 
   666   000FE3                     PLUSW1          equ	4067	;# 
   667   000FE4                     PREINC1         equ	4068	;# 
   668   000FE5                     POSTDEC1        equ	4069	;# 
   669   000FE6                     POSTINC1        equ	4070	;# 
   670   000FE7                     INDF1           equ	4071	;# 
   671   000FE8                     WREG            equ	4072	;# 
   672   000FE9                     FSR0            equ	4073	;# 
   673   000FE9                     FSR0L           equ	4073	;# 
   674   000FEA                     FSR0H           equ	4074	;# 
   675   000FEB                     PLUSW0          equ	4075	;# 
   676   000FEC                     PREINC0         equ	4076	;# 
   677   000FED                     POSTDEC0        equ	4077	;# 
   678   000FEE                     POSTINC0        equ	4078	;# 
   679   000FEF                     INDF0           equ	4079	;# 
   680   000FF0                     INTCON3         equ	4080	;# 
   681   000FF1                     INTCON2         equ	4081	;# 
   682   000FF2                     INTCON          equ	4082	;# 
   683   000FF3                     PROD            equ	4083	;# 
   684   000FF3                     PRODL           equ	4083	;# 
   685   000FF4                     PRODH           equ	4084	;# 
   686   000FF5                     TABLAT          equ	4085	;# 
   687   000FF6                     TBLPTR          equ	4086	;# 
   688   000FF6                     TBLPTRL         equ	4086	;# 
   689   000FF7                     TBLPTRH         equ	4087	;# 
   690   000FF8                     TBLPTRU         equ	4088	;# 
   691   000FF9                     PCLAT           equ	4089	;# 
   692   000FF9                     PC              equ	4089	;# 
   693   000FF9                     PCL             equ	4089	;# 
   694   000FFA                     PCLATH          equ	4090	;# 
   695   000FFB                     PCLATU          equ	4091	;# 
   696   000FFC                     STKPTR          equ	4092	;# 
   697   000FFD                     TOS             equ	4093	;# 
   698   000FFD                     TOSL            equ	4093	;# 
   699   000FFE                     TOSH            equ	4094	;# 
   700   000FFF                     TOSU            equ	4095	;# 
   701   000F77                     SSPMSK          equ	3959	;# 
   702   000F78                     SLRCON          equ	3960	;# 
   703   000F79                     CM2CON1         equ	3961	;# 
   704   000F7A                     CM2CON0         equ	3962	;# 
   705   000F7B                     CM1CON0         equ	3963	;# 
   706   000F7C                     WPUB            equ	3964	;# 
   707   000F7D                     IOCB            equ	3965	;# 
   708   000F7E                     ANSEL           equ	3966	;# 
   709   000F7F                     ANSELH          equ	3967	;# 
   710   000F80                     PORTA           equ	3968	;# 
   711   000F81                     PORTB           equ	3969	;# 
   712   000F82                     PORTC           equ	3970	;# 
   713   000F83                     PORTD           equ	3971	;# 
   714   000F84                     PORTE           equ	3972	;# 
   715   000F89                     LATA            equ	3977	;# 
   716   000F8A                     LATB            equ	3978	;# 
   717   000F8B                     LATC            equ	3979	;# 
   718   000F8C                     LATD            equ	3980	;# 
   719   000F8D                     LATE            equ	3981	;# 
   720   000F92                     TRISA           equ	3986	;# 
   721   000F92                     DDRA            equ	3986	;# 
   722   000F93                     TRISB           equ	3987	;# 
   723   000F93                     DDRB            equ	3987	;# 
   724   000F94                     TRISC           equ	3988	;# 
   725   000F94                     DDRC            equ	3988	;# 
   726   000F95                     TRISD           equ	3989	;# 
   727   000F95                     DDRD            equ	3989	;# 
   728   000F96                     TRISE           equ	3990	;# 
   729   000F96                     DDRE            equ	3990	;# 
   730   000F9B                     OSCTUNE         equ	3995	;# 
   731   000F9D                     PIE1            equ	3997	;# 
   732   000F9E                     PIR1            equ	3998	;# 
   733   000F9F                     IPR1            equ	3999	;# 
   734   000FA0                     PIE2            equ	4000	;# 
   735   000FA1                     PIR2            equ	4001	;# 
   736   000FA2                     IPR2            equ	4002	;# 
   737   000FA6                     EECON1          equ	4006	;# 
   738   000FA7                     EECON2          equ	4007	;# 
   739   000FA8                     EEDATA          equ	4008	;# 
   740   000FA9                     EEADR           equ	4009	;# 
   741   000FAA                     EEADRH          equ	4010	;# 
   742   000FAB                     RCSTA           equ	4011	;# 
   743   000FAB                     RCSTA1          equ	4011	;# 
   744   000FAC                     TXSTA           equ	4012	;# 
   745   000FAC                     TXSTA1          equ	4012	;# 
   746   000FAD                     TXREG           equ	4013	;# 
   747   000FAD                     TXREG1          equ	4013	;# 
   748   000FAE                     RCREG           equ	4014	;# 
   749   000FAE                     RCREG1          equ	4014	;# 
   750   000FAF                     SPBRG           equ	4015	;# 
   751   000FAF                     SPBRG1          equ	4015	;# 
   752   000FB0                     SPBRGH          equ	4016	;# 
   753   000FB1                     T3CON           equ	4017	;# 
   754   000FB2                     TMR3            equ	4018	;# 
   755   000FB2                     TMR3L           equ	4018	;# 
   756   000FB3                     TMR3H           equ	4019	;# 
   757   000FB4                     CVRCON2         equ	4020	;# 
   758   000FB5                     CVRCON          equ	4021	;# 
   759   000FB6                     ECCP1AS         equ	4022	;# 
   760   000FB7                     PWM1CON         equ	4023	;# 
   761   000FB8                     BAUDCON         equ	4024	;# 
   762   000FB8                     BAUDCTL         equ	4024	;# 
   763   000FB9                     PSTRCON         equ	4025	;# 
   764   000FBA                     CCP2CON         equ	4026	;# 
   765   000FBB                     CCPR2           equ	4027	;# 
   766   000FBB                     CCPR2L          equ	4027	;# 
   767   000FBC                     CCPR2H          equ	4028	;# 
   768   000FBD                     CCP1CON         equ	4029	;# 
   769   000FBE                     CCPR1           equ	4030	;# 
   770   000FBE                     CCPR1L          equ	4030	;# 
   771   000FBF                     CCPR1H          equ	4031	;# 
   772   000FC0                     ADCON2          equ	4032	;# 
   773   000FC1                     ADCON1          equ	4033	;# 
   774   000FC2                     ADCON0          equ	4034	;# 
   775   000FC3                     ADRES           equ	4035	;# 
   776   000FC3                     ADRESL          equ	4035	;# 
   777   000FC4                     ADRESH          equ	4036	;# 
   778   000FC5                     SSPCON2         equ	4037	;# 
   779   000FC6                     SSPCON1         equ	4038	;# 
   780   000FC7                     SSPSTAT         equ	4039	;# 
   781   000FC8                     SSPADD          equ	4040	;# 
   782   000FC9                     SSPBUF          equ	4041	;# 
   783   000FCA                     T2CON           equ	4042	;# 
   784   000FCB                     PR2             equ	4043	;# 
   785   000FCB                     MEMCON          equ	4043	;# 
   786   000FCC                     TMR2            equ	4044	;# 
   787   000FCD                     T1CON           equ	4045	;# 
   788   000FCE                     TMR1            equ	4046	;# 
   789   000FCE                     TMR1L           equ	4046	;# 
   790   000FCF                     TMR1H           equ	4047	;# 
   791   000FD0                     RCON            equ	4048	;# 
   792   000FD1                     WDTCON          equ	4049	;# 
   793   000FD2                     HLVDCON         equ	4050	;# 
   794   000FD2                     LVDCON          equ	4050	;# 
   795   000FD3                     OSCCON          equ	4051	;# 
   796   000FD5                     T0CON           equ	4053	;# 
   797   000FD6                     TMR0            equ	4054	;# 
   798   000FD6                     TMR0L           equ	4054	;# 
   799   000FD7                     TMR0H           equ	4055	;# 
   800   000FD8                     STATUS          equ	4056	;# 
   801   000FD9                     FSR2            equ	4057	;# 
   802   000FD9                     FSR2L           equ	4057	;# 
   803   000FDA                     FSR2H           equ	4058	;# 
   804   000FDB                     PLUSW2          equ	4059	;# 
   805   000FDC                     PREINC2         equ	4060	;# 
   806   000FDD                     POSTDEC2        equ	4061	;# 
   807   000FDE                     POSTINC2        equ	4062	;# 
   808   000FDF                     INDF2           equ	4063	;# 
   809   000FE0                     BSR             equ	4064	;# 
   810   000FE1                     FSR1            equ	4065	;# 
   811   000FE1                     FSR1L           equ	4065	;# 
   812   000FE2                     FSR1H           equ	4066	;# 
   813   000FE3                     PLUSW1          equ	4067	;# 
   814   000FE4                     PREINC1         equ	4068	;# 
   815   000FE5                     POSTDEC1        equ	4069	;# 
   816   000FE6                     POSTINC1        equ	4070	;# 
   817   000FE7                     INDF1           equ	4071	;# 
   818   000FE8                     WREG            equ	4072	;# 
   819   000FE9                     FSR0            equ	4073	;# 
   820   000FE9                     FSR0L           equ	4073	;# 
   821   000FEA                     FSR0H           equ	4074	;# 
   822   000FEB                     PLUSW0          equ	4075	;# 
   823   000FEC                     PREINC0         equ	4076	;# 
   824   000FED                     POSTDEC0        equ	4077	;# 
   825   000FEE                     POSTINC0        equ	4078	;# 
   826   000FEF                     INDF0           equ	4079	;# 
   827   000FF0                     INTCON3         equ	4080	;# 
   828   000FF1                     INTCON2         equ	4081	;# 
   829   000FF2                     INTCON          equ	4082	;# 
   830   000FF3                     PROD            equ	4083	;# 
   831   000FF3                     PRODL           equ	4083	;# 
   832   000FF4                     PRODH           equ	4084	;# 
   833   000FF5                     TABLAT          equ	4085	;# 
   834   000FF6                     TBLPTR          equ	4086	;# 
   835   000FF6                     TBLPTRL         equ	4086	;# 
   836   000FF7                     TBLPTRH         equ	4087	;# 
   837   000FF8                     TBLPTRU         equ	4088	;# 
   838   000FF9                     PCLAT           equ	4089	;# 
   839   000FF9                     PC              equ	4089	;# 
   840   000FF9                     PCL             equ	4089	;# 
   841   000FFA                     PCLATH          equ	4090	;# 
   842   000FFB                     PCLATU          equ	4091	;# 
   843   000FFC                     STKPTR          equ	4092	;# 
   844   000FFD                     TOS             equ	4093	;# 
   845   000FFD                     TOSL            equ	4093	;# 
   846   000FFE                     TOSH            equ	4094	;# 
   847   000FFF                     TOSU            equ	4095	;# 
   848                           
   849                           	psect	smallconst
   850   001000                     __psmallconst:
   851                           	callstack 0
   852   001000  00                 	db	0
   853   001001                     _default_security_key:
   854                           	callstack 0
   855   001001  00                 	db	0
   856   001002  10                 	db	16
   857   001003  25                 	db	37
   858   001004  37                 	db	55
   859   001005  04                 	db	4
   860   001006  55                 	db	85
   861   001007  06                 	db	6
   862   001008  79                 	db	121
   863   001009  08                 	db	8
   864   00100A  09                 	db	9
   865   00100B  10                 	db	16
   866   00100C  11                 	db	17
   867   00100D  12                 	db	18
   868   00100E  13                 	db	19
   869   00100F  14                 	db	20
   870   001010  15                 	db	21
   871   001011                     __end_of_default_security_key:
   872                           	callstack 0
   873   001011                     _default_mac_address:
   874                           	callstack 0
   875   001011  11                 	db	17
   876   001012  28                 	db	40
   877   001013  35                 	db	53
   878   001014  44                 	db	68
   879   001015  56                 	db	86
   880   001016  66                 	db	102
   881   001017  77                 	db	119
   882   001018  01                 	db	1
   883   001019                     __end_of_default_mac_address:
   884                           	callstack 0
   885   007CED                     _RCIE           set	31981
   886   007CEE                     _ADIE           set	31982
   887   007D03                     _BCLIE          set	32003
   888   007CEB                     _SSPIE          set	31979
   889   007D04                     _EEIE           set	32004
   890   007D00                     _CCP2IE         set	32000
   891   007CEA                     _CCP1IE         set	31978
   892   007CE9                     _TMR2IE         set	31977
   893   007CE8                     _TMR1IE         set	31976
   894   007F95                     _T0IE           set	32661
   895   007F93                     _RBIE           set	32659
   896   007F96                     _PEIE           set	32662
   897   007F97                     _GIE            set	32663
   898   000F9B                     _OSCTUNE        set	3995
   899   000FD3                     _OSCCON         set	4051
   900   000F96                     _TRISEbits      set	3990
   901   000F84                     _PORTE          set	3972
   902   000F83                     _PORTD          set	3971
   903   000F82                     _PORTC          set	3970
   904   000F81                     _PORTB          set	3969
   905   000F80                     _PORTA          set	3968
   906   000F8D                     _LATEbits       set	3981
   907   000FC9                     _SSPBUF         set	4041
   908   000F9E                     _PIR1bits       set	3998
   909   000FC6                     _SSPCON1bits    set	4038
   910   000FC7                     _SSPSTATbits    set	4039
   911   000F8C                     _LATDbits       set	3980
   912   000F8B                     _LATCbits       set	3979
   913   000F95                     _TRISDbits      set	3989
   914   000F94                     _TRISCbits      set	3988
   915   000F93                     _TRISBbits      set	3987
   916   001019                     STR_1:
   917   001019  68                 	db	104	;'h'
   918   00101A  6F                 	db	111	;'o'
   919   00101B  6C                 	db	108	;'l'
   920   00101C  61                 	db	97	;'a'
   921   00101D  20                 	db	32
   922   00101E  6D                 	db	109	;'m'
   923   00101F  75                 	db	117	;'u'
   924   001020  6E                 	db	110	;'n'
   925   001021  64                 	db	100	;'d'
   926   001022  6F                 	db	111	;'o'
   927   001023  2E                 	db	46
   928   001024  20                 	db	32
   929   001025  63                 	db	99	;'c'
   930   001026  61                 	db	97	;'a'
   931   001027  72                 	db	114	;'r'
   932   001028  61                 	db	97	;'a'
   933   001029  6A                 	db	106	;'j'
   934   00102A  6F                 	db	111	;'o'
   935   00102B  2C                 	db	44
   936   00102C  20                 	db	32
   937   00102D  6F                 	db	111	;'o'
   938   00102E  74                 	db	116	;'t'
   939   00102F  72                 	db	114	;'r'
   940   001030  61                 	db	97	;'a'
   941   001031  20                 	db	32
   942   001032  76                 	db	118	;'v'
   943   001033  65                 	db	101	;'e'
   944   001034  7A                 	db	122	;'z'
   945   001035  21                 	db	33
   946   001036  21                 	db	33
   947   001037  21                 	db	33
   948   001038  00                 	db	0
   949   001039  00                 	db	0	; dummy byte at the end
   950   000001                     __activetblptr  equ	1
   951                           
   952                           ; #config settings
   953                           
   954                           	psect	cinit
   955   0015BE                     __pcinit:
   956                           	callstack 0
   957   0015BE                     start_initialization:
   958                           	callstack 0
   959   0015BE                     __initialization:
   960                           	callstack 0
   961                           
   962                           ; Clear objects allocated to BANK0 (55 bytes)
   963   0015BE  EE00  F060         	lfsr	0,__pbssBANK0
   964   0015C2  0E37               	movlw	55
   965   0015C4                     clear_0:
   966   0015C4  6AEE               	clrf	postinc0,c
   967   0015C6  06E8               	decf	wreg,f,c
   968   0015C8  E1FD               	bnz	clear_0
   969                           
   970                           ; Clear objects allocated to COMRAM (41 bytes)
   971   0015CA  EE00  F001         	lfsr	0,__pbssCOMRAM
   972   0015CE  0E29               	movlw	41
   973   0015D0                     clear_1:
   974   0015D0  6AEE               	clrf	postinc0,c
   975   0015D2  06E8               	decf	wreg,f,c
   976   0015D4  E1FD               	bnz	clear_1
   977   0015D6                     end_of_initialization:
   978                           	callstack 0
   979   0015D6                     __end_of__initialization:
   980                           	callstack 0
   981   0015D6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   982   0015D8  6EF8               	movwf	tblptru,c
   983   0015DA  0E10               	movlw	high __Lsmallconst
   984   0015DC  6EF7               	movwf	tblptrh,c
   985   0015DE  0100               	movlb	0
   986   0015E0  EF61  F009         	goto	_main	;jump to C main() function
   987                           
   988                           	psect	bssCOMRAM
   989   000001                     __pbssCOMRAM:
   990                           	callstack 0
   991   000001                     _mrf24_data_config:
   992                           	callstack 0
   993   000001                     	ds	34
   994   000023                     _mrf24_data_out:
   995                           	callstack 0
   996   000023                     	ds	6
   997   000029                     _my_default_mac_address:
   998                           	callstack 0
   999   000029                     	ds	1
  1000                           
  1001                           	psect	bssBANK0
  1002   000060                     __pbssBANK0:
  1003                           	callstack 0
  1004   000060                     _mrf24_data_in:
  1005                           	callstack 0
  1006   000060                     	ds	55
  1007                           
  1008                           	psect	cstackCOMRAM
  1009   00002A                     __pcstackCOMRAM:
  1010                           	callstack 0
  1011   00002A                     ?_strlen:
  1012                           	callstack 0
  1013   00002A                     SetCSPin@estado:
  1014                           	callstack 0
  1015   00002A                     SetWakePin@estado:
  1016                           	callstack 0
  1017   00002A                     SetResetPin@estado:
  1018                           	callstack 0
  1019   00002A                     SPIWriteByte@dato:
  1020                           	callstack 0
  1021   00002A                     strlen@s:
  1022                           	callstack 0
  1023   00002A                     ??_InicializoVariables:
  1024   00002A                     
  1025                           ; 1 bytes @ 0x0
  1026   00002A                     	ds	1
  1027   00002B                     WriteByteSPIPort@dato:
  1028                           	callstack 0
  1029   00002B                     InicializoVariables@i:
  1030                           	callstack 0
  1031   00002B                     
  1032                           ; 1 bytes @ 0x1
  1033   00002B                     	ds	1
  1034   00002C                     SetShortAddr@value:
  1035                           	callstack 0
  1036   00002C                     GetShortAddr@leido_spi:
  1037                           	callstack 0
  1038   00002C                     strlen@a:
  1039                           	callstack 0
  1040   00002C                     SetLongAddr@reg_address:
  1041                           	callstack 0
  1042   00002C                     GetLongAddr@reg_address:
  1043                           	callstack 0
  1044   00002C                     
  1045                           ; 1 bytes @ 0x2
  1046   00002C                     	ds	1
  1047   00002D                     SetShortAddr@reg_address:
  1048                           	callstack 0
  1049   00002D                     GetShortAddr@reg_address:
  1050                           	callstack 0
  1051   00002D                     SetMensajeSalida@mensaje:
  1052                           	callstack 0
  1053   00002D                     
  1054                           ; 1 bytes @ 0x3
  1055   00002D                     	ds	1
  1056   00002E                     SetLongAddr@value:
  1057                           	callstack 0
  1058   00002E                     SetDeviceMACAddress@i:
  1059                           	callstack 0
  1060   00002E                     ??_GetLongAddr:
  1061   00002E                     
  1062                           ; 1 bytes @ 0x4
  1063   00002E                     	ds	1
  1064   00002F                     ??_SetLongAddr:
  1065                           
  1066                           ; 1 bytes @ 0x5
  1067   00002F                     	ds	1
  1068   000030                     GetLongAddr@toReturn:
  1069                           	callstack 0
  1070                           
  1071                           ; 1 bytes @ 0x6
  1072   000030                     	ds	1
  1073   000031                     ??_MRF24J40Init:
  1074   000031                     ??_EnviarDato:
  1075                           
  1076                           ; 1 bytes @ 0x7
  1077   000031                     	ds	1
  1078   000032                     MRF24J40Init@lectura:
  1079                           	callstack 0
  1080   000032                     EnviarDato@i:
  1081                           	callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x8
  1084   000032                     	ds	1
  1085   000033                     EnviarDato@pos:
  1086                           	callstack 0
  1087                           
  1088                           ; 1 bytes @ 0x9
  1089   000033                     	ds	1
  1090   000034                     ??_main:
  1091                           
  1092                           ; 1 bytes @ 0xA
  1093   000034                     	ds	2
  1094                           
  1095 ;;
  1096 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1097 ;;
  1098 ;; *************** function _main *****************
  1099 ;; Defined at:
  1100 ;;		line 23 in file "main.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;Total ram usage:        2 bytes
  1119 ;; Hardware stack levels required when called: 5
  1120 ;; This function calls:
  1121 ;;		_BoardInit
  1122 ;;		_EnviarDato
  1123 ;;		_MRF24J40Init
  1124 ;;		_SetMensajeSalida
  1125 ;; This function is called by:
  1126 ;;		Startup code after reset
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text0
  1131   0012C2                     __ptext0:
  1132                           	callstack 0
  1133   0012C2                     _main:
  1134                           	callstack 26
  1135   0012C2                     
  1136                           ;main.c: 25:     BoardInit();
  1137   0012C2  EC7D  F00A         	call	_BoardInit	;wreg free
  1138   0012C6                     
  1139                           ;main.c: 26:     MRF24J40Init();
  1140   0012C6  EC1D  F008         	call	_MRF24J40Init	;wreg free
  1141   0012CA                     
  1142                           ;main.c: 28:     SetMensajeSalida("hola mundo. carajo, otra vez!!!");
  1143   0012CA  0E19               	movlw	low STR_1
  1144   0012CC  6E2D               	movwf	SetMensajeSalida@mensaje^0,c
  1145   0012CE  EC48  F00B         	call	_SetMensajeSalida	;wreg free
  1146   0012D2                     l209:
  1147   0012D2  0004               	clrwdt		;# 
  1148   0012D4                     
  1149                           ;main.c: 34:         LATEbits.LATE2 = !LATEbits.LATE2;
  1150   0012D4  A48D               	btfss	141,2,c	;volatile
  1151   0012D6  EF6F  F009         	goto	u491
  1152   0012DA  EF73  F009         	goto	u490
  1153   0012DE                     u491:
  1154   0012DE  6A34               	clrf	??_main^0,c
  1155   0012E0  2A34               	incf	??_main^0,f,c
  1156   0012E2  EF74  F009         	goto	u508
  1157   0012E6                     u490:
  1158   0012E6  6A34               	clrf	??_main^0,c
  1159   0012E8                     u508:
  1160   0012E8  4634               	rlncf	??_main^0,f,c
  1161   0012EA  4634               	rlncf	??_main^0,f,c
  1162   0012EC  508D               	movf	141,w,c	;volatile
  1163   0012EE  1834               	xorwf	??_main^0,w,c
  1164   0012F0  0BFB               	andlw	-5
  1165   0012F2  1834               	xorwf	??_main^0,w,c
  1166   0012F4  6E8D               	movwf	141,c	;volatile
  1167   0012F6                     
  1168                           ;main.c: 35:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1169   0012F6  0E06               	movlw	6
  1170   0012F8  6E35               	movwf	(??_main+1)^0,c
  1171   0012FA  0E13               	movlw	19
  1172   0012FC  6E34               	movwf	??_main^0,c
  1173   0012FE  0EAE               	movlw	174
  1174   001300                     u557:
  1175   001300  2EE8               	decfsz	wreg,f,c
  1176   001302  D7FE               	bra	u557
  1177   001304  2E34               	decfsz	??_main^0,f,c
  1178   001306  D7FC               	bra	u557
  1179   001308  2E35               	decfsz	(??_main+1)^0,f,c
  1180   00130A  D7FA               	bra	u557
  1181   00130C                     
  1182                           ;main.c: 36:         LATEbits.LATE1 = !LATEbits.LATE1;
  1183   00130C  A28D               	btfss	141,1,c	;volatile
  1184   00130E  EF8B  F009         	goto	u511
  1185   001312  EF8F  F009         	goto	u510
  1186   001316                     u511:
  1187   001316  6A34               	clrf	??_main^0,c
  1188   001318  2A34               	incf	??_main^0,f,c
  1189   00131A  EF90  F009         	goto	u528
  1190   00131E                     u510:
  1191   00131E  6A34               	clrf	??_main^0,c
  1192   001320                     u528:
  1193   001320  4634               	rlncf	??_main^0,f,c
  1194   001322  508D               	movf	141,w,c	;volatile
  1195   001324  1834               	xorwf	??_main^0,w,c
  1196   001326  0BFD               	andlw	-3
  1197   001328  1834               	xorwf	??_main^0,w,c
  1198   00132A  6E8D               	movwf	141,c	;volatile
  1199   00132C                     
  1200                           ;main.c: 37:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1201   00132C  0E06               	movlw	6
  1202   00132E  6E35               	movwf	(??_main+1)^0,c
  1203   001330  0E13               	movlw	19
  1204   001332  6E34               	movwf	??_main^0,c
  1205   001334  0EAE               	movlw	174
  1206   001336                     u567:
  1207   001336  2EE8               	decfsz	wreg,f,c
  1208   001338  D7FE               	bra	u567
  1209   00133A  2E34               	decfsz	??_main^0,f,c
  1210   00133C  D7FC               	bra	u567
  1211   00133E  2E35               	decfsz	(??_main+1)^0,f,c
  1212   001340  D7FA               	bra	u567
  1213   001342                     
  1214                           ;main.c: 38:         LATEbits.LATE0 = !LATEbits.LATE0;
  1215   001342  A08D               	btfss	141,0,c	;volatile
  1216   001344  EFA6  F009         	goto	u531
  1217   001348  EFAA  F009         	goto	u530
  1218   00134C                     u531:
  1219   00134C  6A34               	clrf	??_main^0,c
  1220   00134E  2A34               	incf	??_main^0,f,c
  1221   001350  EFAB  F009         	goto	u548
  1222   001354                     u530:
  1223   001354  6A34               	clrf	??_main^0,c
  1224   001356                     u548:
  1225   001356  508D               	movf	141,w,c	;volatile
  1226   001358  1834               	xorwf	??_main^0,w,c
  1227   00135A  0BFE               	andlw	-2
  1228   00135C  1834               	xorwf	??_main^0,w,c
  1229   00135E  6E8D               	movwf	141,c	;volatile
  1230   001360                     
  1231                           ;main.c: 39:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1232   001360  0E06               	movlw	6
  1233   001362  6E35               	movwf	(??_main+1)^0,c
  1234   001364  0E13               	movlw	19
  1235   001366  6E34               	movwf	??_main^0,c
  1236   001368  0EAE               	movlw	174
  1237   00136A                     u577:
  1238   00136A  2EE8               	decfsz	wreg,f,c
  1239   00136C  D7FE               	bra	u577
  1240   00136E  2E34               	decfsz	??_main^0,f,c
  1241   001370  D7FC               	bra	u577
  1242   001372  2E35               	decfsz	(??_main+1)^0,f,c
  1243   001374  D7FA               	bra	u577
  1244   001376                     
  1245                           ;main.c: 41:         EnviarDato();
  1246   001376  ECD6  F008         	call	_EnviarDato	;wreg free
  1247   00137A  EF69  F009         	goto	l209
  1248   00137E  EF00  F000         	goto	start
  1249   001382                     __end_of_main:
  1250                           	callstack 0
  1251                           
  1252 ;; *************** function _SetMensajeSalida *****************
  1253 ;; Defined at:
  1254 ;;		line 632 in file "drivers/scr/drv_mrf24j40.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  1257 ;;		 -> STR_1(32), 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1269 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;Total ram usage:        1 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 1
  1276 ;; This function calls:
  1277 ;;		_strlen
  1278 ;; This function is called by:
  1279 ;;		_main
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text1
  1284   001690                     __ptext1:
  1285                           	callstack 0
  1286   001690                     _SetMensajeSalida:
  1287                           	callstack 29
  1288   001690                     
  1289                           ;drivers/scr/drv_mrf24j40.c: 635: mrf24_data_out.buffer_salida = mensaje;
  1290   001690  C02D  F028         	movff	SetMensajeSalida@mensaje,_mrf24_data_out+5
  1291   001694                     
  1292                           ;drivers/scr/drv_mrf24j40.c: 636: mrf24_data_out.tamano_mensaje = (uint8_t) strlen(mensa
      +                          je);
  1293   001694  C02D  F02A         	movff	SetMensajeSalida@mensaje,strlen@s
  1294   001698  EC9C  F00A         	call	_strlen	;wreg free
  1295   00169C  502A               	movf	?_strlen^0,w,c
  1296   00169E  6E27               	movwf	(_mrf24_data_out+4)^0,c
  1297   0016A0  0012               	return		;funcret
  1298   0016A2                     __end_of_SetMensajeSalida:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _strlen *****************
  1302 ;; Defined at:
  1303 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1306 ;;		 -> STR_1(32), 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1309 ;;		 -> STR_1(32), 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  2    0[COMRAM] unsigned int 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1322 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1323 ;;Total ram usage:        3 bytes
  1324 ;; Hardware stack levels used: 1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_SetMensajeSalida
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text2
  1333   001538                     __ptext2:
  1334                           	callstack 0
  1335   001538                     _strlen:
  1336                           	callstack 29
  1337   001538  C02A  F02C         	movff	strlen@s,strlen@a
  1338   00153C  EFA1  F00A         	goto	l1579
  1339   001540                     l1577:
  1340   001540  2A2A               	incf	strlen@s^0,f,c
  1341   001542                     l1579:
  1342   001542  C02A  FFF6         	movff	strlen@s,tblptrl
  1343   001546                     	if	0	;There is only one active tblptr byte
  1344   001546                     	endif
  1345   001546                     	if	0	;tblptru may be non-zero
  1346   001546                     	endif
  1347   001546                     	if	0	;tblptru may be non-zero
  1348   001546                     	endif
  1349   001546  0008               	tblrd		*
  1350   001548  50F5               	movf	tablat,w,c
  1351   00154A  0900               	iorlw	0
  1352   00154C  A4D8               	btfss	status,2,c
  1353   00154E  EFAB  F00A         	goto	u381
  1354   001552  EFAD  F00A         	goto	u380
  1355   001556                     u381:
  1356   001556  EFA0  F00A         	goto	l1577
  1357   00155A                     u380:
  1358   00155A  502C               	movf	strlen@a^0,w,c
  1359   00155C  5C2A               	subwf	strlen@s^0,w,c
  1360   00155E  6E2A               	movwf	?_strlen^0,c
  1361   001560  6A2B               	clrf	(?_strlen+1)^0,c
  1362   001562  BE2A               	btfsc	?_strlen^0,7,c
  1363   001564  062B               	decf	(?_strlen+1)^0,f,c
  1364   001566  0012               	return		;funcret
  1365   001568                     __end_of_strlen:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _MRF24J40Init *****************
  1369 ;; Defined at:
  1370 ;;		line 277 in file "drivers/scr/drv_mrf24j40.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  lectura         1    8[COMRAM] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      void 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;Total ram usage:        2 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 4
  1391 ;; This function calls:
  1392 ;;		_GetLongAddr
  1393 ;;		_GetShortAddr
  1394 ;;		_InicializoPines
  1395 ;;		_InicializoVariables
  1396 ;;		_SetChannel
  1397 ;;		_SetDeviceAddress
  1398 ;;		_SetDeviceMACAddress
  1399 ;;		_SetLongAddr
  1400 ;;		_SetResetPin
  1401 ;;		_SetShortAddr
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text3
  1408   00103A                     __ptext3:
  1409                           	callstack 0
  1410   00103A                     _MRF24J40Init:
  1411                           	callstack 26
  1412   00103A                     
  1413                           ;drivers/scr/drv_mrf24j40.c: 279:     uint8_t lectura;;drivers/scr/drv_mrf24j40.c: 280: 
      +                              InicializoVariables();
  1414   00103A  ECC1  F009         	call	_InicializoVariables	;wreg free
  1415   00103E                     
  1416                           ;drivers/scr/drv_mrf24j40.c: 281:     InicializoPines();
  1417   00103E  EC15  F00B         	call	_InicializoPines	;wreg free
  1418   001042                     
  1419                           ;drivers/scr/drv_mrf24j40.c: 282:   _delay((unsigned long)((5)*(16000000/4000.0)));;
  1420   001042  0E1A               	movlw	26
  1421   001044  6E31               	movwf	??_MRF24J40Init^0,c
  1422   001046  0EF8               	movlw	248
  1423   001048                     u587:
  1424   001048  2EE8               	decfsz	wreg,f,c
  1425   00104A  D7FE               	bra	u587
  1426   00104C  2E31               	decfsz	??_MRF24J40Init^0,f,c
  1427   00104E  D7FC               	bra	u587
  1428   001050  F000 F000          	nop2	
  1429   001054                     
  1430                           ;drivers/scr/drv_mrf24j40.c: 283:     SetResetPin(1);
  1431   001054  0E01               	movlw	1
  1432   001056  EC58  F00B         	call	_SetResetPin
  1433   00105A                     
  1434                           ;drivers/scr/drv_mrf24j40.c: 284:  _delay((unsigned long)((5)*(16000000/4000.0)));;
  1435   00105A  0E1A               	movlw	26
  1436   00105C  6E31               	movwf	??_MRF24J40Init^0,c
  1437   00105E  0EF8               	movlw	248
  1438   001060                     u597:
  1439   001060  2EE8               	decfsz	wreg,f,c
  1440   001062  D7FE               	bra	u597
  1441   001064  2E31               	decfsz	??_MRF24J40Init^0,f,c
  1442   001066  D7FC               	bra	u597
  1443   001068  F000 F000          	nop2	
  1444   00106C                     
  1445                           ;drivers/scr/drv_mrf24j40.c: 285:     SetShortAddr((0x2A),0x07);
  1446   00106C  0E07               	movlw	7
  1447   00106E  6E2C               	movwf	SetShortAddr@value^0,c
  1448   001070  0E2A               	movlw	42
  1449   001072  EC05  F00B         	call	_SetShortAddr
  1450   001076                     l1597:
  1451                           
  1452                           ;drivers/scr/drv_mrf24j40.c: 288:         lectura = GetShortAddr((0x2A));
  1453   001076  0E2A               	movlw	42
  1454   001078  ECF2  F00A         	call	_GetShortAddr
  1455   00107C  6E32               	movwf	MRF24J40Init@lectura^0,c
  1456   00107E                     
  1457                           ;drivers/scr/drv_mrf24j40.c: 289:     }while((lectura&0x07) != 0x00);
  1458   00107E  C032  F031         	movff	MRF24J40Init@lectura,??_MRF24J40Init
  1459   001082  0E07               	movlw	7
  1460   001084  1631               	andwf	??_MRF24J40Init^0,f,c
  1461   001086  A4D8               	btfss	status,2,c
  1462   001088  EF48  F008         	goto	u391
  1463   00108C  EF4A  F008         	goto	u390
  1464   001090                     u391:
  1465   001090  EF3B  F008         	goto	l1597
  1466   001094                     u390:
  1467   001094                     
  1468                           ;drivers/scr/drv_mrf24j40.c: 290:     _delay((unsigned long)((10)*(16000000/4000.0)));;
  1469   001094  0E34               	movlw	52
  1470   001096  6E31               	movwf	??_MRF24J40Init^0,c
  1471   001098  0EF2               	movlw	242
  1472   00109A                     u607:
  1473   00109A  2EE8               	decfsz	wreg,f,c
  1474   00109C  D7FE               	bra	u607
  1475   00109E  2E31               	decfsz	??_MRF24J40Init^0,f,c
  1476   0010A0  D7FC               	bra	u607
  1477   0010A2                     
  1478                           ;drivers/scr/drv_mrf24j40.c: 291:     SetShortAddr((0x0D), 0x01);
  1479   0010A2  0E01               	movlw	1
  1480   0010A4  6E2C               	movwf	SetShortAddr@value^0,c
  1481   0010A6  0E0D               	movlw	13
  1482   0010A8  EC05  F00B         	call	_SetShortAddr
  1483   0010AC                     
  1484                           ;drivers/scr/drv_mrf24j40.c: 292:     SetDeviceAddress();
  1485   0010AC  ECCA  F00A         	call	_SetDeviceAddress	;wreg free
  1486   0010B0                     
  1487                           ;drivers/scr/drv_mrf24j40.c: 293:     SetDeviceMACAddress();
  1488   0010B0  EC3B  F00A         	call	_SetDeviceMACAddress	;wreg free
  1489   0010B4                     
  1490                           ;drivers/scr/drv_mrf24j40.c: 294:     SetLongAddr((0x202), 0x80);
  1491   0010B4  0E02               	movlw	2
  1492   0010B6  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1493   0010B8  0E02               	movlw	2
  1494   0010BA  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1495   0010BC  0E80               	movlw	128
  1496   0010BE  6E2E               	movwf	SetLongAddr@value^0,c
  1497   0010C0  EC5C  F00A         	call	_SetLongAddr	;wreg free
  1498   0010C4                     
  1499                           ;drivers/scr/drv_mrf24j40.c: 295:     SetLongAddr((0x203), (0XC0) | (0X38));
  1500   0010C4  0E02               	movlw	2
  1501   0010C6  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1502   0010C8  0E03               	movlw	3
  1503   0010CA  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1504   0010CC  0EF8               	movlw	248
  1505   0010CE  6E2E               	movwf	SetLongAddr@value^0,c
  1506   0010D0  EC5C  F00A         	call	_SetLongAddr	;wreg free
  1507   0010D4                     
  1508                           ;drivers/scr/drv_mrf24j40.c: 296:  SetLongAddr((0x206), 0x90);
  1509   0010D4  0E02               	movlw	2
  1510   0010D6  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1511   0010D8  0E06               	movlw	6
  1512   0010DA  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1513   0010DC  0E90               	movlw	144
  1514   0010DE  6E2E               	movwf	SetLongAddr@value^0,c
  1515   0010E0  EC5C  F00A         	call	_SetLongAddr	;wreg free
  1516   0010E4                     
  1517                           ;drivers/scr/drv_mrf24j40.c: 297:  SetLongAddr((0x207), 0x80);
  1518   0010E4  0E02               	movlw	2
  1519   0010E6  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1520   0010E8  0E07               	movlw	7
  1521   0010EA  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1522   0010EC  0E80               	movlw	128
  1523   0010EE  6E2E               	movwf	SetLongAddr@value^0,c
  1524   0010F0  EC5C  F00A         	call	_SetLongAddr	;wreg free
  1525   0010F4                     
  1526                           ;drivers/scr/drv_mrf24j40.c: 298:  SetLongAddr((0x208), 0x10);
  1527   0010F4  0E02               	movlw	2
  1528   0010F6  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1529   0010F8  0E08               	movlw	8
  1530   0010FA  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1531   0010FC  0E10               	movlw	16
  1532   0010FE  6E2E               	movwf	SetLongAddr@value^0,c
  1533   001100  EC5C  F00A         	call	_SetLongAddr	;wreg free
  1534   001104                     
  1535                           ;drivers/scr/drv_mrf24j40.c: 299:  SetLongAddr((0x220), 0x21);
  1536   001104  0E02               	movlw	2
  1537   001106  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1538   001108  0E20               	movlw	32
  1539   00110A  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1540   00110C  0E21               	movlw	33
  1541   00110E  6E2E               	movwf	SetLongAddr@value^0,c
  1542   001110  EC5C  F00A         	call	_SetLongAddr	;wreg free
  1543   001114                     
  1544                           ;drivers/scr/drv_mrf24j40.c: 300:     SetShortAddr((0x3A), 0x80);
  1545   001114  0E80               	movlw	128
  1546   001116  6E2C               	movwf	SetShortAddr@value^0,c
  1547   001118  0E3A               	movlw	58
  1548   00111A  EC05  F00B         	call	_SetShortAddr
  1549   00111E                     
  1550                           ;drivers/scr/drv_mrf24j40.c: 301:     SetShortAddr((0x3E), 0x40);
  1551   00111E  0E40               	movlw	64
  1552   001120  6E2C               	movwf	SetShortAddr@value^0,c
  1553   001122  0E3E               	movlw	62
  1554   001124  EC05  F00B         	call	_SetShortAddr
  1555   001128                     
  1556                           ;drivers/scr/drv_mrf24j40.c: 302:     SetShortAddr((0x3F), 0x60);
  1557   001128  0E60               	movlw	96
  1558   00112A  6E2C               	movwf	SetShortAddr@value^0,c
  1559   00112C  0E3F               	movlw	63
  1560   00112E  EC05  F00B         	call	_SetShortAddr
  1561   001132                     
  1562                           ;drivers/scr/drv_mrf24j40.c: 303:     SetShortAddr((0x18), 0x98);
  1563   001132  0E98               	movlw	152
  1564   001134  6E2C               	movwf	SetShortAddr@value^0,c
  1565   001136  0E18               	movlw	24
  1566   001138  EC05  F00B         	call	_SetShortAddr
  1567   00113C                     
  1568                           ;drivers/scr/drv_mrf24j40.c: 304:     SetShortAddr((0x2E), 0x95);
  1569   00113C  0E95               	movlw	149
  1570   00113E  6E2C               	movwf	SetShortAddr@value^0,c
  1571   001140  0E2E               	movlw	46
  1572   001142  EC05  F00B         	call	_SetShortAddr
  1573   001146                     l1631:
  1574                           
  1575                           ;drivers/scr/drv_mrf24j40.c: 307:   lectura = GetLongAddr((0x20f));
  1576   001146  0E02               	movlw	2
  1577   001148  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  1578   00114A  0E0F               	movlw	15
  1579   00114C  6E2C               	movwf	GetLongAddr@reg_address^0,c
  1580   00114E  EC19  F00A         	call	_GetLongAddr	;wreg free
  1581   001152  6E32               	movwf	MRF24J40Init@lectura^0,c
  1582   001154                     
  1583                           ;drivers/scr/drv_mrf24j40.c: 308:  }while((lectura & 0xA0) != 0xA0);
  1584   001154  5032               	movf	MRF24J40Init@lectura^0,w,c
  1585   001156  0BA0               	andlw	160
  1586   001158  0AA0               	xorlw	160
  1587   00115A  A4D8               	btfss	status,2,c
  1588   00115C  EFB2  F008         	goto	u401
  1589   001160  EFB4  F008         	goto	u400
  1590   001164                     u401:
  1591   001164  EFA3  F008         	goto	l1631
  1592   001168                     u400:
  1593   001168                     
  1594                           ;drivers/scr/drv_mrf24j40.c: 309:     SetShortAddr((0x32), 0xE6);
  1595   001168  0EE6               	movlw	230
  1596   00116A  6E2C               	movwf	SetShortAddr@value^0,c
  1597   00116C  0E32               	movlw	50
  1598   00116E  EC05  F00B         	call	_SetShortAddr
  1599                           
  1600                           ;drivers/scr/drv_mrf24j40.c: 310:  SetShortAddr((0x12), 0xB9);
  1601   001172  0EB9               	movlw	185
  1602   001174  6E2C               	movwf	SetShortAddr@value^0,c
  1603   001176  0E12               	movlw	18
  1604   001178  EC05  F00B         	call	_SetShortAddr
  1605                           
  1606                           ;drivers/scr/drv_mrf24j40.c: 311:     SetLongAddr((0x200), 0x03);
  1607   00117C  0E02               	movlw	2
  1608   00117E  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1609   001180  0E00               	movlw	0
  1610   001182  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1611   001184  0E03               	movlw	3
  1612   001186  6E2E               	movwf	SetLongAddr@value^0,c
  1613   001188  EC5C  F00A         	call	_SetLongAddr	;wreg free
  1614                           
  1615                           ;drivers/scr/drv_mrf24j40.c: 312:  SetLongAddr((0x201), 0x02);
  1616   00118C  0E02               	movlw	2
  1617   00118E  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1618   001190  0E01               	movlw	1
  1619   001192  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1620   001194  0E02               	movlw	2
  1621   001196  6E2E               	movwf	SetLongAddr@value^0,c
  1622   001198  EC5C  F00A         	call	_SetLongAddr	;wreg free
  1623                           
  1624                           ;drivers/scr/drv_mrf24j40.c: 313:  SetChannel();
  1625   00119C  ECB4  F00A         	call	_SetChannel	;wreg free
  1626                           
  1627                           ;drivers/scr/drv_mrf24j40.c: 322:  SetShortAddr((0x00),0x00);
  1628   0011A0  0E00               	movlw	0
  1629   0011A2  6E2C               	movwf	SetShortAddr@value^0,c
  1630   0011A4  0E00               	movlw	0
  1631   0011A6  EC05  F00B         	call	_SetShortAddr
  1632   0011AA  0012               	return		;funcret
  1633   0011AC                     __end_of_MRF24J40Init:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _SetDeviceMACAddress *****************
  1637 ;; Defined at:
  1638 ;;		line 454 in file "drivers/scr/drv_mrf24j40.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  i               2    4[COMRAM] int 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1656 ;;Total ram usage:        2 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 3
  1659 ;; This function calls:
  1660 ;;		_SetShortAddr
  1661 ;; This function is called by:
  1662 ;;		_MRF24J40Init
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text4
  1667   001476                     __ptext4:
  1668                           	callstack 0
  1669   001476                     _SetDeviceMACAddress:
  1670                           	callstack 26
  1671   001476                     
  1672                           ;drivers/scr/drv_mrf24j40.c: 456:     my_default_mac_address = EADR0;
  1673   001476  0E05               	movlw	5
  1674   001478  6E29               	movwf	_my_default_mac_address^0,c
  1675                           
  1676                           ;drivers/scr/drv_mrf24j40.c: 458:     for(int i = 0; i < 8; i++) {
  1677   00147A  0E00               	movlw	0
  1678   00147C  6E2F               	movwf	(SetDeviceMACAddress@i+1)^0,c
  1679   00147E  0E00               	movlw	0
  1680   001480  6E2E               	movwf	SetDeviceMACAddress@i^0,c
  1681   001482                     l1545:
  1682                           
  1683                           ;drivers/scr/drv_mrf24j40.c: 460:         SetShortAddr(my_default_mac_address++, mrf24_d
      +                          ata_config.my_mac[i]);
  1684   001482  502E               	movf	SetDeviceMACAddress@i^0,w,c
  1685   001484  0F15               	addlw	low (_mrf24_data_config+20)
  1686   001486  6ED9               	movwf	fsr2l,c
  1687   001488  6ADA               	clrf	fsr2h,c
  1688   00148A  50DF               	movf	indf2,w,c
  1689   00148C  6E2C               	movwf	SetShortAddr@value^0,c
  1690   00148E  5029               	movf	_my_default_mac_address^0,w,c
  1691   001490  EC05  F00B         	call	_SetShortAddr
  1692   001494  2A29               	incf	_my_default_mac_address^0,f,c
  1693   001496                     
  1694                           ;drivers/scr/drv_mrf24j40.c: 461:     }
  1695   001496  4A2E               	infsnz	SetDeviceMACAddress@i^0,f,c
  1696   001498  2A2F               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  1697   00149A  BE2F               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  1698   00149C  EF59  F00A         	goto	u361
  1699   0014A0  502F               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  1700   0014A2  E109               	bnz	u360
  1701   0014A4  0E08               	movlw	8
  1702   0014A6  5C2E               	subwf	SetDeviceMACAddress@i^0,w,c
  1703   0014A8  A0D8               	btfss	status,0,c
  1704   0014AA  EF59  F00A         	goto	u361
  1705   0014AE  EF5B  F00A         	goto	u360
  1706   0014B2                     u361:
  1707   0014B2  EF41  F00A         	goto	l1545
  1708   0014B6                     u360:
  1709   0014B6  0012               	return		;funcret
  1710   0014B8                     __end_of_SetDeviceMACAddress:
  1711                           	callstack 0
  1712                           
  1713 ;; *************** function _SetDeviceAddress *****************
  1714 ;; Defined at:
  1715 ;;		line 440 in file "drivers/scr/drv_mrf24j40.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;		None
  1718 ;; Auto vars:     Size  Location     Type
  1719 ;;		None
  1720 ;; Return value:  Size  Location     Type
  1721 ;;                  1    wreg      void 
  1722 ;; Registers used:
  1723 ;;		wreg, status,2, status,0, cstack
  1724 ;; Tracked objects:
  1725 ;;		On entry : 0/0
  1726 ;;		On exit  : 0/0
  1727 ;;		Unchanged: 0/0
  1728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1733 ;;Total ram usage:        0 bytes
  1734 ;; Hardware stack levels used: 1
  1735 ;; Hardware stack levels required when called: 3
  1736 ;; This function calls:
  1737 ;;		_SetShortAddr
  1738 ;; This function is called by:
  1739 ;;		_MRF24J40Init
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           	psect	text5
  1744   001594                     __ptext5:
  1745                           	callstack 0
  1746   001594                     _SetDeviceAddress:
  1747                           	callstack 26
  1748   001594                     
  1749                           ;drivers/scr/drv_mrf24j40.c: 442:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> 8));
  1750   001594  5020               	movf	(_mrf24_data_config+31)^0,w,c
  1751   001596  6E2C               	movwf	SetShortAddr@value^0,c
  1752   001598  0E04               	movlw	4
  1753   00159A  EC05  F00B         	call	_SetShortAddr
  1754                           
  1755                           ;drivers/scr/drv_mrf24j40.c: 443:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  1756   00159E  C01F  F02C         	movff	_mrf24_data_config+30,SetShortAddr@value
  1757   0015A2  0E03               	movlw	3
  1758   0015A4  EC05  F00B         	call	_SetShortAddr
  1759                           
  1760                           ;drivers/scr/drv_mrf24j40.c: 444:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> 8));
  1761   0015A8  501E               	movf	(_mrf24_data_config+29)^0,w,c
  1762   0015AA  6E2C               	movwf	SetShortAddr@value^0,c
  1763   0015AC  0E02               	movlw	2
  1764   0015AE  EC05  F00B         	call	_SetShortAddr
  1765                           
  1766                           ;drivers/scr/drv_mrf24j40.c: 445:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  1767   0015B2  C01D  F02C         	movff	_mrf24_data_config+28,SetShortAddr@value
  1768   0015B6  0E01               	movlw	1
  1769   0015B8  EC05  F00B         	call	_SetShortAddr
  1770   0015BC  0012               	return		;funcret
  1771   0015BE                     __end_of_SetDeviceAddress:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _SetChannel *****************
  1775 ;; Defined at:
  1776 ;;		line 426 in file "drivers/scr/drv_mrf24j40.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 3
  1797 ;; This function calls:
  1798 ;;		_SetLongAddr
  1799 ;;		_SetShortAddr
  1800 ;; This function is called by:
  1801 ;;		_MRF24J40Init
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text6
  1806   001568                     __ptext6:
  1807                           	callstack 0
  1808   001568                     _SetChannel:
  1809                           	callstack 26
  1810   001568                     
  1811                           ;drivers/scr/drv_mrf24j40.c: 428:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  1812   001568  0E02               	movlw	2
  1813   00156A  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  1814   00156C  0E00               	movlw	0
  1815   00156E  6E2C               	movwf	SetLongAddr@reg_address^0,c
  1816   001570  C004  F02E         	movff	_mrf24_data_config+3,SetLongAddr@value
  1817   001574  EC5C  F00A         	call	_SetLongAddr	;wreg free
  1818                           
  1819                           ;drivers/scr/drv_mrf24j40.c: 429:  SetShortAddr((0x36), 0x04);
  1820   001578  0E04               	movlw	4
  1821   00157A  6E2C               	movwf	SetShortAddr@value^0,c
  1822   00157C  0E36               	movlw	54
  1823   00157E  EC05  F00B         	call	_SetShortAddr
  1824                           
  1825                           ;drivers/scr/drv_mrf24j40.c: 430:  SetShortAddr((0x36), 0x00);
  1826   001582  0E00               	movlw	0
  1827   001584  6E2C               	movwf	SetShortAddr@value^0,c
  1828   001586  0E36               	movlw	54
  1829   001588  EC05  F00B         	call	_SetShortAddr
  1830   00158C                     
  1831                           ;drivers/scr/drv_mrf24j40.c: 431:  _delay((unsigned long)((192)*(16000000/4000000.0)));;
  1832   00158C  0E00               	movlw	0
  1833   00158E                     u617:
  1834   00158E  2EE8               	decfsz	wreg,f,c
  1835   001590  D7FE               	bra	u617
  1836   001592  0012               	return		;funcret
  1837   001594                     __end_of_SetChannel:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _InicializoVariables *****************
  1841 ;; Defined at:
  1842 ;;		line 332 in file "drivers/scr/drv_mrf24j40.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  i               2    1[COMRAM] int 
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      void 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1859 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1860 ;;Total ram usage:        3 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_MRF24J40Init
  1866 ;; This function uses a non-reentrant model
  1867 ;;
  1868                           
  1869                           	psect	text7
  1870   001382                     __ptext7:
  1871                           	callstack 0
  1872   001382                     _InicializoVariables:
  1873                           	callstack 29
  1874   001382                     
  1875                           ;drivers/scr/drv_mrf24j40.c: 334:     for(int i = 0; i < 16; i++){
  1876   001382  0E00               	movlw	0
  1877   001384  6E2C               	movwf	(InicializoVariables@i+1)^0,c
  1878   001386  0E00               	movlw	0
  1879   001388  6E2B               	movwf	InicializoVariables@i^0,c
  1880   00138A                     l1493:
  1881                           
  1882                           ;drivers/scr/drv_mrf24j40.c: 336:         if(i < 8)
  1883   00138A  BE2C               	btfsc	(InicializoVariables@i+1)^0,7,c
  1884   00138C  EFD3  F009         	goto	u340
  1885   001390  502C               	movf	(InicializoVariables@i+1)^0,w,c
  1886   001392  E107               	bnz	u341
  1887   001394  0E08               	movlw	8
  1888   001396  5C2B               	subwf	InicializoVariables@i^0,w,c
  1889   001398  B0D8               	btfsc	status,0,c
  1890   00139A  EFD1  F009         	goto	u341
  1891   00139E  EFD3  F009         	goto	u340
  1892   0013A2                     u341:
  1893   0013A2  EFDF  F009         	goto	l54
  1894   0013A6                     u340:
  1895   0013A6                     
  1896                           ;drivers/scr/drv_mrf24j40.c: 337:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  1897   0013A6  502B               	movf	InicializoVariables@i^0,w,c
  1898   0013A8  0F11               	addlw	low _default_mac_address
  1899   0013AA  6E2A               	movwf	??_InicializoVariables^0,c
  1900   0013AC  C02A  FFF6         	movff	??_InicializoVariables,tblptrl
  1901   0013B0                     	if	0	;There is only one active tblptr byte
  1902   0013B0                     	endif
  1903   0013B0                     	if	0	;tblptru may be non-zero
  1904   0013B0                     	endif
  1905   0013B0                     	if	0	;tblptru may be non-zero
  1906   0013B0                     	endif
  1907   0013B0  502B               	movf	InicializoVariables@i^0,w,c
  1908   0013B2  0F15               	addlw	low (_mrf24_data_config+20)
  1909   0013B4  6ED9               	movwf	fsr2l,c
  1910   0013B6  6ADA               	clrf	fsr2h,c
  1911   0013B8  0008               	tblrd		*
  1912   0013BA  CFF5 FFDF          	movff	tablat,indf2
  1913   0013BE                     l54:
  1914                           
  1915                           ;drivers/scr/drv_mrf24j40.c: 338:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  1916   0013BE  502B               	movf	InicializoVariables@i^0,w,c
  1917   0013C0  0F01               	addlw	low _default_security_key
  1918   0013C2  6E2A               	movwf	??_InicializoVariables^0,c
  1919   0013C4  C02A  FFF6         	movff	??_InicializoVariables,tblptrl
  1920   0013C8                     	if	0	;There is only one active tblptr byte
  1921   0013C8                     	endif
  1922   0013C8                     	if	0	;tblptru may be non-zero
  1923   0013C8                     	endif
  1924   0013C8                     	if	0	;tblptru may be non-zero
  1925   0013C8                     	endif
  1926   0013C8  502B               	movf	InicializoVariables@i^0,w,c
  1927   0013CA  0F05               	addlw	low (_mrf24_data_config+4)
  1928   0013CC  6ED9               	movwf	fsr2l,c
  1929   0013CE  6ADA               	clrf	fsr2h,c
  1930   0013D0  0008               	tblrd		*
  1931   0013D2  CFF5 FFDF          	movff	tablat,indf2
  1932   0013D6                     
  1933                           ;drivers/scr/drv_mrf24j40.c: 339:     }
  1934   0013D6  4A2B               	infsnz	InicializoVariables@i^0,f,c
  1935   0013D8  2A2C               	incf	(InicializoVariables@i+1)^0,f,c
  1936   0013DA  BE2C               	btfsc	(InicializoVariables@i+1)^0,7,c
  1937   0013DC  EFF9  F009         	goto	u351
  1938   0013E0  502C               	movf	(InicializoVariables@i+1)^0,w,c
  1939   0013E2  E109               	bnz	u350
  1940   0013E4  0E10               	movlw	16
  1941   0013E6  5C2B               	subwf	InicializoVariables@i^0,w,c
  1942   0013E8  A0D8               	btfss	status,0,c
  1943   0013EA  EFF9  F009         	goto	u351
  1944   0013EE  EFFB  F009         	goto	u350
  1945   0013F2                     u351:
  1946   0013F2  EFC5  F009         	goto	l1493
  1947   0013F6                     u350:
  1948   0013F6                     
  1949                           ;drivers/scr/drv_mrf24j40.c: 340:     mrf24_data_config.sequence_number = 0x68;
  1950   0013F6  0E68               	movlw	104
  1951   0013F8  6E03               	movwf	(_mrf24_data_config+2)^0,c
  1952                           
  1953                           ;drivers/scr/drv_mrf24j40.c: 341:     mrf24_data_config.my_channel = CH_11;
  1954   0013FA  0E03               	movlw	3
  1955   0013FC  6E04               	movwf	(_mrf24_data_config+3)^0,c
  1956   0013FE                     
  1957                           ;drivers/scr/drv_mrf24j40.c: 342:     mrf24_data_config.get_new_msg = 0;
  1958   0013FE  6A01               	clrf	_mrf24_data_config^0,c
  1959   001400                     
  1960                           ;drivers/scr/drv_mrf24j40.c: 343:     mrf24_data_config.put_new_msg = 0;
  1961   001400  6A02               	clrf	(_mrf24_data_config+1)^0,c
  1962                           
  1963                           ;drivers/scr/drv_mrf24j40.c: 344:     mrf24_data_config.my_panid = 0x1234;
  1964   001402  0E12               	movlw	18
  1965   001404  6E1E               	movwf	(_mrf24_data_config+29)^0,c
  1966   001406  0E34               	movlw	52
  1967   001408  6E1D               	movwf	(_mrf24_data_config+28)^0,c
  1968                           
  1969                           ;drivers/scr/drv_mrf24j40.c: 345:     mrf24_data_config.my_address = 0x0001;
  1970   00140A  0E00               	movlw	0
  1971   00140C  6E20               	movwf	(_mrf24_data_config+31)^0,c
  1972   00140E  0E01               	movlw	1
  1973   001410  6E1F               	movwf	(_mrf24_data_config+30)^0,c
  1974                           
  1975                           ;drivers/scr/drv_mrf24j40.c: 346:     mrf24_data_config.intervalo = 0x2222;
  1976   001412  0E22               	movlw	34
  1977   001414  6E22               	movwf	(_mrf24_data_config+33)^0,c
  1978   001416  0E22               	movlw	34
  1979   001418  6E21               	movwf	(_mrf24_data_config+32)^0,c
  1980                           
  1981                           ;drivers/scr/drv_mrf24j40.c: 347:     mrf24_data_in.source_address = 0;
  1982   00141A  0E00               	movlw	0
  1983   00141C  0100               	movlb	0	; () banked
  1984   00141E  6F63               	movwf	(_mrf24_data_in+3)& (0+255),b
  1985   001420  0E00               	movlw	0
  1986   001422  6F62               	movwf	(_mrf24_data_in+2)& (0+255),b
  1987                           
  1988                           ;drivers/scr/drv_mrf24j40.c: 348:     mrf24_data_in.source_panid = 0;
  1989   001424  0E00               	movlw	0
  1990   001426  6F61               	movwf	(_mrf24_data_in+1)& (0+255),b
  1991   001428  0E00               	movlw	0
  1992   00142A  6F60               	movwf	_mrf24_data_in& (0+255),b
  1993   00142C                     
  1994                           ; BSR set to: 0
  1995                           ;drivers/scr/drv_mrf24j40.c: 349:     mrf24_data_in.tamano_mensaje = 0;
  1996   00142C  6B64               	clrf	(_mrf24_data_in+4)& (0+255),b
  1997   00142E                     
  1998                           ; BSR set to: 0
  1999                           ;drivers/scr/drv_mrf24j40.c: 350:     mrf24_data_in.buffer_entrada[0] = 0;
  2000   00142E  6B65               	clrf	(_mrf24_data_in+5)& (0+255),b
  2001   001430                     
  2002                           ; BSR set to: 0
  2003   001430  0012               	return		;funcret
  2004   001432                     __end_of_InicializoVariables:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _InicializoPines *****************
  2008 ;; Defined at:
  2009 ;;		line 21 in file "drivers/scr/drv_mrf24j40_port.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;		None
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;		None
  2014 ;; Return value:  Size  Location     Type
  2015 ;;                  1    wreg      void 
  2016 ;; Registers used:
  2017 ;;		wreg, cstack
  2018 ;; Tracked objects:
  2019 ;;		On entry : 0/0
  2020 ;;		On exit  : 0/0
  2021 ;;		Unchanged: 0/0
  2022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;Total ram usage:        0 bytes
  2028 ;; Hardware stack levels used: 1
  2029 ;; Hardware stack levels required when called: 1
  2030 ;; This function calls:
  2031 ;;		_SetCSPin
  2032 ;;		_SetResetPin
  2033 ;;		_SetWakePin
  2034 ;; This function is called by:
  2035 ;;		_MRF24J40Init
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text8
  2040   00162A                     __ptext8:
  2041                           	callstack 0
  2042   00162A                     _InicializoPines:
  2043                           	callstack 28
  2044   00162A                     
  2045                           ;drivers/scr/drv_mrf24j40_port.c: 23:     TRISBbits.TRISB0 = 1;
  2046   00162A  8093               	bsf	147,0,c	;volatile
  2047                           
  2048                           ;drivers/scr/drv_mrf24j40_port.c: 24:     TRISCbits.TRISC6 = 0;
  2049   00162C  9C94               	bcf	148,6,c	;volatile
  2050                           
  2051                           ;drivers/scr/drv_mrf24j40_port.c: 25:     TRISCbits.TRISC7 = 0;
  2052   00162E  9E94               	bcf	148,7,c	;volatile
  2053                           
  2054                           ;drivers/scr/drv_mrf24j40_port.c: 26:     TRISDbits.TRISD4 = 0;
  2055   001630  9895               	bcf	149,4,c	;volatile
  2056   001632                     
  2057                           ;drivers/scr/drv_mrf24j40_port.c: 27:     SetCSPin(1);
  2058   001632  0E01               	movlw	1
  2059   001634  EC5F  F00B         	call	_SetCSPin
  2060                           
  2061                           ;drivers/scr/drv_mrf24j40_port.c: 28:     SetWakePin(1);
  2062   001638  0E01               	movlw	1
  2063   00163A  EC51  F00B         	call	_SetWakePin
  2064                           
  2065                           ;drivers/scr/drv_mrf24j40_port.c: 29:     SetResetPin(0);
  2066   00163E  0E00               	movlw	0
  2067   001640  EC58  F00B         	call	_SetResetPin
  2068   001644  0012               	return		;funcret
  2069   001646                     __end_of_InicializoPines:
  2070                           	callstack 0
  2071                           
  2072 ;; *************** function _SetWakePin *****************
  2073 ;; Defined at:
  2074 ;;		line 49 in file "drivers/scr/drv_mrf24j40_port.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  estado          1    wreg     _Bool 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  estado          1    0[COMRAM] _Bool 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  1    wreg      void 
  2081 ;; Registers used:
  2082 ;;		wreg
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;Total ram usage:        1 bytes
  2093 ;; Hardware stack levels used: 1
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_InicializoPines
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text9
  2102   0016A2                     __ptext9:
  2103                           	callstack 0
  2104   0016A2                     _SetWakePin:
  2105                           	callstack 28
  2106                           
  2107                           ;incstack = 0
  2108                           ;SetWakePin@estado stored from wreg
  2109   0016A2  6E2A               	movwf	SetWakePin@estado^0,c
  2110   0016A4                     
  2111                           ;drivers/scr/drv_mrf24j40_port.c: 51:     LATCbits.LATC7 = estado;
  2112   0016A4  B02A               	btfsc	SetWakePin@estado^0,0,c
  2113   0016A6  D002               	bra	u65
  2114   0016A8  9E8B               	bcf	139,7,c	;volatile
  2115   0016AA  D001               	bra	u66
  2116   0016AC                     u65:
  2117   0016AC  8E8B               	bsf	139,7,c	;volatile
  2118   0016AE                     u66:
  2119   0016AE  0012               	return		;funcret
  2120   0016B0                     __end_of_SetWakePin:
  2121                           	callstack 0
  2122                           
  2123 ;; *************** function _SetResetPin *****************
  2124 ;; Defined at:
  2125 ;;		line 60 in file "drivers/scr/drv_mrf24j40_port.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  estado          1    wreg     _Bool 
  2128 ;; Auto vars:     Size  Location     Type
  2129 ;;  estado          1    0[COMRAM] _Bool 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/0
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;Total ram usage:        1 bytes
  2144 ;; Hardware stack levels used: 1
  2145 ;; This function calls:
  2146 ;;		Nothing
  2147 ;; This function is called by:
  2148 ;;		_MRF24J40Init
  2149 ;;		_InicializoPines
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text10
  2154   0016B0                     __ptext10:
  2155                           	callstack 0
  2156   0016B0                     _SetResetPin:
  2157                           	callstack 29
  2158                           
  2159                           ;incstack = 0
  2160                           ;SetResetPin@estado stored from wreg
  2161   0016B0  6E2A               	movwf	SetResetPin@estado^0,c
  2162   0016B2                     
  2163                           ;drivers/scr/drv_mrf24j40_port.c: 62:     LATDbits.LATD4 = estado;
  2164   0016B2  B02A               	btfsc	SetResetPin@estado^0,0,c
  2165   0016B4  D002               	bra	u45
  2166   0016B6  988C               	bcf	140,4,c	;volatile
  2167   0016B8  D001               	bra	u46
  2168   0016BA                     u45:
  2169   0016BA  888C               	bsf	140,4,c	;volatile
  2170   0016BC                     u46:
  2171   0016BC  0012               	return		;funcret
  2172   0016BE                     __end_of_SetResetPin:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _GetShortAddr *****************
  2176 ;; Defined at:
  2177 ;;		line 375 in file "drivers/scr/drv_mrf24j40.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  reg_address     1    wreg     unsigned char 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  reg_address     1    3[COMRAM] unsigned char 
  2182 ;;  leido_spi       1    2[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      unsigned char 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;Total ram usage:        2 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 2
  2199 ;; This function calls:
  2200 ;;		_ReadByteSPIPort
  2201 ;;		_SetCSPin
  2202 ;;		_WriteByteSPIPort
  2203 ;; This function is called by:
  2204 ;;		_MRF24J40Init
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text11
  2209   0015E4                     __ptext11:
  2210                           	callstack 0
  2211   0015E4                     _GetShortAddr:
  2212                           	callstack 27
  2213                           
  2214                           ;incstack = 0
  2215                           ;GetShortAddr@reg_address stored from wreg
  2216   0015E4  6E2D               	movwf	GetShortAddr@reg_address^0,c
  2217   0015E6                     
  2218                           ;drivers/scr/drv_mrf24j40.c: 378:     reg_address = (uint8_t) (reg_address << 1) & 0x7E;
  2219   0015E6  502D               	movf	GetShortAddr@reg_address^0,w,c
  2220   0015E8  242D               	addwf	GetShortAddr@reg_address^0,w,c
  2221   0015EA  0B7E               	andlw	126
  2222   0015EC  6E2D               	movwf	GetShortAddr@reg_address^0,c
  2223   0015EE                     
  2224                           ;drivers/scr/drv_mrf24j40.c: 379:     SetCSPin(0);
  2225   0015EE  0E00               	movlw	0
  2226   0015F0  EC5F  F00B         	call	_SetCSPin
  2227   0015F4                     
  2228                           ;drivers/scr/drv_mrf24j40.c: 380:     WriteByteSPIPort(reg_address);
  2229   0015F4  502D               	movf	GetShortAddr@reg_address^0,w,c
  2230   0015F6  EC66  F00B         	call	_WriteByteSPIPort
  2231   0015FA                     
  2232                           ;drivers/scr/drv_mrf24j40.c: 381:     leido_spi = ReadByteSPIPort();
  2233   0015FA  EC6B  F00B         	call	_ReadByteSPIPort	;wreg free
  2234   0015FE  6E2C               	movwf	GetShortAddr@leido_spi^0,c
  2235   001600                     
  2236                           ;drivers/scr/drv_mrf24j40.c: 382:     SetCSPin(1);
  2237   001600  0E01               	movlw	1
  2238   001602  EC5F  F00B         	call	_SetCSPin
  2239   001606                     
  2240                           ;drivers/scr/drv_mrf24j40.c: 383:  return leido_spi;
  2241   001606  502C               	movf	GetShortAddr@leido_spi^0,w,c
  2242   001608  0012               	return		;funcret
  2243   00160A                     __end_of_GetShortAddr:
  2244                           	callstack 0
  2245                           
  2246 ;; *************** function _GetLongAddr *****************
  2247 ;; Defined at:
  2248 ;;		line 408 in file "drivers/scr/drv_mrf24j40.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  reg_address     2    2[COMRAM] unsigned short 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  toReturn        1    6[COMRAM] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      unsigned char 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2262 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2263 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2264 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2265 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2266 ;;Total ram usage:        5 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; Hardware stack levels required when called: 2
  2269 ;; This function calls:
  2270 ;;		_ReadByteSPIPort
  2271 ;;		_SetCSPin
  2272 ;;		_WriteByteSPIPort
  2273 ;; This function is called by:
  2274 ;;		_MRF24J40Init
  2275 ;;		_ReciboPaquete
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text12
  2280   001432                     __ptext12:
  2281                           	callstack 0
  2282   001432                     _GetLongAddr:
  2283                           	callstack 27
  2284   001432                     
  2285                           ;drivers/scr/drv_mrf24j40.c: 410:  uint8_t toReturn;;drivers/scr/drv_mrf24j40.c: 411:   
      +                            reg_address = (reg_address << 5) | 0x8000;
  2286   001432  C02C  F02E         	movff	GetLongAddr@reg_address,??_GetLongAddr
  2287   001436  C02D  F02F         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  2288   00143A  0E05               	movlw	5
  2289   00143C                     u375:
  2290   00143C  90D8               	bcf	status,0,c
  2291   00143E  362E               	rlcf	??_GetLongAddr^0,f,c
  2292   001440  362F               	rlcf	(??_GetLongAddr+1)^0,f,c
  2293   001442  2EE8               	decfsz	wreg,f,c
  2294   001444  EF1E  F00A         	goto	u375
  2295   001448  0E00               	movlw	0
  2296   00144A  102E               	iorwf	??_GetLongAddr^0,w,c
  2297   00144C  6E2C               	movwf	GetLongAddr@reg_address^0,c
  2298   00144E  0E80               	movlw	128
  2299   001450  102F               	iorwf	(??_GetLongAddr+1)^0,w,c
  2300   001452  6E2D               	movwf	(GetLongAddr@reg_address+1)^0,c
  2301   001454                     
  2302                           ;drivers/scr/drv_mrf24j40.c: 412:     SetCSPin(0);
  2303   001454  0E00               	movlw	0
  2304   001456  EC5F  F00B         	call	_SetCSPin
  2305   00145A                     
  2306                           ;drivers/scr/drv_mrf24j40.c: 413:     WriteByteSPIPort((uint8_t) (reg_address >> 8));
  2307   00145A  502D               	movf	(GetLongAddr@reg_address+1)^0,w,c
  2308   00145C  EC66  F00B         	call	_WriteByteSPIPort
  2309   001460                     
  2310                           ;drivers/scr/drv_mrf24j40.c: 414:  WriteByteSPIPort((uint8_t) reg_address );
  2311   001460  502C               	movf	GetLongAddr@reg_address^0,w,c
  2312   001462  EC66  F00B         	call	_WriteByteSPIPort
  2313   001466                     
  2314                           ;drivers/scr/drv_mrf24j40.c: 416:  toReturn = ReadByteSPIPort();
  2315   001466  EC6B  F00B         	call	_ReadByteSPIPort	;wreg free
  2316   00146A  6E30               	movwf	GetLongAddr@toReturn^0,c
  2317   00146C                     
  2318                           ;drivers/scr/drv_mrf24j40.c: 417:     SetCSPin(1);
  2319   00146C  0E01               	movlw	1
  2320   00146E  EC5F  F00B         	call	_SetCSPin
  2321   001472                     
  2322                           ;drivers/scr/drv_mrf24j40.c: 418:  return toReturn;
  2323   001472  5030               	movf	GetLongAddr@toReturn^0,w,c
  2324   001474  0012               	return		;funcret
  2325   001476                     __end_of_GetLongAddr:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _ReadByteSPIPort *****************
  2329 ;; Defined at:
  2330 ;;		line 93 in file "drivers/scr/drv_mrf24j40_port.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      unsigned char 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 1
  2351 ;; This function calls:
  2352 ;;		_SPIRead
  2353 ;; This function is called by:
  2354 ;;		_GetShortAddr
  2355 ;;		_GetLongAddr
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text13
  2360   0016D6                     __ptext13:
  2361                           	callstack 0
  2362   0016D6                     _ReadByteSPIPort:
  2363                           	callstack 27
  2364   0016D6                     
  2365                           ;drivers/scr/drv_mrf24j40_port.c: 95:     return SPIRead();
  2366   0016D6  EC3D  F00B         	call	_SPIRead	;wreg free
  2367   0016DA  0012               	return		;funcret
  2368   0016DC                     __end_of_ReadByteSPIPort:
  2369                           	callstack 0
  2370                           
  2371 ;; *************** function _SPIRead *****************
  2372 ;; Defined at:
  2373 ;;		line 82 in file "drivers/scr/drv_mspi_port.c"
  2374 ;; Parameters:    Size  Location     Type
  2375 ;;		None
  2376 ;; Auto vars:     Size  Location     Type
  2377 ;;		None
  2378 ;; Return value:  Size  Location     Type
  2379 ;;                  1    wreg      unsigned char 
  2380 ;; Registers used:
  2381 ;;		wreg, status,2
  2382 ;; Tracked objects:
  2383 ;;		On entry : 0/0
  2384 ;;		On exit  : 0/0
  2385 ;;		Unchanged: 0/0
  2386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2391 ;;Total ram usage:        0 bytes
  2392 ;; Hardware stack levels used: 1
  2393 ;; This function calls:
  2394 ;;		Nothing
  2395 ;; This function is called by:
  2396 ;;		_ReadByteSPIPort
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text14
  2401   00167A                     __ptext14:
  2402                           	callstack 0
  2403   00167A                     _SPIRead:
  2404                           	callstack 27
  2405   00167A                     
  2406                           ;drivers/scr/drv_mspi_port.c: 84:     SSPCON1bits.WCOL = 0;
  2407   00167A  9EC6               	bcf	198,7,c	;volatile
  2408                           
  2409                           ;drivers/scr/drv_mspi_port.c: 85:     SSPBUF = 0x00;
  2410   00167C  6AC9               	clrf	201,c	;volatile
  2411   00167E                     l189:
  2412   00167E  A0C7               	btfss	199,0,c	;volatile
  2413   001680  EF44  F00B         	goto	u321
  2414   001684  EF46  F00B         	goto	u320
  2415   001688                     u321:
  2416   001688  EF3F  F00B         	goto	l189
  2417   00168C                     u320:
  2418   00168C                     
  2419                           ;drivers/scr/drv_mspi_port.c: 87:     return SSPBUF;
  2420   00168C  50C9               	movf	201,w,c	;volatile
  2421   00168E  0012               	return		;funcret
  2422   001690                     __end_of_SPIRead:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function _EnviarDato *****************
  2426 ;; Defined at:
  2427 ;;		line 535 in file "drivers/scr/drv_mrf24j40.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;		None
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  pos             1    9[COMRAM] unsigned char 
  2432 ;;  i               1    8[COMRAM] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  1    wreg      void 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2445 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2446 ;;Total ram usage:        3 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 3
  2449 ;; This function calls:
  2450 ;;		_SetLongAddr
  2451 ;;		_SetShortAddr
  2452 ;; This function is called by:
  2453 ;;		_main
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text15
  2458   0011AC                     __ptext15:
  2459                           	callstack 0
  2460   0011AC                     _EnviarDato:
  2461                           	callstack 27
  2462   0011AC                     
  2463                           ;drivers/scr/drv_mrf24j40.c: 537:  uint8_t pos = 0;
  2464   0011AC  6A33               	clrf	EnviarDato@pos^0,c
  2465   0011AE                     
  2466                           ;drivers/scr/drv_mrf24j40.c: 540:  SetLongAddr(pos++, i);
  2467   0011AE  0E00               	movlw	0
  2468   0011B0  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  2469   0011B2  0E00               	movlw	0
  2470   0011B4  6E2C               	movwf	SetLongAddr@reg_address^0,c
  2471   0011B6  0E0F               	movlw	15
  2472   0011B8  6E2E               	movwf	SetLongAddr@value^0,c
  2473   0011BA  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2474   0011BE  2A33               	incf	EnviarDato@pos^0,f,c
  2475   0011C0                     
  2476                           ;drivers/scr/drv_mrf24j40.c: 541:  SetLongAddr(pos++, mrf24_data_out.tamano_mensaje + i)
      +                          ;
  2477   0011C0  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2478   0011C4  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2479   0011C6  5027               	movf	(_mrf24_data_out+4)^0,w,c
  2480   0011C8  0F0F               	addlw	15
  2481   0011CA  6E2E               	movwf	SetLongAddr@value^0,c
  2482   0011CC  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2483   0011D0  2A33               	incf	EnviarDato@pos^0,f,c
  2484   0011D2                     
  2485                           ;drivers/scr/drv_mrf24j40.c: 542:  SetLongAddr(pos++, (0X01)|(0X20)|(0X40));
  2486   0011D2  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2487   0011D6  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2488   0011D8  0E61               	movlw	97
  2489   0011DA  6E2E               	movwf	SetLongAddr@value^0,c
  2490   0011DC  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2491   0011E0  2A33               	incf	EnviarDato@pos^0,f,c
  2492   0011E2                     
  2493                           ;drivers/scr/drv_mrf24j40.c: 543:  SetLongAddr(pos++, (0XC0)|(0X08));
  2494   0011E2  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2495   0011E6  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2496   0011E8  0EC8               	movlw	200
  2497   0011EA  6E2E               	movwf	SetLongAddr@value^0,c
  2498   0011EC  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2499   0011F0  2A33               	incf	EnviarDato@pos^0,f,c
  2500   0011F2                     
  2501                           ;drivers/scr/drv_mrf24j40.c: 544:  SetLongAddr(pos++, mrf24_data_config.sequence_number+
      +                          +);
  2502   0011F2  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2503   0011F6  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2504   0011F8  EE20  F003         	lfsr	2,_mrf24_data_config+2
  2505   0011FC  50DF               	movf	indf2,w,c
  2506   0011FE  2ADF               	incf	indf2,f,c
  2507   001200  6E2E               	movwf	SetLongAddr@value^0,c
  2508   001202  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2509   001206  2A33               	incf	EnviarDato@pos^0,f,c
  2510   001208                     
  2511                           ;drivers/scr/drv_mrf24j40.c: 545:  SetLongAddr(pos++, (uint8_t) mrf24_data_out.destinity
      +                          _panid);
  2512   001208  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2513   00120C  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2514   00120E  C023  F02E         	movff	_mrf24_data_out,SetLongAddr@value
  2515   001212  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2516   001216  2A33               	incf	EnviarDato@pos^0,f,c
  2517   001218                     
  2518                           ;drivers/scr/drv_mrf24j40.c: 546:  SetLongAddr(pos++, (uint8_t) (mrf24_data_out.destinit
      +                          y_panid >> 8));
  2519   001218  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2520   00121C  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2521   00121E  5024               	movf	(_mrf24_data_out+1)^0,w,c
  2522   001220  6E2E               	movwf	SetLongAddr@value^0,c
  2523   001222  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2524   001226  2A33               	incf	EnviarDato@pos^0,f,c
  2525   001228                     
  2526                           ;drivers/scr/drv_mrf24j40.c: 547:  SetLongAddr(pos++, (uint8_t) mrf24_data_out.destinity
      +                          _address);
  2527   001228  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2528   00122C  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2529   00122E  C025  F02E         	movff	_mrf24_data_out+2,SetLongAddr@value
  2530   001232  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2531   001236  2A33               	incf	EnviarDato@pos^0,f,c
  2532   001238                     
  2533                           ;drivers/scr/drv_mrf24j40.c: 548:  SetLongAddr(pos++, (uint8_t) (mrf24_data_out.destinit
      +                          y_address >> 8));
  2534   001238  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2535   00123C  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2536   00123E  5026               	movf	(_mrf24_data_out+3)^0,w,c
  2537   001240  6E2E               	movwf	SetLongAddr@value^0,c
  2538   001242  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2539   001246  2A33               	incf	EnviarDato@pos^0,f,c
  2540   001248                     
  2541                           ;drivers/scr/drv_mrf24j40.c: 550:  for(i = 0; i < 8; i++) {
  2542   001248  6A32               	clrf	EnviarDato@i^0,c
  2543   00124A                     l1685:
  2544                           
  2545                           ;drivers/scr/drv_mrf24j40.c: 552:   SetLongAddr(pos++, mrf24_data_config.my_mac[i]);
  2546   00124A  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2547   00124E  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2548   001250  5032               	movf	EnviarDato@i^0,w,c
  2549   001252  0F15               	addlw	low (_mrf24_data_config+20)
  2550   001254  6ED9               	movwf	fsr2l,c
  2551   001256  6ADA               	clrf	fsr2h,c
  2552   001258  50DF               	movf	indf2,w,c
  2553   00125A  6E2E               	movwf	SetLongAddr@value^0,c
  2554   00125C  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2555   001260  2A33               	incf	EnviarDato@pos^0,f,c
  2556   001262                     
  2557                           ;drivers/scr/drv_mrf24j40.c: 553:  }
  2558   001262  2A32               	incf	EnviarDato@i^0,f,c
  2559   001264  0E07               	movlw	7
  2560   001266  6432               	cpfsgt	EnviarDato@i^0,c
  2561   001268  EF38  F009         	goto	u411
  2562   00126C  EF3A  F009         	goto	u410
  2563   001270                     u411:
  2564   001270  EF25  F009         	goto	l1685
  2565   001274                     u410:
  2566   001274  EF4D  F009         	goto	l1697
  2567   001278                     l1693:
  2568                           
  2569                           ;drivers/scr/drv_mrf24j40.c: 557:   SetLongAddr(pos++, *mrf24_data_out.buffer_salida++);
  2570   001278  C033  F02C         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2571   00127C  6A2D               	clrf	(SetLongAddr@reg_address+1)^0,c
  2572   00127E  EE20  F028         	lfsr	2,_mrf24_data_out+5
  2573   001282  CFDF F031          	movff	indf2,??_EnviarDato
  2574   001286  0E01               	movlw	1
  2575   001288  26DF               	addwf	indf2,f,c
  2576   00128A  C031  FFF6         	movff	??_EnviarDato,tblptrl
  2577   00128E                     	if	0	;There is only one active tblptr byte
  2578   00128E                     	endif
  2579   00128E                     	if	0	;tblptru may be non-zero
  2580   00128E                     	endif
  2581   00128E                     	if	0	;tblptru may be non-zero
  2582   00128E                     	endif
  2583   00128E  0008               	tblrd		*
  2584   001290  CFF5 F02E          	movff	tablat,SetLongAddr@value
  2585   001294  EC5C  F00A         	call	_SetLongAddr	;wreg free
  2586   001298  2A33               	incf	EnviarDato@pos^0,f,c
  2587   00129A                     l1697:
  2588                           
  2589                           ;drivers/scr/drv_mrf24j40.c: 555:  while(*mrf24_data_out.buffer_salida) {
  2590   00129A  EE20  F028         	lfsr	2,_mrf24_data_out+5
  2591   00129E  CFDF FFF6          	movff	indf2,tblptrl
  2592   0012A2                     	if	0	;There is only one active tblptr byte
  2593   0012A2                     	endif
  2594   0012A2                     	if	0	;tblptru may be non-zero
  2595   0012A2                     	endif
  2596   0012A2                     	if	0	;tblptru may be non-zero
  2597   0012A2                     	endif
  2598   0012A2  0008               	tblrd		*
  2599   0012A4  50F5               	movf	tablat,w,c
  2600   0012A6  0900               	iorlw	0
  2601   0012A8  A4D8               	btfss	status,2,c
  2602   0012AA  EF59  F009         	goto	u421
  2603   0012AE  EF5B  F009         	goto	u420
  2604   0012B2                     u421:
  2605   0012B2  EF3C  F009         	goto	l1693
  2606   0012B6                     u420:
  2607   0012B6                     
  2608                           ;drivers/scr/drv_mrf24j40.c: 559:  SetShortAddr((0x1B), 1 | (0X04));
  2609   0012B6  0E05               	movlw	5
  2610   0012B8  6E2C               	movwf	SetShortAddr@value^0,c
  2611   0012BA  0E1B               	movlw	27
  2612   0012BC  EC05  F00B         	call	_SetShortAddr
  2613   0012C0  0012               	return		;funcret
  2614   0012C2                     __end_of_EnviarDato:
  2615                           	callstack 0
  2616                           
  2617 ;; *************** function _SetShortAddr *****************
  2618 ;; Defined at:
  2619 ;;		line 360 in file "drivers/scr/drv_mrf24j40.c"
  2620 ;; Parameters:    Size  Location     Type
  2621 ;;  reg_address     1    wreg     unsigned char 
  2622 ;;  value           1    2[COMRAM] unsigned char 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  reg_address     1    3[COMRAM] unsigned char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, status,2, status,0, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2634 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;Total ram usage:        2 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 2
  2641 ;; This function calls:
  2642 ;;		_SetCSPin
  2643 ;;		_WriteByteSPIPort
  2644 ;; This function is called by:
  2645 ;;		_MRF24J40Init
  2646 ;;		_SetChannel
  2647 ;;		_SetDeviceAddress
  2648 ;;		_SetDeviceMACAddress
  2649 ;;		_EnviarDato
  2650 ;;		_EnviarDatoEncriptado
  2651 ;;		_EnviarComando
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text16
  2656   00160A                     __ptext16:
  2657                           	callstack 0
  2658   00160A                     _SetShortAddr:
  2659                           	callstack 27
  2660                           
  2661                           ;incstack = 0
  2662                           ;SetShortAddr@reg_address stored from wreg
  2663   00160A  6E2D               	movwf	SetShortAddr@reg_address^0,c
  2664   00160C                     
  2665                           ;drivers/scr/drv_mrf24j40.c: 362:     reg_address = (uint8_t) (reg_address << 1) | 0x01;
  2666   00160C  80D8               	bsf	status,0,c
  2667   00160E  362D               	rlcf	SetShortAddr@reg_address^0,f,c
  2668   001610                     
  2669                           ;drivers/scr/drv_mrf24j40.c: 363:     SetCSPin(0);
  2670   001610  0E00               	movlw	0
  2671   001612  EC5F  F00B         	call	_SetCSPin
  2672   001616                     
  2673                           ;drivers/scr/drv_mrf24j40.c: 364:  WriteByteSPIPort(reg_address);
  2674   001616  502D               	movf	SetShortAddr@reg_address^0,w,c
  2675   001618  EC66  F00B         	call	_WriteByteSPIPort
  2676   00161C                     
  2677                           ;drivers/scr/drv_mrf24j40.c: 365:  WriteByteSPIPort(value);
  2678   00161C  502C               	movf	SetShortAddr@value^0,w,c
  2679   00161E  EC66  F00B         	call	_WriteByteSPIPort
  2680   001622                     
  2681                           ;drivers/scr/drv_mrf24j40.c: 366:     SetCSPin(1);
  2682   001622  0E01               	movlw	1
  2683   001624  EC5F  F00B         	call	_SetCSPin
  2684   001628  0012               	return		;funcret
  2685   00162A                     __end_of_SetShortAddr:
  2686                           	callstack 0
  2687                           
  2688 ;; *************** function _SetLongAddr *****************
  2689 ;; Defined at:
  2690 ;;		line 391 in file "drivers/scr/drv_mrf24j40.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;  reg_address     2    2[COMRAM] unsigned short 
  2693 ;;  value           1    4[COMRAM] unsigned char 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:        5 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 2
  2712 ;; This function calls:
  2713 ;;		_SetCSPin
  2714 ;;		_WriteByteSPIPort
  2715 ;; This function is called by:
  2716 ;;		_MRF24J40Init
  2717 ;;		_SetChannel
  2718 ;;		_EnviarDato
  2719 ;;		_EnviarDatoEncriptado
  2720 ;;		_EnviarComando
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text17
  2725   0014B8                     __ptext17:
  2726                           	callstack 0
  2727   0014B8                     _SetLongAddr:
  2728                           	callstack 27
  2729   0014B8                     
  2730                           ;drivers/scr/drv_mrf24j40.c: 393:     reg_address = (reg_address << 5) | 0x8010;
  2731   0014B8  C02C  F02F         	movff	SetLongAddr@reg_address,??_SetLongAddr
  2732   0014BC  C02D  F030         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  2733   0014C0  0E05               	movlw	5
  2734   0014C2                     u335:
  2735   0014C2  90D8               	bcf	status,0,c
  2736   0014C4  362F               	rlcf	??_SetLongAddr^0,f,c
  2737   0014C6  3630               	rlcf	(??_SetLongAddr+1)^0,f,c
  2738   0014C8  2EE8               	decfsz	wreg,f,c
  2739   0014CA  EF61  F00A         	goto	u335
  2740   0014CE  0E10               	movlw	16
  2741   0014D0  102F               	iorwf	??_SetLongAddr^0,w,c
  2742   0014D2  6E2C               	movwf	SetLongAddr@reg_address^0,c
  2743   0014D4  0E80               	movlw	128
  2744   0014D6  1030               	iorwf	(??_SetLongAddr+1)^0,w,c
  2745   0014D8  6E2D               	movwf	(SetLongAddr@reg_address+1)^0,c
  2746   0014DA                     
  2747                           ;drivers/scr/drv_mrf24j40.c: 394:     SetCSPin(0);
  2748   0014DA  0E00               	movlw	0
  2749   0014DC  EC5F  F00B         	call	_SetCSPin
  2750   0014E0                     
  2751                           ;drivers/scr/drv_mrf24j40.c: 395:  WriteByteSPIPort((uint8_t) (reg_address >> 8));
  2752   0014E0  502D               	movf	(SetLongAddr@reg_address+1)^0,w,c
  2753   0014E2  EC66  F00B         	call	_WriteByteSPIPort
  2754   0014E6                     
  2755                           ;drivers/scr/drv_mrf24j40.c: 396:  WriteByteSPIPort((uint8_t) reg_address );
  2756   0014E6  502C               	movf	SetLongAddr@reg_address^0,w,c
  2757   0014E8  EC66  F00B         	call	_WriteByteSPIPort
  2758   0014EC                     
  2759                           ;drivers/scr/drv_mrf24j40.c: 398:  WriteByteSPIPort(value);
  2760   0014EC  502E               	movf	SetLongAddr@value^0,w,c
  2761   0014EE  EC66  F00B         	call	_WriteByteSPIPort
  2762   0014F2                     
  2763                           ;drivers/scr/drv_mrf24j40.c: 399:     SetCSPin(1);
  2764   0014F2  0E01               	movlw	1
  2765   0014F4  EC5F  F00B         	call	_SetCSPin
  2766   0014F8  0012               	return		;funcret
  2767   0014FA                     __end_of_SetLongAddr:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function _WriteByteSPIPort *****************
  2771 ;; Defined at:
  2772 ;;		line 71 in file "drivers/scr/drv_mrf24j40_port.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  dato            1    wreg     unsigned char 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  dato            1    1[COMRAM] unsigned char 
  2777 ;; Return value:  Size  Location     Type
  2778 ;;                  1    wreg      void 
  2779 ;; Registers used:
  2780 ;;		wreg, status,2, cstack
  2781 ;; Tracked objects:
  2782 ;;		On entry : 0/0
  2783 ;;		On exit  : 0/0
  2784 ;;		Unchanged: 0/0
  2785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;Total ram usage:        1 bytes
  2791 ;; Hardware stack levels used: 1
  2792 ;; Hardware stack levels required when called: 1
  2793 ;; This function calls:
  2794 ;;		_SPIWriteByte
  2795 ;; This function is called by:
  2796 ;;		_SetShortAddr
  2797 ;;		_GetShortAddr
  2798 ;;		_SetLongAddr
  2799 ;;		_GetLongAddr
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           	psect	text18
  2804   0016CC                     __ptext18:
  2805                           	callstack 0
  2806   0016CC                     _WriteByteSPIPort:
  2807                           	callstack 27
  2808                           
  2809                           ;incstack = 0
  2810                           ;WriteByteSPIPort@dato stored from wreg
  2811   0016CC  6E2B               	movwf	WriteByteSPIPort@dato^0,c
  2812   0016CE                     
  2813                           ;drivers/scr/drv_mrf24j40_port.c: 73:     SPIWriteByte(dato);
  2814   0016CE  502B               	movf	WriteByteSPIPort@dato^0,w,c
  2815   0016D0  EC31  F00B         	call	_SPIWriteByte
  2816   0016D4  0012               	return		;funcret
  2817   0016D6                     __end_of_WriteByteSPIPort:
  2818                           	callstack 0
  2819                           
  2820 ;; *************** function _SPIWriteByte *****************
  2821 ;; Defined at:
  2822 ;;		line 54 in file "drivers/scr/drv_mspi_port.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;  dato            1    wreg     unsigned char 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  dato            1    0[COMRAM] unsigned char 
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;Total ram usage:        1 bytes
  2841 ;; Hardware stack levels used: 1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_WriteByteSPIPort
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	text19
  2850   001662                     __ptext19:
  2851                           	callstack 0
  2852   001662                     _SPIWriteByte:
  2853                           	callstack 27
  2854                           
  2855                           ;incstack = 0
  2856                           ;SPIWriteByte@dato stored from wreg
  2857   001662  6E2A               	movwf	SPIWriteByte@dato^0,c
  2858   001664                     
  2859                           ;drivers/scr/drv_mspi_port.c: 56:     PIR1bits.SSPIF = 0;
  2860   001664  969E               	bcf	158,3,c	;volatile
  2861   001666                     
  2862                           ;drivers/scr/drv_mspi_port.c: 57:     SSPBUF = dato;
  2863   001666  C02A  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  2864   00166A                     l174:
  2865   00166A  A69E               	btfss	158,3,c	;volatile
  2866   00166C  EF3A  F00B         	goto	u301
  2867   001670  EF3C  F00B         	goto	u300
  2868   001674                     u301:
  2869   001674  EF35  F00B         	goto	l174
  2870   001678                     u300:
  2871   001678  0012               	return		;funcret
  2872   00167A                     __end_of_SPIWriteByte:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function _SetCSPin *****************
  2876 ;; Defined at:
  2877 ;;		line 38 in file "drivers/scr/drv_mrf24j40_port.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  estado          1    wreg     _Bool 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  estado          1    0[COMRAM] _Bool 
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2892 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;Total ram usage:        1 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; This function calls:
  2898 ;;		Nothing
  2899 ;; This function is called by:
  2900 ;;		_SetShortAddr
  2901 ;;		_GetShortAddr
  2902 ;;		_SetLongAddr
  2903 ;;		_GetLongAddr
  2904 ;;		_InicializoPines
  2905 ;; This function uses a non-reentrant model
  2906 ;;
  2907                           
  2908                           	psect	text20
  2909   0016BE                     __ptext20:
  2910                           	callstack 0
  2911   0016BE                     _SetCSPin:
  2912                           	callstack 28
  2913                           
  2914                           ;incstack = 0
  2915                           ;SetCSPin@estado stored from wreg
  2916   0016BE  6E2A               	movwf	SetCSPin@estado^0,c
  2917   0016C0                     
  2918                           ;drivers/scr/drv_mrf24j40_port.c: 40:     LATCbits.LATC6 = estado;
  2919   0016C0  B02A               	btfsc	SetCSPin@estado^0,0,c
  2920   0016C2  D002               	bra	u315
  2921   0016C4  9C8B               	bcf	139,6,c	;volatile
  2922   0016C6  D001               	bra	u316
  2923   0016C8                     u315:
  2924   0016C8  8C8B               	bsf	139,6,c	;volatile
  2925   0016CA                     u316:
  2926   0016CA  0012               	return		;funcret
  2927   0016CC                     __end_of_SetCSPin:
  2928                           	callstack 0
  2929                           
  2930 ;; *************** function _BoardInit *****************
  2931 ;; Defined at:
  2932 ;;		line 21 in file "hardware_config.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;		None
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, status,2, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;Total ram usage:        0 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; Hardware stack levels required when called: 1
  2953 ;; This function calls:
  2954 ;;		_SPIInit
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text21
  2961   0014FA                     __ptext21:
  2962                           	callstack 0
  2963   0014FA                     _BoardInit:
  2964                           	callstack 29
  2965   0014FA                     
  2966                           ;hardware_config.c: 23:     PORTA = 0;
  2967   0014FA  6A80               	clrf	128,c	;volatile
  2968                           
  2969                           ;hardware_config.c: 24:     PORTB = 0;
  2970   0014FC  6A81               	clrf	129,c	;volatile
  2971                           
  2972                           ;hardware_config.c: 25:     PORTC = 0;
  2973   0014FE  6A82               	clrf	130,c	;volatile
  2974                           
  2975                           ;hardware_config.c: 26:     PORTD = 0;
  2976   001500  6A83               	clrf	131,c	;volatile
  2977                           
  2978                           ;hardware_config.c: 27:     PORTE = 0;
  2979   001502  6A84               	clrf	132,c	;volatile
  2980                           
  2981                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  2982   001504  8C93               	bsf	147,6,c	;volatile
  2983                           
  2984                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  2985   001506  8E93               	bsf	147,7,c	;volatile
  2986                           
  2987                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  2988   001508  9496               	bcf	150,2,c	;volatile
  2989                           
  2990                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  2991   00150A  9096               	bcf	150,0,c	;volatile
  2992                           
  2993                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  2994   00150C  9296               	bcf	150,1,c	;volatile
  2995                           
  2996                           ;hardware_config.c: 37:  GIE = 0;
  2997   00150E  9EF2               	bcf	4082,7,c	;volatile
  2998                           
  2999                           ;hardware_config.c: 38:  PEIE = 0;
  3000   001510  9CF2               	bcf	4082,6,c	;volatile
  3001                           
  3002                           ;hardware_config.c: 39:  RBIE = 0;
  3003   001512  96F2               	bcf	4082,3,c	;volatile
  3004                           
  3005                           ;hardware_config.c: 40:  T0IE = 0;
  3006   001514  9AF2               	bcf	4082,5,c	;volatile
  3007                           
  3008                           ;hardware_config.c: 41:  TMR1IE = 0;
  3009   001516  909D               	bcf	3997,0,c	;volatile
  3010                           
  3011                           ;hardware_config.c: 42:  TMR2IE = 0;
  3012   001518  929D               	bcf	3997,1,c	;volatile
  3013                           
  3014                           ;hardware_config.c: 43:  CCP1IE = 0;
  3015   00151A  949D               	bcf	3997,2,c	;volatile
  3016                           
  3017                           ;hardware_config.c: 44:  CCP2IE = 0;
  3018   00151C  90A0               	bcf	4000,0,c	;volatile
  3019                           
  3020                           ;hardware_config.c: 45:  EEIE = 0;
  3021   00151E  98A0               	bcf	4000,4,c	;volatile
  3022                           
  3023                           ;hardware_config.c: 46:  SSPIE = 0;
  3024   001520  969D               	bcf	3997,3,c	;volatile
  3025                           
  3026                           ;hardware_config.c: 47:  BCLIE = 0;
  3027   001522  96A0               	bcf	4000,3,c	;volatile
  3028                           
  3029                           ;hardware_config.c: 48:  ADIE = 0;
  3030   001524  9C9D               	bcf	3997,6,c	;volatile
  3031                           
  3032                           ;hardware_config.c: 49:  RBIE = 0;
  3033   001526  96F2               	bcf	4082,3,c	;volatile
  3034                           
  3035                           ;hardware_config.c: 50:  RCIE = 0;
  3036   001528  9A9D               	bcf	3997,5,c	;volatile
  3037   00152A                     
  3038                           ;hardware_config.c: 51:     OSCCON = 0b01110010;
  3039   00152A  0E72               	movlw	114
  3040   00152C  6ED3               	movwf	211,c	;volatile
  3041                           
  3042                           ;hardware_config.c: 52:     OSCTUNE = 0b11011111;
  3043   00152E  0EDF               	movlw	223
  3044   001530  6E9B               	movwf	155,c	;volatile
  3045   001532                     
  3046                           ;hardware_config.c: 55:     SPIInit();
  3047   001532  EC23  F00B         	call	_SPIInit	;wreg free
  3048   001536  0012               	return		;funcret
  3049   001538                     __end_of_BoardInit:
  3050                           	callstack 0
  3051                           
  3052 ;; *************** function _SPIInit *****************
  3053 ;; Defined at:
  3054 ;;		line 31 in file "drivers/scr/drv_mspi_port.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;		None
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;		None
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		None
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3072 ;;Total ram usage:        0 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; This function calls:
  3075 ;;		Nothing
  3076 ;; This function is called by:
  3077 ;;		_BoardInit
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text22
  3082   001646                     __ptext22:
  3083                           	callstack 0
  3084   001646                     _SPIInit:
  3085                           	callstack 29
  3086   001646                     
  3087                           ;drivers/scr/drv_mspi_port.c: 33:     TRISCbits.TRISC3 = 0;
  3088   001646  9694               	bcf	148,3,c	;volatile
  3089                           
  3090                           ;drivers/scr/drv_mspi_port.c: 34:     TRISCbits.TRISC5 = 0;
  3091   001648  9A94               	bcf	148,5,c	;volatile
  3092                           
  3093                           ;drivers/scr/drv_mspi_port.c: 35:     TRISCbits.TRISC4 = 1;
  3094   00164A  8894               	bsf	148,4,c	;volatile
  3095                           
  3096                           ;drivers/scr/drv_mspi_port.c: 36:  SSPSTATbits.CKE = 1;
  3097   00164C  8CC7               	bsf	199,6,c	;volatile
  3098                           
  3099                           ;drivers/scr/drv_mspi_port.c: 37:  SSPCON1bits.WCOL = 1;
  3100   00164E  8EC6               	bsf	198,7,c	;volatile
  3101                           
  3102                           ;drivers/scr/drv_mspi_port.c: 38:  SSPCON1bits.SSPOV = 0;
  3103   001650  9CC6               	bcf	198,6,c	;volatile
  3104                           
  3105                           ;drivers/scr/drv_mspi_port.c: 39:  SSPCON1bits.SSPEN = 1;
  3106   001652  8AC6               	bsf	198,5,c	;volatile
  3107                           
  3108                           ;drivers/scr/drv_mspi_port.c: 40:  SSPCON1bits.CKP = 0;
  3109   001654  98C6               	bcf	198,4,c	;volatile
  3110                           
  3111                           ;drivers/scr/drv_mspi_port.c: 41:  SSPSTATbits.SMP = 1;
  3112   001656  8EC7               	bsf	199,7,c	;volatile
  3113                           
  3114                           ;drivers/scr/drv_mspi_port.c: 42:  SSPCON1bits.SSPM3 = 0;
  3115   001658  96C6               	bcf	198,3,c	;volatile
  3116                           
  3117                           ;drivers/scr/drv_mspi_port.c: 43:  SSPCON1bits.SSPM2 = 0;
  3118   00165A  94C6               	bcf	198,2,c	;volatile
  3119                           
  3120                           ;drivers/scr/drv_mspi_port.c: 44:  SSPCON1bits.SSPM1 = 0;
  3121   00165C  92C6               	bcf	198,1,c	;volatile
  3122                           
  3123                           ;drivers/scr/drv_mspi_port.c: 45:  SSPCON1bits.SSPM0 = 1;
  3124   00165E  80C6               	bsf	198,0,c	;volatile
  3125   001660  0012               	return		;funcret
  3126   001662                     __end_of_SPIInit:
  3127                           	callstack 0
  3128                           
  3129                           	psect	rparam
  3130   000001                     ___rparam_used  equ	1
  3131   000000                     ___param_bank   equ	0
  3132   000000                     __Lparam        equ	__Lrparam
  3133   000000                     __Hparam        equ	__Hrparam
  3134                           
  3135                           	psect	idloc
  3136                           
  3137                           ;Config register IDLOC0 @ 0x200000
  3138                           ;	unspecified, using default values
  3139   200000                     	org	2097152
  3140   200000  FF                 	db	255
  3141                           
  3142                           ;Config register IDLOC1 @ 0x200001
  3143                           ;	unspecified, using default values
  3144   200001                     	org	2097153
  3145   200001  FF                 	db	255
  3146                           
  3147                           ;Config register IDLOC2 @ 0x200002
  3148                           ;	unspecified, using default values
  3149   200002                     	org	2097154
  3150   200002  FF                 	db	255
  3151                           
  3152                           ;Config register IDLOC3 @ 0x200003
  3153                           ;	unspecified, using default values
  3154   200003                     	org	2097155
  3155   200003  FF                 	db	255
  3156                           
  3157                           ;Config register IDLOC4 @ 0x200004
  3158                           ;	unspecified, using default values
  3159   200004                     	org	2097156
  3160   200004  FF                 	db	255
  3161                           
  3162                           ;Config register IDLOC5 @ 0x200005
  3163                           ;	unspecified, using default values
  3164   200005                     	org	2097157
  3165   200005  FF                 	db	255
  3166                           
  3167                           ;Config register IDLOC6 @ 0x200006
  3168                           ;	unspecified, using default values
  3169   200006                     	org	2097158
  3170   200006  FF                 	db	255
  3171                           
  3172                           ;Config register IDLOC7 @ 0x200007
  3173                           ;	unspecified, using default values
  3174   200007                     	org	2097159
  3175   200007  FF                 	db	255
  3176                           
  3177                           	psect	config
  3178                           
  3179                           ; Padding undefined space
  3180   300000                     	org	3145728
  3181   300000  FF                 	db	255
  3182                           
  3183                           ;Config register CONFIG1H @ 0x300001
  3184                           ;	Oscillator Selection bits
  3185                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3186                           ;	Fail-Safe Clock Monitor Enable bit
  3187                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3188                           ;	Internal/External Oscillator Switchover bit
  3189                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3190   300001                     	org	3145729
  3191   300001  08                 	db	8
  3192                           
  3193                           ;Config register CONFIG2L @ 0x300002
  3194                           ;	Power-up Timer Enable bit
  3195                           ;	PWRTEN = OFF, PWRT disabled
  3196                           ;	Brown-out Reset Enable bits
  3197                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3198                           ;	Brown Out Reset Voltage bits
  3199                           ;	BORV = 22, VBOR set to 2.2 V nominal
  3200   300002                     	org	3145730
  3201   300002  11                 	db	17
  3202                           
  3203                           ;Config register CONFIG2H @ 0x300003
  3204                           ;	Watchdog Timer Enable bit
  3205                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3206                           ;	Watchdog Timer Postscale Select bits
  3207                           ;	WDTPS = 8192, 1:8192
  3208   300003                     	org	3145731
  3209   300003  1A                 	db	26
  3210                           
  3211                           ; Padding undefined space
  3212   300004                     	org	3145732
  3213   300004  FF                 	db	255
  3214                           
  3215                           ;Config register CONFIG3H @ 0x300005
  3216                           ;	CCP2 MUX bit
  3217                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3218                           ;	PORTB A/D Enable bit
  3219                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3220                           ;	Low-Power Timer1 Oscillator Enable bit
  3221                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3222                           ;	HFINTOSC Fast Start-up
  3223                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  3224                           ;	MCLR Pin Enable bit
  3225                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3226   300005                     	org	3145733
  3227   300005  81                 	db	129
  3228                           
  3229                           ;Config register CONFIG4L @ 0x300006
  3230                           ;	Stack Full/Underflow Reset Enable bit
  3231                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3232                           ;	Single-Supply ICSP Enable bit
  3233                           ;	LVP = OFF, Single-Supply ICSP disabled
  3234                           ;	Extended Instruction Set Enable bit
  3235                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3236                           ;	Background Debugger Enable bit
  3237                           ;	DEBUG = ON, Background debugger enabled, RB6 and RB7 are dedicated to In-Circuit Debug
  3238   300006                     	org	3145734
  3239   300006  00                 	db	0
  3240                           
  3241                           ; Padding undefined space
  3242   300007                     	org	3145735
  3243   300007  FF                 	db	255
  3244                           
  3245                           ;Config register CONFIG5L @ 0x300008
  3246                           ;	Code Protection Block 0
  3247                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3248                           ;	Code Protection Block 1
  3249                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3250                           ;	Code Protection Block 2
  3251                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3252                           ;	Code Protection Block 3
  3253                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3254   300008                     	org	3145736
  3255   300008  0F                 	db	15
  3256                           
  3257                           ;Config register CONFIG5H @ 0x300009
  3258                           ;	Boot Block Code Protection bit
  3259                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3260                           ;	Data EEPROM Code Protection bit
  3261                           ;	CPD = OFF, Data EEPROM not code-protected
  3262   300009                     	org	3145737
  3263   300009  C0                 	db	192
  3264                           
  3265                           ;Config register CONFIG6L @ 0x30000A
  3266                           ;	Write Protection Block 0
  3267                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3268                           ;	Write Protection Block 1
  3269                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3270                           ;	Write Protection Block 2
  3271                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3272                           ;	Write Protection Block 3
  3273                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3274   30000A                     	org	3145738
  3275   30000A  0F                 	db	15
  3276                           
  3277                           ;Config register CONFIG6H @ 0x30000B
  3278                           ;	Configuration Register Write Protection bit
  3279                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3280                           ;	Boot Block Write Protection bit
  3281                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3282                           ;	Data EEPROM Write Protection bit
  3283                           ;	WRTD = OFF, Data EEPROM not write-protected
  3284   30000B                     	org	3145739
  3285   30000B  E0                 	db	224
  3286                           
  3287                           ;Config register CONFIG7L @ 0x30000C
  3288                           ;	unspecified, using default values
  3289                           ;	Table Read Protection Block 0
  3290                           ;	EBTR0 = 0x1, unprogrammed default
  3291                           ;	Table Read Protection Block 1
  3292                           ;	EBTR1 = 0x1, unprogrammed default
  3293                           ;	Table Read Protection Block 2
  3294                           ;	EBTR2 = 0x1, unprogrammed default
  3295                           ;	Table Read Protection Block 3
  3296                           ;	EBTR3 = 0x1, unprogrammed default
  3297   30000C                     	org	3145740
  3298   30000C  0F                 	db	15
  3299                           
  3300                           ;Config register CONFIG7H @ 0x30000D
  3301                           ;	Boot Block Table Read Protection bit
  3302                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3303   30000D                     	org	3145741
  3304   30000D  40                 	db	64
  3305                           tosu	equ	0xFFF
  3306                           tosh	equ	0xFFE
  3307                           tosl	equ	0xFFD
  3308                           stkptr	equ	0xFFC
  3309                           pclatu	equ	0xFFB
  3310                           pclath	equ	0xFFA
  3311                           pcl	equ	0xFF9
  3312                           tblptru	equ	0xFF8
  3313                           tblptrh	equ	0xFF7
  3314                           tblptrl	equ	0xFF6
  3315                           tablat	equ	0xFF5
  3316                           prodh	equ	0xFF4
  3317                           prodl	equ	0xFF3
  3318                           indf0	equ	0xFEF
  3319                           postinc0	equ	0xFEE
  3320                           postdec0	equ	0xFED
  3321                           preinc0	equ	0xFEC
  3322                           plusw0	equ	0xFEB
  3323                           fsr0h	equ	0xFEA
  3324                           fsr0l	equ	0xFE9
  3325                           wreg	equ	0xFE8
  3326                           indf1	equ	0xFE7
  3327                           postinc1	equ	0xFE6
  3328                           postdec1	equ	0xFE5
  3329                           preinc1	equ	0xFE4
  3330                           plusw1	equ	0xFE3
  3331                           fsr1h	equ	0xFE2
  3332                           fsr1l	equ	0xFE1
  3333                           bsr	equ	0xFE0
  3334                           indf2	equ	0xFDF
  3335                           postinc2	equ	0xFDE
  3336                           postdec2	equ	0xFDD
  3337                           preinc2	equ	0xFDC
  3338                           plusw2	equ	0xFDB
  3339                           fsr2h	equ	0xFDA
  3340                           fsr2l	equ	0xFD9
  3341                           status	equ	0xFD8

Data Sizes:
    Strings     32
    Constant    24
    Data        0
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      53
    BANK0           160      0      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_1(CODE[32]), 

    S34$buffer_salida	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_1(CODE[32]), 

    SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_1(CODE[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_1(CODE[32]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> STR_1(CODE[32]), 


Critical Paths under _main in COMRAM

    _main->_EnviarDato
    _SetMensajeSalida->_strlen
    _MRF24J40Init->_GetLongAddr
    _MRF24J40Init->_SetLongAddr
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _GetShortAddr->_WriteByteSPIPort
    _GetLongAddr->_WriteByteSPIPort
    _EnviarDato->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2978
                                             10 COMRAM     2     2      0
                          _BoardInit
                         _EnviarDato
                       _MRF24J40Init
                   _SetMensajeSalida
 ---------------------------------------------------------------------------------
 (1) _SetMensajeSalida                                     1     0      1     136
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         2     2      0    2008
                                              7 COMRAM     2     2      0
                        _GetLongAddr
                       _GetShortAddr
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  2     2      0     257
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           0     0      0     467
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     181
                                              2 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnviarDato                                           3     3      0     834
                                              7 COMRAM     3     3      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     278
                                              2 COMRAM     5     2      3
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _EnviarDato
     _SetLongAddr
       _SetCSPin
       _WriteByteSPIPort
         _SPIWriteByte
     _SetShortAddr
       _SetCSPin
       _WriteByteSPIPort
   _MRF24J40Init
     _GetLongAddr
       _ReadByteSPIPort
         _SPIRead
       _SetCSPin
       _WriteByteSPIPort
     _GetShortAddr
       _ReadByteSPIPort
       _SetCSPin
       _WriteByteSPIPort
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _SetLongAddr
       _SetShortAddr
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr
   _SetMensajeSalida
     _strlen

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      55     34.4%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     12      53     55.8%
BITBIGSFRlll        32      0       0      0.0%
BITBIGSFRlh         16      0       0      0.0%
BITBIGSFRllh        11      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     108      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Mar 30 09:06:15 2025

                 _SSPSTATbits 0FC7                            l61 1608                            l54 13BE  
                          l70 1592                            l55 1430                            l64 14F8  
                          l73 15BC                            l49 11AA                            l58 1628  
                          l67 1474                            l78 14B6                            l98 12C0  
                          u45 16BA                            u46 16BC                            u65 16AC  
                          u66 16AE                 ?_MRF24J40Init 002A                           l115 16A0  
                         l140 1644                           l143 16CA                           l152 16D4  
                         l209 12D2                           l146 16AE                           l171 1660  
                         l261 1536                           l149 16BC                           l174 166A  
                         l158 16DA                           l192 168E                           l177 1678  
                         l189 167E                           l941 1566                           l961 16B2  
                         l995 16A4                           _GIE 7F97                           u300 1678  
                         u301 1674                           u320 168C                           u400 1168  
                         u321 1688                           u401 1164                           u410 1274  
                         u315 16C8                           u411 1270                           u316 16CA  
                         u420 12B6                           u340 13A6                           u421 12B2  
                         u341 13A2                           u350 13F6                           u510 131E  
                         u335 14C2                           u351 13F2                           u511 1316  
                         u360 14B6                           u361 14B2                           u530 1354  
                         u531 134C                           u380 155A                           u508 12E8  
                         u381 1556                           u390 1094                           u375 143C  
                         u607 109A                           u391 1090                           u528 1320  
                         u617 158E                           u490 12E6                           u491 12DE  
                         u548 1356                           u557 1300                           u567 1336  
                         u577 136A                           u587 1048                           u597 1060  
                         wreg 0FE8           __end_of_GetLongAddr 1476                          l1221 14FA  
                        l1223 152A                          l1225 1532                          l1501 13F6  
                        l1503 13FE                          l1097 1646                          l1441 1666  
                        l1521 15E6                          l1513 162A                          l1505 1400  
                        l1601 1094                          l1443 16C0                          l1451 167A  
                        l1531 1606                          l1523 15EE                          l1515 1632  
                        l1507 142C                          l1611 10C4                          l1603 10A2  
                        l1461 1616                          l1453 168C                          l1525 15F4  
                        l1509 142E                          l1621 1114                          l1613 10D4  
                        l1605 10AC                          l1439 1664                          l1447 16CE  
                        l1471 14DA                          l1463 161C                          l1527 15FA  
                        l1519 15E6                          l1535 1594                          l1551 149A  
                        l1631 1146                          l1623 111E                          l1615 10E4  
                        l1607 10B0                          l1703 1690                          l1473 14E0  
                        l1465 1622                          l1457 160C                          l1641 11AE  
                        l1561 1466                          l1553 1432                          l1529 1600  
                        l1545 1482                          l1633 1154                          l1625 1128  
                        l1617 10F4                          l1609 10B4                          l1705 1694  
                        l1475 14E6                          l1459 1610                          l1651 11D2  
                        l1643 11AE                          l1483 16D6                          l1563 146C  
                        l1555 1454                          l1571 158C                          l1547 1494  
                        l1539 1476                          l1635 1168                          l1627 1132  
                        l1619 1104                          l1477 14EC                          l1469 14B8  
                        l1661 1206                          l1653 11E0                          l1645 11BE  
                        l1565 1472                          l1557 145A                          l1493 138A  
                        l1549 1496                          l1629 113C                          l1581 155A  
                        l1901 1342                          l1479 14F2                          l1671 1228  
                        l1663 1208                          l1655 11E2                          l1647 11C0  
                        l1639 11AC                          l1559 1460                          l1495 13A6  
                        l1487 1382                          l1591 1054                          l1575 1538  
                        l1903 1360                          l1673 1236                          l1665 1216  
                        l1657 11F0                          l1649 11D0                          l1497 13D6  
                        l1569 1568                          l1593 105A                          l1585 103A  
                        l1577 1540                          l1905 1376                          l1691 1264  
                        l1675 1238                          l1667 1218                          l1659 11F2  
                        l1499 13DA                          l1595 106C                          l1587 103E  
                        l1579 1542                          l1693 1278                          l1685 124A  
                        l1677 1246                          l1669 1226                          l1597 1076  
                        l1589 1042                          l1695 1298                          l1687 1260  
                        l1679 1248                          l1599 107E                          l1697 129A  
                        l1689 1262                          l1699 12B6                          l1891 12CA  
                        l1893 12D4                          l1895 12F6                          l1887 12C2  
                        l1897 130C                          l1889 12C6                          l1899 132C  
                        _ADIE 7CEE                          _EEIE 7D04                          STR_1 1019  
                        _T0IE 7F95                          _PEIE 7F96                          _RBIE 7F93  
                        _RCIE 7CED                  _SPIWriteByte 1662                          _main 12C2  
             __end_of_SPIInit 1662               __end_of_SPIRead 1690                          fsr2h 0FDA  
                        indf2 0FDF                          fsr2l 0FD9                   EnviarDato@i 0032  
     GetShortAddr@reg_address 002D                          start 0000                  ___param_bank 0000  
           ??_ReadByteSPIPort 002A                ??_MRF24J40Init 0031   __end_of_InicializoVariables 1432  
                       ?_main 002A                         _BCLIE 7D03          SetDeviceMACAddress@i 002E  
                       _PORTA 0F80                         _PORTB 0F81                         _PORTC 0F82  
                       _PORTD 0F83                         _PORTE 0F84                         _SSPIE 7CEB  
        __end_of_GetShortAddr 160A               _InicializoPines 162A       SetShortAddr@reg_address 002D  
         MRF24J40Init@lectura 0032                         tablat 0FF5                         status 0FD8  
                  _EnviarDato 11AC           _SetDeviceMACAddress 1476               __initialization 15BE  
                __end_of_main 1382              __end_of_SetCSPin 16CC                   _GetLongAddr 1432  
               ??_SetLongAddr 002F                        ??_main 0034                 __activetblptr 0001  
               ??_SetResetPin 002A          ?_SetDeviceMACAddress 002A                    _SetChannel 1568  
           ?_SetDeviceAddress 002A                        _CCP1IE 7CEA                        _CCP2IE 7D00  
                   ??_SPIInit 002A                     ??_SPIRead 002A            ??_SetDeviceAddress 002E  
                  _SetWakePin 16A2                        _OSCCON 0FD3                        _TMR1IE 7CE8  
                      _TMR2IE 7CE9  __end_of_default_security_key 1011                        _SSPBUF 0FC9  
                      clear_0 15C4                        clear_1 15D0                        isa$std 0001  
              SetCSPin@estado 002A       __end_of_InicializoPines 1646                        _strlen 1538  
       ??_SetDeviceMACAddress 002E          InicializoVariables@i 002B                 EnviarDato@pos 0033  
                __mediumconst 0000             _mrf24_data_config 0001                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8           __end_of_SetLongAddr 14FA  
         __end_of_SetResetPin 16BE         GetShortAddr@leido_spi 002C          __end_of_MRF24J40Init 11AC  
            _SetMensajeSalida 1690                    __accesstop 0060       __end_of__initialization 15D6  
           __end_of_BoardInit 1538                   ?_EnviarDato 002A                 ___rparam_used 0001  
            SetWakePin@estado 002A                 ?_SetShortAddr 002C                __pcstackCOMRAM 002A  
                 ?_SetChannel 002A                    __pbssBANK0 0060                   ?_SetWakePin 002A  
                   ?_SetCSPin 002A               _ReadByteSPIPort 16D6                  _GetShortAddr 15E4  
              ??_SetShortAddr 002D                   _SetLongAddr 14B8                       ?_strlen 002A  
            ?_InicializoPines 002A          _default_security_key 1001                   _SetResetPin 16B0  
                     _OSCTUNE 0F9B                       _SPIInit 1646                       _SPIRead 167A  
                  ??_SetCSPin 002A             SetShortAddr@value 002C                       __Hparam 0000  
                     __Lparam 0000                  __psmallconst 1000                       __pcinit 15BE  
                ?_GetLongAddr 002C                       __ramtop 1000                       __ptext0 12C2  
                     __ptext1 1690                       __ptext2 1538                       __ptext3 103A  
                     __ptext4 1476                       __ptext5 1594                       __ptext6 1568  
                     __ptext7 1382                       __ptext8 162A                       __ptext9 16A2  
            _WriteByteSPIPort 16CC       __end_of_ReadByteSPIPort 16DC          end_of_initialization 15D6  
         _default_mac_address 1011                       postinc0 0FEE                       strlen@a 002C  
                     strlen@s 002A                  _MRF24J40Init 103A      __end_of_SetMensajeSalida 16A2  
        WriteByteSPIPort@dato 002B                     _TRISBbits 0F93                     _TRISCbits 0F94  
                   _TRISDbits 0F95                     _TRISEbits 0F96          __end_of_SetShortAddr 162A  
      _my_default_mac_address 0029                  ??_EnviarDato 0031                     _BoardInit 14FA  
 __end_of_SetDeviceMACAddress 14B8                __end_of_strlen 1568                  ??_SetChannel 0031  
         start_initialization 15BE            __end_of_EnviarDato 12C2              ?_ReadByteSPIPort 002A  
               ?_SPIWriteByte 002A                  ??_SetWakePin 002A                    ?_BoardInit 002A  
          __end_of_SetChannel 1594                  ?_SetLongAddr 002C                      ??_strlen 002C  
          __end_of_SetWakePin 16B0                  ?_SetResetPin 002A                   __pbssCOMRAM 0001  
     SetMensajeSalida@mensaje 002D                      ?_SPIInit 002A                      ?_SPIRead 002A  
              ??_SPIWriteByte 002A              SPIWriteByte@dato 002A              _SetDeviceAddress 1594  
         _InicializoVariables 1382      __end_of_WriteByteSPIPort 16D6             SetResetPin@estado 002A  
                 __smallconst 1000          ?_InicializoVariables 002A              SetLongAddr@value 002E  
                    _LATCbits 0F8B                      _LATDbits 0F8C                      _LATEbits 0F8D  
                 ??_BoardInit 002A                      _PIR1bits 0F9E                  _SetShortAddr 160A  
         GetLongAddr@toReturn 0030             ?_SetMensajeSalida 002D         ??_InicializoVariables 002A  
          ??_SetMensajeSalida 002E                _mrf24_data_out 0023                      _SetCSPin 16BE  
                    __Hrparam 0000                      __Lrparam 0000                  __Lsmallconst 1000  
        __end_of_SPIWriteByte 167A                      __ptext10 16B0                      __ptext11 15E4  
                    __ptext20 16BE                      __ptext12 1432                      __ptext21 14FA  
                    __ptext13 16D6                      __ptext22 1646                      __ptext14 167A  
                    __ptext15 11AC                      __ptext16 160A                      __ptext17 14B8  
                    __ptext18 16CC                      __ptext19 1662             ??_InicializoPines 002B  
               ?_GetShortAddr 002A                      isa$xinst 0000   __end_of_default_mac_address 1019  
               _mrf24_data_in 0060      __end_of_SetDeviceAddress 15BE                ??_GetShortAddr 002C  
           ?_WriteByteSPIPort 002A                 ??_GetLongAddr 002E            ??_WriteByteSPIPort 002B  
      GetLongAddr@reg_address 002C                   _SSPCON1bits 0FC6        SetLongAddr@reg_address 002C  
