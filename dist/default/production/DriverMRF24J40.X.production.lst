

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Apr 20 07:03:03 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Version 2.20
    51                           ; Generated 05/05/2020 GMT
    52                           ; 
    53                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F46K20 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000FE0                     bsr             equ	4064
    85   000FE9                     fsr0            equ	4073
    86   000FEA                     fsr0h           equ	4074
    87   000FE9                     fsr0l           equ	4073
    88   000FE1                     fsr1            equ	4065
    89   000FE2                     fsr1h           equ	4066
    90   000FE1                     fsr1l           equ	4065
    91   000FD9                     fsr2            equ	4057
    92   000FDA                     fsr2h           equ	4058
    93   000FD9                     fsr2l           equ	4057
    94   000FEF                     indf0           equ	4079
    95   000FE7                     indf1           equ	4071
    96   000FDF                     indf2           equ	4063
    97   000FF2                     intcon          equ	4082
    98   000000                     nvmcon          equ	0
    99   000FF9                     pcl             equ	4089
   100   000FFA                     pclath          equ	4090
   101   000FFB                     pclatu          equ	4091
   102   000FEB                     plusw0          equ	4075
   103   000FE3                     plusw1          equ	4067
   104   000FDB                     plusw2          equ	4059
   105   000FED                     postdec0        equ	4077
   106   000FE5                     postdec1        equ	4069
   107   000FDD                     postdec2        equ	4061
   108   000FEE                     postinc0        equ	4078
   109   000FE6                     postinc1        equ	4070
   110   000FDE                     postinc2        equ	4062
   111   000FEC                     preinc0         equ	4076
   112   000FE4                     preinc1         equ	4068
   113   000FDC                     preinc2         equ	4060
   114   000FF3                     prod            equ	4083
   115   000FF4                     prodh           equ	4084
   116   000FF3                     prodl           equ	4083
   117   000FD8                     status          equ	4056
   118   000FF5                     tablat          equ	4085
   119   000FF6                     tblptr          equ	4086
   120   000FF7                     tblptrh         equ	4087
   121   000FF6                     tblptrl         equ	4086
   122   000FF8                     tblptru         equ	4088
   123   000FFD                     tosl            equ	4093
   124   000FE8                     wreg            equ	4072
   125   000F77                     SSPMSK          equ	3959	;# 
   126   000F78                     SLRCON          equ	3960	;# 
   127   000F79                     CM2CON1         equ	3961	;# 
   128   000F7A                     CM2CON0         equ	3962	;# 
   129   000F7B                     CM1CON0         equ	3963	;# 
   130   000F7C                     WPUB            equ	3964	;# 
   131   000F7D                     IOCB            equ	3965	;# 
   132   000F7E                     ANSEL           equ	3966	;# 
   133   000F7F                     ANSELH          equ	3967	;# 
   134   000F80                     PORTA           equ	3968	;# 
   135   000F81                     PORTB           equ	3969	;# 
   136   000F82                     PORTC           equ	3970	;# 
   137   000F83                     PORTD           equ	3971	;# 
   138   000F84                     PORTE           equ	3972	;# 
   139   000F89                     LATA            equ	3977	;# 
   140   000F8A                     LATB            equ	3978	;# 
   141   000F8B                     LATC            equ	3979	;# 
   142   000F8C                     LATD            equ	3980	;# 
   143   000F8D                     LATE            equ	3981	;# 
   144   000F92                     TRISA           equ	3986	;# 
   145   000F92                     DDRA            equ	3986	;# 
   146   000F93                     TRISB           equ	3987	;# 
   147   000F93                     DDRB            equ	3987	;# 
   148   000F94                     TRISC           equ	3988	;# 
   149   000F94                     DDRC            equ	3988	;# 
   150   000F95                     TRISD           equ	3989	;# 
   151   000F95                     DDRD            equ	3989	;# 
   152   000F96                     TRISE           equ	3990	;# 
   153   000F96                     DDRE            equ	3990	;# 
   154   000F9B                     OSCTUNE         equ	3995	;# 
   155   000F9D                     PIE1            equ	3997	;# 
   156   000F9E                     PIR1            equ	3998	;# 
   157   000F9F                     IPR1            equ	3999	;# 
   158   000FA0                     PIE2            equ	4000	;# 
   159   000FA1                     PIR2            equ	4001	;# 
   160   000FA2                     IPR2            equ	4002	;# 
   161   000FA6                     EECON1          equ	4006	;# 
   162   000FA7                     EECON2          equ	4007	;# 
   163   000FA8                     EEDATA          equ	4008	;# 
   164   000FA9                     EEADR           equ	4009	;# 
   165   000FAA                     EEADRH          equ	4010	;# 
   166   000FAB                     RCSTA           equ	4011	;# 
   167   000FAB                     RCSTA1          equ	4011	;# 
   168   000FAC                     TXSTA           equ	4012	;# 
   169   000FAC                     TXSTA1          equ	4012	;# 
   170   000FAD                     TXREG           equ	4013	;# 
   171   000FAD                     TXREG1          equ	4013	;# 
   172   000FAE                     RCREG           equ	4014	;# 
   173   000FAE                     RCREG1          equ	4014	;# 
   174   000FAF                     SPBRG           equ	4015	;# 
   175   000FAF                     SPBRG1          equ	4015	;# 
   176   000FB0                     SPBRGH          equ	4016	;# 
   177   000FB1                     T3CON           equ	4017	;# 
   178   000FB2                     TMR3            equ	4018	;# 
   179   000FB2                     TMR3L           equ	4018	;# 
   180   000FB3                     TMR3H           equ	4019	;# 
   181   000FB4                     CVRCON2         equ	4020	;# 
   182   000FB5                     CVRCON          equ	4021	;# 
   183   000FB6                     ECCP1AS         equ	4022	;# 
   184   000FB7                     PWM1CON         equ	4023	;# 
   185   000FB8                     BAUDCON         equ	4024	;# 
   186   000FB8                     BAUDCTL         equ	4024	;# 
   187   000FB9                     PSTRCON         equ	4025	;# 
   188   000FBA                     CCP2CON         equ	4026	;# 
   189   000FBB                     CCPR2           equ	4027	;# 
   190   000FBB                     CCPR2L          equ	4027	;# 
   191   000FBC                     CCPR2H          equ	4028	;# 
   192   000FBD                     CCP1CON         equ	4029	;# 
   193   000FBE                     CCPR1           equ	4030	;# 
   194   000FBE                     CCPR1L          equ	4030	;# 
   195   000FBF                     CCPR1H          equ	4031	;# 
   196   000FC0                     ADCON2          equ	4032	;# 
   197   000FC1                     ADCON1          equ	4033	;# 
   198   000FC2                     ADCON0          equ	4034	;# 
   199   000FC3                     ADRES           equ	4035	;# 
   200   000FC3                     ADRESL          equ	4035	;# 
   201   000FC4                     ADRESH          equ	4036	;# 
   202   000FC5                     SSPCON2         equ	4037	;# 
   203   000FC6                     SSPCON1         equ	4038	;# 
   204   000FC7                     SSPSTAT         equ	4039	;# 
   205   000FC8                     SSPADD          equ	4040	;# 
   206   000FC9                     SSPBUF          equ	4041	;# 
   207   000FCA                     T2CON           equ	4042	;# 
   208   000FCB                     PR2             equ	4043	;# 
   209   000FCB                     MEMCON          equ	4043	;# 
   210   000FCC                     TMR2            equ	4044	;# 
   211   000FCD                     T1CON           equ	4045	;# 
   212   000FCE                     TMR1            equ	4046	;# 
   213   000FCE                     TMR1L           equ	4046	;# 
   214   000FCF                     TMR1H           equ	4047	;# 
   215   000FD0                     RCON            equ	4048	;# 
   216   000FD1                     WDTCON          equ	4049	;# 
   217   000FD2                     HLVDCON         equ	4050	;# 
   218   000FD2                     LVDCON          equ	4050	;# 
   219   000FD3                     OSCCON          equ	4051	;# 
   220   000FD5                     T0CON           equ	4053	;# 
   221   000FD6                     TMR0            equ	4054	;# 
   222   000FD6                     TMR0L           equ	4054	;# 
   223   000FD7                     TMR0H           equ	4055	;# 
   224   000FD8                     STATUS          equ	4056	;# 
   225   000FD9                     FSR2            equ	4057	;# 
   226   000FD9                     FSR2L           equ	4057	;# 
   227   000FDA                     FSR2H           equ	4058	;# 
   228   000FDB                     PLUSW2          equ	4059	;# 
   229   000FDC                     PREINC2         equ	4060	;# 
   230   000FDD                     POSTDEC2        equ	4061	;# 
   231   000FDE                     POSTINC2        equ	4062	;# 
   232   000FDF                     INDF2           equ	4063	;# 
   233   000FE0                     BSR             equ	4064	;# 
   234   000FE1                     FSR1            equ	4065	;# 
   235   000FE1                     FSR1L           equ	4065	;# 
   236   000FE2                     FSR1H           equ	4066	;# 
   237   000FE3                     PLUSW1          equ	4067	;# 
   238   000FE4                     PREINC1         equ	4068	;# 
   239   000FE5                     POSTDEC1        equ	4069	;# 
   240   000FE6                     POSTINC1        equ	4070	;# 
   241   000FE7                     INDF1           equ	4071	;# 
   242   000FE8                     WREG            equ	4072	;# 
   243   000FE9                     FSR0            equ	4073	;# 
   244   000FE9                     FSR0L           equ	4073	;# 
   245   000FEA                     FSR0H           equ	4074	;# 
   246   000FEB                     PLUSW0          equ	4075	;# 
   247   000FEC                     PREINC0         equ	4076	;# 
   248   000FED                     POSTDEC0        equ	4077	;# 
   249   000FEE                     POSTINC0        equ	4078	;# 
   250   000FEF                     INDF0           equ	4079	;# 
   251   000FF0                     INTCON3         equ	4080	;# 
   252   000FF1                     INTCON2         equ	4081	;# 
   253   000FF2                     INTCON          equ	4082	;# 
   254   000FF3                     PROD            equ	4083	;# 
   255   000FF3                     PRODL           equ	4083	;# 
   256   000FF4                     PRODH           equ	4084	;# 
   257   000FF5                     TABLAT          equ	4085	;# 
   258   000FF6                     TBLPTR          equ	4086	;# 
   259   000FF6                     TBLPTRL         equ	4086	;# 
   260   000FF7                     TBLPTRH         equ	4087	;# 
   261   000FF8                     TBLPTRU         equ	4088	;# 
   262   000FF9                     PCLAT           equ	4089	;# 
   263   000FF9                     PC              equ	4089	;# 
   264   000FF9                     PCL             equ	4089	;# 
   265   000FFA                     PCLATH          equ	4090	;# 
   266   000FFB                     PCLATU          equ	4091	;# 
   267   000FFC                     STKPTR          equ	4092	;# 
   268   000FFD                     TOS             equ	4093	;# 
   269   000FFD                     TOSL            equ	4093	;# 
   270   000FFE                     TOSH            equ	4094	;# 
   271   000FFF                     TOSU            equ	4095	;# 
   272   000F77                     SSPMSK          equ	3959	;# 
   273   000F78                     SLRCON          equ	3960	;# 
   274   000F79                     CM2CON1         equ	3961	;# 
   275   000F7A                     CM2CON0         equ	3962	;# 
   276   000F7B                     CM1CON0         equ	3963	;# 
   277   000F7C                     WPUB            equ	3964	;# 
   278   000F7D                     IOCB            equ	3965	;# 
   279   000F7E                     ANSEL           equ	3966	;# 
   280   000F7F                     ANSELH          equ	3967	;# 
   281   000F80                     PORTA           equ	3968	;# 
   282   000F81                     PORTB           equ	3969	;# 
   283   000F82                     PORTC           equ	3970	;# 
   284   000F83                     PORTD           equ	3971	;# 
   285   000F84                     PORTE           equ	3972	;# 
   286   000F89                     LATA            equ	3977	;# 
   287   000F8A                     LATB            equ	3978	;# 
   288   000F8B                     LATC            equ	3979	;# 
   289   000F8C                     LATD            equ	3980	;# 
   290   000F8D                     LATE            equ	3981	;# 
   291   000F92                     TRISA           equ	3986	;# 
   292   000F92                     DDRA            equ	3986	;# 
   293   000F93                     TRISB           equ	3987	;# 
   294   000F93                     DDRB            equ	3987	;# 
   295   000F94                     TRISC           equ	3988	;# 
   296   000F94                     DDRC            equ	3988	;# 
   297   000F95                     TRISD           equ	3989	;# 
   298   000F95                     DDRD            equ	3989	;# 
   299   000F96                     TRISE           equ	3990	;# 
   300   000F96                     DDRE            equ	3990	;# 
   301   000F9B                     OSCTUNE         equ	3995	;# 
   302   000F9D                     PIE1            equ	3997	;# 
   303   000F9E                     PIR1            equ	3998	;# 
   304   000F9F                     IPR1            equ	3999	;# 
   305   000FA0                     PIE2            equ	4000	;# 
   306   000FA1                     PIR2            equ	4001	;# 
   307   000FA2                     IPR2            equ	4002	;# 
   308   000FA6                     EECON1          equ	4006	;# 
   309   000FA7                     EECON2          equ	4007	;# 
   310   000FA8                     EEDATA          equ	4008	;# 
   311   000FA9                     EEADR           equ	4009	;# 
   312   000FAA                     EEADRH          equ	4010	;# 
   313   000FAB                     RCSTA           equ	4011	;# 
   314   000FAB                     RCSTA1          equ	4011	;# 
   315   000FAC                     TXSTA           equ	4012	;# 
   316   000FAC                     TXSTA1          equ	4012	;# 
   317   000FAD                     TXREG           equ	4013	;# 
   318   000FAD                     TXREG1          equ	4013	;# 
   319   000FAE                     RCREG           equ	4014	;# 
   320   000FAE                     RCREG1          equ	4014	;# 
   321   000FAF                     SPBRG           equ	4015	;# 
   322   000FAF                     SPBRG1          equ	4015	;# 
   323   000FB0                     SPBRGH          equ	4016	;# 
   324   000FB1                     T3CON           equ	4017	;# 
   325   000FB2                     TMR3            equ	4018	;# 
   326   000FB2                     TMR3L           equ	4018	;# 
   327   000FB3                     TMR3H           equ	4019	;# 
   328   000FB4                     CVRCON2         equ	4020	;# 
   329   000FB5                     CVRCON          equ	4021	;# 
   330   000FB6                     ECCP1AS         equ	4022	;# 
   331   000FB7                     PWM1CON         equ	4023	;# 
   332   000FB8                     BAUDCON         equ	4024	;# 
   333   000FB8                     BAUDCTL         equ	4024	;# 
   334   000FB9                     PSTRCON         equ	4025	;# 
   335   000FBA                     CCP2CON         equ	4026	;# 
   336   000FBB                     CCPR2           equ	4027	;# 
   337   000FBB                     CCPR2L          equ	4027	;# 
   338   000FBC                     CCPR2H          equ	4028	;# 
   339   000FBD                     CCP1CON         equ	4029	;# 
   340   000FBE                     CCPR1           equ	4030	;# 
   341   000FBE                     CCPR1L          equ	4030	;# 
   342   000FBF                     CCPR1H          equ	4031	;# 
   343   000FC0                     ADCON2          equ	4032	;# 
   344   000FC1                     ADCON1          equ	4033	;# 
   345   000FC2                     ADCON0          equ	4034	;# 
   346   000FC3                     ADRES           equ	4035	;# 
   347   000FC3                     ADRESL          equ	4035	;# 
   348   000FC4                     ADRESH          equ	4036	;# 
   349   000FC5                     SSPCON2         equ	4037	;# 
   350   000FC6                     SSPCON1         equ	4038	;# 
   351   000FC7                     SSPSTAT         equ	4039	;# 
   352   000FC8                     SSPADD          equ	4040	;# 
   353   000FC9                     SSPBUF          equ	4041	;# 
   354   000FCA                     T2CON           equ	4042	;# 
   355   000FCB                     PR2             equ	4043	;# 
   356   000FCB                     MEMCON          equ	4043	;# 
   357   000FCC                     TMR2            equ	4044	;# 
   358   000FCD                     T1CON           equ	4045	;# 
   359   000FCE                     TMR1            equ	4046	;# 
   360   000FCE                     TMR1L           equ	4046	;# 
   361   000FCF                     TMR1H           equ	4047	;# 
   362   000FD0                     RCON            equ	4048	;# 
   363   000FD1                     WDTCON          equ	4049	;# 
   364   000FD2                     HLVDCON         equ	4050	;# 
   365   000FD2                     LVDCON          equ	4050	;# 
   366   000FD3                     OSCCON          equ	4051	;# 
   367   000FD5                     T0CON           equ	4053	;# 
   368   000FD6                     TMR0            equ	4054	;# 
   369   000FD6                     TMR0L           equ	4054	;# 
   370   000FD7                     TMR0H           equ	4055	;# 
   371   000FD8                     STATUS          equ	4056	;# 
   372   000FD9                     FSR2            equ	4057	;# 
   373   000FD9                     FSR2L           equ	4057	;# 
   374   000FDA                     FSR2H           equ	4058	;# 
   375   000FDB                     PLUSW2          equ	4059	;# 
   376   000FDC                     PREINC2         equ	4060	;# 
   377   000FDD                     POSTDEC2        equ	4061	;# 
   378   000FDE                     POSTINC2        equ	4062	;# 
   379   000FDF                     INDF2           equ	4063	;# 
   380   000FE0                     BSR             equ	4064	;# 
   381   000FE1                     FSR1            equ	4065	;# 
   382   000FE1                     FSR1L           equ	4065	;# 
   383   000FE2                     FSR1H           equ	4066	;# 
   384   000FE3                     PLUSW1          equ	4067	;# 
   385   000FE4                     PREINC1         equ	4068	;# 
   386   000FE5                     POSTDEC1        equ	4069	;# 
   387   000FE6                     POSTINC1        equ	4070	;# 
   388   000FE7                     INDF1           equ	4071	;# 
   389   000FE8                     WREG            equ	4072	;# 
   390   000FE9                     FSR0            equ	4073	;# 
   391   000FE9                     FSR0L           equ	4073	;# 
   392   000FEA                     FSR0H           equ	4074	;# 
   393   000FEB                     PLUSW0          equ	4075	;# 
   394   000FEC                     PREINC0         equ	4076	;# 
   395   000FED                     POSTDEC0        equ	4077	;# 
   396   000FEE                     POSTINC0        equ	4078	;# 
   397   000FEF                     INDF0           equ	4079	;# 
   398   000FF0                     INTCON3         equ	4080	;# 
   399   000FF1                     INTCON2         equ	4081	;# 
   400   000FF2                     INTCON          equ	4082	;# 
   401   000FF3                     PROD            equ	4083	;# 
   402   000FF3                     PRODL           equ	4083	;# 
   403   000FF4                     PRODH           equ	4084	;# 
   404   000FF5                     TABLAT          equ	4085	;# 
   405   000FF6                     TBLPTR          equ	4086	;# 
   406   000FF6                     TBLPTRL         equ	4086	;# 
   407   000FF7                     TBLPTRH         equ	4087	;# 
   408   000FF8                     TBLPTRU         equ	4088	;# 
   409   000FF9                     PCLAT           equ	4089	;# 
   410   000FF9                     PC              equ	4089	;# 
   411   000FF9                     PCL             equ	4089	;# 
   412   000FFA                     PCLATH          equ	4090	;# 
   413   000FFB                     PCLATU          equ	4091	;# 
   414   000FFC                     STKPTR          equ	4092	;# 
   415   000FFD                     TOS             equ	4093	;# 
   416   000FFD                     TOSL            equ	4093	;# 
   417   000FFE                     TOSH            equ	4094	;# 
   418   000FFF                     TOSU            equ	4095	;# 
   419   000F77                     SSPMSK          equ	3959	;# 
   420   000F78                     SLRCON          equ	3960	;# 
   421   000F79                     CM2CON1         equ	3961	;# 
   422   000F7A                     CM2CON0         equ	3962	;# 
   423   000F7B                     CM1CON0         equ	3963	;# 
   424   000F7C                     WPUB            equ	3964	;# 
   425   000F7D                     IOCB            equ	3965	;# 
   426   000F7E                     ANSEL           equ	3966	;# 
   427   000F7F                     ANSELH          equ	3967	;# 
   428   000F80                     PORTA           equ	3968	;# 
   429   000F81                     PORTB           equ	3969	;# 
   430   000F82                     PORTC           equ	3970	;# 
   431   000F83                     PORTD           equ	3971	;# 
   432   000F84                     PORTE           equ	3972	;# 
   433   000F89                     LATA            equ	3977	;# 
   434   000F8A                     LATB            equ	3978	;# 
   435   000F8B                     LATC            equ	3979	;# 
   436   000F8C                     LATD            equ	3980	;# 
   437   000F8D                     LATE            equ	3981	;# 
   438   000F92                     TRISA           equ	3986	;# 
   439   000F92                     DDRA            equ	3986	;# 
   440   000F93                     TRISB           equ	3987	;# 
   441   000F93                     DDRB            equ	3987	;# 
   442   000F94                     TRISC           equ	3988	;# 
   443   000F94                     DDRC            equ	3988	;# 
   444   000F95                     TRISD           equ	3989	;# 
   445   000F95                     DDRD            equ	3989	;# 
   446   000F96                     TRISE           equ	3990	;# 
   447   000F96                     DDRE            equ	3990	;# 
   448   000F9B                     OSCTUNE         equ	3995	;# 
   449   000F9D                     PIE1            equ	3997	;# 
   450   000F9E                     PIR1            equ	3998	;# 
   451   000F9F                     IPR1            equ	3999	;# 
   452   000FA0                     PIE2            equ	4000	;# 
   453   000FA1                     PIR2            equ	4001	;# 
   454   000FA2                     IPR2            equ	4002	;# 
   455   000FA6                     EECON1          equ	4006	;# 
   456   000FA7                     EECON2          equ	4007	;# 
   457   000FA8                     EEDATA          equ	4008	;# 
   458   000FA9                     EEADR           equ	4009	;# 
   459   000FAA                     EEADRH          equ	4010	;# 
   460   000FAB                     RCSTA           equ	4011	;# 
   461   000FAB                     RCSTA1          equ	4011	;# 
   462   000FAC                     TXSTA           equ	4012	;# 
   463   000FAC                     TXSTA1          equ	4012	;# 
   464   000FAD                     TXREG           equ	4013	;# 
   465   000FAD                     TXREG1          equ	4013	;# 
   466   000FAE                     RCREG           equ	4014	;# 
   467   000FAE                     RCREG1          equ	4014	;# 
   468   000FAF                     SPBRG           equ	4015	;# 
   469   000FAF                     SPBRG1          equ	4015	;# 
   470   000FB0                     SPBRGH          equ	4016	;# 
   471   000FB1                     T3CON           equ	4017	;# 
   472   000FB2                     TMR3            equ	4018	;# 
   473   000FB2                     TMR3L           equ	4018	;# 
   474   000FB3                     TMR3H           equ	4019	;# 
   475   000FB4                     CVRCON2         equ	4020	;# 
   476   000FB5                     CVRCON          equ	4021	;# 
   477   000FB6                     ECCP1AS         equ	4022	;# 
   478   000FB7                     PWM1CON         equ	4023	;# 
   479   000FB8                     BAUDCON         equ	4024	;# 
   480   000FB8                     BAUDCTL         equ	4024	;# 
   481   000FB9                     PSTRCON         equ	4025	;# 
   482   000FBA                     CCP2CON         equ	4026	;# 
   483   000FBB                     CCPR2           equ	4027	;# 
   484   000FBB                     CCPR2L          equ	4027	;# 
   485   000FBC                     CCPR2H          equ	4028	;# 
   486   000FBD                     CCP1CON         equ	4029	;# 
   487   000FBE                     CCPR1           equ	4030	;# 
   488   000FBE                     CCPR1L          equ	4030	;# 
   489   000FBF                     CCPR1H          equ	4031	;# 
   490   000FC0                     ADCON2          equ	4032	;# 
   491   000FC1                     ADCON1          equ	4033	;# 
   492   000FC2                     ADCON0          equ	4034	;# 
   493   000FC3                     ADRES           equ	4035	;# 
   494   000FC3                     ADRESL          equ	4035	;# 
   495   000FC4                     ADRESH          equ	4036	;# 
   496   000FC5                     SSPCON2         equ	4037	;# 
   497   000FC6                     SSPCON1         equ	4038	;# 
   498   000FC7                     SSPSTAT         equ	4039	;# 
   499   000FC8                     SSPADD          equ	4040	;# 
   500   000FC9                     SSPBUF          equ	4041	;# 
   501   000FCA                     T2CON           equ	4042	;# 
   502   000FCB                     PR2             equ	4043	;# 
   503   000FCB                     MEMCON          equ	4043	;# 
   504   000FCC                     TMR2            equ	4044	;# 
   505   000FCD                     T1CON           equ	4045	;# 
   506   000FCE                     TMR1            equ	4046	;# 
   507   000FCE                     TMR1L           equ	4046	;# 
   508   000FCF                     TMR1H           equ	4047	;# 
   509   000FD0                     RCON            equ	4048	;# 
   510   000FD1                     WDTCON          equ	4049	;# 
   511   000FD2                     HLVDCON         equ	4050	;# 
   512   000FD2                     LVDCON          equ	4050	;# 
   513   000FD3                     OSCCON          equ	4051	;# 
   514   000FD5                     T0CON           equ	4053	;# 
   515   000FD6                     TMR0            equ	4054	;# 
   516   000FD6                     TMR0L           equ	4054	;# 
   517   000FD7                     TMR0H           equ	4055	;# 
   518   000FD8                     STATUS          equ	4056	;# 
   519   000FD9                     FSR2            equ	4057	;# 
   520   000FD9                     FSR2L           equ	4057	;# 
   521   000FDA                     FSR2H           equ	4058	;# 
   522   000FDB                     PLUSW2          equ	4059	;# 
   523   000FDC                     PREINC2         equ	4060	;# 
   524   000FDD                     POSTDEC2        equ	4061	;# 
   525   000FDE                     POSTINC2        equ	4062	;# 
   526   000FDF                     INDF2           equ	4063	;# 
   527   000FE0                     BSR             equ	4064	;# 
   528   000FE1                     FSR1            equ	4065	;# 
   529   000FE1                     FSR1L           equ	4065	;# 
   530   000FE2                     FSR1H           equ	4066	;# 
   531   000FE3                     PLUSW1          equ	4067	;# 
   532   000FE4                     PREINC1         equ	4068	;# 
   533   000FE5                     POSTDEC1        equ	4069	;# 
   534   000FE6                     POSTINC1        equ	4070	;# 
   535   000FE7                     INDF1           equ	4071	;# 
   536   000FE8                     WREG            equ	4072	;# 
   537   000FE9                     FSR0            equ	4073	;# 
   538   000FE9                     FSR0L           equ	4073	;# 
   539   000FEA                     FSR0H           equ	4074	;# 
   540   000FEB                     PLUSW0          equ	4075	;# 
   541   000FEC                     PREINC0         equ	4076	;# 
   542   000FED                     POSTDEC0        equ	4077	;# 
   543   000FEE                     POSTINC0        equ	4078	;# 
   544   000FEF                     INDF0           equ	4079	;# 
   545   000FF0                     INTCON3         equ	4080	;# 
   546   000FF1                     INTCON2         equ	4081	;# 
   547   000FF2                     INTCON          equ	4082	;# 
   548   000FF3                     PROD            equ	4083	;# 
   549   000FF3                     PRODL           equ	4083	;# 
   550   000FF4                     PRODH           equ	4084	;# 
   551   000FF5                     TABLAT          equ	4085	;# 
   552   000FF6                     TBLPTR          equ	4086	;# 
   553   000FF6                     TBLPTRL         equ	4086	;# 
   554   000FF7                     TBLPTRH         equ	4087	;# 
   555   000FF8                     TBLPTRU         equ	4088	;# 
   556   000FF9                     PCLAT           equ	4089	;# 
   557   000FF9                     PC              equ	4089	;# 
   558   000FF9                     PCL             equ	4089	;# 
   559   000FFA                     PCLATH          equ	4090	;# 
   560   000FFB                     PCLATU          equ	4091	;# 
   561   000FFC                     STKPTR          equ	4092	;# 
   562   000FFD                     TOS             equ	4093	;# 
   563   000FFD                     TOSL            equ	4093	;# 
   564   000FFE                     TOSH            equ	4094	;# 
   565   000FFF                     TOSU            equ	4095	;# 
   566   000F77                     SSPMSK          equ	3959	;# 
   567   000F78                     SLRCON          equ	3960	;# 
   568   000F79                     CM2CON1         equ	3961	;# 
   569   000F7A                     CM2CON0         equ	3962	;# 
   570   000F7B                     CM1CON0         equ	3963	;# 
   571   000F7C                     WPUB            equ	3964	;# 
   572   000F7D                     IOCB            equ	3965	;# 
   573   000F7E                     ANSEL           equ	3966	;# 
   574   000F7F                     ANSELH          equ	3967	;# 
   575   000F80                     PORTA           equ	3968	;# 
   576   000F81                     PORTB           equ	3969	;# 
   577   000F82                     PORTC           equ	3970	;# 
   578   000F83                     PORTD           equ	3971	;# 
   579   000F84                     PORTE           equ	3972	;# 
   580   000F89                     LATA            equ	3977	;# 
   581   000F8A                     LATB            equ	3978	;# 
   582   000F8B                     LATC            equ	3979	;# 
   583   000F8C                     LATD            equ	3980	;# 
   584   000F8D                     LATE            equ	3981	;# 
   585   000F92                     TRISA           equ	3986	;# 
   586   000F92                     DDRA            equ	3986	;# 
   587   000F93                     TRISB           equ	3987	;# 
   588   000F93                     DDRB            equ	3987	;# 
   589   000F94                     TRISC           equ	3988	;# 
   590   000F94                     DDRC            equ	3988	;# 
   591   000F95                     TRISD           equ	3989	;# 
   592   000F95                     DDRD            equ	3989	;# 
   593   000F96                     TRISE           equ	3990	;# 
   594   000F96                     DDRE            equ	3990	;# 
   595   000F9B                     OSCTUNE         equ	3995	;# 
   596   000F9D                     PIE1            equ	3997	;# 
   597   000F9E                     PIR1            equ	3998	;# 
   598   000F9F                     IPR1            equ	3999	;# 
   599   000FA0                     PIE2            equ	4000	;# 
   600   000FA1                     PIR2            equ	4001	;# 
   601   000FA2                     IPR2            equ	4002	;# 
   602   000FA6                     EECON1          equ	4006	;# 
   603   000FA7                     EECON2          equ	4007	;# 
   604   000FA8                     EEDATA          equ	4008	;# 
   605   000FA9                     EEADR           equ	4009	;# 
   606   000FAA                     EEADRH          equ	4010	;# 
   607   000FAB                     RCSTA           equ	4011	;# 
   608   000FAB                     RCSTA1          equ	4011	;# 
   609   000FAC                     TXSTA           equ	4012	;# 
   610   000FAC                     TXSTA1          equ	4012	;# 
   611   000FAD                     TXREG           equ	4013	;# 
   612   000FAD                     TXREG1          equ	4013	;# 
   613   000FAE                     RCREG           equ	4014	;# 
   614   000FAE                     RCREG1          equ	4014	;# 
   615   000FAF                     SPBRG           equ	4015	;# 
   616   000FAF                     SPBRG1          equ	4015	;# 
   617   000FB0                     SPBRGH          equ	4016	;# 
   618   000FB1                     T3CON           equ	4017	;# 
   619   000FB2                     TMR3            equ	4018	;# 
   620   000FB2                     TMR3L           equ	4018	;# 
   621   000FB3                     TMR3H           equ	4019	;# 
   622   000FB4                     CVRCON2         equ	4020	;# 
   623   000FB5                     CVRCON          equ	4021	;# 
   624   000FB6                     ECCP1AS         equ	4022	;# 
   625   000FB7                     PWM1CON         equ	4023	;# 
   626   000FB8                     BAUDCON         equ	4024	;# 
   627   000FB8                     BAUDCTL         equ	4024	;# 
   628   000FB9                     PSTRCON         equ	4025	;# 
   629   000FBA                     CCP2CON         equ	4026	;# 
   630   000FBB                     CCPR2           equ	4027	;# 
   631   000FBB                     CCPR2L          equ	4027	;# 
   632   000FBC                     CCPR2H          equ	4028	;# 
   633   000FBD                     CCP1CON         equ	4029	;# 
   634   000FBE                     CCPR1           equ	4030	;# 
   635   000FBE                     CCPR1L          equ	4030	;# 
   636   000FBF                     CCPR1H          equ	4031	;# 
   637   000FC0                     ADCON2          equ	4032	;# 
   638   000FC1                     ADCON1          equ	4033	;# 
   639   000FC2                     ADCON0          equ	4034	;# 
   640   000FC3                     ADRES           equ	4035	;# 
   641   000FC3                     ADRESL          equ	4035	;# 
   642   000FC4                     ADRESH          equ	4036	;# 
   643   000FC5                     SSPCON2         equ	4037	;# 
   644   000FC6                     SSPCON1         equ	4038	;# 
   645   000FC7                     SSPSTAT         equ	4039	;# 
   646   000FC8                     SSPADD          equ	4040	;# 
   647   000FC9                     SSPBUF          equ	4041	;# 
   648   000FCA                     T2CON           equ	4042	;# 
   649   000FCB                     PR2             equ	4043	;# 
   650   000FCB                     MEMCON          equ	4043	;# 
   651   000FCC                     TMR2            equ	4044	;# 
   652   000FCD                     T1CON           equ	4045	;# 
   653   000FCE                     TMR1            equ	4046	;# 
   654   000FCE                     TMR1L           equ	4046	;# 
   655   000FCF                     TMR1H           equ	4047	;# 
   656   000FD0                     RCON            equ	4048	;# 
   657   000FD1                     WDTCON          equ	4049	;# 
   658   000FD2                     HLVDCON         equ	4050	;# 
   659   000FD2                     LVDCON          equ	4050	;# 
   660   000FD3                     OSCCON          equ	4051	;# 
   661   000FD5                     T0CON           equ	4053	;# 
   662   000FD6                     TMR0            equ	4054	;# 
   663   000FD6                     TMR0L           equ	4054	;# 
   664   000FD7                     TMR0H           equ	4055	;# 
   665   000FD8                     STATUS          equ	4056	;# 
   666   000FD9                     FSR2            equ	4057	;# 
   667   000FD9                     FSR2L           equ	4057	;# 
   668   000FDA                     FSR2H           equ	4058	;# 
   669   000FDB                     PLUSW2          equ	4059	;# 
   670   000FDC                     PREINC2         equ	4060	;# 
   671   000FDD                     POSTDEC2        equ	4061	;# 
   672   000FDE                     POSTINC2        equ	4062	;# 
   673   000FDF                     INDF2           equ	4063	;# 
   674   000FE0                     BSR             equ	4064	;# 
   675   000FE1                     FSR1            equ	4065	;# 
   676   000FE1                     FSR1L           equ	4065	;# 
   677   000FE2                     FSR1H           equ	4066	;# 
   678   000FE3                     PLUSW1          equ	4067	;# 
   679   000FE4                     PREINC1         equ	4068	;# 
   680   000FE5                     POSTDEC1        equ	4069	;# 
   681   000FE6                     POSTINC1        equ	4070	;# 
   682   000FE7                     INDF1           equ	4071	;# 
   683   000FE8                     WREG            equ	4072	;# 
   684   000FE9                     FSR0            equ	4073	;# 
   685   000FE9                     FSR0L           equ	4073	;# 
   686   000FEA                     FSR0H           equ	4074	;# 
   687   000FEB                     PLUSW0          equ	4075	;# 
   688   000FEC                     PREINC0         equ	4076	;# 
   689   000FED                     POSTDEC0        equ	4077	;# 
   690   000FEE                     POSTINC0        equ	4078	;# 
   691   000FEF                     INDF0           equ	4079	;# 
   692   000FF0                     INTCON3         equ	4080	;# 
   693   000FF1                     INTCON2         equ	4081	;# 
   694   000FF2                     INTCON          equ	4082	;# 
   695   000FF3                     PROD            equ	4083	;# 
   696   000FF3                     PRODL           equ	4083	;# 
   697   000FF4                     PRODH           equ	4084	;# 
   698   000FF5                     TABLAT          equ	4085	;# 
   699   000FF6                     TBLPTR          equ	4086	;# 
   700   000FF6                     TBLPTRL         equ	4086	;# 
   701   000FF7                     TBLPTRH         equ	4087	;# 
   702   000FF8                     TBLPTRU         equ	4088	;# 
   703   000FF9                     PCLAT           equ	4089	;# 
   704   000FF9                     PC              equ	4089	;# 
   705   000FF9                     PCL             equ	4089	;# 
   706   000FFA                     PCLATH          equ	4090	;# 
   707   000FFB                     PCLATU          equ	4091	;# 
   708   000FFC                     STKPTR          equ	4092	;# 
   709   000FFD                     TOS             equ	4093	;# 
   710   000FFD                     TOSL            equ	4093	;# 
   711   000FFE                     TOSH            equ	4094	;# 
   712   000FFF                     TOSU            equ	4095	;# 
   713   000F77                     SSPMSK          equ	3959	;# 
   714   000F78                     SLRCON          equ	3960	;# 
   715   000F79                     CM2CON1         equ	3961	;# 
   716   000F7A                     CM2CON0         equ	3962	;# 
   717   000F7B                     CM1CON0         equ	3963	;# 
   718   000F7C                     WPUB            equ	3964	;# 
   719   000F7D                     IOCB            equ	3965	;# 
   720   000F7E                     ANSEL           equ	3966	;# 
   721   000F7F                     ANSELH          equ	3967	;# 
   722   000F80                     PORTA           equ	3968	;# 
   723   000F81                     PORTB           equ	3969	;# 
   724   000F82                     PORTC           equ	3970	;# 
   725   000F83                     PORTD           equ	3971	;# 
   726   000F84                     PORTE           equ	3972	;# 
   727   000F89                     LATA            equ	3977	;# 
   728   000F8A                     LATB            equ	3978	;# 
   729   000F8B                     LATC            equ	3979	;# 
   730   000F8C                     LATD            equ	3980	;# 
   731   000F8D                     LATE            equ	3981	;# 
   732   000F92                     TRISA           equ	3986	;# 
   733   000F92                     DDRA            equ	3986	;# 
   734   000F93                     TRISB           equ	3987	;# 
   735   000F93                     DDRB            equ	3987	;# 
   736   000F94                     TRISC           equ	3988	;# 
   737   000F94                     DDRC            equ	3988	;# 
   738   000F95                     TRISD           equ	3989	;# 
   739   000F95                     DDRD            equ	3989	;# 
   740   000F96                     TRISE           equ	3990	;# 
   741   000F96                     DDRE            equ	3990	;# 
   742   000F9B                     OSCTUNE         equ	3995	;# 
   743   000F9D                     PIE1            equ	3997	;# 
   744   000F9E                     PIR1            equ	3998	;# 
   745   000F9F                     IPR1            equ	3999	;# 
   746   000FA0                     PIE2            equ	4000	;# 
   747   000FA1                     PIR2            equ	4001	;# 
   748   000FA2                     IPR2            equ	4002	;# 
   749   000FA6                     EECON1          equ	4006	;# 
   750   000FA7                     EECON2          equ	4007	;# 
   751   000FA8                     EEDATA          equ	4008	;# 
   752   000FA9                     EEADR           equ	4009	;# 
   753   000FAA                     EEADRH          equ	4010	;# 
   754   000FAB                     RCSTA           equ	4011	;# 
   755   000FAB                     RCSTA1          equ	4011	;# 
   756   000FAC                     TXSTA           equ	4012	;# 
   757   000FAC                     TXSTA1          equ	4012	;# 
   758   000FAD                     TXREG           equ	4013	;# 
   759   000FAD                     TXREG1          equ	4013	;# 
   760   000FAE                     RCREG           equ	4014	;# 
   761   000FAE                     RCREG1          equ	4014	;# 
   762   000FAF                     SPBRG           equ	4015	;# 
   763   000FAF                     SPBRG1          equ	4015	;# 
   764   000FB0                     SPBRGH          equ	4016	;# 
   765   000FB1                     T3CON           equ	4017	;# 
   766   000FB2                     TMR3            equ	4018	;# 
   767   000FB2                     TMR3L           equ	4018	;# 
   768   000FB3                     TMR3H           equ	4019	;# 
   769   000FB4                     CVRCON2         equ	4020	;# 
   770   000FB5                     CVRCON          equ	4021	;# 
   771   000FB6                     ECCP1AS         equ	4022	;# 
   772   000FB7                     PWM1CON         equ	4023	;# 
   773   000FB8                     BAUDCON         equ	4024	;# 
   774   000FB8                     BAUDCTL         equ	4024	;# 
   775   000FB9                     PSTRCON         equ	4025	;# 
   776   000FBA                     CCP2CON         equ	4026	;# 
   777   000FBB                     CCPR2           equ	4027	;# 
   778   000FBB                     CCPR2L          equ	4027	;# 
   779   000FBC                     CCPR2H          equ	4028	;# 
   780   000FBD                     CCP1CON         equ	4029	;# 
   781   000FBE                     CCPR1           equ	4030	;# 
   782   000FBE                     CCPR1L          equ	4030	;# 
   783   000FBF                     CCPR1H          equ	4031	;# 
   784   000FC0                     ADCON2          equ	4032	;# 
   785   000FC1                     ADCON1          equ	4033	;# 
   786   000FC2                     ADCON0          equ	4034	;# 
   787   000FC3                     ADRES           equ	4035	;# 
   788   000FC3                     ADRESL          equ	4035	;# 
   789   000FC4                     ADRESH          equ	4036	;# 
   790   000FC5                     SSPCON2         equ	4037	;# 
   791   000FC6                     SSPCON1         equ	4038	;# 
   792   000FC7                     SSPSTAT         equ	4039	;# 
   793   000FC8                     SSPADD          equ	4040	;# 
   794   000FC9                     SSPBUF          equ	4041	;# 
   795   000FCA                     T2CON           equ	4042	;# 
   796   000FCB                     PR2             equ	4043	;# 
   797   000FCB                     MEMCON          equ	4043	;# 
   798   000FCC                     TMR2            equ	4044	;# 
   799   000FCD                     T1CON           equ	4045	;# 
   800   000FCE                     TMR1            equ	4046	;# 
   801   000FCE                     TMR1L           equ	4046	;# 
   802   000FCF                     TMR1H           equ	4047	;# 
   803   000FD0                     RCON            equ	4048	;# 
   804   000FD1                     WDTCON          equ	4049	;# 
   805   000FD2                     HLVDCON         equ	4050	;# 
   806   000FD2                     LVDCON          equ	4050	;# 
   807   000FD3                     OSCCON          equ	4051	;# 
   808   000FD5                     T0CON           equ	4053	;# 
   809   000FD6                     TMR0            equ	4054	;# 
   810   000FD6                     TMR0L           equ	4054	;# 
   811   000FD7                     TMR0H           equ	4055	;# 
   812   000FD8                     STATUS          equ	4056	;# 
   813   000FD9                     FSR2            equ	4057	;# 
   814   000FD9                     FSR2L           equ	4057	;# 
   815   000FDA                     FSR2H           equ	4058	;# 
   816   000FDB                     PLUSW2          equ	4059	;# 
   817   000FDC                     PREINC2         equ	4060	;# 
   818   000FDD                     POSTDEC2        equ	4061	;# 
   819   000FDE                     POSTINC2        equ	4062	;# 
   820   000FDF                     INDF2           equ	4063	;# 
   821   000FE0                     BSR             equ	4064	;# 
   822   000FE1                     FSR1            equ	4065	;# 
   823   000FE1                     FSR1L           equ	4065	;# 
   824   000FE2                     FSR1H           equ	4066	;# 
   825   000FE3                     PLUSW1          equ	4067	;# 
   826   000FE4                     PREINC1         equ	4068	;# 
   827   000FE5                     POSTDEC1        equ	4069	;# 
   828   000FE6                     POSTINC1        equ	4070	;# 
   829   000FE7                     INDF1           equ	4071	;# 
   830   000FE8                     WREG            equ	4072	;# 
   831   000FE9                     FSR0            equ	4073	;# 
   832   000FE9                     FSR0L           equ	4073	;# 
   833   000FEA                     FSR0H           equ	4074	;# 
   834   000FEB                     PLUSW0          equ	4075	;# 
   835   000FEC                     PREINC0         equ	4076	;# 
   836   000FED                     POSTDEC0        equ	4077	;# 
   837   000FEE                     POSTINC0        equ	4078	;# 
   838   000FEF                     INDF0           equ	4079	;# 
   839   000FF0                     INTCON3         equ	4080	;# 
   840   000FF1                     INTCON2         equ	4081	;# 
   841   000FF2                     INTCON          equ	4082	;# 
   842   000FF3                     PROD            equ	4083	;# 
   843   000FF3                     PRODL           equ	4083	;# 
   844   000FF4                     PRODH           equ	4084	;# 
   845   000FF5                     TABLAT          equ	4085	;# 
   846   000FF6                     TBLPTR          equ	4086	;# 
   847   000FF6                     TBLPTRL         equ	4086	;# 
   848   000FF7                     TBLPTRH         equ	4087	;# 
   849   000FF8                     TBLPTRU         equ	4088	;# 
   850   000FF9                     PCLAT           equ	4089	;# 
   851   000FF9                     PC              equ	4089	;# 
   852   000FF9                     PCL             equ	4089	;# 
   853   000FFA                     PCLATH          equ	4090	;# 
   854   000FFB                     PCLATU          equ	4091	;# 
   855   000FFC                     STKPTR          equ	4092	;# 
   856   000FFD                     TOS             equ	4093	;# 
   857   000FFD                     TOSL            equ	4093	;# 
   858   000FFE                     TOSH            equ	4094	;# 
   859   000FFF                     TOSU            equ	4095	;# 
   860   000F77                     SSPMSK          equ	3959	;# 
   861   000F78                     SLRCON          equ	3960	;# 
   862   000F79                     CM2CON1         equ	3961	;# 
   863   000F7A                     CM2CON0         equ	3962	;# 
   864   000F7B                     CM1CON0         equ	3963	;# 
   865   000F7C                     WPUB            equ	3964	;# 
   866   000F7D                     IOCB            equ	3965	;# 
   867   000F7E                     ANSEL           equ	3966	;# 
   868   000F7F                     ANSELH          equ	3967	;# 
   869   000F80                     PORTA           equ	3968	;# 
   870   000F81                     PORTB           equ	3969	;# 
   871   000F82                     PORTC           equ	3970	;# 
   872   000F83                     PORTD           equ	3971	;# 
   873   000F84                     PORTE           equ	3972	;# 
   874   000F89                     LATA            equ	3977	;# 
   875   000F8A                     LATB            equ	3978	;# 
   876   000F8B                     LATC            equ	3979	;# 
   877   000F8C                     LATD            equ	3980	;# 
   878   000F8D                     LATE            equ	3981	;# 
   879   000F92                     TRISA           equ	3986	;# 
   880   000F92                     DDRA            equ	3986	;# 
   881   000F93                     TRISB           equ	3987	;# 
   882   000F93                     DDRB            equ	3987	;# 
   883   000F94                     TRISC           equ	3988	;# 
   884   000F94                     DDRC            equ	3988	;# 
   885   000F95                     TRISD           equ	3989	;# 
   886   000F95                     DDRD            equ	3989	;# 
   887   000F96                     TRISE           equ	3990	;# 
   888   000F96                     DDRE            equ	3990	;# 
   889   000F9B                     OSCTUNE         equ	3995	;# 
   890   000F9D                     PIE1            equ	3997	;# 
   891   000F9E                     PIR1            equ	3998	;# 
   892   000F9F                     IPR1            equ	3999	;# 
   893   000FA0                     PIE2            equ	4000	;# 
   894   000FA1                     PIR2            equ	4001	;# 
   895   000FA2                     IPR2            equ	4002	;# 
   896   000FA6                     EECON1          equ	4006	;# 
   897   000FA7                     EECON2          equ	4007	;# 
   898   000FA8                     EEDATA          equ	4008	;# 
   899   000FA9                     EEADR           equ	4009	;# 
   900   000FAA                     EEADRH          equ	4010	;# 
   901   000FAB                     RCSTA           equ	4011	;# 
   902   000FAB                     RCSTA1          equ	4011	;# 
   903   000FAC                     TXSTA           equ	4012	;# 
   904   000FAC                     TXSTA1          equ	4012	;# 
   905   000FAD                     TXREG           equ	4013	;# 
   906   000FAD                     TXREG1          equ	4013	;# 
   907   000FAE                     RCREG           equ	4014	;# 
   908   000FAE                     RCREG1          equ	4014	;# 
   909   000FAF                     SPBRG           equ	4015	;# 
   910   000FAF                     SPBRG1          equ	4015	;# 
   911   000FB0                     SPBRGH          equ	4016	;# 
   912   000FB1                     T3CON           equ	4017	;# 
   913   000FB2                     TMR3            equ	4018	;# 
   914   000FB2                     TMR3L           equ	4018	;# 
   915   000FB3                     TMR3H           equ	4019	;# 
   916   000FB4                     CVRCON2         equ	4020	;# 
   917   000FB5                     CVRCON          equ	4021	;# 
   918   000FB6                     ECCP1AS         equ	4022	;# 
   919   000FB7                     PWM1CON         equ	4023	;# 
   920   000FB8                     BAUDCON         equ	4024	;# 
   921   000FB8                     BAUDCTL         equ	4024	;# 
   922   000FB9                     PSTRCON         equ	4025	;# 
   923   000FBA                     CCP2CON         equ	4026	;# 
   924   000FBB                     CCPR2           equ	4027	;# 
   925   000FBB                     CCPR2L          equ	4027	;# 
   926   000FBC                     CCPR2H          equ	4028	;# 
   927   000FBD                     CCP1CON         equ	4029	;# 
   928   000FBE                     CCPR1           equ	4030	;# 
   929   000FBE                     CCPR1L          equ	4030	;# 
   930   000FBF                     CCPR1H          equ	4031	;# 
   931   000FC0                     ADCON2          equ	4032	;# 
   932   000FC1                     ADCON1          equ	4033	;# 
   933   000FC2                     ADCON0          equ	4034	;# 
   934   000FC3                     ADRES           equ	4035	;# 
   935   000FC3                     ADRESL          equ	4035	;# 
   936   000FC4                     ADRESH          equ	4036	;# 
   937   000FC5                     SSPCON2         equ	4037	;# 
   938   000FC6                     SSPCON1         equ	4038	;# 
   939   000FC7                     SSPSTAT         equ	4039	;# 
   940   000FC8                     SSPADD          equ	4040	;# 
   941   000FC9                     SSPBUF          equ	4041	;# 
   942   000FCA                     T2CON           equ	4042	;# 
   943   000FCB                     PR2             equ	4043	;# 
   944   000FCB                     MEMCON          equ	4043	;# 
   945   000FCC                     TMR2            equ	4044	;# 
   946   000FCD                     T1CON           equ	4045	;# 
   947   000FCE                     TMR1            equ	4046	;# 
   948   000FCE                     TMR1L           equ	4046	;# 
   949   000FCF                     TMR1H           equ	4047	;# 
   950   000FD0                     RCON            equ	4048	;# 
   951   000FD1                     WDTCON          equ	4049	;# 
   952   000FD2                     HLVDCON         equ	4050	;# 
   953   000FD2                     LVDCON          equ	4050	;# 
   954   000FD3                     OSCCON          equ	4051	;# 
   955   000FD5                     T0CON           equ	4053	;# 
   956   000FD6                     TMR0            equ	4054	;# 
   957   000FD6                     TMR0L           equ	4054	;# 
   958   000FD7                     TMR0H           equ	4055	;# 
   959   000FD8                     STATUS          equ	4056	;# 
   960   000FD9                     FSR2            equ	4057	;# 
   961   000FD9                     FSR2L           equ	4057	;# 
   962   000FDA                     FSR2H           equ	4058	;# 
   963   000FDB                     PLUSW2          equ	4059	;# 
   964   000FDC                     PREINC2         equ	4060	;# 
   965   000FDD                     POSTDEC2        equ	4061	;# 
   966   000FDE                     POSTINC2        equ	4062	;# 
   967   000FDF                     INDF2           equ	4063	;# 
   968   000FE0                     BSR             equ	4064	;# 
   969   000FE1                     FSR1            equ	4065	;# 
   970   000FE1                     FSR1L           equ	4065	;# 
   971   000FE2                     FSR1H           equ	4066	;# 
   972   000FE3                     PLUSW1          equ	4067	;# 
   973   000FE4                     PREINC1         equ	4068	;# 
   974   000FE5                     POSTDEC1        equ	4069	;# 
   975   000FE6                     POSTINC1        equ	4070	;# 
   976   000FE7                     INDF1           equ	4071	;# 
   977   000FE8                     WREG            equ	4072	;# 
   978   000FE9                     FSR0            equ	4073	;# 
   979   000FE9                     FSR0L           equ	4073	;# 
   980   000FEA                     FSR0H           equ	4074	;# 
   981   000FEB                     PLUSW0          equ	4075	;# 
   982   000FEC                     PREINC0         equ	4076	;# 
   983   000FED                     POSTDEC0        equ	4077	;# 
   984   000FEE                     POSTINC0        equ	4078	;# 
   985   000FEF                     INDF0           equ	4079	;# 
   986   000FF0                     INTCON3         equ	4080	;# 
   987   000FF1                     INTCON2         equ	4081	;# 
   988   000FF2                     INTCON          equ	4082	;# 
   989   000FF3                     PROD            equ	4083	;# 
   990   000FF3                     PRODL           equ	4083	;# 
   991   000FF4                     PRODH           equ	4084	;# 
   992   000FF5                     TABLAT          equ	4085	;# 
   993   000FF6                     TBLPTR          equ	4086	;# 
   994   000FF6                     TBLPTRL         equ	4086	;# 
   995   000FF7                     TBLPTRH         equ	4087	;# 
   996   000FF8                     TBLPTRU         equ	4088	;# 
   997   000FF9                     PCLAT           equ	4089	;# 
   998   000FF9                     PC              equ	4089	;# 
   999   000FF9                     PCL             equ	4089	;# 
  1000   000FFA                     PCLATH          equ	4090	;# 
  1001   000FFB                     PCLATU          equ	4091	;# 
  1002   000FFC                     STKPTR          equ	4092	;# 
  1003   000FFD                     TOS             equ	4093	;# 
  1004   000FFD                     TOSL            equ	4093	;# 
  1005   000FFE                     TOSH            equ	4094	;# 
  1006   000FFF                     TOSU            equ	4095	;# 
  1007   000F77                     SSPMSK          equ	3959	;# 
  1008   000F78                     SLRCON          equ	3960	;# 
  1009   000F79                     CM2CON1         equ	3961	;# 
  1010   000F7A                     CM2CON0         equ	3962	;# 
  1011   000F7B                     CM1CON0         equ	3963	;# 
  1012   000F7C                     WPUB            equ	3964	;# 
  1013   000F7D                     IOCB            equ	3965	;# 
  1014   000F7E                     ANSEL           equ	3966	;# 
  1015   000F7F                     ANSELH          equ	3967	;# 
  1016   000F80                     PORTA           equ	3968	;# 
  1017   000F81                     PORTB           equ	3969	;# 
  1018   000F82                     PORTC           equ	3970	;# 
  1019   000F83                     PORTD           equ	3971	;# 
  1020   000F84                     PORTE           equ	3972	;# 
  1021   000F89                     LATA            equ	3977	;# 
  1022   000F8A                     LATB            equ	3978	;# 
  1023   000F8B                     LATC            equ	3979	;# 
  1024   000F8C                     LATD            equ	3980	;# 
  1025   000F8D                     LATE            equ	3981	;# 
  1026   000F92                     TRISA           equ	3986	;# 
  1027   000F92                     DDRA            equ	3986	;# 
  1028   000F93                     TRISB           equ	3987	;# 
  1029   000F93                     DDRB            equ	3987	;# 
  1030   000F94                     TRISC           equ	3988	;# 
  1031   000F94                     DDRC            equ	3988	;# 
  1032   000F95                     TRISD           equ	3989	;# 
  1033   000F95                     DDRD            equ	3989	;# 
  1034   000F96                     TRISE           equ	3990	;# 
  1035   000F96                     DDRE            equ	3990	;# 
  1036   000F9B                     OSCTUNE         equ	3995	;# 
  1037   000F9D                     PIE1            equ	3997	;# 
  1038   000F9E                     PIR1            equ	3998	;# 
  1039   000F9F                     IPR1            equ	3999	;# 
  1040   000FA0                     PIE2            equ	4000	;# 
  1041   000FA1                     PIR2            equ	4001	;# 
  1042   000FA2                     IPR2            equ	4002	;# 
  1043   000FA6                     EECON1          equ	4006	;# 
  1044   000FA7                     EECON2          equ	4007	;# 
  1045   000FA8                     EEDATA          equ	4008	;# 
  1046   000FA9                     EEADR           equ	4009	;# 
  1047   000FAA                     EEADRH          equ	4010	;# 
  1048   000FAB                     RCSTA           equ	4011	;# 
  1049   000FAB                     RCSTA1          equ	4011	;# 
  1050   000FAC                     TXSTA           equ	4012	;# 
  1051   000FAC                     TXSTA1          equ	4012	;# 
  1052   000FAD                     TXREG           equ	4013	;# 
  1053   000FAD                     TXREG1          equ	4013	;# 
  1054   000FAE                     RCREG           equ	4014	;# 
  1055   000FAE                     RCREG1          equ	4014	;# 
  1056   000FAF                     SPBRG           equ	4015	;# 
  1057   000FAF                     SPBRG1          equ	4015	;# 
  1058   000FB0                     SPBRGH          equ	4016	;# 
  1059   000FB1                     T3CON           equ	4017	;# 
  1060   000FB2                     TMR3            equ	4018	;# 
  1061   000FB2                     TMR3L           equ	4018	;# 
  1062   000FB3                     TMR3H           equ	4019	;# 
  1063   000FB4                     CVRCON2         equ	4020	;# 
  1064   000FB5                     CVRCON          equ	4021	;# 
  1065   000FB6                     ECCP1AS         equ	4022	;# 
  1066   000FB7                     PWM1CON         equ	4023	;# 
  1067   000FB8                     BAUDCON         equ	4024	;# 
  1068   000FB8                     BAUDCTL         equ	4024	;# 
  1069   000FB9                     PSTRCON         equ	4025	;# 
  1070   000FBA                     CCP2CON         equ	4026	;# 
  1071   000FBB                     CCPR2           equ	4027	;# 
  1072   000FBB                     CCPR2L          equ	4027	;# 
  1073   000FBC                     CCPR2H          equ	4028	;# 
  1074   000FBD                     CCP1CON         equ	4029	;# 
  1075   000FBE                     CCPR1           equ	4030	;# 
  1076   000FBE                     CCPR1L          equ	4030	;# 
  1077   000FBF                     CCPR1H          equ	4031	;# 
  1078   000FC0                     ADCON2          equ	4032	;# 
  1079   000FC1                     ADCON1          equ	4033	;# 
  1080   000FC2                     ADCON0          equ	4034	;# 
  1081   000FC3                     ADRES           equ	4035	;# 
  1082   000FC3                     ADRESL          equ	4035	;# 
  1083   000FC4                     ADRESH          equ	4036	;# 
  1084   000FC5                     SSPCON2         equ	4037	;# 
  1085   000FC6                     SSPCON1         equ	4038	;# 
  1086   000FC7                     SSPSTAT         equ	4039	;# 
  1087   000FC8                     SSPADD          equ	4040	;# 
  1088   000FC9                     SSPBUF          equ	4041	;# 
  1089   000FCA                     T2CON           equ	4042	;# 
  1090   000FCB                     PR2             equ	4043	;# 
  1091   000FCB                     MEMCON          equ	4043	;# 
  1092   000FCC                     TMR2            equ	4044	;# 
  1093   000FCD                     T1CON           equ	4045	;# 
  1094   000FCE                     TMR1            equ	4046	;# 
  1095   000FCE                     TMR1L           equ	4046	;# 
  1096   000FCF                     TMR1H           equ	4047	;# 
  1097   000FD0                     RCON            equ	4048	;# 
  1098   000FD1                     WDTCON          equ	4049	;# 
  1099   000FD2                     HLVDCON         equ	4050	;# 
  1100   000FD2                     LVDCON          equ	4050	;# 
  1101   000FD3                     OSCCON          equ	4051	;# 
  1102   000FD5                     T0CON           equ	4053	;# 
  1103   000FD6                     TMR0            equ	4054	;# 
  1104   000FD6                     TMR0L           equ	4054	;# 
  1105   000FD7                     TMR0H           equ	4055	;# 
  1106   000FD8                     STATUS          equ	4056	;# 
  1107   000FD9                     FSR2            equ	4057	;# 
  1108   000FD9                     FSR2L           equ	4057	;# 
  1109   000FDA                     FSR2H           equ	4058	;# 
  1110   000FDB                     PLUSW2          equ	4059	;# 
  1111   000FDC                     PREINC2         equ	4060	;# 
  1112   000FDD                     POSTDEC2        equ	4061	;# 
  1113   000FDE                     POSTINC2        equ	4062	;# 
  1114   000FDF                     INDF2           equ	4063	;# 
  1115   000FE0                     BSR             equ	4064	;# 
  1116   000FE1                     FSR1            equ	4065	;# 
  1117   000FE1                     FSR1L           equ	4065	;# 
  1118   000FE2                     FSR1H           equ	4066	;# 
  1119   000FE3                     PLUSW1          equ	4067	;# 
  1120   000FE4                     PREINC1         equ	4068	;# 
  1121   000FE5                     POSTDEC1        equ	4069	;# 
  1122   000FE6                     POSTINC1        equ	4070	;# 
  1123   000FE7                     INDF1           equ	4071	;# 
  1124   000FE8                     WREG            equ	4072	;# 
  1125   000FE9                     FSR0            equ	4073	;# 
  1126   000FE9                     FSR0L           equ	4073	;# 
  1127   000FEA                     FSR0H           equ	4074	;# 
  1128   000FEB                     PLUSW0          equ	4075	;# 
  1129   000FEC                     PREINC0         equ	4076	;# 
  1130   000FED                     POSTDEC0        equ	4077	;# 
  1131   000FEE                     POSTINC0        equ	4078	;# 
  1132   000FEF                     INDF0           equ	4079	;# 
  1133   000FF0                     INTCON3         equ	4080	;# 
  1134   000FF1                     INTCON2         equ	4081	;# 
  1135   000FF2                     INTCON          equ	4082	;# 
  1136   000FF3                     PROD            equ	4083	;# 
  1137   000FF3                     PRODL           equ	4083	;# 
  1138   000FF4                     PRODH           equ	4084	;# 
  1139   000FF5                     TABLAT          equ	4085	;# 
  1140   000FF6                     TBLPTR          equ	4086	;# 
  1141   000FF6                     TBLPTRL         equ	4086	;# 
  1142   000FF7                     TBLPTRH         equ	4087	;# 
  1143   000FF8                     TBLPTRU         equ	4088	;# 
  1144   000FF9                     PCLAT           equ	4089	;# 
  1145   000FF9                     PC              equ	4089	;# 
  1146   000FF9                     PCL             equ	4089	;# 
  1147   000FFA                     PCLATH          equ	4090	;# 
  1148   000FFB                     PCLATU          equ	4091	;# 
  1149   000FFC                     STKPTR          equ	4092	;# 
  1150   000FFD                     TOS             equ	4093	;# 
  1151   000FFD                     TOSL            equ	4093	;# 
  1152   000FFE                     TOSH            equ	4094	;# 
  1153   000FFF                     TOSU            equ	4095	;# 
  1154   000F77                     SSPMSK          equ	3959	;# 
  1155   000F78                     SLRCON          equ	3960	;# 
  1156   000F79                     CM2CON1         equ	3961	;# 
  1157   000F7A                     CM2CON0         equ	3962	;# 
  1158   000F7B                     CM1CON0         equ	3963	;# 
  1159   000F7C                     WPUB            equ	3964	;# 
  1160   000F7D                     IOCB            equ	3965	;# 
  1161   000F7E                     ANSEL           equ	3966	;# 
  1162   000F7F                     ANSELH          equ	3967	;# 
  1163   000F80                     PORTA           equ	3968	;# 
  1164   000F81                     PORTB           equ	3969	;# 
  1165   000F82                     PORTC           equ	3970	;# 
  1166   000F83                     PORTD           equ	3971	;# 
  1167   000F84                     PORTE           equ	3972	;# 
  1168   000F89                     LATA            equ	3977	;# 
  1169   000F8A                     LATB            equ	3978	;# 
  1170   000F8B                     LATC            equ	3979	;# 
  1171   000F8C                     LATD            equ	3980	;# 
  1172   000F8D                     LATE            equ	3981	;# 
  1173   000F92                     TRISA           equ	3986	;# 
  1174   000F92                     DDRA            equ	3986	;# 
  1175   000F93                     TRISB           equ	3987	;# 
  1176   000F93                     DDRB            equ	3987	;# 
  1177   000F94                     TRISC           equ	3988	;# 
  1178   000F94                     DDRC            equ	3988	;# 
  1179   000F95                     TRISD           equ	3989	;# 
  1180   000F95                     DDRD            equ	3989	;# 
  1181   000F96                     TRISE           equ	3990	;# 
  1182   000F96                     DDRE            equ	3990	;# 
  1183   000F9B                     OSCTUNE         equ	3995	;# 
  1184   000F9D                     PIE1            equ	3997	;# 
  1185   000F9E                     PIR1            equ	3998	;# 
  1186   000F9F                     IPR1            equ	3999	;# 
  1187   000FA0                     PIE2            equ	4000	;# 
  1188   000FA1                     PIR2            equ	4001	;# 
  1189   000FA2                     IPR2            equ	4002	;# 
  1190   000FA6                     EECON1          equ	4006	;# 
  1191   000FA7                     EECON2          equ	4007	;# 
  1192   000FA8                     EEDATA          equ	4008	;# 
  1193   000FA9                     EEADR           equ	4009	;# 
  1194   000FAA                     EEADRH          equ	4010	;# 
  1195   000FAB                     RCSTA           equ	4011	;# 
  1196   000FAB                     RCSTA1          equ	4011	;# 
  1197   000FAC                     TXSTA           equ	4012	;# 
  1198   000FAC                     TXSTA1          equ	4012	;# 
  1199   000FAD                     TXREG           equ	4013	;# 
  1200   000FAD                     TXREG1          equ	4013	;# 
  1201   000FAE                     RCREG           equ	4014	;# 
  1202   000FAE                     RCREG1          equ	4014	;# 
  1203   000FAF                     SPBRG           equ	4015	;# 
  1204   000FAF                     SPBRG1          equ	4015	;# 
  1205   000FB0                     SPBRGH          equ	4016	;# 
  1206   000FB1                     T3CON           equ	4017	;# 
  1207   000FB2                     TMR3            equ	4018	;# 
  1208   000FB2                     TMR3L           equ	4018	;# 
  1209   000FB3                     TMR3H           equ	4019	;# 
  1210   000FB4                     CVRCON2         equ	4020	;# 
  1211   000FB5                     CVRCON          equ	4021	;# 
  1212   000FB6                     ECCP1AS         equ	4022	;# 
  1213   000FB7                     PWM1CON         equ	4023	;# 
  1214   000FB8                     BAUDCON         equ	4024	;# 
  1215   000FB8                     BAUDCTL         equ	4024	;# 
  1216   000FB9                     PSTRCON         equ	4025	;# 
  1217   000FBA                     CCP2CON         equ	4026	;# 
  1218   000FBB                     CCPR2           equ	4027	;# 
  1219   000FBB                     CCPR2L          equ	4027	;# 
  1220   000FBC                     CCPR2H          equ	4028	;# 
  1221   000FBD                     CCP1CON         equ	4029	;# 
  1222   000FBE                     CCPR1           equ	4030	;# 
  1223   000FBE                     CCPR1L          equ	4030	;# 
  1224   000FBF                     CCPR1H          equ	4031	;# 
  1225   000FC0                     ADCON2          equ	4032	;# 
  1226   000FC1                     ADCON1          equ	4033	;# 
  1227   000FC2                     ADCON0          equ	4034	;# 
  1228   000FC3                     ADRES           equ	4035	;# 
  1229   000FC3                     ADRESL          equ	4035	;# 
  1230   000FC4                     ADRESH          equ	4036	;# 
  1231   000FC5                     SSPCON2         equ	4037	;# 
  1232   000FC6                     SSPCON1         equ	4038	;# 
  1233   000FC7                     SSPSTAT         equ	4039	;# 
  1234   000FC8                     SSPADD          equ	4040	;# 
  1235   000FC9                     SSPBUF          equ	4041	;# 
  1236   000FCA                     T2CON           equ	4042	;# 
  1237   000FCB                     PR2             equ	4043	;# 
  1238   000FCB                     MEMCON          equ	4043	;# 
  1239   000FCC                     TMR2            equ	4044	;# 
  1240   000FCD                     T1CON           equ	4045	;# 
  1241   000FCE                     TMR1            equ	4046	;# 
  1242   000FCE                     TMR1L           equ	4046	;# 
  1243   000FCF                     TMR1H           equ	4047	;# 
  1244   000FD0                     RCON            equ	4048	;# 
  1245   000FD1                     WDTCON          equ	4049	;# 
  1246   000FD2                     HLVDCON         equ	4050	;# 
  1247   000FD2                     LVDCON          equ	4050	;# 
  1248   000FD3                     OSCCON          equ	4051	;# 
  1249   000FD5                     T0CON           equ	4053	;# 
  1250   000FD6                     TMR0            equ	4054	;# 
  1251   000FD6                     TMR0L           equ	4054	;# 
  1252   000FD7                     TMR0H           equ	4055	;# 
  1253   000FD8                     STATUS          equ	4056	;# 
  1254   000FD9                     FSR2            equ	4057	;# 
  1255   000FD9                     FSR2L           equ	4057	;# 
  1256   000FDA                     FSR2H           equ	4058	;# 
  1257   000FDB                     PLUSW2          equ	4059	;# 
  1258   000FDC                     PREINC2         equ	4060	;# 
  1259   000FDD                     POSTDEC2        equ	4061	;# 
  1260   000FDE                     POSTINC2        equ	4062	;# 
  1261   000FDF                     INDF2           equ	4063	;# 
  1262   000FE0                     BSR             equ	4064	;# 
  1263   000FE1                     FSR1            equ	4065	;# 
  1264   000FE1                     FSR1L           equ	4065	;# 
  1265   000FE2                     FSR1H           equ	4066	;# 
  1266   000FE3                     PLUSW1          equ	4067	;# 
  1267   000FE4                     PREINC1         equ	4068	;# 
  1268   000FE5                     POSTDEC1        equ	4069	;# 
  1269   000FE6                     POSTINC1        equ	4070	;# 
  1270   000FE7                     INDF1           equ	4071	;# 
  1271   000FE8                     WREG            equ	4072	;# 
  1272   000FE9                     FSR0            equ	4073	;# 
  1273   000FE9                     FSR0L           equ	4073	;# 
  1274   000FEA                     FSR0H           equ	4074	;# 
  1275   000FEB                     PLUSW0          equ	4075	;# 
  1276   000FEC                     PREINC0         equ	4076	;# 
  1277   000FED                     POSTDEC0        equ	4077	;# 
  1278   000FEE                     POSTINC0        equ	4078	;# 
  1279   000FEF                     INDF0           equ	4079	;# 
  1280   000FF0                     INTCON3         equ	4080	;# 
  1281   000FF1                     INTCON2         equ	4081	;# 
  1282   000FF2                     INTCON          equ	4082	;# 
  1283   000FF3                     PROD            equ	4083	;# 
  1284   000FF3                     PRODL           equ	4083	;# 
  1285   000FF4                     PRODH           equ	4084	;# 
  1286   000FF5                     TABLAT          equ	4085	;# 
  1287   000FF6                     TBLPTR          equ	4086	;# 
  1288   000FF6                     TBLPTRL         equ	4086	;# 
  1289   000FF7                     TBLPTRH         equ	4087	;# 
  1290   000FF8                     TBLPTRU         equ	4088	;# 
  1291   000FF9                     PCLAT           equ	4089	;# 
  1292   000FF9                     PC              equ	4089	;# 
  1293   000FF9                     PCL             equ	4089	;# 
  1294   000FFA                     PCLATH          equ	4090	;# 
  1295   000FFB                     PCLATU          equ	4091	;# 
  1296   000FFC                     STKPTR          equ	4092	;# 
  1297   000FFD                     TOS             equ	4093	;# 
  1298   000FFD                     TOSL            equ	4093	;# 
  1299   000FFE                     TOSH            equ	4094	;# 
  1300   000FFF                     TOSU            equ	4095	;# 
  1301                           
  1302                           	psect	smallconst
  1303   001000                     __psmallconst:
  1304                           	callstack 0
  1305   001000  00                 	db	0
  1306   001001                     _default_security_key:
  1307                           	callstack 0
  1308   001001  00                 	db	0
  1309   001002  10                 	db	16
  1310   001003  25                 	db	37
  1311   001004  37                 	db	55
  1312   001005  04                 	db	4
  1313   001006  55                 	db	85
  1314   001007  06                 	db	6
  1315   001008  79                 	db	121
  1316   001009  08                 	db	8
  1317   00100A  09                 	db	9
  1318   00100B  10                 	db	16
  1319   00100C  11                 	db	17
  1320   00100D  12                 	db	18
  1321   00100E  13                 	db	19
  1322   00100F  14                 	db	20
  1323   001010  15                 	db	21
  1324   001011                     __end_of_default_security_key:
  1325                           	callstack 0
  1326   001011                     _default_mac_address:
  1327                           	callstack 0
  1328   001011  11                 	db	17
  1329   001012  28                 	db	40
  1330   001013  35                 	db	53
  1331   001014  44                 	db	68
  1332   001015  56                 	db	86
  1333   001016  66                 	db	102
  1334   001017  77                 	db	119
  1335   001018  01                 	db	1
  1336   001019                     __end_of_default_mac_address:
  1337                           	callstack 0
  1338   007CF0                     _TMR1IF         set	31984
  1339   007E68                     _TMR1ON         set	32360
  1340   007E69                     _TMR1CS         set	32361
  1341   007E6B                     _T1OSCEN        set	32363
  1342   007E6A                     _T1SYNC         set	32362
  1343   007E6D                     _T1CKPS1        set	32365
  1344   007E6C                     _T1CKPS0        set	32364
  1345   007E6F                     _T1RD16         set	32367
  1346   007F8F                     _RBPU           set	32655
  1347   007CED                     _RCIE           set	31981
  1348   007CEE                     _ADIE           set	31982
  1349   007D03                     _BCLIE          set	32003
  1350   007CEB                     _SSPIE          set	31979
  1351   007D04                     _EEIE           set	32004
  1352   007D00                     _CCP2IE         set	32000
  1353   007CEA                     _CCP1IE         set	31978
  1354   007CE9                     _TMR2IE         set	31977
  1355   007CE8                     _TMR1IE         set	31976
  1356   007F95                     _T0IE           set	32661
  1357   007F93                     _RBIE           set	32659
  1358   007F94                     _INT0E          set	32660
  1359   007F96                     _PEIE           set	32662
  1360   007F97                     _GIE            set	32663
  1361   007E87                     _IPEN           set	32391
  1362   000FCF                     _TMR1H          set	4047
  1363   000FCE                     _TMR1L          set	4046
  1364   000F9B                     _OSCTUNE        set	3995
  1365   000FD3                     _OSCCON         set	4051
  1366   000F96                     _TRISEbits      set	3990
  1367   000F84                     _PORTE          set	3972
  1368   000F83                     _PORTD          set	3971
  1369   000F82                     _PORTC          set	3970
  1370   000F81                     _PORTB          set	3969
  1371   000F80                     _PORTA          set	3968
  1372   000F82                     _PORTCbits      set	3970
  1373   000F8D                     _LATEbits       set	3981
  1374   000FC9                     _SSPBUF         set	4041
  1375   000F9E                     _PIR1bits       set	3998
  1376   000FC6                     _SSPCON1bits    set	4038
  1377   000FC6                     _SSPCON1        set	4038
  1378   000FC7                     _SSPSTATbits    set	4039
  1379   000F81                     _PORTBbits      set	3969
  1380   000F8C                     _LATDbits       set	3980
  1381   000F8B                     _LATCbits       set	3979
  1382   000F95                     _TRISDbits      set	3989
  1383   000F94                     _TRISCbits      set	3988
  1384   000F93                     _TRISBbits      set	3987
  1385   001019                     STR_2:
  1386   001019  43                 	db	67	;'C'
  1387   00101A  4D                 	db	77	;'M'
  1388   00101B  44                 	db	68	;'D'
  1389   00101C  3A                 	db	58	;':'
  1390   00101D  41                 	db	65	;'A'
  1391   00101E  4C                 	db	76	;'L'
  1392   00101F  56                 	db	86	;'V'
  1393   001020  00                 	db	0
  1394   001021                     STR_1:
  1395   001021  43                 	db	67	;'C'
  1396   001022  4D                 	db	77	;'M'
  1397   001023  44                 	db	68	;'D'
  1398   001024  3A                 	db	58	;':'
  1399   001025  50                 	db	80	;'P'
  1400   001026  4C                 	db	76	;'L'
  1401   001027  56                 	db	86	;'V'
  1402   001028  00                 	db	0
  1403   001029  00                 	db	0	; dummy byte at the end
  1404   000002                     __activetblptr  equ	2
  1405                           
  1406                           ; #config settings
  1407                           
  1408                           	psect	cinit
  1409   001882                     __pcinit:
  1410                           	callstack 0
  1411   001882                     start_initialization:
  1412                           	callstack 0
  1413   001882                     __initialization:
  1414                           	callstack 0
  1415                           
  1416                           ; Clear objects allocated to BANK0 (56 bytes)
  1417   001882  EE00  F060         	lfsr	0,__pbssBANK0
  1418   001886  0E38               	movlw	56
  1419   001888                     clear_0:
  1420   001888  6AEE               	clrf	postinc0,c
  1421   00188A  06E8               	decf	wreg,f,c
  1422   00188C  E1FD               	bnz	clear_0
  1423                           
  1424                           ; Clear objects allocated to COMRAM (45 bytes)
  1425   00188E  EE00  F030         	lfsr	0,__pbssCOMRAM
  1426   001892  0E2D               	movlw	45
  1427   001894                     clear_1:
  1428   001894  6AEE               	clrf	postinc0,c
  1429   001896  06E8               	decf	wreg,f,c
  1430   001898  E1FD               	bnz	clear_1
  1431   00189A                     end_of_initialization:
  1432                           	callstack 0
  1433   00189A                     __end_of__initialization:
  1434                           	callstack 0
  1435   00189A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1436   00189C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1437   00189E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1438   0018A0  6EF8               	movwf	tblptru,c
  1439   0018A2  0100               	movlb	0
  1440   0018A4  EF17  F00A         	goto	_main	;jump to C main() function
  1441                           
  1442                           	psect	bssCOMRAM
  1443   000030                     __pbssCOMRAM:
  1444                           	callstack 0
  1445   000030                     _mrf24_data_config:
  1446                           	callstack 0
  1447   000030                     	ds	34
  1448   000052                     _mrf24_data_out:
  1449                           	callstack 0
  1450   000052                     	ds	6
  1451   000058                     _timeStamp:
  1452                           	callstack 0
  1453   000058                     	ds	4
  1454   00005C                     _long_mac_address:
  1455                           	callstack 0
  1456   00005C                     	ds	1
  1457                           
  1458                           	psect	bssBANK0
  1459   000060                     __pbssBANK0:
  1460                           	callstack 0
  1461   000060                     _mrf24_data_in:
  1462                           	callstack 0
  1463   000060                     	ds	56
  1464                           
  1465                           	psect	cstackCOMRAM
  1466   000001                     __pcstackCOMRAM:
  1467                           	callstack 0
  1468   000001                     ?_strlen:
  1469                           	callstack 0
  1470   000001                     SetCSPin@estado:
  1471                           	callstack 0
  1472   000001                     SetWakePin@estado:
  1473                           	callstack 0
  1474   000001                     SetResetPin@estado:
  1475                           	callstack 0
  1476   000001                     SPIWriteByte@dato:
  1477                           	callstack 0
  1478   000001                     DelayInit@delay:
  1479                           	callstack 0
  1480   000001                     DelayReset@delay:
  1481                           	callstack 0
  1482   000001                     DelayIsRunning@delay:
  1483                           	callstack 0
  1484   000001                     strlen@s:
  1485                           	callstack 0
  1486   000001                     SetDireccionDestino@direccion:
  1487                           	callstack 0
  1488   000001                     SetPANIDDestino@panid:
  1489                           	callstack 0
  1490   000001                     ??_InicializoVariables:
  1491   000001                     
  1492                           ; 1 bytes @ 0x0
  1493   000001                     	ds	1
  1494   000002                     WriteByteSPIPort@dato:
  1495                           	callstack 0
  1496   000002                     DelayRead@delay:
  1497                           	callstack 0
  1498   000002                     InicializoVariables@i:
  1499                           	callstack 0
  1500   000002                     SPIWrite2Byte@dato:
  1501                           	callstack 0
  1502   000002                     DelayInit@duration:
  1503                           	callstack 0
  1504   000002                     
  1505                           ; 1 bytes @ 0x1
  1506   000002                     	ds	1
  1507   000003                     SetShortAddr@valor:
  1508                           	callstack 0
  1509   000003                     GetShortAddr@leido_spi:
  1510                           	callstack 0
  1511   000003                     strlen@a:
  1512                           	callstack 0
  1513   000003                     ??_DelayRead:
  1514   000003                     
  1515                           ; 1 bytes @ 0x2
  1516   000003                     	ds	1
  1517   000004                     SetShortAddr@reg_address:
  1518                           	callstack 0
  1519   000004                     GetShortAddr@reg_address:
  1520                           	callstack 0
  1521   000004                     SetMensajeSalida@mensaje:
  1522                           	callstack 0
  1523   000004                     Write2ByteSPIPort@dato:
  1524                           	callstack 0
  1525   000004                     
  1526                           ; 1 bytes @ 0x3
  1527   000004                     	ds	1
  1528   000005                     SetDeviceMACAddress@i:
  1529                           	callstack 0
  1530   000005                     
  1531                           ; 1 bytes @ 0x4
  1532   000005                     	ds	1
  1533   000006                     debounceFSM_init@antirrebote_boton_n:
  1534                           	callstack 0
  1535   000006                     SetLongAddr@reg_address:
  1536                           	callstack 0
  1537   000006                     GetLongAddr@reg_address:
  1538                           	callstack 0
  1539   000006                     
  1540                           ; 1 bytes @ 0x5
  1541   000006                     	ds	1
  1542   000007                     
  1543                           ; 1 bytes @ 0x6
  1544   000007                     	ds	1
  1545   000008                     SetLongAddr@valor:
  1546                           	callstack 0
  1547   000008                     ??_GetLongAddr:
  1548                           
  1549                           ; 1 bytes @ 0x7
  1550   000008                     	ds	1
  1551   000009                     ??_SetLongAddr:
  1552                           
  1553                           ; 1 bytes @ 0x8
  1554   000009                     	ds	1
  1555   00000A                     GetLongAddr@respuesta:
  1556                           	callstack 0
  1557                           
  1558                           ; 1 bytes @ 0x9
  1559   00000A                     	ds	1
  1560   00000B                     ??_SetChannel:
  1561   00000B                     ??_EnviarDato:
  1562                           
  1563                           ; 1 bytes @ 0xA
  1564   00000B                     	ds	4
  1565   00000F                     debounceFSM_update@antirrebote_boton_n:
  1566                           	callstack 0
  1567   00000F                     ??_MRF24J40Init:
  1568                           
  1569                           ; 1 bytes @ 0xE
  1570   00000F                     	ds	1
  1571   000010                     MRF24J40Init@lectura:
  1572                           	callstack 0
  1573   000010                     EnviarDato@i:
  1574                           	callstack 0
  1575   000010                     debounceFSM_update@estado_pin:
  1576                           	callstack 0
  1577                           
  1578                           ; 1 bytes @ 0xF
  1579   000010                     	ds	1
  1580   000011                     EnviarDato@pos_memoria:
  1581                           	callstack 0
  1582   000011                     MRF24J40Init@delay_time_out:
  1583                           	callstack 0
  1584   000011                     ??_debounceFSM_update:
  1585                           
  1586                           ; 1 bytes @ 0x10
  1587   000011                     	ds	9
  1588   00001A                     ??_main:
  1589                           
  1590                           ; 1 bytes @ 0x19
  1591   00001A                     	ds	2
  1592   00001C                     main@delay_parpadeo:
  1593                           	callstack 0
  1594                           
  1595                           ; 9 bytes @ 0x1B
  1596   00001C                     	ds	9
  1597   000025                     main@boton1:
  1598                           	callstack 0
  1599                           
  1600                           ; 11 bytes @ 0x24
  1601   000025                     	ds	11
  1602                           
  1603 ;;
  1604 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1605 ;;
  1606 ;; *************** function _main *****************
  1607 ;; Defined at:
  1608 ;;		line 24 in file "main.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  boton1         11   36[COMRAM] struct .
  1613 ;;  delay_parpad    9   27[COMRAM] struct .
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1624 ;;      Locals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1625 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1626 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1627 ;;Total ram usage:       22 bytes
  1628 ;; Hardware stack levels required when called: 7
  1629 ;; This function calls:
  1630 ;;		_BoardInit
  1631 ;;		_DelayInit
  1632 ;;		_DelayRead
  1633 ;;		_EnviarDato
  1634 ;;		_MRF24J40Init
  1635 ;;		_SetDireccionDestino
  1636 ;;		_SetMensajeSalida
  1637 ;;		_SetPANIDDestino
  1638 ;;		_debounceFSM_init
  1639 ;;		_debounceFSM_update
  1640 ;; This function is called by:
  1641 ;;		Startup code after reset
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text0
  1646   00142E                     __ptext0:
  1647                           	callstack 0
  1648   00142E                     _main:
  1649                           	callstack 24
  1650   00142E                     
  1651                           ;main.c: 26:     delayNoBloqueanteData delay_parpadeo;;main.c: 27:     debounceData_t bo
      +                          ton1;;main.c: 28:  debounceFSM_init(&boton1);
  1652   00142E  0E25               	movlw	low main@boton1
  1653   001430  6E06               	movwf	debounceFSM_init@antirrebote_boton_n^0,c
  1654   001432  EC00  F00C         	call	_debounceFSM_init	;wreg free
  1655   001436                     
  1656                           ;main.c: 29:     BoardInit();
  1657   001436  EC39  F00B         	call	_BoardInit	;wreg free
  1658   00143A                     
  1659                           ;main.c: 30:     MRF24J40Init();
  1660   00143A  EC15  F008         	call	_MRF24J40Init	;wreg free
  1661   00143E                     
  1662                           ;main.c: 31:     DelayInit(&delay_parpadeo, 1000);
  1663   00143E  0E1C               	movlw	low main@delay_parpadeo
  1664   001440  6E01               	movwf	DelayInit@delay^0,c
  1665   001442  0EE8               	movlw	232
  1666   001444  6E02               	movwf	DelayInit@duration^0,c
  1667   001446  0E03               	movlw	3
  1668   001448  6E03               	movwf	(DelayInit@duration+1)^0,c
  1669   00144A  0E00               	movlw	0
  1670   00144C  6E04               	movwf	(DelayInit@duration+2)^0,c
  1671   00144E  0E00               	movlw	0
  1672   001450  6E05               	movwf	(DelayInit@duration+3)^0,c
  1673   001452  EC2D  F00C         	call	_DelayInit	;wreg free
  1674   001456                     
  1675                           ;main.c: 32:     SetDireccionDestino(0x1111);
  1676   001456  0E11               	movlw	17
  1677   001458  6E02               	movwf	(SetDireccionDestino@direccion+1)^0,c
  1678   00145A  0E11               	movlw	17
  1679   00145C  6E01               	movwf	SetDireccionDestino@direccion^0,c
  1680   00145E  ECF3  F00C         	call	_SetDireccionDestino	;wreg free
  1681   001462                     
  1682                           ;main.c: 33:     SetPANIDDestino(0X1234);
  1683   001462  0E12               	movlw	18
  1684   001464  6E02               	movwf	(SetPANIDDestino@panid+1)^0,c
  1685   001466  0E34               	movlw	52
  1686   001468  6E01               	movwf	SetPANIDDestino@panid^0,c
  1687   00146A  ECEE  F00C         	call	_SetPANIDDestino	;wreg free
  1688   00146E                     l240:
  1689   00146E  0004               	clrwdt		;# 
  1690                           
  1691                           ;main.c: 38:         switch(debounceFSM_update(&boton1,PORTCbits.RC2)) {
  1692   001470  EF4A  F00A         	goto	l2283
  1693   001474                     l242:
  1694                           
  1695                           ;main.c: 42:                 LATEbits.LATE2 = 0;
  1696   001474  948D               	bcf	141,2,c	;volatile
  1697   001476                     
  1698                           ;main.c: 43:                 SetMensajeSalida("CMD:PLV");
  1699   001476  0E21               	movlw	low STR_1
  1700   001478  6E04               	movwf	SetMensajeSalida@mensaje^0,c
  1701   00147A  ECBB  F00C         	call	_SetMensajeSalida	;wreg free
  1702   00147E                     l2275:
  1703                           
  1704                           ;main.c: 44:                 EnviarDato();
  1705   00147E  EC98  F009         	call	_EnviarDato	;wreg free
  1706                           
  1707                           ;main.c: 45:     break;
  1708   001482  EF6C  F00A         	goto	l2285
  1709   001486                     l244:
  1710                           
  1711                           ;main.c: 49:                 LATEbits.LATE2 = 1;
  1712   001486  848D               	bsf	141,2,c	;volatile
  1713   001488                     
  1714                           ;main.c: 50:                 SetMensajeSalida("CMD:ALV");
  1715   001488  0E19               	movlw	low STR_2
  1716   00148A  6E04               	movwf	SetMensajeSalida@mensaje^0,c
  1717   00148C  ECBB  F00C         	call	_SetMensajeSalida	;wreg free
  1718   001490  EF3F  F00A         	goto	l2275
  1719   001494                     l2283:
  1720   001494  0E25               	movlw	low main@boton1
  1721   001496  6E0F               	movwf	debounceFSM_update@antirrebote_boton_n^0,c
  1722   001498  B482               	btfsc	130,2,c	;volatile
  1723   00149A  EF51  F00A         	goto	u621
  1724   00149E  EF54  F00A         	goto	u620
  1725   0014A2                     u621:
  1726   0014A2  0E01               	movlw	1
  1727   0014A4  EF55  F00A         	goto	u626
  1728   0014A8                     u620:
  1729   0014A8  0E00               	movlw	0
  1730   0014AA                     u626:
  1731   0014AA  6E10               	movwf	debounceFSM_update@estado_pin^0,c
  1732   0014AC  ECFA  F008         	call	_debounceFSM_update	;wreg free
  1733   0014B0  6E1A               	movwf	??_main^0,c
  1734   0014B2  6A1B               	clrf	(??_main+1)^0,c
  1735                           
  1736                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1737                           ; Switch size 1, requested type "simple"
  1738                           ; Number of cases is 1, Range of values is 0 to 0
  1739                           ; switch strategies available:
  1740                           ; Name         Instructions Cycles
  1741                           ; simple_byte            4     3 (average)
  1742                           ;	Chosen strategy is simple_byte
  1743   0014B4  501B               	movf	(??_main+1)^0,w,c
  1744   0014B6  0A00               	xorlw	0	; case 0
  1745   0014B8  B4D8               	btfsc	status,2,c
  1746   0014BA  EF61  F00A         	goto	l2333
  1747   0014BE  EF6C  F00A         	goto	l2285
  1748   0014C2                     l2333:
  1749                           
  1750                           ; Switch size 1, requested type "simple"
  1751                           ; Number of cases is 2, Range of values is 1 to 2
  1752                           ; switch strategies available:
  1753                           ; Name         Instructions Cycles
  1754                           ; simple_byte            7     4 (average)
  1755                           ;	Chosen strategy is simple_byte
  1756   0014C2  501A               	movf	??_main^0,w,c
  1757   0014C4  0A01               	xorlw	1	; case 1
  1758   0014C6  B4D8               	btfsc	status,2,c
  1759   0014C8  EF3A  F00A         	goto	l242
  1760   0014CC  0A03               	xorlw	3	; case 2
  1761   0014CE  B4D8               	btfsc	status,2,c
  1762   0014D0  EF43  F00A         	goto	l244
  1763   0014D4  EF6C  F00A         	goto	l2285
  1764   0014D8                     l2285:
  1765                           
  1766                           ;main.c: 59:         if(DelayRead(&delay_parpadeo)) {
  1767   0014D8  0E1C               	movlw	low main@delay_parpadeo
  1768   0014DA  6E02               	movwf	DelayRead@delay^0,c
  1769   0014DC  ECE3  F00A         	call	_DelayRead	;wreg free
  1770   0014E0  0900               	iorlw	0
  1771   0014E2  B4D8               	btfsc	status,2,c
  1772   0014E4  EF76  F00A         	goto	u631
  1773   0014E8  EF78  F00A         	goto	u630
  1774   0014EC                     u631:
  1775   0014EC  EF37  F00A         	goto	l240
  1776   0014F0                     u630:
  1777   0014F0                     
  1778                           ;main.c: 60:             LATEbits.LATE0 = !LATEbits.LATE0;
  1779   0014F0  A08D               	btfss	141,0,c	;volatile
  1780   0014F2  EF7D  F00A         	goto	u641
  1781   0014F6  EF81  F00A         	goto	u640
  1782   0014FA                     u641:
  1783   0014FA  6A1A               	clrf	??_main^0,c
  1784   0014FC  2A1A               	incf	??_main^0,f,c
  1785   0014FE  EF82  F00A         	goto	u658
  1786   001502                     u640:
  1787   001502  6A1A               	clrf	??_main^0,c
  1788   001504                     u658:
  1789   001504  508D               	movf	141,w,c	;volatile
  1790   001506  181A               	xorwf	??_main^0,w,c
  1791   001508  0BFE               	andlw	-2
  1792   00150A  181A               	xorwf	??_main^0,w,c
  1793   00150C  6E8D               	movwf	141,c	;volatile
  1794   00150E  EF37  F00A         	goto	l240
  1795   001512  EF20  F000         	goto	start
  1796   001516                     __end_of_main:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _debounceFSM_update *****************
  1800 ;; Defined at:
  1801 ;;		line 34 in file "drivers/scr/API_debounce.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  antirrebote_    1   14[COMRAM] PTR struct .
  1804 ;;		 -> main@boton1(11), 
  1805 ;;  estado_pin      1   15[COMRAM] _Bool 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      enum E3122
  1810 ;; Registers used:
  1811 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;Total ram usage:        4 bytes
  1822 ;; Hardware stack levels used: 1
  1823 ;; Hardware stack levels required when called: 3
  1824 ;; This function calls:
  1825 ;;		_DelayRead
  1826 ;;		_debounceFSM_init
  1827 ;; This function is called by:
  1828 ;;		_main
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text1
  1833   0011F4                     __ptext1:
  1834                           	callstack 0
  1835   0011F4                     _debounceFSM_update:
  1836                           	callstack 27
  1837   0011F4                     
  1838                           ;drivers/scr/API_debounce.c: 36:  switch(antirrebote_boton_n->estadoActual) {
  1839   0011F4  EF74  F009         	goto	l2095
  1840   0011F8                     l2043:
  1841                           
  1842                           ;drivers/scr/API_debounce.c: 40:    if(!estado_pin)
  1843   0011F8  5010               	movf	debounceFSM_update@estado_pin^0,w,c
  1844   0011FA  A4D8               	btfss	status,2,c
  1845   0011FC  EF02  F009         	goto	u521
  1846   001200  EF04  F009         	goto	u520
  1847   001204                     u521:
  1848   001204  EF96  F009         	goto	l2097
  1849   001208                     u520:
  1850   001208                     
  1851                           ;drivers/scr/API_debounce.c: 41:     antirrebote_boton_n->estadoActual = BUTTON_FALLING;
  1852   001208  500F               	movf	debounceFSM_update@antirrebote_boton_n^0,w,c
  1853   00120A  6ED9               	movwf	fsr2l,c
  1854   00120C  6ADA               	clrf	fsr2h,c
  1855   00120E  0E01               	movlw	1
  1856   001210  26D9               	addwf	fsr2l,f,c
  1857   001212  0E01               	movlw	1
  1858   001214  6EDF               	movwf	indf2,c
  1859   001216  EF96  F009         	goto	l2097
  1860   00121A                     l2047:
  1861                           
  1862                           ;drivers/scr/API_debounce.c: 46:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  1863   00121A  500F               	movf	debounceFSM_update@antirrebote_boton_n^0,w,c
  1864   00121C  0F02               	addlw	2
  1865   00121E  6E02               	movwf	DelayRead@delay^0,c
  1866   001220  ECE3  F00A         	call	_DelayRead	;wreg free
  1867   001224  0900               	iorlw	0
  1868   001226  B4D8               	btfsc	status,2,c
  1869   001228  EF18  F009         	goto	u531
  1870   00122C  EF1A  F009         	goto	u530
  1871   001230                     u531:
  1872   001230  EF96  F009         	goto	l2097
  1873   001234                     u530:
  1874   001234                     
  1875                           ;drivers/scr/API_debounce.c: 48:     if(!estado_pin) {
  1876   001234  5010               	movf	debounceFSM_update@estado_pin^0,w,c
  1877   001236  A4D8               	btfss	status,2,c
  1878   001238  EF20  F009         	goto	u541
  1879   00123C  EF22  F009         	goto	u540
  1880   001240                     u541:
  1881   001240  EF2C  F009         	goto	l2059
  1882   001244                     u540:
  1883   001244                     
  1884                           ;drivers/scr/API_debounce.c: 50:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  1885   001244  500F               	movf	debounceFSM_update@antirrebote_boton_n^0,w,c
  1886   001246  6ED9               	movwf	fsr2l,c
  1887   001248  6ADA               	clrf	fsr2h,c
  1888   00124A  0E01               	movlw	1
  1889   00124C  26D9               	addwf	fsr2l,f,c
  1890   00124E  0E02               	movlw	2
  1891   001250  6EDF               	movwf	indf2,c
  1892   001252                     
  1893                           ;drivers/scr/API_debounce.c: 51:      return PRESIONO_BOTON;
  1894   001252  0E01               	movlw	1
  1895   001254  EF97  F009         	goto	l377
  1896   001258                     l2059:
  1897                           
  1898                           ;drivers/scr/API_debounce.c: 54:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  1899   001258  500F               	movf	debounceFSM_update@antirrebote_boton_n^0,w,c
  1900   00125A  6ED9               	movwf	fsr2l,c
  1901   00125C  6ADA               	clrf	fsr2h,c
  1902   00125E  0E01               	movlw	1
  1903   001260  26D9               	addwf	fsr2l,f,c
  1904   001262  6ADF               	clrf	indf2,c
  1905   001264                     l2061:
  1906                           
  1907                           ;drivers/scr/API_debounce.c: 55:      return RUIDO;
  1908   001264  0E04               	movlw	4
  1909   001266  EF97  F009         	goto	l377
  1910   00126A                     l2065:
  1911                           
  1912                           ;drivers/scr/API_debounce.c: 62:    if(DelayRead(&antirrebote_boton_n->delay_anti_rebote
      +                          )) {
  1913   00126A  500F               	movf	debounceFSM_update@antirrebote_boton_n^0,w,c
  1914   00126C  0F02               	addlw	2
  1915   00126E  6E02               	movwf	DelayRead@delay^0,c
  1916   001270  ECE3  F00A         	call	_DelayRead	;wreg free
  1917   001274  0900               	iorlw	0
  1918   001276  B4D8               	btfsc	status,2,c
  1919   001278  EF40  F009         	goto	u551
  1920   00127C  EF42  F009         	goto	u550
  1921   001280                     u551:
  1922   001280  EF96  F009         	goto	l2097
  1923   001284                     u550:
  1924   001284                     
  1925                           ;drivers/scr/API_debounce.c: 64:     if(estado_pin) {
  1926   001284  5010               	movf	debounceFSM_update@estado_pin^0,w,c
  1927   001286  B4D8               	btfsc	status,2,c
  1928   001288  EF48  F009         	goto	u561
  1929   00128C  EF4A  F009         	goto	u560
  1930   001290                     u561:
  1931   001290  EF53  F009         	goto	l2077
  1932   001294                     u560:
  1933   001294                     
  1934                           ;drivers/scr/API_debounce.c: 66:      antirrebote_boton_n->estadoActual = BUTTON_UP;
  1935   001294  500F               	movf	debounceFSM_update@antirrebote_boton_n^0,w,c
  1936   001296  6ED9               	movwf	fsr2l,c
  1937   001298  6ADA               	clrf	fsr2h,c
  1938   00129A  0E01               	movlw	1
  1939   00129C  26D9               	addwf	fsr2l,f,c
  1940   00129E  6ADF               	clrf	indf2,c
  1941   0012A0                     
  1942                           ;drivers/scr/API_debounce.c: 67:      return SUELTO_BOTON;
  1943   0012A0  0E02               	movlw	2
  1944   0012A2  EF97  F009         	goto	l377
  1945   0012A6                     l2077:
  1946                           
  1947                           ;drivers/scr/API_debounce.c: 70:      antirrebote_boton_n->estadoActual = BUTTON_DOWN;
  1948   0012A6  500F               	movf	debounceFSM_update@antirrebote_boton_n^0,w,c
  1949   0012A8  6ED9               	movwf	fsr2l,c
  1950   0012AA  6ADA               	clrf	fsr2h,c
  1951   0012AC  0E01               	movlw	1
  1952   0012AE  26D9               	addwf	fsr2l,f,c
  1953   0012B0  0E02               	movlw	2
  1954   0012B2  6EDF               	movwf	indf2,c
  1955   0012B4  EF32  F009         	goto	l2061
  1956   0012B8                     l2083:
  1957                           
  1958                           ;drivers/scr/API_debounce.c: 78:    if(estado_pin)
  1959   0012B8  5010               	movf	debounceFSM_update@estado_pin^0,w,c
  1960   0012BA  B4D8               	btfsc	status,2,c
  1961   0012BC  EF62  F009         	goto	u571
  1962   0012C0  EF64  F009         	goto	u570
  1963   0012C4                     u571:
  1964   0012C4  EF96  F009         	goto	l2097
  1965   0012C8                     u570:
  1966   0012C8                     
  1967                           ;drivers/scr/API_debounce.c: 79:     antirrebote_boton_n->estadoActual = BUTTON_RAISING;
  1968   0012C8  500F               	movf	debounceFSM_update@antirrebote_boton_n^0,w,c
  1969   0012CA  6ED9               	movwf	fsr2l,c
  1970   0012CC  6ADA               	clrf	fsr2h,c
  1971   0012CE  0E01               	movlw	1
  1972   0012D0  26D9               	addwf	fsr2l,f,c
  1973   0012D2  0E03               	movlw	3
  1974   0012D4  6EDF               	movwf	indf2,c
  1975   0012D6  EF96  F009         	goto	l2097
  1976   0012DA                     l2087:
  1977                           
  1978                           ;drivers/scr/API_debounce.c: 84:    debounceFSM_init(antirrebote_boton_n);
  1979   0012DA  C00F  F006         	movff	debounceFSM_update@antirrebote_boton_n,debounceFSM_init@antirrebote_boton_n
  1980   0012DE  EC00  F00C         	call	_debounceFSM_init	;wreg free
  1981   0012E2                     
  1982                           ;drivers/scr/API_debounce.c: 85:    return ERROR_ANTI_REBOTE;
  1983   0012E2  0E00               	movlw	0
  1984   0012E4  EF97  F009         	goto	l377
  1985   0012E8                     l2095:
  1986   0012E8  500F               	movf	debounceFSM_update@antirrebote_boton_n^0,w,c
  1987   0012EA  6ED9               	movwf	fsr2l,c
  1988   0012EC  6ADA               	clrf	fsr2h,c
  1989   0012EE  0E01               	movlw	1
  1990   0012F0  26D9               	addwf	fsr2l,f,c
  1991   0012F2  50DF               	movf	indf2,w,c
  1992   0012F4  6E11               	movwf	??_debounceFSM_update^0,c
  1993   0012F6  6A12               	clrf	(??_debounceFSM_update+1)^0,c
  1994                           
  1995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1996                           ; Switch size 1, requested type "simple"
  1997                           ; Number of cases is 1, Range of values is 0 to 0
  1998                           ; switch strategies available:
  1999                           ; Name         Instructions Cycles
  2000                           ; simple_byte            4     3 (average)
  2001                           ;	Chosen strategy is simple_byte
  2002   0012F8  5012               	movf	(??_debounceFSM_update+1)^0,w,c
  2003   0012FA  0A00               	xorlw	0	; case 0
  2004   0012FC  B4D8               	btfsc	status,2,c
  2005   0012FE  EF83  F009         	goto	l2335
  2006   001302  EF6D  F009         	goto	l2087
  2007   001306                     l2335:
  2008                           
  2009                           ; Switch size 1, requested type "simple"
  2010                           ; Number of cases is 4, Range of values is 0 to 3
  2011                           ; switch strategies available:
  2012                           ; Name         Instructions Cycles
  2013                           ; simple_byte           13     7 (average)
  2014                           ;	Chosen strategy is simple_byte
  2015   001306  5011               	movf	??_debounceFSM_update^0,w,c
  2016   001308  0A00               	xorlw	0	; case 0
  2017   00130A  B4D8               	btfsc	status,2,c
  2018   00130C  EFFC  F008         	goto	l2043
  2019   001310  0A01               	xorlw	1	; case 1
  2020   001312  B4D8               	btfsc	status,2,c
  2021   001314  EF0D  F009         	goto	l2047
  2022   001318  0A03               	xorlw	3	; case 2
  2023   00131A  B4D8               	btfsc	status,2,c
  2024   00131C  EF5C  F009         	goto	l2083
  2025   001320  0A01               	xorlw	1	; case 3
  2026   001322  B4D8               	btfsc	status,2,c
  2027   001324  EF35  F009         	goto	l2065
  2028   001328  EF6D  F009         	goto	l2087
  2029   00132C                     l2097:
  2030                           
  2031                           ;drivers/scr/API_debounce.c: 87:  return BOTON_SIN_CAMBIOS;
  2032   00132C  0E03               	movlw	3
  2033   00132E                     l377:
  2034   00132E  0012               	return		;funcret
  2035   001330                     __end_of_debounceFSM_update:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _debounceFSM_init *****************
  2039 ;; Defined at:
  2040 ;;		line 19 in file "drivers/scr/API_debounce.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  antirrebote_    1    5[COMRAM] PTR struct .
  2043 ;;		 -> main@boton1(11), 
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2055 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;Total ram usage:        1 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 2
  2062 ;; This function calls:
  2063 ;;		_DelayInit
  2064 ;; This function is called by:
  2065 ;;		_main
  2066 ;;		_debounceFSM_update
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text2
  2071   001800                     __ptext2:
  2072                           	callstack 0
  2073   001800                     _debounceFSM_init:
  2074                           	callstack 27
  2075   001800                     
  2076                           ;drivers/scr/API_debounce.c: 21:  antirrebote_boton_n->estadoActual = BUTTON_UP;
  2077   001800  5006               	movf	debounceFSM_init@antirrebote_boton_n^0,w,c
  2078   001802  6ED9               	movwf	fsr2l,c
  2079   001804  6ADA               	clrf	fsr2h,c
  2080   001806  0E01               	movlw	1
  2081   001808  26D9               	addwf	fsr2l,f,c
  2082   00180A  6ADF               	clrf	indf2,c
  2083   00180C                     
  2084                           ;drivers/scr/API_debounce.c: 22:  DelayInit(&antirrebote_boton_n->delay_anti_rebote, 40)
      +                          ;
  2085   00180C  5006               	movf	debounceFSM_init@antirrebote_boton_n^0,w,c
  2086   00180E  0F02               	addlw	2
  2087   001810  6E01               	movwf	DelayInit@delay^0,c
  2088   001812  0E28               	movlw	40
  2089   001814  6E02               	movwf	DelayInit@duration^0,c
  2090   001816  0E00               	movlw	0
  2091   001818  6E03               	movwf	(DelayInit@duration+1)^0,c
  2092   00181A  0E00               	movlw	0
  2093   00181C  6E04               	movwf	(DelayInit@duration+2)^0,c
  2094   00181E  0E00               	movlw	0
  2095   001820  6E05               	movwf	(DelayInit@duration+3)^0,c
  2096   001822  EC2D  F00C         	call	_DelayInit	;wreg free
  2097   001826                     
  2098                           ;drivers/scr/API_debounce.c: 23:  antirrebote_boton_n->tecla_fue_presionada = 0;
  2099   001826  5006               	movf	debounceFSM_init@antirrebote_boton_n^0,w,c
  2100   001828  6ED9               	movwf	fsr2l,c
  2101   00182A  6ADA               	clrf	fsr2h,c
  2102   00182C  6ADF               	clrf	indf2,c
  2103   00182E  0012               	return		;funcret
  2104   001830                     __end_of_debounceFSM_init:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _SetPANIDDestino *****************
  2108 ;; Defined at:
  2109 ;;		line 711 in file "drivers/scr/API_MRF24J40.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  panid           2    0[COMRAM] unsigned short 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;		None
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		None
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;Total ram usage:        2 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 1
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text3
  2138   0019DC                     __ptext3:
  2139                           	callstack 0
  2140   0019DC                     _SetPANIDDestino:
  2141                           	callstack 29
  2142   0019DC                     
  2143                           ;drivers/scr/API_MRF24J40.c: 713:     mrf24_data_out.destinity_panid = panid;
  2144   0019DC  C001  F052         	movff	SetPANIDDestino@panid,_mrf24_data_out
  2145   0019E0  C002  F053         	movff	SetPANIDDestino@panid+1,_mrf24_data_out+1
  2146   0019E4  0012               	return		;funcret
  2147   0019E6                     __end_of_SetPANIDDestino:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _SetMensajeSalida *****************
  2151 ;; Defined at:
  2152 ;;		line 688 in file "drivers/scr/API_MRF24J40.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;  mensaje         1    3[COMRAM] PTR const unsigned char 
  2155 ;;		 -> STR_2(8), STR_1(8), 
  2156 ;; Auto vars:     Size  Location     Type
  2157 ;;		None
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  1    wreg      void 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2167 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;Total ram usage:        1 bytes
  2172 ;; Hardware stack levels used: 1
  2173 ;; Hardware stack levels required when called: 2
  2174 ;; This function calls:
  2175 ;;		_strlen
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text4
  2182   001976                     __ptext4:
  2183                           	callstack 0
  2184   001976                     _SetMensajeSalida:
  2185                           	callstack 28
  2186   001976                     
  2187                           ;drivers/scr/API_MRF24J40.c: 690:     mrf24_data_out.buffer_salida = mensaje;
  2188   001976  C004  F057         	movff	SetMensajeSalida@mensaje,_mrf24_data_out+5
  2189   00197A                     
  2190                           ;drivers/scr/API_MRF24J40.c: 691:     mrf24_data_out.largo_mensaje = (uint8_t) strlen(me
      +                          nsaje);
  2191   00197A  C004  F001         	movff	SetMensajeSalida@mensaje,strlen@s
  2192   00197E  ECE6  F00B         	call	_strlen	;wreg free
  2193   001982  5001               	movf	?_strlen^0,w,c
  2194   001984  6E56               	movwf	(_mrf24_data_out+4)^0,c
  2195   001986  0012               	return		;funcret
  2196   001988                     __end_of_SetMensajeSalida:
  2197                           	callstack 0
  2198                           
  2199 ;; *************** function _strlen *****************
  2200 ;; Defined at:
  2201 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2204 ;;		 -> STR_2(8), STR_1(8), 
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2207 ;;		 -> STR_2(8), STR_1(8), 
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  2    0[COMRAM] unsigned int 
  2210 ;; Registers used:
  2211 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2212 ;; Tracked objects:
  2213 ;;		On entry : 0/0
  2214 ;;		On exit  : 0/0
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2220 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2221 ;;Total ram usage:        3 bytes
  2222 ;; Hardware stack levels used: 1
  2223 ;; Hardware stack levels required when called: 1
  2224 ;; This function calls:
  2225 ;;		Nothing
  2226 ;; This function is called by:
  2227 ;;		_SetMensajeSalida
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text5
  2232   0017CC                     __ptext5:
  2233                           	callstack 0
  2234   0017CC                     _strlen:
  2235                           	callstack 28
  2236   0017CC  C001  F003         	movff	strlen@s,strlen@a
  2237   0017D0  EFEB  F00B         	goto	l1897
  2238   0017D4                     l1895:
  2239   0017D4  2A01               	incf	strlen@s^0,f,c
  2240   0017D6                     l1897:
  2241   0017D6  C001  FFF6         	movff	strlen@s,tblptrl
  2242   0017DA                     	if	1	;There is more than 1 active tblptr byte
  2243   0017DA  0E10               	movlw	high __smallconst
  2244   0017DC  6EF7               	movwf	tblptrh,c
  2245   0017DE                     	endif
  2246   0017DE                     	if	0	;tblptru may be non-zero
  2247   0017DE                     	endif
  2248   0017DE                     	if	0	;tblptru may be non-zero
  2249   0017DE                     	endif
  2250   0017DE  0008               	tblrd		*
  2251   0017E0  50F5               	movf	tablat,w,c
  2252   0017E2  0900               	iorlw	0
  2253   0017E4  A4D8               	btfss	status,2,c
  2254   0017E6  EFF7  F00B         	goto	u461
  2255   0017EA  EFF9  F00B         	goto	u460
  2256   0017EE                     u461:
  2257   0017EE  EFEA  F00B         	goto	l1895
  2258   0017F2                     u460:
  2259   0017F2  5003               	movf	strlen@a^0,w,c
  2260   0017F4  5C01               	subwf	strlen@s^0,w,c
  2261   0017F6  6E01               	movwf	?_strlen^0,c
  2262   0017F8  6A02               	clrf	(?_strlen+1)^0,c
  2263   0017FA  BE01               	btfsc	?_strlen^0,7,c
  2264   0017FC  0602               	decf	(?_strlen+1)^0,f,c
  2265   0017FE  0012               	return		;funcret
  2266   001800                     __end_of_strlen:
  2267                           	callstack 0
  2268                           
  2269 ;; *************** function _SetDireccionDestino *****************
  2270 ;; Defined at:
  2271 ;;		line 700 in file "drivers/scr/API_MRF24J40.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  direccion       2    0[COMRAM] unsigned short 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;		None
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  1    wreg      void 
  2278 ;; Registers used:
  2279 ;;		None
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2289 ;;Total ram usage:        2 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; Hardware stack levels required when called: 1
  2292 ;; This function calls:
  2293 ;;		Nothing
  2294 ;; This function is called by:
  2295 ;;		_main
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text6
  2300   0019E6                     __ptext6:
  2301                           	callstack 0
  2302   0019E6                     _SetDireccionDestino:
  2303                           	callstack 29
  2304   0019E6                     
  2305                           ;drivers/scr/API_MRF24J40.c: 702:     mrf24_data_out.destinity_address = direccion;
  2306   0019E6  C001  F054         	movff	SetDireccionDestino@direccion,_mrf24_data_out+2
  2307   0019EA  C002  F055         	movff	SetDireccionDestino@direccion+1,_mrf24_data_out+3
  2308   0019EE  0012               	return		;funcret
  2309   0019F0                     __end_of_SetDireccionDestino:
  2310                           	callstack 0
  2311                           
  2312 ;; *************** function _MRF24J40Init *****************
  2313 ;; Defined at:
  2314 ;;		line 499 in file "drivers/scr/API_MRF24J40.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  delay_time_o    9   16[COMRAM] struct .
  2319 ;;  lectura         1   15[COMRAM] unsigned char 
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      enum E3263
  2322 ;; Registers used:
  2323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;Total ram usage:       11 bytes
  2334 ;; Hardware stack levels used: 1
  2335 ;; Hardware stack levels required when called: 6
  2336 ;; This function calls:
  2337 ;;		_DelayInit
  2338 ;;		_DelayRead
  2339 ;;		_DelayReset
  2340 ;;		_GetLongAddr
  2341 ;;		_GetShortAddr
  2342 ;;		_InicializoPines
  2343 ;;		_InicializoVariables
  2344 ;;		_SetChannel
  2345 ;;		_SetDeviceAddress
  2346 ;;		_SetDeviceMACAddress
  2347 ;;		_SetLongAddr
  2348 ;;		_SetResetPin
  2349 ;;		_SetShortAddr
  2350 ;; This function is called by:
  2351 ;;		_main
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text7
  2356   00102A                     __ptext7:
  2357                           	callstack 0
  2358   00102A                     _MRF24J40Init:
  2359                           	callstack 24
  2360   00102A                     
  2361                           ;drivers/scr/API_MRF24J40.c: 501:     uint8_t lectura;;drivers/scr/API_MRF24J40.c: 502: 
      +                              delayNoBloqueanteData delay_time_out;;drivers/scr/API_MRF24J40.c: 503:     DelayInit
      +                          (&delay_time_out, 100);
  2362   00102A  0E11               	movlw	low MRF24J40Init@delay_time_out
  2363   00102C  6E01               	movwf	DelayInit@delay^0,c
  2364   00102E  0E64               	movlw	100
  2365   001030  6E02               	movwf	DelayInit@duration^0,c
  2366   001032  0E00               	movlw	0
  2367   001034  6E03               	movwf	(DelayInit@duration+1)^0,c
  2368   001036  0E00               	movlw	0
  2369   001038  6E04               	movwf	(DelayInit@duration+2)^0,c
  2370   00103A  0E00               	movlw	0
  2371   00103C  6E05               	movwf	(DelayInit@duration+3)^0,c
  2372   00103E  EC2D  F00C         	call	_DelayInit	;wreg free
  2373   001042                     
  2374                           ;drivers/scr/API_MRF24J40.c: 504:     InicializoVariables();
  2375   001042  EC8B  F00A         	call	_InicializoVariables	;wreg free
  2376   001046                     
  2377                           ;drivers/scr/API_MRF24J40.c: 505:     InicializoPines();
  2378   001046  EC8A  F00C         	call	_InicializoPines	;wreg free
  2379   00104A                     
  2380                           ;drivers/scr/API_MRF24J40.c: 506:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2381   00104A  0E06               	movlw	6
  2382   00104C  6E0F               	movwf	??_MRF24J40Init^0,c
  2383   00104E  0E30               	movlw	48
  2384   001050                     u667:
  2385   001050  2EE8               	decfsz	wreg,f,c
  2386   001052  D7FE               	bra	u667
  2387   001054  2E0F               	decfsz	??_MRF24J40Init^0,f,c
  2388   001056  D7FC               	bra	u667
  2389   001058  F000 F000          	nop2	
  2390   00105C                     
  2391                           ;drivers/scr/API_MRF24J40.c: 507:     SetResetPin(1);
  2392   00105C  0E01               	movlw	1
  2393   00105E  ECCB  F00C         	call	_SetResetPin
  2394   001062                     
  2395                           ;drivers/scr/API_MRF24J40.c: 508:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2396   001062  0E06               	movlw	6
  2397   001064  6E0F               	movwf	??_MRF24J40Init^0,c
  2398   001066  0E30               	movlw	48
  2399   001068                     u677:
  2400   001068  2EE8               	decfsz	wreg,f,c
  2401   00106A  D7FE               	bra	u677
  2402   00106C  2E0F               	decfsz	??_MRF24J40Init^0,f,c
  2403   00106E  D7FC               	bra	u677
  2404   001070  F000 F000          	nop2	
  2405   001074                     
  2406                           ;drivers/scr/API_MRF24J40.c: 509:     SetShortAddr((0x2A), (0X04) | (0X02) | (0X01));
  2407   001074  0E07               	movlw	7
  2408   001076  6E03               	movwf	SetShortAddr@valor^0,c
  2409   001078  0E2A               	movlw	42
  2410   00107A  EC7A  F00C         	call	_SetShortAddr
  2411   00107E                     
  2412                           ;drivers/scr/API_MRF24J40.c: 510:     DelayReset(&delay_time_out);
  2413   00107E  0E11               	movlw	low MRF24J40Init@delay_time_out
  2414   001080  6E01               	movwf	DelayReset@delay^0,c
  2415   001082  EC67  F00C         	call	_DelayReset	;wreg free
  2416   001086                     l1925:
  2417                           
  2418                           ;drivers/scr/API_MRF24J40.c: 513:         lectura = GetShortAddr((0x2A));
  2419   001086  0E2A               	movlw	42
  2420   001088  EC54  F00C         	call	_GetShortAddr
  2421   00108C  6E10               	movwf	MRF24J40Init@lectura^0,c
  2422   00108E                     
  2423                           ;drivers/scr/API_MRF24J40.c: 514:   if(DelayRead(&delay_time_out))
  2424   00108E  0E11               	movlw	low MRF24J40Init@delay_time_out
  2425   001090  6E02               	movwf	DelayRead@delay^0,c
  2426   001092  ECE3  F00A         	call	_DelayRead	;wreg free
  2427   001096  0900               	iorlw	0
  2428   001098  B4D8               	btfsc	status,2,c
  2429   00109A  EF51  F008         	goto	u471
  2430   00109E  EF53  F008         	goto	u470
  2431   0010A2                     u471:
  2432   0010A2  EF55  F008         	goto	l1931
  2433   0010A6                     u470:
  2434   0010A6  EFF9  F008         	goto	l105
  2435   0010AA                     l1931:
  2436                           
  2437                           ;drivers/scr/API_MRF24J40.c: 516:     }while((lectura & ((0X04) | (0X02) | (0X01))) != (
      +                          0X00));
  2438   0010AA  C010  F00F         	movff	MRF24J40Init@lectura,??_MRF24J40Init
  2439   0010AE  0E07               	movlw	7
  2440   0010B0  160F               	andwf	??_MRF24J40Init^0,f,c
  2441   0010B2  A4D8               	btfss	status,2,c
  2442   0010B4  EF5E  F008         	goto	u481
  2443   0010B8  EF60  F008         	goto	u480
  2444   0010BC                     u481:
  2445   0010BC  EF43  F008         	goto	l1925
  2446   0010C0                     u480:
  2447   0010C0                     
  2448                           ;drivers/scr/API_MRF24J40.c: 517:     _delay((unsigned long)((1)*(16000000/4000.0)));;
  2449   0010C0  0E06               	movlw	6
  2450   0010C2  6E0F               	movwf	??_MRF24J40Init^0,c
  2451   0010C4  0E30               	movlw	48
  2452   0010C6                     u687:
  2453   0010C6  2EE8               	decfsz	wreg,f,c
  2454   0010C8  D7FE               	bra	u687
  2455   0010CA  2E0F               	decfsz	??_MRF24J40Init^0,f,c
  2456   0010CC  D7FC               	bra	u687
  2457   0010CE  F000 F000          	nop2	
  2458   0010D2                     
  2459                           ;drivers/scr/API_MRF24J40.c: 518:     SetShortAddr((0x0D), (0X01));
  2460   0010D2  0E01               	movlw	1
  2461   0010D4  6E03               	movwf	SetShortAddr@valor^0,c
  2462   0010D6  0E0D               	movlw	13
  2463   0010D8  EC7A  F00C         	call	_SetShortAddr
  2464   0010DC                     
  2465                           ;drivers/scr/API_MRF24J40.c: 519:     SetDeviceAddress();
  2466   0010DC  EC18  F00C         	call	_SetDeviceAddress	;wreg free
  2467   0010E0                     
  2468                           ;drivers/scr/API_MRF24J40.c: 520:     SetDeviceMACAddress();
  2469   0010E0  EC88  F00B         	call	_SetDeviceMACAddress	;wreg free
  2470   0010E4                     
  2471                           ;drivers/scr/API_MRF24J40.c: 521:     SetLongAddr((0x202), (0X80));
  2472   0010E4  0E02               	movlw	2
  2473   0010E6  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2474   0010E8  0E02               	movlw	2
  2475   0010EA  6E06               	movwf	SetLongAddr@reg_address^0,c
  2476   0010EC  0E80               	movlw	128
  2477   0010EE  6E08               	movwf	SetLongAddr@valor^0,c
  2478   0010F0  ECA9  F00B         	call	_SetLongAddr	;wreg free
  2479   0010F4                     
  2480                           ;drivers/scr/API_MRF24J40.c: 522:     SetLongAddr((0x203), (0XC0) | (0X38));
  2481   0010F4  0E02               	movlw	2
  2482   0010F6  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2483   0010F8  0E03               	movlw	3
  2484   0010FA  6E06               	movwf	SetLongAddr@reg_address^0,c
  2485   0010FC  0EF8               	movlw	248
  2486   0010FE  6E08               	movwf	SetLongAddr@valor^0,c
  2487   001100  ECA9  F00B         	call	_SetLongAddr	;wreg free
  2488   001104                     
  2489                           ;drivers/scr/API_MRF24J40.c: 523:  SetLongAddr((0x206), (0X80) | (0X10));
  2490   001104  0E02               	movlw	2
  2491   001106  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2492   001108  0E06               	movlw	6
  2493   00110A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2494   00110C  0E90               	movlw	144
  2495   00110E  6E08               	movwf	SetLongAddr@valor^0,c
  2496   001110  ECA9  F00B         	call	_SetLongAddr	;wreg free
  2497   001114                     
  2498                           ;drivers/scr/API_MRF24J40.c: 524:  SetLongAddr((0x207), (0X80));
  2499   001114  0E02               	movlw	2
  2500   001116  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2501   001118  0E07               	movlw	7
  2502   00111A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2503   00111C  0E80               	movlw	128
  2504   00111E  6E08               	movwf	SetLongAddr@valor^0,c
  2505   001120  ECA9  F00B         	call	_SetLongAddr	;wreg free
  2506   001124                     
  2507                           ;drivers/scr/API_MRF24J40.c: 525:  SetLongAddr((0x208), (0X10));
  2508   001124  0E02               	movlw	2
  2509   001126  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2510   001128  0E08               	movlw	8
  2511   00112A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2512   00112C  0E10               	movlw	16
  2513   00112E  6E08               	movwf	SetLongAddr@valor^0,c
  2514   001130  ECA9  F00B         	call	_SetLongAddr	;wreg free
  2515   001134                     
  2516                           ;drivers/scr/API_MRF24J40.c: 526:  SetLongAddr((0x220), (0X20) | (0X01));
  2517   001134  0E02               	movlw	2
  2518   001136  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2519   001138  0E20               	movlw	32
  2520   00113A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2521   00113C  0E21               	movlw	33
  2522   00113E  6E08               	movwf	SetLongAddr@valor^0,c
  2523   001140  ECA9  F00B         	call	_SetLongAddr	;wreg free
  2524   001144                     
  2525                           ;drivers/scr/API_MRF24J40.c: 527:     SetShortAddr((0x3A), (0X80));
  2526   001144  0E80               	movlw	128
  2527   001146  6E03               	movwf	SetShortAddr@valor^0,c
  2528   001148  0E3A               	movlw	58
  2529   00114A  EC7A  F00C         	call	_SetShortAddr
  2530   00114E                     
  2531                           ;drivers/scr/API_MRF24J40.c: 528:     SetShortAddr((0x3E), (0X40));
  2532   00114E  0E40               	movlw	64
  2533   001150  6E03               	movwf	SetShortAddr@valor^0,c
  2534   001152  0E3E               	movlw	62
  2535   001154  EC7A  F00C         	call	_SetShortAddr
  2536   001158                     
  2537                           ;drivers/scr/API_MRF24J40.c: 529:     SetShortAddr((0x3F), (0X04) | (0X02));
  2538   001158  0E06               	movlw	6
  2539   00115A  6E03               	movwf	SetShortAddr@valor^0,c
  2540   00115C  0E3F               	movlw	63
  2541   00115E  EC7A  F00C         	call	_SetShortAddr
  2542   001162                     
  2543                           ;drivers/scr/API_MRF24J40.c: 530:     SetShortAddr((0x18), (0X80) | (0X10) | (0X08));
  2544   001162  0E98               	movlw	152
  2545   001164  6E03               	movwf	SetShortAddr@valor^0,c
  2546   001166  0E18               	movlw	24
  2547   001168  EC7A  F00C         	call	_SetShortAddr
  2548   00116C                     
  2549                           ;drivers/scr/API_MRF24J40.c: 531:     SetShortAddr((0x2E), (0X80) | (0X10) | (0X04) | (0
      +                          X01));
  2550   00116C  0E95               	movlw	149
  2551   00116E  6E03               	movwf	SetShortAddr@valor^0,c
  2552   001170  0E2E               	movlw	46
  2553   001172  EC7A  F00C         	call	_SetShortAddr
  2554   001176                     
  2555                           ;drivers/scr/API_MRF24J40.c: 532:     DelayReset(&delay_time_out);
  2556   001176  0E11               	movlw	low MRF24J40Init@delay_time_out
  2557   001178  6E01               	movwf	DelayReset@delay^0,c
  2558   00117A  EC67  F00C         	call	_DelayReset	;wreg free
  2559   00117E                     l1965:
  2560                           
  2561                           ;drivers/scr/API_MRF24J40.c: 535:   lectura = GetLongAddr((0x20f));
  2562   00117E  0E02               	movlw	2
  2563   001180  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  2564   001182  0E0F               	movlw	15
  2565   001184  6E06               	movwf	GetLongAddr@reg_address^0,c
  2566   001186  EC66  F00B         	call	_GetLongAddr	;wreg free
  2567   00118A  6E10               	movwf	MRF24J40Init@lectura^0,c
  2568   00118C                     
  2569                           ;drivers/scr/API_MRF24J40.c: 536:   if(DelayRead(&delay_time_out))
  2570   00118C  0E11               	movlw	low MRF24J40Init@delay_time_out
  2571   00118E  6E02               	movwf	DelayRead@delay^0,c
  2572   001190  ECE3  F00A         	call	_DelayRead	;wreg free
  2573   001194  0900               	iorlw	0
  2574   001196  B4D8               	btfsc	status,2,c
  2575   001198  EFD0  F008         	goto	u491
  2576   00119C  EFD2  F008         	goto	u490
  2577   0011A0                     u491:
  2578   0011A0  EFD4  F008         	goto	l1971
  2579   0011A4                     u490:
  2580   0011A4  EFF9  F008         	goto	l105
  2581   0011A8                     l1971:
  2582                           
  2583                           ;drivers/scr/API_MRF24J40.c: 538:  }while(lectura != (0XA0));
  2584   0011A8  0EA0               	movlw	160
  2585   0011AA  1810               	xorwf	MRF24J40Init@lectura^0,w,c
  2586   0011AC  A4D8               	btfss	status,2,c
  2587   0011AE  EFDB  F008         	goto	u501
  2588   0011B2  EFDD  F008         	goto	u500
  2589   0011B6                     u501:
  2590   0011B6  EFBF  F008         	goto	l1965
  2591   0011BA                     u500:
  2592   0011BA                     
  2593                           ;drivers/scr/API_MRF24J40.c: 539:     SetShortAddr((0x32), (0X80) | (0X40) | (0X20) | (0
      +                          X10) | (0X04) | (0X01));
  2594   0011BA  0EF5               	movlw	245
  2595   0011BC  6E03               	movwf	SetShortAddr@valor^0,c
  2596   0011BE  0E32               	movlw	50
  2597   0011C0  EC7A  F00C         	call	_SetShortAddr
  2598                           
  2599                           ;drivers/scr/API_MRF24J40.c: 540:  SetShortAddr((0x12), (0X80) | (0X20) | (0X10) | (0X08
      +                          ) | (0X01));
  2600   0011C4  0EB9               	movlw	185
  2601   0011C6  6E03               	movwf	SetShortAddr@valor^0,c
  2602   0011C8  0E12               	movlw	18
  2603   0011CA  EC7A  F00C         	call	_SetShortAddr
  2604                           
  2605                           ;drivers/scr/API_MRF24J40.c: 541:   SetLongAddr((0x201), (0X02) | (0X01));
  2606   0011CE  0E02               	movlw	2
  2607   0011D0  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2608   0011D2  0E01               	movlw	1
  2609   0011D4  6E06               	movwf	SetLongAddr@reg_address^0,c
  2610   0011D6  0E03               	movlw	3
  2611   0011D8  6E08               	movwf	SetLongAddr@valor^0,c
  2612   0011DA  ECA9  F00B         	call	_SetLongAddr	;wreg free
  2613                           
  2614                           ;drivers/scr/API_MRF24J40.c: 542:  SetChannel();
  2615   0011DE  ECCA  F00B         	call	_SetChannel	;wreg free
  2616                           
  2617                           ;drivers/scr/API_MRF24J40.c: 543:  SetShortAddr((0x00), (0X00));
  2618   0011E2  0E00               	movlw	0
  2619   0011E4  6E03               	movwf	SetShortAddr@valor^0,c
  2620   0011E6  0E00               	movlw	0
  2621   0011E8  EC7A  F00C         	call	_SetShortAddr
  2622                           
  2623                           ;drivers/scr/API_MRF24J40.c: 544:  (void)GetShortAddr((0x31));
  2624   0011EC  0E31               	movlw	49
  2625   0011EE  EC54  F00C         	call	_GetShortAddr
  2626   0011F2                     l105:
  2627   0011F2  0012               	return		;funcret
  2628   0011F4                     __end_of_MRF24J40Init:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _SetDeviceMACAddress *****************
  2632 ;; Defined at:
  2633 ;;		line 670 in file "drivers/scr/API_MRF24J40.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  i               2    4[COMRAM] int 
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;Total ram usage:        2 bytes
  2652 ;; Hardware stack levels used: 1
  2653 ;; Hardware stack levels required when called: 4
  2654 ;; This function calls:
  2655 ;;		_SetShortAddr
  2656 ;; This function is called by:
  2657 ;;		_MRF24J40Init
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text8
  2662   001710                     __ptext8:
  2663                           	callstack 0
  2664   001710                     _SetDeviceMACAddress:
  2665                           	callstack 25
  2666   001710                     
  2667                           ;drivers/scr/API_MRF24J40.c: 672:     long_mac_address = EADR0;
  2668   001710  0E05               	movlw	5
  2669   001712  6E5C               	movwf	_long_mac_address^0,c
  2670                           
  2671                           ;drivers/scr/API_MRF24J40.c: 674:     for(int i = 0; i < 8; i++) {
  2672   001714  0E00               	movlw	0
  2673   001716  6E06               	movwf	(SetDeviceMACAddress@i+1)^0,c
  2674   001718  0E00               	movlw	0
  2675   00171A  6E05               	movwf	SetDeviceMACAddress@i^0,c
  2676   00171C                     l1865:
  2677                           
  2678                           ;drivers/scr/API_MRF24J40.c: 676:         SetShortAddr(long_mac_address++, mrf24_data_co
      +                          nfig.my_mac[i]);
  2679   00171C  5005               	movf	SetDeviceMACAddress@i^0,w,c
  2680   00171E  0F44               	addlw	low (_mrf24_data_config+20)
  2681   001720  6ED9               	movwf	fsr2l,c
  2682   001722  6ADA               	clrf	fsr2h,c
  2683   001724  50DF               	movf	indf2,w,c
  2684   001726  6E03               	movwf	SetShortAddr@valor^0,c
  2685   001728  505C               	movf	_long_mac_address^0,w,c
  2686   00172A  EC7A  F00C         	call	_SetShortAddr
  2687   00172E  2A5C               	incf	_long_mac_address^0,f,c
  2688   001730                     
  2689                           ;drivers/scr/API_MRF24J40.c: 677:     }
  2690   001730  4A05               	infsnz	SetDeviceMACAddress@i^0,f,c
  2691   001732  2A06               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  2692   001734  BE06               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  2693   001736  EFA6  F00B         	goto	u441
  2694   00173A  5006               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  2695   00173C  E109               	bnz	u440
  2696   00173E  0E08               	movlw	8
  2697   001740  5C05               	subwf	SetDeviceMACAddress@i^0,w,c
  2698   001742  A0D8               	btfss	status,0,c
  2699   001744  EFA6  F00B         	goto	u441
  2700   001748  EFA8  F00B         	goto	u440
  2701   00174C                     u441:
  2702   00174C  EF8E  F00B         	goto	l1865
  2703   001750                     u440:
  2704   001750  0012               	return		;funcret
  2705   001752                     __end_of_SetDeviceMACAddress:
  2706                           	callstack 0
  2707                           
  2708 ;; *************** function _SetDeviceAddress *****************
  2709 ;; Defined at:
  2710 ;;		line 656 in file "drivers/scr/API_MRF24J40.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2728 ;;Total ram usage:        0 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 4
  2731 ;; This function calls:
  2732 ;;		_SetShortAddr
  2733 ;; This function is called by:
  2734 ;;		_MRF24J40Init
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text9
  2739   001830                     __ptext9:
  2740                           	callstack 0
  2741   001830                     _SetDeviceAddress:
  2742                           	callstack 25
  2743   001830                     
  2744                           ;drivers/scr/API_MRF24J40.c: 658:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> (0X08)));
  2745   001830  504F               	movf	(_mrf24_data_config+31)^0,w,c
  2746   001832  6E03               	movwf	SetShortAddr@valor^0,c
  2747   001834  0E04               	movlw	4
  2748   001836  EC7A  F00C         	call	_SetShortAddr
  2749                           
  2750                           ;drivers/scr/API_MRF24J40.c: 659:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  2751   00183A  C04E  F003         	movff	_mrf24_data_config+30,SetShortAddr@valor
  2752   00183E  0E03               	movlw	3
  2753   001840  EC7A  F00C         	call	_SetShortAddr
  2754                           
  2755                           ;drivers/scr/API_MRF24J40.c: 660:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> (0X08)));
  2756   001844  504D               	movf	(_mrf24_data_config+29)^0,w,c
  2757   001846  6E03               	movwf	SetShortAddr@valor^0,c
  2758   001848  0E02               	movlw	2
  2759   00184A  EC7A  F00C         	call	_SetShortAddr
  2760                           
  2761                           ;drivers/scr/API_MRF24J40.c: 661:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  2762   00184E  C04C  F003         	movff	_mrf24_data_config+28,SetShortAddr@valor
  2763   001852  0E01               	movlw	1
  2764   001854  EC7A  F00C         	call	_SetShortAddr
  2765   001858  0012               	return		;funcret
  2766   00185A                     __end_of_SetDeviceAddress:
  2767                           	callstack 0
  2768                           
  2769 ;; *************** function _SetChannel *****************
  2770 ;; Defined at:
  2771 ;;		line 642 in file "drivers/scr/API_MRF24J40.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;		None
  2774 ;; Auto vars:     Size  Location     Type
  2775 ;;		None
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, status,2, status,0, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;Total ram usage:        1 bytes
  2790 ;; Hardware stack levels used: 1
  2791 ;; Hardware stack levels required when called: 5
  2792 ;; This function calls:
  2793 ;;		_SetLongAddr
  2794 ;;		_SetShortAddr
  2795 ;; This function is called by:
  2796 ;;		_MRF24J40Init
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text10
  2801   001794                     __ptext10:
  2802                           	callstack 0
  2803   001794                     _SetChannel:
  2804                           	callstack 24
  2805   001794                     
  2806                           ;drivers/scr/API_MRF24J40.c: 644:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  2807   001794  0E02               	movlw	2
  2808   001796  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  2809   001798  0E00               	movlw	0
  2810   00179A  6E06               	movwf	SetLongAddr@reg_address^0,c
  2811   00179C  C033  F008         	movff	_mrf24_data_config+3,SetLongAddr@valor
  2812   0017A0  ECA9  F00B         	call	_SetLongAddr	;wreg free
  2813                           
  2814                           ;drivers/scr/API_MRF24J40.c: 645:  SetShortAddr((0x36), (0X04));
  2815   0017A4  0E04               	movlw	4
  2816   0017A6  6E03               	movwf	SetShortAddr@valor^0,c
  2817   0017A8  0E36               	movlw	54
  2818   0017AA  EC7A  F00C         	call	_SetShortAddr
  2819                           
  2820                           ;drivers/scr/API_MRF24J40.c: 646:  SetShortAddr((0x36), (0X00));
  2821   0017AE  0E00               	movlw	0
  2822   0017B0  6E03               	movwf	SetShortAddr@valor^0,c
  2823   0017B2  0E36               	movlw	54
  2824   0017B4  EC7A  F00C         	call	_SetShortAddr
  2825   0017B8                     
  2826                           ;drivers/scr/API_MRF24J40.c: 647:  _delay((unsigned long)((1)*(16000000/4000.0)));;
  2827   0017B8  0E06               	movlw	6
  2828   0017BA  6E0B               	movwf	??_SetChannel^0,c
  2829   0017BC  0E30               	movlw	48
  2830   0017BE                     u697:
  2831   0017BE  2EE8               	decfsz	wreg,f,c
  2832   0017C0  D7FE               	bra	u697
  2833   0017C2  2E0B               	decfsz	??_SetChannel^0,f,c
  2834   0017C4  D7FC               	bra	u697
  2835   0017C6  F000 F000          	nop2	
  2836   0017CA  0012               	return		;funcret
  2837   0017CC                     __end_of_SetChannel:
  2838                           	callstack 0
  2839                           
  2840 ;; *************** function _InicializoVariables *****************
  2841 ;; Defined at:
  2842 ;;		line 554 in file "drivers/scr/API_MRF24J40.c"
  2843 ;; Parameters:    Size  Location     Type
  2844 ;;		None
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  i               2    1[COMRAM] int 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  1    wreg      void 
  2849 ;; Registers used:
  2850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2857 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2858 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2859 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2860 ;;Total ram usage:        3 bytes
  2861 ;; Hardware stack levels used: 1
  2862 ;; Hardware stack levels required when called: 1
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_MRF24J40Init
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text11
  2871   001516                     __ptext11:
  2872                           	callstack 0
  2873   001516                     _InicializoVariables:
  2874                           	callstack 28
  2875   001516                     
  2876                           ;drivers/scr/API_MRF24J40.c: 556:     for(int i = 0; i < 16; i++){
  2877   001516  0E00               	movlw	0
  2878   001518  6E03               	movwf	(InicializoVariables@i+1)^0,c
  2879   00151A  0E00               	movlw	0
  2880   00151C  6E02               	movwf	InicializoVariables@i^0,c
  2881   00151E                     l1795:
  2882                           
  2883                           ;drivers/scr/API_MRF24J40.c: 558:         if(i < 8)
  2884   00151E  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  2885   001520  EF9D  F00A         	goto	u400
  2886   001524  5003               	movf	(InicializoVariables@i+1)^0,w,c
  2887   001526  E107               	bnz	u401
  2888   001528  0E08               	movlw	8
  2889   00152A  5C02               	subwf	InicializoVariables@i^0,w,c
  2890   00152C  B0D8               	btfsc	status,0,c
  2891   00152E  EF9B  F00A         	goto	u401
  2892   001532  EF9D  F00A         	goto	u400
  2893   001536                     u401:
  2894   001536  EFAB  F00A         	goto	l114
  2895   00153A                     u400:
  2896   00153A                     
  2897                           ;drivers/scr/API_MRF24J40.c: 559:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  2898   00153A  5002               	movf	InicializoVariables@i^0,w,c
  2899   00153C  0F11               	addlw	low _default_mac_address
  2900   00153E  6E01               	movwf	??_InicializoVariables^0,c
  2901   001540  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  2902   001544                     	if	1	;There is more than 1 active tblptr byte
  2903   001544  0E10               	movlw	high __smallconst
  2904   001546  6EF7               	movwf	tblptrh,c
  2905   001548                     	endif
  2906   001548                     	if	0	;tblptru may be non-zero
  2907   001548                     	endif
  2908   001548                     	if	0	;tblptru may be non-zero
  2909   001548                     	endif
  2910   001548  5002               	movf	InicializoVariables@i^0,w,c
  2911   00154A  0F44               	addlw	low (_mrf24_data_config+20)
  2912   00154C  6ED9               	movwf	fsr2l,c
  2913   00154E  6ADA               	clrf	fsr2h,c
  2914   001550  0008               	tblrd		*
  2915   001552  CFF5 FFDF          	movff	tablat,indf2
  2916   001556                     l114:
  2917                           
  2918                           ;drivers/scr/API_MRF24J40.c: 560:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  2919   001556  5002               	movf	InicializoVariables@i^0,w,c
  2920   001558  0F01               	addlw	low _default_security_key
  2921   00155A  6E01               	movwf	??_InicializoVariables^0,c
  2922   00155C  C001  FFF6         	movff	??_InicializoVariables,tblptrl
  2923   001560                     	if	1	;There is more than 1 active tblptr byte
  2924   001560  0E10               	movlw	high __smallconst
  2925   001562  6EF7               	movwf	tblptrh,c
  2926   001564                     	endif
  2927   001564                     	if	0	;tblptru may be non-zero
  2928   001564                     	endif
  2929   001564                     	if	0	;tblptru may be non-zero
  2930   001564                     	endif
  2931   001564  5002               	movf	InicializoVariables@i^0,w,c
  2932   001566  0F34               	addlw	low (_mrf24_data_config+4)
  2933   001568  6ED9               	movwf	fsr2l,c
  2934   00156A  6ADA               	clrf	fsr2h,c
  2935   00156C  0008               	tblrd		*
  2936   00156E  CFF5 FFDF          	movff	tablat,indf2
  2937   001572                     
  2938                           ;drivers/scr/API_MRF24J40.c: 561:     }
  2939   001572  4A02               	infsnz	InicializoVariables@i^0,f,c
  2940   001574  2A03               	incf	(InicializoVariables@i+1)^0,f,c
  2941   001576  BE03               	btfsc	(InicializoVariables@i+1)^0,7,c
  2942   001578  EFC7  F00A         	goto	u411
  2943   00157C  5003               	movf	(InicializoVariables@i+1)^0,w,c
  2944   00157E  E109               	bnz	u410
  2945   001580  0E10               	movlw	16
  2946   001582  5C02               	subwf	InicializoVariables@i^0,w,c
  2947   001584  A0D8               	btfss	status,0,c
  2948   001586  EFC7  F00A         	goto	u411
  2949   00158A  EFC9  F00A         	goto	u410
  2950   00158E                     u411:
  2951   00158E  EF8F  F00A         	goto	l1795
  2952   001592                     u410:
  2953   001592                     
  2954                           ;drivers/scr/API_MRF24J40.c: 562:     mrf24_data_config.sequence_number = (0X01);
  2955   001592  0E01               	movlw	1
  2956   001594  6E32               	movwf	(_mrf24_data_config+2)^0,c
  2957                           
  2958                           ;drivers/scr/API_MRF24J40.c: 563:     mrf24_data_config.my_channel = CH_11;
  2959   001596  0E03               	movlw	3
  2960   001598  6E33               	movwf	(_mrf24_data_config+3)^0,c
  2961   00159A                     
  2962                           ;drivers/scr/API_MRF24J40.c: 564:     mrf24_data_config.get_new_msg = 0;
  2963   00159A  6A30               	clrf	_mrf24_data_config^0,c
  2964   00159C                     
  2965                           ;drivers/scr/API_MRF24J40.c: 565:     mrf24_data_config.put_new_msg = 0;
  2966   00159C  6A31               	clrf	(_mrf24_data_config+1)^0,c
  2967                           
  2968                           ;drivers/scr/API_MRF24J40.c: 566:     mrf24_data_config.my_panid = (0x1234);
  2969   00159E  0E12               	movlw	18
  2970   0015A0  6E4D               	movwf	(_mrf24_data_config+29)^0,c
  2971   0015A2  0E34               	movlw	52
  2972   0015A4  6E4C               	movwf	(_mrf24_data_config+28)^0,c
  2973                           
  2974                           ;drivers/scr/API_MRF24J40.c: 567:     mrf24_data_config.my_address = (0x1112);
  2975   0015A6  0E11               	movlw	17
  2976   0015A8  6E4F               	movwf	(_mrf24_data_config+31)^0,c
  2977   0015AA  0E12               	movlw	18
  2978   0015AC  6E4E               	movwf	(_mrf24_data_config+30)^0,c
  2979                           
  2980                           ;drivers/scr/API_MRF24J40.c: 568:     mrf24_data_in.source_address = (0X00);
  2981   0015AE  0E00               	movlw	0
  2982   0015B0  0100               	movlb	0	; () banked
  2983   0015B2  6F63               	movwf	(_mrf24_data_in+3)& (0+255),b
  2984   0015B4  0E00               	movlw	0
  2985   0015B6  6F62               	movwf	(_mrf24_data_in+2)& (0+255),b
  2986                           
  2987                           ;drivers/scr/API_MRF24J40.c: 569:     mrf24_data_in.source_panid = (0X00);
  2988   0015B8  0E00               	movlw	0
  2989   0015BA  6F61               	movwf	(_mrf24_data_in+1)& (0+255),b
  2990   0015BC  0E00               	movlw	0
  2991   0015BE  6F60               	movwf	_mrf24_data_in& (0+255),b
  2992   0015C0                     
  2993                           ; BSR set to: 0
  2994                           ;drivers/scr/API_MRF24J40.c: 570:     mrf24_data_in.tamano_mensaje = (0X00);
  2995   0015C0  6B64               	clrf	(_mrf24_data_in+4)& (0+255),b
  2996   0015C2                     
  2997                           ; BSR set to: 0
  2998                           ;drivers/scr/API_MRF24J40.c: 571:     mrf24_data_in.buffer_entrada[0] = (0X00);
  2999   0015C2  6B66               	clrf	(_mrf24_data_in+6)& (0+255),b
  3000   0015C4                     
  3001                           ; BSR set to: 0
  3002   0015C4  0012               	return		;funcret
  3003   0015C6                     __end_of_InicializoVariables:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function _InicializoPines *****************
  3007 ;; Defined at:
  3008 ;;		line 21 in file "drivers/scr/API_MRF24J40_port.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3026 ;;Total ram usage:        0 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 2
  3029 ;; This function calls:
  3030 ;;		_SetCSPin
  3031 ;;		_SetResetPin
  3032 ;;		_SetWakePin
  3033 ;; This function is called by:
  3034 ;;		_MRF24J40Init
  3035 ;; This function uses a non-reentrant model
  3036 ;;
  3037                           
  3038                           	psect	text12
  3039   001914                     __ptext12:
  3040                           	callstack 0
  3041   001914                     _InicializoPines:
  3042                           	callstack 27
  3043   001914                     
  3044                           ;drivers/scr/API_MRF24J40_port.c: 23:     TRISBbits.TRISB0 = 1;
  3045   001914  8093               	bsf	147,0,c	;volatile
  3046                           
  3047                           ;drivers/scr/API_MRF24J40_port.c: 24:     TRISCbits.TRISC6 = 0;
  3048   001916  9C94               	bcf	148,6,c	;volatile
  3049                           
  3050                           ;drivers/scr/API_MRF24J40_port.c: 25:     TRISCbits.TRISC7 = 0;
  3051   001918  9E94               	bcf	148,7,c	;volatile
  3052                           
  3053                           ;drivers/scr/API_MRF24J40_port.c: 26:     TRISDbits.TRISD4 = 0;
  3054   00191A  9895               	bcf	149,4,c	;volatile
  3055   00191C                     
  3056                           ;drivers/scr/API_MRF24J40_port.c: 27:     SetCSPin(1);
  3057   00191C  0E01               	movlw	1
  3058   00191E  ECE7  F00C         	call	_SetCSPin
  3059                           
  3060                           ;drivers/scr/API_MRF24J40_port.c: 28:     SetWakePin(1);
  3061   001922  0E01               	movlw	1
  3062   001924  ECC4  F00C         	call	_SetWakePin
  3063                           
  3064                           ;drivers/scr/API_MRF24J40_port.c: 29:     SetResetPin(0);
  3065   001928  0E00               	movlw	0
  3066   00192A  ECCB  F00C         	call	_SetResetPin
  3067   00192E  0012               	return		;funcret
  3068   001930                     __end_of_InicializoPines:
  3069                           	callstack 0
  3070                           
  3071 ;; *************** function _SetWakePin *****************
  3072 ;; Defined at:
  3073 ;;		line 49 in file "drivers/scr/API_MRF24J40_port.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  estado          1    wreg     _Bool 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  estado          1    0[COMRAM] _Bool 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;Total ram usage:        1 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 1
  3094 ;; This function calls:
  3095 ;;		Nothing
  3096 ;; This function is called by:
  3097 ;;		_InicializoPines
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text13
  3102   001988                     __ptext13:
  3103                           	callstack 0
  3104   001988                     _SetWakePin:
  3105                           	callstack 27
  3106                           
  3107                           ;incstack = 0
  3108                           ;SetWakePin@estado stored from wreg
  3109   001988  6E01               	movwf	SetWakePin@estado^0,c
  3110   00198A                     
  3111                           ;drivers/scr/API_MRF24J40_port.c: 51:     LATCbits.LATC7 = estado;
  3112   00198A  B001               	btfsc	SetWakePin@estado^0,0,c
  3113   00198C  D002               	bra	u45
  3114   00198E  9E8B               	bcf	139,7,c	;volatile
  3115   001990  D001               	bra	u46
  3116   001992                     u45:
  3117   001992  8E8B               	bsf	139,7,c	;volatile
  3118   001994                     u46:
  3119   001994  0012               	return		;funcret
  3120   001996                     __end_of_SetWakePin:
  3121                           	callstack 0
  3122                           
  3123 ;; *************** function _SetResetPin *****************
  3124 ;; Defined at:
  3125 ;;		line 60 in file "drivers/scr/API_MRF24J40_port.c"
  3126 ;; Parameters:    Size  Location     Type
  3127 ;;  estado          1    wreg     _Bool 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;  estado          1    0[COMRAM] _Bool 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;Total ram usage:        1 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 1
  3146 ;; This function calls:
  3147 ;;		Nothing
  3148 ;; This function is called by:
  3149 ;;		_InicializoPines
  3150 ;;		_MRF24J40Init
  3151 ;; This function uses a non-reentrant model
  3152 ;;
  3153                           
  3154                           	psect	text14
  3155   001996                     __ptext14:
  3156                           	callstack 0
  3157   001996                     _SetResetPin:
  3158                           	callstack 28
  3159                           
  3160                           ;incstack = 0
  3161                           ;SetResetPin@estado stored from wreg
  3162   001996  6E01               	movwf	SetResetPin@estado^0,c
  3163   001998                     
  3164                           ;drivers/scr/API_MRF24J40_port.c: 62:     LATDbits.LATD4 = estado;
  3165   001998  B001               	btfsc	SetResetPin@estado^0,0,c
  3166   00199A  D002               	bra	u55
  3167   00199C  988C               	bcf	140,4,c	;volatile
  3168   00199E  D001               	bra	u56
  3169   0019A0                     u55:
  3170   0019A0  888C               	bsf	140,4,c	;volatile
  3171   0019A2                     u56:
  3172   0019A2  0012               	return		;funcret
  3173   0019A4                     __end_of_SetResetPin:
  3174                           	callstack 0
  3175                           
  3176 ;; *************** function _GetShortAddr *****************
  3177 ;; Defined at:
  3178 ;;		line 595 in file "drivers/scr/API_MRF24J40.c"
  3179 ;; Parameters:    Size  Location     Type
  3180 ;;  reg_address     1    wreg     unsigned char 
  3181 ;; Auto vars:     Size  Location     Type
  3182 ;;  reg_address     1    3[COMRAM] unsigned char 
  3183 ;;  leido_spi       1    2[COMRAM] unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      unsigned char 
  3186 ;; Registers used:
  3187 ;;		wreg, status,2, status,0, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3197 ;;Total ram usage:        2 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 3
  3200 ;; This function calls:
  3201 ;;		_ReadByteSPIPort
  3202 ;;		_SetCSPin
  3203 ;;		_WriteByteSPIPort
  3204 ;; This function is called by:
  3205 ;;		_MRF24J40Init
  3206 ;;		_ReciboPaquete
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text15
  3211   0018A8                     __ptext15:
  3212                           	callstack 0
  3213   0018A8                     _GetShortAddr:
  3214                           	callstack 26
  3215                           
  3216                           ;incstack = 0
  3217                           ;GetShortAddr@reg_address stored from wreg
  3218   0018A8  6E04               	movwf	GetShortAddr@reg_address^0,c
  3219   0018AA                     
  3220                           ;drivers/scr/API_MRF24J40.c: 598:     reg_address = (uint8_t) (reg_address << (0X01)) & 
      +                          (0x7E);
  3221   0018AA  5004               	movf	GetShortAddr@reg_address^0,w,c
  3222   0018AC  2404               	addwf	GetShortAddr@reg_address^0,w,c
  3223   0018AE  0B7E               	andlw	126
  3224   0018B0  6E04               	movwf	GetShortAddr@reg_address^0,c
  3225   0018B2                     
  3226                           ;drivers/scr/API_MRF24J40.c: 599:     SetCSPin(0);
  3227   0018B2  0E00               	movlw	0
  3228   0018B4  ECE7  F00C         	call	_SetCSPin
  3229   0018B8                     
  3230                           ;drivers/scr/API_MRF24J40.c: 600:     WriteByteSPIPort(reg_address);
  3231   0018B8  5004               	movf	GetShortAddr@reg_address^0,w,c
  3232   0018BA  ECF8  F00C         	call	_WriteByteSPIPort
  3233   0018BE                     
  3234                           ;drivers/scr/API_MRF24J40.c: 601:     leido_spi = ReadByteSPIPort();
  3235   0018BE  ECFD  F00C         	call	_ReadByteSPIPort	;wreg free
  3236   0018C2  6E03               	movwf	GetShortAddr@leido_spi^0,c
  3237   0018C4                     
  3238                           ;drivers/scr/API_MRF24J40.c: 602:     SetCSPin(1);
  3239   0018C4  0E01               	movlw	1
  3240   0018C6  ECE7  F00C         	call	_SetCSPin
  3241   0018CA                     
  3242                           ;drivers/scr/API_MRF24J40.c: 603:  return leido_spi;
  3243   0018CA  5003               	movf	GetShortAddr@leido_spi^0,w,c
  3244   0018CC  0012               	return		;funcret
  3245   0018CE                     __end_of_GetShortAddr:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _GetLongAddr *****************
  3249 ;; Defined at:
  3250 ;;		line 626 in file "drivers/scr/API_MRF24J40.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  reg_address     2    5[COMRAM] unsigned short 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  respuesta       1    9[COMRAM] unsigned char 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      unsigned char 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3265 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;Total ram usage:        5 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; Hardware stack levels required when called: 4
  3271 ;; This function calls:
  3272 ;;		_ReadByteSPIPort
  3273 ;;		_SetCSPin
  3274 ;;		_Write2ByteSPIPort
  3275 ;; This function is called by:
  3276 ;;		_MRF24J40Init
  3277 ;;		_ReciboPaquete
  3278 ;; This function uses a non-reentrant model
  3279 ;;
  3280                           
  3281                           	psect	text16
  3282   0016CC                     __ptext16:
  3283                           	callstack 0
  3284   0016CC                     _GetLongAddr:
  3285                           	callstack 25
  3286   0016CC                     
  3287                           ;drivers/scr/API_MRF24J40.c: 628:  uint8_t respuesta;;drivers/scr/API_MRF24J40.c: 629:  
      +                             reg_address = (reg_address << (0X05)) | (0X8000);
  3288   0016CC  C006  F008         	movff	GetLongAddr@reg_address,??_GetLongAddr
  3289   0016D0  C007  F009         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  3290   0016D4  0E05               	movlw	5
  3291   0016D6                     u455:
  3292   0016D6  90D8               	bcf	status,0,c
  3293   0016D8  3608               	rlcf	??_GetLongAddr^0,f,c
  3294   0016DA  3609               	rlcf	(??_GetLongAddr+1)^0,f,c
  3295   0016DC  2EE8               	decfsz	wreg,f,c
  3296   0016DE  EF6B  F00B         	goto	u455
  3297   0016E2  0E00               	movlw	0
  3298   0016E4  1008               	iorwf	??_GetLongAddr^0,w,c
  3299   0016E6  6E06               	movwf	GetLongAddr@reg_address^0,c
  3300   0016E8  0E80               	movlw	128
  3301   0016EA  1009               	iorwf	(??_GetLongAddr+1)^0,w,c
  3302   0016EC  6E07               	movwf	(GetLongAddr@reg_address+1)^0,c
  3303   0016EE                     
  3304                           ;drivers/scr/API_MRF24J40.c: 630:     SetCSPin(0);
  3305   0016EE  0E00               	movlw	0
  3306   0016F0  ECE7  F00C         	call	_SetCSPin
  3307   0016F4                     
  3308                           ;drivers/scr/API_MRF24J40.c: 631:     Write2ByteSPIPort(reg_address);
  3309   0016F4  C006  F004         	movff	GetLongAddr@reg_address,Write2ByteSPIPort@dato
  3310   0016F8  C007  F005         	movff	GetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  3311   0016FC  ECD9  F00C         	call	_Write2ByteSPIPort	;wreg free
  3312   001700                     
  3313                           ;drivers/scr/API_MRF24J40.c: 632:  respuesta = ReadByteSPIPort();
  3314   001700  ECFD  F00C         	call	_ReadByteSPIPort	;wreg free
  3315   001704  6E0A               	movwf	GetLongAddr@respuesta^0,c
  3316   001706                     
  3317                           ;drivers/scr/API_MRF24J40.c: 633:     SetCSPin(1);
  3318   001706  0E01               	movlw	1
  3319   001708  ECE7  F00C         	call	_SetCSPin
  3320   00170C                     
  3321                           ;drivers/scr/API_MRF24J40.c: 634:  return respuesta;
  3322   00170C  500A               	movf	GetLongAddr@respuesta^0,w,c
  3323   00170E  0012               	return		;funcret
  3324   001710                     __end_of_GetLongAddr:
  3325                           	callstack 0
  3326                           
  3327 ;; *************** function _ReadByteSPIPort *****************
  3328 ;; Defined at:
  3329 ;;		line 102 in file "drivers/scr/API_MRF24J40_port.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      unsigned char 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; Hardware stack levels required when called: 2
  3350 ;; This function calls:
  3351 ;;		_SPIRead
  3352 ;; This function is called by:
  3353 ;;		_GetShortAddr
  3354 ;;		_GetLongAddr
  3355 ;; This function uses a non-reentrant model
  3356 ;;
  3357                           
  3358                           	psect	text17
  3359   0019FA                     __ptext17:
  3360                           	callstack 0
  3361   0019FA                     _ReadByteSPIPort:
  3362                           	callstack 26
  3363   0019FA                     
  3364                           ;drivers/scr/API_MRF24J40_port.c: 104:     return SPIRead();
  3365   0019FA  ECB0  F00C         	call	_SPIRead	;wreg free
  3366   0019FE  0012               	return		;funcret
  3367   001A00                     __end_of_ReadByteSPIPort:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function _SPIRead *****************
  3371 ;; Defined at:
  3372 ;;		line 75 in file "drivers/scr/API_MSPI_port.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      unsigned char 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 1
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_ReadByteSPIPort
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text18
  3401   001960                     __ptext18:
  3402                           	callstack 0
  3403   001960                     _SPIRead:
  3404                           	callstack 26
  3405   001960                     
  3406                           ;drivers/scr/API_MSPI_port.c: 77:     SSPCON1bits.WCOL = 0;
  3407   001960  9EC6               	bcf	198,7,c	;volatile
  3408                           
  3409                           ;drivers/scr/API_MSPI_port.c: 78:     SSPBUF = (0X00);
  3410   001962  6AC9               	clrf	201,c	;volatile
  3411   001964                     l208:
  3412   001964  A0C7               	btfss	199,0,c	;volatile
  3413   001966  EFB7  F00C         	goto	u381
  3414   00196A  EFB9  F00C         	goto	u380
  3415   00196E                     u381:
  3416   00196E  EFB2  F00C         	goto	l208
  3417   001972                     u380:
  3418   001972                     
  3419                           ;drivers/scr/API_MSPI_port.c: 80:     return SSPBUF;
  3420   001972  50C9               	movf	201,w,c	;volatile
  3421   001974  0012               	return		;funcret
  3422   001976                     __end_of_SPIRead:
  3423                           	callstack 0
  3424                           
  3425 ;; *************** function _DelayReset *****************
  3426 ;; Defined at:
  3427 ;;		line 68 in file "drivers/scr/API_delay.c"
  3428 ;; Parameters:    Size  Location     Type
  3429 ;;  delay           1    0[COMRAM] PTR struct .
  3430 ;;		 -> MRF24J40Init@delay_time_out(9), 
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;		None
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3442 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;Total ram usage:        1 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 1
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_MRF24J40Init
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           
  3456                           	psect	text19
  3457   0018CE                     __ptext19:
  3458                           	callstack 0
  3459   0018CE                     _DelayReset:
  3460                           	callstack 28
  3461   0018CE                     
  3462                           ;drivers/scr/API_delay.c: 70:  delay->startTime = timeStamp;
  3463   0018CE  5001               	movf	DelayReset@delay^0,w,c
  3464   0018D0  6ED9               	movwf	fsr2l,c
  3465   0018D2  6ADA               	clrf	fsr2h,c
  3466   0018D4  C058  FFDE         	movff	_timeStamp,postinc2
  3467   0018D8  C059  FFDE         	movff	_timeStamp+1,postinc2
  3468   0018DC  C05A  FFDE         	movff	_timeStamp+2,postinc2
  3469   0018E0  C05B  FFDE         	movff	_timeStamp+3,postinc2
  3470   0018E4                     
  3471                           ;drivers/scr/API_delay.c: 71:  delay->running = 1;
  3472   0018E4  5001               	movf	DelayReset@delay^0,w,c
  3473   0018E6  6ED9               	movwf	fsr2l,c
  3474   0018E8  6ADA               	clrf	fsr2h,c
  3475   0018EA  0E08               	movlw	8
  3476   0018EC  26D9               	addwf	fsr2l,f,c
  3477   0018EE  0E01               	movlw	1
  3478   0018F0  6EDF               	movwf	indf2,c
  3479   0018F2  0012               	return		;funcret
  3480   0018F4                     __end_of_DelayReset:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _DelayRead *****************
  3484 ;; Defined at:
  3485 ;;		line 34 in file "drivers/scr/API_delay.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  delay           1    1[COMRAM] PTR struct .
  3488 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;		None
  3491 ;; Return value:  Size  Location     Type
  3492 ;;                  1    wreg      _Bool 
  3493 ;; Registers used:
  3494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3500 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;Total ram usage:       13 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; Hardware stack levels required when called: 2
  3507 ;; This function calls:
  3508 ;;		_DelayIsRunning
  3509 ;; This function is called by:
  3510 ;;		_MRF24J40Init
  3511 ;;		_main
  3512 ;;		_debounceFSM_update
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text20
  3517   0015C6                     __ptext20:
  3518                           	callstack 0
  3519   0015C6                     _DelayRead:
  3520                           	callstack 27
  3521   0015C6                     
  3522                           ;drivers/scr/API_delay.c: 36:  if(DelayIsRunning(delay) == 0) {
  3523   0015C6  C002  F001         	movff	DelayRead@delay,DelayIsRunning@delay
  3524   0015CA  ECD2  F00C         	call	_DelayIsRunning	;wreg free
  3525   0015CE  0900               	iorlw	0
  3526   0015D0  A4D8               	btfss	status,2,c
  3527   0015D2  EFED  F00A         	goto	u421
  3528   0015D6  EFEF  F00A         	goto	u420
  3529   0015DA                     u421:
  3530   0015DA  EF03  F00B         	goto	l1843
  3531   0015DE                     u420:
  3532   0015DE                     
  3533                           ;drivers/scr/API_delay.c: 38:   delay->startTime = timeStamp;
  3534   0015DE  5002               	movf	DelayRead@delay^0,w,c
  3535   0015E0  6ED9               	movwf	fsr2l,c
  3536   0015E2  6ADA               	clrf	fsr2h,c
  3537   0015E4  C058  FFDE         	movff	_timeStamp,postinc2
  3538   0015E8  C059  FFDE         	movff	_timeStamp+1,postinc2
  3539   0015EC  C05A  FFDE         	movff	_timeStamp+2,postinc2
  3540   0015F0  C05B  FFDE         	movff	_timeStamp+3,postinc2
  3541   0015F4                     
  3542                           ;drivers/scr/API_delay.c: 39:   delay->running = 1;
  3543   0015F4  5002               	movf	DelayRead@delay^0,w,c
  3544   0015F6  6ED9               	movwf	fsr2l,c
  3545   0015F8  6ADA               	clrf	fsr2h,c
  3546   0015FA  0E08               	movlw	8
  3547   0015FC  26D9               	addwf	fsr2l,f,c
  3548   0015FE  0E01               	movlw	1
  3549   001600  6EDF               	movwf	indf2,c
  3550                           
  3551                           ;drivers/scr/API_delay.c: 40:  } else {
  3552   001602  EF37  F00B         	goto	l1851
  3553   001606                     l1843:
  3554                           
  3555                           ;drivers/scr/API_delay.c: 42:   if((timeStamp - delay->startTime) >= delay->duration) {
  3556   001606  5002               	movf	DelayRead@delay^0,w,c
  3557   001608  6ED9               	movwf	fsr2l,c
  3558   00160A  6ADA               	clrf	fsr2h,c
  3559   00160C  0E04               	movlw	4
  3560   00160E  26D9               	addwf	fsr2l,f,c
  3561   001610  5002               	movf	DelayRead@delay^0,w,c
  3562   001612  6EE1               	movwf	fsr1l,c
  3563   001614  6AE2               	clrf	fsr1h,c
  3564   001616  CFE6 F007          	movff	postinc1,??_DelayRead+4
  3565   00161A  CFE6 F008          	movff	postinc1,??_DelayRead+5
  3566   00161E  CFE6 F009          	movff	postinc1,??_DelayRead+6
  3567   001622  CFE6 F00A          	movff	postinc1,??_DelayRead+7
  3568   001626  5007               	movf	(??_DelayRead+4)^0,w,c
  3569   001628  5C58               	subwf	_timeStamp^0,w,c
  3570   00162A  6E0B               	movwf	(??_DelayRead+8)^0,c
  3571   00162C  5008               	movf	(??_DelayRead+5)^0,w,c
  3572   00162E  5859               	subwfb	(_timeStamp+1)^0,w,c
  3573   001630  6E0C               	movwf	(??_DelayRead+9)^0,c
  3574   001632  5009               	movf	(??_DelayRead+6)^0,w,c
  3575   001634  585A               	subwfb	(_timeStamp+2)^0,w,c
  3576   001636  6E0D               	movwf	(??_DelayRead+10)^0,c
  3577   001638  500A               	movf	(??_DelayRead+7)^0,w,c
  3578   00163A  585B               	subwfb	(_timeStamp+3)^0,w,c
  3579   00163C  6E0E               	movwf	(??_DelayRead+11)^0,c
  3580   00163E  50DE               	movf	postinc2,w,c
  3581   001640  5C0B               	subwf	(??_DelayRead+8)^0,w,c
  3582   001642  50DE               	movf	postinc2,w,c
  3583   001644  580C               	subwfb	(??_DelayRead+9)^0,w,c
  3584   001646  50DE               	movf	postinc2,w,c
  3585   001648  580D               	subwfb	(??_DelayRead+10)^0,w,c
  3586   00164A  50DE               	movf	postinc2,w,c
  3587   00164C  580E               	subwfb	(??_DelayRead+11)^0,w,c
  3588   00164E  A0D8               	btfss	status,0,c
  3589   001650  EF2C  F00B         	goto	u431
  3590   001654  EF2E  F00B         	goto	u430
  3591   001658                     u431:
  3592   001658  EF37  F00B         	goto	l1851
  3593   00165C                     u430:
  3594   00165C                     
  3595                           ;drivers/scr/API_delay.c: 44:    delay->running = 0;
  3596   00165C  5002               	movf	DelayRead@delay^0,w,c
  3597   00165E  6ED9               	movwf	fsr2l,c
  3598   001660  6ADA               	clrf	fsr2h,c
  3599   001662  0E08               	movlw	8
  3600   001664  26D9               	addwf	fsr2l,f,c
  3601   001666  6ADF               	clrf	indf2,c
  3602   001668                     
  3603                           ;drivers/scr/API_delay.c: 45:    return 1;
  3604   001668  0E01               	movlw	1
  3605   00166A  EF38  F00B         	goto	l351
  3606   00166E                     l1851:
  3607                           
  3608                           ;drivers/scr/API_delay.c: 48:  return 0;
  3609   00166E  0E00               	movlw	0
  3610   001670                     l351:
  3611   001670  0012               	return		;funcret
  3612   001672                     __end_of_DelayRead:
  3613                           	callstack 0
  3614                           
  3615 ;; *************** function _DelayIsRunning *****************
  3616 ;; Defined at:
  3617 ;;		line 83 in file "drivers/scr/API_delay.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  delay           1    0[COMRAM] PTR struct .
  3620 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      _Bool 
  3625 ;; Registers used:
  3626 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3632 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;Total ram usage:        1 bytes
  3637 ;; Hardware stack levels used: 1
  3638 ;; Hardware stack levels required when called: 1
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_DelayRead
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text21
  3647   0019A4                     __ptext21:
  3648                           	callstack 0
  3649   0019A4                     _DelayIsRunning:
  3650                           	callstack 27
  3651   0019A4                     
  3652                           ;drivers/scr/API_delay.c: 85:  return delay->running;
  3653   0019A4  5001               	movf	DelayIsRunning@delay^0,w,c
  3654   0019A6  6ED9               	movwf	fsr2l,c
  3655   0019A8  6ADA               	clrf	fsr2h,c
  3656   0019AA  0E08               	movlw	8
  3657   0019AC  26D9               	addwf	fsr2l,f,c
  3658   0019AE  50DF               	movf	indf2,w,c
  3659   0019B0  0012               	return		;funcret
  3660   0019B2                     __end_of_DelayIsRunning:
  3661                           	callstack 0
  3662                           
  3663 ;; *************** function _DelayInit *****************
  3664 ;; Defined at:
  3665 ;;		line 22 in file "drivers/scr/API_delay.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  delay           1    0[COMRAM] PTR struct .
  3668 ;;		 -> main@delay_parpadeo(9), main@boton1(11), MRF24J40Init@delay_time_out(9), 
  3669 ;;  duration        4    1[COMRAM] unsigned long 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;		None
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3681 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;Total ram usage:        5 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; Hardware stack levels required when called: 1
  3688 ;; This function calls:
  3689 ;;		Nothing
  3690 ;; This function is called by:
  3691 ;;		_MRF24J40Init
  3692 ;;		_main
  3693 ;;		_debounceFSM_init
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text22
  3698   00185A                     __ptext22:
  3699                           	callstack 0
  3700   00185A                     _DelayInit:
  3701                           	callstack 27
  3702   00185A                     
  3703                           ;drivers/scr/API_delay.c: 24:  delay->duration = duration;
  3704   00185A  5001               	movf	DelayInit@delay^0,w,c
  3705   00185C  6ED9               	movwf	fsr2l,c
  3706   00185E  6ADA               	clrf	fsr2h,c
  3707   001860  0E04               	movlw	4
  3708   001862  26D9               	addwf	fsr2l,f,c
  3709   001864  C002  FFDE         	movff	DelayInit@duration,postinc2
  3710   001868  C003  FFDE         	movff	DelayInit@duration+1,postinc2
  3711   00186C  C004  FFDE         	movff	DelayInit@duration+2,postinc2
  3712   001870  C005  FFDE         	movff	DelayInit@duration+3,postinc2
  3713                           
  3714                           ;drivers/scr/API_delay.c: 25:  delay->running = 0;
  3715   001874  5001               	movf	DelayInit@delay^0,w,c
  3716   001876  6ED9               	movwf	fsr2l,c
  3717   001878  6ADA               	clrf	fsr2h,c
  3718   00187A  0E08               	movlw	8
  3719   00187C  26D9               	addwf	fsr2l,f,c
  3720   00187E  6ADF               	clrf	indf2,c
  3721   001880  0012               	return		;funcret
  3722   001882                     __end_of_DelayInit:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _EnviarDato *****************
  3726 ;; Defined at:
  3727 ;;		line 722 in file "drivers/scr/API_MRF24J40.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;		None
  3730 ;; Auto vars:     Size  Location     Type
  3731 ;;  i               1   15[COMRAM] char 
  3732 ;;  pos_memoria     1   16[COMRAM] unsigned char 
  3733 ;;  largo_cabece    1    0        unsigned char 
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3744 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3745 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3746 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3747 ;;Total ram usage:        7 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 5
  3750 ;; This function calls:
  3751 ;;		_SetLongAddr
  3752 ;;		_SetShortAddr
  3753 ;; This function is called by:
  3754 ;;		_main
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text23
  3759   001330                     __ptext23:
  3760                           	callstack 0
  3761   001330                     _EnviarDato:
  3762                           	callstack 25
  3763   001330                     
  3764                           ;drivers/scr/API_MRF24J40.c: 724:  uint8_t pos_memoria = 0;
  3765   001330  6A11               	clrf	EnviarDato@pos_memoria^0,c
  3766   001332                     
  3767                           ;drivers/scr/API_MRF24J40.c: 726:  SetLongAddr(pos_memoria++, largo_cabecera);
  3768   001332  0E00               	movlw	0
  3769   001334  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  3770   001336  0E00               	movlw	0
  3771   001338  6E06               	movwf	SetLongAddr@reg_address^0,c
  3772   00133A  0E08               	movlw	8
  3773   00133C  6E08               	movwf	SetLongAddr@valor^0,c
  3774   00133E  ECA9  F00B         	call	_SetLongAddr	;wreg free
  3775   001342  2A11               	incf	EnviarDato@pos_memoria^0,f,c
  3776   001344                     
  3777                           ;drivers/scr/API_MRF24J40.c: 727:  SetLongAddr(pos_memoria++, mrf24_data_out.largo_mensa
      +                          je + largo_cabecera);
  3778   001344  C011  F006         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  3779   001348  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3780   00134A  5056               	movf	(_mrf24_data_out+4)^0,w,c
  3781   00134C  0F08               	addlw	8
  3782   00134E  6E08               	movwf	SetLongAddr@valor^0,c
  3783   001350  ECA9  F00B         	call	_SetLongAddr	;wreg free
  3784   001354  2A11               	incf	EnviarDato@pos_memoria^0,f,c
  3785   001356                     
  3786                           ;drivers/scr/API_MRF24J40.c: 728:  SetLongAddr(pos_memoria++, (0X01)|(0X20)|(0X40));
  3787   001356  C011  F006         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  3788   00135A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3789   00135C  0E61               	movlw	97
  3790   00135E  6E08               	movwf	SetLongAddr@valor^0,c
  3791   001360  ECA9  F00B         	call	_SetLongAddr	;wreg free
  3792   001364  2A11               	incf	EnviarDato@pos_memoria^0,f,c
  3793   001366                     
  3794                           ;drivers/scr/API_MRF24J40.c: 729:  SetLongAddr(pos_memoria++, (0XC0)|(0X08));
  3795   001366  C011  F006         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  3796   00136A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3797   00136C  0EC8               	movlw	200
  3798   00136E  6E08               	movwf	SetLongAddr@valor^0,c
  3799   001370  ECA9  F00B         	call	_SetLongAddr	;wreg free
  3800   001374  2A11               	incf	EnviarDato@pos_memoria^0,f,c
  3801   001376                     
  3802                           ;drivers/scr/API_MRF24J40.c: 730:  SetLongAddr(pos_memoria++, mrf24_data_config.sequence
      +                          _number++);
  3803   001376  C011  F006         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  3804   00137A  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3805   00137C  EE20  F032         	lfsr	2,_mrf24_data_config+2
  3806   001380  50DF               	movf	indf2,w,c
  3807   001382  2ADF               	incf	indf2,f,c
  3808   001384  6E08               	movwf	SetLongAddr@valor^0,c
  3809   001386  ECA9  F00B         	call	_SetLongAddr	;wreg free
  3810   00138A  2A11               	incf	EnviarDato@pos_memoria^0,f,c
  3811   00138C                     
  3812                           ;drivers/scr/API_MRF24J40.c: 731:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_panid);
  3813   00138C  C011  F006         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  3814   001390  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3815   001392  C052  F008         	movff	_mrf24_data_out,SetLongAddr@valor
  3816   001396  ECA9  F00B         	call	_SetLongAddr	;wreg free
  3817   00139A  2A11               	incf	EnviarDato@pos_memoria^0,f,c
  3818   00139C                     
  3819                           ;drivers/scr/API_MRF24J40.c: 732:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_panid >> (0X08)));
  3820   00139C  C011  F006         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  3821   0013A0  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3822   0013A2  5053               	movf	(_mrf24_data_out+1)^0,w,c
  3823   0013A4  6E08               	movwf	SetLongAddr@valor^0,c
  3824   0013A6  ECA9  F00B         	call	_SetLongAddr	;wreg free
  3825   0013AA  2A11               	incf	EnviarDato@pos_memoria^0,f,c
  3826   0013AC                     
  3827                           ;drivers/scr/API_MRF24J40.c: 733:  SetLongAddr(pos_memoria++, (uint8_t) mrf24_data_out.d
      +                          estinity_address);
  3828   0013AC  C011  F006         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  3829   0013B0  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3830   0013B2  C054  F008         	movff	_mrf24_data_out+2,SetLongAddr@valor
  3831   0013B6  ECA9  F00B         	call	_SetLongAddr	;wreg free
  3832   0013BA  2A11               	incf	EnviarDato@pos_memoria^0,f,c
  3833   0013BC                     
  3834                           ;drivers/scr/API_MRF24J40.c: 734:  SetLongAddr(pos_memoria++, (uint8_t) (mrf24_data_out.
      +                          destinity_address >> (0X08)));
  3835   0013BC  C011  F006         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  3836   0013C0  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3837   0013C2  5055               	movf	(_mrf24_data_out+3)^0,w,c
  3838   0013C4  6E08               	movwf	SetLongAddr@valor^0,c
  3839   0013C6  ECA9  F00B         	call	_SetLongAddr	;wreg free
  3840   0013CA  2A11               	incf	EnviarDato@pos_memoria^0,f,c
  3841   0013CC                     
  3842                           ;drivers/scr/API_MRF24J40.c: 736:     for(int8_t i = 0; i < mrf24_data_out.largo_mensaje
      +                          ; i++) {
  3843   0013CC  6A10               	clrf	EnviarDato@i^0,c
  3844   0013CE  EFFA  F009         	goto	l2035
  3845   0013D2                     l2029:
  3846                           
  3847                           ;drivers/scr/API_MRF24J40.c: 738:   SetLongAddr(pos_memoria++, mrf24_data_out.buffer_sal
      +                          ida[i]);
  3848   0013D2  C011  F006         	movff	EnviarDato@pos_memoria,SetLongAddr@reg_address
  3849   0013D6  6A07               	clrf	(SetLongAddr@reg_address+1)^0,c
  3850   0013D8  5057               	movf	(_mrf24_data_out+5)^0,w,c
  3851   0013DA  2410               	addwf	EnviarDato@i^0,w,c
  3852   0013DC  6E0B               	movwf	??_EnviarDato^0,c
  3853   0013DE  C00B  FFF6         	movff	??_EnviarDato,tblptrl
  3854   0013E2                     	if	1	;There is more than 1 active tblptr byte
  3855   0013E2  0E10               	movlw	high __smallconst
  3856   0013E4  6EF7               	movwf	tblptrh,c
  3857   0013E6                     	endif
  3858   0013E6                     	if	0	;tblptru may be non-zero
  3859   0013E6                     	endif
  3860   0013E6                     	if	0	;tblptru may be non-zero
  3861   0013E6                     	endif
  3862   0013E6  0008               	tblrd		*
  3863   0013E8  CFF5 F008          	movff	tablat,SetLongAddr@valor
  3864   0013EC  ECA9  F00B         	call	_SetLongAddr	;wreg free
  3865   0013F0  2A11               	incf	EnviarDato@pos_memoria^0,f,c
  3866   0013F2                     
  3867                           ;drivers/scr/API_MRF24J40.c: 739:  }
  3868   0013F2  2A10               	incf	EnviarDato@i^0,f,c
  3869   0013F4                     l2035:
  3870   0013F4  5056               	movf	(_mrf24_data_out+4)^0,w,c
  3871   0013F6  6E0B               	movwf	??_EnviarDato^0,c
  3872   0013F8  6A0C               	clrf	(??_EnviarDato+1)^0,c
  3873   0013FA  C010  F00D         	movff	EnviarDato@i,??_EnviarDato+2
  3874   0013FE  6A0E               	clrf	(??_EnviarDato+3)^0,c
  3875   001400  BE0D               	btfsc	(??_EnviarDato+2)^0,7,c
  3876   001402  060E               	decf	(??_EnviarDato+3)^0,f,c
  3877   001404  500B               	movf	??_EnviarDato^0,w,c
  3878   001406  5C0D               	subwf	(??_EnviarDato+2)^0,w,c
  3879   001408  500E               	movf	(??_EnviarDato+3)^0,w,c
  3880   00140A  0A80               	xorlw	128
  3881   00140C  6E0F               	movwf	(??_EnviarDato+4)^0,c
  3882   00140E  500C               	movf	(??_EnviarDato+1)^0,w,c
  3883   001410  0A80               	xorlw	128
  3884   001412  580F               	subwfb	(??_EnviarDato+4)^0,w,c
  3885   001414  A0D8               	btfss	status,0,c
  3886   001416  EF0F  F00A         	goto	u511
  3887   00141A  EF11  F00A         	goto	u510
  3888   00141E                     u511:
  3889   00141E  EFE9  F009         	goto	l2029
  3890   001422                     u510:
  3891   001422                     
  3892                           ;drivers/scr/API_MRF24J40.c: 740:  SetShortAddr((0x1B), (0X04) | (0X01));
  3893   001422  0E05               	movlw	5
  3894   001424  6E03               	movwf	SetShortAddr@valor^0,c
  3895   001426  0E1B               	movlw	27
  3896   001428  EC7A  F00C         	call	_SetShortAddr
  3897   00142C  0012               	return		;funcret
  3898   00142E                     __end_of_EnviarDato:
  3899                           	callstack 0
  3900                           
  3901 ;; *************** function _SetShortAddr *****************
  3902 ;; Defined at:
  3903 ;;		line 580 in file "drivers/scr/API_MRF24J40.c"
  3904 ;; Parameters:    Size  Location     Type
  3905 ;;  reg_address     1    wreg     unsigned char 
  3906 ;;  valor           1    2[COMRAM] unsigned char 
  3907 ;; Auto vars:     Size  Location     Type
  3908 ;;  reg_address     1    3[COMRAM] unsigned char 
  3909 ;; Return value:  Size  Location     Type
  3910 ;;                  1    wreg      void 
  3911 ;; Registers used:
  3912 ;;		wreg, status,2, status,0, cstack
  3913 ;; Tracked objects:
  3914 ;;		On entry : 0/0
  3915 ;;		On exit  : 0/0
  3916 ;;		Unchanged: 0/0
  3917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3918 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;Total ram usage:        2 bytes
  3923 ;; Hardware stack levels used: 1
  3924 ;; Hardware stack levels required when called: 3
  3925 ;; This function calls:
  3926 ;;		_SetCSPin
  3927 ;;		_WriteByteSPIPort
  3928 ;; This function is called by:
  3929 ;;		_MRF24J40Init
  3930 ;;		_SetChannel
  3931 ;;		_SetDeviceAddress
  3932 ;;		_SetDeviceMACAddress
  3933 ;;		_EnviarDato
  3934 ;;		_ReciboPaquete
  3935 ;;		_EnviarDatoEncriptado
  3936 ;;		_EnviarComando
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text24
  3941   0018F4                     __ptext24:
  3942                           	callstack 0
  3943   0018F4                     _SetShortAddr:
  3944                           	callstack 26
  3945                           
  3946                           ;incstack = 0
  3947                           ;SetShortAddr@reg_address stored from wreg
  3948   0018F4  6E04               	movwf	SetShortAddr@reg_address^0,c
  3949   0018F6                     
  3950                           ;drivers/scr/API_MRF24J40.c: 582:     reg_address = (uint8_t) (reg_address << (0X01)) | 
      +                          (0x01);
  3951   0018F6  80D8               	bsf	status,0,c
  3952   0018F8  3604               	rlcf	SetShortAddr@reg_address^0,f,c
  3953   0018FA                     
  3954                           ;drivers/scr/API_MRF24J40.c: 583:     SetCSPin(0);
  3955   0018FA  0E00               	movlw	0
  3956   0018FC  ECE7  F00C         	call	_SetCSPin
  3957   001900                     
  3958                           ;drivers/scr/API_MRF24J40.c: 584:  WriteByteSPIPort(reg_address);
  3959   001900  5004               	movf	SetShortAddr@reg_address^0,w,c
  3960   001902  ECF8  F00C         	call	_WriteByteSPIPort
  3961   001906                     
  3962                           ;drivers/scr/API_MRF24J40.c: 585:  WriteByteSPIPort(valor);
  3963   001906  5003               	movf	SetShortAddr@valor^0,w,c
  3964   001908  ECF8  F00C         	call	_WriteByteSPIPort
  3965   00190C                     
  3966                           ;drivers/scr/API_MRF24J40.c: 586:     SetCSPin(1);
  3967   00190C  0E01               	movlw	1
  3968   00190E  ECE7  F00C         	call	_SetCSPin
  3969   001912  0012               	return		;funcret
  3970   001914                     __end_of_SetShortAddr:
  3971                           	callstack 0
  3972                           
  3973 ;; *************** function _SetLongAddr *****************
  3974 ;; Defined at:
  3975 ;;		line 611 in file "drivers/scr/API_MRF24J40.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  reg_address     2    5[COMRAM] unsigned short 
  3978 ;;  valor           1    7[COMRAM] unsigned char 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0, cstack
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3990 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;Total ram usage:        5 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; Hardware stack levels required when called: 4
  3997 ;; This function calls:
  3998 ;;		_SetCSPin
  3999 ;;		_Write2ByteSPIPort
  4000 ;;		_WriteByteSPIPort
  4001 ;; This function is called by:
  4002 ;;		_MRF24J40Init
  4003 ;;		_SetChannel
  4004 ;;		_EnviarDato
  4005 ;;		_ReciboPaquete
  4006 ;;		_EnviarDatoEncriptado
  4007 ;;		_EnviarComando
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text25
  4012   001752                     __ptext25:
  4013                           	callstack 0
  4014   001752                     _SetLongAddr:
  4015                           	callstack 25
  4016   001752                     
  4017                           ;drivers/scr/API_MRF24J40.c: 613:     reg_address = (reg_address << (0X05)) | (0X8010);
  4018   001752  C006  F009         	movff	SetLongAddr@reg_address,??_SetLongAddr
  4019   001756  C007  F00A         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  4020   00175A  0E05               	movlw	5
  4021   00175C                     u395:
  4022   00175C  90D8               	bcf	status,0,c
  4023   00175E  3609               	rlcf	??_SetLongAddr^0,f,c
  4024   001760  360A               	rlcf	(??_SetLongAddr+1)^0,f,c
  4025   001762  2EE8               	decfsz	wreg,f,c
  4026   001764  EFAE  F00B         	goto	u395
  4027   001768  0E10               	movlw	16
  4028   00176A  1009               	iorwf	??_SetLongAddr^0,w,c
  4029   00176C  6E06               	movwf	SetLongAddr@reg_address^0,c
  4030   00176E  0E80               	movlw	128
  4031   001770  100A               	iorwf	(??_SetLongAddr+1)^0,w,c
  4032   001772  6E07               	movwf	(SetLongAddr@reg_address+1)^0,c
  4033   001774                     
  4034                           ;drivers/scr/API_MRF24J40.c: 614:     SetCSPin(0);
  4035   001774  0E00               	movlw	0
  4036   001776  ECE7  F00C         	call	_SetCSPin
  4037   00177A                     
  4038                           ;drivers/scr/API_MRF24J40.c: 615:     Write2ByteSPIPort(reg_address);
  4039   00177A  C006  F004         	movff	SetLongAddr@reg_address,Write2ByteSPIPort@dato
  4040   00177E  C007  F005         	movff	SetLongAddr@reg_address+1,Write2ByteSPIPort@dato+1
  4041   001782  ECD9  F00C         	call	_Write2ByteSPIPort	;wreg free
  4042   001786                     
  4043                           ;drivers/scr/API_MRF24J40.c: 616:  WriteByteSPIPort(valor);
  4044   001786  5008               	movf	SetLongAddr@valor^0,w,c
  4045   001788  ECF8  F00C         	call	_WriteByteSPIPort
  4046   00178C                     
  4047                           ;drivers/scr/API_MRF24J40.c: 617:     SetCSPin(1);
  4048   00178C  0E01               	movlw	1
  4049   00178E  ECE7  F00C         	call	_SetCSPin
  4050   001792  0012               	return		;funcret
  4051   001794                     __end_of_SetLongAddr:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function _WriteByteSPIPort *****************
  4055 ;; Defined at:
  4056 ;;		line 80 in file "drivers/scr/API_MRF24J40_port.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  dato            1    wreg     unsigned char 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  dato            1    1[COMRAM] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4070 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;Total ram usage:        1 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; Hardware stack levels required when called: 2
  4077 ;; This function calls:
  4078 ;;		_SPIWriteByte
  4079 ;; This function is called by:
  4080 ;;		_SetShortAddr
  4081 ;;		_GetShortAddr
  4082 ;;		_SetLongAddr
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text26
  4087   0019F0                     __ptext26:
  4088                           	callstack 0
  4089   0019F0                     _WriteByteSPIPort:
  4090                           	callstack 26
  4091                           
  4092                           ;incstack = 0
  4093                           ;WriteByteSPIPort@dato stored from wreg
  4094   0019F0  6E02               	movwf	WriteByteSPIPort@dato^0,c
  4095   0019F2                     
  4096                           ;drivers/scr/API_MRF24J40_port.c: 82:     SPIWriteByte(dato);
  4097   0019F2  5002               	movf	WriteByteSPIPort@dato^0,w,c
  4098   0019F4  EC98  F00C         	call	_SPIWriteByte
  4099   0019F8  0012               	return		;funcret
  4100   0019FA                     __end_of_WriteByteSPIPort:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _Write2ByteSPIPort *****************
  4104 ;; Defined at:
  4105 ;;		line 91 in file "drivers/scr/API_MRF24J40_port.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  dato            2    3[COMRAM] unsigned short 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4123 ;;Total ram usage:        2 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 3
  4126 ;; This function calls:
  4127 ;;		_SPIWrite2Byte
  4128 ;; This function is called by:
  4129 ;;		_SetLongAddr
  4130 ;;		_GetLongAddr
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           	psect	text27
  4135   0019B2                     __ptext27:
  4136                           	callstack 0
  4137   0019B2                     _Write2ByteSPIPort:
  4138                           	callstack 25
  4139   0019B2                     
  4140                           ;drivers/scr/API_MRF24J40_port.c: 93:     SPIWrite2Byte(dato);
  4141   0019B2  C004  F002         	movff	Write2ByteSPIPort@dato,SPIWrite2Byte@dato
  4142   0019B6  C005  F003         	movff	Write2ByteSPIPort@dato+1,SPIWrite2Byte@dato+1
  4143   0019BA  ECE0  F00C         	call	_SPIWrite2Byte	;wreg free
  4144   0019BE  0012               	return		;funcret
  4145   0019C0                     __end_of_Write2ByteSPIPort:
  4146                           	callstack 0
  4147                           
  4148 ;; *************** function _SPIWrite2Byte *****************
  4149 ;; Defined at:
  4150 ;;		line 63 in file "drivers/scr/API_MSPI_port.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  dato            2    1[COMRAM] unsigned short 
  4153 ;; Auto vars:     Size  Location     Type
  4154 ;;		None
  4155 ;; Return value:  Size  Location     Type
  4156 ;;                  1    wreg      void 
  4157 ;; Registers used:
  4158 ;;		wreg, status,2, cstack
  4159 ;; Tracked objects:
  4160 ;;		On entry : 0/0
  4161 ;;		On exit  : 0/0
  4162 ;;		Unchanged: 0/0
  4163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;Total ram usage:        2 bytes
  4169 ;; Hardware stack levels used: 1
  4170 ;; Hardware stack levels required when called: 2
  4171 ;; This function calls:
  4172 ;;		_SPIWriteByte
  4173 ;; This function is called by:
  4174 ;;		_Write2ByteSPIPort
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text28
  4179   0019C0                     __ptext28:
  4180                           	callstack 0
  4181   0019C0                     _SPIWrite2Byte:
  4182                           	callstack 25
  4183   0019C0                     
  4184                           ;drivers/scr/API_MSPI_port.c: 65:     SPIWriteByte((uint8_t) (dato >> 8));
  4185   0019C0  5003               	movf	(SPIWrite2Byte@dato+1)^0,w,c
  4186   0019C2  EC98  F00C         	call	_SPIWriteByte
  4187                           
  4188                           ;drivers/scr/API_MSPI_port.c: 66:     SPIWriteByte((uint8_t) dato);
  4189   0019C6  5002               	movf	SPIWrite2Byte@dato^0,w,c
  4190   0019C8  EC98  F00C         	call	_SPIWriteByte
  4191   0019CC  0012               	return		;funcret
  4192   0019CE                     __end_of_SPIWrite2Byte:
  4193                           	callstack 0
  4194                           
  4195 ;; *************** function _SPIWriteByte *****************
  4196 ;; Defined at:
  4197 ;;		line 50 in file "drivers/scr/API_MSPI_port.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  dato            1    wreg     unsigned char 
  4200 ;; Auto vars:     Size  Location     Type
  4201 ;;  dato            1    0[COMRAM] unsigned char 
  4202 ;; Return value:  Size  Location     Type
  4203 ;;                  1    wreg      void 
  4204 ;; Registers used:
  4205 ;;		wreg
  4206 ;; Tracked objects:
  4207 ;;		On entry : 0/0
  4208 ;;		On exit  : 0/0
  4209 ;;		Unchanged: 0/0
  4210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4212 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4214 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;Total ram usage:        1 bytes
  4216 ;; Hardware stack levels used: 1
  4217 ;; Hardware stack levels required when called: 1
  4218 ;; This function calls:
  4219 ;;		Nothing
  4220 ;; This function is called by:
  4221 ;;		_WriteByteSPIPort
  4222 ;;		_SPIWrite2Byte
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           
  4226                           	psect	text29
  4227   001930                     __ptext29:
  4228                           	callstack 0
  4229   001930                     _SPIWriteByte:
  4230                           	callstack 26
  4231                           
  4232                           ;incstack = 0
  4233                           ;SPIWriteByte@dato stored from wreg
  4234   001930  6E01               	movwf	SPIWriteByte@dato^0,c
  4235   001932                     
  4236                           ;drivers/scr/API_MSPI_port.c: 52:     PIR1bits.SSPIF = 0;
  4237   001932  969E               	bcf	158,3,c	;volatile
  4238   001934                     
  4239                           ;drivers/scr/API_MSPI_port.c: 53:     SSPBUF = dato;
  4240   001934  C001  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  4241   001938                     l199:
  4242   001938  A69E               	btfss	158,3,c	;volatile
  4243   00193A  EFA1  F00C         	goto	u361
  4244   00193E  EFA3  F00C         	goto	u360
  4245   001942                     u361:
  4246   001942  EF9C  F00C         	goto	l199
  4247   001946                     u360:
  4248   001946  0012               	return		;funcret
  4249   001948                     __end_of_SPIWriteByte:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function _SetCSPin *****************
  4253 ;; Defined at:
  4254 ;;		line 38 in file "drivers/scr/API_MRF24J40_port.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  estado          1    wreg     _Bool 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  estado          1    0[COMRAM] _Bool 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;Total ram usage:        1 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 1
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_InicializoPines
  4279 ;;		_SetShortAddr
  4280 ;;		_GetShortAddr
  4281 ;;		_SetLongAddr
  4282 ;;		_GetLongAddr
  4283 ;; This function uses a non-reentrant model
  4284 ;;
  4285                           
  4286                           	psect	text30
  4287   0019CE                     __ptext30:
  4288                           	callstack 0
  4289   0019CE                     _SetCSPin:
  4290                           	callstack 27
  4291                           
  4292                           ;incstack = 0
  4293                           ;SetCSPin@estado stored from wreg
  4294   0019CE  6E01               	movwf	SetCSPin@estado^0,c
  4295   0019D0                     
  4296                           ;drivers/scr/API_MRF24J40_port.c: 40:     LATCbits.LATC6 = estado;
  4297   0019D0  B001               	btfsc	SetCSPin@estado^0,0,c
  4298   0019D2  D002               	bra	u375
  4299   0019D4  9C8B               	bcf	139,6,c	;volatile
  4300   0019D6  D001               	bra	u376
  4301   0019D8                     u375:
  4302   0019D8  8C8B               	bsf	139,6,c	;volatile
  4303   0019DA                     u376:
  4304   0019DA  0012               	return		;funcret
  4305   0019DC                     __end_of_SetCSPin:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _BoardInit *****************
  4309 ;; Defined at:
  4310 ;;		line 21 in file "hardware_config.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;		None
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;Total ram usage:        0 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 2
  4331 ;; This function calls:
  4332 ;;		_SPIInit
  4333 ;; This function is called by:
  4334 ;;		_main
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text31
  4339   001672                     __ptext31:
  4340                           	callstack 0
  4341   001672                     _BoardInit:
  4342                           	callstack 28
  4343   001672                     
  4344                           ;hardware_config.c: 23:     PORTA = 0;
  4345   001672  6A80               	clrf	128,c	;volatile
  4346                           
  4347                           ;hardware_config.c: 24:     PORTB = 0;
  4348   001674  6A81               	clrf	129,c	;volatile
  4349                           
  4350                           ;hardware_config.c: 25:     PORTC = 0;
  4351   001676  6A82               	clrf	130,c	;volatile
  4352                           
  4353                           ;hardware_config.c: 26:     PORTD = 0;
  4354   001678  6A83               	clrf	131,c	;volatile
  4355                           
  4356                           ;hardware_config.c: 27:     PORTE = 0;
  4357   00167A  6A84               	clrf	132,c	;volatile
  4358                           
  4359                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  4360   00167C  8C93               	bsf	147,6,c	;volatile
  4361                           
  4362                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  4363   00167E  8E93               	bsf	147,7,c	;volatile
  4364                           
  4365                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  4366   001680  9496               	bcf	150,2,c	;volatile
  4367                           
  4368                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  4369   001682  9096               	bcf	150,0,c	;volatile
  4370                           
  4371                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  4372   001684  9296               	bcf	150,1,c	;volatile
  4373                           
  4374                           ;hardware_config.c: 35:     TRISCbits.TRISC2 = 1;
  4375   001686  8494               	bsf	148,2,c	;volatile
  4376                           
  4377                           ;hardware_config.c: 36:     LATEbits.LATE2 = 1;
  4378   001688  848D               	bsf	141,2,c	;volatile
  4379                           
  4380                           ;hardware_config.c: 37:     LATEbits.LATE0 = 1;
  4381   00168A  808D               	bsf	141,0,c	;volatile
  4382                           
  4383                           ;hardware_config.c: 38:     LATEbits.LATE1 = 1;
  4384   00168C  828D               	bsf	141,1,c	;volatile
  4385                           
  4386                           ;hardware_config.c: 41:     IPEN = 0;
  4387   00168E  9ED0               	bcf	4048,7,c	;volatile
  4388                           
  4389                           ;hardware_config.c: 42:  GIE = 1;
  4390   001690  8EF2               	bsf	4082,7,c	;volatile
  4391                           
  4392                           ;hardware_config.c: 43:  PEIE = 1;
  4393   001692  8CF2               	bsf	4082,6,c	;volatile
  4394                           
  4395                           ;hardware_config.c: 44:     INT0E = 0;
  4396   001694  98F2               	bcf	4082,4,c	;volatile
  4397                           
  4398                           ;hardware_config.c: 45:  RBIE = 0;
  4399   001696  96F2               	bcf	4082,3,c	;volatile
  4400                           
  4401                           ;hardware_config.c: 46:  T0IE = 0;
  4402   001698  9AF2               	bcf	4082,5,c	;volatile
  4403                           
  4404                           ;hardware_config.c: 47:  TMR1IE = 1;
  4405   00169A  809D               	bsf	3997,0,c	;volatile
  4406                           
  4407                           ;hardware_config.c: 48:  TMR2IE = 0;
  4408   00169C  929D               	bcf	3997,1,c	;volatile
  4409                           
  4410                           ;hardware_config.c: 49:  CCP1IE = 0;
  4411   00169E  949D               	bcf	3997,2,c	;volatile
  4412                           
  4413                           ;hardware_config.c: 50:  CCP2IE = 0;
  4414   0016A0  90A0               	bcf	4000,0,c	;volatile
  4415                           
  4416                           ;hardware_config.c: 51:  EEIE = 0;
  4417   0016A2  98A0               	bcf	4000,4,c	;volatile
  4418                           
  4419                           ;hardware_config.c: 52:  SSPIE = 0;
  4420   0016A4  969D               	bcf	3997,3,c	;volatile
  4421                           
  4422                           ;hardware_config.c: 53:  BCLIE = 0;
  4423   0016A6  96A0               	bcf	4000,3,c	;volatile
  4424                           
  4425                           ;hardware_config.c: 54:  ADIE = 0;
  4426   0016A8  9C9D               	bcf	3997,6,c	;volatile
  4427                           
  4428                           ;hardware_config.c: 55:  RBIE = 0;
  4429   0016AA  96F2               	bcf	4082,3,c	;volatile
  4430                           
  4431                           ;hardware_config.c: 56:  RCIE = 0;
  4432   0016AC  9A9D               	bcf	3997,5,c	;volatile
  4433   0016AE                     
  4434                           ;hardware_config.c: 57:     OSCCON = 0b01110010;
  4435   0016AE  0E72               	movlw	114
  4436   0016B0  6ED3               	movwf	211,c	;volatile
  4437                           
  4438                           ;hardware_config.c: 58:     OSCTUNE = 0b11011111;
  4439   0016B2  0EDF               	movlw	223
  4440   0016B4  6E9B               	movwf	155,c	;volatile
  4441   0016B6                     
  4442                           ;hardware_config.c: 59:     RBPU = 1;
  4443   0016B6  8EF1               	bsf	4081,7,c	;volatile
  4444   0016B8                     
  4445                           ;hardware_config.c: 62:     T1RD16 = 0;
  4446   0016B8  9ECD               	bcf	4045,7,c	;volatile
  4447   0016BA                     
  4448                           ;hardware_config.c: 63:  T1CKPS0 = 1;
  4449   0016BA  88CD               	bsf	4045,4,c	;volatile
  4450   0016BC                     
  4451                           ;hardware_config.c: 64:  T1CKPS1 = 1;
  4452   0016BC  8ACD               	bsf	4045,5,c	;volatile
  4453   0016BE                     
  4454                           ;hardware_config.c: 65:  T1SYNC = 0;
  4455   0016BE  94CD               	bcf	4045,2,c	;volatile
  4456   0016C0                     
  4457                           ;hardware_config.c: 66:  T1OSCEN = 0;
  4458   0016C0  96CD               	bcf	4045,3,c	;volatile
  4459   0016C2                     
  4460                           ;hardware_config.c: 67:  TMR1CS = 0;
  4461   0016C2  92CD               	bcf	4045,1,c	;volatile
  4462   0016C4                     
  4463                           ;hardware_config.c: 68:  TMR1ON = 1;
  4464   0016C4  80CD               	bsf	4045,0,c	;volatile
  4465   0016C6                     
  4466                           ;hardware_config.c: 71:     SPIInit();
  4467   0016C6  ECA4  F00C         	call	_SPIInit	;wreg free
  4468   0016CA  0012               	return		;funcret
  4469   0016CC                     __end_of_BoardInit:
  4470                           	callstack 0
  4471                           
  4472 ;; *************** function _SPIInit *****************
  4473 ;; Defined at:
  4474 ;;		line 30 in file "drivers/scr/API_MSPI_port.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;		None
  4477 ;; Auto vars:     Size  Location     Type
  4478 ;;		None
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  1    wreg      void 
  4481 ;; Registers used:
  4482 ;;		wreg, status,2
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;Total ram usage:        0 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 1
  4495 ;; This function calls:
  4496 ;;		Nothing
  4497 ;; This function is called by:
  4498 ;;		_BoardInit
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text32
  4503   001948                     __ptext32:
  4504                           	callstack 0
  4505   001948                     _SPIInit:
  4506                           	callstack 28
  4507   001948                     
  4508                           ;drivers/scr/API_MSPI_port.c: 32:     TRISCbits.TRISC3 = 0;
  4509   001948  9694               	bcf	148,3,c	;volatile
  4510                           
  4511                           ;drivers/scr/API_MSPI_port.c: 33:     TRISCbits.TRISC5 = 0;
  4512   00194A  9A94               	bcf	148,5,c	;volatile
  4513                           
  4514                           ;drivers/scr/API_MSPI_port.c: 34:     TRISCbits.TRISC4 = 1;
  4515   00194C  8894               	bsf	148,4,c	;volatile
  4516                           
  4517                           ;drivers/scr/API_MSPI_port.c: 35:     SSPSTATbits.SMP = 1;
  4518   00194E  8EC7               	bsf	199,7,c	;volatile
  4519                           
  4520                           ;drivers/scr/API_MSPI_port.c: 36:  SSPSTATbits.CKE = 1;
  4521   001950  8CC7               	bsf	199,6,c	;volatile
  4522   001952                     
  4523                           ;drivers/scr/API_MSPI_port.c: 37:     SSPCON1 = 0X00 | 0X01;
  4524   001952  0E01               	movlw	1
  4525   001954  6EC6               	movwf	198,c	;volatile
  4526   001956                     
  4527                           ;drivers/scr/API_MSPI_port.c: 38:  SSPCON1bits.WCOL = 1;
  4528   001956  8EC6               	bsf	198,7,c	;volatile
  4529   001958                     
  4530                           ;drivers/scr/API_MSPI_port.c: 39:  SSPCON1bits.SSPOV = 0;
  4531   001958  9CC6               	bcf	198,6,c	;volatile
  4532   00195A                     
  4533                           ;drivers/scr/API_MSPI_port.c: 40:  SSPCON1bits.SSPEN = 1;
  4534   00195A  8AC6               	bsf	198,5,c	;volatile
  4535   00195C                     
  4536                           ;drivers/scr/API_MSPI_port.c: 41:  SSPCON1bits.CKP = 0;
  4537   00195C  98C6               	bcf	198,4,c	;volatile
  4538   00195E  0012               	return		;funcret
  4539   001960                     __end_of_SPIInit:
  4540                           	callstack 0
  4541                           
  4542 ;; *************** function _isr *****************
  4543 ;; Defined at:
  4544 ;;		line 5 in file "drivers/inc/interrupciones.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;		None
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;		None
  4549 ;; Return value:  Size  Location     Type
  4550 ;;                  1    wreg      void 
  4551 ;; Registers used:
  4552 ;;		wreg, status,2, status,0
  4553 ;; Tracked objects:
  4554 ;;		On entry : 0/0
  4555 ;;		On exit  : 0/0
  4556 ;;		Unchanged: 0/0
  4557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;Total ram usage:        0 bytes
  4563 ;; Hardware stack levels used: 1
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		Interrupt level 2
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	intcode
  4572   000008                     __pintcode:
  4573                           	callstack 0
  4574   000008                     _isr:
  4575                           	callstack 24
  4576                           
  4577                           ;incstack = 0
  4578   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4579   00000A                     
  4580                           ;drivers/inc/interrupciones.c: 7:  if(TMR1IE && TMR1IF) {
  4581   00000A  A09D               	btfss	3997,0,c	;volatile
  4582   00000C  EF0A  F000         	goto	i2u34_41
  4583   000010  EF0C  F000         	goto	i2u34_40
  4584   000014                     i2u34_41:
  4585   000014  EF1E  F000         	goto	i2l338
  4586   000018                     i2u34_40:
  4587   000018  A09E               	btfss	3998,0,c	;volatile
  4588   00001A  EF11  F000         	goto	i2u35_41
  4589   00001E  EF13  F000         	goto	i2u35_40
  4590   000022                     i2u35_41:
  4591   000022  EF1E  F000         	goto	i2l338
  4592   000026                     i2u35_40:
  4593   000026                     
  4594                           ;drivers/inc/interrupciones.c: 9:   TMR1IF = 0;
  4595   000026  909E               	bcf	3998,0,c	;volatile
  4596   000028                     
  4597                           ;drivers/inc/interrupciones.c: 10:         TMR1L = 0XF7;
  4598   000028  0EF7               	movlw	247
  4599   00002A  6ECE               	movwf	206,c	;volatile
  4600                           
  4601                           ;drivers/inc/interrupciones.c: 11:   TMR1H = 0XFD;
  4602   00002C  0EFD               	movlw	253
  4603   00002E  6ECF               	movwf	207,c	;volatile
  4604   000030                     
  4605                           ;drivers/inc/interrupciones.c: 12:   timeStamp++;
  4606   000030  0E01               	movlw	1
  4607   000032  2658               	addwf	_timeStamp^0,f,c
  4608   000034  0E00               	movlw	0
  4609   000036  2259               	addwfc	(_timeStamp+1)^0,f,c
  4610   000038  225A               	addwfc	(_timeStamp+2)^0,f,c
  4611   00003A  225B               	addwfc	(_timeStamp+3)^0,f,c
  4612   00003C                     i2l338:
  4613   00003C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4614   00003E  0011               	retfie		f
  4615   000040                     __end_of_isr:
  4616                           	callstack 0
  4617                           
  4618                           	psect	rparam
  4619   000001                     ___rparam_used  equ	1
  4620   000000                     ___param_bank   equ	0
  4621   000000                     __Lparam        equ	__Lrparam
  4622   000000                     __Hparam        equ	__Hrparam
  4623                           
  4624                           	psect	temp
  4625   00005D                     btemp:
  4626                           	callstack 0
  4627   00005D                     	ds	1
  4628   00005D                     int$flags       set	btemp
  4629   00005E                     wtemp8          set	btemp+1
  4630   00005E                     ttemp5          set	btemp+1
  4631   000061                     ttemp6          set	btemp+4
  4632   000065                     ttemp7          set	btemp+8
  4633                           
  4634                           	psect	idloc
  4635                           
  4636                           ;Config register IDLOC0 @ 0x200000
  4637                           ;	unspecified, using default values
  4638   200000                     	org	2097152
  4639   200000  FF                 	db	255
  4640                           
  4641                           ;Config register IDLOC1 @ 0x200001
  4642                           ;	unspecified, using default values
  4643   200001                     	org	2097153
  4644   200001  FF                 	db	255
  4645                           
  4646                           ;Config register IDLOC2 @ 0x200002
  4647                           ;	unspecified, using default values
  4648   200002                     	org	2097154
  4649   200002  FF                 	db	255
  4650                           
  4651                           ;Config register IDLOC3 @ 0x200003
  4652                           ;	unspecified, using default values
  4653   200003                     	org	2097155
  4654   200003  FF                 	db	255
  4655                           
  4656                           ;Config register IDLOC4 @ 0x200004
  4657                           ;	unspecified, using default values
  4658   200004                     	org	2097156
  4659   200004  FF                 	db	255
  4660                           
  4661                           ;Config register IDLOC5 @ 0x200005
  4662                           ;	unspecified, using default values
  4663   200005                     	org	2097157
  4664   200005  FF                 	db	255
  4665                           
  4666                           ;Config register IDLOC6 @ 0x200006
  4667                           ;	unspecified, using default values
  4668   200006                     	org	2097158
  4669   200006  FF                 	db	255
  4670                           
  4671                           ;Config register IDLOC7 @ 0x200007
  4672                           ;	unspecified, using default values
  4673   200007                     	org	2097159
  4674   200007  FF                 	db	255
  4675                           
  4676                           	psect	config
  4677                           
  4678                           ; Padding undefined space
  4679   300000                     	org	3145728
  4680   300000  FF                 	db	255
  4681                           
  4682                           ;Config register CONFIG1H @ 0x300001
  4683                           ;	Oscillator Selection bits
  4684                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  4685                           ;	Fail-Safe Clock Monitor Enable bit
  4686                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4687                           ;	Internal/External Oscillator Switchover bit
  4688                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4689   300001                     	org	3145729
  4690   300001  08                 	db	8
  4691                           
  4692                           ;Config register CONFIG2L @ 0x300002
  4693                           ;	Power-up Timer Enable bit
  4694                           ;	PWRT = 0x1, unprogrammed default
  4695                           ;	Brown-out Reset Enable bits
  4696                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4697                           ;	Brown Out Reset Voltage bits
  4698                           ;	BORV = 22, VBOR set to 2.2 V nominal
  4699   300002                     	org	3145730
  4700   300002  11                 	db	17
  4701                           
  4702                           ;Config register CONFIG2H @ 0x300003
  4703                           ;	Watchdog Timer Enable bit
  4704                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  4705                           ;	Watchdog Timer Postscale Select bits
  4706                           ;	WDTPS = 8192, 1:8192
  4707   300003                     	org	3145731
  4708   300003  1A                 	db	26
  4709                           
  4710                           ; Padding undefined space
  4711   300004                     	org	3145732
  4712   300004  FF                 	db	255
  4713                           
  4714                           ;Config register CONFIG3H @ 0x300005
  4715                           ;	CCP2 MUX bit
  4716                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4717                           ;	PORTB A/D Enable bit
  4718                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4719                           ;	Low-Power Timer1 Oscillator Enable bit
  4720                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4721                           ;	HFINTOSC Fast Start-up
  4722                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  4723                           ;	MCLR Pin Enable bit
  4724                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  4725   300005                     	org	3145733
  4726   300005  01                 	db	1
  4727                           
  4728                           ;Config register CONFIG4L @ 0x300006
  4729                           ;	Stack Full/Underflow Reset Enable bit
  4730                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  4731                           ;	Single-Supply ICSP Enable bit
  4732                           ;	LVP = OFF, Single-Supply ICSP disabled
  4733                           ;	Extended Instruction Set Enable bit
  4734                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4735                           ;	Background Debugger Enable bit
  4736                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4737   300006                     	org	3145734
  4738   300006  80                 	db	128
  4739                           
  4740                           ; Padding undefined space
  4741   300007                     	org	3145735
  4742   300007  FF                 	db	255
  4743                           
  4744                           ;Config register CONFIG5L @ 0x300008
  4745                           ;	Code Protection Block 0
  4746                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  4747                           ;	Code Protection Block 1
  4748                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  4749                           ;	Code Protection Block 2
  4750                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  4751                           ;	Code Protection Block 3
  4752                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  4753   300008                     	org	3145736
  4754   300008  0F                 	db	15
  4755                           
  4756                           ;Config register CONFIG5H @ 0x300009
  4757                           ;	Boot Block Code Protection bit
  4758                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4759                           ;	Data EEPROM Code Protection bit
  4760                           ;	CPD = OFF, Data EEPROM not code-protected
  4761   300009                     	org	3145737
  4762   300009  C0                 	db	192
  4763                           
  4764                           ;Config register CONFIG6L @ 0x30000A
  4765                           ;	Write Protection Block 0
  4766                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  4767                           ;	Write Protection Block 1
  4768                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  4769                           ;	Write Protection Block 2
  4770                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  4771                           ;	Write Protection Block 3
  4772                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  4773   30000A                     	org	3145738
  4774   30000A  0F                 	db	15
  4775                           
  4776                           ;Config register CONFIG6H @ 0x30000B
  4777                           ;	Configuration Register Write Protection bit
  4778                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4779                           ;	Boot Block Write Protection bit
  4780                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  4781                           ;	Data EEPROM Write Protection bit
  4782                           ;	WRTD = OFF, Data EEPROM not write-protected
  4783   30000B                     	org	3145739
  4784   30000B  E0                 	db	224
  4785                           
  4786                           ;Config register CONFIG7L @ 0x30000C
  4787                           ;	unspecified, using default values
  4788                           ;	Table Read Protection Block 0
  4789                           ;	EBTR0 = 0x1, unprogrammed default
  4790                           ;	Table Read Protection Block 1
  4791                           ;	EBTR1 = 0x1, unprogrammed default
  4792                           ;	Table Read Protection Block 2
  4793                           ;	EBTR2 = 0x1, unprogrammed default
  4794                           ;	Table Read Protection Block 3
  4795                           ;	EBTR3 = 0x1, unprogrammed default
  4796   30000C                     	org	3145740
  4797   30000C  0F                 	db	15
  4798                           
  4799                           ;Config register CONFIG7H @ 0x30000D
  4800                           ;	Boot Block Table Read Protection bit
  4801                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4802   30000D                     	org	3145741
  4803   30000D  40                 	db	64
  4804                           tosu	equ	0xFFF
  4805                           tosh	equ	0xFFE
  4806                           tosl	equ	0xFFD
  4807                           stkptr	equ	0xFFC
  4808                           pclatu	equ	0xFFB
  4809                           pclath	equ	0xFFA
  4810                           pcl	equ	0xFF9
  4811                           tblptru	equ	0xFF8
  4812                           tblptrh	equ	0xFF7
  4813                           tblptrl	equ	0xFF6
  4814                           tablat	equ	0xFF5
  4815                           prodh	equ	0xFF4
  4816                           prodl	equ	0xFF3
  4817                           indf0	equ	0xFEF
  4818                           postinc0	equ	0xFEE
  4819                           postdec0	equ	0xFED
  4820                           preinc0	equ	0xFEC
  4821                           plusw0	equ	0xFEB
  4822                           fsr0h	equ	0xFEA
  4823                           fsr0l	equ	0xFE9
  4824                           wreg	equ	0xFE8
  4825                           indf1	equ	0xFE7
  4826                           postinc1	equ	0xFE6
  4827                           postdec1	equ	0xFE5
  4828                           preinc1	equ	0xFE4
  4829                           plusw1	equ	0xFE3
  4830                           fsr1h	equ	0xFE2
  4831                           fsr1l	equ	0xFE1
  4832                           bsr	equ	0xFE0
  4833                           indf2	equ	0xFDF
  4834                           postinc2	equ	0xFDE
  4835                           postdec2	equ	0xFDD
  4836                           preinc2	equ	0xFDC
  4837                           plusw2	equ	0xFDB
  4838                           fsr2h	equ	0xFDA
  4839                           fsr2l	equ	0xFD9
  4840                           status	equ	0xFD8

Data Sizes:
    Strings     16
    Constant    24
    Data        0
    BSS         101
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      92
    BANK0           160      0      56
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    debounceFSM_init@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    debounceFSM_update@antirrebote_boton_n	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), 

    DelayInit@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayIsRunning@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayRead@delay	PTR struct . size(1) Largest target is 11
		 -> main@boton1(COMRAM[11]), main@delay_parpadeo(COMRAM[9]), MRF24J40Init@delay_time_out(COMRAM[9]), 

    DelayReset@delay	PTR struct . size(1) Largest target is 9
		 -> MRF24J40Init@delay_time_out(COMRAM[9]), 

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    S412$buffer_salida	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    SetMensajeSalida@mensaje	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    sp__GetMensajeEntrada	PTR unsigned char  size(1) Largest target is 56
		 -> mrf24_data_in(BANK0[56]), mrf24_data_in$buffer_entrada(BANK0[50]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), STR_2(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _debounceFSM_update->_DelayRead
    _debounceFSM_init->_DelayInit
    _SetMensajeSalida->_strlen
    _MRF24J40Init->_DelayRead
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _GetShortAddr->_WriteByteSPIPort
    _GetLongAddr->_Write2ByteSPIPort
    _DelayRead->_DelayIsRunning
    _EnviarDato->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_Write2ByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte
    _Write2ByteSPIPort->_SPIWrite2Byte
    _SPIWrite2Byte->_SPIWriteByte

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _isr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _isr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0    4739
                                             25 COMRAM    22    22      0
                          _BoardInit
                          _DelayInit
                          _DelayRead
                         _EnviarDato
                       _MRF24J40Init
                _SetDireccionDestino
                   _SetMensajeSalida
                    _SetPANIDDestino
                   _debounceFSM_init
                 _debounceFSM_update
 ---------------------------------------------------------------------------------
 (1) _debounceFSM_update                                   4     2      2     610
                                             14 COMRAM     4     2      2
                          _DelayRead
                   _debounceFSM_init
 ---------------------------------------------------------------------------------
 (2) _debounceFSM_init                                     1     0      1     140
                                              5 COMRAM     1     0      1
                          _DelayInit
 ---------------------------------------------------------------------------------
 (1) _SetPANIDDestino                                      2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _SetMensajeSalida                                     1     0      1     137
                                              3 COMRAM     1     0      1
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _SetDireccionDestino                                  2     0      2      23
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                        11    11      0    2579
                                             14 COMRAM    11    11      0
                          _DelayInit
                          _DelayRead
                         _DelayReset
                        _GetLongAddr
                       _GetShortAddr
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  2     2      0     258
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     190
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           1     1      0     540
                                             10 COMRAM     1     1      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     198
                                              5 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                  _Write2ByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DelayReset                                           1     0      1      46
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _DelayRead                                           13    12      1     160
                                              1 COMRAM    13    12      1
                     _DelayIsRunning
 ---------------------------------------------------------------------------------
 (3) _DelayIsRunning                                       1     0      1      23
                                              0 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (3) _DelayInit                                            5     0      5      72
                                              0 COMRAM     5     0      5
 ---------------------------------------------------------------------------------
 (1) _EnviarDato                                           8     8      0     862
                                             10 COMRAM     7     7      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     190
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     350
                                              5 COMRAM     5     2      3
                           _SetCSPin
                  _Write2ByteSPIPort
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (3) _Write2ByteSPIPort                                    2     0      2      98
                                              3 COMRAM     2     0      2
                      _SPIWrite2Byte
 ---------------------------------------------------------------------------------
 (4) _SPIWrite2Byte                                        2     0      2      74
                                              1 COMRAM     2     0      2
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _DelayInit
   _DelayRead
     _DelayIsRunning
   _EnviarDato
     _SetLongAddr
       _SetCSPin
       _Write2ByteSPIPort
         _SPIWrite2Byte
           _SPIWriteByte
       _WriteByteSPIPort
         _SPIWriteByte
     _SetShortAddr
       _SetCSPin
       _WriteByteSPIPort
   _MRF24J40Init
     _DelayInit
     _DelayRead
     _DelayReset
     _GetLongAddr
       _ReadByteSPIPort
         _SPIRead
       _SetCSPin
       _Write2ByteSPIPort
     _GetShortAddr
       _ReadByteSPIPort
       _SetCSPin
       _WriteByteSPIPort
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _SetLongAddr
       _SetShortAddr
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr
   _SetDireccionDestino
   _SetMensajeSalida
     _strlen
   _SetPANIDDestino
   _debounceFSM_init
     _DelayInit
   _debounceFSM_update
     _DelayRead
     _debounceFSM_init

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      56     35.0%
BITBIGSFRh          98      0       0      0.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     47      92     97.9%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRlh         27      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     148      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Apr 20 07:03:03 2025

                          _SSPSTATbits 0FC7                                     l30 19DA  
                                   l33 1994                                     l42 19F8  
                                   l27 192E                                     l36 19A2  
                                   l45 19BE                                     l48 19FE  
                                   u45 1992                                     u46 1994  
                                   u55 19A0                                     u56 19A2  
                        ?_MRF24J40Init 0001                                    l121 18CC  
                                  l105 11F2                                    l202 1946  
                                  l114 1556                                    l130 17CA  
                                  l211 1974                                    l115 15C4  
                                  l124 1792                                    l205 19CC  
                                  l133 1858                                    l141 1986  
                                  l118 1912                                    l127 170E  
                                  l208 1964                                    l144 19EE  
                                  l240 146E                                    l153 142C  
                                  l322 16CA                                    l138 1750  
                                  l242 1474                                    l147 19E4  
                                  l244 1486                                    l351 1670  
                                  l360 19B0                                    l345 1880  
                                  l196 195E                                    l357 18F2  
                                  l199 1938                                    l367 182E  
                                  l377 132E                                    _GIE 7F97  
                                  u400 153A                                    u401 1536  
                                  u410 1592                                    u411 158E  
                                  u420 15DE                                    u500 11BA  
                                  u421 15DA                                    u501 11B6  
                                  u510 1422                                    u430 165C  
                                  u511 141E                                    u431 1658  
                                  u360 1946                                    u440 1750  
                                  u520 1208                                    u361 1942  
                                  u441 174C                                    u521 1204  
                                  u530 1234                                    u531 1230  
                                  u380 1972                                    u460 17F2  
                                  u540 1244                                    u620 14A8  
                                  u381 196E                                    u461 17EE  
                                  u541 1240                                    u621 14A2  
                                  u470 10A6                                    u550 1284  
                                  u630 14F0                                    u375 19D8  
                                  u455 16D6                                    u471 10A2  
                                  u551 1280                                    u631 14EC  
                                  u376 19DA                                    u480 10C0  
                                  u560 1294                                    u640 1502  
                                  u481 10BC                                    u561 1290  
                                  u641 14FA                                    u490 11A4  
                                  u570 12C8                                    u626 14AA  
                                  u395 175C                                    u491 11A0  
                                  u571 12C4                                    u658 1504  
                                  u667 1050                                    u677 1068  
                                  u687 10C6                                    u697 17BE  
                                  _isr 0008                                    wreg 0FE8  
                  __end_of_GetLongAddr 1710                                   l2001 1364  
                                 l2011 138C                                   l2003 1366  
                                 l2021 13BA                                   l2013 139A  
                                 l2005 1374                                   l2031 13F0  
                                 l2023 13BC                                   l2015 139C  
                                 l2007 1376                                   l2033 13F2  
                                 l2025 13CA                                   l2017 13AA  
                                 l2009 138A                                   l1065 17FE  
                                 l2041 11F4                                   l2035 13F4  
                                 l2027 13CC                                   l2019 13AC  
                                 l2051 1244                                   l2043 11F8  
                                 l1261 1956                                   l1421 16BA  
                                 l1413 1672                                   l2037 1422  
                                 l2029 13D2                                   l1093 198A  
                                 l2061 1264                                   l2053 1252  
                                 l2045 1208                                   l1263 1958  
                                 l1431 16C4                                   l1423 16BC  
                                 l1415 16AE                                   l2071 12A0  
                                 l2047 121A                                   l1265 195A  
                                 l1257 1948                                   l1433 16C6  
                                 l1425 16BE                                   l1417 16B6  
                                 l1097 1998                                   l2065 126A  
                                 l2049 1234                                   l1267 195C  
                                 l1259 1952                                   l1427 16C0  
                                 l1419 16B8                                   l2083 12B8  
                                 l2067 1284                                   l2059 1258  
                                 l1429 16C2                                   l2085 12C8  
                                 l2069 1294                                   l2077 12A6  
                                 l2333 14C2                                   l2261 142E  
                                 l2335 1306                                   l2087 12DA  
                                 l2095 12E8                                   l2271 1462  
                                 l2263 1436                                   l1721 1932  
                                 l1801 1576                                   l2089 12E2  
                                 l2097 132C                                   l2273 1476  
                                 l2265 143A                                   l1723 1934  
                                 l1811 15C2                                   l1803 1592  
                                 l2275 147E                                   l2283 1494  
                                 l2267 143E                                   l1725 19C0  
                                 l1733 19F2                                   l1741 1960  
                                 l1821 18AA                                   l1805 159A  
                                 l2277 1488                                   l2285 14D8  
                                 l2269 1456                                   l1751 185A  
                                 l1815 18CE                                   l1743 1972  
                                 l1831 18C4                                   l1823 18AA  
                                 l1807 159C                                   l1911 1042  
                                 l1903 1800                                   l2287 14F0  
                                 l1729 19D0                                   l1737 19B2  
                                 l1761 1906                                   l1841 15F4  
                                 l1817 18E4                                   l1833 18CA  
                                 l1825 18B2                                   l1809 15C0  
                                 l1921 1074                                   l1913 1046  
                                 l1905 180C                                   l1771 177A  
                                 l1763 190C                                   l1755 18F6  
                                 l1851 166E                                   l1843 1606  
                                 l1747 19FA                                   l1827 18B8  
                                 l1931 10AA                                   l1923 107E  
                                 l1915 104A                                   l1907 1826  
                                 l1773 1786                                   l1757 18FA  
                                 l1845 165C                                   l1837 15C6  
                                 l1829 18BE                                   l1941 10E4  
                                 l1933 10C0                                   l1925 1086  
                                 l1917 105C                                   l1909 102A  
                                 l1775 178C                                   l1767 1752  
                                 l1759 1900                                   l1847 1668  
                                 l1839 15DE                                   l1783 1914  
                                 l1855 1830                                   l1871 1734  
                                 l1951 1134                                   l1943 10F4  
                                 l1935 10D2                                   l1927 108E  
                                 l1919 1062                                   l1769 1774  
                                 l1881 1706                                   l1873 16CC  
                                 l1785 191C                                   l1865 171C  
                                 l1961 116C                                   l1953 1144  
                                 l1945 1104                                   l1937 10DC  
                                 l1779 19A4                                   l1883 170C  
                                 l1875 16EE                                   l1795 151E  
                                 l1867 172E                                   l1859 1710  
                                 l1971 11A8                                   l1963 1176  
                                 l1955 114E                                   l1947 1114  
                                 l1939 10E0                                   l1877 16F4  
                                 l1797 153A                                   l1789 1516  
                                 l1869 1730                                   l1973 11BA  
                                 l1965 117E                                   l1957 1158  
                                 l1949 1124                                   l1893 17CC  
                                 l1991 1332                                   l1879 1700  
                                 l1799 1572                                   l1887 1794  
                                 l1967 118C                                   l1959 1162  
                                 l1983 19E6                                   l1895 17D4  
                                 l1993 1342                                   l1889 17B8  
                                 l1897 17D6                                   l1977 1976  
                                 l1985 19DC                                   l1995 1344  
                                 l1987 1330                                   l1899 17F2  
                                 l1979 197A                                   l1997 1354  
                                 l1989 1332                                   l1999 1356  
                                 _ADIE 7CEE                                   ?_isr 0001  
                                 _EEIE 7D04                                   STR_1 1021  
                                 STR_2 1019                                   _T0IE 7F95  
                                 _IPEN 7E87                                   _PEIE 7F96  
                                 _RBIE 7F93                                   _RCIE 7CED  
                                 _RBPU 7F8F                           _SPIWriteByte 1930  
                                 _main 142E                        __end_of_SPIInit 1960  
                      __end_of_SPIRead 1976                                   fsr1h 0FE2  
                                 fsr2h 0FDA                                   indf2 0FDF  
                                 fsr1l 0FE1                                   fsr2l 0FD9  
                                 btemp 005D                             _DelayReset 18CE  
                          EnviarDato@i 0010                GetShortAddr@reg_address 0004  
                                 start 0040                      DelayInit@duration 0002  
                         ___param_bank 0000                       _long_mac_address 005C  
                    ??_ReadByteSPIPort 0001                                  ??_isr 0001  
                       ??_MRF24J40Init 000F            __end_of_InicializoVariables 15C6  
                        _SPIWrite2Byte 19C0                                  ?_main 0001  
                                _BCLIE 7D03                                  _INT0E 7F94  
                                i2l338 003C                   SetDeviceMACAddress@i 0005  
                                _TMR1H 0FCF                                  _TMR1L 0FCE  
                                _PORTA 0F80                                  _PORTB 0F81  
                                _PORTC 0F82                                  _PORTD 0F83  
                                _PORTE 0F84                                  _SSPIE 7CEB  
                 __end_of_GetShortAddr 18CE                        _InicializoPines 1914  
              SetShortAddr@reg_address 0004                    MRF24J40Init@lectura 0010  
                                tablat 0FF5                                  ttemp5 005E  
                                ttemp6 0061                                  ttemp7 0065  
                                status 0FD8                                  wtemp8 005E  
                           _EnviarDato 1330                    _SetDeviceMACAddress 1710  
                      __initialization 1882                           __end_of_main 1516  
                       ?_SPIWrite2Byte 0002                       __end_of_SetCSPin 19DC  
                          _GetLongAddr 16CC                          ??_SetLongAddr 0009  
                    ?_debounceFSM_init 0006                                 ??_main 001A  
                        __activetblptr 0002                          ??_SetResetPin 0001  
                   ??_debounceFSM_init 0007                   ?_SetDeviceMACAddress 0001  
                           _SetChannel 1794                      ?_SetDeviceAddress 0001  
                               _CCP1IE 7CEA                                 _CCP2IE 7D00  
                            ??_SPIInit 0001                              ??_SPIRead 0001  
                   ??_SetDeviceAddress 0005             MRF24J40Init@delay_time_out 0011  
                               _T1RD16 7E6F                                 _T1SYNC 7E6A  
                               i2l1701 0026                                 i2l1703 0028  
                               i2l1705 0030                                 i2l1697 000A  
                               i2l1699 0018                             _SetWakePin 1988  
                               _OSCCON 0FD3                                 _TMR1IE 7CE8  
                               _TMR1IF 7CF0                                 _TMR1CS 7E69  
                               _TMR2IE 7CE9                                 _TMR1ON 7E68  
         __end_of_default_security_key 1011                                 _SSPBUF 0FC9  
                          ?_DelayReset 0001                    DelayIsRunning@delay 0001  
                               clear_0 1888                                 clear_1 1894  
                               isa$std 0001                         SetCSPin@estado 0001  
              __end_of_InicializoPines 1930                                 _strlen 17CC  
                ??_SetDeviceMACAddress 0005                   InicializoVariables@i 0002  
                         __mediumconst 0000                      _mrf24_data_config 0030  
                               tblptrh 0FF7                                 tblptrl 0FF6  
                               tblptru 0FF8                    __end_of_SetLongAddr 1794  
                     ??_DelayIsRunning 0002                    __end_of_SetResetPin 19A4  
                GetShortAddr@leido_spi 0003                      __end_of_DelayInit 1882  
                    __end_of_DelayRead 1672                   __end_of_MRF24J40Init 11F4  
                     _SetMensajeSalida 1976                             __accesstop 0060  
              __end_of__initialization 189A                      __end_of_BoardInit 16CC  
                          ?_EnviarDato 0001                         DelayInit@delay 0001  
                        ___rparam_used 0001                         DelayRead@delay 0002  
                     SetWakePin@estado 0001                          ?_SetShortAddr 0003  
                       __pcstackCOMRAM 0001                        ??_SPIWrite2Byte 0004  
                          ?_SetChannel 0001             __end_of_debounceFSM_update 1330  
                           __pbssBANK0 0060            __end_of_SetDireccionDestino 19F0  
                          ?_SetWakePin 0001                              ?_SetCSPin 0001  
                      _ReadByteSPIPort 19FA                           _GetShortAddr 18A8  
         debounceFSM_update@estado_pin 0010                         ??_SetShortAddr 0004  
                    ??_SetPANIDDestino 0003                            _SetLongAddr 1752  
                              _T1CKPS0 7E6C                                _T1CKPS1 7E6D  
                              ?_strlen 0001                       ?_InicializoPines 0001  
                 _default_security_key 1001                                _T1OSCEN 7E6B  
                          _SetResetPin 1996                                i2u34_40 0018  
                              i2u34_41 0014                                i2u35_40 0026  
                              i2u35_41 0022                                _OSCTUNE 0F9B  
                              _SSPCON1 0FC6                                _SPIInit 1948  
                              _SPIRead 1960                             ??_SetCSPin 0001  
                    SetShortAddr@valor 0003                                __Hparam 0000  
                              __Lparam 0000                           __psmallconst 1000  
                              __pcinit 1882                           ?_GetLongAddr 0006  
                              __ramtop 1000                                __ptext0 142E  
                              __ptext1 11F4                                __ptext2 1800  
                              __ptext3 19DC                                __ptext4 1976  
                              __ptext5 17CC                                __ptext6 19E6  
                              __ptext7 102A                                __ptext8 1710  
                              __ptext9 1830                  EnviarDato@pos_memoria 0011  
                     _WriteByteSPIPort 19F0                __end_of_ReadByteSPIPort 1A00  
                 end_of_initialization 189A                          __Lmediumconst 0000  
                         ??_DelayReset 0002                    _default_mac_address 1011  
                              postinc0 0FEE                                postinc1 0FE6  
                              postinc2 0FDE                                strlen@a 0003  
                              strlen@s 0001                           _MRF24J40Init 102A  
             __end_of_SetMensajeSalida 1988                              _PORTBbits 0F81  
                            _PORTCbits 0F82                     __end_of_DelayReset 18F4  
                 WriteByteSPIPort@dato 0002                              _TRISBbits 0F93  
                            _TRISCbits 0F94                              _TRISDbits 0F95  
                            _TRISEbits 0F96                   __end_of_SetShortAddr 1914  
                Write2ByteSPIPort@dato 0004                   GetLongAddr@respuesta 000A  
                           main@boton1 0025                           ??_EnviarDato 000B  
                            _DelayInit 185A                              _DelayRead 15C6  
                            _BoardInit 1672                      _Write2ByteSPIPort 19B2  
          __end_of_SetDeviceMACAddress 1752                     ?_Write2ByteSPIPort 0004  
                       __end_of_strlen 1800                           ??_SetChannel 000B  
                  start_initialization 1882                     __end_of_EnviarDato 142E  
                  ??_Write2ByteSPIPort 0006                            __end_of_isr 0040  
                     ?_ReadByteSPIPort 0001                   SetPANIDDestino@panid 0001  
                      _SetPANIDDestino 19DC                          ?_SPIWriteByte 0001  
                         ??_SetWakePin 0001                             ?_DelayInit 0001  
                           ?_DelayRead 0002                             ?_BoardInit 0001  
                   _debounceFSM_update 11F4              __end_of_Write2ByteSPIPort 19C0  
                   __end_of_SetChannel 17CC                  __end_of_SPIWrite2Byte 19CE  
                  ?_debounceFSM_update 000F                           ?_SetLongAddr 0006  
                             ??_strlen 0003                     __end_of_SetWakePin 1996  
                         ?_SetResetPin 0001                            __pbssCOMRAM 0030  
              SetMensajeSalida@mensaje 0004                        DelayReset@delay 0001  
                             ?_SPIInit 0001                               ?_SPIRead 0001  
                       ??_SPIWriteByte 0001                   ??_debounceFSM_update 0011  
                     _debounceFSM_init 1800                       SPIWriteByte@dato 0001  
                     _SetDeviceAddress 1830                    _InicializoVariables 1516  
             __end_of_WriteByteSPIPort 19FA                              __pintcode 0008  
                    SetResetPin@estado 0001                            __smallconst 1000  
              __end_of_SetPANIDDestino 19E6                   ?_InicializoVariables 0001  
                     SetLongAddr@valor 0008                               _LATCbits 0F8B  
                             _LATDbits 0F8C                               _LATEbits 0F8D  
debounceFSM_update@antirrebote_boton_n 000F                            ??_DelayInit 0006  
                          ??_DelayRead 0003                            ??_BoardInit 0001  
                             _PIR1bits 0F9E                           _SetShortAddr 18F4  
                            _timeStamp 0058                     main@delay_parpadeo 001C  
                    ?_SetMensajeSalida 0004                  ??_InicializoVariables 0001  
                   ??_SetMensajeSalida 0005           SetDireccionDestino@direccion 0001  
                       _mrf24_data_out 0052                               _SetCSPin 19CE  
                             __Hrparam 0000                               __Lrparam 0000  
                 __end_of_SPIWriteByte 1948                       ?_SetPANIDDestino 0001  
                             __ptext10 1794                               __ptext11 1516  
                             __ptext20 15C6                               __ptext12 1914  
                             __ptext21 19A4                               __ptext13 1988  
                             __ptext30 19CE                               __ptext22 185A  
                             __ptext14 1996                               __ptext31 1672  
                             __ptext23 1330                               __ptext15 18A8  
                             __ptext32 1948                               __ptext24 18F4  
                             __ptext16 16CC                               __ptext25 1752  
                             __ptext17 19FA                               __ptext26 19F0  
                             __ptext18 1960                               __ptext27 19B2  
                             __ptext19 18CE                               __ptext28 19C0  
                             __ptext29 1930                         _DelayIsRunning 19A4  
                    ??_InicializoPines 0002                          ?_GetShortAddr 0001  
                             isa$xinst 0000                               int$flags 005D  
  debounceFSM_init@antirrebote_boton_n 0006               __end_of_debounceFSM_init 1830  
          __end_of_default_mac_address 1019                          _mrf24_data_in 0060  
             __end_of_SetDeviceAddress 185A                    _SetDireccionDestino 19E6  
                             intlevel2 0000                 __end_of_DelayIsRunning 19B2  
                       ??_GetShortAddr 0003                   ?_SetDireccionDestino 0001  
                    ?_WriteByteSPIPort 0001                          ??_GetLongAddr 0008  
                   ??_WriteByteSPIPort 0002                 GetLongAddr@reg_address 0006  
                          _SSPCON1bits 0FC6                      SPIWrite2Byte@dato 0002  
               SetLongAddr@reg_address 0006                        ?_DelayIsRunning 0001  
                ??_SetDireccionDestino 0003  
