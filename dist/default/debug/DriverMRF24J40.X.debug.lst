

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sun Mar 30 08:56:50 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 13/12/2024 GMT
    39                           ; 
    40                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F46K20 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F77                     SSPMSK          equ	3959	;# 
   114   000F78                     SLRCON          equ	3960	;# 
   115   000F79                     CM2CON1         equ	3961	;# 
   116   000F7A                     CM2CON0         equ	3962	;# 
   117   000F7B                     CM1CON0         equ	3963	;# 
   118   000F7C                     WPUB            equ	3964	;# 
   119   000F7D                     IOCB            equ	3965	;# 
   120   000F7E                     ANSEL           equ	3966	;# 
   121   000F7F                     ANSELH          equ	3967	;# 
   122   000F80                     PORTA           equ	3968	;# 
   123   000F81                     PORTB           equ	3969	;# 
   124   000F82                     PORTC           equ	3970	;# 
   125   000F83                     PORTD           equ	3971	;# 
   126   000F84                     PORTE           equ	3972	;# 
   127   000F89                     LATA            equ	3977	;# 
   128   000F8A                     LATB            equ	3978	;# 
   129   000F8B                     LATC            equ	3979	;# 
   130   000F8C                     LATD            equ	3980	;# 
   131   000F8D                     LATE            equ	3981	;# 
   132   000F92                     TRISA           equ	3986	;# 
   133   000F92                     DDRA            equ	3986	;# 
   134   000F93                     TRISB           equ	3987	;# 
   135   000F93                     DDRB            equ	3987	;# 
   136   000F94                     TRISC           equ	3988	;# 
   137   000F94                     DDRC            equ	3988	;# 
   138   000F95                     TRISD           equ	3989	;# 
   139   000F95                     DDRD            equ	3989	;# 
   140   000F96                     TRISE           equ	3990	;# 
   141   000F96                     DDRE            equ	3990	;# 
   142   000F9B                     OSCTUNE         equ	3995	;# 
   143   000F9D                     PIE1            equ	3997	;# 
   144   000F9E                     PIR1            equ	3998	;# 
   145   000F9F                     IPR1            equ	3999	;# 
   146   000FA0                     PIE2            equ	4000	;# 
   147   000FA1                     PIR2            equ	4001	;# 
   148   000FA2                     IPR2            equ	4002	;# 
   149   000FA6                     EECON1          equ	4006	;# 
   150   000FA7                     EECON2          equ	4007	;# 
   151   000FA8                     EEDATA          equ	4008	;# 
   152   000FA9                     EEADR           equ	4009	;# 
   153   000FAA                     EEADRH          equ	4010	;# 
   154   000FAB                     RCSTA           equ	4011	;# 
   155   000FAB                     RCSTA1          equ	4011	;# 
   156   000FAC                     TXSTA           equ	4012	;# 
   157   000FAC                     TXSTA1          equ	4012	;# 
   158   000FAD                     TXREG           equ	4013	;# 
   159   000FAD                     TXREG1          equ	4013	;# 
   160   000FAE                     RCREG           equ	4014	;# 
   161   000FAE                     RCREG1          equ	4014	;# 
   162   000FAF                     SPBRG           equ	4015	;# 
   163   000FAF                     SPBRG1          equ	4015	;# 
   164   000FB0                     SPBRGH          equ	4016	;# 
   165   000FB1                     T3CON           equ	4017	;# 
   166   000FB2                     TMR3            equ	4018	;# 
   167   000FB2                     TMR3L           equ	4018	;# 
   168   000FB3                     TMR3H           equ	4019	;# 
   169   000FB4                     CVRCON2         equ	4020	;# 
   170   000FB5                     CVRCON          equ	4021	;# 
   171   000FB6                     ECCP1AS         equ	4022	;# 
   172   000FB7                     PWM1CON         equ	4023	;# 
   173   000FB8                     BAUDCON         equ	4024	;# 
   174   000FB8                     BAUDCTL         equ	4024	;# 
   175   000FB9                     PSTRCON         equ	4025	;# 
   176   000FBA                     CCP2CON         equ	4026	;# 
   177   000FBB                     CCPR2           equ	4027	;# 
   178   000FBB                     CCPR2L          equ	4027	;# 
   179   000FBC                     CCPR2H          equ	4028	;# 
   180   000FBD                     CCP1CON         equ	4029	;# 
   181   000FBE                     CCPR1           equ	4030	;# 
   182   000FBE                     CCPR1L          equ	4030	;# 
   183   000FBF                     CCPR1H          equ	4031	;# 
   184   000FC0                     ADCON2          equ	4032	;# 
   185   000FC1                     ADCON1          equ	4033	;# 
   186   000FC2                     ADCON0          equ	4034	;# 
   187   000FC3                     ADRES           equ	4035	;# 
   188   000FC3                     ADRESL          equ	4035	;# 
   189   000FC4                     ADRESH          equ	4036	;# 
   190   000FC5                     SSPCON2         equ	4037	;# 
   191   000FC6                     SSPCON1         equ	4038	;# 
   192   000FC7                     SSPSTAT         equ	4039	;# 
   193   000FC8                     SSPADD          equ	4040	;# 
   194   000FC9                     SSPBUF          equ	4041	;# 
   195   000FCA                     T2CON           equ	4042	;# 
   196   000FCB                     PR2             equ	4043	;# 
   197   000FCB                     MEMCON          equ	4043	;# 
   198   000FCC                     TMR2            equ	4044	;# 
   199   000FCD                     T1CON           equ	4045	;# 
   200   000FCE                     TMR1            equ	4046	;# 
   201   000FCE                     TMR1L           equ	4046	;# 
   202   000FCF                     TMR1H           equ	4047	;# 
   203   000FD0                     RCON            equ	4048	;# 
   204   000FD1                     WDTCON          equ	4049	;# 
   205   000FD2                     HLVDCON         equ	4050	;# 
   206   000FD2                     LVDCON          equ	4050	;# 
   207   000FD3                     OSCCON          equ	4051	;# 
   208   000FD5                     T0CON           equ	4053	;# 
   209   000FD6                     TMR0            equ	4054	;# 
   210   000FD6                     TMR0L           equ	4054	;# 
   211   000FD7                     TMR0H           equ	4055	;# 
   212   000FD8                     STATUS          equ	4056	;# 
   213   000FD9                     FSR2            equ	4057	;# 
   214   000FD9                     FSR2L           equ	4057	;# 
   215   000FDA                     FSR2H           equ	4058	;# 
   216   000FDB                     PLUSW2          equ	4059	;# 
   217   000FDC                     PREINC2         equ	4060	;# 
   218   000FDD                     POSTDEC2        equ	4061	;# 
   219   000FDE                     POSTINC2        equ	4062	;# 
   220   000FDF                     INDF2           equ	4063	;# 
   221   000FE0                     BSR             equ	4064	;# 
   222   000FE1                     FSR1            equ	4065	;# 
   223   000FE1                     FSR1L           equ	4065	;# 
   224   000FE2                     FSR1H           equ	4066	;# 
   225   000FE3                     PLUSW1          equ	4067	;# 
   226   000FE4                     PREINC1         equ	4068	;# 
   227   000FE5                     POSTDEC1        equ	4069	;# 
   228   000FE6                     POSTINC1        equ	4070	;# 
   229   000FE7                     INDF1           equ	4071	;# 
   230   000FE8                     WREG            equ	4072	;# 
   231   000FE9                     FSR0            equ	4073	;# 
   232   000FE9                     FSR0L           equ	4073	;# 
   233   000FEA                     FSR0H           equ	4074	;# 
   234   000FEB                     PLUSW0          equ	4075	;# 
   235   000FEC                     PREINC0         equ	4076	;# 
   236   000FED                     POSTDEC0        equ	4077	;# 
   237   000FEE                     POSTINC0        equ	4078	;# 
   238   000FEF                     INDF0           equ	4079	;# 
   239   000FF0                     INTCON3         equ	4080	;# 
   240   000FF1                     INTCON2         equ	4081	;# 
   241   000FF2                     INTCON          equ	4082	;# 
   242   000FF3                     PROD            equ	4083	;# 
   243   000FF3                     PRODL           equ	4083	;# 
   244   000FF4                     PRODH           equ	4084	;# 
   245   000FF5                     TABLAT          equ	4085	;# 
   246   000FF6                     TBLPTR          equ	4086	;# 
   247   000FF6                     TBLPTRL         equ	4086	;# 
   248   000FF7                     TBLPTRH         equ	4087	;# 
   249   000FF8                     TBLPTRU         equ	4088	;# 
   250   000FF9                     PCLAT           equ	4089	;# 
   251   000FF9                     PC              equ	4089	;# 
   252   000FF9                     PCL             equ	4089	;# 
   253   000FFA                     PCLATH          equ	4090	;# 
   254   000FFB                     PCLATU          equ	4091	;# 
   255   000FFC                     STKPTR          equ	4092	;# 
   256   000FFD                     TOS             equ	4093	;# 
   257   000FFD                     TOSL            equ	4093	;# 
   258   000FFE                     TOSH            equ	4094	;# 
   259   000FFF                     TOSU            equ	4095	;# 
   260   000F77                     SSPMSK          equ	3959	;# 
   261   000F78                     SLRCON          equ	3960	;# 
   262   000F79                     CM2CON1         equ	3961	;# 
   263   000F7A                     CM2CON0         equ	3962	;# 
   264   000F7B                     CM1CON0         equ	3963	;# 
   265   000F7C                     WPUB            equ	3964	;# 
   266   000F7D                     IOCB            equ	3965	;# 
   267   000F7E                     ANSEL           equ	3966	;# 
   268   000F7F                     ANSELH          equ	3967	;# 
   269   000F80                     PORTA           equ	3968	;# 
   270   000F81                     PORTB           equ	3969	;# 
   271   000F82                     PORTC           equ	3970	;# 
   272   000F83                     PORTD           equ	3971	;# 
   273   000F84                     PORTE           equ	3972	;# 
   274   000F89                     LATA            equ	3977	;# 
   275   000F8A                     LATB            equ	3978	;# 
   276   000F8B                     LATC            equ	3979	;# 
   277   000F8C                     LATD            equ	3980	;# 
   278   000F8D                     LATE            equ	3981	;# 
   279   000F92                     TRISA           equ	3986	;# 
   280   000F92                     DDRA            equ	3986	;# 
   281   000F93                     TRISB           equ	3987	;# 
   282   000F93                     DDRB            equ	3987	;# 
   283   000F94                     TRISC           equ	3988	;# 
   284   000F94                     DDRC            equ	3988	;# 
   285   000F95                     TRISD           equ	3989	;# 
   286   000F95                     DDRD            equ	3989	;# 
   287   000F96                     TRISE           equ	3990	;# 
   288   000F96                     DDRE            equ	3990	;# 
   289   000F9B                     OSCTUNE         equ	3995	;# 
   290   000F9D                     PIE1            equ	3997	;# 
   291   000F9E                     PIR1            equ	3998	;# 
   292   000F9F                     IPR1            equ	3999	;# 
   293   000FA0                     PIE2            equ	4000	;# 
   294   000FA1                     PIR2            equ	4001	;# 
   295   000FA2                     IPR2            equ	4002	;# 
   296   000FA6                     EECON1          equ	4006	;# 
   297   000FA7                     EECON2          equ	4007	;# 
   298   000FA8                     EEDATA          equ	4008	;# 
   299   000FA9                     EEADR           equ	4009	;# 
   300   000FAA                     EEADRH          equ	4010	;# 
   301   000FAB                     RCSTA           equ	4011	;# 
   302   000FAB                     RCSTA1          equ	4011	;# 
   303   000FAC                     TXSTA           equ	4012	;# 
   304   000FAC                     TXSTA1          equ	4012	;# 
   305   000FAD                     TXREG           equ	4013	;# 
   306   000FAD                     TXREG1          equ	4013	;# 
   307   000FAE                     RCREG           equ	4014	;# 
   308   000FAE                     RCREG1          equ	4014	;# 
   309   000FAF                     SPBRG           equ	4015	;# 
   310   000FAF                     SPBRG1          equ	4015	;# 
   311   000FB0                     SPBRGH          equ	4016	;# 
   312   000FB1                     T3CON           equ	4017	;# 
   313   000FB2                     TMR3            equ	4018	;# 
   314   000FB2                     TMR3L           equ	4018	;# 
   315   000FB3                     TMR3H           equ	4019	;# 
   316   000FB4                     CVRCON2         equ	4020	;# 
   317   000FB5                     CVRCON          equ	4021	;# 
   318   000FB6                     ECCP1AS         equ	4022	;# 
   319   000FB7                     PWM1CON         equ	4023	;# 
   320   000FB8                     BAUDCON         equ	4024	;# 
   321   000FB8                     BAUDCTL         equ	4024	;# 
   322   000FB9                     PSTRCON         equ	4025	;# 
   323   000FBA                     CCP2CON         equ	4026	;# 
   324   000FBB                     CCPR2           equ	4027	;# 
   325   000FBB                     CCPR2L          equ	4027	;# 
   326   000FBC                     CCPR2H          equ	4028	;# 
   327   000FBD                     CCP1CON         equ	4029	;# 
   328   000FBE                     CCPR1           equ	4030	;# 
   329   000FBE                     CCPR1L          equ	4030	;# 
   330   000FBF                     CCPR1H          equ	4031	;# 
   331   000FC0                     ADCON2          equ	4032	;# 
   332   000FC1                     ADCON1          equ	4033	;# 
   333   000FC2                     ADCON0          equ	4034	;# 
   334   000FC3                     ADRES           equ	4035	;# 
   335   000FC3                     ADRESL          equ	4035	;# 
   336   000FC4                     ADRESH          equ	4036	;# 
   337   000FC5                     SSPCON2         equ	4037	;# 
   338   000FC6                     SSPCON1         equ	4038	;# 
   339   000FC7                     SSPSTAT         equ	4039	;# 
   340   000FC8                     SSPADD          equ	4040	;# 
   341   000FC9                     SSPBUF          equ	4041	;# 
   342   000FCA                     T2CON           equ	4042	;# 
   343   000FCB                     PR2             equ	4043	;# 
   344   000FCB                     MEMCON          equ	4043	;# 
   345   000FCC                     TMR2            equ	4044	;# 
   346   000FCD                     T1CON           equ	4045	;# 
   347   000FCE                     TMR1            equ	4046	;# 
   348   000FCE                     TMR1L           equ	4046	;# 
   349   000FCF                     TMR1H           equ	4047	;# 
   350   000FD0                     RCON            equ	4048	;# 
   351   000FD1                     WDTCON          equ	4049	;# 
   352   000FD2                     HLVDCON         equ	4050	;# 
   353   000FD2                     LVDCON          equ	4050	;# 
   354   000FD3                     OSCCON          equ	4051	;# 
   355   000FD5                     T0CON           equ	4053	;# 
   356   000FD6                     TMR0            equ	4054	;# 
   357   000FD6                     TMR0L           equ	4054	;# 
   358   000FD7                     TMR0H           equ	4055	;# 
   359   000FD8                     STATUS          equ	4056	;# 
   360   000FD9                     FSR2            equ	4057	;# 
   361   000FD9                     FSR2L           equ	4057	;# 
   362   000FDA                     FSR2H           equ	4058	;# 
   363   000FDB                     PLUSW2          equ	4059	;# 
   364   000FDC                     PREINC2         equ	4060	;# 
   365   000FDD                     POSTDEC2        equ	4061	;# 
   366   000FDE                     POSTINC2        equ	4062	;# 
   367   000FDF                     INDF2           equ	4063	;# 
   368   000FE0                     BSR             equ	4064	;# 
   369   000FE1                     FSR1            equ	4065	;# 
   370   000FE1                     FSR1L           equ	4065	;# 
   371   000FE2                     FSR1H           equ	4066	;# 
   372   000FE3                     PLUSW1          equ	4067	;# 
   373   000FE4                     PREINC1         equ	4068	;# 
   374   000FE5                     POSTDEC1        equ	4069	;# 
   375   000FE6                     POSTINC1        equ	4070	;# 
   376   000FE7                     INDF1           equ	4071	;# 
   377   000FE8                     WREG            equ	4072	;# 
   378   000FE9                     FSR0            equ	4073	;# 
   379   000FE9                     FSR0L           equ	4073	;# 
   380   000FEA                     FSR0H           equ	4074	;# 
   381   000FEB                     PLUSW0          equ	4075	;# 
   382   000FEC                     PREINC0         equ	4076	;# 
   383   000FED                     POSTDEC0        equ	4077	;# 
   384   000FEE                     POSTINC0        equ	4078	;# 
   385   000FEF                     INDF0           equ	4079	;# 
   386   000FF0                     INTCON3         equ	4080	;# 
   387   000FF1                     INTCON2         equ	4081	;# 
   388   000FF2                     INTCON          equ	4082	;# 
   389   000FF3                     PROD            equ	4083	;# 
   390   000FF3                     PRODL           equ	4083	;# 
   391   000FF4                     PRODH           equ	4084	;# 
   392   000FF5                     TABLAT          equ	4085	;# 
   393   000FF6                     TBLPTR          equ	4086	;# 
   394   000FF6                     TBLPTRL         equ	4086	;# 
   395   000FF7                     TBLPTRH         equ	4087	;# 
   396   000FF8                     TBLPTRU         equ	4088	;# 
   397   000FF9                     PCLAT           equ	4089	;# 
   398   000FF9                     PC              equ	4089	;# 
   399   000FF9                     PCL             equ	4089	;# 
   400   000FFA                     PCLATH          equ	4090	;# 
   401   000FFB                     PCLATU          equ	4091	;# 
   402   000FFC                     STKPTR          equ	4092	;# 
   403   000FFD                     TOS             equ	4093	;# 
   404   000FFD                     TOSL            equ	4093	;# 
   405   000FFE                     TOSH            equ	4094	;# 
   406   000FFF                     TOSU            equ	4095	;# 
   407   000F77                     SSPMSK          equ	3959	;# 
   408   000F78                     SLRCON          equ	3960	;# 
   409   000F79                     CM2CON1         equ	3961	;# 
   410   000F7A                     CM2CON0         equ	3962	;# 
   411   000F7B                     CM1CON0         equ	3963	;# 
   412   000F7C                     WPUB            equ	3964	;# 
   413   000F7D                     IOCB            equ	3965	;# 
   414   000F7E                     ANSEL           equ	3966	;# 
   415   000F7F                     ANSELH          equ	3967	;# 
   416   000F80                     PORTA           equ	3968	;# 
   417   000F81                     PORTB           equ	3969	;# 
   418   000F82                     PORTC           equ	3970	;# 
   419   000F83                     PORTD           equ	3971	;# 
   420   000F84                     PORTE           equ	3972	;# 
   421   000F89                     LATA            equ	3977	;# 
   422   000F8A                     LATB            equ	3978	;# 
   423   000F8B                     LATC            equ	3979	;# 
   424   000F8C                     LATD            equ	3980	;# 
   425   000F8D                     LATE            equ	3981	;# 
   426   000F92                     TRISA           equ	3986	;# 
   427   000F92                     DDRA            equ	3986	;# 
   428   000F93                     TRISB           equ	3987	;# 
   429   000F93                     DDRB            equ	3987	;# 
   430   000F94                     TRISC           equ	3988	;# 
   431   000F94                     DDRC            equ	3988	;# 
   432   000F95                     TRISD           equ	3989	;# 
   433   000F95                     DDRD            equ	3989	;# 
   434   000F96                     TRISE           equ	3990	;# 
   435   000F96                     DDRE            equ	3990	;# 
   436   000F9B                     OSCTUNE         equ	3995	;# 
   437   000F9D                     PIE1            equ	3997	;# 
   438   000F9E                     PIR1            equ	3998	;# 
   439   000F9F                     IPR1            equ	3999	;# 
   440   000FA0                     PIE2            equ	4000	;# 
   441   000FA1                     PIR2            equ	4001	;# 
   442   000FA2                     IPR2            equ	4002	;# 
   443   000FA6                     EECON1          equ	4006	;# 
   444   000FA7                     EECON2          equ	4007	;# 
   445   000FA8                     EEDATA          equ	4008	;# 
   446   000FA9                     EEADR           equ	4009	;# 
   447   000FAA                     EEADRH          equ	4010	;# 
   448   000FAB                     RCSTA           equ	4011	;# 
   449   000FAB                     RCSTA1          equ	4011	;# 
   450   000FAC                     TXSTA           equ	4012	;# 
   451   000FAC                     TXSTA1          equ	4012	;# 
   452   000FAD                     TXREG           equ	4013	;# 
   453   000FAD                     TXREG1          equ	4013	;# 
   454   000FAE                     RCREG           equ	4014	;# 
   455   000FAE                     RCREG1          equ	4014	;# 
   456   000FAF                     SPBRG           equ	4015	;# 
   457   000FAF                     SPBRG1          equ	4015	;# 
   458   000FB0                     SPBRGH          equ	4016	;# 
   459   000FB1                     T3CON           equ	4017	;# 
   460   000FB2                     TMR3            equ	4018	;# 
   461   000FB2                     TMR3L           equ	4018	;# 
   462   000FB3                     TMR3H           equ	4019	;# 
   463   000FB4                     CVRCON2         equ	4020	;# 
   464   000FB5                     CVRCON          equ	4021	;# 
   465   000FB6                     ECCP1AS         equ	4022	;# 
   466   000FB7                     PWM1CON         equ	4023	;# 
   467   000FB8                     BAUDCON         equ	4024	;# 
   468   000FB8                     BAUDCTL         equ	4024	;# 
   469   000FB9                     PSTRCON         equ	4025	;# 
   470   000FBA                     CCP2CON         equ	4026	;# 
   471   000FBB                     CCPR2           equ	4027	;# 
   472   000FBB                     CCPR2L          equ	4027	;# 
   473   000FBC                     CCPR2H          equ	4028	;# 
   474   000FBD                     CCP1CON         equ	4029	;# 
   475   000FBE                     CCPR1           equ	4030	;# 
   476   000FBE                     CCPR1L          equ	4030	;# 
   477   000FBF                     CCPR1H          equ	4031	;# 
   478   000FC0                     ADCON2          equ	4032	;# 
   479   000FC1                     ADCON1          equ	4033	;# 
   480   000FC2                     ADCON0          equ	4034	;# 
   481   000FC3                     ADRES           equ	4035	;# 
   482   000FC3                     ADRESL          equ	4035	;# 
   483   000FC4                     ADRESH          equ	4036	;# 
   484   000FC5                     SSPCON2         equ	4037	;# 
   485   000FC6                     SSPCON1         equ	4038	;# 
   486   000FC7                     SSPSTAT         equ	4039	;# 
   487   000FC8                     SSPADD          equ	4040	;# 
   488   000FC9                     SSPBUF          equ	4041	;# 
   489   000FCA                     T2CON           equ	4042	;# 
   490   000FCB                     PR2             equ	4043	;# 
   491   000FCB                     MEMCON          equ	4043	;# 
   492   000FCC                     TMR2            equ	4044	;# 
   493   000FCD                     T1CON           equ	4045	;# 
   494   000FCE                     TMR1            equ	4046	;# 
   495   000FCE                     TMR1L           equ	4046	;# 
   496   000FCF                     TMR1H           equ	4047	;# 
   497   000FD0                     RCON            equ	4048	;# 
   498   000FD1                     WDTCON          equ	4049	;# 
   499   000FD2                     HLVDCON         equ	4050	;# 
   500   000FD2                     LVDCON          equ	4050	;# 
   501   000FD3                     OSCCON          equ	4051	;# 
   502   000FD5                     T0CON           equ	4053	;# 
   503   000FD6                     TMR0            equ	4054	;# 
   504   000FD6                     TMR0L           equ	4054	;# 
   505   000FD7                     TMR0H           equ	4055	;# 
   506   000FD8                     STATUS          equ	4056	;# 
   507   000FD9                     FSR2            equ	4057	;# 
   508   000FD9                     FSR2L           equ	4057	;# 
   509   000FDA                     FSR2H           equ	4058	;# 
   510   000FDB                     PLUSW2          equ	4059	;# 
   511   000FDC                     PREINC2         equ	4060	;# 
   512   000FDD                     POSTDEC2        equ	4061	;# 
   513   000FDE                     POSTINC2        equ	4062	;# 
   514   000FDF                     INDF2           equ	4063	;# 
   515   000FE0                     BSR             equ	4064	;# 
   516   000FE1                     FSR1            equ	4065	;# 
   517   000FE1                     FSR1L           equ	4065	;# 
   518   000FE2                     FSR1H           equ	4066	;# 
   519   000FE3                     PLUSW1          equ	4067	;# 
   520   000FE4                     PREINC1         equ	4068	;# 
   521   000FE5                     POSTDEC1        equ	4069	;# 
   522   000FE6                     POSTINC1        equ	4070	;# 
   523   000FE7                     INDF1           equ	4071	;# 
   524   000FE8                     WREG            equ	4072	;# 
   525   000FE9                     FSR0            equ	4073	;# 
   526   000FE9                     FSR0L           equ	4073	;# 
   527   000FEA                     FSR0H           equ	4074	;# 
   528   000FEB                     PLUSW0          equ	4075	;# 
   529   000FEC                     PREINC0         equ	4076	;# 
   530   000FED                     POSTDEC0        equ	4077	;# 
   531   000FEE                     POSTINC0        equ	4078	;# 
   532   000FEF                     INDF0           equ	4079	;# 
   533   000FF0                     INTCON3         equ	4080	;# 
   534   000FF1                     INTCON2         equ	4081	;# 
   535   000FF2                     INTCON          equ	4082	;# 
   536   000FF3                     PROD            equ	4083	;# 
   537   000FF3                     PRODL           equ	4083	;# 
   538   000FF4                     PRODH           equ	4084	;# 
   539   000FF5                     TABLAT          equ	4085	;# 
   540   000FF6                     TBLPTR          equ	4086	;# 
   541   000FF6                     TBLPTRL         equ	4086	;# 
   542   000FF7                     TBLPTRH         equ	4087	;# 
   543   000FF8                     TBLPTRU         equ	4088	;# 
   544   000FF9                     PCLAT           equ	4089	;# 
   545   000FF9                     PC              equ	4089	;# 
   546   000FF9                     PCL             equ	4089	;# 
   547   000FFA                     PCLATH          equ	4090	;# 
   548   000FFB                     PCLATU          equ	4091	;# 
   549   000FFC                     STKPTR          equ	4092	;# 
   550   000FFD                     TOS             equ	4093	;# 
   551   000FFD                     TOSL            equ	4093	;# 
   552   000FFE                     TOSH            equ	4094	;# 
   553   000FFF                     TOSU            equ	4095	;# 
   554   000F77                     SSPMSK          equ	3959	;# 
   555   000F78                     SLRCON          equ	3960	;# 
   556   000F79                     CM2CON1         equ	3961	;# 
   557   000F7A                     CM2CON0         equ	3962	;# 
   558   000F7B                     CM1CON0         equ	3963	;# 
   559   000F7C                     WPUB            equ	3964	;# 
   560   000F7D                     IOCB            equ	3965	;# 
   561   000F7E                     ANSEL           equ	3966	;# 
   562   000F7F                     ANSELH          equ	3967	;# 
   563   000F80                     PORTA           equ	3968	;# 
   564   000F81                     PORTB           equ	3969	;# 
   565   000F82                     PORTC           equ	3970	;# 
   566   000F83                     PORTD           equ	3971	;# 
   567   000F84                     PORTE           equ	3972	;# 
   568   000F89                     LATA            equ	3977	;# 
   569   000F8A                     LATB            equ	3978	;# 
   570   000F8B                     LATC            equ	3979	;# 
   571   000F8C                     LATD            equ	3980	;# 
   572   000F8D                     LATE            equ	3981	;# 
   573   000F92                     TRISA           equ	3986	;# 
   574   000F92                     DDRA            equ	3986	;# 
   575   000F93                     TRISB           equ	3987	;# 
   576   000F93                     DDRB            equ	3987	;# 
   577   000F94                     TRISC           equ	3988	;# 
   578   000F94                     DDRC            equ	3988	;# 
   579   000F95                     TRISD           equ	3989	;# 
   580   000F95                     DDRD            equ	3989	;# 
   581   000F96                     TRISE           equ	3990	;# 
   582   000F96                     DDRE            equ	3990	;# 
   583   000F9B                     OSCTUNE         equ	3995	;# 
   584   000F9D                     PIE1            equ	3997	;# 
   585   000F9E                     PIR1            equ	3998	;# 
   586   000F9F                     IPR1            equ	3999	;# 
   587   000FA0                     PIE2            equ	4000	;# 
   588   000FA1                     PIR2            equ	4001	;# 
   589   000FA2                     IPR2            equ	4002	;# 
   590   000FA6                     EECON1          equ	4006	;# 
   591   000FA7                     EECON2          equ	4007	;# 
   592   000FA8                     EEDATA          equ	4008	;# 
   593   000FA9                     EEADR           equ	4009	;# 
   594   000FAA                     EEADRH          equ	4010	;# 
   595   000FAB                     RCSTA           equ	4011	;# 
   596   000FAB                     RCSTA1          equ	4011	;# 
   597   000FAC                     TXSTA           equ	4012	;# 
   598   000FAC                     TXSTA1          equ	4012	;# 
   599   000FAD                     TXREG           equ	4013	;# 
   600   000FAD                     TXREG1          equ	4013	;# 
   601   000FAE                     RCREG           equ	4014	;# 
   602   000FAE                     RCREG1          equ	4014	;# 
   603   000FAF                     SPBRG           equ	4015	;# 
   604   000FAF                     SPBRG1          equ	4015	;# 
   605   000FB0                     SPBRGH          equ	4016	;# 
   606   000FB1                     T3CON           equ	4017	;# 
   607   000FB2                     TMR3            equ	4018	;# 
   608   000FB2                     TMR3L           equ	4018	;# 
   609   000FB3                     TMR3H           equ	4019	;# 
   610   000FB4                     CVRCON2         equ	4020	;# 
   611   000FB5                     CVRCON          equ	4021	;# 
   612   000FB6                     ECCP1AS         equ	4022	;# 
   613   000FB7                     PWM1CON         equ	4023	;# 
   614   000FB8                     BAUDCON         equ	4024	;# 
   615   000FB8                     BAUDCTL         equ	4024	;# 
   616   000FB9                     PSTRCON         equ	4025	;# 
   617   000FBA                     CCP2CON         equ	4026	;# 
   618   000FBB                     CCPR2           equ	4027	;# 
   619   000FBB                     CCPR2L          equ	4027	;# 
   620   000FBC                     CCPR2H          equ	4028	;# 
   621   000FBD                     CCP1CON         equ	4029	;# 
   622   000FBE                     CCPR1           equ	4030	;# 
   623   000FBE                     CCPR1L          equ	4030	;# 
   624   000FBF                     CCPR1H          equ	4031	;# 
   625   000FC0                     ADCON2          equ	4032	;# 
   626   000FC1                     ADCON1          equ	4033	;# 
   627   000FC2                     ADCON0          equ	4034	;# 
   628   000FC3                     ADRES           equ	4035	;# 
   629   000FC3                     ADRESL          equ	4035	;# 
   630   000FC4                     ADRESH          equ	4036	;# 
   631   000FC5                     SSPCON2         equ	4037	;# 
   632   000FC6                     SSPCON1         equ	4038	;# 
   633   000FC7                     SSPSTAT         equ	4039	;# 
   634   000FC8                     SSPADD          equ	4040	;# 
   635   000FC9                     SSPBUF          equ	4041	;# 
   636   000FCA                     T2CON           equ	4042	;# 
   637   000FCB                     PR2             equ	4043	;# 
   638   000FCB                     MEMCON          equ	4043	;# 
   639   000FCC                     TMR2            equ	4044	;# 
   640   000FCD                     T1CON           equ	4045	;# 
   641   000FCE                     TMR1            equ	4046	;# 
   642   000FCE                     TMR1L           equ	4046	;# 
   643   000FCF                     TMR1H           equ	4047	;# 
   644   000FD0                     RCON            equ	4048	;# 
   645   000FD1                     WDTCON          equ	4049	;# 
   646   000FD2                     HLVDCON         equ	4050	;# 
   647   000FD2                     LVDCON          equ	4050	;# 
   648   000FD3                     OSCCON          equ	4051	;# 
   649   000FD5                     T0CON           equ	4053	;# 
   650   000FD6                     TMR0            equ	4054	;# 
   651   000FD6                     TMR0L           equ	4054	;# 
   652   000FD7                     TMR0H           equ	4055	;# 
   653   000FD8                     STATUS          equ	4056	;# 
   654   000FD9                     FSR2            equ	4057	;# 
   655   000FD9                     FSR2L           equ	4057	;# 
   656   000FDA                     FSR2H           equ	4058	;# 
   657   000FDB                     PLUSW2          equ	4059	;# 
   658   000FDC                     PREINC2         equ	4060	;# 
   659   000FDD                     POSTDEC2        equ	4061	;# 
   660   000FDE                     POSTINC2        equ	4062	;# 
   661   000FDF                     INDF2           equ	4063	;# 
   662   000FE0                     BSR             equ	4064	;# 
   663   000FE1                     FSR1            equ	4065	;# 
   664   000FE1                     FSR1L           equ	4065	;# 
   665   000FE2                     FSR1H           equ	4066	;# 
   666   000FE3                     PLUSW1          equ	4067	;# 
   667   000FE4                     PREINC1         equ	4068	;# 
   668   000FE5                     POSTDEC1        equ	4069	;# 
   669   000FE6                     POSTINC1        equ	4070	;# 
   670   000FE7                     INDF1           equ	4071	;# 
   671   000FE8                     WREG            equ	4072	;# 
   672   000FE9                     FSR0            equ	4073	;# 
   673   000FE9                     FSR0L           equ	4073	;# 
   674   000FEA                     FSR0H           equ	4074	;# 
   675   000FEB                     PLUSW0          equ	4075	;# 
   676   000FEC                     PREINC0         equ	4076	;# 
   677   000FED                     POSTDEC0        equ	4077	;# 
   678   000FEE                     POSTINC0        equ	4078	;# 
   679   000FEF                     INDF0           equ	4079	;# 
   680   000FF0                     INTCON3         equ	4080	;# 
   681   000FF1                     INTCON2         equ	4081	;# 
   682   000FF2                     INTCON          equ	4082	;# 
   683   000FF3                     PROD            equ	4083	;# 
   684   000FF3                     PRODL           equ	4083	;# 
   685   000FF4                     PRODH           equ	4084	;# 
   686   000FF5                     TABLAT          equ	4085	;# 
   687   000FF6                     TBLPTR          equ	4086	;# 
   688   000FF6                     TBLPTRL         equ	4086	;# 
   689   000FF7                     TBLPTRH         equ	4087	;# 
   690   000FF8                     TBLPTRU         equ	4088	;# 
   691   000FF9                     PCLAT           equ	4089	;# 
   692   000FF9                     PC              equ	4089	;# 
   693   000FF9                     PCL             equ	4089	;# 
   694   000FFA                     PCLATH          equ	4090	;# 
   695   000FFB                     PCLATU          equ	4091	;# 
   696   000FFC                     STKPTR          equ	4092	;# 
   697   000FFD                     TOS             equ	4093	;# 
   698   000FFD                     TOSL            equ	4093	;# 
   699   000FFE                     TOSH            equ	4094	;# 
   700   000FFF                     TOSU            equ	4095	;# 
   701   000F77                     SSPMSK          equ	3959	;# 
   702   000F78                     SLRCON          equ	3960	;# 
   703   000F79                     CM2CON1         equ	3961	;# 
   704   000F7A                     CM2CON0         equ	3962	;# 
   705   000F7B                     CM1CON0         equ	3963	;# 
   706   000F7C                     WPUB            equ	3964	;# 
   707   000F7D                     IOCB            equ	3965	;# 
   708   000F7E                     ANSEL           equ	3966	;# 
   709   000F7F                     ANSELH          equ	3967	;# 
   710   000F80                     PORTA           equ	3968	;# 
   711   000F81                     PORTB           equ	3969	;# 
   712   000F82                     PORTC           equ	3970	;# 
   713   000F83                     PORTD           equ	3971	;# 
   714   000F84                     PORTE           equ	3972	;# 
   715   000F89                     LATA            equ	3977	;# 
   716   000F8A                     LATB            equ	3978	;# 
   717   000F8B                     LATC            equ	3979	;# 
   718   000F8C                     LATD            equ	3980	;# 
   719   000F8D                     LATE            equ	3981	;# 
   720   000F92                     TRISA           equ	3986	;# 
   721   000F92                     DDRA            equ	3986	;# 
   722   000F93                     TRISB           equ	3987	;# 
   723   000F93                     DDRB            equ	3987	;# 
   724   000F94                     TRISC           equ	3988	;# 
   725   000F94                     DDRC            equ	3988	;# 
   726   000F95                     TRISD           equ	3989	;# 
   727   000F95                     DDRD            equ	3989	;# 
   728   000F96                     TRISE           equ	3990	;# 
   729   000F96                     DDRE            equ	3990	;# 
   730   000F9B                     OSCTUNE         equ	3995	;# 
   731   000F9D                     PIE1            equ	3997	;# 
   732   000F9E                     PIR1            equ	3998	;# 
   733   000F9F                     IPR1            equ	3999	;# 
   734   000FA0                     PIE2            equ	4000	;# 
   735   000FA1                     PIR2            equ	4001	;# 
   736   000FA2                     IPR2            equ	4002	;# 
   737   000FA6                     EECON1          equ	4006	;# 
   738   000FA7                     EECON2          equ	4007	;# 
   739   000FA8                     EEDATA          equ	4008	;# 
   740   000FA9                     EEADR           equ	4009	;# 
   741   000FAA                     EEADRH          equ	4010	;# 
   742   000FAB                     RCSTA           equ	4011	;# 
   743   000FAB                     RCSTA1          equ	4011	;# 
   744   000FAC                     TXSTA           equ	4012	;# 
   745   000FAC                     TXSTA1          equ	4012	;# 
   746   000FAD                     TXREG           equ	4013	;# 
   747   000FAD                     TXREG1          equ	4013	;# 
   748   000FAE                     RCREG           equ	4014	;# 
   749   000FAE                     RCREG1          equ	4014	;# 
   750   000FAF                     SPBRG           equ	4015	;# 
   751   000FAF                     SPBRG1          equ	4015	;# 
   752   000FB0                     SPBRGH          equ	4016	;# 
   753   000FB1                     T3CON           equ	4017	;# 
   754   000FB2                     TMR3            equ	4018	;# 
   755   000FB2                     TMR3L           equ	4018	;# 
   756   000FB3                     TMR3H           equ	4019	;# 
   757   000FB4                     CVRCON2         equ	4020	;# 
   758   000FB5                     CVRCON          equ	4021	;# 
   759   000FB6                     ECCP1AS         equ	4022	;# 
   760   000FB7                     PWM1CON         equ	4023	;# 
   761   000FB8                     BAUDCON         equ	4024	;# 
   762   000FB8                     BAUDCTL         equ	4024	;# 
   763   000FB9                     PSTRCON         equ	4025	;# 
   764   000FBA                     CCP2CON         equ	4026	;# 
   765   000FBB                     CCPR2           equ	4027	;# 
   766   000FBB                     CCPR2L          equ	4027	;# 
   767   000FBC                     CCPR2H          equ	4028	;# 
   768   000FBD                     CCP1CON         equ	4029	;# 
   769   000FBE                     CCPR1           equ	4030	;# 
   770   000FBE                     CCPR1L          equ	4030	;# 
   771   000FBF                     CCPR1H          equ	4031	;# 
   772   000FC0                     ADCON2          equ	4032	;# 
   773   000FC1                     ADCON1          equ	4033	;# 
   774   000FC2                     ADCON0          equ	4034	;# 
   775   000FC3                     ADRES           equ	4035	;# 
   776   000FC3                     ADRESL          equ	4035	;# 
   777   000FC4                     ADRESH          equ	4036	;# 
   778   000FC5                     SSPCON2         equ	4037	;# 
   779   000FC6                     SSPCON1         equ	4038	;# 
   780   000FC7                     SSPSTAT         equ	4039	;# 
   781   000FC8                     SSPADD          equ	4040	;# 
   782   000FC9                     SSPBUF          equ	4041	;# 
   783   000FCA                     T2CON           equ	4042	;# 
   784   000FCB                     PR2             equ	4043	;# 
   785   000FCB                     MEMCON          equ	4043	;# 
   786   000FCC                     TMR2            equ	4044	;# 
   787   000FCD                     T1CON           equ	4045	;# 
   788   000FCE                     TMR1            equ	4046	;# 
   789   000FCE                     TMR1L           equ	4046	;# 
   790   000FCF                     TMR1H           equ	4047	;# 
   791   000FD0                     RCON            equ	4048	;# 
   792   000FD1                     WDTCON          equ	4049	;# 
   793   000FD2                     HLVDCON         equ	4050	;# 
   794   000FD2                     LVDCON          equ	4050	;# 
   795   000FD3                     OSCCON          equ	4051	;# 
   796   000FD5                     T0CON           equ	4053	;# 
   797   000FD6                     TMR0            equ	4054	;# 
   798   000FD6                     TMR0L           equ	4054	;# 
   799   000FD7                     TMR0H           equ	4055	;# 
   800   000FD8                     STATUS          equ	4056	;# 
   801   000FD9                     FSR2            equ	4057	;# 
   802   000FD9                     FSR2L           equ	4057	;# 
   803   000FDA                     FSR2H           equ	4058	;# 
   804   000FDB                     PLUSW2          equ	4059	;# 
   805   000FDC                     PREINC2         equ	4060	;# 
   806   000FDD                     POSTDEC2        equ	4061	;# 
   807   000FDE                     POSTINC2        equ	4062	;# 
   808   000FDF                     INDF2           equ	4063	;# 
   809   000FE0                     BSR             equ	4064	;# 
   810   000FE1                     FSR1            equ	4065	;# 
   811   000FE1                     FSR1L           equ	4065	;# 
   812   000FE2                     FSR1H           equ	4066	;# 
   813   000FE3                     PLUSW1          equ	4067	;# 
   814   000FE4                     PREINC1         equ	4068	;# 
   815   000FE5                     POSTDEC1        equ	4069	;# 
   816   000FE6                     POSTINC1        equ	4070	;# 
   817   000FE7                     INDF1           equ	4071	;# 
   818   000FE8                     WREG            equ	4072	;# 
   819   000FE9                     FSR0            equ	4073	;# 
   820   000FE9                     FSR0L           equ	4073	;# 
   821   000FEA                     FSR0H           equ	4074	;# 
   822   000FEB                     PLUSW0          equ	4075	;# 
   823   000FEC                     PREINC0         equ	4076	;# 
   824   000FED                     POSTDEC0        equ	4077	;# 
   825   000FEE                     POSTINC0        equ	4078	;# 
   826   000FEF                     INDF0           equ	4079	;# 
   827   000FF0                     INTCON3         equ	4080	;# 
   828   000FF1                     INTCON2         equ	4081	;# 
   829   000FF2                     INTCON          equ	4082	;# 
   830   000FF3                     PROD            equ	4083	;# 
   831   000FF3                     PRODL           equ	4083	;# 
   832   000FF4                     PRODH           equ	4084	;# 
   833   000FF5                     TABLAT          equ	4085	;# 
   834   000FF6                     TBLPTR          equ	4086	;# 
   835   000FF6                     TBLPTRL         equ	4086	;# 
   836   000FF7                     TBLPTRH         equ	4087	;# 
   837   000FF8                     TBLPTRU         equ	4088	;# 
   838   000FF9                     PCLAT           equ	4089	;# 
   839   000FF9                     PC              equ	4089	;# 
   840   000FF9                     PCL             equ	4089	;# 
   841   000FFA                     PCLATH          equ	4090	;# 
   842   000FFB                     PCLATU          equ	4091	;# 
   843   000FFC                     STKPTR          equ	4092	;# 
   844   000FFD                     TOS             equ	4093	;# 
   845   000FFD                     TOSL            equ	4093	;# 
   846   000FFE                     TOSH            equ	4094	;# 
   847   000FFF                     TOSU            equ	4095	;# 
   848                           
   849                           	psect	mediumconst
   850   00FCF8                     __pmediumconst:
   851                           	callstack 0
   852   00FCF8  00                 	db	0
   853   00FCF9                     _default_security_key:
   854                           	callstack 0
   855   00FCF9  00                 	db	0
   856   00FCFA  10                 	db	16
   857   00FCFB  25                 	db	37
   858   00FCFC  37                 	db	55
   859   00FCFD  04                 	db	4
   860   00FCFE  55                 	db	85
   861   00FCFF  06                 	db	6
   862   00FD00  79                 	db	121
   863   00FD01  08                 	db	8
   864   00FD02  09                 	db	9
   865   00FD03  10                 	db	16
   866   00FD04  11                 	db	17
   867   00FD05  12                 	db	18
   868   00FD06  13                 	db	19
   869   00FD07  14                 	db	20
   870   00FD08  15                 	db	21
   871   00FD09                     __end_of_default_security_key:
   872                           	callstack 0
   873   00FD09                     _default_mac_address:
   874                           	callstack 0
   875   00FD09  11                 	db	17
   876   00FD0A  28                 	db	40
   877   00FD0B  35                 	db	53
   878   00FD0C  44                 	db	68
   879   00FD0D  56                 	db	86
   880   00FD0E  66                 	db	102
   881   00FD0F  77                 	db	119
   882   00FD10  01                 	db	1
   883   00FD11                     __end_of_default_mac_address:
   884                           	callstack 0
   885   007CED                     _RCIE           set	31981
   886   007CEE                     _ADIE           set	31982
   887   007D03                     _BCLIE          set	32003
   888   007CEB                     _SSPIE          set	31979
   889   007D04                     _EEIE           set	32004
   890   007D00                     _CCP2IE         set	32000
   891   007CEA                     _CCP1IE         set	31978
   892   007CE9                     _TMR2IE         set	31977
   893   007CE8                     _TMR1IE         set	31976
   894   007F95                     _T0IE           set	32661
   895   007F93                     _RBIE           set	32659
   896   007F96                     _PEIE           set	32662
   897   007F97                     _GIE            set	32663
   898   000F9B                     _OSCTUNE        set	3995
   899   000F96                     _TRISEbits      set	3990
   900   000F84                     _PORTE          set	3972
   901   000F83                     _PORTD          set	3971
   902   000F82                     _PORTC          set	3970
   903   000F81                     _PORTB          set	3969
   904   000F80                     _PORTA          set	3968
   905   000F8D                     _LATEbits       set	3981
   906   000F8C                     _LATDbits       set	3980
   907   000F8B                     _LATCbits       set	3979
   908   000F95                     _TRISDbits      set	3989
   909   000F94                     _TRISCbits      set	3988
   910   000F93                     _TRISBbits      set	3987
   911   000FD3                     _OSCCON         set	4051
   912   000FC9                     _SSPBUF         set	4041
   913   000F9E                     _PIR1bits       set	3998
   914   000FC6                     _SSPCON1bits    set	4038
   915   000FC7                     _SSPSTATbits    set	4039
   916   00FD11                     STR_1:
   917   00FD11  68                 	db	104	;'h'
   918   00FD12  6F                 	db	111	;'o'
   919   00FD13  6C                 	db	108	;'l'
   920   00FD14  61                 	db	97	;'a'
   921   00FD15  20                 	db	32
   922   00FD16  6D                 	db	109	;'m'
   923   00FD17  75                 	db	117	;'u'
   924   00FD18  6E                 	db	110	;'n'
   925   00FD19  64                 	db	100	;'d'
   926   00FD1A  6F                 	db	111	;'o'
   927   00FD1B  2E                 	db	46
   928   00FD1C  20                 	db	32
   929   00FD1D  63                 	db	99	;'c'
   930   00FD1E  61                 	db	97	;'a'
   931   00FD1F  72                 	db	114	;'r'
   932   00FD20  61                 	db	97	;'a'
   933   00FD21  6A                 	db	106	;'j'
   934   00FD22  6F                 	db	111	;'o'
   935   00FD23  2C                 	db	44
   936   00FD24  20                 	db	32
   937   00FD25  6F                 	db	111	;'o'
   938   00FD26  74                 	db	116	;'t'
   939   00FD27  72                 	db	114	;'r'
   940   00FD28  61                 	db	97	;'a'
   941   00FD29  20                 	db	32
   942   00FD2A  76                 	db	118	;'v'
   943   00FD2B  65                 	db	101	;'e'
   944   00FD2C  7A                 	db	122	;'z'
   945   00FD2D  00                 	db	0
   946   00FD2E  00                 	db	0	; dummy byte at the end
   947   000002                     __activetblptr  equ	2
   948                           
   949                           ; #config settings
   950                           
   951                           	psect	cinit
   952   00F71A                     __pcinit:
   953                           	callstack 0
   954   00F71A                     start_initialization:
   955                           	callstack 0
   956   00F71A                     __initialization:
   957                           	callstack 0
   958                           
   959                           ; Clear objects allocated to BANK0 (55 bytes)
   960   00F71A  EE00  F060         	lfsr	0,__pbssBANK0
   961   00F71E  0E37               	movlw	55
   962   00F720                     clear_0:
   963   00F720  6AEE               	clrf	postinc0,c
   964   00F722  06E8               	decf	wreg,f,c
   965   00F724  E1FD               	bnz	clear_0
   966                           
   967                           ; Clear objects allocated to COMRAM (42 bytes)
   968   00F726  EE00  F001         	lfsr	0,__pbssCOMRAM
   969   00F72A  0E2A               	movlw	42
   970   00F72C                     clear_1:
   971   00F72C  6AEE               	clrf	postinc0,c
   972   00F72E  06E8               	decf	wreg,f,c
   973   00F730  E1FD               	bnz	clear_1
   974   00F732                     end_of_initialization:
   975                           	callstack 0
   976   00F732                     __end_of__initialization:
   977                           	callstack 0
   978   00F732  0E00               	movlw	low (__Lmediumconst shr (0+16))
   979   00F734  6EF8               	movwf	tblptru,c
   980   00F736  0100               	movlb	0
   981   00F738  EFD6  F07C         	goto	_main	;jump to C main() function
   982                           
   983                           	psect	bssCOMRAM
   984   000001                     __pbssCOMRAM:
   985                           	callstack 0
   986   000001                     _mrf24_data_config:
   987                           	callstack 0
   988   000001                     	ds	34
   989   000023                     _mrf24_data_out:
   990                           	callstack 0
   991   000023                     	ds	7
   992   00002A                     _my_default_mac_address:
   993                           	callstack 0
   994   00002A                     	ds	1
   995                           
   996                           	psect	bssBANK0
   997   000060                     __pbssBANK0:
   998                           	callstack 0
   999   000060                     _mrf24_data_in:
  1000                           	callstack 0
  1001   000060                     	ds	55
  1002                           
  1003                           	psect	cstackCOMRAM
  1004   00002B                     __pcstackCOMRAM:
  1005                           	callstack 0
  1006   00002B                     ?_strlen:
  1007                           	callstack 0
  1008   00002B                     SetCSPin@estado:
  1009                           	callstack 0
  1010   00002B                     SetWakePin@estado:
  1011                           	callstack 0
  1012   00002B                     SetResetPin@estado:
  1013                           	callstack 0
  1014   00002B                     SPIWriteByte@dato:
  1015                           	callstack 0
  1016   00002B                     InicializoVariables@i:
  1017                           	callstack 0
  1018   00002B                     strlen@s:
  1019                           	callstack 0
  1020   00002B                     
  1021                           ; 1 bytes @ 0x0
  1022   00002B                     	ds	1
  1023   00002C                     WriteByteSPIPort@dato:
  1024                           	callstack 0
  1025   00002C                     
  1026                           ; 1 bytes @ 0x1
  1027   00002C                     	ds	1
  1028   00002D                     SetShortAddr@value:
  1029                           	callstack 0
  1030   00002D                     GetShortAddr@leido_spi:
  1031                           	callstack 0
  1032   00002D                     SetLongAddr@reg_address:
  1033                           	callstack 0
  1034   00002D                     GetLongAddr@reg_address:
  1035                           	callstack 0
  1036   00002D                     strlen@a:
  1037                           	callstack 0
  1038   00002D                     
  1039                           ; 1 bytes @ 0x2
  1040   00002D                     	ds	1
  1041   00002E                     SetShortAddr@reg_address:
  1042                           	callstack 0
  1043   00002E                     GetShortAddr@reg_address:
  1044                           	callstack 0
  1045   00002E                     
  1046                           ; 1 bytes @ 0x3
  1047   00002E                     	ds	1
  1048   00002F                     SetLongAddr@value:
  1049                           	callstack 0
  1050   00002F                     SetDeviceMACAddress@i:
  1051                           	callstack 0
  1052   00002F                     SetMensajeSalida@mensaje:
  1053                           	callstack 0
  1054   00002F                     ??_GetLongAddr:
  1055                           
  1056                           ; 1 bytes @ 0x4
  1057   00002F                     	ds	1
  1058   000030                     ??_SetLongAddr:
  1059                           
  1060                           ; 1 bytes @ 0x5
  1061   000030                     	ds	1
  1062   000031                     GetLongAddr@toReturn:
  1063                           	callstack 0
  1064   000031                     
  1065                           ; 1 bytes @ 0x6
  1066   000031                     	ds	1
  1067   000032                     EnviarDato@i:
  1068                           	callstack 0
  1069   000032                     ??_MRF24J40Init:
  1070   000032                     
  1071                           ; 1 bytes @ 0x7
  1072   000032                     	ds	1
  1073   000033                     MRF24J40Init@lectura:
  1074                           	callstack 0
  1075   000033                     EnviarDato@pos:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x8
  1079   000033                     	ds	1
  1080   000034                     ??_main:
  1081                           
  1082                           ; 1 bytes @ 0x9
  1083   000034                     	ds	2
  1084                           
  1085 ;;
  1086 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1087 ;;
  1088 ;; *************** function _main *****************
  1089 ;; Defined at:
  1090 ;;		line 23 in file "main.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;		None
  1095 ;; Return value:  Size  Location     Type
  1096 ;;                  1    wreg      void 
  1097 ;; Registers used:
  1098 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1099 ;; Tracked objects:
  1100 ;;		On entry : 0/0
  1101 ;;		On exit  : 0/0
  1102 ;;		Unchanged: 0/0
  1103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1106 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;Total ram usage:        2 bytes
  1109 ;; Hardware stack levels required when called: 5
  1110 ;; This function calls:
  1111 ;;		_BoardInit
  1112 ;;		_EnviarDato
  1113 ;;		_MRF24J40Init
  1114 ;;		_SetMensajeSalida
  1115 ;; This function is called by:
  1116 ;;		Startup code after reset
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           	psect	text0
  1121   00F9AC                     __ptext0:
  1122                           	callstack 0
  1123   00F9AC                     _main:
  1124                           	callstack 26
  1125   00F9AC                     
  1126                           ;main.c: 25:     BoardInit();
  1127   00F9AC  ECF9  F07B         	call	_BoardInit	;wreg free
  1128   00F9B0                     
  1129                           ;main.c: 26:     MRF24J40Init();
  1130   00F9B0  ECC3  F07D         	call	_MRF24J40Init	;wreg free
  1131   00F9B4                     
  1132                           ;main.c: 28:     SetMensajeSalida("hola mundo. carajo, otra vez");
  1133   00F9B4  0E11               	movlw	low STR_1
  1134   00F9B6  6E2F               	movwf	SetMensajeSalida@mensaje^0,c
  1135   00F9B8  0EFD               	movlw	high STR_1
  1136   00F9BA  6E30               	movwf	(SetMensajeSalida@mensaje+1)^0,c
  1137   00F9BC  EC54  F07B         	call	_SetMensajeSalida	;wreg free
  1138   00F9C0                     l209:
  1139   00F9C0  0004               	clrwdt		;# 
  1140   00F9C2                     
  1141                           ;main.c: 34:         LATEbits.LATE2 = !LATEbits.LATE2;
  1142   00F9C2  A48D               	btfss	141,2,c	;volatile
  1143   00F9C4  EFE6  F07C         	goto	u491
  1144   00F9C8  EFEA  F07C         	goto	u490
  1145   00F9CC                     u491:
  1146   00F9CC  6A34               	clrf	??_main^0,c
  1147   00F9CE  2A34               	incf	??_main^0,f,c
  1148   00F9D0  EFEB  F07C         	goto	u508
  1149   00F9D4                     u490:
  1150   00F9D4  6A34               	clrf	??_main^0,c
  1151   00F9D6                     u508:
  1152   00F9D6  4634               	rlncf	??_main^0,f,c
  1153   00F9D8  4634               	rlncf	??_main^0,f,c
  1154   00F9DA  508D               	movf	141,w,c	;volatile
  1155   00F9DC  1834               	xorwf	??_main^0,w,c
  1156   00F9DE  0BFB               	andlw	-5
  1157   00F9E0  1834               	xorwf	??_main^0,w,c
  1158   00F9E2  6E8D               	movwf	141,c	;volatile
  1159   00F9E4                     
  1160                           ;main.c: 35:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1161   00F9E4  0E06               	movlw	6
  1162   00F9E6  6E35               	movwf	(??_main+1)^0,c
  1163   00F9E8  0E13               	movlw	19
  1164   00F9EA  6E34               	movwf	??_main^0,c
  1165   00F9EC  0EAE               	movlw	174
  1166   00F9EE                     u557:
  1167   00F9EE  2EE8               	decfsz	wreg,f,c
  1168   00F9F0  D7FE               	bra	u557
  1169   00F9F2  2E34               	decfsz	??_main^0,f,c
  1170   00F9F4  D7FC               	bra	u557
  1171   00F9F6  2E35               	decfsz	(??_main+1)^0,f,c
  1172   00F9F8  D7FA               	bra	u557
  1173   00F9FA                     
  1174                           ;main.c: 36:         LATEbits.LATE1 = !LATEbits.LATE1;
  1175   00F9FA  A28D               	btfss	141,1,c	;volatile
  1176   00F9FC  EF02  F07D         	goto	u511
  1177   00FA00  EF06  F07D         	goto	u510
  1178   00FA04                     u511:
  1179   00FA04  6A34               	clrf	??_main^0,c
  1180   00FA06  2A34               	incf	??_main^0,f,c
  1181   00FA08  EF07  F07D         	goto	u528
  1182   00FA0C                     u510:
  1183   00FA0C  6A34               	clrf	??_main^0,c
  1184   00FA0E                     u528:
  1185   00FA0E  4634               	rlncf	??_main^0,f,c
  1186   00FA10  508D               	movf	141,w,c	;volatile
  1187   00FA12  1834               	xorwf	??_main^0,w,c
  1188   00FA14  0BFD               	andlw	-3
  1189   00FA16  1834               	xorwf	??_main^0,w,c
  1190   00FA18  6E8D               	movwf	141,c	;volatile
  1191   00FA1A                     
  1192                           ;main.c: 37:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1193   00FA1A  0E06               	movlw	6
  1194   00FA1C  6E35               	movwf	(??_main+1)^0,c
  1195   00FA1E  0E13               	movlw	19
  1196   00FA20  6E34               	movwf	??_main^0,c
  1197   00FA22  0EAE               	movlw	174
  1198   00FA24                     u567:
  1199   00FA24  2EE8               	decfsz	wreg,f,c
  1200   00FA26  D7FE               	bra	u567
  1201   00FA28  2E34               	decfsz	??_main^0,f,c
  1202   00FA2A  D7FC               	bra	u567
  1203   00FA2C  2E35               	decfsz	(??_main+1)^0,f,c
  1204   00FA2E  D7FA               	bra	u567
  1205   00FA30                     
  1206                           ;main.c: 38:         LATEbits.LATE0 = !LATEbits.LATE0;
  1207   00FA30  A08D               	btfss	141,0,c	;volatile
  1208   00FA32  EF1D  F07D         	goto	u531
  1209   00FA36  EF21  F07D         	goto	u530
  1210   00FA3A                     u531:
  1211   00FA3A  6A34               	clrf	??_main^0,c
  1212   00FA3C  2A34               	incf	??_main^0,f,c
  1213   00FA3E  EF22  F07D         	goto	u548
  1214   00FA42                     u530:
  1215   00FA42  6A34               	clrf	??_main^0,c
  1216   00FA44                     u548:
  1217   00FA44  508D               	movf	141,w,c	;volatile
  1218   00FA46  1834               	xorwf	??_main^0,w,c
  1219   00FA48  0BFE               	andlw	-2
  1220   00FA4A  1834               	xorwf	??_main^0,w,c
  1221   00FA4C  6E8D               	movwf	141,c	;volatile
  1222   00FA4E                     
  1223                           ;main.c: 39:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1224   00FA4E  0E06               	movlw	6
  1225   00FA50  6E35               	movwf	(??_main+1)^0,c
  1226   00FA52  0E13               	movlw	19
  1227   00FA54  6E34               	movwf	??_main^0,c
  1228   00FA56  0EAE               	movlw	174
  1229   00FA58                     u577:
  1230   00FA58  2EE8               	decfsz	wreg,f,c
  1231   00FA5A  D7FE               	bra	u577
  1232   00FA5C  2E34               	decfsz	??_main^0,f,c
  1233   00FA5E  D7FC               	bra	u577
  1234   00FA60  2E35               	decfsz	(??_main+1)^0,f,c
  1235   00FA62  D7FA               	bra	u577
  1236   00FA64                     
  1237                           ;main.c: 41:         EnviarDato();
  1238   00FA64  EC38  F07D         	call	_EnviarDato	;wreg free
  1239   00FA68  EFE0  F07C         	goto	l209
  1240   00FA6C  EF00  F000         	goto	start
  1241   00FA70                     __end_of_main:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _SetMensajeSalida *****************
  1245 ;; Defined at:
  1246 ;;		line 632 in file "drivers/scr/drv_mrf24j40.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  mensaje         2    4[COMRAM] PTR const unsigned char 
  1249 ;;		 -> STR_1(29), 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1264 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1265 ;;Total ram usage:        2 bytes
  1266 ;; Hardware stack levels used: 1
  1267 ;; Hardware stack levels required when called: 1
  1268 ;; This function calls:
  1269 ;;		_strlen
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text1
  1276   00F6A8                     __ptext1:
  1277                           	callstack 0
  1278   00F6A8                     _SetMensajeSalida:
  1279                           	callstack 29
  1280   00F6A8                     
  1281                           ;drivers/scr/drv_mrf24j40.c: 635: mrf24_data_out.buffer_salida = mensaje;
  1282   00F6A8  C02F  F028         	movff	SetMensajeSalida@mensaje,_mrf24_data_out+5
  1283   00F6AC  C030  F029         	movff	SetMensajeSalida@mensaje+1,_mrf24_data_out+6
  1284   00F6B0                     
  1285                           ;drivers/scr/drv_mrf24j40.c: 636: mrf24_data_out.tamano_mensaje = (uint8_t) strlen(mensa
      +                          je);
  1286   00F6B0  C02F  F02B         	movff	SetMensajeSalida@mensaje,strlen@s
  1287   00F6B4  C030  F02C         	movff	SetMensajeSalida@mensaje+1,strlen@s+1
  1288   00F6B8  ECDC  F07B         	call	_strlen	;wreg free
  1289   00F6BC  502B               	movf	?_strlen^0,w,c
  1290   00F6BE  6E27               	movwf	(_mrf24_data_out+4)^0,c
  1291   00F6C0  0012               	return		;funcret
  1292   00F6C2                     __end_of_SetMensajeSalida:
  1293                           	callstack 0
  1294                           
  1295 ;; *************** function _strlen *****************
  1296 ;; Defined at:
  1297 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1300 ;;		 -> STR_1(29), 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1303 ;;		 -> STR_1(29), 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  2    0[COMRAM] unsigned int 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1317 ;;Total ram usage:        4 bytes
  1318 ;; Hardware stack levels used: 1
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_SetMensajeSalida
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text2
  1327   00F7B8                     __ptext2:
  1328                           	callstack 0
  1329   00F7B8                     _strlen:
  1330                           	callstack 29
  1331   00F7B8  C02B  F02D         	movff	strlen@s,strlen@a
  1332   00F7BC  C02C  F02E         	movff	strlen@s+1,strlen@a+1
  1333   00F7C0  EFE4  F07B         	goto	l1579
  1334   00F7C4                     l1577:
  1335   00F7C4  4A2B               	infsnz	strlen@s^0,f,c
  1336   00F7C6  2A2C               	incf	(strlen@s+1)^0,f,c
  1337   00F7C8                     l1579:
  1338   00F7C8  C02B  FFF6         	movff	strlen@s,tblptrl
  1339   00F7CC  C02C  FFF7         	movff	strlen@s+1,tblptrh
  1340   00F7D0                     	if	0	;tblptru may be non-zero
  1341   00F7D0                     	endif
  1342   00F7D0                     	if	0	;tblptru may be non-zero
  1343   00F7D0                     	endif
  1344   00F7D0  0008               	tblrd		*
  1345   00F7D2  50F5               	movf	tablat,w,c
  1346   00F7D4  0900               	iorlw	0
  1347   00F7D6  A4D8               	btfss	status,2,c
  1348   00F7D8  EFF0  F07B         	goto	u381
  1349   00F7DC  EFF2  F07B         	goto	u380
  1350   00F7E0                     u381:
  1351   00F7E0  EFE2  F07B         	goto	l1577
  1352   00F7E4                     u380:
  1353   00F7E4  502D               	movf	strlen@a^0,w,c
  1354   00F7E6  5C2B               	subwf	strlen@s^0,w,c
  1355   00F7E8  6E2B               	movwf	?_strlen^0,c
  1356   00F7EA  502E               	movf	(strlen@a+1)^0,w,c
  1357   00F7EC  582C               	subwfb	(strlen@s+1)^0,w,c
  1358   00F7EE  6E2C               	movwf	(?_strlen+1)^0,c
  1359   00F7F0  0012               	return		;funcret
  1360   00F7F2                     __end_of_strlen:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _MRF24J40Init *****************
  1364 ;; Defined at:
  1365 ;;		line 277 in file "drivers/scr/drv_mrf24j40.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  lectura         1    8[COMRAM] unsigned char 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1380 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1381 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1383 ;;Total ram usage:        2 bytes
  1384 ;; Hardware stack levels used: 1
  1385 ;; Hardware stack levels required when called: 4
  1386 ;; This function calls:
  1387 ;;		_GetLongAddr
  1388 ;;		_GetShortAddr
  1389 ;;		_InicializoPines
  1390 ;;		_InicializoVariables
  1391 ;;		_SetChannel
  1392 ;;		_SetDeviceAddress
  1393 ;;		_SetDeviceMACAddress
  1394 ;;		_SetLongAddr
  1395 ;;		_SetResetPin
  1396 ;;		_SetShortAddr
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           	psect	text3
  1403   00FB86                     __ptext3:
  1404                           	callstack 0
  1405   00FB86                     _MRF24J40Init:
  1406                           	callstack 26
  1407   00FB86                     
  1408                           ;drivers/scr/drv_mrf24j40.c: 279:     uint8_t lectura;;drivers/scr/drv_mrf24j40.c: 280: 
      +                              InicializoVariables();
  1409   00FB86  EC7C  F07C         	call	_InicializoVariables	;wreg free
  1410   00FB8A                     
  1411                           ;drivers/scr/drv_mrf24j40.c: 281:     InicializoPines();
  1412   00FB8A  EC6F  F07B         	call	_InicializoPines	;wreg free
  1413   00FB8E                     
  1414                           ;drivers/scr/drv_mrf24j40.c: 282:   _delay((unsigned long)((5)*(16000000/4000.0)));;
  1415   00FB8E  0E1A               	movlw	26
  1416   00FB90  6E32               	movwf	??_MRF24J40Init^0,c
  1417   00FB92  0EF8               	movlw	248
  1418   00FB94                     u587:
  1419   00FB94  2EE8               	decfsz	wreg,f,c
  1420   00FB96  D7FE               	bra	u587
  1421   00FB98  2E32               	decfsz	??_MRF24J40Init^0,f,c
  1422   00FB9A  D7FC               	bra	u587
  1423   00FB9C  F000 F000          	nop2	
  1424   00FBA0                     
  1425                           ;drivers/scr/drv_mrf24j40.c: 283:     SetResetPin(1);
  1426   00FBA0  0E01               	movlw	1
  1427   00FBA2  EC2F  F07B         	call	_SetResetPin
  1428   00FBA6                     
  1429                           ;drivers/scr/drv_mrf24j40.c: 284:  _delay((unsigned long)((5)*(16000000/4000.0)));;
  1430   00FBA6  0E1A               	movlw	26
  1431   00FBA8  6E32               	movwf	??_MRF24J40Init^0,c
  1432   00FBAA  0EF8               	movlw	248
  1433   00FBAC                     u597:
  1434   00FBAC  2EE8               	decfsz	wreg,f,c
  1435   00FBAE  D7FE               	bra	u597
  1436   00FBB0  2E32               	decfsz	??_MRF24J40Init^0,f,c
  1437   00FBB2  D7FC               	bra	u597
  1438   00FBB4  F000 F000          	nop2	
  1439   00FBB8                     
  1440                           ;drivers/scr/drv_mrf24j40.c: 285:     SetShortAddr((0x2A),0x07);
  1441   00FBB8  0E07               	movlw	7
  1442   00FBBA  6E2D               	movwf	SetShortAddr@value^0,c
  1443   00FBBC  0E2A               	movlw	42
  1444   00FBBE  EC7D  F07B         	call	_SetShortAddr
  1445   00FBC2                     l1597:
  1446                           
  1447                           ;drivers/scr/drv_mrf24j40.c: 288:         lectura = GetShortAddr((0x2A));
  1448   00FBC2  0E2A               	movlw	42
  1449   00FBC4  EC9E  F07B         	call	_GetShortAddr
  1450   00FBC8  6E33               	movwf	MRF24J40Init@lectura^0,c
  1451   00FBCA                     
  1452                           ;drivers/scr/drv_mrf24j40.c: 289:     }while((lectura&0x07) != 0x00);
  1453   00FBCA  C033  F032         	movff	MRF24J40Init@lectura,??_MRF24J40Init
  1454   00FBCE  0E07               	movlw	7
  1455   00FBD0  1632               	andwf	??_MRF24J40Init^0,f,c
  1456   00FBD2  A4D8               	btfss	status,2,c
  1457   00FBD4  EFEE  F07D         	goto	u391
  1458   00FBD8  EFF0  F07D         	goto	u390
  1459   00FBDC                     u391:
  1460   00FBDC  EFE1  F07D         	goto	l1597
  1461   00FBE0                     u390:
  1462   00FBE0                     
  1463                           ;drivers/scr/drv_mrf24j40.c: 290:     _delay((unsigned long)((10)*(16000000/4000.0)));;
  1464   00FBE0  0E34               	movlw	52
  1465   00FBE2  6E32               	movwf	??_MRF24J40Init^0,c
  1466   00FBE4  0EF2               	movlw	242
  1467   00FBE6                     u607:
  1468   00FBE6  2EE8               	decfsz	wreg,f,c
  1469   00FBE8  D7FE               	bra	u607
  1470   00FBEA  2E32               	decfsz	??_MRF24J40Init^0,f,c
  1471   00FBEC  D7FC               	bra	u607
  1472   00FBEE                     
  1473                           ;drivers/scr/drv_mrf24j40.c: 291:     SetShortAddr((0x0D), 0x01);
  1474   00FBEE  0E01               	movlw	1
  1475   00FBF0  6E2D               	movwf	SetShortAddr@value^0,c
  1476   00FBF2  0E0D               	movlw	13
  1477   00FBF4  EC7D  F07B         	call	_SetShortAddr
  1478   00FBF8                     
  1479                           ;drivers/scr/drv_mrf24j40.c: 292:     SetDeviceAddress();
  1480   00FBF8  ECB1  F07B         	call	_SetDeviceAddress	;wreg free
  1481   00FBFC                     
  1482                           ;drivers/scr/drv_mrf24j40.c: 293:     SetDeviceMACAddress();
  1483   00FBFC  EC39  F07C         	call	_SetDeviceMACAddress	;wreg free
  1484   00FC00                     
  1485                           ;drivers/scr/drv_mrf24j40.c: 294:     SetLongAddr((0x202), 0x80);
  1486   00FC00  0E02               	movlw	2
  1487   00FC02  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1488   00FC04  0E02               	movlw	2
  1489   00FC06  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1490   00FC08  0E80               	movlw	128
  1491   00FC0A  6E2F               	movwf	SetLongAddr@value^0,c
  1492   00FC0C  EC18  F07C         	call	_SetLongAddr	;wreg free
  1493   00FC10                     
  1494                           ;drivers/scr/drv_mrf24j40.c: 295:     SetLongAddr((0x203), (0XC0) | (0X38));
  1495   00FC10  0E02               	movlw	2
  1496   00FC12  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1497   00FC14  0E03               	movlw	3
  1498   00FC16  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1499   00FC18  0EF8               	movlw	248
  1500   00FC1A  6E2F               	movwf	SetLongAddr@value^0,c
  1501   00FC1C  EC18  F07C         	call	_SetLongAddr	;wreg free
  1502   00FC20                     
  1503                           ;drivers/scr/drv_mrf24j40.c: 296:  SetLongAddr((0x206), 0x90);
  1504   00FC20  0E02               	movlw	2
  1505   00FC22  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1506   00FC24  0E06               	movlw	6
  1507   00FC26  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1508   00FC28  0E90               	movlw	144
  1509   00FC2A  6E2F               	movwf	SetLongAddr@value^0,c
  1510   00FC2C  EC18  F07C         	call	_SetLongAddr	;wreg free
  1511   00FC30                     
  1512                           ;drivers/scr/drv_mrf24j40.c: 297:  SetLongAddr((0x207), 0x80);
  1513   00FC30  0E02               	movlw	2
  1514   00FC32  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1515   00FC34  0E07               	movlw	7
  1516   00FC36  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1517   00FC38  0E80               	movlw	128
  1518   00FC3A  6E2F               	movwf	SetLongAddr@value^0,c
  1519   00FC3C  EC18  F07C         	call	_SetLongAddr	;wreg free
  1520   00FC40                     
  1521                           ;drivers/scr/drv_mrf24j40.c: 298:  SetLongAddr((0x208), 0x10);
  1522   00FC40  0E02               	movlw	2
  1523   00FC42  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1524   00FC44  0E08               	movlw	8
  1525   00FC46  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1526   00FC48  0E10               	movlw	16
  1527   00FC4A  6E2F               	movwf	SetLongAddr@value^0,c
  1528   00FC4C  EC18  F07C         	call	_SetLongAddr	;wreg free
  1529   00FC50                     
  1530                           ;drivers/scr/drv_mrf24j40.c: 299:  SetLongAddr((0x220), 0x21);
  1531   00FC50  0E02               	movlw	2
  1532   00FC52  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1533   00FC54  0E20               	movlw	32
  1534   00FC56  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1535   00FC58  0E21               	movlw	33
  1536   00FC5A  6E2F               	movwf	SetLongAddr@value^0,c
  1537   00FC5C  EC18  F07C         	call	_SetLongAddr	;wreg free
  1538   00FC60                     
  1539                           ;drivers/scr/drv_mrf24j40.c: 300:     SetShortAddr((0x3A), 0x80);
  1540   00FC60  0E80               	movlw	128
  1541   00FC62  6E2D               	movwf	SetShortAddr@value^0,c
  1542   00FC64  0E3A               	movlw	58
  1543   00FC66  EC7D  F07B         	call	_SetShortAddr
  1544   00FC6A                     
  1545                           ;drivers/scr/drv_mrf24j40.c: 301:     SetShortAddr((0x3E), 0x40);
  1546   00FC6A  0E40               	movlw	64
  1547   00FC6C  6E2D               	movwf	SetShortAddr@value^0,c
  1548   00FC6E  0E3E               	movlw	62
  1549   00FC70  EC7D  F07B         	call	_SetShortAddr
  1550   00FC74                     
  1551                           ;drivers/scr/drv_mrf24j40.c: 302:     SetShortAddr((0x3F), 0x60);
  1552   00FC74  0E60               	movlw	96
  1553   00FC76  6E2D               	movwf	SetShortAddr@value^0,c
  1554   00FC78  0E3F               	movlw	63
  1555   00FC7A  EC7D  F07B         	call	_SetShortAddr
  1556   00FC7E                     
  1557                           ;drivers/scr/drv_mrf24j40.c: 303:     SetShortAddr((0x18), 0x98);
  1558   00FC7E  0E98               	movlw	152
  1559   00FC80  6E2D               	movwf	SetShortAddr@value^0,c
  1560   00FC82  0E18               	movlw	24
  1561   00FC84  EC7D  F07B         	call	_SetShortAddr
  1562   00FC88                     
  1563                           ;drivers/scr/drv_mrf24j40.c: 304:     SetShortAddr((0x2E), 0x95);
  1564   00FC88  0E95               	movlw	149
  1565   00FC8A  6E2D               	movwf	SetShortAddr@value^0,c
  1566   00FC8C  0E2E               	movlw	46
  1567   00FC8E  EC7D  F07B         	call	_SetShortAddr
  1568   00FC92                     l1631:
  1569                           
  1570                           ;drivers/scr/drv_mrf24j40.c: 307:   lectura = GetLongAddr((0x20f));
  1571   00FC92  0E02               	movlw	2
  1572   00FC94  6E2E               	movwf	(GetLongAddr@reg_address+1)^0,c
  1573   00FC96  0E0F               	movlw	15
  1574   00FC98  6E2D               	movwf	GetLongAddr@reg_address^0,c
  1575   00FC9A  EC5A  F07C         	call	_GetLongAddr	;wreg free
  1576   00FC9E  6E33               	movwf	MRF24J40Init@lectura^0,c
  1577   00FCA0                     
  1578                           ;drivers/scr/drv_mrf24j40.c: 308:  }while((lectura & 0xA0) != 0xA0);
  1579   00FCA0  5033               	movf	MRF24J40Init@lectura^0,w,c
  1580   00FCA2  0BA0               	andlw	160
  1581   00FCA4  0AA0               	xorlw	160
  1582   00FCA6  A4D8               	btfss	status,2,c
  1583   00FCA8  EF58  F07E         	goto	u401
  1584   00FCAC  EF5A  F07E         	goto	u400
  1585   00FCB0                     u401:
  1586   00FCB0  EF49  F07E         	goto	l1631
  1587   00FCB4                     u400:
  1588   00FCB4                     
  1589                           ;drivers/scr/drv_mrf24j40.c: 309:     SetShortAddr((0x32), 0xE6);
  1590   00FCB4  0EE6               	movlw	230
  1591   00FCB6  6E2D               	movwf	SetShortAddr@value^0,c
  1592   00FCB8  0E32               	movlw	50
  1593   00FCBA  EC7D  F07B         	call	_SetShortAddr
  1594                           
  1595                           ;drivers/scr/drv_mrf24j40.c: 310:  SetShortAddr((0x12), 0xB9);
  1596   00FCBE  0EB9               	movlw	185
  1597   00FCC0  6E2D               	movwf	SetShortAddr@value^0,c
  1598   00FCC2  0E12               	movlw	18
  1599   00FCC4  EC7D  F07B         	call	_SetShortAddr
  1600                           
  1601                           ;drivers/scr/drv_mrf24j40.c: 311:     SetLongAddr((0x200), 0x03);
  1602   00FCC8  0E02               	movlw	2
  1603   00FCCA  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1604   00FCCC  0E00               	movlw	0
  1605   00FCCE  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1606   00FCD0  0E03               	movlw	3
  1607   00FCD2  6E2F               	movwf	SetLongAddr@value^0,c
  1608   00FCD4  EC18  F07C         	call	_SetLongAddr	;wreg free
  1609                           
  1610                           ;drivers/scr/drv_mrf24j40.c: 312:  SetLongAddr((0x201), 0x02);
  1611   00FCD8  0E02               	movlw	2
  1612   00FCDA  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1613   00FCDC  0E01               	movlw	1
  1614   00FCDE  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1615   00FCE0  0E02               	movlw	2
  1616   00FCE2  6E2F               	movwf	SetLongAddr@value^0,c
  1617   00FCE4  EC18  F07C         	call	_SetLongAddr	;wreg free
  1618                           
  1619                           ;drivers/scr/drv_mrf24j40.c: 313:  SetChannel();
  1620   00FCE8  ECC6  F07B         	call	_SetChannel	;wreg free
  1621                           
  1622                           ;drivers/scr/drv_mrf24j40.c: 322:  SetShortAddr((0x00),0x00);
  1623   00FCEC  0E00               	movlw	0
  1624   00FCEE  6E2D               	movwf	SetShortAddr@value^0,c
  1625   00FCF0  0E00               	movlw	0
  1626   00FCF2  EC7D  F07B         	call	_SetShortAddr
  1627   00FCF6  0012               	return		;funcret
  1628   00FCF8                     __end_of_MRF24J40Init:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function _SetDeviceMACAddress *****************
  1632 ;; Defined at:
  1633 ;;		line 454 in file "drivers/scr/drv_mrf24j40.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;  i               2    4[COMRAM] int 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1648 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1651 ;;Total ram usage:        2 bytes
  1652 ;; Hardware stack levels used: 1
  1653 ;; Hardware stack levels required when called: 3
  1654 ;; This function calls:
  1655 ;;		_SetShortAddr
  1656 ;; This function is called by:
  1657 ;;		_MRF24J40Init
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text4
  1662   00F872                     __ptext4:
  1663                           	callstack 0
  1664   00F872                     _SetDeviceMACAddress:
  1665                           	callstack 26
  1666   00F872                     
  1667                           ;drivers/scr/drv_mrf24j40.c: 456:     my_default_mac_address = EADR0;
  1668   00F872  0E05               	movlw	5
  1669   00F874  6E2A               	movwf	_my_default_mac_address^0,c
  1670                           
  1671                           ;drivers/scr/drv_mrf24j40.c: 458:     for(int i = 0; i < 8; i++) {
  1672   00F876  0E00               	movlw	0
  1673   00F878  6E30               	movwf	(SetDeviceMACAddress@i+1)^0,c
  1674   00F87A  0E00               	movlw	0
  1675   00F87C  6E2F               	movwf	SetDeviceMACAddress@i^0,c
  1676   00F87E                     l1545:
  1677                           
  1678                           ;drivers/scr/drv_mrf24j40.c: 460:         SetShortAddr(my_default_mac_address++, mrf24_d
      +                          ata_config.my_mac[i]);
  1679   00F87E  502F               	movf	SetDeviceMACAddress@i^0,w,c
  1680   00F880  0F15               	addlw	low (_mrf24_data_config+20)
  1681   00F882  6ED9               	movwf	fsr2l,c
  1682   00F884  6ADA               	clrf	fsr2h,c
  1683   00F886  50DF               	movf	indf2,w,c
  1684   00F888  6E2D               	movwf	SetShortAddr@value^0,c
  1685   00F88A  502A               	movf	_my_default_mac_address^0,w,c
  1686   00F88C  EC7D  F07B         	call	_SetShortAddr
  1687   00F890  2A2A               	incf	_my_default_mac_address^0,f,c
  1688   00F892                     
  1689                           ;drivers/scr/drv_mrf24j40.c: 461:     }
  1690   00F892  4A2F               	infsnz	SetDeviceMACAddress@i^0,f,c
  1691   00F894  2A30               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  1692   00F896  BE30               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  1693   00F898  EF57  F07C         	goto	u361
  1694   00F89C  5030               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  1695   00F89E  E109               	bnz	u360
  1696   00F8A0  0E08               	movlw	8
  1697   00F8A2  5C2F               	subwf	SetDeviceMACAddress@i^0,w,c
  1698   00F8A4  A0D8               	btfss	status,0,c
  1699   00F8A6  EF57  F07C         	goto	u361
  1700   00F8AA  EF59  F07C         	goto	u360
  1701   00F8AE                     u361:
  1702   00F8AE  EF3F  F07C         	goto	l1545
  1703   00F8B2                     u360:
  1704   00F8B2  0012               	return		;funcret
  1705   00F8B4                     __end_of_SetDeviceMACAddress:
  1706                           	callstack 0
  1707                           
  1708 ;; *************** function _SetDeviceAddress *****************
  1709 ;; Defined at:
  1710 ;;		line 440 in file "drivers/scr/drv_mrf24j40.c"
  1711 ;; Parameters:    Size  Location     Type
  1712 ;;		None
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;		None
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      void 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;Total ram usage:        0 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; Hardware stack levels required when called: 3
  1731 ;; This function calls:
  1732 ;;		_SetShortAddr
  1733 ;; This function is called by:
  1734 ;;		_MRF24J40Init
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text5
  1739   00F762                     __ptext5:
  1740                           	callstack 0
  1741   00F762                     _SetDeviceAddress:
  1742                           	callstack 26
  1743   00F762                     
  1744                           ;drivers/scr/drv_mrf24j40.c: 442:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> 8));
  1745   00F762  5020               	movf	(_mrf24_data_config+31)^0,w,c
  1746   00F764  6E2D               	movwf	SetShortAddr@value^0,c
  1747   00F766  0E04               	movlw	4
  1748   00F768  EC7D  F07B         	call	_SetShortAddr
  1749                           
  1750                           ;drivers/scr/drv_mrf24j40.c: 443:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  1751   00F76C  C01F  F02D         	movff	_mrf24_data_config+30,SetShortAddr@value
  1752   00F770  0E03               	movlw	3
  1753   00F772  EC7D  F07B         	call	_SetShortAddr
  1754                           
  1755                           ;drivers/scr/drv_mrf24j40.c: 444:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> 8));
  1756   00F776  501E               	movf	(_mrf24_data_config+29)^0,w,c
  1757   00F778  6E2D               	movwf	SetShortAddr@value^0,c
  1758   00F77A  0E02               	movlw	2
  1759   00F77C  EC7D  F07B         	call	_SetShortAddr
  1760                           
  1761                           ;drivers/scr/drv_mrf24j40.c: 445:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  1762   00F780  C01D  F02D         	movff	_mrf24_data_config+28,SetShortAddr@value
  1763   00F784  0E01               	movlw	1
  1764   00F786  EC7D  F07B         	call	_SetShortAddr
  1765   00F78A  0012               	return		;funcret
  1766   00F78C                     __end_of_SetDeviceAddress:
  1767                           	callstack 0
  1768                           
  1769 ;; *************** function _SetChannel *****************
  1770 ;; Defined at:
  1771 ;;		line 426 in file "drivers/scr/drv_mrf24j40.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;Total ram usage:        0 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 3
  1792 ;; This function calls:
  1793 ;;		_SetLongAddr
  1794 ;;		_SetShortAddr
  1795 ;; This function is called by:
  1796 ;;		_MRF24J40Init
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text6
  1801   00F78C                     __ptext6:
  1802                           	callstack 0
  1803   00F78C                     _SetChannel:
  1804                           	callstack 26
  1805   00F78C                     
  1806                           ;drivers/scr/drv_mrf24j40.c: 428:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  1807   00F78C  0E02               	movlw	2
  1808   00F78E  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1809   00F790  0E00               	movlw	0
  1810   00F792  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1811   00F794  C004  F02F         	movff	_mrf24_data_config+3,SetLongAddr@value
  1812   00F798  EC18  F07C         	call	_SetLongAddr	;wreg free
  1813                           
  1814                           ;drivers/scr/drv_mrf24j40.c: 429:  SetShortAddr((0x36), 0x04);
  1815   00F79C  0E04               	movlw	4
  1816   00F79E  6E2D               	movwf	SetShortAddr@value^0,c
  1817   00F7A0  0E36               	movlw	54
  1818   00F7A2  EC7D  F07B         	call	_SetShortAddr
  1819                           
  1820                           ;drivers/scr/drv_mrf24j40.c: 430:  SetShortAddr((0x36), 0x00);
  1821   00F7A6  0E00               	movlw	0
  1822   00F7A8  6E2D               	movwf	SetShortAddr@value^0,c
  1823   00F7AA  0E36               	movlw	54
  1824   00F7AC  EC7D  F07B         	call	_SetShortAddr
  1825   00F7B0                     
  1826                           ;drivers/scr/drv_mrf24j40.c: 431:  _delay((unsigned long)((192)*(16000000/4000000.0)));;
  1827   00F7B0  0E00               	movlw	0
  1828   00F7B2                     u617:
  1829   00F7B2  2EE8               	decfsz	wreg,f,c
  1830   00F7B4  D7FE               	bra	u617
  1831   00F7B6  0012               	return		;funcret
  1832   00F7B8                     __end_of_SetChannel:
  1833                           	callstack 0
  1834                           
  1835 ;; *************** function _InicializoVariables *****************
  1836 ;; Defined at:
  1837 ;;		line 332 in file "drivers/scr/drv_mrf24j40.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  i               2    0[COMRAM] int 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1855 ;;Total ram usage:        2 bytes
  1856 ;; Hardware stack levels used: 1
  1857 ;; This function calls:
  1858 ;;		Nothing
  1859 ;; This function is called by:
  1860 ;;		_MRF24J40Init
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           	psect	text7
  1865   00F8F8                     __ptext7:
  1866                           	callstack 0
  1867   00F8F8                     _InicializoVariables:
  1868                           	callstack 29
  1869   00F8F8                     
  1870                           ;drivers/scr/drv_mrf24j40.c: 334:     for(int i = 0; i < 16; i++){
  1871   00F8F8  0E00               	movlw	0
  1872   00F8FA  6E2C               	movwf	(InicializoVariables@i+1)^0,c
  1873   00F8FC  0E00               	movlw	0
  1874   00F8FE  6E2B               	movwf	InicializoVariables@i^0,c
  1875   00F900                     l1493:
  1876                           
  1877                           ;drivers/scr/drv_mrf24j40.c: 336:         if(i < 8)
  1878   00F900  BE2C               	btfsc	(InicializoVariables@i+1)^0,7,c
  1879   00F902  EF8E  F07C         	goto	u340
  1880   00F906  502C               	movf	(InicializoVariables@i+1)^0,w,c
  1881   00F908  E107               	bnz	u341
  1882   00F90A  0E08               	movlw	8
  1883   00F90C  5C2B               	subwf	InicializoVariables@i^0,w,c
  1884   00F90E  B0D8               	btfsc	status,0,c
  1885   00F910  EF8C  F07C         	goto	u341
  1886   00F914  EF8E  F07C         	goto	u340
  1887   00F918                     u341:
  1888   00F918  EF9B  F07C         	goto	l54
  1889   00F91C                     u340:
  1890   00F91C                     
  1891                           ;drivers/scr/drv_mrf24j40.c: 337:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  1892   00F91C  0E09               	movlw	low _default_mac_address
  1893   00F91E  242B               	addwf	InicializoVariables@i^0,w,c
  1894   00F920  6EF6               	movwf	tblptrl,c
  1895   00F922  0EFD               	movlw	high _default_mac_address
  1896   00F924  202C               	addwfc	(InicializoVariables@i+1)^0,w,c
  1897   00F926  6EF7               	movwf	tblptrh,c
  1898   00F928                     	if	0	;There are less than 3 active tblptr bytes
  1899   00F928                     	endif
  1900   00F928  502B               	movf	InicializoVariables@i^0,w,c
  1901   00F92A  0F15               	addlw	low (_mrf24_data_config+20)
  1902   00F92C  6ED9               	movwf	fsr2l,c
  1903   00F92E  6ADA               	clrf	fsr2h,c
  1904   00F930  0008               	tblrd		*
  1905   00F932  CFF5 FFDF          	movff	tablat,indf2
  1906   00F936                     l54:
  1907                           
  1908                           ;drivers/scr/drv_mrf24j40.c: 338:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  1909   00F936  0EF9               	movlw	low _default_security_key
  1910   00F938  242B               	addwf	InicializoVariables@i^0,w,c
  1911   00F93A  6EF6               	movwf	tblptrl,c
  1912   00F93C  0EFC               	movlw	high _default_security_key
  1913   00F93E  202C               	addwfc	(InicializoVariables@i+1)^0,w,c
  1914   00F940  6EF7               	movwf	tblptrh,c
  1915   00F942                     	if	0	;There are less than 3 active tblptr bytes
  1916   00F942                     	endif
  1917   00F942  502B               	movf	InicializoVariables@i^0,w,c
  1918   00F944  0F05               	addlw	low (_mrf24_data_config+4)
  1919   00F946  6ED9               	movwf	fsr2l,c
  1920   00F948  6ADA               	clrf	fsr2h,c
  1921   00F94A  0008               	tblrd		*
  1922   00F94C  CFF5 FFDF          	movff	tablat,indf2
  1923   00F950                     
  1924                           ;drivers/scr/drv_mrf24j40.c: 339:     }
  1925   00F950  4A2B               	infsnz	InicializoVariables@i^0,f,c
  1926   00F952  2A2C               	incf	(InicializoVariables@i+1)^0,f,c
  1927   00F954  BE2C               	btfsc	(InicializoVariables@i+1)^0,7,c
  1928   00F956  EFB6  F07C         	goto	u351
  1929   00F95A  502C               	movf	(InicializoVariables@i+1)^0,w,c
  1930   00F95C  E109               	bnz	u350
  1931   00F95E  0E10               	movlw	16
  1932   00F960  5C2B               	subwf	InicializoVariables@i^0,w,c
  1933   00F962  A0D8               	btfss	status,0,c
  1934   00F964  EFB6  F07C         	goto	u351
  1935   00F968  EFB8  F07C         	goto	u350
  1936   00F96C                     u351:
  1937   00F96C  EF80  F07C         	goto	l1493
  1938   00F970                     u350:
  1939   00F970                     
  1940                           ;drivers/scr/drv_mrf24j40.c: 340:     mrf24_data_config.sequence_number = 0x68;
  1941   00F970  0E68               	movlw	104
  1942   00F972  6E03               	movwf	(_mrf24_data_config+2)^0,c
  1943                           
  1944                           ;drivers/scr/drv_mrf24j40.c: 341:     mrf24_data_config.my_channel = CH_11;
  1945   00F974  0E03               	movlw	3
  1946   00F976  6E04               	movwf	(_mrf24_data_config+3)^0,c
  1947   00F978                     
  1948                           ;drivers/scr/drv_mrf24j40.c: 342:     mrf24_data_config.get_new_msg = 0;
  1949   00F978  6A01               	clrf	_mrf24_data_config^0,c
  1950   00F97A                     
  1951                           ;drivers/scr/drv_mrf24j40.c: 343:     mrf24_data_config.put_new_msg = 0;
  1952   00F97A  6A02               	clrf	(_mrf24_data_config+1)^0,c
  1953                           
  1954                           ;drivers/scr/drv_mrf24j40.c: 344:     mrf24_data_config.my_panid = 0x1234;
  1955   00F97C  0E12               	movlw	18
  1956   00F97E  6E1E               	movwf	(_mrf24_data_config+29)^0,c
  1957   00F980  0E34               	movlw	52
  1958   00F982  6E1D               	movwf	(_mrf24_data_config+28)^0,c
  1959                           
  1960                           ;drivers/scr/drv_mrf24j40.c: 345:     mrf24_data_config.my_address = 0x0001;
  1961   00F984  0E00               	movlw	0
  1962   00F986  6E20               	movwf	(_mrf24_data_config+31)^0,c
  1963   00F988  0E01               	movlw	1
  1964   00F98A  6E1F               	movwf	(_mrf24_data_config+30)^0,c
  1965                           
  1966                           ;drivers/scr/drv_mrf24j40.c: 346:     mrf24_data_config.intervalo = 0x2222;
  1967   00F98C  0E22               	movlw	34
  1968   00F98E  6E22               	movwf	(_mrf24_data_config+33)^0,c
  1969   00F990  0E22               	movlw	34
  1970   00F992  6E21               	movwf	(_mrf24_data_config+32)^0,c
  1971                           
  1972                           ;drivers/scr/drv_mrf24j40.c: 347:     mrf24_data_in.source_address = 0;
  1973   00F994  0E00               	movlw	0
  1974   00F996  0100               	movlb	0	; () banked
  1975   00F998  6F63               	movwf	(_mrf24_data_in+3)& (0+255),b
  1976   00F99A  0E00               	movlw	0
  1977   00F99C  6F62               	movwf	(_mrf24_data_in+2)& (0+255),b
  1978                           
  1979                           ;drivers/scr/drv_mrf24j40.c: 348:     mrf24_data_in.source_panid = 0;
  1980   00F99E  0E00               	movlw	0
  1981   00F9A0  6F61               	movwf	(_mrf24_data_in+1)& (0+255),b
  1982   00F9A2  0E00               	movlw	0
  1983   00F9A4  6F60               	movwf	_mrf24_data_in& (0+255),b
  1984   00F9A6                     
  1985                           ; BSR set to: 0
  1986                           ;drivers/scr/drv_mrf24j40.c: 349:     mrf24_data_in.tamano_mensaje = 0;
  1987   00F9A6  6B64               	clrf	(_mrf24_data_in+4)& (0+255),b
  1988   00F9A8                     
  1989                           ; BSR set to: 0
  1990                           ;drivers/scr/drv_mrf24j40.c: 350:     mrf24_data_in.buffer_entrada[0] = 0;
  1991   00F9A8  6B65               	clrf	(_mrf24_data_in+5)& (0+255),b
  1992   00F9AA                     
  1993                           ; BSR set to: 0
  1994   00F9AA  0012               	return		;funcret
  1995   00F9AC                     __end_of_InicializoVariables:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _InicializoPines *****************
  1999 ;; Defined at:
  2000 ;;		line 21 in file "drivers/scr/drv_mrf24j40_port.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 1
  2021 ;; This function calls:
  2022 ;;		_SetCSPin
  2023 ;;		_SetResetPin
  2024 ;;		_SetWakePin
  2025 ;; This function is called by:
  2026 ;;		_MRF24J40Init
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text8
  2031   00F6DE                     __ptext8:
  2032                           	callstack 0
  2033   00F6DE                     _InicializoPines:
  2034                           	callstack 28
  2035   00F6DE                     
  2036                           ;drivers/scr/drv_mrf24j40_port.c: 23:     TRISBbits.TRISB0 = 1;
  2037   00F6DE  8093               	bsf	147,0,c	;volatile
  2038                           
  2039                           ;drivers/scr/drv_mrf24j40_port.c: 24:     TRISCbits.TRISC6 = 0;
  2040   00F6E0  9C94               	bcf	148,6,c	;volatile
  2041                           
  2042                           ;drivers/scr/drv_mrf24j40_port.c: 25:     TRISCbits.TRISC7 = 0;
  2043   00F6E2  9E94               	bcf	148,7,c	;volatile
  2044                           
  2045                           ;drivers/scr/drv_mrf24j40_port.c: 26:     TRISDbits.TRISD4 = 0;
  2046   00F6E4  9895               	bcf	149,4,c	;volatile
  2047   00F6E6                     
  2048                           ;drivers/scr/drv_mrf24j40_port.c: 27:     SetCSPin(1);
  2049   00F6E6  0E01               	movlw	1
  2050   00F6E8  EC28  F07B         	call	_SetCSPin
  2051                           
  2052                           ;drivers/scr/drv_mrf24j40_port.c: 28:     SetWakePin(1);
  2053   00F6EC  0E01               	movlw	1
  2054   00F6EE  EC36  F07B         	call	_SetWakePin
  2055                           
  2056                           ;drivers/scr/drv_mrf24j40_port.c: 29:     SetResetPin(0);
  2057   00F6F2  0E00               	movlw	0
  2058   00F6F4  EC2F  F07B         	call	_SetResetPin
  2059   00F6F8  0012               	return		;funcret
  2060   00F6FA                     __end_of_InicializoPines:
  2061                           	callstack 0
  2062                           
  2063 ;; *************** function _SetWakePin *****************
  2064 ;; Defined at:
  2065 ;;		line 49 in file "drivers/scr/drv_mrf24j40_port.c"
  2066 ;; Parameters:    Size  Location     Type
  2067 ;;  estado          1    wreg     _Bool 
  2068 ;; Auto vars:     Size  Location     Type
  2069 ;;  estado          1    0[COMRAM] _Bool 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2083 ;;Total ram usage:        1 bytes
  2084 ;; Hardware stack levels used: 1
  2085 ;; This function calls:
  2086 ;;		Nothing
  2087 ;; This function is called by:
  2088 ;;		_InicializoPines
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           	psect	text9
  2093   00F66C                     __ptext9:
  2094                           	callstack 0
  2095   00F66C                     _SetWakePin:
  2096                           	callstack 28
  2097                           
  2098                           ;incstack = 0
  2099                           ;SetWakePin@estado stored from wreg
  2100   00F66C  6E2B               	movwf	SetWakePin@estado^0,c
  2101   00F66E                     
  2102                           ;drivers/scr/drv_mrf24j40_port.c: 51:     LATCbits.LATC7 = estado;
  2103   00F66E  B02B               	btfsc	SetWakePin@estado^0,0,c
  2104   00F670  D002               	bra	u65
  2105   00F672  9E8B               	bcf	139,7,c	;volatile
  2106   00F674  D001               	bra	u66
  2107   00F676                     u65:
  2108   00F676  8E8B               	bsf	139,7,c	;volatile
  2109   00F678                     u66:
  2110   00F678  0012               	return		;funcret
  2111   00F67A                     __end_of_SetWakePin:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _SetResetPin *****************
  2115 ;; Defined at:
  2116 ;;		line 60 in file "drivers/scr/drv_mrf24j40_port.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  estado          1    wreg     _Bool 
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;  estado          1    0[COMRAM] _Bool 
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2133 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2134 ;;Total ram usage:        1 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; This function calls:
  2137 ;;		Nothing
  2138 ;; This function is called by:
  2139 ;;		_MRF24J40Init
  2140 ;;		_InicializoPines
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text10
  2145   00F65E                     __ptext10:
  2146                           	callstack 0
  2147   00F65E                     _SetResetPin:
  2148                           	callstack 29
  2149                           
  2150                           ;incstack = 0
  2151                           ;SetResetPin@estado stored from wreg
  2152   00F65E  6E2B               	movwf	SetResetPin@estado^0,c
  2153   00F660                     
  2154                           ;drivers/scr/drv_mrf24j40_port.c: 62:     LATDbits.LATD4 = estado;
  2155   00F660  B02B               	btfsc	SetResetPin@estado^0,0,c
  2156   00F662  D002               	bra	u45
  2157   00F664  988C               	bcf	140,4,c	;volatile
  2158   00F666  D001               	bra	u46
  2159   00F668                     u45:
  2160   00F668  888C               	bsf	140,4,c	;volatile
  2161   00F66A                     u46:
  2162   00F66A  0012               	return		;funcret
  2163   00F66C                     __end_of_SetResetPin:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function _GetShortAddr *****************
  2167 ;; Defined at:
  2168 ;;		line 375 in file "drivers/scr/drv_mrf24j40.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  reg_address     1    wreg     unsigned char 
  2171 ;; Auto vars:     Size  Location     Type
  2172 ;;  reg_address     1    3[COMRAM] unsigned char 
  2173 ;;  leido_spi       1    2[COMRAM] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      unsigned char 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;Total ram usage:        2 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 2
  2190 ;; This function calls:
  2191 ;;		_ReadByteSPIPort
  2192 ;;		_SetCSPin
  2193 ;;		_WriteByteSPIPort
  2194 ;; This function is called by:
  2195 ;;		_MRF24J40Init
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text11
  2200   00F73C                     __ptext11:
  2201                           	callstack 0
  2202   00F73C                     _GetShortAddr:
  2203                           	callstack 27
  2204                           
  2205                           ;incstack = 0
  2206                           ;GetShortAddr@reg_address stored from wreg
  2207   00F73C  6E2E               	movwf	GetShortAddr@reg_address^0,c
  2208   00F73E                     
  2209                           ;drivers/scr/drv_mrf24j40.c: 378:     reg_address = (uint8_t) (reg_address << 1) & 0x7E;
  2210   00F73E  502E               	movf	GetShortAddr@reg_address^0,w,c
  2211   00F740  242E               	addwf	GetShortAddr@reg_address^0,w,c
  2212   00F742  0B7E               	andlw	126
  2213   00F744  6E2E               	movwf	GetShortAddr@reg_address^0,c
  2214   00F746                     
  2215                           ;drivers/scr/drv_mrf24j40.c: 379:     SetCSPin(0);
  2216   00F746  0E00               	movlw	0
  2217   00F748  EC28  F07B         	call	_SetCSPin
  2218   00F74C                     
  2219                           ;drivers/scr/drv_mrf24j40.c: 380:     WriteByteSPIPort(reg_address);
  2220   00F74C  502E               	movf	GetShortAddr@reg_address^0,w,c
  2221   00F74E  EC23  F07B         	call	_WriteByteSPIPort
  2222   00F752                     
  2223                           ;drivers/scr/drv_mrf24j40.c: 381:     leido_spi = ReadByteSPIPort();
  2224   00F752  EC20  F07B         	call	_ReadByteSPIPort	;wreg free
  2225   00F756  6E2D               	movwf	GetShortAddr@leido_spi^0,c
  2226   00F758                     
  2227                           ;drivers/scr/drv_mrf24j40.c: 382:     SetCSPin(1);
  2228   00F758  0E01               	movlw	1
  2229   00F75A  EC28  F07B         	call	_SetCSPin
  2230   00F75E                     
  2231                           ;drivers/scr/drv_mrf24j40.c: 383:  return leido_spi;
  2232   00F75E  502D               	movf	GetShortAddr@leido_spi^0,w,c
  2233   00F760  0012               	return		;funcret
  2234   00F762                     __end_of_GetShortAddr:
  2235                           	callstack 0
  2236                           
  2237 ;; *************** function _GetLongAddr *****************
  2238 ;; Defined at:
  2239 ;;		line 408 in file "drivers/scr/drv_mrf24j40.c"
  2240 ;; Parameters:    Size  Location     Type
  2241 ;;  reg_address     2    2[COMRAM] unsigned short 
  2242 ;; Auto vars:     Size  Location     Type
  2243 ;;  toReturn        1    6[COMRAM] unsigned char 
  2244 ;; Return value:  Size  Location     Type
  2245 ;;                  1    wreg      unsigned char 
  2246 ;; Registers used:
  2247 ;;		wreg, status,2, status,0, cstack
  2248 ;; Tracked objects:
  2249 ;;		On entry : 0/0
  2250 ;;		On exit  : 0/0
  2251 ;;		Unchanged: 0/0
  2252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2254 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2255 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;Total ram usage:        5 bytes
  2258 ;; Hardware stack levels used: 1
  2259 ;; Hardware stack levels required when called: 2
  2260 ;; This function calls:
  2261 ;;		_ReadByteSPIPort
  2262 ;;		_SetCSPin
  2263 ;;		_WriteByteSPIPort
  2264 ;; This function is called by:
  2265 ;;		_MRF24J40Init
  2266 ;;		_ReciboPaquete
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text12
  2271   00F8B4                     __ptext12:
  2272                           	callstack 0
  2273   00F8B4                     _GetLongAddr:
  2274                           	callstack 27
  2275   00F8B4                     
  2276                           ;drivers/scr/drv_mrf24j40.c: 410:  uint8_t toReturn;;drivers/scr/drv_mrf24j40.c: 411:   
      +                            reg_address = (reg_address << 5) | 0x8000;
  2277   00F8B4  C02D  F02F         	movff	GetLongAddr@reg_address,??_GetLongAddr
  2278   00F8B8  C02E  F030         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  2279   00F8BC  0E05               	movlw	5
  2280   00F8BE                     u375:
  2281   00F8BE  90D8               	bcf	status,0,c
  2282   00F8C0  362F               	rlcf	??_GetLongAddr^0,f,c
  2283   00F8C2  3630               	rlcf	(??_GetLongAddr+1)^0,f,c
  2284   00F8C4  2EE8               	decfsz	wreg,f,c
  2285   00F8C6  EF5F  F07C         	goto	u375
  2286   00F8CA  0E00               	movlw	0
  2287   00F8CC  102F               	iorwf	??_GetLongAddr^0,w,c
  2288   00F8CE  6E2D               	movwf	GetLongAddr@reg_address^0,c
  2289   00F8D0  0E80               	movlw	128
  2290   00F8D2  1030               	iorwf	(??_GetLongAddr+1)^0,w,c
  2291   00F8D4  6E2E               	movwf	(GetLongAddr@reg_address+1)^0,c
  2292   00F8D6                     
  2293                           ;drivers/scr/drv_mrf24j40.c: 412:     SetCSPin(0);
  2294   00F8D6  0E00               	movlw	0
  2295   00F8D8  EC28  F07B         	call	_SetCSPin
  2296   00F8DC                     
  2297                           ;drivers/scr/drv_mrf24j40.c: 413:     WriteByteSPIPort((uint8_t) (reg_address >> 8));
  2298   00F8DC  502E               	movf	(GetLongAddr@reg_address+1)^0,w,c
  2299   00F8DE  EC23  F07B         	call	_WriteByteSPIPort
  2300   00F8E2                     
  2301                           ;drivers/scr/drv_mrf24j40.c: 414:  WriteByteSPIPort((uint8_t) reg_address );
  2302   00F8E2  502D               	movf	GetLongAddr@reg_address^0,w,c
  2303   00F8E4  EC23  F07B         	call	_WriteByteSPIPort
  2304   00F8E8                     
  2305                           ;drivers/scr/drv_mrf24j40.c: 416:  toReturn = ReadByteSPIPort();
  2306   00F8E8  EC20  F07B         	call	_ReadByteSPIPort	;wreg free
  2307   00F8EC  6E31               	movwf	GetLongAddr@toReturn^0,c
  2308   00F8EE                     
  2309                           ;drivers/scr/drv_mrf24j40.c: 417:     SetCSPin(1);
  2310   00F8EE  0E01               	movlw	1
  2311   00F8F0  EC28  F07B         	call	_SetCSPin
  2312   00F8F4                     
  2313                           ;drivers/scr/drv_mrf24j40.c: 418:  return toReturn;
  2314   00F8F4  5031               	movf	GetLongAddr@toReturn^0,w,c
  2315   00F8F6  0012               	return		;funcret
  2316   00F8F8                     __end_of_GetLongAddr:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function _ReadByteSPIPort *****************
  2320 ;; Defined at:
  2321 ;;		line 93 in file "drivers/scr/drv_mrf24j40_port.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      unsigned char 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 1
  2342 ;; This function calls:
  2343 ;;		_SPIRead
  2344 ;; This function is called by:
  2345 ;;		_GetShortAddr
  2346 ;;		_GetLongAddr
  2347 ;; This function uses a non-reentrant model
  2348 ;;
  2349                           
  2350                           	psect	text13
  2351   00F640                     __ptext13:
  2352                           	callstack 0
  2353   00F640                     _ReadByteSPIPort:
  2354                           	callstack 27
  2355   00F640                     
  2356                           ;drivers/scr/drv_mrf24j40_port.c: 95:     return SPIRead();
  2357   00F640  EC3D  F07B         	call	_SPIRead	;wreg free
  2358   00F644  0012               	return		;funcret
  2359   00F646                     __end_of_ReadByteSPIPort:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _SPIRead *****************
  2363 ;; Defined at:
  2364 ;;		line 82 in file "drivers/scr/drv_mspi_port.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;		None
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      unsigned char 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;Total ram usage:        0 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_ReadByteSPIPort
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text14
  2392   00F67A                     __ptext14:
  2393                           	callstack 0
  2394   00F67A                     _SPIRead:
  2395                           	callstack 27
  2396   00F67A                     
  2397                           ;drivers/scr/drv_mspi_port.c: 84:     SSPCON1bits.WCOL = 0;
  2398   00F67A  9EC6               	bcf	198,7,c	;volatile
  2399                           
  2400                           ;drivers/scr/drv_mspi_port.c: 85:     SSPBUF = 0x00;
  2401   00F67C  6AC9               	clrf	201,c	;volatile
  2402   00F67E                     l189:
  2403   00F67E  A0C7               	btfss	199,0,c	;volatile
  2404   00F680  EF44  F07B         	goto	u321
  2405   00F684  EF46  F07B         	goto	u320
  2406   00F688                     u321:
  2407   00F688  EF3F  F07B         	goto	l189
  2408   00F68C                     u320:
  2409   00F68C                     
  2410                           ;drivers/scr/drv_mspi_port.c: 87:     return SSPBUF;
  2411   00F68C  50C9               	movf	201,w,c	;volatile
  2412   00F68E  0012               	return		;funcret
  2413   00F690                     __end_of_SPIRead:
  2414                           	callstack 0
  2415                           
  2416 ;; *************** function _EnviarDato *****************
  2417 ;; Defined at:
  2418 ;;		line 535 in file "drivers/scr/drv_mrf24j40.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  pos             1    8[COMRAM] unsigned char 
  2423 ;;  i               1    7[COMRAM] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2434 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2437 ;;Total ram usage:        2 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; Hardware stack levels required when called: 3
  2440 ;; This function calls:
  2441 ;;		_SetLongAddr
  2442 ;;		_SetShortAddr
  2443 ;; This function is called by:
  2444 ;;		_main
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text15
  2449   00FA70                     __ptext15:
  2450                           	callstack 0
  2451   00FA70                     _EnviarDato:
  2452                           	callstack 27
  2453   00FA70                     
  2454                           ;drivers/scr/drv_mrf24j40.c: 537:  uint8_t pos = 0;
  2455   00FA70  6A33               	clrf	EnviarDato@pos^0,c
  2456   00FA72                     
  2457                           ;drivers/scr/drv_mrf24j40.c: 540:  SetLongAddr(pos++, i);
  2458   00FA72  0E00               	movlw	0
  2459   00FA74  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  2460   00FA76  0E00               	movlw	0
  2461   00FA78  6E2D               	movwf	SetLongAddr@reg_address^0,c
  2462   00FA7A  0E0F               	movlw	15
  2463   00FA7C  6E2F               	movwf	SetLongAddr@value^0,c
  2464   00FA7E  EC18  F07C         	call	_SetLongAddr	;wreg free
  2465   00FA82  2A33               	incf	EnviarDato@pos^0,f,c
  2466   00FA84                     
  2467                           ;drivers/scr/drv_mrf24j40.c: 541:  SetLongAddr(pos++, mrf24_data_out.tamano_mensaje + i)
      +                          ;
  2468   00FA84  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2469   00FA88  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2470   00FA8A  5027               	movf	(_mrf24_data_out+4)^0,w,c
  2471   00FA8C  0F0F               	addlw	15
  2472   00FA8E  6E2F               	movwf	SetLongAddr@value^0,c
  2473   00FA90  EC18  F07C         	call	_SetLongAddr	;wreg free
  2474   00FA94  2A33               	incf	EnviarDato@pos^0,f,c
  2475   00FA96                     
  2476                           ;drivers/scr/drv_mrf24j40.c: 542:  SetLongAddr(pos++, (0X01)|(0X20)|(0X40));
  2477   00FA96  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2478   00FA9A  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2479   00FA9C  0E61               	movlw	97
  2480   00FA9E  6E2F               	movwf	SetLongAddr@value^0,c
  2481   00FAA0  EC18  F07C         	call	_SetLongAddr	;wreg free
  2482   00FAA4  2A33               	incf	EnviarDato@pos^0,f,c
  2483   00FAA6                     
  2484                           ;drivers/scr/drv_mrf24j40.c: 543:  SetLongAddr(pos++, (0XC0)|(0X08));
  2485   00FAA6  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2486   00FAAA  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2487   00FAAC  0EC8               	movlw	200
  2488   00FAAE  6E2F               	movwf	SetLongAddr@value^0,c
  2489   00FAB0  EC18  F07C         	call	_SetLongAddr	;wreg free
  2490   00FAB4  2A33               	incf	EnviarDato@pos^0,f,c
  2491   00FAB6                     
  2492                           ;drivers/scr/drv_mrf24j40.c: 544:  SetLongAddr(pos++, mrf24_data_config.sequence_number+
      +                          +);
  2493   00FAB6  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2494   00FABA  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2495   00FABC  EE20  F003         	lfsr	2,_mrf24_data_config+2
  2496   00FAC0  50DF               	movf	indf2,w,c
  2497   00FAC2  2ADF               	incf	indf2,f,c
  2498   00FAC4  6E2F               	movwf	SetLongAddr@value^0,c
  2499   00FAC6  EC18  F07C         	call	_SetLongAddr	;wreg free
  2500   00FACA  2A33               	incf	EnviarDato@pos^0,f,c
  2501   00FACC                     
  2502                           ;drivers/scr/drv_mrf24j40.c: 545:  SetLongAddr(pos++, (uint8_t) mrf24_data_out.destinity
      +                          _panid);
  2503   00FACC  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2504   00FAD0  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2505   00FAD2  C023  F02F         	movff	_mrf24_data_out,SetLongAddr@value
  2506   00FAD6  EC18  F07C         	call	_SetLongAddr	;wreg free
  2507   00FADA  2A33               	incf	EnviarDato@pos^0,f,c
  2508   00FADC                     
  2509                           ;drivers/scr/drv_mrf24j40.c: 546:  SetLongAddr(pos++, (uint8_t) (mrf24_data_out.destinit
      +                          y_panid >> 8));
  2510   00FADC  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2511   00FAE0  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2512   00FAE2  5024               	movf	(_mrf24_data_out+1)^0,w,c
  2513   00FAE4  6E2F               	movwf	SetLongAddr@value^0,c
  2514   00FAE6  EC18  F07C         	call	_SetLongAddr	;wreg free
  2515   00FAEA  2A33               	incf	EnviarDato@pos^0,f,c
  2516   00FAEC                     
  2517                           ;drivers/scr/drv_mrf24j40.c: 547:  SetLongAddr(pos++, (uint8_t) mrf24_data_out.destinity
      +                          _address);
  2518   00FAEC  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2519   00FAF0  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2520   00FAF2  C025  F02F         	movff	_mrf24_data_out+2,SetLongAddr@value
  2521   00FAF6  EC18  F07C         	call	_SetLongAddr	;wreg free
  2522   00FAFA  2A33               	incf	EnviarDato@pos^0,f,c
  2523   00FAFC                     
  2524                           ;drivers/scr/drv_mrf24j40.c: 548:  SetLongAddr(pos++, (uint8_t) (mrf24_data_out.destinit
      +                          y_address >> 8));
  2525   00FAFC  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2526   00FB00  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2527   00FB02  5026               	movf	(_mrf24_data_out+3)^0,w,c
  2528   00FB04  6E2F               	movwf	SetLongAddr@value^0,c
  2529   00FB06  EC18  F07C         	call	_SetLongAddr	;wreg free
  2530   00FB0A  2A33               	incf	EnviarDato@pos^0,f,c
  2531   00FB0C                     
  2532                           ;drivers/scr/drv_mrf24j40.c: 550:  for(i = 0; i < 8; i++) {
  2533   00FB0C  6A32               	clrf	EnviarDato@i^0,c
  2534   00FB0E                     l1685:
  2535                           
  2536                           ;drivers/scr/drv_mrf24j40.c: 552:   SetLongAddr(pos++, mrf24_data_config.my_mac[i]);
  2537   00FB0E  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2538   00FB12  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2539   00FB14  5032               	movf	EnviarDato@i^0,w,c
  2540   00FB16  0F15               	addlw	low (_mrf24_data_config+20)
  2541   00FB18  6ED9               	movwf	fsr2l,c
  2542   00FB1A  6ADA               	clrf	fsr2h,c
  2543   00FB1C  50DF               	movf	indf2,w,c
  2544   00FB1E  6E2F               	movwf	SetLongAddr@value^0,c
  2545   00FB20  EC18  F07C         	call	_SetLongAddr	;wreg free
  2546   00FB24  2A33               	incf	EnviarDato@pos^0,f,c
  2547   00FB26                     
  2548                           ;drivers/scr/drv_mrf24j40.c: 553:  }
  2549   00FB26  2A32               	incf	EnviarDato@i^0,f,c
  2550   00FB28  0E07               	movlw	7
  2551   00FB2A  6432               	cpfsgt	EnviarDato@i^0,c
  2552   00FB2C  EF9A  F07D         	goto	u411
  2553   00FB30  EF9C  F07D         	goto	u410
  2554   00FB34                     u411:
  2555   00FB34  EF87  F07D         	goto	l1685
  2556   00FB38                     u410:
  2557   00FB38  EFAD  F07D         	goto	l1697
  2558   00FB3C                     l1693:
  2559                           
  2560                           ;drivers/scr/drv_mrf24j40.c: 557:   SetLongAddr(pos++, *mrf24_data_out.buffer_salida++);
  2561   00FB3C  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2562   00FB40  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2563   00FB42  C028  FFF6         	movff	_mrf24_data_out+5,tblptrl
  2564   00FB46  C029  FFF7         	movff	_mrf24_data_out+6,tblptrh
  2565   00FB4A  4A28               	infsnz	(_mrf24_data_out+5)^0,f,c
  2566   00FB4C  2A29               	incf	(_mrf24_data_out+6)^0,f,c
  2567   00FB4E                     	if	0	;tblptru may be non-zero
  2568   00FB4E                     	endif
  2569   00FB4E                     	if	0	;tblptru may be non-zero
  2570   00FB4E                     	endif
  2571   00FB4E  0008               	tblrd		*
  2572   00FB50  CFF5 F02F          	movff	tablat,SetLongAddr@value
  2573   00FB54  EC18  F07C         	call	_SetLongAddr	;wreg free
  2574   00FB58  2A33               	incf	EnviarDato@pos^0,f,c
  2575   00FB5A                     l1697:
  2576                           
  2577                           ;drivers/scr/drv_mrf24j40.c: 555:  while(*mrf24_data_out.buffer_salida) {
  2578   00FB5A  EE20  F028         	lfsr	2,_mrf24_data_out+5
  2579   00FB5E  CFDE FFF6          	movff	postinc2,tblptrl
  2580   00FB62  CFDD FFF7          	movff	postdec2,tblptrh
  2581   00FB66                     	if	0	;tblptru may be non-zero
  2582   00FB66                     	endif
  2583   00FB66                     	if	0	;tblptru may be non-zero
  2584   00FB66                     	endif
  2585   00FB66  0008               	tblrd		*
  2586   00FB68  50F5               	movf	tablat,w,c
  2587   00FB6A  0900               	iorlw	0
  2588   00FB6C  A4D8               	btfss	status,2,c
  2589   00FB6E  EFBB  F07D         	goto	u421
  2590   00FB72  EFBD  F07D         	goto	u420
  2591   00FB76                     u421:
  2592   00FB76  EF9E  F07D         	goto	l1693
  2593   00FB7A                     u420:
  2594   00FB7A                     
  2595                           ;drivers/scr/drv_mrf24j40.c: 559:  SetShortAddr((0x1B), 1 | (0X04));
  2596   00FB7A  0E05               	movlw	5
  2597   00FB7C  6E2D               	movwf	SetShortAddr@value^0,c
  2598   00FB7E  0E1B               	movlw	27
  2599   00FB80  EC7D  F07B         	call	_SetShortAddr
  2600   00FB84  0012               	return		;funcret
  2601   00FB86                     __end_of_EnviarDato:
  2602                           	callstack 0
  2603                           
  2604 ;; *************** function _SetShortAddr *****************
  2605 ;; Defined at:
  2606 ;;		line 360 in file "drivers/scr/drv_mrf24j40.c"
  2607 ;; Parameters:    Size  Location     Type
  2608 ;;  reg_address     1    wreg     unsigned char 
  2609 ;;  value           1    2[COMRAM] unsigned char 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  reg_address     1    3[COMRAM] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2621 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;Total ram usage:        2 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 2
  2628 ;; This function calls:
  2629 ;;		_SetCSPin
  2630 ;;		_WriteByteSPIPort
  2631 ;; This function is called by:
  2632 ;;		_MRF24J40Init
  2633 ;;		_SetChannel
  2634 ;;		_SetDeviceAddress
  2635 ;;		_SetDeviceMACAddress
  2636 ;;		_EnviarDato
  2637 ;;		_EnviarDatoEncriptado
  2638 ;;		_EnviarComando
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text16
  2643   00F6FA                     __ptext16:
  2644                           	callstack 0
  2645   00F6FA                     _SetShortAddr:
  2646                           	callstack 27
  2647                           
  2648                           ;incstack = 0
  2649                           ;SetShortAddr@reg_address stored from wreg
  2650   00F6FA  6E2E               	movwf	SetShortAddr@reg_address^0,c
  2651   00F6FC                     
  2652                           ;drivers/scr/drv_mrf24j40.c: 362:     reg_address = (uint8_t) (reg_address << 1) | 0x01;
  2653   00F6FC  80D8               	bsf	status,0,c
  2654   00F6FE  362E               	rlcf	SetShortAddr@reg_address^0,f,c
  2655   00F700                     
  2656                           ;drivers/scr/drv_mrf24j40.c: 363:     SetCSPin(0);
  2657   00F700  0E00               	movlw	0
  2658   00F702  EC28  F07B         	call	_SetCSPin
  2659   00F706                     
  2660                           ;drivers/scr/drv_mrf24j40.c: 364:  WriteByteSPIPort(reg_address);
  2661   00F706  502E               	movf	SetShortAddr@reg_address^0,w,c
  2662   00F708  EC23  F07B         	call	_WriteByteSPIPort
  2663   00F70C                     
  2664                           ;drivers/scr/drv_mrf24j40.c: 365:  WriteByteSPIPort(value);
  2665   00F70C  502D               	movf	SetShortAddr@value^0,w,c
  2666   00F70E  EC23  F07B         	call	_WriteByteSPIPort
  2667   00F712                     
  2668                           ;drivers/scr/drv_mrf24j40.c: 366:     SetCSPin(1);
  2669   00F712  0E01               	movlw	1
  2670   00F714  EC28  F07B         	call	_SetCSPin
  2671   00F718  0012               	return		;funcret
  2672   00F71A                     __end_of_SetShortAddr:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _SetLongAddr *****************
  2676 ;; Defined at:
  2677 ;;		line 391 in file "drivers/scr/drv_mrf24j40.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;  reg_address     2    2[COMRAM] unsigned short 
  2680 ;;  value           1    4[COMRAM] unsigned char 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2692 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;Total ram usage:        5 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; Hardware stack levels required when called: 2
  2699 ;; This function calls:
  2700 ;;		_SetCSPin
  2701 ;;		_WriteByteSPIPort
  2702 ;; This function is called by:
  2703 ;;		_MRF24J40Init
  2704 ;;		_SetChannel
  2705 ;;		_EnviarDato
  2706 ;;		_EnviarDatoEncriptado
  2707 ;;		_EnviarComando
  2708 ;; This function uses a non-reentrant model
  2709 ;;
  2710                           
  2711                           	psect	text17
  2712   00F830                     __ptext17:
  2713                           	callstack 0
  2714   00F830                     _SetLongAddr:
  2715                           	callstack 27
  2716   00F830                     
  2717                           ;drivers/scr/drv_mrf24j40.c: 393:     reg_address = (reg_address << 5) | 0x8010;
  2718   00F830  C02D  F030         	movff	SetLongAddr@reg_address,??_SetLongAddr
  2719   00F834  C02E  F031         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  2720   00F838  0E05               	movlw	5
  2721   00F83A                     u335:
  2722   00F83A  90D8               	bcf	status,0,c
  2723   00F83C  3630               	rlcf	??_SetLongAddr^0,f,c
  2724   00F83E  3631               	rlcf	(??_SetLongAddr+1)^0,f,c
  2725   00F840  2EE8               	decfsz	wreg,f,c
  2726   00F842  EF1D  F07C         	goto	u335
  2727   00F846  0E10               	movlw	16
  2728   00F848  1030               	iorwf	??_SetLongAddr^0,w,c
  2729   00F84A  6E2D               	movwf	SetLongAddr@reg_address^0,c
  2730   00F84C  0E80               	movlw	128
  2731   00F84E  1031               	iorwf	(??_SetLongAddr+1)^0,w,c
  2732   00F850  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  2733   00F852                     
  2734                           ;drivers/scr/drv_mrf24j40.c: 394:     SetCSPin(0);
  2735   00F852  0E00               	movlw	0
  2736   00F854  EC28  F07B         	call	_SetCSPin
  2737   00F858                     
  2738                           ;drivers/scr/drv_mrf24j40.c: 395:  WriteByteSPIPort((uint8_t) (reg_address >> 8));
  2739   00F858  502E               	movf	(SetLongAddr@reg_address+1)^0,w,c
  2740   00F85A  EC23  F07B         	call	_WriteByteSPIPort
  2741   00F85E                     
  2742                           ;drivers/scr/drv_mrf24j40.c: 396:  WriteByteSPIPort((uint8_t) reg_address );
  2743   00F85E  502D               	movf	SetLongAddr@reg_address^0,w,c
  2744   00F860  EC23  F07B         	call	_WriteByteSPIPort
  2745   00F864                     
  2746                           ;drivers/scr/drv_mrf24j40.c: 398:  WriteByteSPIPort(value);
  2747   00F864  502F               	movf	SetLongAddr@value^0,w,c
  2748   00F866  EC23  F07B         	call	_WriteByteSPIPort
  2749   00F86A                     
  2750                           ;drivers/scr/drv_mrf24j40.c: 399:     SetCSPin(1);
  2751   00F86A  0E01               	movlw	1
  2752   00F86C  EC28  F07B         	call	_SetCSPin
  2753   00F870  0012               	return		;funcret
  2754   00F872                     __end_of_SetLongAddr:
  2755                           	callstack 0
  2756                           
  2757 ;; *************** function _WriteByteSPIPort *****************
  2758 ;; Defined at:
  2759 ;;		line 71 in file "drivers/scr/drv_mrf24j40_port.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  dato            1    wreg     unsigned char 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  dato            1    1[COMRAM] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;Total ram usage:        1 bytes
  2778 ;; Hardware stack levels used: 1
  2779 ;; Hardware stack levels required when called: 1
  2780 ;; This function calls:
  2781 ;;		_SPIWriteByte
  2782 ;; This function is called by:
  2783 ;;		_SetShortAddr
  2784 ;;		_GetShortAddr
  2785 ;;		_SetLongAddr
  2786 ;;		_GetLongAddr
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text18
  2791   00F646                     __ptext18:
  2792                           	callstack 0
  2793   00F646                     _WriteByteSPIPort:
  2794                           	callstack 27
  2795                           
  2796                           ;incstack = 0
  2797                           ;WriteByteSPIPort@dato stored from wreg
  2798   00F646  6E2C               	movwf	WriteByteSPIPort@dato^0,c
  2799   00F648                     
  2800                           ;drivers/scr/drv_mrf24j40_port.c: 73:     SPIWriteByte(dato);
  2801   00F648  502C               	movf	WriteByteSPIPort@dato^0,w,c
  2802   00F64A  EC48  F07B         	call	_SPIWriteByte
  2803   00F64E  0012               	return		;funcret
  2804   00F650                     __end_of_WriteByteSPIPort:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function _SPIWriteByte *****************
  2808 ;; Defined at:
  2809 ;;		line 54 in file "drivers/scr/drv_mspi_port.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  dato            1    wreg     unsigned char 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  dato            1    0[COMRAM] unsigned char 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  1    wreg      void 
  2816 ;; Registers used:
  2817 ;;		wreg
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;Total ram usage:        1 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; This function calls:
  2830 ;;		Nothing
  2831 ;; This function is called by:
  2832 ;;		_WriteByteSPIPort
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836                           	psect	text19
  2837   00F690                     __ptext19:
  2838                           	callstack 0
  2839   00F690                     _SPIWriteByte:
  2840                           	callstack 27
  2841                           
  2842                           ;incstack = 0
  2843                           ;SPIWriteByte@dato stored from wreg
  2844   00F690  6E2B               	movwf	SPIWriteByte@dato^0,c
  2845   00F692                     
  2846                           ;drivers/scr/drv_mspi_port.c: 56:     PIR1bits.SSPIF = 0;
  2847   00F692  969E               	bcf	158,3,c	;volatile
  2848   00F694                     
  2849                           ;drivers/scr/drv_mspi_port.c: 57:     SSPBUF = dato;
  2850   00F694  C02B  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  2851   00F698                     l174:
  2852   00F698  A69E               	btfss	158,3,c	;volatile
  2853   00F69A  EF51  F07B         	goto	u301
  2854   00F69E  EF53  F07B         	goto	u300
  2855   00F6A2                     u301:
  2856   00F6A2  EF4C  F07B         	goto	l174
  2857   00F6A6                     u300:
  2858   00F6A6  0012               	return		;funcret
  2859   00F6A8                     __end_of_SPIWriteByte:
  2860                           	callstack 0
  2861                           
  2862 ;; *************** function _SetCSPin *****************
  2863 ;; Defined at:
  2864 ;;		line 38 in file "drivers/scr/drv_mrf24j40_port.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  estado          1    wreg     _Bool 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  estado          1    0[COMRAM] _Bool 
  2869 ;; Return value:  Size  Location     Type
  2870 ;;                  1    wreg      void 
  2871 ;; Registers used:
  2872 ;;		wreg
  2873 ;; Tracked objects:
  2874 ;;		On entry : 0/0
  2875 ;;		On exit  : 0/0
  2876 ;;		Unchanged: 0/0
  2877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2881 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;Total ram usage:        1 bytes
  2883 ;; Hardware stack levels used: 1
  2884 ;; This function calls:
  2885 ;;		Nothing
  2886 ;; This function is called by:
  2887 ;;		_SetShortAddr
  2888 ;;		_GetShortAddr
  2889 ;;		_SetLongAddr
  2890 ;;		_GetLongAddr
  2891 ;;		_InicializoPines
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           	psect	text20
  2896   00F650                     __ptext20:
  2897                           	callstack 0
  2898   00F650                     _SetCSPin:
  2899                           	callstack 28
  2900                           
  2901                           ;incstack = 0
  2902                           ;SetCSPin@estado stored from wreg
  2903   00F650  6E2B               	movwf	SetCSPin@estado^0,c
  2904   00F652                     
  2905                           ;drivers/scr/drv_mrf24j40_port.c: 40:     LATCbits.LATC6 = estado;
  2906   00F652  B02B               	btfsc	SetCSPin@estado^0,0,c
  2907   00F654  D002               	bra	u315
  2908   00F656  9C8B               	bcf	139,6,c	;volatile
  2909   00F658  D001               	bra	u316
  2910   00F65A                     u315:
  2911   00F65A  8C8B               	bsf	139,6,c	;volatile
  2912   00F65C                     u316:
  2913   00F65C  0012               	return		;funcret
  2914   00F65E                     __end_of_SetCSPin:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _BoardInit *****************
  2918 ;; Defined at:
  2919 ;;		line 21 in file "hardware_config.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;		None
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;		None
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, status,2, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2937 ;;Total ram usage:        0 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 1
  2940 ;; This function calls:
  2941 ;;		_SPIInit
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;; This function uses a non-reentrant model
  2945 ;;
  2946                           
  2947                           	psect	text21
  2948   00F7F2                     __ptext21:
  2949                           	callstack 0
  2950   00F7F2                     _BoardInit:
  2951                           	callstack 29
  2952   00F7F2                     
  2953                           ;hardware_config.c: 23:     PORTA = 0;
  2954   00F7F2  6A80               	clrf	128,c	;volatile
  2955                           
  2956                           ;hardware_config.c: 24:     PORTB = 0;
  2957   00F7F4  6A81               	clrf	129,c	;volatile
  2958                           
  2959                           ;hardware_config.c: 25:     PORTC = 0;
  2960   00F7F6  6A82               	clrf	130,c	;volatile
  2961                           
  2962                           ;hardware_config.c: 26:     PORTD = 0;
  2963   00F7F8  6A83               	clrf	131,c	;volatile
  2964                           
  2965                           ;hardware_config.c: 27:     PORTE = 0;
  2966   00F7FA  6A84               	clrf	132,c	;volatile
  2967                           
  2968                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  2969   00F7FC  8C93               	bsf	147,6,c	;volatile
  2970                           
  2971                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  2972   00F7FE  8E93               	bsf	147,7,c	;volatile
  2973                           
  2974                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  2975   00F800  9496               	bcf	150,2,c	;volatile
  2976                           
  2977                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  2978   00F802  9096               	bcf	150,0,c	;volatile
  2979                           
  2980                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  2981   00F804  9296               	bcf	150,1,c	;volatile
  2982                           
  2983                           ;hardware_config.c: 37:  GIE = 0;
  2984   00F806  9EF2               	bcf	4082,7,c	;volatile
  2985                           
  2986                           ;hardware_config.c: 38:  PEIE = 0;
  2987   00F808  9CF2               	bcf	4082,6,c	;volatile
  2988                           
  2989                           ;hardware_config.c: 39:  RBIE = 0;
  2990   00F80A  96F2               	bcf	4082,3,c	;volatile
  2991                           
  2992                           ;hardware_config.c: 40:  T0IE = 0;
  2993   00F80C  9AF2               	bcf	4082,5,c	;volatile
  2994                           
  2995                           ;hardware_config.c: 41:  TMR1IE = 0;
  2996   00F80E  909D               	bcf	3997,0,c	;volatile
  2997                           
  2998                           ;hardware_config.c: 42:  TMR2IE = 0;
  2999   00F810  929D               	bcf	3997,1,c	;volatile
  3000                           
  3001                           ;hardware_config.c: 43:  CCP1IE = 0;
  3002   00F812  949D               	bcf	3997,2,c	;volatile
  3003                           
  3004                           ;hardware_config.c: 44:  CCP2IE = 0;
  3005   00F814  90A0               	bcf	4000,0,c	;volatile
  3006                           
  3007                           ;hardware_config.c: 45:  EEIE = 0;
  3008   00F816  98A0               	bcf	4000,4,c	;volatile
  3009                           
  3010                           ;hardware_config.c: 46:  SSPIE = 0;
  3011   00F818  969D               	bcf	3997,3,c	;volatile
  3012                           
  3013                           ;hardware_config.c: 47:  BCLIE = 0;
  3014   00F81A  96A0               	bcf	4000,3,c	;volatile
  3015                           
  3016                           ;hardware_config.c: 48:  ADIE = 0;
  3017   00F81C  9C9D               	bcf	3997,6,c	;volatile
  3018                           
  3019                           ;hardware_config.c: 49:  RBIE = 0;
  3020   00F81E  96F2               	bcf	4082,3,c	;volatile
  3021                           
  3022                           ;hardware_config.c: 50:  RCIE = 0;
  3023   00F820  9A9D               	bcf	3997,5,c	;volatile
  3024   00F822                     
  3025                           ;hardware_config.c: 51:     OSCCON = 0b01110010;
  3026   00F822  0E72               	movlw	114
  3027   00F824  6ED3               	movwf	211,c	;volatile
  3028                           
  3029                           ;hardware_config.c: 52:     OSCTUNE = 0b11011111;
  3030   00F826  0EDF               	movlw	223
  3031   00F828  6E9B               	movwf	155,c	;volatile
  3032   00F82A                     
  3033                           ;hardware_config.c: 55:     SPIInit();
  3034   00F82A  EC61  F07B         	call	_SPIInit	;wreg free
  3035   00F82E  0012               	return		;funcret
  3036   00F830                     __end_of_BoardInit:
  3037                           	callstack 0
  3038                           
  3039 ;; *************** function _SPIInit *****************
  3040 ;; Defined at:
  3041 ;;		line 31 in file "drivers/scr/drv_mspi_port.c"
  3042 ;; Parameters:    Size  Location     Type
  3043 ;;		None
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;                  1    wreg      void 
  3048 ;; Registers used:
  3049 ;;		None
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;Total ram usage:        0 bytes
  3060 ;; Hardware stack levels used: 1
  3061 ;; This function calls:
  3062 ;;		Nothing
  3063 ;; This function is called by:
  3064 ;;		_BoardInit
  3065 ;; This function uses a non-reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text22
  3069   00F6C2                     __ptext22:
  3070                           	callstack 0
  3071   00F6C2                     _SPIInit:
  3072                           	callstack 29
  3073   00F6C2                     
  3074                           ;drivers/scr/drv_mspi_port.c: 33:     TRISCbits.TRISC3 = 0;
  3075   00F6C2  9694               	bcf	148,3,c	;volatile
  3076                           
  3077                           ;drivers/scr/drv_mspi_port.c: 34:     TRISCbits.TRISC5 = 0;
  3078   00F6C4  9A94               	bcf	148,5,c	;volatile
  3079                           
  3080                           ;drivers/scr/drv_mspi_port.c: 35:     TRISCbits.TRISC4 = 1;
  3081   00F6C6  8894               	bsf	148,4,c	;volatile
  3082                           
  3083                           ;drivers/scr/drv_mspi_port.c: 36:  SSPSTATbits.CKE = 1;
  3084   00F6C8  8CC7               	bsf	199,6,c	;volatile
  3085                           
  3086                           ;drivers/scr/drv_mspi_port.c: 37:  SSPCON1bits.WCOL = 1;
  3087   00F6CA  8EC6               	bsf	198,7,c	;volatile
  3088                           
  3089                           ;drivers/scr/drv_mspi_port.c: 38:  SSPCON1bits.SSPOV = 0;
  3090   00F6CC  9CC6               	bcf	198,6,c	;volatile
  3091                           
  3092                           ;drivers/scr/drv_mspi_port.c: 39:  SSPCON1bits.SSPEN = 1;
  3093   00F6CE  8AC6               	bsf	198,5,c	;volatile
  3094                           
  3095                           ;drivers/scr/drv_mspi_port.c: 40:  SSPCON1bits.CKP = 0;
  3096   00F6D0  98C6               	bcf	198,4,c	;volatile
  3097                           
  3098                           ;drivers/scr/drv_mspi_port.c: 41:  SSPSTATbits.SMP = 1;
  3099   00F6D2  8EC7               	bsf	199,7,c	;volatile
  3100                           
  3101                           ;drivers/scr/drv_mspi_port.c: 42:  SSPCON1bits.SSPM3 = 0;
  3102   00F6D4  96C6               	bcf	198,3,c	;volatile
  3103                           
  3104                           ;drivers/scr/drv_mspi_port.c: 43:  SSPCON1bits.SSPM2 = 0;
  3105   00F6D6  94C6               	bcf	198,2,c	;volatile
  3106                           
  3107                           ;drivers/scr/drv_mspi_port.c: 44:  SSPCON1bits.SSPM1 = 0;
  3108   00F6D8  92C6               	bcf	198,1,c	;volatile
  3109                           
  3110                           ;drivers/scr/drv_mspi_port.c: 45:  SSPCON1bits.SSPM0 = 1;
  3111   00F6DA  80C6               	bsf	198,0,c	;volatile
  3112   00F6DC  0012               	return		;funcret
  3113   00F6DE                     __end_of_SPIInit:
  3114                           	callstack 0
  3115                           
  3116                           	psect	rparam
  3117   000001                     ___rparam_used  equ	1
  3118   000000                     ___param_bank   equ	0
  3119   000000                     __Lparam        equ	__Lrparam
  3120   000000                     __Hparam        equ	__Hrparam
  3121                           
  3122                           	psect	idloc
  3123                           
  3124                           ;Config register IDLOC0 @ 0x200000
  3125                           ;	unspecified, using default values
  3126   200000                     	org	2097152
  3127   200000  FF                 	db	255
  3128                           
  3129                           ;Config register IDLOC1 @ 0x200001
  3130                           ;	unspecified, using default values
  3131   200001                     	org	2097153
  3132   200001  FF                 	db	255
  3133                           
  3134                           ;Config register IDLOC2 @ 0x200002
  3135                           ;	unspecified, using default values
  3136   200002                     	org	2097154
  3137   200002  FF                 	db	255
  3138                           
  3139                           ;Config register IDLOC3 @ 0x200003
  3140                           ;	unspecified, using default values
  3141   200003                     	org	2097155
  3142   200003  FF                 	db	255
  3143                           
  3144                           ;Config register IDLOC4 @ 0x200004
  3145                           ;	unspecified, using default values
  3146   200004                     	org	2097156
  3147   200004  FF                 	db	255
  3148                           
  3149                           ;Config register IDLOC5 @ 0x200005
  3150                           ;	unspecified, using default values
  3151   200005                     	org	2097157
  3152   200005  FF                 	db	255
  3153                           
  3154                           ;Config register IDLOC6 @ 0x200006
  3155                           ;	unspecified, using default values
  3156   200006                     	org	2097158
  3157   200006  FF                 	db	255
  3158                           
  3159                           ;Config register IDLOC7 @ 0x200007
  3160                           ;	unspecified, using default values
  3161   200007                     	org	2097159
  3162   200007  FF                 	db	255
  3163                           
  3164                           	psect	config
  3165                           
  3166                           ; Padding undefined space
  3167   300000                     	org	3145728
  3168   300000  FF                 	db	255
  3169                           
  3170                           ;Config register CONFIG1H @ 0x300001
  3171                           ;	Oscillator Selection bits
  3172                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3173                           ;	Fail-Safe Clock Monitor Enable bit
  3174                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3175                           ;	Internal/External Oscillator Switchover bit
  3176                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3177   300001                     	org	3145729
  3178   300001  08                 	db	8
  3179                           
  3180                           ;Config register CONFIG2L @ 0x300002
  3181                           ;	Power-up Timer Enable bit
  3182                           ;	PWRTEN = OFF, PWRT disabled
  3183                           ;	Brown-out Reset Enable bits
  3184                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3185                           ;	Brown Out Reset Voltage bits
  3186                           ;	BORV = 22, VBOR set to 2.2 V nominal
  3187   300002                     	org	3145730
  3188   300002  11                 	db	17
  3189                           
  3190                           ;Config register CONFIG2H @ 0x300003
  3191                           ;	Watchdog Timer Enable bit
  3192                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3193                           ;	Watchdog Timer Postscale Select bits
  3194                           ;	WDTPS = 8192, 1:8192
  3195   300003                     	org	3145731
  3196   300003  1A                 	db	26
  3197                           
  3198                           ; Padding undefined space
  3199   300004                     	org	3145732
  3200   300004  FF                 	db	255
  3201                           
  3202                           ;Config register CONFIG3H @ 0x300005
  3203                           ;	CCP2 MUX bit
  3204                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3205                           ;	PORTB A/D Enable bit
  3206                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3207                           ;	Low-Power Timer1 Oscillator Enable bit
  3208                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3209                           ;	HFINTOSC Fast Start-up
  3210                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  3211                           ;	MCLR Pin Enable bit
  3212                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3213   300005                     	org	3145733
  3214   300005  81                 	db	129
  3215                           
  3216                           ;Config register CONFIG4L @ 0x300006
  3217                           ;	Stack Full/Underflow Reset Enable bit
  3218                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3219                           ;	Single-Supply ICSP Enable bit
  3220                           ;	LVP = OFF, Single-Supply ICSP disabled
  3221                           ;	Extended Instruction Set Enable bit
  3222                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3223                           ;	Background Debugger Enable bit
  3224                           ;	DEBUG = ON, Background debugger enabled, RB6 and RB7 are dedicated to In-Circuit Debug
  3225   300006                     	org	3145734
  3226   300006  00                 	db	0
  3227                           
  3228                           ; Padding undefined space
  3229   300007                     	org	3145735
  3230   300007  FF                 	db	255
  3231                           
  3232                           ;Config register CONFIG5L @ 0x300008
  3233                           ;	Code Protection Block 0
  3234                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3235                           ;	Code Protection Block 1
  3236                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3237                           ;	Code Protection Block 2
  3238                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3239                           ;	Code Protection Block 3
  3240                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3241   300008                     	org	3145736
  3242   300008  0F                 	db	15
  3243                           
  3244                           ;Config register CONFIG5H @ 0x300009
  3245                           ;	Boot Block Code Protection bit
  3246                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3247                           ;	Data EEPROM Code Protection bit
  3248                           ;	CPD = OFF, Data EEPROM not code-protected
  3249   300009                     	org	3145737
  3250   300009  C0                 	db	192
  3251                           
  3252                           ;Config register CONFIG6L @ 0x30000A
  3253                           ;	Write Protection Block 0
  3254                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3255                           ;	Write Protection Block 1
  3256                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3257                           ;	Write Protection Block 2
  3258                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3259                           ;	Write Protection Block 3
  3260                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3261   30000A                     	org	3145738
  3262   30000A  0F                 	db	15
  3263                           
  3264                           ;Config register CONFIG6H @ 0x30000B
  3265                           ;	Configuration Register Write Protection bit
  3266                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3267                           ;	Boot Block Write Protection bit
  3268                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3269                           ;	Data EEPROM Write Protection bit
  3270                           ;	WRTD = OFF, Data EEPROM not write-protected
  3271   30000B                     	org	3145739
  3272   30000B  E0                 	db	224
  3273                           
  3274                           ;Config register CONFIG7L @ 0x30000C
  3275                           ;	unspecified, using default values
  3276                           ;	Table Read Protection Block 0
  3277                           ;	EBTR0 = 0x1, unprogrammed default
  3278                           ;	Table Read Protection Block 1
  3279                           ;	EBTR1 = 0x1, unprogrammed default
  3280                           ;	Table Read Protection Block 2
  3281                           ;	EBTR2 = 0x1, unprogrammed default
  3282                           ;	Table Read Protection Block 3
  3283                           ;	EBTR3 = 0x1, unprogrammed default
  3284   30000C                     	org	3145740
  3285   30000C  0F                 	db	15
  3286                           
  3287                           ;Config register CONFIG7H @ 0x30000D
  3288                           ;	Boot Block Table Read Protection bit
  3289                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3290   30000D                     	org	3145741
  3291   30000D  40                 	db	64
  3292                           tosu	equ	0xFFF
  3293                           tosh	equ	0xFFE
  3294                           tosl	equ	0xFFD
  3295                           stkptr	equ	0xFFC
  3296                           pclatu	equ	0xFFB
  3297                           pclath	equ	0xFFA
  3298                           pcl	equ	0xFF9
  3299                           tblptru	equ	0xFF8
  3300                           tblptrh	equ	0xFF7
  3301                           tblptrl	equ	0xFF6
  3302                           tablat	equ	0xFF5
  3303                           prodh	equ	0xFF4
  3304                           prodl	equ	0xFF3
  3305                           indf0	equ	0xFEF
  3306                           postinc0	equ	0xFEE
  3307                           postdec0	equ	0xFED
  3308                           preinc0	equ	0xFEC
  3309                           plusw0	equ	0xFEB
  3310                           fsr0h	equ	0xFEA
  3311                           fsr0l	equ	0xFE9
  3312                           wreg	equ	0xFE8
  3313                           indf1	equ	0xFE7
  3314                           postinc1	equ	0xFE6
  3315                           postdec1	equ	0xFE5
  3316                           preinc1	equ	0xFE4
  3317                           plusw1	equ	0xFE3
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           bsr	equ	0xFE0
  3321                           indf2	equ	0xFDF
  3322                           postinc2	equ	0xFDE
  3323                           postdec2	equ	0xFDD
  3324                           preinc2	equ	0xFDC
  3325                           plusw2	equ	0xFDB
  3326                           fsr2h	equ	0xFDA
  3327                           fsr2l	equ	0xFD9
  3328                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    24
    Data        0
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      53
    BANK0           160      0      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15           96      0       0

Pointer List with Targets:

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_1(CODE[29]), 

    S34$buffer_salida	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_1(CODE[29]), 

    SetMensajeSalida@mensaje	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_1(CODE[29]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_1(CODE[29]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_1(CODE[29]), 


Critical Paths under _main in COMRAM

    _main->_EnviarDato
    _main->_MRF24J40Init
    _SetMensajeSalida->_strlen
    _MRF24J40Init->_GetLongAddr
    _MRF24J40Init->_SetLongAddr
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_SetLongAddr
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _GetShortAddr->_WriteByteSPIPort
    _GetLongAddr->_WriteByteSPIPort
    _EnviarDato->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2978
                                              9 COMRAM     2     2      0
                          _BoardInit
                         _EnviarDato
                       _MRF24J40Init
                   _SetMensajeSalida
 ---------------------------------------------------------------------------------
 (1) _SetMensajeSalida                                     2     0      2     136
                                              4 COMRAM     2     0      2
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2      91
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         2     2      0    2008
                                              7 COMRAM     2     2      0
                        _GetLongAddr
                       _GetShortAddr
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  2     2      0     257
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           0     0      0     467
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  2     2      0     156
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _GetShortAddr                                         2     2      0     171
                                              2 COMRAM     2     2      0
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _GetLongAddr                                          5     3      2     181
                                              2 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (4) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EnviarDato                                           2     2      0     834
                                              7 COMRAM     2     2      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     278
                                              2 COMRAM     5     2      3
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _EnviarDato
     _SetLongAddr
       _SetCSPin
       _WriteByteSPIPort
         _SPIWriteByte
     _SetShortAddr
       _SetCSPin
       _WriteByteSPIPort
   _MRF24J40Init
     _GetLongAddr
       _ReadByteSPIPort
         _SPIRead
       _SetCSPin
       _WriteByteSPIPort
     _GetShortAddr
       _ReadByteSPIPort
       _SetCSPin
       _WriteByteSPIPort
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _SetLongAddr
       _SetShortAddr
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr
   _SetMensajeSalida
     _strlen

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3827      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK14          244      0       0      0.0%
BANK14             244      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      55     34.4%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BIGRAM_1            96      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     11      53     55.8%
BITBIGSFR_1lh       37      0       0      0.0%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRh          15      0       0      0.0%
BITBIGSFR_1h        13      0       0      0.0%
BITBIGSFRlh         11      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1ll        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     108      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sun Mar 30 08:56:50 2025

                 _SSPSTATbits 0FC7                            l61 F760                            l54 F936  
                          l70 F7B6                            l55 F9AA                            l64 F870  
                          l73 F78A                            l49 FCF6                            l58 F718  
                          l67 F8F6                            l78 F8B2                            l98 FB84  
                          u45 F668                            u46 F66A                            u65 F676  
                          u66 F678                 ?_MRF24J40Init 002B                           l115 F6C0  
                         l140 F6F8                           l143 F65C                           l152 F64E  
                         l209 F9C0                           l146 F678                           l171 F6DC  
                         l261 F82E                           l149 F66A                           l174 F698  
                         l158 F644                           l192 F68E                           l177 F6A6  
                         l189 F67E                           l941 F7F0                           l961 F660  
                         l995 F66E                           _GIE 7F97                           u300 F6A6  
                         u301 F6A2                           u320 F68C                           u400 FCB4  
                         u321 F688                           u401 FCB0                           u410 FB38  
                         u315 F65A                           u411 FB34                           u316 F65C  
                         u420 FB7A                           u340 F91C                           u421 FB76  
                         u341 F918                           u350 F970                           u510 FA0C  
                         u335 F83A                           u351 F96C                           u511 FA04  
                         u360 F8B2                           u361 F8AE                           u530 FA42  
                         u531 FA3A                           u380 F7E4                           u508 F9D6  
                         u381 F7E0                           u390 FBE0                           u375 F8BE  
                         u607 FBE6                           u391 FBDC                           u528 FA0E  
                         u617 F7B2                           u490 F9D4                           u491 F9CC  
                         u548 FA44                           u557 F9EE                           u567 FA24  
                         u577 FA58                           u587 FB94                           u597 FBAC  
                         wreg 0FE8           __end_of_GetLongAddr F8F8                          l1221 F7F2  
                        l1223 F822                          l1225 F82A                          l1501 F970  
                        l1503 F978                          l1097 F6C2                          l1441 F694  
                        l1521 F73E                          l1513 F6DE                          l1505 F97A  
                        l1601 FBE0                          l1443 F652                          l1451 F67A  
                        l1531 F75E                          l1523 F746                          l1515 F6E6  
                        l1507 F9A6                          l1611 FC10                          l1603 FBEE  
                        l1461 F706                          l1453 F68C                          l1525 F74C  
                        l1509 F9A8                          l1621 FC60                          l1613 FC20  
                        l1605 FBF8                          l1439 F692                          l1447 F648  
                        l1471 F852                          l1463 F70C                          l1527 F752  
                        l1519 F73E                          l1535 F762                          l1551 F896  
                        l1631 FC92                          l1623 FC6A                          l1615 FC30  
                        l1607 FBFC                          l1703 F6A8                          l1473 F858  
                        l1465 F712                          l1457 F6FC                          l1641 FA72  
                        l1561 F8E8                          l1553 F8B4                          l1529 F758  
                        l1545 F87E                          l1633 FCA0                          l1625 FC74  
                        l1617 FC40                          l1609 FC00                          l1705 F6B0  
                        l1475 F85E                          l1459 F700                          l1651 FA96  
                        l1643 FA72                          l1483 F640                          l1563 F8EE  
                        l1555 F8D6                          l1571 F7B0                          l1547 F890  
                        l1539 F872                          l1635 FCB4                          l1627 FC7E  
                        l1619 FC50                          l1477 F864                          l1469 F830  
                        l1661 FACA                          l1653 FAA4                          l1645 FA82  
                        l1565 F8F4                          l1557 F8DC                          l1493 F900  
                        l1549 F892                          l1629 FC88                          l1581 F7E4  
                        l1901 FA30                          l1479 F86A                          l1671 FAEC  
                        l1663 FACC                          l1655 FAA6                          l1647 FA84  
                        l1639 FA70                          l1559 F8E2                          l1495 F91C  
                        l1487 F8F8                          l1591 FBA0                          l1575 F7B8  
                        l1903 FA4E                          l1673 FAFA                          l1665 FADA  
                        l1657 FAB4                          l1649 FA94                          l1497 F950  
                        l1569 F78C                          l1593 FBA6                          l1585 FB86  
                        l1577 F7C4                          l1905 FA64                          l1691 FB28  
                        l1675 FAFC                          l1667 FADC                          l1659 FAB6  
                        l1499 F954                          l1595 FBB8                          l1587 FB8A  
                        l1579 F7C8                          l1693 FB3C                          l1685 FB0E  
                        l1677 FB0A                          l1669 FAEA                          l1597 FBC2  
                        l1589 FB8E                          l1695 FB58                          l1687 FB24  
                        l1679 FB0C                          l1599 FBCA                          l1697 FB5A  
                        l1689 FB26                          l1699 FB7A                          l1891 F9B4  
                        l1893 F9C2                          l1895 F9E4                          l1887 F9AC  
                        l1897 F9FA                          l1889 F9B0                          l1899 FA1A  
                        _ADIE 7CEE                          _EEIE 7D04                          STR_1 FD11  
                        _T0IE 7F95                          _PEIE 7F96                          _RBIE 7F93  
                        _RCIE 7CED                  _SPIWriteByte F690                          _main F9AC  
             __end_of_SPIInit F6DE               __end_of_SPIRead F690                          fsr2h 0FDA  
                        indf2 0FDF                          fsr2l 0FD9                   EnviarDato@i 0032  
     GetShortAddr@reg_address 002E                          start 0000                  ___param_bank 0000  
           ??_ReadByteSPIPort 002B                ??_MRF24J40Init 0032   __end_of_InicializoVariables F9AC  
                       ?_main 002B                         _BCLIE 7D03          SetDeviceMACAddress@i 002F  
                       _PORTA 0F80                         _PORTB 0F81                         _PORTC 0F82  
                       _PORTD 0F83                         _PORTE 0F84                         _SSPIE 7CEB  
        __end_of_GetShortAddr F762               _InicializoPines F6DE       SetShortAddr@reg_address 002E  
         MRF24J40Init@lectura 0033                         tablat 0FF5                         status 0FD8  
                  _EnviarDato FA70           _SetDeviceMACAddress F872               __initialization F71A  
                __end_of_main FA70              __end_of_SetCSPin F65E                   _GetLongAddr F8B4  
               ??_SetLongAddr 0030                        ??_main 0034                 __activetblptr 0002  
               ??_SetResetPin 002B          ?_SetDeviceMACAddress 002B                    _SetChannel F78C  
           ?_SetDeviceAddress 002B                        _CCP1IE 7CEA                        _CCP2IE 7D00  
                   ??_SPIInit 002B                     ??_SPIRead 002B            ??_SetDeviceAddress 002F  
                  _SetWakePin F66C                        _OSCCON 0FD3                        _TMR1IE 7CE8  
                      _TMR2IE 7CE9  __end_of_default_security_key FD09                        _SSPBUF 0FC9  
                      clear_0 F720                        clear_1 F72C                        isa$std 0001  
              SetCSPin@estado 002B       __end_of_InicializoPines F6FA                        _strlen F7B8  
       ??_SetDeviceMACAddress 002F          InicializoVariables@i 002B                 EnviarDato@pos 0033  
                __mediumconst FCF8             _mrf24_data_config 0001                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8           __end_of_SetLongAddr F872  
         __end_of_SetResetPin F66C         GetShortAddr@leido_spi 002D          __end_of_MRF24J40Init FCF8  
            _SetMensajeSalida F6A8                    __accesstop 0060       __end_of__initialization F732  
           __end_of_BoardInit F830                   ?_EnviarDato 002B                 ___rparam_used 0001  
            SetWakePin@estado 002B                 ?_SetShortAddr 002D                __pcstackCOMRAM 002B  
                 ?_SetChannel 002B                    __pbssBANK0 0060                   ?_SetWakePin 002B  
                   ?_SetCSPin 002B               _ReadByteSPIPort F640                  _GetShortAddr F73C  
              ??_SetShortAddr 002E                   _SetLongAddr F830                       ?_strlen 002B  
            ?_InicializoPines 002B          _default_security_key FCF9                   _SetResetPin F65E  
                     _OSCTUNE 0F9B                       _SPIInit F6C2                       _SPIRead F67A  
                  ??_SetCSPin 002B             SetShortAddr@value 002D                       __Hparam 0000  
                     __Lparam 0000                       __pcinit F71A                  ?_GetLongAddr 002D  
                     __ramtop 1000                       __ptext0 F9AC                       __ptext1 F6A8  
                     __ptext2 F7B8                       __ptext3 FB86                       __ptext4 F872  
                     __ptext5 F762                       __ptext6 F78C                       __ptext7 F8F8  
                     __ptext8 F6DE                       __ptext9 F66C              _WriteByteSPIPort F646  
     __end_of_ReadByteSPIPort F646          end_of_initialization F732                 __Lmediumconst FCF8  
         _default_mac_address FD09                       postdec2 0FDD                       postinc0 0FEE  
                     postinc2 0FDE                       strlen@a 002D                       strlen@s 002B  
                _MRF24J40Init FB86      __end_of_SetMensajeSalida F6C2          WriteByteSPIPort@dato 002C  
                   _TRISBbits 0F93                     _TRISCbits 0F94                     _TRISDbits 0F95  
                   _TRISEbits 0F96          __end_of_SetShortAddr F71A        _my_default_mac_address 002A  
                ??_EnviarDato 0032                     _BoardInit F7F2   __end_of_SetDeviceMACAddress F8B4  
              __end_of_strlen F7F2                  ??_SetChannel 0032           start_initialization F71A  
          __end_of_EnviarDato FB86              ?_ReadByteSPIPort 002B                 ?_SPIWriteByte 002B  
                ??_SetWakePin 002B                    ?_BoardInit 002B            __end_of_SetChannel F7B8  
                ?_SetLongAddr 002D                      ??_strlen 002D            __end_of_SetWakePin F67A  
                ?_SetResetPin 002B                   __pbssCOMRAM 0001       SetMensajeSalida@mensaje 002F  
                    ?_SPIInit 002B                      ?_SPIRead 002B                ??_SPIWriteByte 002B  
            SPIWriteByte@dato 002B              _SetDeviceAddress F762           _InicializoVariables F8F8  
    __end_of_WriteByteSPIPort F650                 __pmediumconst FCF8             SetResetPin@estado 002B  
        ?_InicializoVariables 002B              SetLongAddr@value 002F                      _LATCbits 0F8B  
                    _LATDbits 0F8C                      _LATEbits 0F8D                   ??_BoardInit 002B  
                    _PIR1bits 0F9E                  _SetShortAddr F6FA           GetLongAddr@toReturn 0031  
           ?_SetMensajeSalida 002F         ??_InicializoVariables 002B            ??_SetMensajeSalida 0031  
              _mrf24_data_out 0023                      _SetCSPin F650                      __Hrparam 0000  
                    __Lrparam 0000          __end_of_SPIWriteByte F6A8                      __ptext10 F65E  
                    __ptext11 F73C                      __ptext20 F650                      __ptext12 F8B4  
                    __ptext21 F7F2                      __ptext13 F640                      __ptext22 F6C2  
                    __ptext14 F67A                      __ptext15 FA70                      __ptext16 F6FA  
                    __ptext17 F830                      __ptext18 F646                      __ptext19 F690  
           ??_InicializoPines 002C                 ?_GetShortAddr 002B                      isa$xinst 0000  
 __end_of_default_mac_address FD11                 _mrf24_data_in 0060      __end_of_SetDeviceAddress F78C  
              ??_GetShortAddr 002D             ?_WriteByteSPIPort 002B                 ??_GetLongAddr 002F  
          ??_WriteByteSPIPort 002C        GetLongAddr@reg_address 002D                   _SSPCON1bits 0FC6  
      SetLongAddr@reg_address 002D  
