

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Mar 29 13:48:57 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 13/12/2024 GMT
    36                           ; 
    37                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F46K20 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000FE0                     bsr             equ	4064
    70   000FE9                     fsr0            equ	4073
    71   000FEA                     fsr0h           equ	4074
    72   000FE9                     fsr0l           equ	4073
    73   000FE1                     fsr1            equ	4065
    74   000FE2                     fsr1h           equ	4066
    75   000FE1                     fsr1l           equ	4065
    76   000FD9                     fsr2            equ	4057
    77   000FDA                     fsr2h           equ	4058
    78   000FD9                     fsr2l           equ	4057
    79   000FEF                     indf0           equ	4079
    80   000FE7                     indf1           equ	4071
    81   000FDF                     indf2           equ	4063
    82   000FF2                     intcon          equ	4082
    83   000000                     nvmcon          equ	0
    84   000FF9                     pcl             equ	4089
    85   000FFA                     pclath          equ	4090
    86   000FFB                     pclatu          equ	4091
    87   000FEB                     plusw0          equ	4075
    88   000FE3                     plusw1          equ	4067
    89   000FDB                     plusw2          equ	4059
    90   000FED                     postdec0        equ	4077
    91   000FE5                     postdec1        equ	4069
    92   000FDD                     postdec2        equ	4061
    93   000FEE                     postinc0        equ	4078
    94   000FE6                     postinc1        equ	4070
    95   000FDE                     postinc2        equ	4062
    96   000FEC                     preinc0         equ	4076
    97   000FE4                     preinc1         equ	4068
    98   000FDC                     preinc2         equ	4060
    99   000FF3                     prod            equ	4083
   100   000FF4                     prodh           equ	4084
   101   000FF3                     prodl           equ	4083
   102   000FD8                     status          equ	4056
   103   000FF5                     tablat          equ	4085
   104   000FF6                     tblptr          equ	4086
   105   000FF7                     tblptrh         equ	4087
   106   000FF6                     tblptrl         equ	4086
   107   000FF8                     tblptru         equ	4088
   108   000FFD                     tosl            equ	4093
   109   000FE8                     wreg            equ	4072
   110   000F77                     SSPMSK          equ	3959	;# 
   111   000F78                     SLRCON          equ	3960	;# 
   112   000F79                     CM2CON1         equ	3961	;# 
   113   000F7A                     CM2CON0         equ	3962	;# 
   114   000F7B                     CM1CON0         equ	3963	;# 
   115   000F7C                     WPUB            equ	3964	;# 
   116   000F7D                     IOCB            equ	3965	;# 
   117   000F7E                     ANSEL           equ	3966	;# 
   118   000F7F                     ANSELH          equ	3967	;# 
   119   000F80                     PORTA           equ	3968	;# 
   120   000F81                     PORTB           equ	3969	;# 
   121   000F82                     PORTC           equ	3970	;# 
   122   000F83                     PORTD           equ	3971	;# 
   123   000F84                     PORTE           equ	3972	;# 
   124   000F89                     LATA            equ	3977	;# 
   125   000F8A                     LATB            equ	3978	;# 
   126   000F8B                     LATC            equ	3979	;# 
   127   000F8C                     LATD            equ	3980	;# 
   128   000F8D                     LATE            equ	3981	;# 
   129   000F92                     TRISA           equ	3986	;# 
   130   000F92                     DDRA            equ	3986	;# 
   131   000F93                     TRISB           equ	3987	;# 
   132   000F93                     DDRB            equ	3987	;# 
   133   000F94                     TRISC           equ	3988	;# 
   134   000F94                     DDRC            equ	3988	;# 
   135   000F95                     TRISD           equ	3989	;# 
   136   000F95                     DDRD            equ	3989	;# 
   137   000F96                     TRISE           equ	3990	;# 
   138   000F96                     DDRE            equ	3990	;# 
   139   000F9B                     OSCTUNE         equ	3995	;# 
   140   000F9D                     PIE1            equ	3997	;# 
   141   000F9E                     PIR1            equ	3998	;# 
   142   000F9F                     IPR1            equ	3999	;# 
   143   000FA0                     PIE2            equ	4000	;# 
   144   000FA1                     PIR2            equ	4001	;# 
   145   000FA2                     IPR2            equ	4002	;# 
   146   000FA6                     EECON1          equ	4006	;# 
   147   000FA7                     EECON2          equ	4007	;# 
   148   000FA8                     EEDATA          equ	4008	;# 
   149   000FA9                     EEADR           equ	4009	;# 
   150   000FAA                     EEADRH          equ	4010	;# 
   151   000FAB                     RCSTA           equ	4011	;# 
   152   000FAB                     RCSTA1          equ	4011	;# 
   153   000FAC                     TXSTA           equ	4012	;# 
   154   000FAC                     TXSTA1          equ	4012	;# 
   155   000FAD                     TXREG           equ	4013	;# 
   156   000FAD                     TXREG1          equ	4013	;# 
   157   000FAE                     RCREG           equ	4014	;# 
   158   000FAE                     RCREG1          equ	4014	;# 
   159   000FAF                     SPBRG           equ	4015	;# 
   160   000FAF                     SPBRG1          equ	4015	;# 
   161   000FB0                     SPBRGH          equ	4016	;# 
   162   000FB1                     T3CON           equ	4017	;# 
   163   000FB2                     TMR3            equ	4018	;# 
   164   000FB2                     TMR3L           equ	4018	;# 
   165   000FB3                     TMR3H           equ	4019	;# 
   166   000FB4                     CVRCON2         equ	4020	;# 
   167   000FB5                     CVRCON          equ	4021	;# 
   168   000FB6                     ECCP1AS         equ	4022	;# 
   169   000FB7                     PWM1CON         equ	4023	;# 
   170   000FB8                     BAUDCON         equ	4024	;# 
   171   000FB8                     BAUDCTL         equ	4024	;# 
   172   000FB9                     PSTRCON         equ	4025	;# 
   173   000FBA                     CCP2CON         equ	4026	;# 
   174   000FBB                     CCPR2           equ	4027	;# 
   175   000FBB                     CCPR2L          equ	4027	;# 
   176   000FBC                     CCPR2H          equ	4028	;# 
   177   000FBD                     CCP1CON         equ	4029	;# 
   178   000FBE                     CCPR1           equ	4030	;# 
   179   000FBE                     CCPR1L          equ	4030	;# 
   180   000FBF                     CCPR1H          equ	4031	;# 
   181   000FC0                     ADCON2          equ	4032	;# 
   182   000FC1                     ADCON1          equ	4033	;# 
   183   000FC2                     ADCON0          equ	4034	;# 
   184   000FC3                     ADRES           equ	4035	;# 
   185   000FC3                     ADRESL          equ	4035	;# 
   186   000FC4                     ADRESH          equ	4036	;# 
   187   000FC5                     SSPCON2         equ	4037	;# 
   188   000FC6                     SSPCON1         equ	4038	;# 
   189   000FC7                     SSPSTAT         equ	4039	;# 
   190   000FC8                     SSPADD          equ	4040	;# 
   191   000FC9                     SSPBUF          equ	4041	;# 
   192   000FCA                     T2CON           equ	4042	;# 
   193   000FCB                     PR2             equ	4043	;# 
   194   000FCB                     MEMCON          equ	4043	;# 
   195   000FCC                     TMR2            equ	4044	;# 
   196   000FCD                     T1CON           equ	4045	;# 
   197   000FCE                     TMR1            equ	4046	;# 
   198   000FCE                     TMR1L           equ	4046	;# 
   199   000FCF                     TMR1H           equ	4047	;# 
   200   000FD0                     RCON            equ	4048	;# 
   201   000FD1                     WDTCON          equ	4049	;# 
   202   000FD2                     HLVDCON         equ	4050	;# 
   203   000FD2                     LVDCON          equ	4050	;# 
   204   000FD3                     OSCCON          equ	4051	;# 
   205   000FD5                     T0CON           equ	4053	;# 
   206   000FD6                     TMR0            equ	4054	;# 
   207   000FD6                     TMR0L           equ	4054	;# 
   208   000FD7                     TMR0H           equ	4055	;# 
   209   000FD8                     STATUS          equ	4056	;# 
   210   000FD9                     FSR2            equ	4057	;# 
   211   000FD9                     FSR2L           equ	4057	;# 
   212   000FDA                     FSR2H           equ	4058	;# 
   213   000FDB                     PLUSW2          equ	4059	;# 
   214   000FDC                     PREINC2         equ	4060	;# 
   215   000FDD                     POSTDEC2        equ	4061	;# 
   216   000FDE                     POSTINC2        equ	4062	;# 
   217   000FDF                     INDF2           equ	4063	;# 
   218   000FE0                     BSR             equ	4064	;# 
   219   000FE1                     FSR1            equ	4065	;# 
   220   000FE1                     FSR1L           equ	4065	;# 
   221   000FE2                     FSR1H           equ	4066	;# 
   222   000FE3                     PLUSW1          equ	4067	;# 
   223   000FE4                     PREINC1         equ	4068	;# 
   224   000FE5                     POSTDEC1        equ	4069	;# 
   225   000FE6                     POSTINC1        equ	4070	;# 
   226   000FE7                     INDF1           equ	4071	;# 
   227   000FE8                     WREG            equ	4072	;# 
   228   000FE9                     FSR0            equ	4073	;# 
   229   000FE9                     FSR0L           equ	4073	;# 
   230   000FEA                     FSR0H           equ	4074	;# 
   231   000FEB                     PLUSW0          equ	4075	;# 
   232   000FEC                     PREINC0         equ	4076	;# 
   233   000FED                     POSTDEC0        equ	4077	;# 
   234   000FEE                     POSTINC0        equ	4078	;# 
   235   000FEF                     INDF0           equ	4079	;# 
   236   000FF0                     INTCON3         equ	4080	;# 
   237   000FF1                     INTCON2         equ	4081	;# 
   238   000FF2                     INTCON          equ	4082	;# 
   239   000FF3                     PROD            equ	4083	;# 
   240   000FF3                     PRODL           equ	4083	;# 
   241   000FF4                     PRODH           equ	4084	;# 
   242   000FF5                     TABLAT          equ	4085	;# 
   243   000FF6                     TBLPTR          equ	4086	;# 
   244   000FF6                     TBLPTRL         equ	4086	;# 
   245   000FF7                     TBLPTRH         equ	4087	;# 
   246   000FF8                     TBLPTRU         equ	4088	;# 
   247   000FF9                     PCLAT           equ	4089	;# 
   248   000FF9                     PC              equ	4089	;# 
   249   000FF9                     PCL             equ	4089	;# 
   250   000FFA                     PCLATH          equ	4090	;# 
   251   000FFB                     PCLATU          equ	4091	;# 
   252   000FFC                     STKPTR          equ	4092	;# 
   253   000FFD                     TOS             equ	4093	;# 
   254   000FFD                     TOSL            equ	4093	;# 
   255   000FFE                     TOSH            equ	4094	;# 
   256   000FFF                     TOSU            equ	4095	;# 
   257   000F77                     SSPMSK          equ	3959	;# 
   258   000F78                     SLRCON          equ	3960	;# 
   259   000F79                     CM2CON1         equ	3961	;# 
   260   000F7A                     CM2CON0         equ	3962	;# 
   261   000F7B                     CM1CON0         equ	3963	;# 
   262   000F7C                     WPUB            equ	3964	;# 
   263   000F7D                     IOCB            equ	3965	;# 
   264   000F7E                     ANSEL           equ	3966	;# 
   265   000F7F                     ANSELH          equ	3967	;# 
   266   000F80                     PORTA           equ	3968	;# 
   267   000F81                     PORTB           equ	3969	;# 
   268   000F82                     PORTC           equ	3970	;# 
   269   000F83                     PORTD           equ	3971	;# 
   270   000F84                     PORTE           equ	3972	;# 
   271   000F89                     LATA            equ	3977	;# 
   272   000F8A                     LATB            equ	3978	;# 
   273   000F8B                     LATC            equ	3979	;# 
   274   000F8C                     LATD            equ	3980	;# 
   275   000F8D                     LATE            equ	3981	;# 
   276   000F92                     TRISA           equ	3986	;# 
   277   000F92                     DDRA            equ	3986	;# 
   278   000F93                     TRISB           equ	3987	;# 
   279   000F93                     DDRB            equ	3987	;# 
   280   000F94                     TRISC           equ	3988	;# 
   281   000F94                     DDRC            equ	3988	;# 
   282   000F95                     TRISD           equ	3989	;# 
   283   000F95                     DDRD            equ	3989	;# 
   284   000F96                     TRISE           equ	3990	;# 
   285   000F96                     DDRE            equ	3990	;# 
   286   000F9B                     OSCTUNE         equ	3995	;# 
   287   000F9D                     PIE1            equ	3997	;# 
   288   000F9E                     PIR1            equ	3998	;# 
   289   000F9F                     IPR1            equ	3999	;# 
   290   000FA0                     PIE2            equ	4000	;# 
   291   000FA1                     PIR2            equ	4001	;# 
   292   000FA2                     IPR2            equ	4002	;# 
   293   000FA6                     EECON1          equ	4006	;# 
   294   000FA7                     EECON2          equ	4007	;# 
   295   000FA8                     EEDATA          equ	4008	;# 
   296   000FA9                     EEADR           equ	4009	;# 
   297   000FAA                     EEADRH          equ	4010	;# 
   298   000FAB                     RCSTA           equ	4011	;# 
   299   000FAB                     RCSTA1          equ	4011	;# 
   300   000FAC                     TXSTA           equ	4012	;# 
   301   000FAC                     TXSTA1          equ	4012	;# 
   302   000FAD                     TXREG           equ	4013	;# 
   303   000FAD                     TXREG1          equ	4013	;# 
   304   000FAE                     RCREG           equ	4014	;# 
   305   000FAE                     RCREG1          equ	4014	;# 
   306   000FAF                     SPBRG           equ	4015	;# 
   307   000FAF                     SPBRG1          equ	4015	;# 
   308   000FB0                     SPBRGH          equ	4016	;# 
   309   000FB1                     T3CON           equ	4017	;# 
   310   000FB2                     TMR3            equ	4018	;# 
   311   000FB2                     TMR3L           equ	4018	;# 
   312   000FB3                     TMR3H           equ	4019	;# 
   313   000FB4                     CVRCON2         equ	4020	;# 
   314   000FB5                     CVRCON          equ	4021	;# 
   315   000FB6                     ECCP1AS         equ	4022	;# 
   316   000FB7                     PWM1CON         equ	4023	;# 
   317   000FB8                     BAUDCON         equ	4024	;# 
   318   000FB8                     BAUDCTL         equ	4024	;# 
   319   000FB9                     PSTRCON         equ	4025	;# 
   320   000FBA                     CCP2CON         equ	4026	;# 
   321   000FBB                     CCPR2           equ	4027	;# 
   322   000FBB                     CCPR2L          equ	4027	;# 
   323   000FBC                     CCPR2H          equ	4028	;# 
   324   000FBD                     CCP1CON         equ	4029	;# 
   325   000FBE                     CCPR1           equ	4030	;# 
   326   000FBE                     CCPR1L          equ	4030	;# 
   327   000FBF                     CCPR1H          equ	4031	;# 
   328   000FC0                     ADCON2          equ	4032	;# 
   329   000FC1                     ADCON1          equ	4033	;# 
   330   000FC2                     ADCON0          equ	4034	;# 
   331   000FC3                     ADRES           equ	4035	;# 
   332   000FC3                     ADRESL          equ	4035	;# 
   333   000FC4                     ADRESH          equ	4036	;# 
   334   000FC5                     SSPCON2         equ	4037	;# 
   335   000FC6                     SSPCON1         equ	4038	;# 
   336   000FC7                     SSPSTAT         equ	4039	;# 
   337   000FC8                     SSPADD          equ	4040	;# 
   338   000FC9                     SSPBUF          equ	4041	;# 
   339   000FCA                     T2CON           equ	4042	;# 
   340   000FCB                     PR2             equ	4043	;# 
   341   000FCB                     MEMCON          equ	4043	;# 
   342   000FCC                     TMR2            equ	4044	;# 
   343   000FCD                     T1CON           equ	4045	;# 
   344   000FCE                     TMR1            equ	4046	;# 
   345   000FCE                     TMR1L           equ	4046	;# 
   346   000FCF                     TMR1H           equ	4047	;# 
   347   000FD0                     RCON            equ	4048	;# 
   348   000FD1                     WDTCON          equ	4049	;# 
   349   000FD2                     HLVDCON         equ	4050	;# 
   350   000FD2                     LVDCON          equ	4050	;# 
   351   000FD3                     OSCCON          equ	4051	;# 
   352   000FD5                     T0CON           equ	4053	;# 
   353   000FD6                     TMR0            equ	4054	;# 
   354   000FD6                     TMR0L           equ	4054	;# 
   355   000FD7                     TMR0H           equ	4055	;# 
   356   000FD8                     STATUS          equ	4056	;# 
   357   000FD9                     FSR2            equ	4057	;# 
   358   000FD9                     FSR2L           equ	4057	;# 
   359   000FDA                     FSR2H           equ	4058	;# 
   360   000FDB                     PLUSW2          equ	4059	;# 
   361   000FDC                     PREINC2         equ	4060	;# 
   362   000FDD                     POSTDEC2        equ	4061	;# 
   363   000FDE                     POSTINC2        equ	4062	;# 
   364   000FDF                     INDF2           equ	4063	;# 
   365   000FE0                     BSR             equ	4064	;# 
   366   000FE1                     FSR1            equ	4065	;# 
   367   000FE1                     FSR1L           equ	4065	;# 
   368   000FE2                     FSR1H           equ	4066	;# 
   369   000FE3                     PLUSW1          equ	4067	;# 
   370   000FE4                     PREINC1         equ	4068	;# 
   371   000FE5                     POSTDEC1        equ	4069	;# 
   372   000FE6                     POSTINC1        equ	4070	;# 
   373   000FE7                     INDF1           equ	4071	;# 
   374   000FE8                     WREG            equ	4072	;# 
   375   000FE9                     FSR0            equ	4073	;# 
   376   000FE9                     FSR0L           equ	4073	;# 
   377   000FEA                     FSR0H           equ	4074	;# 
   378   000FEB                     PLUSW0          equ	4075	;# 
   379   000FEC                     PREINC0         equ	4076	;# 
   380   000FED                     POSTDEC0        equ	4077	;# 
   381   000FEE                     POSTINC0        equ	4078	;# 
   382   000FEF                     INDF0           equ	4079	;# 
   383   000FF0                     INTCON3         equ	4080	;# 
   384   000FF1                     INTCON2         equ	4081	;# 
   385   000FF2                     INTCON          equ	4082	;# 
   386   000FF3                     PROD            equ	4083	;# 
   387   000FF3                     PRODL           equ	4083	;# 
   388   000FF4                     PRODH           equ	4084	;# 
   389   000FF5                     TABLAT          equ	4085	;# 
   390   000FF6                     TBLPTR          equ	4086	;# 
   391   000FF6                     TBLPTRL         equ	4086	;# 
   392   000FF7                     TBLPTRH         equ	4087	;# 
   393   000FF8                     TBLPTRU         equ	4088	;# 
   394   000FF9                     PCLAT           equ	4089	;# 
   395   000FF9                     PC              equ	4089	;# 
   396   000FF9                     PCL             equ	4089	;# 
   397   000FFA                     PCLATH          equ	4090	;# 
   398   000FFB                     PCLATU          equ	4091	;# 
   399   000FFC                     STKPTR          equ	4092	;# 
   400   000FFD                     TOS             equ	4093	;# 
   401   000FFD                     TOSL            equ	4093	;# 
   402   000FFE                     TOSH            equ	4094	;# 
   403   000FFF                     TOSU            equ	4095	;# 
   404   000F77                     SSPMSK          equ	3959	;# 
   405   000F78                     SLRCON          equ	3960	;# 
   406   000F79                     CM2CON1         equ	3961	;# 
   407   000F7A                     CM2CON0         equ	3962	;# 
   408   000F7B                     CM1CON0         equ	3963	;# 
   409   000F7C                     WPUB            equ	3964	;# 
   410   000F7D                     IOCB            equ	3965	;# 
   411   000F7E                     ANSEL           equ	3966	;# 
   412   000F7F                     ANSELH          equ	3967	;# 
   413   000F80                     PORTA           equ	3968	;# 
   414   000F81                     PORTB           equ	3969	;# 
   415   000F82                     PORTC           equ	3970	;# 
   416   000F83                     PORTD           equ	3971	;# 
   417   000F84                     PORTE           equ	3972	;# 
   418   000F89                     LATA            equ	3977	;# 
   419   000F8A                     LATB            equ	3978	;# 
   420   000F8B                     LATC            equ	3979	;# 
   421   000F8C                     LATD            equ	3980	;# 
   422   000F8D                     LATE            equ	3981	;# 
   423   000F92                     TRISA           equ	3986	;# 
   424   000F92                     DDRA            equ	3986	;# 
   425   000F93                     TRISB           equ	3987	;# 
   426   000F93                     DDRB            equ	3987	;# 
   427   000F94                     TRISC           equ	3988	;# 
   428   000F94                     DDRC            equ	3988	;# 
   429   000F95                     TRISD           equ	3989	;# 
   430   000F95                     DDRD            equ	3989	;# 
   431   000F96                     TRISE           equ	3990	;# 
   432   000F96                     DDRE            equ	3990	;# 
   433   000F9B                     OSCTUNE         equ	3995	;# 
   434   000F9D                     PIE1            equ	3997	;# 
   435   000F9E                     PIR1            equ	3998	;# 
   436   000F9F                     IPR1            equ	3999	;# 
   437   000FA0                     PIE2            equ	4000	;# 
   438   000FA1                     PIR2            equ	4001	;# 
   439   000FA2                     IPR2            equ	4002	;# 
   440   000FA6                     EECON1          equ	4006	;# 
   441   000FA7                     EECON2          equ	4007	;# 
   442   000FA8                     EEDATA          equ	4008	;# 
   443   000FA9                     EEADR           equ	4009	;# 
   444   000FAA                     EEADRH          equ	4010	;# 
   445   000FAB                     RCSTA           equ	4011	;# 
   446   000FAB                     RCSTA1          equ	4011	;# 
   447   000FAC                     TXSTA           equ	4012	;# 
   448   000FAC                     TXSTA1          equ	4012	;# 
   449   000FAD                     TXREG           equ	4013	;# 
   450   000FAD                     TXREG1          equ	4013	;# 
   451   000FAE                     RCREG           equ	4014	;# 
   452   000FAE                     RCREG1          equ	4014	;# 
   453   000FAF                     SPBRG           equ	4015	;# 
   454   000FAF                     SPBRG1          equ	4015	;# 
   455   000FB0                     SPBRGH          equ	4016	;# 
   456   000FB1                     T3CON           equ	4017	;# 
   457   000FB2                     TMR3            equ	4018	;# 
   458   000FB2                     TMR3L           equ	4018	;# 
   459   000FB3                     TMR3H           equ	4019	;# 
   460   000FB4                     CVRCON2         equ	4020	;# 
   461   000FB5                     CVRCON          equ	4021	;# 
   462   000FB6                     ECCP1AS         equ	4022	;# 
   463   000FB7                     PWM1CON         equ	4023	;# 
   464   000FB8                     BAUDCON         equ	4024	;# 
   465   000FB8                     BAUDCTL         equ	4024	;# 
   466   000FB9                     PSTRCON         equ	4025	;# 
   467   000FBA                     CCP2CON         equ	4026	;# 
   468   000FBB                     CCPR2           equ	4027	;# 
   469   000FBB                     CCPR2L          equ	4027	;# 
   470   000FBC                     CCPR2H          equ	4028	;# 
   471   000FBD                     CCP1CON         equ	4029	;# 
   472   000FBE                     CCPR1           equ	4030	;# 
   473   000FBE                     CCPR1L          equ	4030	;# 
   474   000FBF                     CCPR1H          equ	4031	;# 
   475   000FC0                     ADCON2          equ	4032	;# 
   476   000FC1                     ADCON1          equ	4033	;# 
   477   000FC2                     ADCON0          equ	4034	;# 
   478   000FC3                     ADRES           equ	4035	;# 
   479   000FC3                     ADRESL          equ	4035	;# 
   480   000FC4                     ADRESH          equ	4036	;# 
   481   000FC5                     SSPCON2         equ	4037	;# 
   482   000FC6                     SSPCON1         equ	4038	;# 
   483   000FC7                     SSPSTAT         equ	4039	;# 
   484   000FC8                     SSPADD          equ	4040	;# 
   485   000FC9                     SSPBUF          equ	4041	;# 
   486   000FCA                     T2CON           equ	4042	;# 
   487   000FCB                     PR2             equ	4043	;# 
   488   000FCB                     MEMCON          equ	4043	;# 
   489   000FCC                     TMR2            equ	4044	;# 
   490   000FCD                     T1CON           equ	4045	;# 
   491   000FCE                     TMR1            equ	4046	;# 
   492   000FCE                     TMR1L           equ	4046	;# 
   493   000FCF                     TMR1H           equ	4047	;# 
   494   000FD0                     RCON            equ	4048	;# 
   495   000FD1                     WDTCON          equ	4049	;# 
   496   000FD2                     HLVDCON         equ	4050	;# 
   497   000FD2                     LVDCON          equ	4050	;# 
   498   000FD3                     OSCCON          equ	4051	;# 
   499   000FD5                     T0CON           equ	4053	;# 
   500   000FD6                     TMR0            equ	4054	;# 
   501   000FD6                     TMR0L           equ	4054	;# 
   502   000FD7                     TMR0H           equ	4055	;# 
   503   000FD8                     STATUS          equ	4056	;# 
   504   000FD9                     FSR2            equ	4057	;# 
   505   000FD9                     FSR2L           equ	4057	;# 
   506   000FDA                     FSR2H           equ	4058	;# 
   507   000FDB                     PLUSW2          equ	4059	;# 
   508   000FDC                     PREINC2         equ	4060	;# 
   509   000FDD                     POSTDEC2        equ	4061	;# 
   510   000FDE                     POSTINC2        equ	4062	;# 
   511   000FDF                     INDF2           equ	4063	;# 
   512   000FE0                     BSR             equ	4064	;# 
   513   000FE1                     FSR1            equ	4065	;# 
   514   000FE1                     FSR1L           equ	4065	;# 
   515   000FE2                     FSR1H           equ	4066	;# 
   516   000FE3                     PLUSW1          equ	4067	;# 
   517   000FE4                     PREINC1         equ	4068	;# 
   518   000FE5                     POSTDEC1        equ	4069	;# 
   519   000FE6                     POSTINC1        equ	4070	;# 
   520   000FE7                     INDF1           equ	4071	;# 
   521   000FE8                     WREG            equ	4072	;# 
   522   000FE9                     FSR0            equ	4073	;# 
   523   000FE9                     FSR0L           equ	4073	;# 
   524   000FEA                     FSR0H           equ	4074	;# 
   525   000FEB                     PLUSW0          equ	4075	;# 
   526   000FEC                     PREINC0         equ	4076	;# 
   527   000FED                     POSTDEC0        equ	4077	;# 
   528   000FEE                     POSTINC0        equ	4078	;# 
   529   000FEF                     INDF0           equ	4079	;# 
   530   000FF0                     INTCON3         equ	4080	;# 
   531   000FF1                     INTCON2         equ	4081	;# 
   532   000FF2                     INTCON          equ	4082	;# 
   533   000FF3                     PROD            equ	4083	;# 
   534   000FF3                     PRODL           equ	4083	;# 
   535   000FF4                     PRODH           equ	4084	;# 
   536   000FF5                     TABLAT          equ	4085	;# 
   537   000FF6                     TBLPTR          equ	4086	;# 
   538   000FF6                     TBLPTRL         equ	4086	;# 
   539   000FF7                     TBLPTRH         equ	4087	;# 
   540   000FF8                     TBLPTRU         equ	4088	;# 
   541   000FF9                     PCLAT           equ	4089	;# 
   542   000FF9                     PC              equ	4089	;# 
   543   000FF9                     PCL             equ	4089	;# 
   544   000FFA                     PCLATH          equ	4090	;# 
   545   000FFB                     PCLATU          equ	4091	;# 
   546   000FFC                     STKPTR          equ	4092	;# 
   547   000FFD                     TOS             equ	4093	;# 
   548   000FFD                     TOSL            equ	4093	;# 
   549   000FFE                     TOSH            equ	4094	;# 
   550   000FFF                     TOSU            equ	4095	;# 
   551   000F77                     SSPMSK          equ	3959	;# 
   552   000F78                     SLRCON          equ	3960	;# 
   553   000F79                     CM2CON1         equ	3961	;# 
   554   000F7A                     CM2CON0         equ	3962	;# 
   555   000F7B                     CM1CON0         equ	3963	;# 
   556   000F7C                     WPUB            equ	3964	;# 
   557   000F7D                     IOCB            equ	3965	;# 
   558   000F7E                     ANSEL           equ	3966	;# 
   559   000F7F                     ANSELH          equ	3967	;# 
   560   000F80                     PORTA           equ	3968	;# 
   561   000F81                     PORTB           equ	3969	;# 
   562   000F82                     PORTC           equ	3970	;# 
   563   000F83                     PORTD           equ	3971	;# 
   564   000F84                     PORTE           equ	3972	;# 
   565   000F89                     LATA            equ	3977	;# 
   566   000F8A                     LATB            equ	3978	;# 
   567   000F8B                     LATC            equ	3979	;# 
   568   000F8C                     LATD            equ	3980	;# 
   569   000F8D                     LATE            equ	3981	;# 
   570   000F92                     TRISA           equ	3986	;# 
   571   000F92                     DDRA            equ	3986	;# 
   572   000F93                     TRISB           equ	3987	;# 
   573   000F93                     DDRB            equ	3987	;# 
   574   000F94                     TRISC           equ	3988	;# 
   575   000F94                     DDRC            equ	3988	;# 
   576   000F95                     TRISD           equ	3989	;# 
   577   000F95                     DDRD            equ	3989	;# 
   578   000F96                     TRISE           equ	3990	;# 
   579   000F96                     DDRE            equ	3990	;# 
   580   000F9B                     OSCTUNE         equ	3995	;# 
   581   000F9D                     PIE1            equ	3997	;# 
   582   000F9E                     PIR1            equ	3998	;# 
   583   000F9F                     IPR1            equ	3999	;# 
   584   000FA0                     PIE2            equ	4000	;# 
   585   000FA1                     PIR2            equ	4001	;# 
   586   000FA2                     IPR2            equ	4002	;# 
   587   000FA6                     EECON1          equ	4006	;# 
   588   000FA7                     EECON2          equ	4007	;# 
   589   000FA8                     EEDATA          equ	4008	;# 
   590   000FA9                     EEADR           equ	4009	;# 
   591   000FAA                     EEADRH          equ	4010	;# 
   592   000FAB                     RCSTA           equ	4011	;# 
   593   000FAB                     RCSTA1          equ	4011	;# 
   594   000FAC                     TXSTA           equ	4012	;# 
   595   000FAC                     TXSTA1          equ	4012	;# 
   596   000FAD                     TXREG           equ	4013	;# 
   597   000FAD                     TXREG1          equ	4013	;# 
   598   000FAE                     RCREG           equ	4014	;# 
   599   000FAE                     RCREG1          equ	4014	;# 
   600   000FAF                     SPBRG           equ	4015	;# 
   601   000FAF                     SPBRG1          equ	4015	;# 
   602   000FB0                     SPBRGH          equ	4016	;# 
   603   000FB1                     T3CON           equ	4017	;# 
   604   000FB2                     TMR3            equ	4018	;# 
   605   000FB2                     TMR3L           equ	4018	;# 
   606   000FB3                     TMR3H           equ	4019	;# 
   607   000FB4                     CVRCON2         equ	4020	;# 
   608   000FB5                     CVRCON          equ	4021	;# 
   609   000FB6                     ECCP1AS         equ	4022	;# 
   610   000FB7                     PWM1CON         equ	4023	;# 
   611   000FB8                     BAUDCON         equ	4024	;# 
   612   000FB8                     BAUDCTL         equ	4024	;# 
   613   000FB9                     PSTRCON         equ	4025	;# 
   614   000FBA                     CCP2CON         equ	4026	;# 
   615   000FBB                     CCPR2           equ	4027	;# 
   616   000FBB                     CCPR2L          equ	4027	;# 
   617   000FBC                     CCPR2H          equ	4028	;# 
   618   000FBD                     CCP1CON         equ	4029	;# 
   619   000FBE                     CCPR1           equ	4030	;# 
   620   000FBE                     CCPR1L          equ	4030	;# 
   621   000FBF                     CCPR1H          equ	4031	;# 
   622   000FC0                     ADCON2          equ	4032	;# 
   623   000FC1                     ADCON1          equ	4033	;# 
   624   000FC2                     ADCON0          equ	4034	;# 
   625   000FC3                     ADRES           equ	4035	;# 
   626   000FC3                     ADRESL          equ	4035	;# 
   627   000FC4                     ADRESH          equ	4036	;# 
   628   000FC5                     SSPCON2         equ	4037	;# 
   629   000FC6                     SSPCON1         equ	4038	;# 
   630   000FC7                     SSPSTAT         equ	4039	;# 
   631   000FC8                     SSPADD          equ	4040	;# 
   632   000FC9                     SSPBUF          equ	4041	;# 
   633   000FCA                     T2CON           equ	4042	;# 
   634   000FCB                     PR2             equ	4043	;# 
   635   000FCB                     MEMCON          equ	4043	;# 
   636   000FCC                     TMR2            equ	4044	;# 
   637   000FCD                     T1CON           equ	4045	;# 
   638   000FCE                     TMR1            equ	4046	;# 
   639   000FCE                     TMR1L           equ	4046	;# 
   640   000FCF                     TMR1H           equ	4047	;# 
   641   000FD0                     RCON            equ	4048	;# 
   642   000FD1                     WDTCON          equ	4049	;# 
   643   000FD2                     HLVDCON         equ	4050	;# 
   644   000FD2                     LVDCON          equ	4050	;# 
   645   000FD3                     OSCCON          equ	4051	;# 
   646   000FD5                     T0CON           equ	4053	;# 
   647   000FD6                     TMR0            equ	4054	;# 
   648   000FD6                     TMR0L           equ	4054	;# 
   649   000FD7                     TMR0H           equ	4055	;# 
   650   000FD8                     STATUS          equ	4056	;# 
   651   000FD9                     FSR2            equ	4057	;# 
   652   000FD9                     FSR2L           equ	4057	;# 
   653   000FDA                     FSR2H           equ	4058	;# 
   654   000FDB                     PLUSW2          equ	4059	;# 
   655   000FDC                     PREINC2         equ	4060	;# 
   656   000FDD                     POSTDEC2        equ	4061	;# 
   657   000FDE                     POSTINC2        equ	4062	;# 
   658   000FDF                     INDF2           equ	4063	;# 
   659   000FE0                     BSR             equ	4064	;# 
   660   000FE1                     FSR1            equ	4065	;# 
   661   000FE1                     FSR1L           equ	4065	;# 
   662   000FE2                     FSR1H           equ	4066	;# 
   663   000FE3                     PLUSW1          equ	4067	;# 
   664   000FE4                     PREINC1         equ	4068	;# 
   665   000FE5                     POSTDEC1        equ	4069	;# 
   666   000FE6                     POSTINC1        equ	4070	;# 
   667   000FE7                     INDF1           equ	4071	;# 
   668   000FE8                     WREG            equ	4072	;# 
   669   000FE9                     FSR0            equ	4073	;# 
   670   000FE9                     FSR0L           equ	4073	;# 
   671   000FEA                     FSR0H           equ	4074	;# 
   672   000FEB                     PLUSW0          equ	4075	;# 
   673   000FEC                     PREINC0         equ	4076	;# 
   674   000FED                     POSTDEC0        equ	4077	;# 
   675   000FEE                     POSTINC0        equ	4078	;# 
   676   000FEF                     INDF0           equ	4079	;# 
   677   000FF0                     INTCON3         equ	4080	;# 
   678   000FF1                     INTCON2         equ	4081	;# 
   679   000FF2                     INTCON          equ	4082	;# 
   680   000FF3                     PROD            equ	4083	;# 
   681   000FF3                     PRODL           equ	4083	;# 
   682   000FF4                     PRODH           equ	4084	;# 
   683   000FF5                     TABLAT          equ	4085	;# 
   684   000FF6                     TBLPTR          equ	4086	;# 
   685   000FF6                     TBLPTRL         equ	4086	;# 
   686   000FF7                     TBLPTRH         equ	4087	;# 
   687   000FF8                     TBLPTRU         equ	4088	;# 
   688   000FF9                     PCLAT           equ	4089	;# 
   689   000FF9                     PC              equ	4089	;# 
   690   000FF9                     PCL             equ	4089	;# 
   691   000FFA                     PCLATH          equ	4090	;# 
   692   000FFB                     PCLATU          equ	4091	;# 
   693   000FFC                     STKPTR          equ	4092	;# 
   694   000FFD                     TOS             equ	4093	;# 
   695   000FFD                     TOSL            equ	4093	;# 
   696   000FFE                     TOSH            equ	4094	;# 
   697   000FFF                     TOSU            equ	4095	;# 
   698   000F77                     SSPMSK          equ	3959	;# 
   699   000F78                     SLRCON          equ	3960	;# 
   700   000F79                     CM2CON1         equ	3961	;# 
   701   000F7A                     CM2CON0         equ	3962	;# 
   702   000F7B                     CM1CON0         equ	3963	;# 
   703   000F7C                     WPUB            equ	3964	;# 
   704   000F7D                     IOCB            equ	3965	;# 
   705   000F7E                     ANSEL           equ	3966	;# 
   706   000F7F                     ANSELH          equ	3967	;# 
   707   000F80                     PORTA           equ	3968	;# 
   708   000F81                     PORTB           equ	3969	;# 
   709   000F82                     PORTC           equ	3970	;# 
   710   000F83                     PORTD           equ	3971	;# 
   711   000F84                     PORTE           equ	3972	;# 
   712   000F89                     LATA            equ	3977	;# 
   713   000F8A                     LATB            equ	3978	;# 
   714   000F8B                     LATC            equ	3979	;# 
   715   000F8C                     LATD            equ	3980	;# 
   716   000F8D                     LATE            equ	3981	;# 
   717   000F92                     TRISA           equ	3986	;# 
   718   000F92                     DDRA            equ	3986	;# 
   719   000F93                     TRISB           equ	3987	;# 
   720   000F93                     DDRB            equ	3987	;# 
   721   000F94                     TRISC           equ	3988	;# 
   722   000F94                     DDRC            equ	3988	;# 
   723   000F95                     TRISD           equ	3989	;# 
   724   000F95                     DDRD            equ	3989	;# 
   725   000F96                     TRISE           equ	3990	;# 
   726   000F96                     DDRE            equ	3990	;# 
   727   000F9B                     OSCTUNE         equ	3995	;# 
   728   000F9D                     PIE1            equ	3997	;# 
   729   000F9E                     PIR1            equ	3998	;# 
   730   000F9F                     IPR1            equ	3999	;# 
   731   000FA0                     PIE2            equ	4000	;# 
   732   000FA1                     PIR2            equ	4001	;# 
   733   000FA2                     IPR2            equ	4002	;# 
   734   000FA6                     EECON1          equ	4006	;# 
   735   000FA7                     EECON2          equ	4007	;# 
   736   000FA8                     EEDATA          equ	4008	;# 
   737   000FA9                     EEADR           equ	4009	;# 
   738   000FAA                     EEADRH          equ	4010	;# 
   739   000FAB                     RCSTA           equ	4011	;# 
   740   000FAB                     RCSTA1          equ	4011	;# 
   741   000FAC                     TXSTA           equ	4012	;# 
   742   000FAC                     TXSTA1          equ	4012	;# 
   743   000FAD                     TXREG           equ	4013	;# 
   744   000FAD                     TXREG1          equ	4013	;# 
   745   000FAE                     RCREG           equ	4014	;# 
   746   000FAE                     RCREG1          equ	4014	;# 
   747   000FAF                     SPBRG           equ	4015	;# 
   748   000FAF                     SPBRG1          equ	4015	;# 
   749   000FB0                     SPBRGH          equ	4016	;# 
   750   000FB1                     T3CON           equ	4017	;# 
   751   000FB2                     TMR3            equ	4018	;# 
   752   000FB2                     TMR3L           equ	4018	;# 
   753   000FB3                     TMR3H           equ	4019	;# 
   754   000FB4                     CVRCON2         equ	4020	;# 
   755   000FB5                     CVRCON          equ	4021	;# 
   756   000FB6                     ECCP1AS         equ	4022	;# 
   757   000FB7                     PWM1CON         equ	4023	;# 
   758   000FB8                     BAUDCON         equ	4024	;# 
   759   000FB8                     BAUDCTL         equ	4024	;# 
   760   000FB9                     PSTRCON         equ	4025	;# 
   761   000FBA                     CCP2CON         equ	4026	;# 
   762   000FBB                     CCPR2           equ	4027	;# 
   763   000FBB                     CCPR2L          equ	4027	;# 
   764   000FBC                     CCPR2H          equ	4028	;# 
   765   000FBD                     CCP1CON         equ	4029	;# 
   766   000FBE                     CCPR1           equ	4030	;# 
   767   000FBE                     CCPR1L          equ	4030	;# 
   768   000FBF                     CCPR1H          equ	4031	;# 
   769   000FC0                     ADCON2          equ	4032	;# 
   770   000FC1                     ADCON1          equ	4033	;# 
   771   000FC2                     ADCON0          equ	4034	;# 
   772   000FC3                     ADRES           equ	4035	;# 
   773   000FC3                     ADRESL          equ	4035	;# 
   774   000FC4                     ADRESH          equ	4036	;# 
   775   000FC5                     SSPCON2         equ	4037	;# 
   776   000FC6                     SSPCON1         equ	4038	;# 
   777   000FC7                     SSPSTAT         equ	4039	;# 
   778   000FC8                     SSPADD          equ	4040	;# 
   779   000FC9                     SSPBUF          equ	4041	;# 
   780   000FCA                     T2CON           equ	4042	;# 
   781   000FCB                     PR2             equ	4043	;# 
   782   000FCB                     MEMCON          equ	4043	;# 
   783   000FCC                     TMR2            equ	4044	;# 
   784   000FCD                     T1CON           equ	4045	;# 
   785   000FCE                     TMR1            equ	4046	;# 
   786   000FCE                     TMR1L           equ	4046	;# 
   787   000FCF                     TMR1H           equ	4047	;# 
   788   000FD0                     RCON            equ	4048	;# 
   789   000FD1                     WDTCON          equ	4049	;# 
   790   000FD2                     HLVDCON         equ	4050	;# 
   791   000FD2                     LVDCON          equ	4050	;# 
   792   000FD3                     OSCCON          equ	4051	;# 
   793   000FD5                     T0CON           equ	4053	;# 
   794   000FD6                     TMR0            equ	4054	;# 
   795   000FD6                     TMR0L           equ	4054	;# 
   796   000FD7                     TMR0H           equ	4055	;# 
   797   000FD8                     STATUS          equ	4056	;# 
   798   000FD9                     FSR2            equ	4057	;# 
   799   000FD9                     FSR2L           equ	4057	;# 
   800   000FDA                     FSR2H           equ	4058	;# 
   801   000FDB                     PLUSW2          equ	4059	;# 
   802   000FDC                     PREINC2         equ	4060	;# 
   803   000FDD                     POSTDEC2        equ	4061	;# 
   804   000FDE                     POSTINC2        equ	4062	;# 
   805   000FDF                     INDF2           equ	4063	;# 
   806   000FE0                     BSR             equ	4064	;# 
   807   000FE1                     FSR1            equ	4065	;# 
   808   000FE1                     FSR1L           equ	4065	;# 
   809   000FE2                     FSR1H           equ	4066	;# 
   810   000FE3                     PLUSW1          equ	4067	;# 
   811   000FE4                     PREINC1         equ	4068	;# 
   812   000FE5                     POSTDEC1        equ	4069	;# 
   813   000FE6                     POSTINC1        equ	4070	;# 
   814   000FE7                     INDF1           equ	4071	;# 
   815   000FE8                     WREG            equ	4072	;# 
   816   000FE9                     FSR0            equ	4073	;# 
   817   000FE9                     FSR0L           equ	4073	;# 
   818   000FEA                     FSR0H           equ	4074	;# 
   819   000FEB                     PLUSW0          equ	4075	;# 
   820   000FEC                     PREINC0         equ	4076	;# 
   821   000FED                     POSTDEC0        equ	4077	;# 
   822   000FEE                     POSTINC0        equ	4078	;# 
   823   000FEF                     INDF0           equ	4079	;# 
   824   000FF0                     INTCON3         equ	4080	;# 
   825   000FF1                     INTCON2         equ	4081	;# 
   826   000FF2                     INTCON          equ	4082	;# 
   827   000FF3                     PROD            equ	4083	;# 
   828   000FF3                     PRODL           equ	4083	;# 
   829   000FF4                     PRODH           equ	4084	;# 
   830   000FF5                     TABLAT          equ	4085	;# 
   831   000FF6                     TBLPTR          equ	4086	;# 
   832   000FF6                     TBLPTRL         equ	4086	;# 
   833   000FF7                     TBLPTRH         equ	4087	;# 
   834   000FF8                     TBLPTRU         equ	4088	;# 
   835   000FF9                     PCLAT           equ	4089	;# 
   836   000FF9                     PC              equ	4089	;# 
   837   000FF9                     PCL             equ	4089	;# 
   838   000FFA                     PCLATH          equ	4090	;# 
   839   000FFB                     PCLATU          equ	4091	;# 
   840   000FFC                     STKPTR          equ	4092	;# 
   841   000FFD                     TOS             equ	4093	;# 
   842   000FFD                     TOSL            equ	4093	;# 
   843   000FFE                     TOSH            equ	4094	;# 
   844   000FFF                     TOSU            equ	4095	;# 
   845                           
   846                           	psect	smallconst
   847   001000                     __psmallconst:
   848                           	callstack 0
   849   001000  00                 	db	0
   850   001001                     _default_security_key:
   851                           	callstack 0
   852   001001  00                 	db	0
   853   001002  10                 	db	16
   854   001003  25                 	db	37
   855   001004  37                 	db	55
   856   001005  04                 	db	4
   857   001006  55                 	db	85
   858   001007  06                 	db	6
   859   001008  79                 	db	121
   860   001009  08                 	db	8
   861   00100A  09                 	db	9
   862   00100B  10                 	db	16
   863   00100C  11                 	db	17
   864   00100D  12                 	db	18
   865   00100E  13                 	db	19
   866   00100F  14                 	db	20
   867   001010  15                 	db	21
   868   001011                     __end_of_default_security_key:
   869                           	callstack 0
   870   001011                     _default_mac_address:
   871                           	callstack 0
   872   001011  11                 	db	17
   873   001012  28                 	db	40
   874   001013  35                 	db	53
   875   001014  44                 	db	68
   876   001015  56                 	db	86
   877   001016  66                 	db	102
   878   001017  77                 	db	119
   879   001018  01                 	db	1
   880   001019                     __end_of_default_mac_address:
   881                           	callstack 0
   882   007CED                     _RCIE           set	31981
   883   007CEE                     _ADIE           set	31982
   884   007D03                     _BCLIE          set	32003
   885   007CEB                     _SSPIE          set	31979
   886   007D04                     _EEIE           set	32004
   887   007D00                     _CCP2IE         set	32000
   888   007CEA                     _CCP1IE         set	31978
   889   007CE9                     _TMR2IE         set	31977
   890   007CE8                     _TMR1IE         set	31976
   891   007F95                     _T0IE           set	32661
   892   007F93                     _RBIE           set	32659
   893   007F96                     _PEIE           set	32662
   894   007F97                     _GIE            set	32663
   895   000F9B                     _OSCTUNE        set	3995
   896   000F96                     _TRISEbits      set	3990
   897   000F84                     _PORTE          set	3972
   898   000F83                     _PORTD          set	3971
   899   000F82                     _PORTC          set	3970
   900   000F81                     _PORTB          set	3969
   901   000F80                     _PORTA          set	3968
   902   000F8D                     _LATEbits       set	3981
   903   000F8C                     _LATDbits       set	3980
   904   000F8B                     _LATCbits       set	3979
   905   000F95                     _TRISDbits      set	3989
   906   000F94                     _TRISCbits      set	3988
   907   000F93                     _TRISBbits      set	3987
   908   000FD3                     _OSCCON         set	4051
   909   000FC9                     _SSPBUF         set	4041
   910   000F9E                     _PIR1bits       set	3998
   911   000FC6                     _SSPCON1bits    set	4038
   912   000FC7                     _SSPSTATbits    set	4039
   913   001019  00                 	db	0	; dummy byte at the end
   914   000001                     __activetblptr  equ	1
   915                           
   916                           ; #config settings
   917                           
   918                           	psect	cinit
   919   00153A                     __pcinit:
   920                           	callstack 0
   921   00153A                     start_initialization:
   922                           	callstack 0
   923   00153A                     __initialization:
   924                           	callstack 0
   925                           
   926                           ; Clear objects allocated to BANK0 (55 bytes)
   927   00153A  EE00  F060         	lfsr	0,__pbssBANK0
   928   00153E  0E37               	movlw	55
   929   001540                     clear_0:
   930   001540  6AEE               	clrf	postinc0,c
   931   001542  06E8               	decf	wreg,f,c
   932   001544  E1FD               	bnz	clear_0
   933                           
   934                           ; Clear objects allocated to COMRAM (42 bytes)
   935   001546  EE00  F001         	lfsr	0,__pbssCOMRAM
   936   00154A  0E2A               	movlw	42
   937   00154C                     clear_1:
   938   00154C  6AEE               	clrf	postinc0,c
   939   00154E  06E8               	decf	wreg,f,c
   940   001550  E1FD               	bnz	clear_1
   941   001552                     end_of_initialization:
   942                           	callstack 0
   943   001552                     __end_of__initialization:
   944                           	callstack 0
   945   001552  0E00               	movlw	low (__Lsmallconst shr (0+16))
   946   001554  6EF8               	movwf	tblptru,c
   947   001556  0E10               	movlw	high __Lsmallconst
   948   001558  6EF7               	movwf	tblptrh,c
   949   00155A  0100               	movlb	0
   950   00155C  EF22  F009         	goto	_main	;jump to C main() function
   951                           
   952                           	psect	bssCOMRAM
   953   000001                     __pbssCOMRAM:
   954                           	callstack 0
   955   000001                     _mrf24_data_config:
   956                           	callstack 0
   957   000001                     	ds	34
   958   000023                     _mrf24_data_out:
   959                           	callstack 0
   960   000023                     	ds	7
   961   00002A                     _my_default_mac_address:
   962                           	callstack 0
   963   00002A                     	ds	1
   964                           
   965                           	psect	bssBANK0
   966   000060                     __pbssBANK0:
   967                           	callstack 0
   968   000060                     _mrf24_data_in:
   969                           	callstack 0
   970   000060                     	ds	55
   971                           
   972                           	psect	cstackCOMRAM
   973   00002B                     __pcstackCOMRAM:
   974                           	callstack 0
   975   00002B                     SetCSPin@estado:
   976                           	callstack 0
   977   00002B                     SetWakePin@estado:
   978                           	callstack 0
   979   00002B                     SetResetPin@estado:
   980                           	callstack 0
   981   00002B                     SPIWriteByte@dato:
   982                           	callstack 0
   983   00002B                     ??_InicializoVariables:
   984   00002B                     
   985                           ; 1 bytes @ 0x0
   986   00002B                     	ds	1
   987   00002C                     WriteByteSPIPort@dato:
   988                           	callstack 0
   989   00002C                     InicializoVariables@i:
   990                           	callstack 0
   991   00002C                     
   992                           ; 1 bytes @ 0x1
   993   00002C                     	ds	1
   994   00002D                     SetShortAddr@value:
   995                           	callstack 0
   996   00002D                     SetLongAddr@reg_address:
   997                           	callstack 0
   998   00002D                     GetLongAddr@reg_address:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x2
  1002   00002D                     	ds	1
  1003   00002E                     SetShortAddr@reg_address:
  1004                           	callstack 0
  1005   00002E                     
  1006                           ; 1 bytes @ 0x3
  1007   00002E                     	ds	1
  1008   00002F                     SetLongAddr@value:
  1009                           	callstack 0
  1010   00002F                     SetDeviceMACAddress@i:
  1011                           	callstack 0
  1012   00002F                     ??_GetLongAddr:
  1013                           
  1014                           ; 1 bytes @ 0x4
  1015   00002F                     	ds	1
  1016   000030                     ??_SetLongAddr:
  1017                           
  1018                           ; 1 bytes @ 0x5
  1019   000030                     	ds	1
  1020   000031                     GetLongAddr@toReturn:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x6
  1024   000031                     	ds	1
  1025   000032                     SetChannel@aux:
  1026                           	callstack 0
  1027   000032                     EnviarDato@i:
  1028                           	callstack 0
  1029   000032                     
  1030                           ; 1 bytes @ 0x7
  1031   000032                     	ds	1
  1032   000033                     EnviarDato@pos:
  1033                           	callstack 0
  1034   000033                     ??_MRF24J40Init:
  1035                           
  1036                           ; 1 bytes @ 0x8
  1037   000033                     	ds	2
  1038   000035                     ??_main:
  1039                           
  1040                           ; 1 bytes @ 0xA
  1041   000035                     	ds	2
  1042                           
  1043 ;;
  1044 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1045 ;;
  1046 ;; *************** function _main *****************
  1047 ;; Defined at:
  1048 ;;		line 23 in file "main.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;Total ram usage:        2 bytes
  1067 ;; Hardware stack levels required when called: 5
  1068 ;; This function calls:
  1069 ;;		_BoardInit
  1070 ;;		_EnviarDato
  1071 ;;		_MRF24J40Init
  1072 ;; This function is called by:
  1073 ;;		Startup code after reset
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text0
  1078   001244                     __ptext0:
  1079                           	callstack 0
  1080   001244                     _main:
  1081                           	callstack 26
  1082   001244                     
  1083                           ;main.c: 25:     BoardInit();
  1084   001244  EC69  F00A         	call	_BoardInit	;wreg free
  1085   001248                     
  1086                           ;main.c: 26:     MRF24J40Init();
  1087   001248  EC0D  F008         	call	_MRF24J40Init	;wreg free
  1088   00124C                     l196:
  1089   00124C  0004               	clrwdt		;# 
  1090   00124E                     
  1091                           ;main.c: 31:         LATEbits.LATE2 = !LATEbits.LATE2;
  1092   00124E  A48D               	btfss	141,2,c	;volatile
  1093   001250  EF2C  F009         	goto	u451
  1094   001254  EF30  F009         	goto	u450
  1095   001258                     u451:
  1096   001258  6A35               	clrf	??_main^0,c
  1097   00125A  2A35               	incf	??_main^0,f,c
  1098   00125C  EF31  F009         	goto	u468
  1099   001260                     u450:
  1100   001260  6A35               	clrf	??_main^0,c
  1101   001262                     u468:
  1102   001262  4635               	rlncf	??_main^0,f,c
  1103   001264  4635               	rlncf	??_main^0,f,c
  1104   001266  508D               	movf	141,w,c	;volatile
  1105   001268  1835               	xorwf	??_main^0,w,c
  1106   00126A  0BFB               	andlw	-5
  1107   00126C  1835               	xorwf	??_main^0,w,c
  1108   00126E  6E8D               	movwf	141,c	;volatile
  1109   001270                     
  1110                           ;main.c: 32:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1111   001270  0E06               	movlw	6
  1112   001272  6E36               	movwf	(??_main+1)^0,c
  1113   001274  0E13               	movlw	19
  1114   001276  6E35               	movwf	??_main^0,c
  1115   001278  0EAE               	movlw	174
  1116   00127A                     u517:
  1117   00127A  2EE8               	decfsz	wreg,f,c
  1118   00127C  D7FE               	bra	u517
  1119   00127E  2E35               	decfsz	??_main^0,f,c
  1120   001280  D7FC               	bra	u517
  1121   001282  2E36               	decfsz	(??_main+1)^0,f,c
  1122   001284  D7FA               	bra	u517
  1123   001286                     
  1124                           ;main.c: 33:         LATEbits.LATE1 = !LATEbits.LATE1;
  1125   001286  A28D               	btfss	141,1,c	;volatile
  1126   001288  EF48  F009         	goto	u471
  1127   00128C  EF4C  F009         	goto	u470
  1128   001290                     u471:
  1129   001290  6A35               	clrf	??_main^0,c
  1130   001292  2A35               	incf	??_main^0,f,c
  1131   001294  EF4D  F009         	goto	u488
  1132   001298                     u470:
  1133   001298  6A35               	clrf	??_main^0,c
  1134   00129A                     u488:
  1135   00129A  4635               	rlncf	??_main^0,f,c
  1136   00129C  508D               	movf	141,w,c	;volatile
  1137   00129E  1835               	xorwf	??_main^0,w,c
  1138   0012A0  0BFD               	andlw	-3
  1139   0012A2  1835               	xorwf	??_main^0,w,c
  1140   0012A4  6E8D               	movwf	141,c	;volatile
  1141   0012A6                     
  1142                           ;main.c: 34:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1143   0012A6  0E06               	movlw	6
  1144   0012A8  6E36               	movwf	(??_main+1)^0,c
  1145   0012AA  0E13               	movlw	19
  1146   0012AC  6E35               	movwf	??_main^0,c
  1147   0012AE  0EAE               	movlw	174
  1148   0012B0                     u527:
  1149   0012B0  2EE8               	decfsz	wreg,f,c
  1150   0012B2  D7FE               	bra	u527
  1151   0012B4  2E35               	decfsz	??_main^0,f,c
  1152   0012B6  D7FC               	bra	u527
  1153   0012B8  2E36               	decfsz	(??_main+1)^0,f,c
  1154   0012BA  D7FA               	bra	u527
  1155   0012BC                     
  1156                           ;main.c: 35:         LATEbits.LATE0 = !LATEbits.LATE0;
  1157   0012BC  A08D               	btfss	141,0,c	;volatile
  1158   0012BE  EF63  F009         	goto	u491
  1159   0012C2  EF67  F009         	goto	u490
  1160   0012C6                     u491:
  1161   0012C6  6A35               	clrf	??_main^0,c
  1162   0012C8  2A35               	incf	??_main^0,f,c
  1163   0012CA  EF68  F009         	goto	u508
  1164   0012CE                     u490:
  1165   0012CE  6A35               	clrf	??_main^0,c
  1166   0012D0                     u508:
  1167   0012D0  508D               	movf	141,w,c	;volatile
  1168   0012D2  1835               	xorwf	??_main^0,w,c
  1169   0012D4  0BFE               	andlw	-2
  1170   0012D6  1835               	xorwf	??_main^0,w,c
  1171   0012D8  6E8D               	movwf	141,c	;volatile
  1172   0012DA                     
  1173                           ;main.c: 36:         _delay((unsigned long)((250)*(16000000/4000.0)));;
  1174   0012DA  0E06               	movlw	6
  1175   0012DC  6E36               	movwf	(??_main+1)^0,c
  1176   0012DE  0E13               	movlw	19
  1177   0012E0  6E35               	movwf	??_main^0,c
  1178   0012E2  0EAE               	movlw	174
  1179   0012E4                     u537:
  1180   0012E4  2EE8               	decfsz	wreg,f,c
  1181   0012E6  D7FE               	bra	u537
  1182   0012E8  2E35               	decfsz	??_main^0,f,c
  1183   0012EA  D7FC               	bra	u537
  1184   0012EC  2E36               	decfsz	(??_main+1)^0,f,c
  1185   0012EE  D7FA               	bra	u537
  1186   0012F0                     
  1187                           ;main.c: 38:         EnviarDato();
  1188   0012F0  EC9D  F008         	call	_EnviarDato	;wreg free
  1189   0012F4  EF26  F009         	goto	l196
  1190   0012F8  EF00  F000         	goto	start
  1191   0012FC                     __end_of_main:
  1192                           	callstack 0
  1193                           
  1194 ;; *************** function _MRF24J40Init *****************
  1195 ;; Defined at:
  1196 ;;		line 274 in file "drivers/scr/drv_mrf24j40.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;Total ram usage:        2 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 4
  1217 ;; This function calls:
  1218 ;;		_InicializoPines
  1219 ;;		_InicializoVariables
  1220 ;;		_SetChannel
  1221 ;;		_SetDeviceAddress
  1222 ;;		_SetDeviceMACAddress
  1223 ;;		_SetLongAddr
  1224 ;;		_SetResetPin
  1225 ;;		_SetShortAddr
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text1
  1232   00101A                     __ptext1:
  1233                           	callstack 0
  1234   00101A                     _MRF24J40Init:
  1235                           	callstack 26
  1236   00101A                     
  1237                           ;drivers/scr/drv_mrf24j40.c: 276:     InicializoVariables();
  1238   00101A  EC7E  F009         	call	_InicializoVariables	;wreg free
  1239   00101E                     
  1240                           ;drivers/scr/drv_mrf24j40.c: 277:     InicializoPines();
  1241   00101E  ECC0  F00A         	call	_InicializoPines	;wreg free
  1242   001022                     
  1243                           ;drivers/scr/drv_mrf24j40.c: 278:   _delay((unsigned long)((50)*(16000000/4000.0)));;
  1244   001022  0E02               	movlw	2
  1245   001024  6E34               	movwf	(??_MRF24J40Init+1)^0,c
  1246   001026  0E04               	movlw	4
  1247   001028  6E33               	movwf	??_MRF24J40Init^0,c
  1248   00102A  0EBA               	movlw	186
  1249   00102C                     u547:
  1250   00102C  2EE8               	decfsz	wreg,f,c
  1251   00102E  D7FE               	bra	u547
  1252   001030  2E33               	decfsz	??_MRF24J40Init^0,f,c
  1253   001032  D7FC               	bra	u547
  1254   001034  2E34               	decfsz	(??_MRF24J40Init+1)^0,f,c
  1255   001036  D7FA               	bra	u547
  1256   001038  F000 F000          	nop2	
  1257   00103C                     
  1258                           ;drivers/scr/drv_mrf24j40.c: 279:     SetResetPin(1);
  1259   00103C  0E01               	movlw	1
  1260   00103E  ECFA  F00A         	call	_SetResetPin
  1261   001042                     
  1262                           ;drivers/scr/drv_mrf24j40.c: 280:  _delay((unsigned long)((500)*(16000000/4000.0)));;
  1263   001042  0E0B               	movlw	11
  1264   001044  6E34               	movwf	(??_MRF24J40Init+1)^0,c
  1265   001046  0E26               	movlw	38
  1266   001048  6E33               	movwf	??_MRF24J40Init^0,c
  1267   00104A  0E5E               	movlw	94
  1268   00104C                     u557:
  1269   00104C  2EE8               	decfsz	wreg,f,c
  1270   00104E  D7FE               	bra	u557
  1271   001050  2E33               	decfsz	??_MRF24J40Init^0,f,c
  1272   001052  D7FC               	bra	u557
  1273   001054  2E34               	decfsz	(??_MRF24J40Init+1)^0,f,c
  1274   001056  D7FA               	bra	u557
  1275   001058                     
  1276                           ;drivers/scr/drv_mrf24j40.c: 281:     SetShortAddr((0x18), 0x98);
  1277   001058  0E98               	movlw	152
  1278   00105A  6E2D               	movwf	SetShortAddr@value^0,c
  1279   00105C  0E18               	movlw	24
  1280   00105E  ECB0  F00A         	call	_SetShortAddr
  1281   001062                     
  1282                           ;drivers/scr/drv_mrf24j40.c: 282:     SetShortAddr((0x2E), 0x95);
  1283   001062  0E95               	movlw	149
  1284   001064  6E2D               	movwf	SetShortAddr@value^0,c
  1285   001066  0E2E               	movlw	46
  1286   001068  ECB0  F00A         	call	_SetShortAddr
  1287   00106C                     
  1288                           ;drivers/scr/drv_mrf24j40.c: 283:     SetLongAddr((0x200), 0x03);
  1289   00106C  0E02               	movlw	2
  1290   00106E  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1291   001070  0E00               	movlw	0
  1292   001072  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1293   001074  0E03               	movlw	3
  1294   001076  6E2F               	movwf	SetLongAddr@value^0,c
  1295   001078  EC48  F00A         	call	_SetLongAddr	;wreg free
  1296   00107C                     
  1297                           ;drivers/scr/drv_mrf24j40.c: 284:  SetLongAddr((0x201), 0x01);
  1298   00107C  0E02               	movlw	2
  1299   00107E  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1300   001080  0E01               	movlw	1
  1301   001082  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1302   001084  0E01               	movlw	1
  1303   001086  6E2F               	movwf	SetLongAddr@value^0,c
  1304   001088  EC48  F00A         	call	_SetLongAddr	;wreg free
  1305   00108C                     
  1306                           ;drivers/scr/drv_mrf24j40.c: 285:  SetLongAddr((0x202), 0x80);
  1307   00108C  0E02               	movlw	2
  1308   00108E  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1309   001090  0E02               	movlw	2
  1310   001092  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1311   001094  0E80               	movlw	128
  1312   001096  6E2F               	movwf	SetLongAddr@value^0,c
  1313   001098  EC48  F00A         	call	_SetLongAddr	;wreg free
  1314   00109C                     
  1315                           ;drivers/scr/drv_mrf24j40.c: 286:  SetLongAddr((0x206), 0x90);
  1316   00109C  0E02               	movlw	2
  1317   00109E  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1318   0010A0  0E06               	movlw	6
  1319   0010A2  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1320   0010A4  0E90               	movlw	144
  1321   0010A6  6E2F               	movwf	SetLongAddr@value^0,c
  1322   0010A8  EC48  F00A         	call	_SetLongAddr	;wreg free
  1323   0010AC                     
  1324                           ;drivers/scr/drv_mrf24j40.c: 287:  SetLongAddr((0x207), 0x80);
  1325   0010AC  0E02               	movlw	2
  1326   0010AE  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1327   0010B0  0E07               	movlw	7
  1328   0010B2  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1329   0010B4  0E80               	movlw	128
  1330   0010B6  6E2F               	movwf	SetLongAddr@value^0,c
  1331   0010B8  EC48  F00A         	call	_SetLongAddr	;wreg free
  1332   0010BC                     
  1333                           ;drivers/scr/drv_mrf24j40.c: 288:  SetLongAddr((0x208), 0x10);
  1334   0010BC  0E02               	movlw	2
  1335   0010BE  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1336   0010C0  0E08               	movlw	8
  1337   0010C2  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1338   0010C4  0E10               	movlw	16
  1339   0010C6  6E2F               	movwf	SetLongAddr@value^0,c
  1340   0010C8  EC48  F00A         	call	_SetLongAddr	;wreg free
  1341   0010CC                     
  1342                           ;drivers/scr/drv_mrf24j40.c: 289:  SetLongAddr((0x220), 0x21);
  1343   0010CC  0E02               	movlw	2
  1344   0010CE  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1345   0010D0  0E20               	movlw	32
  1346   0010D2  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1347   0010D4  0E21               	movlw	33
  1348   0010D6  6E2F               	movwf	SetLongAddr@value^0,c
  1349   0010D8  EC48  F00A         	call	_SetLongAddr	;wreg free
  1350   0010DC                     
  1351                           ;drivers/scr/drv_mrf24j40.c: 290:     SetShortAddr((0x3A), 0x80);
  1352   0010DC  0E80               	movlw	128
  1353   0010DE  6E2D               	movwf	SetShortAddr@value^0,c
  1354   0010E0  0E3A               	movlw	58
  1355   0010E2  ECB0  F00A         	call	_SetShortAddr
  1356   0010E6                     
  1357                           ;drivers/scr/drv_mrf24j40.c: 291:     SetShortAddr((0x3F), 0x60);
  1358   0010E6  0E60               	movlw	96
  1359   0010E8  6E2D               	movwf	SetShortAddr@value^0,c
  1360   0010EA  0E3F               	movlw	63
  1361   0010EC  ECB0  F00A         	call	_SetShortAddr
  1362   0010F0                     
  1363                           ;drivers/scr/drv_mrf24j40.c: 292:     SetShortAddr((0x3E), 0x40);
  1364   0010F0  0E40               	movlw	64
  1365   0010F2  6E2D               	movwf	SetShortAddr@value^0,c
  1366   0010F4  0E3E               	movlw	62
  1367   0010F6  ECB0  F00A         	call	_SetShortAddr
  1368   0010FA                     
  1369                           ;drivers/scr/drv_mrf24j40.c: 293:     SetShortAddr((0x32), 0xF6);
  1370   0010FA  0EF6               	movlw	246
  1371   0010FC  6E2D               	movwf	SetShortAddr@value^0,c
  1372   0010FE  0E32               	movlw	50
  1373   001100  ECB0  F00A         	call	_SetShortAddr
  1374   001104                     
  1375                           ;drivers/scr/drv_mrf24j40.c: 294:     SetChannel();
  1376   001104  ECD6  F009         	call	_SetChannel	;wreg free
  1377   001108                     
  1378                           ;drivers/scr/drv_mrf24j40.c: 295:  SetShortAddr((0x0D), 0x01);
  1379   001108  0E01               	movlw	1
  1380   00110A  6E2D               	movwf	SetShortAddr@value^0,c
  1381   00110C  0E0D               	movlw	13
  1382   00110E  ECB0  F00A         	call	_SetShortAddr
  1383   001112                     
  1384                           ;drivers/scr/drv_mrf24j40.c: 296:  SetDeviceAddress();
  1385   001112  EC88  F00A         	call	_SetDeviceAddress	;wreg free
  1386   001116                     
  1387                           ;drivers/scr/drv_mrf24j40.c: 297:     SetDeviceMACAddress();
  1388   001116  EC27  F00A         	call	_SetDeviceMACAddress	;wreg free
  1389   00111A                     
  1390                           ;drivers/scr/drv_mrf24j40.c: 298:  SetShortAddr((0x2E), 0x95);
  1391   00111A  0E95               	movlw	149
  1392   00111C  6E2D               	movwf	SetShortAddr@value^0,c
  1393   00111E  0E2E               	movlw	46
  1394   001120  ECB0  F00A         	call	_SetShortAddr
  1395   001124                     
  1396                           ;drivers/scr/drv_mrf24j40.c: 299:  SetShortAddr((0x12), 0xB9);
  1397   001124  0EB9               	movlw	185
  1398   001126  6E2D               	movwf	SetShortAddr@value^0,c
  1399   001128  0E12               	movlw	18
  1400   00112A  ECB0  F00A         	call	_SetShortAddr
  1401   00112E                     
  1402                           ;drivers/scr/drv_mrf24j40.c: 308:  SetShortAddr((0x00),0x00);
  1403   00112E  0E00               	movlw	0
  1404   001130  6E2D               	movwf	SetShortAddr@value^0,c
  1405   001132  0E00               	movlw	0
  1406   001134  ECB0  F00A         	call	_SetShortAddr
  1407   001138  0012               	return		;funcret
  1408   00113A                     __end_of_MRF24J40Init:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _SetDeviceMACAddress *****************
  1412 ;; Defined at:
  1413 ;;		line 447 in file "drivers/scr/drv_mrf24j40.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;		None
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  i               2    4[COMRAM] int 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1428 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1430 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;Total ram usage:        2 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; Hardware stack levels required when called: 3
  1434 ;; This function calls:
  1435 ;;		_SetShortAddr
  1436 ;; This function is called by:
  1437 ;;		_MRF24J40Init
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text2
  1442   00144E                     __ptext2:
  1443                           	callstack 0
  1444   00144E                     _SetDeviceMACAddress:
  1445                           	callstack 26
  1446   00144E                     
  1447                           ;drivers/scr/drv_mrf24j40.c: 449:     my_default_mac_address = EADR0;
  1448   00144E  0E05               	movlw	5
  1449   001450  6E2A               	movwf	_my_default_mac_address^0,c
  1450                           
  1451                           ;drivers/scr/drv_mrf24j40.c: 451:     for(int i = 0; i < 8; i++) {
  1452   001452  0E00               	movlw	0
  1453   001454  6E30               	movwf	(SetDeviceMACAddress@i+1)^0,c
  1454   001456  0E00               	movlw	0
  1455   001458  6E2F               	movwf	SetDeviceMACAddress@i^0,c
  1456   00145A                     l1522:
  1457                           
  1458                           ;drivers/scr/drv_mrf24j40.c: 453:         SetShortAddr(my_default_mac_address++, mrf24_d
      +                          ata_config.my_mac[i]);
  1459   00145A  502F               	movf	SetDeviceMACAddress@i^0,w,c
  1460   00145C  0F15               	addlw	low (_mrf24_data_config+20)
  1461   00145E  6ED9               	movwf	fsr2l,c
  1462   001460  6ADA               	clrf	fsr2h,c
  1463   001462  50DF               	movf	indf2,w,c
  1464   001464  6E2D               	movwf	SetShortAddr@value^0,c
  1465   001466  502A               	movf	_my_default_mac_address^0,w,c
  1466   001468  ECB0  F00A         	call	_SetShortAddr
  1467   00146C  2A2A               	incf	_my_default_mac_address^0,f,c
  1468   00146E                     
  1469                           ;drivers/scr/drv_mrf24j40.c: 454:     }
  1470   00146E  4A2F               	infsnz	SetDeviceMACAddress@i^0,f,c
  1471   001470  2A30               	incf	(SetDeviceMACAddress@i+1)^0,f,c
  1472   001472  BE30               	btfsc	(SetDeviceMACAddress@i+1)^0,7,c
  1473   001474  EF45  F00A         	goto	u361
  1474   001478  5030               	movf	(SetDeviceMACAddress@i+1)^0,w,c
  1475   00147A  E109               	bnz	u360
  1476   00147C  0E08               	movlw	8
  1477   00147E  5C2F               	subwf	SetDeviceMACAddress@i^0,w,c
  1478   001480  A0D8               	btfss	status,0,c
  1479   001482  EF45  F00A         	goto	u361
  1480   001486  EF47  F00A         	goto	u360
  1481   00148A                     u361:
  1482   00148A  EF2D  F00A         	goto	l1522
  1483   00148E                     u360:
  1484   00148E  0012               	return		;funcret
  1485   001490                     __end_of_SetDeviceMACAddress:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function _SetDeviceAddress *****************
  1489 ;; Defined at:
  1490 ;;		line 433 in file "drivers/scr/drv_mrf24j40.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;		None
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;		None
  1495 ;; Return value:  Size  Location     Type
  1496 ;;                  1    wreg      void 
  1497 ;; Registers used:
  1498 ;;		wreg, status,2, status,0, cstack
  1499 ;; Tracked objects:
  1500 ;;		On entry : 0/0
  1501 ;;		On exit  : 0/0
  1502 ;;		Unchanged: 0/0
  1503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;Total ram usage:        0 bytes
  1509 ;; Hardware stack levels used: 1
  1510 ;; Hardware stack levels required when called: 3
  1511 ;; This function calls:
  1512 ;;		_SetShortAddr
  1513 ;; This function is called by:
  1514 ;;		_MRF24J40Init
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text3
  1519   001510                     __ptext3:
  1520                           	callstack 0
  1521   001510                     _SetDeviceAddress:
  1522                           	callstack 26
  1523   001510                     
  1524                           ;drivers/scr/drv_mrf24j40.c: 435:  SetShortAddr((0x04), (uint8_t) (mrf24_data_config.my_
      +                          address >> 8));
  1525   001510  5020               	movf	(_mrf24_data_config+31)^0,w,c
  1526   001512  6E2D               	movwf	SetShortAddr@value^0,c
  1527   001514  0E04               	movlw	4
  1528   001516  ECB0  F00A         	call	_SetShortAddr
  1529                           
  1530                           ;drivers/scr/drv_mrf24j40.c: 436:  SetShortAddr((0x03), (uint8_t) (mrf24_data_config.my_
      +                          address));
  1531   00151A  C01F  F02D         	movff	_mrf24_data_config+30,SetShortAddr@value
  1532   00151E  0E03               	movlw	3
  1533   001520  ECB0  F00A         	call	_SetShortAddr
  1534                           
  1535                           ;drivers/scr/drv_mrf24j40.c: 437:  SetShortAddr((0x02), (uint8_t) (mrf24_data_config.my_
      +                          panid >> 8));
  1536   001524  501E               	movf	(_mrf24_data_config+29)^0,w,c
  1537   001526  6E2D               	movwf	SetShortAddr@value^0,c
  1538   001528  0E02               	movlw	2
  1539   00152A  ECB0  F00A         	call	_SetShortAddr
  1540                           
  1541                           ;drivers/scr/drv_mrf24j40.c: 438:  SetShortAddr((0x01), (uint8_t) (mrf24_data_config.my_
      +                          panid));
  1542   00152E  C01D  F02D         	movff	_mrf24_data_config+28,SetShortAddr@value
  1543   001532  0E01               	movlw	1
  1544   001534  ECB0  F00A         	call	_SetShortAddr
  1545   001538  0012               	return		;funcret
  1546   00153A                     __end_of_SetDeviceAddress:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _SetChannel *****************
  1550 ;; Defined at:
  1551 ;;		line 412 in file "drivers/scr/drv_mrf24j40.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  aux             1    7[COMRAM] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1568 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1569 ;;Total ram usage:        1 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 3
  1572 ;; This function calls:
  1573 ;;		_GetLongAddr
  1574 ;;		_SetLongAddr
  1575 ;;		_SetShortAddr
  1576 ;; This function is called by:
  1577 ;;		_MRF24J40Init
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text4
  1582   0013AC                     __ptext4:
  1583                           	callstack 0
  1584   0013AC                     _SetChannel:
  1585                           	callstack 26
  1586   0013AC                     
  1587                           ;drivers/scr/drv_mrf24j40.c: 415:  SetLongAddr((0x200), mrf24_data_config.my_channel);
  1588   0013AC  0E02               	movlw	2
  1589   0013AE  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1590   0013B0  0E00               	movlw	0
  1591   0013B2  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1592   0013B4  C004  F02F         	movff	_mrf24_data_config+3,SetLongAddr@value
  1593   0013B8  EC48  F00A         	call	_SetLongAddr	;wreg free
  1594                           
  1595                           ;drivers/scr/drv_mrf24j40.c: 416:     SetLongAddr((0x203), (0XC0) | (0X38));
  1596   0013BC  0E02               	movlw	2
  1597   0013BE  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  1598   0013C0  0E03               	movlw	3
  1599   0013C2  6E2D               	movwf	SetLongAddr@reg_address^0,c
  1600   0013C4  0EF8               	movlw	248
  1601   0013C6  6E2F               	movwf	SetLongAddr@value^0,c
  1602   0013C8  EC48  F00A         	call	_SetLongAddr	;wreg free
  1603                           
  1604                           ;drivers/scr/drv_mrf24j40.c: 417:  SetShortAddr((0x36), 0x04);
  1605   0013CC  0E04               	movlw	4
  1606   0013CE  6E2D               	movwf	SetShortAddr@value^0,c
  1607   0013D0  0E36               	movlw	54
  1608   0013D2  ECB0  F00A         	call	_SetShortAddr
  1609                           
  1610                           ;drivers/scr/drv_mrf24j40.c: 418:  SetShortAddr((0x36), 0x00);
  1611   0013D6  0E00               	movlw	0
  1612   0013D8  6E2D               	movwf	SetShortAddr@value^0,c
  1613   0013DA  0E36               	movlw	54
  1614   0013DC  ECB0  F00A         	call	_SetShortAddr
  1615   0013E0                     
  1616                           ;drivers/scr/drv_mrf24j40.c: 419:  _delay((unsigned long)((192)*(16000000/4000000.0)));;
  1617   0013E0  0E00               	movlw	0
  1618   0013E2                     u567:
  1619   0013E2  2EE8               	decfsz	wreg,f,c
  1620   0013E4  D7FE               	bra	u567
  1621   0013E6                     l1508:
  1622                           
  1623                           ;drivers/scr/drv_mrf24j40.c: 423:   aux = GetLongAddr((0x20f));
  1624   0013E6  0E02               	movlw	2
  1625   0013E8  6E2E               	movwf	(GetLongAddr@reg_address+1)^0,c
  1626   0013EA  0E0F               	movlw	15
  1627   0013EC  6E2D               	movwf	GetLongAddr@reg_address^0,c
  1628   0013EE  EC05  F00A         	call	_GetLongAddr	;wreg free
  1629   0013F2  6E32               	movwf	SetChannel@aux^0,c
  1630   0013F4                     
  1631                           ;drivers/scr/drv_mrf24j40.c: 424:  }while((aux & 0xA0) != 0xA0);
  1632   0013F4  5032               	movf	SetChannel@aux^0,w,c
  1633   0013F6  0BA0               	andlw	160
  1634   0013F8  0AA0               	xorlw	160
  1635   0013FA  A4D8               	btfss	status,2,c
  1636   0013FC  EF02  F00A         	goto	u351
  1637   001400  EF04  F00A         	goto	u350
  1638   001404                     u351:
  1639   001404  EFF3  F009         	goto	l1508
  1640   001408                     u350:
  1641   001408  0012               	return		;funcret
  1642   00140A                     __end_of_SetChannel:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function _GetLongAddr *****************
  1646 ;; Defined at:
  1647 ;;		line 394 in file "drivers/scr/drv_mrf24j40.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  reg_address     2    2[COMRAM] unsigned short 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  toReturn        1    6[COMRAM] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      unsigned char 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1664 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1665 ;;Total ram usage:        5 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 2
  1668 ;; This function calls:
  1669 ;;		_ReadByteSPIPort
  1670 ;;		_SetCSPin
  1671 ;;		_WriteByteSPIPort
  1672 ;; This function is called by:
  1673 ;;		_SetChannel
  1674 ;;		_ReciboPaquete
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text5
  1679   00140A                     __ptext5:
  1680                           	callstack 0
  1681   00140A                     _GetLongAddr:
  1682                           	callstack 26
  1683   00140A                     
  1684                           ;drivers/scr/drv_mrf24j40.c: 396:  uint8_t toReturn;;drivers/scr/drv_mrf24j40.c: 397:   
      +                            reg_address = (reg_address << 5) | 0x8000;
  1685   00140A  C02D  F02F         	movff	GetLongAddr@reg_address,??_GetLongAddr
  1686   00140E  C02E  F030         	movff	GetLongAddr@reg_address+1,??_GetLongAddr+1
  1687   001412  0E05               	movlw	5
  1688   001414                     u325:
  1689   001414  90D8               	bcf	status,0,c
  1690   001416  362F               	rlcf	??_GetLongAddr^0,f,c
  1691   001418  3630               	rlcf	(??_GetLongAddr+1)^0,f,c
  1692   00141A  2EE8               	decfsz	wreg,f,c
  1693   00141C  EF0A  F00A         	goto	u325
  1694   001420  0E00               	movlw	0
  1695   001422  102F               	iorwf	??_GetLongAddr^0,w,c
  1696   001424  6E2D               	movwf	GetLongAddr@reg_address^0,c
  1697   001426  0E80               	movlw	128
  1698   001428  1030               	iorwf	(??_GetLongAddr+1)^0,w,c
  1699   00142A  6E2E               	movwf	(GetLongAddr@reg_address+1)^0,c
  1700   00142C                     
  1701                           ;drivers/scr/drv_mrf24j40.c: 398:     SetCSPin(0);
  1702   00142C  0E00               	movlw	0
  1703   00142E  EC01  F00B         	call	_SetCSPin
  1704   001432                     
  1705                           ;drivers/scr/drv_mrf24j40.c: 399:     WriteByteSPIPort((uint8_t) (reg_address >> 8));
  1706   001432  502E               	movf	(GetLongAddr@reg_address+1)^0,w,c
  1707   001434  EC08  F00B         	call	_WriteByteSPIPort
  1708   001438                     
  1709                           ;drivers/scr/drv_mrf24j40.c: 400:  WriteByteSPIPort((uint8_t) reg_address );
  1710   001438  502D               	movf	GetLongAddr@reg_address^0,w,c
  1711   00143A  EC08  F00B         	call	_WriteByteSPIPort
  1712   00143E                     
  1713                           ;drivers/scr/drv_mrf24j40.c: 402:  toReturn = ReadByteSPIPort();
  1714   00143E  EC0D  F00B         	call	_ReadByteSPIPort	;wreg free
  1715   001442  6E31               	movwf	GetLongAddr@toReturn^0,c
  1716   001444                     
  1717                           ;drivers/scr/drv_mrf24j40.c: 403:     SetCSPin(1);
  1718   001444  0E01               	movlw	1
  1719   001446  EC01  F00B         	call	_SetCSPin
  1720   00144A                     
  1721                           ;drivers/scr/drv_mrf24j40.c: 404:  return toReturn;
  1722   00144A  5031               	movf	GetLongAddr@toReturn^0,w,c
  1723   00144C  0012               	return		;funcret
  1724   00144E                     __end_of_GetLongAddr:
  1725                           	callstack 0
  1726                           
  1727 ;; *************** function _ReadByteSPIPort *****************
  1728 ;; Defined at:
  1729 ;;		line 93 in file "drivers/scr/drv_mrf24j40_port.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;		None
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      unsigned char 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1747 ;;Total ram usage:        0 bytes
  1748 ;; Hardware stack levels used: 1
  1749 ;; Hardware stack levels required when called: 1
  1750 ;; This function calls:
  1751 ;;		_SPIRead
  1752 ;; This function is called by:
  1753 ;;		_GetLongAddr
  1754 ;;		_GetShortAddr
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text6
  1759   00161A                     __ptext6:
  1760                           	callstack 0
  1761   00161A                     _ReadByteSPIPort:
  1762                           	callstack 26
  1763   00161A                     
  1764                           ;drivers/scr/drv_mrf24j40_port.c: 95:     return SPIRead();
  1765   00161A  ECE8  F00A         	call	_SPIRead	;wreg free
  1766   00161E  0012               	return		;funcret
  1767   001620                     __end_of_ReadByteSPIPort:
  1768                           	callstack 0
  1769                           
  1770 ;; *************** function _SPIRead *****************
  1771 ;; Defined at:
  1772 ;;		line 82 in file "drivers/scr/drv_mspi_port.c"
  1773 ;; Parameters:    Size  Location     Type
  1774 ;;		None
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;		None
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      unsigned char 
  1779 ;; Registers used:
  1780 ;;		wreg, status,2
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;Total ram usage:        0 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; This function calls:
  1793 ;;		Nothing
  1794 ;; This function is called by:
  1795 ;;		_ReadByteSPIPort
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text7
  1800   0015D0                     __ptext7:
  1801                           	callstack 0
  1802   0015D0                     _SPIRead:
  1803                           	callstack 26
  1804   0015D0                     
  1805                           ;drivers/scr/drv_mspi_port.c: 84:     SSPCON1bits.WCOL = 0;
  1806   0015D0  9EC6               	bcf	198,7,c	;volatile
  1807                           
  1808                           ;drivers/scr/drv_mspi_port.c: 85:     SSPBUF = 0x00;
  1809   0015D2  6AC9               	clrf	201,c	;volatile
  1810   0015D4                     l178:
  1811   0015D4  A0C7               	btfss	199,0,c	;volatile
  1812   0015D6  EFEF  F00A         	goto	u291
  1813   0015DA  EFF1  F00A         	goto	u290
  1814   0015DE                     u291:
  1815   0015DE  EFEA  F00A         	goto	l178
  1816   0015E2                     u290:
  1817   0015E2                     
  1818                           ;drivers/scr/drv_mspi_port.c: 87:     return SSPBUF;
  1819   0015E2  50C9               	movf	201,w,c	;volatile
  1820   0015E4  0012               	return		;funcret
  1821   0015E6                     __end_of_SPIRead:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _InicializoVariables *****************
  1825 ;; Defined at:
  1826 ;;		line 318 in file "drivers/scr/drv_mrf24j40.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  i               2    1[COMRAM] int 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1843 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1844 ;;Total ram usage:        3 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_MRF24J40Init
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           
  1853                           	psect	text8
  1854   0012FC                     __ptext8:
  1855                           	callstack 0
  1856   0012FC                     _InicializoVariables:
  1857                           	callstack 29
  1858   0012FC                     
  1859                           ;drivers/scr/drv_mrf24j40.c: 320:     for(int i = 0; i < 16; i++){
  1860   0012FC  0E00               	movlw	0
  1861   0012FE  6E2D               	movwf	(InicializoVariables@i+1)^0,c
  1862   001300  0E00               	movlw	0
  1863   001302  6E2C               	movwf	InicializoVariables@i^0,c
  1864   001304                     l1476:
  1865                           
  1866                           ;drivers/scr/drv_mrf24j40.c: 322:         if(i < 8)
  1867   001304  BE2D               	btfsc	(InicializoVariables@i+1)^0,7,c
  1868   001306  EF90  F009         	goto	u330
  1869   00130A  502D               	movf	(InicializoVariables@i+1)^0,w,c
  1870   00130C  E107               	bnz	u331
  1871   00130E  0E08               	movlw	8
  1872   001310  5C2C               	subwf	InicializoVariables@i^0,w,c
  1873   001312  B0D8               	btfsc	status,0,c
  1874   001314  EF8E  F009         	goto	u331
  1875   001318  EF90  F009         	goto	u330
  1876   00131C                     u331:
  1877   00131C  EF9C  F009         	goto	l44
  1878   001320                     u330:
  1879   001320                     
  1880                           ;drivers/scr/drv_mrf24j40.c: 323:             mrf24_data_config.my_mac[i] = default_mac_
      +                          address[i];
  1881   001320  502C               	movf	InicializoVariables@i^0,w,c
  1882   001322  0F11               	addlw	low _default_mac_address
  1883   001324  6E2B               	movwf	??_InicializoVariables^0,c
  1884   001326  C02B  FFF6         	movff	??_InicializoVariables,tblptrl
  1885   00132A                     	if	0	;There is only one active tblptr byte
  1886   00132A                     	endif
  1887   00132A                     	if	0	;tblptru may be non-zero
  1888   00132A                     	endif
  1889   00132A                     	if	0	;tblptru may be non-zero
  1890   00132A                     	endif
  1891   00132A  502C               	movf	InicializoVariables@i^0,w,c
  1892   00132C  0F15               	addlw	low (_mrf24_data_config+20)
  1893   00132E  6ED9               	movwf	fsr2l,c
  1894   001330  6ADA               	clrf	fsr2h,c
  1895   001332  0008               	tblrd		*
  1896   001334  CFF5 FFDF          	movff	tablat,indf2
  1897   001338                     l44:
  1898                           
  1899                           ;drivers/scr/drv_mrf24j40.c: 324:         mrf24_data_config.security_key[i] = default_se
      +                          curity_key[i];
  1900   001338  502C               	movf	InicializoVariables@i^0,w,c
  1901   00133A  0F01               	addlw	low _default_security_key
  1902   00133C  6E2B               	movwf	??_InicializoVariables^0,c
  1903   00133E  C02B  FFF6         	movff	??_InicializoVariables,tblptrl
  1904   001342                     	if	0	;There is only one active tblptr byte
  1905   001342                     	endif
  1906   001342                     	if	0	;tblptru may be non-zero
  1907   001342                     	endif
  1908   001342                     	if	0	;tblptru may be non-zero
  1909   001342                     	endif
  1910   001342  502C               	movf	InicializoVariables@i^0,w,c
  1911   001344  0F05               	addlw	low (_mrf24_data_config+4)
  1912   001346  6ED9               	movwf	fsr2l,c
  1913   001348  6ADA               	clrf	fsr2h,c
  1914   00134A  0008               	tblrd		*
  1915   00134C  CFF5 FFDF          	movff	tablat,indf2
  1916   001350                     
  1917                           ;drivers/scr/drv_mrf24j40.c: 325:     }
  1918   001350  4A2C               	infsnz	InicializoVariables@i^0,f,c
  1919   001352  2A2D               	incf	(InicializoVariables@i+1)^0,f,c
  1920   001354  BE2D               	btfsc	(InicializoVariables@i+1)^0,7,c
  1921   001356  EFB6  F009         	goto	u341
  1922   00135A  502D               	movf	(InicializoVariables@i+1)^0,w,c
  1923   00135C  E109               	bnz	u340
  1924   00135E  0E10               	movlw	16
  1925   001360  5C2C               	subwf	InicializoVariables@i^0,w,c
  1926   001362  A0D8               	btfss	status,0,c
  1927   001364  EFB6  F009         	goto	u341
  1928   001368  EFB8  F009         	goto	u340
  1929   00136C                     u341:
  1930   00136C  EF82  F009         	goto	l1476
  1931   001370                     u340:
  1932   001370                     
  1933                           ;drivers/scr/drv_mrf24j40.c: 326:     mrf24_data_config.sequence_number = 0x68;
  1934   001370  0E68               	movlw	104
  1935   001372  6E03               	movwf	(_mrf24_data_config+2)^0,c
  1936                           
  1937                           ;drivers/scr/drv_mrf24j40.c: 327:     mrf24_data_config.my_channel = CH_11;
  1938   001374  0E03               	movlw	3
  1939   001376  6E04               	movwf	(_mrf24_data_config+3)^0,c
  1940   001378                     
  1941                           ;drivers/scr/drv_mrf24j40.c: 328:     mrf24_data_config.get_new_msg = 0;
  1942   001378  6A01               	clrf	_mrf24_data_config^0,c
  1943   00137A                     
  1944                           ;drivers/scr/drv_mrf24j40.c: 329:     mrf24_data_config.put_new_msg = 0;
  1945   00137A  6A02               	clrf	(_mrf24_data_config+1)^0,c
  1946                           
  1947                           ;drivers/scr/drv_mrf24j40.c: 330:     mrf24_data_config.my_panid = 0x1234;
  1948   00137C  0E12               	movlw	18
  1949   00137E  6E1E               	movwf	(_mrf24_data_config+29)^0,c
  1950   001380  0E34               	movlw	52
  1951   001382  6E1D               	movwf	(_mrf24_data_config+28)^0,c
  1952                           
  1953                           ;drivers/scr/drv_mrf24j40.c: 331:     mrf24_data_config.my_address = 0x0001;
  1954   001384  0E00               	movlw	0
  1955   001386  6E20               	movwf	(_mrf24_data_config+31)^0,c
  1956   001388  0E01               	movlw	1
  1957   00138A  6E1F               	movwf	(_mrf24_data_config+30)^0,c
  1958                           
  1959                           ;drivers/scr/drv_mrf24j40.c: 332:     mrf24_data_config.intervalo = 0x2222;
  1960   00138C  0E22               	movlw	34
  1961   00138E  6E22               	movwf	(_mrf24_data_config+33)^0,c
  1962   001390  0E22               	movlw	34
  1963   001392  6E21               	movwf	(_mrf24_data_config+32)^0,c
  1964                           
  1965                           ;drivers/scr/drv_mrf24j40.c: 333:     mrf24_data_in.source_address = 0;
  1966   001394  0E00               	movlw	0
  1967   001396  0100               	movlb	0	; () banked
  1968   001398  6F63               	movwf	(_mrf24_data_in+3)& (0+255),b
  1969   00139A  0E00               	movlw	0
  1970   00139C  6F62               	movwf	(_mrf24_data_in+2)& (0+255),b
  1971                           
  1972                           ;drivers/scr/drv_mrf24j40.c: 334:     mrf24_data_in.source_panid = 0;
  1973   00139E  0E00               	movlw	0
  1974   0013A0  6F61               	movwf	(_mrf24_data_in+1)& (0+255),b
  1975   0013A2  0E00               	movlw	0
  1976   0013A4  6F60               	movwf	_mrf24_data_in& (0+255),b
  1977   0013A6                     
  1978                           ; BSR set to: 0
  1979                           ;drivers/scr/drv_mrf24j40.c: 335:     mrf24_data_in.tamano_mensaje = 0;
  1980   0013A6  6B64               	clrf	(_mrf24_data_in+4)& (0+255),b
  1981   0013A8                     
  1982                           ; BSR set to: 0
  1983                           ;drivers/scr/drv_mrf24j40.c: 336:     mrf24_data_in.buffer_entrada[0] = 0;
  1984   0013A8  6B65               	clrf	(_mrf24_data_in+5)& (0+255),b
  1985   0013AA                     
  1986                           ; BSR set to: 0
  1987   0013AA  0012               	return		;funcret
  1988   0013AC                     __end_of_InicializoVariables:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _InicializoPines *****************
  1992 ;; Defined at:
  1993 ;;		line 21 in file "drivers/scr/drv_mrf24j40_port.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;		None
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;Total ram usage:        0 bytes
  2012 ;; Hardware stack levels used: 1
  2013 ;; Hardware stack levels required when called: 1
  2014 ;; This function calls:
  2015 ;;		_SetCSPin
  2016 ;;		_SetResetPin
  2017 ;;		_SetWakePin
  2018 ;; This function is called by:
  2019 ;;		_MRF24J40Init
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           	psect	text9
  2024   001580                     __ptext9:
  2025                           	callstack 0
  2026   001580                     _InicializoPines:
  2027                           	callstack 28
  2028   001580                     
  2029                           ;drivers/scr/drv_mrf24j40_port.c: 23:     TRISBbits.TRISB0 = 1;
  2030   001580  8093               	bsf	147,0,c	;volatile
  2031                           
  2032                           ;drivers/scr/drv_mrf24j40_port.c: 24:     TRISCbits.TRISC6 = 0;
  2033   001582  9C94               	bcf	148,6,c	;volatile
  2034                           
  2035                           ;drivers/scr/drv_mrf24j40_port.c: 25:     TRISCbits.TRISC7 = 0;
  2036   001584  9E94               	bcf	148,7,c	;volatile
  2037                           
  2038                           ;drivers/scr/drv_mrf24j40_port.c: 26:     TRISDbits.TRISD4 = 0;
  2039   001586  9895               	bcf	149,4,c	;volatile
  2040   001588                     
  2041                           ;drivers/scr/drv_mrf24j40_port.c: 27:     SetCSPin(1);
  2042   001588  0E01               	movlw	1
  2043   00158A  EC01  F00B         	call	_SetCSPin
  2044                           
  2045                           ;drivers/scr/drv_mrf24j40_port.c: 28:     SetWakePin(1);
  2046   00158E  0E01               	movlw	1
  2047   001590  ECF3  F00A         	call	_SetWakePin
  2048                           
  2049                           ;drivers/scr/drv_mrf24j40_port.c: 29:     SetResetPin(0);
  2050   001594  0E00               	movlw	0
  2051   001596  ECFA  F00A         	call	_SetResetPin
  2052   00159A  0012               	return		;funcret
  2053   00159C                     __end_of_InicializoPines:
  2054                           	callstack 0
  2055                           
  2056 ;; *************** function _SetWakePin *****************
  2057 ;; Defined at:
  2058 ;;		line 49 in file "drivers/scr/drv_mrf24j40_port.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;  estado          1    wreg     _Bool 
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  estado          1    0[COMRAM] _Bool 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2073 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2076 ;;Total ram usage:        1 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_InicializoPines
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text10
  2086   0015E6                     __ptext10:
  2087                           	callstack 0
  2088   0015E6                     _SetWakePin:
  2089                           	callstack 28
  2090                           
  2091                           ;incstack = 0
  2092                           ;SetWakePin@estado stored from wreg
  2093   0015E6  6E2B               	movwf	SetWakePin@estado^0,c
  2094   0015E8                     
  2095                           ;drivers/scr/drv_mrf24j40_port.c: 51:     LATCbits.LATC7 = estado;
  2096   0015E8  B02B               	btfsc	SetWakePin@estado^0,0,c
  2097   0015EA  D002               	bra	u75
  2098   0015EC  9E8B               	bcf	139,7,c	;volatile
  2099   0015EE  D001               	bra	u76
  2100   0015F0                     u75:
  2101   0015F0  8E8B               	bsf	139,7,c	;volatile
  2102   0015F2                     u76:
  2103   0015F2  0012               	return		;funcret
  2104   0015F4                     __end_of_SetWakePin:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _SetResetPin *****************
  2108 ;; Defined at:
  2109 ;;		line 60 in file "drivers/scr/drv_mrf24j40_port.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  estado          1    wreg     _Bool 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  estado          1    0[COMRAM] _Bool 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2127 ;;Total ram usage:        1 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; This function calls:
  2130 ;;		Nothing
  2131 ;; This function is called by:
  2132 ;;		_MRF24J40Init
  2133 ;;		_InicializoPines
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text11
  2138   0015F4                     __ptext11:
  2139                           	callstack 0
  2140   0015F4                     _SetResetPin:
  2141                           	callstack 29
  2142                           
  2143                           ;incstack = 0
  2144                           ;SetResetPin@estado stored from wreg
  2145   0015F4  6E2B               	movwf	SetResetPin@estado^0,c
  2146   0015F6                     
  2147                           ;drivers/scr/drv_mrf24j40_port.c: 62:     LATDbits.LATD4 = estado;
  2148   0015F6  B02B               	btfsc	SetResetPin@estado^0,0,c
  2149   0015F8  D002               	bra	u45
  2150   0015FA  988C               	bcf	140,4,c	;volatile
  2151   0015FC  D001               	bra	u46
  2152   0015FE                     u45:
  2153   0015FE  888C               	bsf	140,4,c	;volatile
  2154   001600                     u46:
  2155   001600  0012               	return		;funcret
  2156   001602                     __end_of_SetResetPin:
  2157                           	callstack 0
  2158                           
  2159 ;; *************** function _EnviarDato *****************
  2160 ;; Defined at:
  2161 ;;		line 523 in file "drivers/scr/drv_mrf24j40.c"
  2162 ;; Parameters:    Size  Location     Type
  2163 ;;		None
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  pos             1    8[COMRAM] unsigned char 
  2166 ;;  i               1    7[COMRAM] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  1    wreg      void 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2180 ;;Total ram usage:        2 bytes
  2181 ;; Hardware stack levels used: 1
  2182 ;; Hardware stack levels required when called: 3
  2183 ;; This function calls:
  2184 ;;		_SetLongAddr
  2185 ;;		_SetShortAddr
  2186 ;; This function is called by:
  2187 ;;		_main
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text12
  2192   00113A                     __ptext12:
  2193                           	callstack 0
  2194   00113A                     _EnviarDato:
  2195                           	callstack 27
  2196   00113A                     
  2197                           ;drivers/scr/drv_mrf24j40.c: 528:  uint8_t pos = 0;
  2198   00113A  6A33               	clrf	EnviarDato@pos^0,c
  2199   00113C                     
  2200                           ;drivers/scr/drv_mrf24j40.c: 531:  SetLongAddr(pos++, i);
  2201   00113C  0E00               	movlw	0
  2202   00113E  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  2203   001140  0E00               	movlw	0
  2204   001142  6E2D               	movwf	SetLongAddr@reg_address^0,c
  2205   001144  0E0F               	movlw	15
  2206   001146  6E2F               	movwf	SetLongAddr@value^0,c
  2207   001148  EC48  F00A         	call	_SetLongAddr	;wreg free
  2208   00114C  2A33               	incf	EnviarDato@pos^0,f,c
  2209   00114E                     
  2210                           ;drivers/scr/drv_mrf24j40.c: 532:  SetLongAddr(pos++, mrf24_data_out.tamano_mensaje + i)
      +                          ;
  2211   00114E  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2212   001152  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2213   001154  5027               	movf	(_mrf24_data_out+4)^0,w,c
  2214   001156  0F0F               	addlw	15
  2215   001158  6E2F               	movwf	SetLongAddr@value^0,c
  2216   00115A  EC48  F00A         	call	_SetLongAddr	;wreg free
  2217   00115E  2A33               	incf	EnviarDato@pos^0,f,c
  2218   001160                     
  2219                           ;drivers/scr/drv_mrf24j40.c: 533:  SetLongAddr(pos++, (0X01)|(0X20)|(0X40));
  2220   001160  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2221   001164  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2222   001166  0E61               	movlw	97
  2223   001168  6E2F               	movwf	SetLongAddr@value^0,c
  2224   00116A  EC48  F00A         	call	_SetLongAddr	;wreg free
  2225   00116E  2A33               	incf	EnviarDato@pos^0,f,c
  2226   001170                     
  2227                           ;drivers/scr/drv_mrf24j40.c: 534:  SetLongAddr(pos++, (0XC0)|(0X08));
  2228   001170  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2229   001174  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2230   001176  0EC8               	movlw	200
  2231   001178  6E2F               	movwf	SetLongAddr@value^0,c
  2232   00117A  EC48  F00A         	call	_SetLongAddr	;wreg free
  2233   00117E  2A33               	incf	EnviarDato@pos^0,f,c
  2234   001180                     
  2235                           ;drivers/scr/drv_mrf24j40.c: 535:  SetLongAddr(pos++, mrf24_data_config.sequence_number+
      +                          +);
  2236   001180  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2237   001184  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2238   001186  EE20  F003         	lfsr	2,_mrf24_data_config+2
  2239   00118A  50DF               	movf	indf2,w,c
  2240   00118C  2ADF               	incf	indf2,f,c
  2241   00118E  6E2F               	movwf	SetLongAddr@value^0,c
  2242   001190  EC48  F00A         	call	_SetLongAddr	;wreg free
  2243   001194  2A33               	incf	EnviarDato@pos^0,f,c
  2244   001196                     
  2245                           ;drivers/scr/drv_mrf24j40.c: 536:  SetLongAddr(pos++, (uint8_t) mrf24_data_out.destinity
      +                          _panid);
  2246   001196  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2247   00119A  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2248   00119C  C023  F02F         	movff	_mrf24_data_out,SetLongAddr@value
  2249   0011A0  EC48  F00A         	call	_SetLongAddr	;wreg free
  2250   0011A4  2A33               	incf	EnviarDato@pos^0,f,c
  2251   0011A6                     
  2252                           ;drivers/scr/drv_mrf24j40.c: 537:  SetLongAddr(pos++, (uint8_t) (mrf24_data_out.destinit
      +                          y_panid >> 8));
  2253   0011A6  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2254   0011AA  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2255   0011AC  5024               	movf	(_mrf24_data_out+1)^0,w,c
  2256   0011AE  6E2F               	movwf	SetLongAddr@value^0,c
  2257   0011B0  EC48  F00A         	call	_SetLongAddr	;wreg free
  2258   0011B4  2A33               	incf	EnviarDato@pos^0,f,c
  2259   0011B6                     
  2260                           ;drivers/scr/drv_mrf24j40.c: 538:  SetLongAddr(pos++, (uint8_t) mrf24_data_out.destinity
      +                          _address);
  2261   0011B6  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2262   0011BA  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2263   0011BC  C025  F02F         	movff	_mrf24_data_out+2,SetLongAddr@value
  2264   0011C0  EC48  F00A         	call	_SetLongAddr	;wreg free
  2265   0011C4  2A33               	incf	EnviarDato@pos^0,f,c
  2266   0011C6                     
  2267                           ;drivers/scr/drv_mrf24j40.c: 539:  SetLongAddr(pos++, (uint8_t) (mrf24_data_out.destinit
      +                          y_address >> 8));
  2268   0011C6  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2269   0011CA  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2270   0011CC  5026               	movf	(_mrf24_data_out+3)^0,w,c
  2271   0011CE  6E2F               	movwf	SetLongAddr@value^0,c
  2272   0011D0  EC48  F00A         	call	_SetLongAddr	;wreg free
  2273   0011D4  2A33               	incf	EnviarDato@pos^0,f,c
  2274   0011D6                     
  2275                           ;drivers/scr/drv_mrf24j40.c: 540:  for(i = 0; i < 8; i++)
  2276   0011D6  6A32               	clrf	EnviarDato@i^0,c
  2277   0011D8                     l1628:
  2278                           
  2279                           ;drivers/scr/drv_mrf24j40.c: 541:  {;drivers/scr/drv_mrf24j40.c: 542:   SetLongAddr(pos+
      +                          +, mrf24_data_config.my_mac[i]);
  2280   0011D8  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2281   0011DC  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2282   0011DE  5032               	movf	EnviarDato@i^0,w,c
  2283   0011E0  0F15               	addlw	low (_mrf24_data_config+20)
  2284   0011E2  6ED9               	movwf	fsr2l,c
  2285   0011E4  6ADA               	clrf	fsr2h,c
  2286   0011E6  50DF               	movf	indf2,w,c
  2287   0011E8  6E2F               	movwf	SetLongAddr@value^0,c
  2288   0011EA  EC48  F00A         	call	_SetLongAddr	;wreg free
  2289   0011EE  2A33               	incf	EnviarDato@pos^0,f,c
  2290   0011F0                     
  2291                           ;drivers/scr/drv_mrf24j40.c: 543:  }
  2292   0011F0  2A32               	incf	EnviarDato@i^0,f,c
  2293   0011F2  0E07               	movlw	7
  2294   0011F4  6432               	cpfsgt	EnviarDato@i^0,c
  2295   0011F6  EFFF  F008         	goto	u371
  2296   0011FA  EF01  F009         	goto	u370
  2297   0011FE                     u371:
  2298   0011FE  EFEC  F008         	goto	l1628
  2299   001202                     u370:
  2300   001202                     
  2301                           ;drivers/scr/drv_mrf24j40.c: 544:  for(i = 0; i < mrf24_data_out.tamano_mensaje; i++)
  2302   001202  6A32               	clrf	EnviarDato@i^0,c
  2303   001204  EF13  F009         	goto	l1642
  2304   001208                     l1636:
  2305                           
  2306                           ;drivers/scr/drv_mrf24j40.c: 545:  {;drivers/scr/drv_mrf24j40.c: 546:   SetLongAddr(pos+
      +                          +, mrf24_data_out.buffer_salida[i]);
  2307   001208  C033  F02D         	movff	EnviarDato@pos,SetLongAddr@reg_address
  2308   00120C  6A2E               	clrf	(SetLongAddr@reg_address+1)^0,c
  2309   00120E  5032               	movf	EnviarDato@i^0,w,c
  2310   001210  2428               	addwf	(_mrf24_data_out+5)^0,w,c
  2311   001212  6ED9               	movwf	fsr2l,c
  2312   001214  0E00               	movlw	0
  2313   001216  2029               	addwfc	(_mrf24_data_out+6)^0,w,c
  2314   001218  6EDA               	movwf	fsr2h,c
  2315   00121A  50DF               	movf	indf2,w,c
  2316   00121C  6E2F               	movwf	SetLongAddr@value^0,c
  2317   00121E  EC48  F00A         	call	_SetLongAddr	;wreg free
  2318   001222  2A33               	incf	EnviarDato@pos^0,f,c
  2319   001224                     
  2320                           ;drivers/scr/drv_mrf24j40.c: 547:  }
  2321   001224  2A32               	incf	EnviarDato@i^0,f,c
  2322   001226                     l1642:
  2323   001226  5027               	movf	(_mrf24_data_out+4)^0,w,c
  2324   001228  5C32               	subwf	EnviarDato@i^0,w,c
  2325   00122A  A0D8               	btfss	status,0,c
  2326   00122C  EF1A  F009         	goto	u381
  2327   001230  EF1C  F009         	goto	u380
  2328   001234                     u381:
  2329   001234  EF04  F009         	goto	l1636
  2330   001238                     u380:
  2331   001238                     
  2332                           ;drivers/scr/drv_mrf24j40.c: 548:  SetShortAddr((0x1B), 1 | (0X04));
  2333   001238  0E05               	movlw	5
  2334   00123A  6E2D               	movwf	SetShortAddr@value^0,c
  2335   00123C  0E1B               	movlw	27
  2336   00123E  ECB0  F00A         	call	_SetShortAddr
  2337   001242  0012               	return		;funcret
  2338   001244                     __end_of_EnviarDato:
  2339                           	callstack 0
  2340                           
  2341 ;; *************** function _SetShortAddr *****************
  2342 ;; Defined at:
  2343 ;;		line 346 in file "drivers/scr/drv_mrf24j40.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  reg_address     1    wreg     unsigned char 
  2346 ;;  value           1    2[COMRAM] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  reg_address     1    3[COMRAM] unsigned char 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  1    wreg      void 
  2351 ;; Registers used:
  2352 ;;		wreg, status,2, status,0, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2358 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2362 ;;Total ram usage:        2 bytes
  2363 ;; Hardware stack levels used: 1
  2364 ;; Hardware stack levels required when called: 2
  2365 ;; This function calls:
  2366 ;;		_SetCSPin
  2367 ;;		_WriteByteSPIPort
  2368 ;; This function is called by:
  2369 ;;		_MRF24J40Init
  2370 ;;		_SetChannel
  2371 ;;		_SetDeviceAddress
  2372 ;;		_SetDeviceMACAddress
  2373 ;;		_EnviarDato
  2374 ;;		_EnviarDatoEncriptado
  2375 ;;		_EnviarComando
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text13
  2380   001560                     __ptext13:
  2381                           	callstack 0
  2382   001560                     _SetShortAddr:
  2383                           	callstack 27
  2384                           
  2385                           ;incstack = 0
  2386                           ;SetShortAddr@reg_address stored from wreg
  2387   001560  6E2E               	movwf	SetShortAddr@reg_address^0,c
  2388   001562                     
  2389                           ;drivers/scr/drv_mrf24j40.c: 348:     reg_address = (uint8_t) (reg_address << 1) | 0x01;
  2390   001562  80D8               	bsf	status,0,c
  2391   001564  362E               	rlcf	SetShortAddr@reg_address^0,f,c
  2392   001566                     
  2393                           ;drivers/scr/drv_mrf24j40.c: 349:     SetCSPin(0);
  2394   001566  0E00               	movlw	0
  2395   001568  EC01  F00B         	call	_SetCSPin
  2396   00156C                     
  2397                           ;drivers/scr/drv_mrf24j40.c: 350:  WriteByteSPIPort(reg_address);
  2398   00156C  502E               	movf	SetShortAddr@reg_address^0,w,c
  2399   00156E  EC08  F00B         	call	_WriteByteSPIPort
  2400   001572                     
  2401                           ;drivers/scr/drv_mrf24j40.c: 351:  WriteByteSPIPort(value);
  2402   001572  502D               	movf	SetShortAddr@value^0,w,c
  2403   001574  EC08  F00B         	call	_WriteByteSPIPort
  2404   001578                     
  2405                           ;drivers/scr/drv_mrf24j40.c: 352:     SetCSPin(1);
  2406   001578  0E01               	movlw	1
  2407   00157A  EC01  F00B         	call	_SetCSPin
  2408   00157E  0012               	return		;funcret
  2409   001580                     __end_of_SetShortAddr:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function _SetLongAddr *****************
  2413 ;; Defined at:
  2414 ;;		line 377 in file "drivers/scr/drv_mrf24j40.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  reg_address     2    2[COMRAM] unsigned short 
  2417 ;;  value           1    4[COMRAM] unsigned char 
  2418 ;; Auto vars:     Size  Location     Type
  2419 ;;		None
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  1    wreg      void 
  2422 ;; Registers used:
  2423 ;;		wreg, status,2, status,0, cstack
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2429 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2433 ;;Total ram usage:        5 bytes
  2434 ;; Hardware stack levels used: 1
  2435 ;; Hardware stack levels required when called: 2
  2436 ;; This function calls:
  2437 ;;		_SetCSPin
  2438 ;;		_WriteByteSPIPort
  2439 ;; This function is called by:
  2440 ;;		_MRF24J40Init
  2441 ;;		_SetChannel
  2442 ;;		_EnviarDato
  2443 ;;		_EnviarDatoEncriptado
  2444 ;;		_EnviarComando
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text14
  2449   001490                     __ptext14:
  2450                           	callstack 0
  2451   001490                     _SetLongAddr:
  2452                           	callstack 27
  2453   001490                     
  2454                           ;drivers/scr/drv_mrf24j40.c: 379:     reg_address = (reg_address << 5) | 0x8010;
  2455   001490  C02D  F030         	movff	SetLongAddr@reg_address,??_SetLongAddr
  2456   001494  C02E  F031         	movff	SetLongAddr@reg_address+1,??_SetLongAddr+1
  2457   001498  0E05               	movlw	5
  2458   00149A                     u315:
  2459   00149A  90D8               	bcf	status,0,c
  2460   00149C  3630               	rlcf	??_SetLongAddr^0,f,c
  2461   00149E  3631               	rlcf	(??_SetLongAddr+1)^0,f,c
  2462   0014A0  2EE8               	decfsz	wreg,f,c
  2463   0014A2  EF4D  F00A         	goto	u315
  2464   0014A6  0E10               	movlw	16
  2465   0014A8  1030               	iorwf	??_SetLongAddr^0,w,c
  2466   0014AA  6E2D               	movwf	SetLongAddr@reg_address^0,c
  2467   0014AC  0E80               	movlw	128
  2468   0014AE  1031               	iorwf	(??_SetLongAddr+1)^0,w,c
  2469   0014B0  6E2E               	movwf	(SetLongAddr@reg_address+1)^0,c
  2470   0014B2                     
  2471                           ;drivers/scr/drv_mrf24j40.c: 380:     SetCSPin(0);
  2472   0014B2  0E00               	movlw	0
  2473   0014B4  EC01  F00B         	call	_SetCSPin
  2474   0014B8                     
  2475                           ;drivers/scr/drv_mrf24j40.c: 381:  WriteByteSPIPort((uint8_t) (reg_address >> 8));
  2476   0014B8  502E               	movf	(SetLongAddr@reg_address+1)^0,w,c
  2477   0014BA  EC08  F00B         	call	_WriteByteSPIPort
  2478   0014BE                     
  2479                           ;drivers/scr/drv_mrf24j40.c: 382:  WriteByteSPIPort((uint8_t) reg_address );
  2480   0014BE  502D               	movf	SetLongAddr@reg_address^0,w,c
  2481   0014C0  EC08  F00B         	call	_WriteByteSPIPort
  2482   0014C4                     
  2483                           ;drivers/scr/drv_mrf24j40.c: 384:  WriteByteSPIPort(value);
  2484   0014C4  502F               	movf	SetLongAddr@value^0,w,c
  2485   0014C6  EC08  F00B         	call	_WriteByteSPIPort
  2486   0014CA                     
  2487                           ;drivers/scr/drv_mrf24j40.c: 385:     SetCSPin(1);
  2488   0014CA  0E01               	movlw	1
  2489   0014CC  EC01  F00B         	call	_SetCSPin
  2490   0014D0  0012               	return		;funcret
  2491   0014D2                     __end_of_SetLongAddr:
  2492                           	callstack 0
  2493                           
  2494 ;; *************** function _WriteByteSPIPort *****************
  2495 ;; Defined at:
  2496 ;;		line 71 in file "drivers/scr/drv_mrf24j40_port.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  dato            1    wreg     unsigned char 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  dato            1    1[COMRAM] unsigned char 
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, cstack
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;Total ram usage:        1 bytes
  2515 ;; Hardware stack levels used: 1
  2516 ;; Hardware stack levels required when called: 1
  2517 ;; This function calls:
  2518 ;;		_SPIWriteByte
  2519 ;; This function is called by:
  2520 ;;		_SetShortAddr
  2521 ;;		_SetLongAddr
  2522 ;;		_GetLongAddr
  2523 ;;		_GetShortAddr
  2524 ;; This function uses a non-reentrant model
  2525 ;;
  2526                           
  2527                           	psect	text15
  2528   001610                     __ptext15:
  2529                           	callstack 0
  2530   001610                     _WriteByteSPIPort:
  2531                           	callstack 27
  2532                           
  2533                           ;incstack = 0
  2534                           ;WriteByteSPIPort@dato stored from wreg
  2535   001610  6E2C               	movwf	WriteByteSPIPort@dato^0,c
  2536   001612                     
  2537                           ;drivers/scr/drv_mrf24j40_port.c: 73:     SPIWriteByte(dato);
  2538   001612  502C               	movf	WriteByteSPIPort@dato^0,w,c
  2539   001614  ECDC  F00A         	call	_SPIWriteByte
  2540   001618  0012               	return		;funcret
  2541   00161A                     __end_of_WriteByteSPIPort:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _SPIWriteByte *****************
  2545 ;; Defined at:
  2546 ;;		line 54 in file "drivers/scr/drv_mspi_port.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  dato            1    wreg     unsigned char 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  dato            1    0[COMRAM] unsigned char 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;Total ram usage:        1 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_WriteByteSPIPort
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text16
  2574   0015B8                     __ptext16:
  2575                           	callstack 0
  2576   0015B8                     _SPIWriteByte:
  2577                           	callstack 27
  2578                           
  2579                           ;incstack = 0
  2580                           ;SPIWriteByte@dato stored from wreg
  2581   0015B8  6E2B               	movwf	SPIWriteByte@dato^0,c
  2582   0015BA                     
  2583                           ;drivers/scr/drv_mspi_port.c: 56:     PIR1bits.SSPIF = 0;
  2584   0015BA  969E               	bcf	158,3,c	;volatile
  2585   0015BC                     
  2586                           ;drivers/scr/drv_mspi_port.c: 57:     SSPBUF = dato;
  2587   0015BC  C02B  FFC9         	movff	SPIWriteByte@dato,4041	;volatile
  2588   0015C0                     l163:
  2589   0015C0  A69E               	btfss	158,3,c	;volatile
  2590   0015C2  EFE5  F00A         	goto	u281
  2591   0015C6  EFE7  F00A         	goto	u280
  2592   0015CA                     u281:
  2593   0015CA  EFE0  F00A         	goto	l163
  2594   0015CE                     u280:
  2595   0015CE  0012               	return		;funcret
  2596   0015D0                     __end_of_SPIWriteByte:
  2597                           	callstack 0
  2598                           
  2599 ;; *************** function _SetCSPin *****************
  2600 ;; Defined at:
  2601 ;;		line 38 in file "drivers/scr/drv_mrf24j40_port.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;  estado          1    wreg     _Bool 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  estado          1    0[COMRAM] _Bool 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;Total ram usage:        1 bytes
  2620 ;; Hardware stack levels used: 1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_SetShortAddr
  2625 ;;		_SetLongAddr
  2626 ;;		_GetLongAddr
  2627 ;;		_InicializoPines
  2628 ;;		_GetShortAddr
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text17
  2633   001602                     __ptext17:
  2634                           	callstack 0
  2635   001602                     _SetCSPin:
  2636                           	callstack 28
  2637                           
  2638                           ;incstack = 0
  2639                           ;SetCSPin@estado stored from wreg
  2640   001602  6E2B               	movwf	SetCSPin@estado^0,c
  2641   001604                     
  2642                           ;drivers/scr/drv_mrf24j40_port.c: 40:     LATCbits.LATC6 = estado;
  2643   001604  B02B               	btfsc	SetCSPin@estado^0,0,c
  2644   001606  D002               	bra	u305
  2645   001608  9C8B               	bcf	139,6,c	;volatile
  2646   00160A  D001               	bra	u306
  2647   00160C                     u305:
  2648   00160C  8C8B               	bsf	139,6,c	;volatile
  2649   00160E                     u306:
  2650   00160E  0012               	return		;funcret
  2651   001610                     __end_of_SetCSPin:
  2652                           	callstack 0
  2653                           
  2654 ;; *************** function _BoardInit *****************
  2655 ;; Defined at:
  2656 ;;		line 21 in file "hardware_config.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;		None
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;Total ram usage:        0 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; Hardware stack levels required when called: 1
  2677 ;; This function calls:
  2678 ;;		_SPIInit
  2679 ;; This function is called by:
  2680 ;;		_main
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text18
  2685   0014D2                     __ptext18:
  2686                           	callstack 0
  2687   0014D2                     _BoardInit:
  2688                           	callstack 29
  2689   0014D2                     
  2690                           ;hardware_config.c: 23:     PORTA = 0;
  2691   0014D2  6A80               	clrf	128,c	;volatile
  2692                           
  2693                           ;hardware_config.c: 24:     PORTB = 0;
  2694   0014D4  6A81               	clrf	129,c	;volatile
  2695                           
  2696                           ;hardware_config.c: 25:     PORTC = 0;
  2697   0014D6  6A82               	clrf	130,c	;volatile
  2698                           
  2699                           ;hardware_config.c: 26:     PORTD = 0;
  2700   0014D8  6A83               	clrf	131,c	;volatile
  2701                           
  2702                           ;hardware_config.c: 27:     PORTE = 0;
  2703   0014DA  6A84               	clrf	132,c	;volatile
  2704                           
  2705                           ;hardware_config.c: 30:     TRISBbits.TRISB6 = 1;
  2706   0014DC  8C93               	bsf	147,6,c	;volatile
  2707                           
  2708                           ;hardware_config.c: 31:     TRISBbits.TRISB7 = 1;
  2709   0014DE  8E93               	bsf	147,7,c	;volatile
  2710                           
  2711                           ;hardware_config.c: 32:     TRISEbits.TRISE2 = 0;
  2712   0014E0  9496               	bcf	150,2,c	;volatile
  2713                           
  2714                           ;hardware_config.c: 33:     TRISEbits.TRISE0 = 0;
  2715   0014E2  9096               	bcf	150,0,c	;volatile
  2716                           
  2717                           ;hardware_config.c: 34:     TRISEbits.TRISE1 = 0;
  2718   0014E4  9296               	bcf	150,1,c	;volatile
  2719                           
  2720                           ;hardware_config.c: 37:  GIE = 0;
  2721   0014E6  9EF2               	bcf	4082,7,c	;volatile
  2722                           
  2723                           ;hardware_config.c: 38:  PEIE = 0;
  2724   0014E8  9CF2               	bcf	4082,6,c	;volatile
  2725                           
  2726                           ;hardware_config.c: 39:  RBIE = 0;
  2727   0014EA  96F2               	bcf	4082,3,c	;volatile
  2728                           
  2729                           ;hardware_config.c: 40:  T0IE = 0;
  2730   0014EC  9AF2               	bcf	4082,5,c	;volatile
  2731                           
  2732                           ;hardware_config.c: 41:  TMR1IE = 0;
  2733   0014EE  909D               	bcf	3997,0,c	;volatile
  2734                           
  2735                           ;hardware_config.c: 42:  TMR2IE = 0;
  2736   0014F0  929D               	bcf	3997,1,c	;volatile
  2737                           
  2738                           ;hardware_config.c: 43:  CCP1IE = 0;
  2739   0014F2  949D               	bcf	3997,2,c	;volatile
  2740                           
  2741                           ;hardware_config.c: 44:  CCP2IE = 0;
  2742   0014F4  90A0               	bcf	4000,0,c	;volatile
  2743                           
  2744                           ;hardware_config.c: 45:  EEIE = 0;
  2745   0014F6  98A0               	bcf	4000,4,c	;volatile
  2746                           
  2747                           ;hardware_config.c: 46:  SSPIE = 0;
  2748   0014F8  969D               	bcf	3997,3,c	;volatile
  2749                           
  2750                           ;hardware_config.c: 47:  BCLIE = 0;
  2751   0014FA  96A0               	bcf	4000,3,c	;volatile
  2752                           
  2753                           ;hardware_config.c: 48:  ADIE = 0;
  2754   0014FC  9C9D               	bcf	3997,6,c	;volatile
  2755                           
  2756                           ;hardware_config.c: 49:  RBIE = 0;
  2757   0014FE  96F2               	bcf	4082,3,c	;volatile
  2758                           
  2759                           ;hardware_config.c: 50:  RCIE = 0;
  2760   001500  9A9D               	bcf	3997,5,c	;volatile
  2761   001502                     
  2762                           ;hardware_config.c: 51:     OSCCON = 0b01110010;
  2763   001502  0E72               	movlw	114
  2764   001504  6ED3               	movwf	211,c	;volatile
  2765                           
  2766                           ;hardware_config.c: 52:     OSCTUNE = 0b11011111;
  2767   001506  0EDF               	movlw	223
  2768   001508  6E9B               	movwf	155,c	;volatile
  2769   00150A                     
  2770                           ;hardware_config.c: 55:     SPIInit();
  2771   00150A  ECCE  F00A         	call	_SPIInit	;wreg free
  2772   00150E  0012               	return		;funcret
  2773   001510                     __end_of_BoardInit:
  2774                           	callstack 0
  2775                           
  2776 ;; *************** function _SPIInit *****************
  2777 ;; Defined at:
  2778 ;;		line 31 in file "drivers/scr/drv_mspi_port.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;		None
  2781 ;; Auto vars:     Size  Location     Type
  2782 ;;		None
  2783 ;; Return value:  Size  Location     Type
  2784 ;;                  1    wreg      void 
  2785 ;; Registers used:
  2786 ;;		None
  2787 ;; Tracked objects:
  2788 ;;		On entry : 0/0
  2789 ;;		On exit  : 0/0
  2790 ;;		Unchanged: 0/0
  2791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2796 ;;Total ram usage:        0 bytes
  2797 ;; Hardware stack levels used: 1
  2798 ;; This function calls:
  2799 ;;		Nothing
  2800 ;; This function is called by:
  2801 ;;		_BoardInit
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text19
  2806   00159C                     __ptext19:
  2807                           	callstack 0
  2808   00159C                     _SPIInit:
  2809                           	callstack 29
  2810   00159C                     
  2811                           ;drivers/scr/drv_mspi_port.c: 33:     TRISCbits.TRISC3 = 0;
  2812   00159C  9694               	bcf	148,3,c	;volatile
  2813                           
  2814                           ;drivers/scr/drv_mspi_port.c: 34:     TRISCbits.TRISC5 = 0;
  2815   00159E  9A94               	bcf	148,5,c	;volatile
  2816                           
  2817                           ;drivers/scr/drv_mspi_port.c: 35:     TRISCbits.TRISC4 = 1;
  2818   0015A0  8894               	bsf	148,4,c	;volatile
  2819                           
  2820                           ;drivers/scr/drv_mspi_port.c: 36:  SSPSTATbits.CKE = 1;
  2821   0015A2  8CC7               	bsf	199,6,c	;volatile
  2822                           
  2823                           ;drivers/scr/drv_mspi_port.c: 37:  SSPCON1bits.WCOL = 1;
  2824   0015A4  8EC6               	bsf	198,7,c	;volatile
  2825                           
  2826                           ;drivers/scr/drv_mspi_port.c: 38:  SSPCON1bits.SSPOV = 0;
  2827   0015A6  9CC6               	bcf	198,6,c	;volatile
  2828                           
  2829                           ;drivers/scr/drv_mspi_port.c: 39:  SSPCON1bits.SSPEN = 1;
  2830   0015A8  8AC6               	bsf	198,5,c	;volatile
  2831                           
  2832                           ;drivers/scr/drv_mspi_port.c: 40:  SSPCON1bits.CKP = 0;
  2833   0015AA  98C6               	bcf	198,4,c	;volatile
  2834                           
  2835                           ;drivers/scr/drv_mspi_port.c: 41:  SSPSTATbits.SMP = 1;
  2836   0015AC  8EC7               	bsf	199,7,c	;volatile
  2837                           
  2838                           ;drivers/scr/drv_mspi_port.c: 42:  SSPCON1bits.SSPM3 = 0;
  2839   0015AE  96C6               	bcf	198,3,c	;volatile
  2840                           
  2841                           ;drivers/scr/drv_mspi_port.c: 43:  SSPCON1bits.SSPM2 = 0;
  2842   0015B0  94C6               	bcf	198,2,c	;volatile
  2843                           
  2844                           ;drivers/scr/drv_mspi_port.c: 44:  SSPCON1bits.SSPM1 = 0;
  2845   0015B2  92C6               	bcf	198,1,c	;volatile
  2846                           
  2847                           ;drivers/scr/drv_mspi_port.c: 45:  SSPCON1bits.SSPM0 = 1;
  2848   0015B4  80C6               	bsf	198,0,c	;volatile
  2849   0015B6  0012               	return		;funcret
  2850   0015B8                     __end_of_SPIInit:
  2851                           	callstack 0
  2852                           
  2853                           	psect	rparam
  2854   000001                     ___rparam_used  equ	1
  2855   000000                     ___param_bank   equ	0
  2856   000000                     __Lparam        equ	__Lrparam
  2857   000000                     __Hparam        equ	__Hrparam
  2858                           
  2859                           	psect	idloc
  2860                           
  2861                           ;Config register IDLOC0 @ 0x200000
  2862                           ;	unspecified, using default values
  2863   200000                     	org	2097152
  2864   200000  FF                 	db	255
  2865                           
  2866                           ;Config register IDLOC1 @ 0x200001
  2867                           ;	unspecified, using default values
  2868   200001                     	org	2097153
  2869   200001  FF                 	db	255
  2870                           
  2871                           ;Config register IDLOC2 @ 0x200002
  2872                           ;	unspecified, using default values
  2873   200002                     	org	2097154
  2874   200002  FF                 	db	255
  2875                           
  2876                           ;Config register IDLOC3 @ 0x200003
  2877                           ;	unspecified, using default values
  2878   200003                     	org	2097155
  2879   200003  FF                 	db	255
  2880                           
  2881                           ;Config register IDLOC4 @ 0x200004
  2882                           ;	unspecified, using default values
  2883   200004                     	org	2097156
  2884   200004  FF                 	db	255
  2885                           
  2886                           ;Config register IDLOC5 @ 0x200005
  2887                           ;	unspecified, using default values
  2888   200005                     	org	2097157
  2889   200005  FF                 	db	255
  2890                           
  2891                           ;Config register IDLOC6 @ 0x200006
  2892                           ;	unspecified, using default values
  2893   200006                     	org	2097158
  2894   200006  FF                 	db	255
  2895                           
  2896                           ;Config register IDLOC7 @ 0x200007
  2897                           ;	unspecified, using default values
  2898   200007                     	org	2097159
  2899   200007  FF                 	db	255
  2900                           
  2901                           	psect	config
  2902                           
  2903                           ; Padding undefined space
  2904   300000                     	org	3145728
  2905   300000  FF                 	db	255
  2906                           
  2907                           ;Config register CONFIG1H @ 0x300001
  2908                           ;	Oscillator Selection bits
  2909                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  2910                           ;	Fail-Safe Clock Monitor Enable bit
  2911                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2912                           ;	Internal/External Oscillator Switchover bit
  2913                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2914   300001                     	org	3145729
  2915   300001  08                 	db	8
  2916                           
  2917                           ;Config register CONFIG2L @ 0x300002
  2918                           ;	Power-up Timer Enable bit
  2919                           ;	PWRTEN = OFF, PWRT disabled
  2920                           ;	Brown-out Reset Enable bits
  2921                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2922                           ;	Brown Out Reset Voltage bits
  2923                           ;	BORV = 22, VBOR set to 2.2 V nominal
  2924   300002                     	org	3145730
  2925   300002  11                 	db	17
  2926                           
  2927                           ;Config register CONFIG2H @ 0x300003
  2928                           ;	Watchdog Timer Enable bit
  2929                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  2930                           ;	Watchdog Timer Postscale Select bits
  2931                           ;	WDTPS = 8192, 1:8192
  2932   300003                     	org	3145731
  2933   300003  1A                 	db	26
  2934                           
  2935                           ; Padding undefined space
  2936   300004                     	org	3145732
  2937   300004  FF                 	db	255
  2938                           
  2939                           ;Config register CONFIG3H @ 0x300005
  2940                           ;	CCP2 MUX bit
  2941                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2942                           ;	PORTB A/D Enable bit
  2943                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2944                           ;	Low-Power Timer1 Oscillator Enable bit
  2945                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2946                           ;	HFINTOSC Fast Start-up
  2947                           ;	HFOFST = OFF, The system clock is held off until the HFINTOSC is stable.
  2948                           ;	MCLR Pin Enable bit
  2949                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2950   300005                     	org	3145733
  2951   300005  81                 	db	129
  2952                           
  2953                           ;Config register CONFIG4L @ 0x300006
  2954                           ;	Stack Full/Underflow Reset Enable bit
  2955                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  2956                           ;	Single-Supply ICSP Enable bit
  2957                           ;	LVP = OFF, Single-Supply ICSP disabled
  2958                           ;	Extended Instruction Set Enable bit
  2959                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2960                           ;	Background Debugger Enable bit
  2961                           ;	DEBUG = ON, Background debugger enabled, RB6 and RB7 are dedicated to In-Circuit Debug
  2962   300006                     	org	3145734
  2963   300006  00                 	db	0
  2964                           
  2965                           ; Padding undefined space
  2966   300007                     	org	3145735
  2967   300007  FF                 	db	255
  2968                           
  2969                           ;Config register CONFIG5L @ 0x300008
  2970                           ;	Code Protection Block 0
  2971                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  2972                           ;	Code Protection Block 1
  2973                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  2974                           ;	Code Protection Block 2
  2975                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  2976                           ;	Code Protection Block 3
  2977                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  2978   300008                     	org	3145736
  2979   300008  0F                 	db	15
  2980                           
  2981                           ;Config register CONFIG5H @ 0x300009
  2982                           ;	Boot Block Code Protection bit
  2983                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2984                           ;	Data EEPROM Code Protection bit
  2985                           ;	CPD = OFF, Data EEPROM not code-protected
  2986   300009                     	org	3145737
  2987   300009  C0                 	db	192
  2988                           
  2989                           ;Config register CONFIG6L @ 0x30000A
  2990                           ;	Write Protection Block 0
  2991                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  2992                           ;	Write Protection Block 1
  2993                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  2994                           ;	Write Protection Block 2
  2995                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  2996                           ;	Write Protection Block 3
  2997                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  2998   30000A                     	org	3145738
  2999   30000A  0F                 	db	15
  3000                           
  3001                           ;Config register CONFIG6H @ 0x30000B
  3002                           ;	Configuration Register Write Protection bit
  3003                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3004                           ;	Boot Block Write Protection bit
  3005                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3006                           ;	Data EEPROM Write Protection bit
  3007                           ;	WRTD = OFF, Data EEPROM not write-protected
  3008   30000B                     	org	3145739
  3009   30000B  E0                 	db	224
  3010                           
  3011                           ;Config register CONFIG7L @ 0x30000C
  3012                           ;	unspecified, using default values
  3013                           ;	Table Read Protection Block 0
  3014                           ;	EBTR0 = 0x1, unprogrammed default
  3015                           ;	Table Read Protection Block 1
  3016                           ;	EBTR1 = 0x1, unprogrammed default
  3017                           ;	Table Read Protection Block 2
  3018                           ;	EBTR2 = 0x1, unprogrammed default
  3019                           ;	Table Read Protection Block 3
  3020                           ;	EBTR3 = 0x1, unprogrammed default
  3021   30000C                     	org	3145740
  3022   30000C  0F                 	db	15
  3023                           
  3024                           ;Config register CONFIG7H @ 0x30000D
  3025                           ;	Boot Block Table Read Protection bit
  3026                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3027   30000D                     	org	3145741
  3028   30000D  40                 	db	64
  3029                           tosu	equ	0xFFF
  3030                           tosh	equ	0xFFE
  3031                           tosl	equ	0xFFD
  3032                           stkptr	equ	0xFFC
  3033                           pclatu	equ	0xFFB
  3034                           pclath	equ	0xFFA
  3035                           pcl	equ	0xFF9
  3036                           tblptru	equ	0xFF8
  3037                           tblptrh	equ	0xFF7
  3038                           tblptrl	equ	0xFF6
  3039                           tablat	equ	0xFF5
  3040                           prodh	equ	0xFF4
  3041                           prodl	equ	0xFF3
  3042                           indf0	equ	0xFEF
  3043                           postinc0	equ	0xFEE
  3044                           postdec0	equ	0xFED
  3045                           preinc0	equ	0xFEC
  3046                           plusw0	equ	0xFEB
  3047                           fsr0h	equ	0xFEA
  3048                           fsr0l	equ	0xFE9
  3049                           wreg	equ	0xFE8
  3050                           indf1	equ	0xFE7
  3051                           postinc1	equ	0xFE6
  3052                           postdec1	equ	0xFE5
  3053                           preinc1	equ	0xFE4
  3054                           plusw1	equ	0xFE3
  3055                           fsr1h	equ	0xFE2
  3056                           fsr1l	equ	0xFE1
  3057                           bsr	equ	0xFE0
  3058                           indf2	equ	0xFDF
  3059                           postinc2	equ	0xFDE
  3060                           postdec2	equ	0xFDD
  3061                           preinc2	equ	0xFDC
  3062                           plusw2	equ	0xFDB
  3063                           fsr2h	equ	0xFDA
  3064                           fsr2l	equ	0xFD9
  3065                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    24
    Data        0
    BSS         97
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      54
    BANK0           160      0      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15           96      0       0

Pointer List with Targets:

    mrf24_data_out$buffer_salida	PTR const unsigned char  size(2) Largest target is 0

    S34$buffer_salida	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_MRF24J40Init
    _MRF24J40Init->_SetChannel
    _SetDeviceMACAddress->_SetShortAddr
    _SetDeviceAddress->_SetShortAddr
    _SetChannel->_GetLongAddr
    _SetChannel->_SetLongAddr
    _GetLongAddr->_WriteByteSPIPort
    _InicializoPines->_SetCSPin
    _InicializoPines->_SetResetPin
    _InicializoPines->_SetWakePin
    _EnviarDato->_SetLongAddr
    _SetShortAddr->_WriteByteSPIPort
    _SetLongAddr->_WriteByteSPIPort
    _WriteByteSPIPort->_SPIWriteByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2695
                                             10 COMRAM     2     2      0
                          _BoardInit
                         _EnviarDato
                       _MRF24J40Init
 ---------------------------------------------------------------------------------
 (1) _MRF24J40Init                                         2     2      0    1815
                                              8 COMRAM     2     2      0
                    _InicializoPines
                _InicializoVariables
                         _SetChannel
                   _SetDeviceAddress
                _SetDeviceMACAddress
                        _SetLongAddr
                        _SetResetPin
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceMACAddress                                  2     2      0     257
                                              4 COMRAM     2     2      0
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetDeviceAddress                                     0     0      0     189
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetChannel                                           1     1      0     672
                                              7 COMRAM     1     1      0
                        _GetLongAddr
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (3) _GetLongAddr                                          5     3      2     181
                                              2 COMRAM     5     3      2
                    _ReadByteSPIPort
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (4) _ReadByteSPIPort                                      0     0      0       0
                            _SPIRead
 ---------------------------------------------------------------------------------
 (5) _SPIRead                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _InicializoVariables                                  3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _InicializoPines                                      0     0      0      59
                           _SetCSPin
                        _SetResetPin
                         _SetWakePin
 ---------------------------------------------------------------------------------
 (3) _SetWakePin                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SetResetPin                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnviarDato                                           2     2      0     880
                                              7 COMRAM     2     2      0
                        _SetLongAddr
                       _SetShortAddr
 ---------------------------------------------------------------------------------
 (2) _SetShortAddr                                         2     1      1     189
                                              2 COMRAM     2     1      1
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (2) _SetLongAddr                                          5     2      3     278
                                              2 COMRAM     5     2      3
                           _SetCSPin
                   _WriteByteSPIPort
 ---------------------------------------------------------------------------------
 (3) _WriteByteSPIPort                                     1     1      0      58
                                              1 COMRAM     1     1      0
                       _SPIWriteByte
 ---------------------------------------------------------------------------------
 (4) _SPIWriteByte                                         1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _SetCSPin                                             1     1      0      29
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _BoardInit                                            0     0      0       0
                            _SPIInit
 ---------------------------------------------------------------------------------
 (2) _SPIInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BoardInit
     _SPIInit
   _EnviarDato
     _SetLongAddr
       _SetCSPin
       _WriteByteSPIPort
         _SPIWriteByte
     _SetShortAddr
       _SetCSPin
       _WriteByteSPIPort
   _MRF24J40Init
     _InicializoPines
       _SetCSPin
       _SetResetPin
       _SetWakePin
     _InicializoVariables
     _SetChannel
       _GetLongAddr
         _ReadByteSPIPort
           _SPIRead
         _SetCSPin
         _WriteByteSPIPort
       _SetLongAddr
       _SetShortAddr
     _SetDeviceAddress
       _SetShortAddr
     _SetDeviceMACAddress
       _SetShortAddr
     _SetLongAddr
     _SetResetPin
     _SetShortAddr

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3827      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK14          244      0       0      0.0%
BANK14             244      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      55     34.4%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BIGRAM_1            96      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     12      54     56.8%
BITBIGSFR_1lh       37      0       0      0.0%
BITBIGSFRll         32      0       0      0.0%
BITBIGSFRh          15      0       0      0.0%
BITBIGSFR_1h        13      0       0      0.0%
BITBIGSFRlh         11      0       0      0.0%
BITBIGSFR_5h        10      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
BITBIGSFR_1ll        1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     109      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Mar 29 13:48:57 2025

                 _SSPSTATbits 0FC7                            l44 1338                            l45 13AA  
                          l54 14D0                            l62 1408                            l70 148E  
                          l39 1138                            l48 157E                            l57 144C  
                          l65 1538                            l90 1242                            l86 1202  
                          u45 15FE                            u46 1600                            u75 15F0  
                          u76 15F2                 ?_MRF24J40Init 002B                           l132 160E  
                         l141 1618                           l135 15F2                           l160 15B6  
                         l129 159A                           l138 1600                           l163 15C0  
                         l147 161E                           l181 15E4                           l166 15CE  
                         l248 150E                           l178 15D4                           l196 124C  
                         l946 15F6                           l992 15E8                           _GIE 7F97  
                         u305 160C                           u306 160E                           u330 1320  
                         u315 149A                           u331 131C                           u340 1370  
                         u341 136C                           u325 1414                           u350 1408  
                         u351 1404                           u280 15CE                           u360 148E  
                         u281 15CA                           u361 148A                           u370 1202  
                         u290 15E2                           u450 1260                           u371 11FE  
                         u291 15DE                           u451 1258                           u380 1238  
                         u508 12D0                           u381 1234                           u517 127A  
                         u470 1298                           u527 12B0                           u471 1290  
                         u537 12E4                           u490 12CE                           u547 102C  
                         u491 12C6                           u468 1262                           u557 104C  
                         u567 13E2                           u488 129A                           wreg 0FE8  
         __end_of_GetLongAddr 144E                          l1056 159C                          l1410 15D0  
                        l1180 150A                          l1420 1612                          l1412 15E2  
                        l1406 15BA                          l1430 1566                          l1510 13F4  
                        l1502 13AC                          l1176 14D2                          l1416 1604  
                        l1408 15BC                          l1440 1490                          l1432 156C  
                        l1600 117E                          l1424 161A                          l1504 13AC  
                        l1512 1510                          l1178 1502                          l1450 14CA  
                        l1442 14B2                          l1434 1572                          l1610 11A6  
                        l1602 1180                          l1506 13E0                          l1522 145A  
                        l1530 101A                          l1444 14B8                          l1436 1578  
                        l1428 1562                          l1620 11D4                          l1612 11B4  
                        l1604 1194                          l1460 1438                          l1508 13E6  
                        l1524 146C                          l1516 144E                          l1540 1058  
                        l1532 101E                          l1446 14BE                          l1630 11EE  
                        l1622 11D6                          l1614 11B6                          l1606 1196  
                        l1470 12FC                          l1462 143E                          l1454 140A  
                        l1526 146E                          l1550 109C                          l1542 1062  
                        l1534 1022                          l1448 14C4                          l1640 1224  
                        l1632 11F0                          l1616 11C4                          l1608 11A4  
                        l1480 1350                          l1464 1444                          l1456 142C  
                        l1528 1472                          l1560 10E6                          l1552 10AC  
                        l1544 106C                          l1536 103C                          l1642 1226  
                        l1634 11F2                          l1618 11C6                          l1490 13A6  
                        l1482 1354                          l1466 144A                          l1458 1432  
                        l1570 1112                          l1562 10F0                          l1554 10BC  
                        l1546 107C                          l1538 1042                          l1644 1238  
                        l1636 1208                          l1628 11D8                          l1492 13A8  
                        l1484 1370                          l1476 1304                          l1572 1116  
                        l1564 10FA                          l1556 10CC                          l1548 108C  
                        l1638 1222                          l1590 114E                          l1582 113A  
                        l1486 1378                          l1478 1320                          l1574 111A  
                        l1566 1104                          l1558 10DC                          l1592 115E  
                        l1584 113C                          l1496 1580                          l1488 137A  
                        l1576 1124                          l1568 1108                          l1594 1160  
                        l1586 113C                          l1498 1588                          l1578 112E  
                        l1850 1286                          l1842 1244                          l1596 116E  
                        l1588 114C                          l1852 12A6                          l1844 1248  
                        l1598 1170                          l1854 12BC                          l1846 124E  
                        l1856 12DA                          l1848 1270                          l1858 12F0  
                        _ADIE 7CEE                          _EEIE 7D04                          _T0IE 7F95  
                        _PEIE 7F96                          _RBIE 7F93                          _RCIE 7CED  
                _SPIWriteByte 15B8                          _main 1244               __end_of_SPIInit 15B8  
             __end_of_SPIRead 15E6                          fsr2h 0FDA                          indf2 0FDF  
                        fsr2l 0FD9                   EnviarDato@i 0032                          start 0000  
                ___param_bank 0000             ??_ReadByteSPIPort 002B                ??_MRF24J40Init 0033  
 __end_of_InicializoVariables 13AC                         ?_main 002B                         _BCLIE 7D03  
        SetDeviceMACAddress@i 002F                         _PORTA 0F80                         _PORTB 0F81  
                       _PORTC 0F82                         _PORTD 0F83                         _PORTE 0F84  
                       _SSPIE 7CEB               _InicializoPines 1580       SetShortAddr@reg_address 002E  
                       tablat 0FF5                         status 0FD8                    _EnviarDato 113A  
         _SetDeviceMACAddress 144E               __initialization 153A                  __end_of_main 12FC  
            __end_of_SetCSPin 1610                   _GetLongAddr 140A                 ??_SetLongAddr 0030  
                      ??_main 0035                 __activetblptr 0001                 ??_SetResetPin 002B  
        ?_SetDeviceMACAddress 002B                    _SetChannel 13AC             ?_SetDeviceAddress 002B  
                      _CCP1IE 7CEA                        _CCP2IE 7D00                     ??_SPIInit 002B  
                   ??_SPIRead 002B            ??_SetDeviceAddress 002F                    _SetWakePin 15E6  
                      _OSCCON 0FD3                        _TMR1IE 7CE8                        _TMR2IE 7CE9  
__end_of_default_security_key 1011                        _SSPBUF 0FC9                        clear_0 1540  
                      clear_1 154C                        isa$std 0001                SetCSPin@estado 002B  
     __end_of_InicializoPines 159C         ??_SetDeviceMACAddress 002F          InicializoVariables@i 002C  
               EnviarDato@pos 0033                  __mediumconst 0000             _mrf24_data_config 0001  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
         __end_of_SetLongAddr 14D2           __end_of_SetResetPin 1602          __end_of_MRF24J40Init 113A  
                  __accesstop 0060       __end_of__initialization 1552             __end_of_BoardInit 1510  
                 ?_EnviarDato 002B                 ___rparam_used 0001              SetWakePin@estado 002B  
               ?_SetShortAddr 002D                __pcstackCOMRAM 002B                   ?_SetChannel 002B  
                  __pbssBANK0 0060                   ?_SetWakePin 002B                     ?_SetCSPin 002B  
             _ReadByteSPIPort 161A                ??_SetShortAddr 002E                   _SetLongAddr 1490  
            ?_InicializoPines 002B          _default_security_key 1001                   _SetResetPin 15F4  
                     _OSCTUNE 0F9B                       _SPIInit 159C                       _SPIRead 15D0  
                  ??_SetCSPin 002B             SetShortAddr@value 002D                       __Hparam 0000  
                     __Lparam 0000                  __psmallconst 1000                       __pcinit 153A  
                ?_GetLongAddr 002D                       __ramtop 1000                       __ptext0 1244  
                     __ptext1 101A                       __ptext2 144E                       __ptext3 1510  
                     __ptext4 13AC                       __ptext5 140A                       __ptext6 161A  
                     __ptext7 15D0                       __ptext8 12FC                       __ptext9 1580  
            _WriteByteSPIPort 1610       __end_of_ReadByteSPIPort 1620          end_of_initialization 1552  
         _default_mac_address 1011                       postinc0 0FEE                  _MRF24J40Init 101A  
        WriteByteSPIPort@dato 002C                     _TRISBbits 0F93                     _TRISCbits 0F94  
                   _TRISDbits 0F95                     _TRISEbits 0F96          __end_of_SetShortAddr 1580  
      _my_default_mac_address 002A                  ??_EnviarDato 0032                     _BoardInit 14D2  
 __end_of_SetDeviceMACAddress 1490                  ??_SetChannel 0032           start_initialization 153A  
          __end_of_EnviarDato 1244              ?_ReadByteSPIPort 002B                 ?_SPIWriteByte 002B  
                ??_SetWakePin 002B                    ?_BoardInit 002B            __end_of_SetChannel 140A  
                ?_SetLongAddr 002D            __end_of_SetWakePin 15F4                  ?_SetResetPin 002B  
                 __pbssCOMRAM 0001                      ?_SPIInit 002B                      ?_SPIRead 002B  
              ??_SPIWriteByte 002B              SPIWriteByte@dato 002B              _SetDeviceAddress 1510  
         _InicializoVariables 12FC      __end_of_WriteByteSPIPort 161A             SetResetPin@estado 002B  
                 __smallconst 1000          ?_InicializoVariables 002B              SetLongAddr@value 002F  
                    _LATCbits 0F8B                      _LATDbits 0F8C                      _LATEbits 0F8D  
                 ??_BoardInit 002B                      _PIR1bits 0F9E                  _SetShortAddr 1560  
         GetLongAddr@toReturn 0031         ??_InicializoVariables 002B                _mrf24_data_out 0023  
                    _SetCSPin 1602                      __Hrparam 0000                      __Lrparam 0000  
                __Lsmallconst 1000          __end_of_SPIWriteByte 15D0                      __ptext10 15E6  
                    __ptext11 15F4                      __ptext12 113A                      __ptext13 1560  
                    __ptext14 1490                      __ptext15 1610                      __ptext16 15B8  
                    __ptext17 1602                      __ptext18 14D2                      __ptext19 159C  
           ??_InicializoPines 002C                      isa$xinst 0000                 SetChannel@aux 0032  
 __end_of_default_mac_address 1019                 _mrf24_data_in 0060      __end_of_SetDeviceAddress 153A  
           ?_WriteByteSPIPort 002B                 ??_GetLongAddr 002F            ??_WriteByteSPIPort 002C  
      GetLongAddr@reg_address 002D                   _SSPCON1bits 0FC6        SetLongAddr@reg_address 002D  
